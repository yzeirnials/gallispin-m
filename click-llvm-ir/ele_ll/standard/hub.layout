
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55871bda1b28 prev 0x55871bd992c8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55871bda1c20 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55871bda1cb0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55871bda1d28 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55871bda1de8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55871bda1eb0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55871bda2028 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55871bda1f60 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55871bda20d0 <col:24>
| `-OptimizeNoneAttr 0x55871bda2128 <col:34>
|-CXXMethodDecl 0x55871bda2170 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55871bda2428 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55871bda2220 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55871bda2298 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55871bda2318 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55871bda24e0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55871bda2518 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55871bda2580 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55871bda2608 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55871bda2928 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55871bda26c0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55871bda2738 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55871bda27b0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55871bda2830 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55871bda2a40 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55871bdaa3b8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55871bdaa3b8
| `-ParmVarDecl 0x55871bdaa4c8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55871bdaa568 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55871bdaa568
| `-ParmVarDecl 0x55871bdaa678 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55871bdae818 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55871bd94b40 prev 0x55871bd948c0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55871bd94c38 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55871bd94cc8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55871bd94d28 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55871bd94e18 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55871bd94f18 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55871bd950e8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55871bd94f98 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55871bd95010 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55871bd95278 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55871bd951b0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55871bd95320 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55871bd95458 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55871bd95390 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55871bd955f8 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55871bd95538 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55871bd95798 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55871bd956d8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55871bd95840 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55871bd95940 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55871bd95a20 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd95920 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55871bd95900 <col:26> 'int' 1
| `-EnumConstantDecl 0x55871bd959d0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55871bd95a38 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55871bd959b0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55871bd95990 <col:44> 'int' 2
|-CXXMethodDecl 0x55871bd95b80 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55871bd95a68 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55871bd95ae8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55871bd95cd8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55871bd95c48 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55871bd95f18 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55871bd95d98 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55871bd95e10 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55871bd95fc8 <col:20>
| `-OptimizeNoneAttr 0x55871bd96020 <col:30>
|-CXXMethodDecl 0x55871bd96128 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55871bd96060 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55871bd961d0 <col:20>
| `-OptimizeNoneAttr 0x55871bd96228 <col:30>
|-CXXMethodDecl 0x55871bd96278 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55871bd96340 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55871bd96458 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55871bd964e0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55871bd96568 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55871bd965f0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55871bd96678 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55871bd96708 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55871bd967c8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55871bd96850 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x55871bd968d8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55871bd96960 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55871bd969e8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55871bd96a70 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55871bd96b00 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55871bd96bc0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55871bd96c50 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55871bd96da0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55871bd96d08 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55871bd96f30 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55871bd96e60 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55871bd971e0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55871bd96fe8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55871bd97068 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55871bd970e8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55871bd97298 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55871bd973a0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55871bd97630 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd97380 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55871bd97360 <col:33> 'int' 0
| |-EnumConstantDecl 0x55871bd97430 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55871bd97648 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd97410 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55871bd973f0 <col:32> 'int' 20
| |-EnumConstantDecl 0x55871bd974c0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55871bd97660 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd974a0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55871bd97480 <col:38> 'int' 90
| |-EnumConstantDecl 0x55871bd97550 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55871bd97678 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd97530 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55871bd97510 <col:35> 'int' 100
| `-EnumConstantDecl 0x55871bd975e0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55871bd97690 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55871bd975c0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55871bd975a0 <col:32> 'int' 2000
|-CXXMethodDecl 0x55871bd976d0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55871bd97b10 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55871bd97980 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55871bd979f8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55871bd97be0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55871bd97d60 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55871bd97c90 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55871bd97f68 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55871bd97e18 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55871bd97e90 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55871bd98068 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55871bd98108 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55871bd981d0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55871bd98260 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55871bd98490 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd98240 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55871bd98220 <col:36> 'int' EnumConstant 0x55871bd981d0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55871bd982b0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55871bd98300 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55871bd98350 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55871bd983a0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55871bd983f0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55871bd98440 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55871bd98578 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55871bd984b8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55871bd98640 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55871bd98700 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55871bd987c0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55871bd98880 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55871bd98998 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55871bd98a60 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x55871bd98be0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55871bd98b10 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55871bd98d08 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55871bd98f08 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55871bd98db8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55871bd98e38 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55871bda6858 <col:54, line:127:5>
|   |-ParenExpr 0x55871bda6708 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55871bda66d8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55871bda63c8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55871bda63a0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55871bda6388 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55871bda6370 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55871bda6340 <col:31> 'Router *' lvalue ->_router 0x55871bda4220
|   |   |         `-CXXThisExpr 0x55871bda6330 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55871bda6428 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55871bda6408 <col:48> 'int' 0
|   |   `-CallExpr 0x55871bda6638 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55871bda6620 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55871bda6600 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55871b8cef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55871bda6678 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bda6498 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55871bda6690 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bda64b8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55871bda66a8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55871bda64f0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55871bda66c0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55871bda65e8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55871bda65d0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55871bda6588 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55871bda67a0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55871bda6738 <col:9> 'Router *' lvalue ->_router 0x55871bda4220
|   | | `-CXXThisExpr 0x55871bda6728 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55871bda6788 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55871bda6768 <col:19> 'Router *' lvalue ParmVar 0x55871bd98db8 'r' 'Router *'
|   `-BinaryOperator 0x55871bda6838 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55871bda67d0 <col:9> 'int' lvalue ->_eindex 0x55871bda4288
|     | `-CXXThisExpr 0x55871bda67c0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55871bda6820 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55871bda6800 <col:19> 'int' lvalue ParmVar 0x55871bd98e38 'eindex' 'int'
|-CXXMethodDecl 0x55871bd99090 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55871bd98fc8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55871bd99160 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55871bd99228 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55871bd992c8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55871bd99518 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55871bd99390 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55871bd99410 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55871bd995c8 <col:20>
| `-OptimizeNoneAttr 0x55871bd99620 <col:30>
|-CXXMethodDecl 0x55871bd99728 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55871bd99660 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55871bd997d0 <col:20>
| `-OptimizeNoneAttr 0x55871bd99828 <col:30>
|-CXXMethodDecl 0x55871bd998f8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55871bd99868 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55871bd999a0 <col:20>
| `-OptimizeNoneAttr 0x55871bd999f8 <col:30>
|-CXXMethodDecl 0x55871bd99b88 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55871bd99a30 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55871bd99ab0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55871bd99d18 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55871bd99c50 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55871bd99e68 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55871bd99dd8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55871bd99fb8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55871bd99f28 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55871bd9a108 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55871bd9a078 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55871bd9a3c8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55871bd9a1c0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55871bd9a240 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55871bd9a2e8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55871bd9a4a0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55871bd9a560 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55871bd9a830 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55871bd9a6e0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55871bd9a758 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55871bd9a958 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55871bd9ab30 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55871bd9aa10 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55871bd9aa90 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55871bd9ad18 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55871bd9abf8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55871bd9ac78 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55871bd9b088 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55871bd9add8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55871bd9ae50 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55871bd9aed0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55871bda5e40 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55871bda5e20 <col:106> 'int' 0
| `-ParmVarDecl 0x55871bd9af48 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55871bda5e78 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55871bda5e58 <col:126> 'int' 0
|-CXXMethodDecl 0x55871bd9b428 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55871bd9b158 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55871bd9b1f0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55871bd9b270 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55871bd9b2e8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55871bda5eb0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55871bda5e90 <col:114> 'int' 0
|-CXXMethodDecl 0x55871bd9b7b8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55871bd9b500 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55871bd9b578 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55871bd9b5f8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55871bda5ec8 <col:96> 'int' 0
| `-ParmVarDecl 0x55871bd9b670 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55871bda5f08 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55871bda5ee8 <col:116> 'int' 0
|-CXXMethodDecl 0x55871bd9bb38 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55871bd9b888 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55871bd9b900 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55871bd9b980 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55871bda5f40 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55871bda5f20 <col:109> 'int' 0
| `-ParmVarDecl 0x55871bd9b9f8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55871bda5f78 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55871bda5f58 <col:129> 'int' 0
|-CXXMethodDecl 0x55871bd9beb8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55871bd9bc08 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55871bd9bc80 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55871bd9bd00 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55871bd9bd78 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55871bda5fb0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55871bda5f90 <col:117> 'int' 0
|-CXXMethodDecl 0x55871bd9c248 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55871bd9bf90 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55871bd9c008 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55871bd9c088 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55871bda5fc8 <col:99> 'int' 0
| `-ParmVarDecl 0x55871bd9c100 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55871bda6008 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55871bda5fe8 <col:119> 'int' 0
|-CXXMethodDecl 0x55871bd9c668 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55871bd9c318 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55871bd9c398 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55871bd9c410 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55871bd9c490 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55871bda6040 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55871bda6020 <col:108> 'int' 0
| `-ParmVarDecl 0x55871bd9c510 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55871bda6078 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55871bda6058 <col:141> 'int' 0
|-CXXMethodDecl 0x55871bd9ca88 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55871bd9c740 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55871bd9c7c0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55871bd9c838 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55871bd9c8b8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55871bd9c938 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55871bda6090 <col:121> 'int' 0
|-CXXMethodDecl 0x55871bd9ceb8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55871bd9cb68 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55871bd9cbe8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55871bd9cc60 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55871bd9cce0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55871bda60b0 <col:98> 'int' 0
| `-ParmVarDecl 0x55871bd9cd60 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55871bda60d0 <col:123> 'int' 0
|-CXXMethodDecl 0x55871bd9d180 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55871bd9cf90 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55871bd9d010 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55871bd9d090 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55871bda60f0 <col:80> 'int' 0
|-EnumDecl 0x55871bd9d238 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55871bd9d340 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55871bd9d5d0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd9d320 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55871bd9d300 <col:42> 'int' 1
| |-EnumConstantDecl 0x55871bd9d3d0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55871bd9d5e8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd9d3b0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55871bd9d390 <col:40> 'int' 2
| |-EnumConstantDecl 0x55871bd9d460 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55871bd9d600 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd9d440 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55871bd9d420 <col:44> 'int' 4
| |-EnumConstantDecl 0x55871bd9d4f0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55871bd9d618 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd9d4d0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55871bd9d4b0 <col:36> 'int' 7
| `-EnumConstantDecl 0x55871bd9d580 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55871bd9d630 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55871bd9d560 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55871bd9d540 <col:34> 'int' 6
|-CXXMethodDecl 0x55871bd9d8e8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55871bd9d658 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55871bd9d6f8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55871bd9d778 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55871bd9d7f0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55871bda61a8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55871bda6190 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55871bda6178 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55871bda6158 <col:98, col:105> 'String' (CXXTemporary 0x55871bda6158)
|           `-CXXTemporaryObjectExpr 0x55871bda6120 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55871bd9db88 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55871bd9d9b8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55871bd9da30 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55871bd9daa8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55871bda6258 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55871bda6240 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55871bda6228 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55871bda6208 <col:94, col:101> 'String' (CXXTemporary 0x55871bda6208)
| |         `-CXXTemporaryObjectExpr 0x55871bda61d0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55871bda6a40 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55871bda69b8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55871bda6988 <col:9> '<bound member function type>' ->add_task_handlers 0x55871bd9d8e8
|     | `-CXXThisExpr 0x55871bda6978 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55871bda69f8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55871bda68f8 <col:27> 'Task *' lvalue ParmVar 0x55871bd9d9b8 'task' 'Task *'
|     |-ImplicitCastExpr 0x55871bda6a10 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55871bda6918 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55871bd9da30 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55871bda6a28 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55871bda6938 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55871bd9d580 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55871bda6958 <col:62> 'const String' lvalue ParmVar 0x55871bd9daa8 'prefix' 'const String &'
|-CXXMethodDecl 0x55871bd9dd98 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55871bd9dc50 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55871bd9dcc8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55871bda6308 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55871bda62f0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55871bda62d8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55871bda62b8 <col:70, col:77> 'String' (CXXTemporary 0x55871bda62b8)
| |         `-CXXTemporaryObjectExpr 0x55871bda6280 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55871bda6c18 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55871bda6b90 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55871bda6b60 <col:9> '<bound member function type>' ->add_task_handlers 0x55871bd9d8e8
|     | `-CXXThisExpr 0x55871bda6b50 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55871bda6bd0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55871bda6ad0 <col:27> 'Task *' lvalue ParmVar 0x55871bd9dc50 'task' 'Task *'
|     |-ImplicitCastExpr 0x55871bda6be8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55871bda6af0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55871bda6c00 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55871bda6b10 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55871bd9d580 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55871bda6b30 <col:57> 'const String' lvalue ParmVar 0x55871bd9dcc8 'prefix' 'const String &'
|-CXXMethodDecl 0x55871bd9e078 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55871bd9de60 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55871bd9dee0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55871bd9df58 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55871bd9e328 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55871bd9e148 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55871bd9e1c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55871bd9e248 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55871bd9e618 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55871bd9e3f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55871bd9e478 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55871bd9e4f0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55871bd9e8c8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55871bd9e6e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55871bd9e768 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55871bd9e7e8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55871bd9eb78 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55871bd9e998 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55871bd9ea18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55871bd9ea98 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55871bd9ee28 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55871bd9ec48 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55871bd9ecc8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55871bd9ed40 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55871bd9f0d8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55871bd9eef8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55871bd9ef78 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55871bd9eff8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55871bd9f3e8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55871bd9f200 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55871bd9f280 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55871bd9f300 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55871bd9f6c8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55871bd9f4b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55871bd9f538 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55871bd9f5e0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55871bd9f9a8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55871bd9f798 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55871bd9f818 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55871bd9f8c0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55871bd9fc10 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55871bd9fa78 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55871bd9faf8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55871bd9fb70 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55871bd9feb8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55871bd9fce0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55871bd9fd60 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55871bd9fdd8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55871bda0168 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55871bd9ff88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55871bda0008 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55871bda0088 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55871bda0418 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55871bda0238 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55871bda02b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55871bda0330 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55871bda06c8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55871bda04e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55871bda0568 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55871bda05e0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55871bda0998 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55871bda0798 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55871bda0818 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55871bda08b8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55871bda0cc8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55871bda0a68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55871bda0ae8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55871bda0b60 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55871bda0bd8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55871bda6320 <col:93> 'bool' false
|-CXXMethodDecl 0x55871bda0eb0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55871bda0d98 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55871bda0e18 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55871bda1088 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55871bda0f70 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55871bda0ff0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55871bda1368 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55871bda1148 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55871bda11c0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55871bda1240 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55871bda12b8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55871bda1658 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55871bda1438 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55871bda14b0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55871bda1530 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55871bda15a8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55871bda1890 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55871bda1730 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55871bda17b0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55871bda1a78 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55871bda1958 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55871bda19d8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55871bda1b28 prev 0x55871bd992c8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55871bda1c20 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55871bda1cb0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55871bda1d28 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55871bda1de8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55871bda1eb0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55871bda2028 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55871bda1f60 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55871bda20d0 <col:24>
| | `-OptimizeNoneAttr 0x55871bda2128 <col:34>
| |-CXXMethodDecl 0x55871bda2170 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55871bda2428 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55871bda2220 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55871bda2298 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55871bda2318 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55871bda24e0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55871bda2518 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55871bda2580 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55871bda2608 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55871bda2928 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55871bda26c0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55871bda2738 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55871bda27b0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55871bda2830 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55871bda2a40 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55871bdaa3b8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55871bdaa3b8
| | `-ParmVarDecl 0x55871bdaa4c8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55871bdaa568 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55871bdaa568
| | `-ParmVarDecl 0x55871bdaa678 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55871bdae818 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55871bda2ab8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55871bda2b58 <col:38> "" ""
|-CXXMethodDecl 0x55871bda2be8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55871bda2c88 <col:44> "" ""
|-AccessSpecDecl 0x55871bda2cf8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55871bda2d20 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55871bda2e20 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55871bda2e70 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55871bda2e00 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55871bda2de0 <col:27> 'int' 4
|-FieldDecl 0x55871bda2f28 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55871bda30d8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55871bda3190 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55871bda4220 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55871bda4288 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55871bda43d8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55871bda4318 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55871bda4588 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55871bda4498 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55871bda4768 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55871bda4648 <col:20> col:23 'int'
| `-ParmVarDecl 0x55871bda46c8 <col:25> col:28 'int'
|-CXXMethodDecl 0x55871bda4a10 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55871bda4830 <col:23> col:26 'int'
| |-ParmVarDecl 0x55871bda48b0 <col:28> col:31 'int'
| `-ParmVarDecl 0x55871bda4928 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55871bda4ac8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55871bda4b90 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55871bda4be0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55871bda4c30 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55871bda4e10 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55871bda4cc0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55871bda4d38 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55871bda50b8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55871bda4ed8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55871bda4f58 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55871bda4fd0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55871bda52d8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55871bda5188 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55871bda5208 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55871bda5610 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55871bda5398 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55871bda5418 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55871bda5490 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55871bda5510 <col:57> col:60 'int'
|-CXXMethodDecl 0x55871bda57f8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55871bda56e0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55871bda5760 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55871bda5948 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55871bda58b8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55871bda5cc8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55871bda5a08 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55871bda5a88 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55871bda5b00 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55871bda5b80 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55871bda5de0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Hub
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55871bdad528 <../elements/standard/hub.hh:26:1, line:37:1> line:26:7 class Hub definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55871bdad688 <col:1, col:7> col:7 implicit referenced class Hub
|-AccessSpecDecl 0x55871bdad718 <col:30, col:36> col:30 public
|-CXXConstructorDecl 0x55871bdad7a0 <line:28:5, col:9> col:5 Hub 'void ()'
|-CXXMethodDecl 0x55871bdad8a0 <line:30:5, col:52> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55871bd96278 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55871bdae538 <col:36, col:52>
|   `-ReturnStmt 0x55871bdae528 <col:38, col:45>
|     `-ImplicitCastExpr 0x55871bdae510 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55871bdae4f0 <col:45> 'const char [4]' lvalue "Hub"
|-CXXMethodDecl 0x55871bdad968 <line:31:5, col:52> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x55871bd96340 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55871bdae598 <col:36, col:52>
|   `-ReturnStmt 0x55871bdae588 <col:38, col:45>
|     `-ImplicitCastExpr 0x55871bdae570 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55871bdae550 <col:45> 'const char [4]' lvalue "-/="
|-CXXMethodDecl 0x55871bdada30 <line:32:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x55871bd96708 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x55871bdae5f8 <col:36, col:51>
|   `-ReturnStmt 0x55871bdae5e8 <col:38, col:45>
|     `-ImplicitCastExpr 0x55871bdae5d0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55871bdae5b0 <col:45> 'const char []' lvalue Var 0x55871bd96850 'PUSH' 'const char []'
|-CXXMethodDecl 0x55871bdadaf8 <line:33:5, col:54> col:17 flow_code 'const char *() const'
| |-Overrides: [ 0x55871bd96b00 Element::flow_code 'const char *() const' ]
| `-CompoundStmt 0x55871bdae658 <col:35, col:54>
|   `-ReturnStmt 0x55871bdae648 <col:37, col:44>
|     `-ImplicitCastExpr 0x55871bdae630 <col:44> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55871bdae610 <col:44> 'const char [7]' lvalue "#/[^#]"
|-CXXMethodDecl 0x55871bdadcc0 <line:35:5, col:34> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x55871bd950e8 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x55871bdadbb0 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x55871bdadc28 <col:25, col:33> col:33 p 'Packet *'
|-CXXConstructorDecl 0x55871bdadd98 <line:26:7> col:7 implicit Hub 'void (const Hub &)' inline default_delete noexcept-unevaluated 0x55871bdadd98
| `-ParmVarDecl 0x55871bdadea8 <col:7> col:7 'const Hub &'
|-CXXConstructorDecl 0x55871bdadf48 <col:7> col:7 implicit Hub 'void (Hub &&)' inline default_delete noexcept-unevaluated 0x55871bdadf48
| `-ParmVarDecl 0x55871bdae058 <col:7> col:7 'Hub &&'
|-CXXMethodDecl 0x55871bdae0f8 <col:7> col:7 implicit operator= 'Hub &(const Hub &)' inline default_delete noexcept-unevaluated 0x55871bdae0f8
| `-ParmVarDecl 0x55871bdae208 <col:7> col:7 'const Hub &'
|-CXXMethodDecl 0x55871bdae278 <col:7> col:7 implicit operator= 'Hub &(Hub &&)' inline default_delete noexcept-unevaluated 0x55871bdae278
| `-ParmVarDecl 0x55871bdae388 <col:7> col:7 'Hub &&'
`-CXXDestructorDecl 0x55871bdae410 <col:7> col:7 implicit ~Hub 'void ()' inline default noexcept-unevaluated 0x55871bdae410
  `-Overrides: [ 0x55871bd94e18 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.Hub = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.Hub.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55871bb535f0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55871bb53708 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55871bb53798 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55871bb53868 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55871bb53950 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55871bb53b68 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55871bb53a10 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55871bb53d18 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55871bb53c20 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55871bb53e60 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55871bb53dd0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55871bb53fa8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55871bb53f18 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55871bb540f0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55871bb54060 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55871bb541b8 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x55871bb54300 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x55871bb54270 <col:28> col:31 'int'
|-CXXMethodDecl 0x55871bb543c8 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x55871bb54510 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55871bb54480 <col:28> col:31 'int'
|-CXXMethodDecl 0x55871bb54688 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55871bb545c8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55871bb547d0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55871bb54740 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55871bb54898 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55871bb54a58 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55871bb54948 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55871bb549c0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55871bb54ca8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55871bb54b18 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55871bb54b90 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55871bb54d58 <col:86> "" ""
|-CXXMethodDecl 0x55871bb54fc8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55871bb54e38 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55871bb54eb0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55871bb55178 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55871bb55088 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55871bb55328 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55871bb55230 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55871bb555f8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55871bb553e0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55871bb55458 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55871bb554d0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55871bb558d8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55871bb556c0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55871bb55738 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55871bb557b0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55871bb55990 <col:115> "" ""
|-AccessSpecDecl 0x55871bb55a00 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55871bb55a38 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55871bb55f40 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55871bb55f40
| `-ParmVarDecl 0x55871bb56048 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55871bb560e8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55871bb560e8
| `-ParmVarDecl 0x55871bb561f8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55871bb8b828 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55871bd7e630 <col:7>
|-CXXConstructorDecl 0x55871bb8b900 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55871bb8b900
| `-ParmVarDecl 0x55871bb8ba18 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55871bb8ba88 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55871bb8ba88
| `-ParmVarDecl 0x55871bb8bb98 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55871bd81030 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55871bd6d1d8 prev 0x55871bd623e0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55871bd6d2d0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55871bd6d3c0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55871bd6d4e8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55871bd6d668 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55871bd6d7e8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55871bd6d968 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55871bd7e798 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55871bd7f008 <col:11>
|-CXXDestructorDecl 0x55871bd7e870 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55871bd7e9a8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55871bd7e9a8
| `-ParmVarDecl 0x55871bd7eab8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55871bd7eb58 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55871bd7eb58
| `-ParmVarDecl 0x55871bd7ec68 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55871bd81a28 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55871bd81b38 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55871bd81db8 <col:11>
|   `-ReturnStmt 0x55871bd81da8 <col:11>
|     `-UnaryOperator 0x55871bd81d90 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55871bd81d80 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55871bd81ba8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55871bd81ba8
  `-ParmVarDecl 0x55871bd81cb8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55871bd6d9d0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55871bd6dae8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55871bd6db88 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55871bd6dbf0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55871bd6dc58 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55871bd6dcc0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55871bd6dd20 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55871bd6dde0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55871bd6de40 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55871bd6dea0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55871bd7e6a8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55871bd6db88 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55871bd7f018 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55871bd7f070 <col:12>
|-CXXConstructorDecl 0x55871bd7ecd8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55871bd7ecd8
| `-ParmVarDecl 0x55871bd7ede8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55871bd7ee88 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55871bd7ee88
| `-ParmVarDecl 0x55871bd7ef98 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55871bd81110 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55871bd5baf0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55871bd5bc08 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55871bd5bc98 <col:16, col:22> col:16 public
|-EnumDecl 0x55871bd5bcc0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55871bd5bdc0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55871bd5bea0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd5bda0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55871bd5bd80 <col:21> 'int' 28
| `-EnumConstantDecl 0x55871bd5be50 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55871bd5beb8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55871bd5be30 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55871bd5be10 <col:22> 'int' 64
|-CXXMethodDecl 0x55871bd5c1f8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55871bd5bee0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55871bd5bf60 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55871bd5bfd8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55871bd5c050 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55871bd5c2b8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55871bd5c4b8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55871bd5c330 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55871bd5c3a8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55871bd5c568 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55871bd5c6c8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55871bd5c5d8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55871bd5c770 <col:72> warn_unused_result ""
|-TypedefDecl 0x55871bd5cad0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55871bd5ca60 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55871bd5ca00 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55871bd5c9c0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55871b8354e0 'void'
|       |-PointerType 0x55871badbe90 'unsigned char *'
|       | `-BuiltinType 0x55871b8355e0 'unsigned char'
|       |-TypedefType 0x55871b8d8230 'size_t' sugar
|       | |-Typedef 0x55871b8a5be0 'size_t'
|       | `-BuiltinType 0x55871b835640 'unsigned long'
|       `-PointerType 0x55871b835ce0 'void *'
|         `-BuiltinType 0x55871b8354e0 'void'
|-CXXMethodDecl 0x55871bd5cf48 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55871bd5cb40 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55871bd5cbb8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55871bd5cc50 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55871bd5ccd0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55871bd77640 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55871bd77628 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55871bd775f0 <col:58> 'int' 0
| |-ParmVarDecl 0x55871bd5cd50 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55871bd77668 <col:76> 'int' 0
| |-ParmVarDecl 0x55871bd5cdd0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55871bd77688 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55871bd5d018 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55871bd5d098 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55871bd5d158 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55871bd5d1f8 <col:20>
| `-OptimizeNoneAttr 0x55871bd5d250 <col:30>
|-CXXMethodDecl 0x55871bd5d2c8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55871bd5d368 <col:20>
| `-OptimizeNoneAttr 0x55871bd5d3c0 <col:30>
|-CXXMethodDecl 0x55871bd5d438 <line:76:5, col:55> col:13 used clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55871bd5d4d8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55871bd5d588 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55871bd5d628 <col:20>
| |-OptimizeNoneAttr 0x55871bd5d680 <col:30>
| `-WarnUnusedResultAttr 0x55871bd5d6a8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55871bd5d700 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55871bd5d7a0 <col:20>
| `-OptimizeNoneAttr 0x55871bd5d7f8 <col:30>
|-CXXMethodDecl 0x55871bd5d848 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55871bd5d8e8 <col:20>
| `-OptimizeNoneAttr 0x55871bd5d940 <col:30>
|-CXXMethodDecl 0x55871bd5d988 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55871bd5da28 <col:20>
| `-OptimizeNoneAttr 0x55871bd5da80 <col:30>
|-CXXMethodDecl 0x55871bd5dac8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55871bd5db88 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55871bd5dc50 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55871bd5dd18 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55871bd5ddd8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55871bd5def8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55871bd77750 <col:54, line:99:5>
|   `-ReturnStmt 0x55871bd77740 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55871bd77728 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55871bd776f8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55871bd6e1d8
|         `-CXXThisExpr 0x55871bd776e8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55871bd5e098 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55871bd5dfa8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55871bd77800 <col:67, line:103:5>
|   `-BinaryOperator 0x55871bd777e0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55871bd77778 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55871bd6e1d8
|     | `-CXXThisExpr 0x55871bd77768 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55871bd777c8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55871bd777a8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55871bd5dfa8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55871bd5e190 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55871bd77880 <col:33, line:107:5>
|   `-ReturnStmt 0x55871bd77870 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55871bd77858 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55871bd77828 <col:16> 'void *' lvalue ->_destructor_argument 0x55871bd6e240
|         `-CXXThisExpr 0x55871bd77818 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55871bd5e250 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55871bd77eb0 <col:25, line:113:5>
|   |-ParenExpr 0x55871bd77bf8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55871bd77bc8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55871bd77938 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55871bd77910 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55871bd778d8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55871bd778a8 <col:24> '<bound member function type>' ->shared 0x55871bd5d2c8
|   |   |       `-ImplicitCastExpr 0x55871bd778f8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55871bd77898 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55871bd77998 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55871bd77978 <col:42> 'int' 0
|   |   `-CallExpr 0x55871bd77b28 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55871bd77b10 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55871bd77af0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55871b8cef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55871bd77b68 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bd77a08 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55871bd77b80 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bd77a30 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55871bd77b98 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55871bd77a68 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55871bd77bb0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55871bd77ad8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55871bd77ac0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55871bd77a88 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55871bd77df8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55871bd77c28 <col:2> 'unsigned char *' lvalue ->_head 0x55871bd6dfe0
|   | | `-CXXThisExpr 0x55871bd77c18 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55871bd77de0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55871bd77dc0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55871bd77c68 <col:10> 'unsigned char *' lvalue ->_data 0x55871bd6e048
|   |     | `-CXXThisExpr 0x55871bd77c58 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55871bd77da8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55871bd77d88 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55871bd77ca8 <col:18> 'unsigned char *' lvalue ->_tail 0x55871bd6e0b0
|   |         | `-CXXThisExpr 0x55871bd77c98 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55871bd77d70 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55871bd77d50 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55871bd77ce8 <col:26> 'unsigned char *' lvalue ->_end 0x55871bd6e118
|   |             | `-CXXThisExpr 0x55871bd77cd8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55871bd77d38 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55871bd77d18 <col:33> 'int' 0
|   `-BinaryOperator 0x55871bd77e90 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55871bd77e28 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55871bd6e1d8
|     | `-CXXThisExpr 0x55871bd77e18 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55871bd77e78 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55871bd77e58 <col:16> 'int' 0
|-CXXMethodDecl 0x55871bd5e390 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55871bd5e300 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55871bd5e438 <col:20>
| |-OptimizeNoneAttr 0x55871bd5e490 <col:30>
| `-WarnUnusedResultAttr 0x55871bd5e4b8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55871bd5e588 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55871bd5e4f8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55871bd5e630 <col:20>
| |-OptimizeNoneAttr 0x55871bd5e688 <col:30>
| `-WarnUnusedResultAttr 0x55871bd5e6b0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55871bd5e7e8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55871bd5e6f0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55871bd5e890 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55871bd5e990 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55871bd5e900 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55871bd5ea38 <col:20>
| `-OptimizeNoneAttr 0x55871bd5ea90 <col:30>
|-CXXMethodDecl 0x55871bd5eb58 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55871bd5eac8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55871bd5ec00 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55871bd5ed00 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55871bd5ec70 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55871bd5eda8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55871bd5eea8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55871bd5ee18 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55871bd5ef50 <col:20>
| `-OptimizeNoneAttr 0x55871bd5efa8 <col:30>
|-CXXMethodDecl 0x55871bd5f138 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55871bd5efe8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55871bd5f060 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55871bd776a8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55871bd5f1e8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55871bd5f3e8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55871bd5f260 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55871bd5f2d8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55871bd5f5f8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55871bd5f4a8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55871bd5f520 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55871bd5f808 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55871bd5f6b8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55871bd5f738 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55871bd776b8 <col:39> 'int' 0
|-CXXMethodDecl 0x55871bd5f8d8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55871bd5f9a0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55871bd5fa68 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55871bd5fb28 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55871bd5fbf0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55871bd5fd38 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55871bd5fca8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55871bd5ff08 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55871bd5fdf8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55871bd5fe70 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55871bd5ffd8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55871bd60098 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55871bd60138 <col:20>
| `-OptimizeNoneAttr 0x55871bd60190 <col:30>
|-CXXMethodDecl 0x55871bd601e0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55871bd60280 <col:20>
| `-OptimizeNoneAttr 0x55871bd602d8 <col:30>
|-CXXMethodDecl 0x55871bd60328 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55871bd603e8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55871bd604b0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55871bd60550 <col:20>
| `-OptimizeNoneAttr 0x55871bd605a8 <col:30>
|-CXXMethodDecl 0x55871bd606f8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55871bd605e8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55871bd60660 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55871bd60848 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55871bd607b8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55871bd60920 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55871bd609e0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55871bd60a80 <col:20>
| `-OptimizeNoneAttr 0x55871bd60ad8 <col:30>
|-CXXMethodDecl 0x55871bd60b28 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55871bd60bc8 <col:20>
| `-OptimizeNoneAttr 0x55871bd60c20 <col:30>
|-CXXMethodDecl 0x55871bd60c70 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55871bd60d38 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55871bd60dd8 <col:20>
| `-OptimizeNoneAttr 0x55871bd60e30 <col:30>
|-CXXMethodDecl 0x55871bd60e78 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55871bd60f98 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55871bd61108 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55871bd61048 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55871bd611f8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55871bd61298 <col:20>
| `-OptimizeNoneAttr 0x55871bd612f0 <col:30>
|-CXXMethodDecl 0x55871bd61340 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55871bd61400 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55871bd61638 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55871bd614b0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55871bd61528 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55871bd616e8 <col:20>
| `-OptimizeNoneAttr 0x55871bd61740 <col:30>
|-CXXMethodDecl 0x55871bd617e8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55871bd61888 <col:20>
| `-OptimizeNoneAttr 0x55871bd618e0 <col:30>
|-CXXMethodDecl 0x55871bd61930 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55871bd619d0 <col:20>
| `-OptimizeNoneAttr 0x55871bd61a28 <col:30>
|-CXXMethodDecl 0x55871bd61a70 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55871bd61b10 <col:20>
| `-OptimizeNoneAttr 0x55871bd61b68 <col:30>
|-CXXMethodDecl 0x55871bd61c68 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55871bd61ba0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55871bd61d10 <col:20>
| `-OptimizeNoneAttr 0x55871bd61d68 <col:30>
|-CXXMethodDecl 0x55871bd61f28 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55871bd61da0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55871bd61e18 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55871bd61fd8 <col:20>
| `-OptimizeNoneAttr 0x55871bd62030 <col:30>
|-CXXMethodDecl 0x55871bd620d8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55871bd621f8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55871bd62318 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55871bd623b8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55871bd623e0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55871bd62508 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55871bd625a8 <col:20>
| `-OptimizeNoneAttr 0x55871bd62600 <col:30>
|-CXXMethodDecl 0x55871bd626a8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55871bd62748 <col:20>
| `-OptimizeNoneAttr 0x55871bd627a0 <col:30>
|-AccessSpecDecl 0x55871bd627c8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55871bd627f0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55871bd628f0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55871bd62940 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55871bd628d0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55871bd628b0 <col:14> 'int' 48
|-CXXMethodDecl 0x55871bd629a8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55871bd62a48 <col:20>
| `-OptimizeNoneAttr 0x55871bd62aa0 <col:30>
|-CXXMethodDecl 0x55871bd62b18 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55871bd62bb8 <col:20>
| `-OptimizeNoneAttr 0x55871bd62c10 <col:30>
|-CXXMethodDecl 0x55871bd62cd8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55871bd62c48 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55871bd62e78 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55871bd63018 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55871bd62f28 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55871bd630c0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55871bd631c0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55871bd63570 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd631a0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55871bd63180 <col:9> 'int' 0
| |-EnumConstantDecl 0x55871bd63250 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55871bd63588 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd63230 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55871bd63210 <col:14> 'int' 1
| |-EnumConstantDecl 0x55871bd632e0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55871bd635a0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd632c0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55871bd632a0 <col:14> 'int' 2
| |-EnumConstantDecl 0x55871bd63370 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55871bd635b8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd63350 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55871bd63330 <col:14> 'int' 3
| |-EnumConstantDecl 0x55871bd63400 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55871bd635d0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd633e0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55871bd633c0 <col:13> 'int' 4
| |-EnumConstantDecl 0x55871bd63490 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55871bd635e8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd63470 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55871bd63450 <col:13> 'int' 5
| `-EnumConstantDecl 0x55871bd63520 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55871bd63600 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55871bd63500 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55871bd634e0 <col:14> 'int' 6
|-CXXMethodDecl 0x55871bd63668 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55871bd63708 <col:20>
| `-OptimizeNoneAttr 0x55871bd63760 <col:30>
|-CXXMethodDecl 0x55871bd63858 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55871bd63798 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55871bd63900 <col:20>
| `-OptimizeNoneAttr 0x55871bd63958 <col:30>
|-CXXMethodDecl 0x55871bd639c8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55871bd63af0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55871bd63c68 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55871bd63ba0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55871bd63d30 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55871bd63df8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55871bd63f38 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55871bd63ea8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55871bd63fe0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55871bd640e0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55871bd642e0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd640c0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55871bd640a0 <col:23> 'int' 0
| |-EnumConstantDecl 0x55871bd64170 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55871bd642f8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd64150 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55871bd64130 <col:45> 'int' 4
| |-EnumConstantDecl 0x55871bd64200 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55871bd64310 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd641e0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55871bd641c0 <col:24> 'int' 0
| `-EnumConstantDecl 0x55871bd64290 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55871bd64328 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55871bd64270 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55871bd64250 <col:47> 'int' 16
|-CXXMethodDecl 0x55871bd64388 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55871bd644f8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55871bd64438 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55871bd645a0 <col:20>
| `-OptimizeNoneAttr 0x55871bd645f8 <col:30>
|-CXXMethodDecl 0x55871bd64648 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55871bd77fd0 <col:18, col:36>
|   `-ReturnStmt 0x55871bd77fc0 <col:20, col:33>
|     `-ImplicitCastExpr 0x55871bd77fa8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55871bd77f88 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55871bd77f58 <col:27> '<bound member function type>' ->xanno 0x55871bd626a8
|           `-CXXThisExpr 0x55871bd77f48 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55871bd64740 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55871bd780e0 <col:30, col:48>
|   `-ReturnStmt 0x55871bd780d0 <col:32, col:45>
|     `-ImplicitCastExpr 0x55871bd780b8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55871bd78098 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55871bd78068 <col:39> '<bound member function type>' ->xanno 0x55871bd62508
|           `-CXXThisExpr 0x55871bd78058 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55871bd64828 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55871bd78278 <col:24, col:50>
|   `-ReturnStmt 0x55871bd78268 <col:26, col:47>
|     `-UnaryOperator 0x55871bd78250 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55871bd78230 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55871bd78218 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55871bd781c8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55871bd6d4e8
|         |   `-CXXMemberCallExpr 0x55871bd781a8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55871bd78178 <col:34> '<bound member function type>' ->xanno 0x55871bd626a8
|         |       `-CXXThisExpr 0x55871bd78168 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55871bd781f8 <col:46> 'int' 0
|-CXXMethodDecl 0x55871bd64930 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55871bd78448 <col:36, col:62>
|   `-ReturnStmt 0x55871bd78438 <col:38, col:59>
|     `-UnaryOperator 0x55871bd78420 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55871bd78400 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55871bd783e8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55871bd78360 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55871bd6d4e8
|         |   `-CXXMemberCallExpr 0x55871bd78340 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55871bd78310 <col:46> '<bound member function type>' ->xanno 0x55871bd62508
|         |       `-CXXThisExpr 0x55871bd78300 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55871bd78390 <col:58> 'int' 0
|-CXXMethodDecl 0x55871bd64a48 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55871bd785e0 <col:26, col:53>
|   `-ReturnStmt 0x55871bd785d0 <col:28, col:50>
|     `-UnaryOperator 0x55871bd785b8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55871bd78598 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55871bd78580 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55871bd78530 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55871bd6d7e8
|         |   `-CXXMemberCallExpr 0x55871bd78510 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55871bd784e0 <col:36> '<bound member function type>' ->xanno 0x55871bd626a8
|         |       `-CXXThisExpr 0x55871bd784d0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55871bd78560 <col:49> 'int' 0
|-CXXMethodDecl 0x55871bd64b68 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55871bd787b8 <col:38, col:65>
|   `-ReturnStmt 0x55871bd787a8 <col:40, col:62>
|     `-UnaryOperator 0x55871bd78790 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55871bd78770 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55871bd78758 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55871bd786c8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55871bd6d7e8
|         |   `-CXXMemberCallExpr 0x55871bd786a8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55871bd78678 <col:48> '<bound member function type>' ->xanno 0x55871bd62508
|         |       `-CXXThisExpr 0x55871bd78668 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55871bd786f8 <col:61> 'int' 0
|-CXXMethodDecl 0x55871bd64d18 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55871bd64c20 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55871bd78e88 <col:34, line:463:5>
|   |-ParenExpr 0x55871bd78cd0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55871bd78ca0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55871bd78908 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55871bd788d8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55871bd78828 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55871bd78810 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55871bd787d0 <col:23> 'int' lvalue ParmVar 0x55871bd64c20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55871bd787f0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55871bd788b8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55871bd78888 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55871bd78848 <col:33> 'int' lvalue ParmVar 0x55871bd64c20 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55871bd788a0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55871bd78868 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55871bd628f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55871bd78968 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55871bd78948 <col:56> 'int' 0
|   |   `-CallExpr 0x55871bd78c00 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55871bd78be8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55871bd78bc8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55871b8cef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55871bd78c40 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bd78a58 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55871bd78c58 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bd78a88 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55871bd78c70 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55871bd78ac0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55871bd78c88 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55871bd78bb0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55871bd78b98 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55871bd78b58 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55871bd78e78 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55871bd78e60 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55871bd78e40 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55871bd78e10 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55871bd78dc0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55871bd6d4e8
|         |   `-CXXMemberCallExpr 0x55871bd78da0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55871bd78d70 <col:9> '<bound member function type>' ->xanno 0x55871bd62508
|         |       `-CXXThisExpr 0x55871bd78d60 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55871bd78e28 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55871bd78df0 <col:21> 'int' lvalue ParmVar 0x55871bd64c20 'i' 'int'
|-CXXMethodDecl 0x55871bd64f68 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55871bd64dd8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55871bd64e50 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55871bd79518 <col:40, line:472:5>
|   |-ParenExpr 0x55871bd79330 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55871bd79300 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55871bd78fe0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55871bd78fb0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55871bd78f00 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55871bd78ee8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55871bd78ea8 <col:23> 'int' lvalue ParmVar 0x55871bd64dd8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55871bd78ec8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55871bd78f90 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55871bd78f60 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55871bd78f20 <col:33> 'int' lvalue ParmVar 0x55871bd64dd8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55871bd78f78 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55871bd78f40 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55871bd628f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55871bd79040 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55871bd79020 <col:56> 'int' 0
|   |   `-CallExpr 0x55871bd79260 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55871bd79248 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55871bd79228 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55871b8cef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55871bd792a0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bd790b0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55871bd792b8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bd790e0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55871bd792d0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55871bd79118 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55871bd792e8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55871bd79210 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55871bd791f8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55871bd791b8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55871bd794f8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55871bd794a0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55871bd79470 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55871bd79420 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55871bd6d4e8
|     | |   `-CXXMemberCallExpr 0x55871bd79400 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55871bd793d0 <col:2> '<bound member function type>' ->xanno 0x55871bd626a8
|     | |       `-CXXThisExpr 0x55871bd793c0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55871bd79488 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55871bd79450 <col:14> 'int' lvalue ParmVar 0x55871bd64dd8 'i' 'int'
|     `-ImplicitCastExpr 0x55871bd794e0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55871bd794c0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55871bd64e50 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55871bd65128 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55871bd65030 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55871bd79c98 <col:36, line:485:5>
|   |-ParenExpr 0x55871bd79a00 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55871bd799d0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55871bd796b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55871bd79680 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55871bd79590 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55871bd79578 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55871bd79538 <col:23> 'int' lvalue ParmVar 0x55871bd65030 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55871bd79558 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55871bd79660 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55871bd79648 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55871bd795b0 <col:33> 'int' lvalue ParmVar 0x55871bd65030 'i' 'int'
|   |   |     `-BinaryOperator 0x55871bd79628 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55871bd79610 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55871bd795d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55871bd628f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55871bd795f0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55871bd79710 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55871bd796f0 <col:60> 'int' 0
|   |   `-CallExpr 0x55871bd79930 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55871bd79918 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55871bd798f8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55871b8cef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55871bd79970 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bd79780 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55871bd79988 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bd797b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55871bd799a0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55871bd797f0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55871bd799b8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55871bd798e0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55871bd798c8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55871bd79888 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55871bd79c88 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55871bd79c70 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55871bd79c58 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55871bd79c28 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55871bd79bc8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55871bd79b98 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55871bd79b10 <col:61, col:70> 'char const[48]' lvalue ->c 0x55871bd6d3c0
|             |   `-CXXMemberCallExpr 0x55871bd79af0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55871bd79ac0 <col:61> '<bound member function type>' ->xanno 0x55871bd62508
|             |       `-CXXThisExpr 0x55871bd79ab0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55871bd79bb0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55871bd79b40 <col:74> 'int' lvalue ParmVar 0x55871bd65030 'i' 'int'
|-CXXMethodDecl 0x55871bd65378 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55871bd651e8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55871bd65260 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55871bd7a3e8 <col:42, line:500:5>
|   |-ParenExpr 0x55871bd7a180 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55871bd7a150 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55871bd79e30 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55871bd79e00 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55871bd79d10 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55871bd79cf8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55871bd79cb8 <col:23> 'int' lvalue ParmVar 0x55871bd651e8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55871bd79cd8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55871bd79de0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55871bd79dc8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55871bd79d30 <col:33> 'int' lvalue ParmVar 0x55871bd651e8 'i' 'int'
|   |   |     `-BinaryOperator 0x55871bd79da8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55871bd79d90 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55871bd79d50 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55871bd628f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55871bd79d70 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55871bd79e90 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55871bd79e70 <col:60> 'int' 0
|   |   `-CallExpr 0x55871bd7a0b0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55871bd7a098 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55871bd7a078 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55871b8cef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55871bd7a0f0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bd79f00 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55871bd7a108 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bd79f38 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55871bd7a120 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55871bd79f70 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55871bd7a138 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55871bd7a060 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55871bd7a048 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55871bd7a008 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55871bd7a3c8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55871bd7a378 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55871bd7a348 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55871bd7a2f0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55871bd7a2c0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55871bd7a270 <col:48, col:57> 'char [48]' lvalue ->c 0x55871bd6d3c0
|     |     |   `-CXXMemberCallExpr 0x55871bd7a250 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55871bd7a220 <col:48> '<bound member function type>' ->xanno 0x55871bd626a8
|     |     |       `-CXXThisExpr 0x55871bd7a210 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55871bd7a2d8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55871bd7a2a0 <col:61> 'int' lvalue ParmVar 0x55871bd651e8 'i' 'int'
|     `-ImplicitCastExpr 0x55871bd7a3b0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55871bd7a390 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55871bd65260 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55871bd65538 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55871bd65440 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55871bd7ab48 <col:35, line:513:5>
|   |-ParenExpr 0x55871bd7a858 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55871bd7a828 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55871bd7a580 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55871bd7a550 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55871bd7a460 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55871bd7a448 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55871bd7a408 <col:23> 'int' lvalue ParmVar 0x55871bd65440 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55871bd7a428 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55871bd7a530 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55871bd7a518 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55871bd7a480 <col:33> 'int' lvalue ParmVar 0x55871bd65440 'i' 'int'
|   |   |     `-BinaryOperator 0x55871bd7a4f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55871bd7a4e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55871bd7a4a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55871bd628f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55871bd7a4c0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55871bd7a5e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55871bd7a5c0 <col:60> 'int' 0
|   |   `-CallExpr 0x55871bd7a788 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55871bd7a770 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55871bd7a750 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55871b8cef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55871bd7a7c8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bd7a650 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55871bd7a7e0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bd7a688 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55871bd7a7f8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55871bd7a6c0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55871bd7a810 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55871bd7a738 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55871bd7a720 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55871bd7a6e0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55871bd7ab38 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55871bd7ab20 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55871bd7ab08 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55871bd7aad8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55871bd7aa50 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55871bd7aa20 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55871bd7a9d0 <col:60, col:69> 'char const[48]' lvalue ->c 0x55871bd6d3c0
|             |   `-CXXMemberCallExpr 0x55871bd7a9b0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55871bd7a980 <col:60> '<bound member function type>' ->xanno 0x55871bd62508
|             |       `-CXXThisExpr 0x55871bd7a970 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55871bd7aa38 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55871bd7aa00 <col:73> 'int' lvalue ParmVar 0x55871bd65440 'i' 'int'
|-CXXMethodDecl 0x55871bd65788 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55871bd655f8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55871bd65670 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55871bd7b268 <col:41, line:528:5>
|   |-ParenExpr 0x55871bd7aff0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55871bd7afc0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55871bd7ace0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55871bd7acb0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55871bd7abc0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55871bd7aba8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55871bd7ab68 <col:23> 'int' lvalue ParmVar 0x55871bd655f8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55871bd7ab88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55871bd7ac90 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55871bd7ac78 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55871bd7abe0 <col:33> 'int' lvalue ParmVar 0x55871bd655f8 'i' 'int'
|   |   |     `-BinaryOperator 0x55871bd7ac58 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55871bd7ac40 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55871bd7ac00 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55871bd628f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55871bd7ac20 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55871bd7ad40 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55871bd7ad20 <col:60> 'int' 0
|   |   `-CallExpr 0x55871bd7af20 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55871bd7af08 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55871bd7aee8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55871b8cef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55871bd7af60 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bd7adb0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55871bd7af78 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bd7ade8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55871bd7af90 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55871bd7ae20 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55871bd7afa8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55871bd7aed0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55871bd7aeb8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55871bd7ae78 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55871bd7b248 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55871bd7b1f8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55871bd7b1c8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55871bd7b170 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55871bd7b130 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55871bd7b0e0 <col:47, col:56> 'char [48]' lvalue ->c 0x55871bd6d3c0
|     |     |   `-CXXMemberCallExpr 0x55871bd7b0c0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55871bd7b090 <col:47> '<bound member function type>' ->xanno 0x55871bd626a8
|     |     |       `-CXXThisExpr 0x55871bd7b080 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55871bd7b148 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55871bd7b110 <col:60> 'int' lvalue ParmVar 0x55871bd655f8 'i' 'int'
|     `-ImplicitCastExpr 0x55871bd7b230 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55871bd7b210 <col:65> 'int16_t':'short' lvalue ParmVar 0x55871bd65670 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55871bd65948 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55871bd65850 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55871bd7b938 <col:36, line:541:5>
|   |-ParenExpr 0x55871bd7b6d8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55871bd7b6a8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55871bd7b400 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55871bd7b3d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55871bd7b2e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55871bd7b2c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55871bd7b288 <col:23> 'int' lvalue ParmVar 0x55871bd65850 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55871bd7b2a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55871bd7b3b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55871bd7b398 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55871bd7b300 <col:33> 'int' lvalue ParmVar 0x55871bd65850 'i' 'int'
|   |   |     `-BinaryOperator 0x55871bd7b378 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55871bd7b360 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55871bd7b320 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55871bd628f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55871bd7b340 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55871bd7b460 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55871bd7b440 <col:60> 'int' 0
|   |   `-CallExpr 0x55871bd7b608 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55871bd7b5f0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55871bd7b5d0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55871b8cef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55871bd7b648 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bd7b4d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55871bd7b660 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bd7b508 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55871bd7b678 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55871bd7b540 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55871bd7b690 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55871bd7b5b8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55871bd7b5a0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55871bd7b560 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55871bd7b928 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55871bd7b910 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55871bd7b8f8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55871bd7b8c8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55871bd7b870 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55871bd7b840 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55871bd7b7f0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55871bd6d3c0
|             |   `-CXXMemberCallExpr 0x55871bd7b7d0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55871bd7b7a0 <col:61> '<bound member function type>' ->xanno 0x55871bd62508
|             |       `-CXXThisExpr 0x55871bd7b790 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55871bd7b858 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55871bd7b820 <col:74> 'int' lvalue ParmVar 0x55871bd65850 'i' 'int'
|-CXXMethodDecl 0x55871bd65b18 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55871bd65a08 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55871bd65a80 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55871bd65bc8 <col:20>
| `-OptimizeNoneAttr 0x55871bd65c20 <col:30>
|-CXXMethodDecl 0x55871bd65d58 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55871bd65c60 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55871bd7c008 <col:35, line:562:5>
|   |-ParenExpr 0x55871bd7bda8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55871bd7bd78 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55871bd7bad0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55871bd7baa0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55871bd7b9b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55871bd7b998 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55871bd7b958 <col:23> 'int' lvalue ParmVar 0x55871bd65c60 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55871bd7b978 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55871bd7ba80 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55871bd7ba68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55871bd7b9d0 <col:33> 'int' lvalue ParmVar 0x55871bd65c60 'i' 'int'
|   |   |     `-BinaryOperator 0x55871bd7ba48 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55871bd7ba30 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55871bd7b9f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55871bd628f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55871bd7ba10 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55871bd7bb30 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55871bd7bb10 <col:60> 'int' 0
|   |   `-CallExpr 0x55871bd7bcd8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55871bd7bcc0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55871bd7bca0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55871b8cef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55871bd7bd18 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bd7bba0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55871bd7bd30 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bd7bbd8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55871bd7bd48 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55871bd7bc10 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55871bd7bd60 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55871bd7bc88 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55871bd7bc70 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55871bd7bc30 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55871bd7bff8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55871bd7bfe0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55871bd7bfc8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55871bd7bf98 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55871bd7bf40 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55871bd7bf10 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55871bd7bec0 <col:60, col:69> 'char const[48]' lvalue ->c 0x55871bd6d3c0
|             |   `-CXXMemberCallExpr 0x55871bd7bea0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55871bd7be70 <col:60> '<bound member function type>' ->xanno 0x55871bd62508
|             |       `-CXXThisExpr 0x55871bd7be60 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55871bd7bf28 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55871bd7bef0 <col:73> 'int' lvalue ParmVar 0x55871bd65c60 'i' 'int'
|-CXXMethodDecl 0x55871bd65f68 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55871bd65e18 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55871bd65e90 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55871bd7c6e8 <col:41, line:577:5>
|   |-ParenExpr 0x55871bd7c478 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55871bd7c448 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55871bd7c1a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55871bd7c170 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55871bd7c080 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55871bd7c068 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55871bd7c028 <col:23> 'int' lvalue ParmVar 0x55871bd65e18 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55871bd7c048 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55871bd7c150 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55871bd7c138 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55871bd7c0a0 <col:33> 'int' lvalue ParmVar 0x55871bd65e18 'i' 'int'
|   |   |     `-BinaryOperator 0x55871bd7c118 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55871bd7c100 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55871bd7c0c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55871bd628f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55871bd7c0e0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55871bd7c200 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55871bd7c1e0 <col:60> 'int' 0
|   |   `-CallExpr 0x55871bd7c3a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55871bd7c390 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55871bd7c370 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55871b8cef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55871bd7c3e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bd7c270 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55871bd7c400 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bd7c2a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55871bd7c418 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55871bd7c2e0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55871bd7c430 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55871bd7c358 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55871bd7c340 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55871bd7c300 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55871bd7c6c8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55871bd7c678 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55871bd7c648 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55871bd7c5e8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55871bd7c5b8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55871bd7c568 <col:47, col:56> 'char [48]' lvalue ->c 0x55871bd6d3c0
|     |     |   `-CXXMemberCallExpr 0x55871bd7c548 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55871bd7c518 <col:47> '<bound member function type>' ->xanno 0x55871bd626a8
|     |     |       `-CXXThisExpr 0x55871bd7c508 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55871bd7c5d0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55871bd7c598 <col:60> 'int' lvalue ParmVar 0x55871bd65e18 'i' 'int'
|     `-ImplicitCastExpr 0x55871bd7c6b0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55871bd7c690 <col:65> 'int32_t':'int' lvalue ParmVar 0x55871bd65e90 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55871bd66128 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55871bd66030 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55871bd7ce18 <col:36, line:591:5>
|   |-ParenExpr 0x55871bd7cb58 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55871bd7cb28 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55871bd7c880 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55871bd7c850 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55871bd7c760 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55871bd7c748 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55871bd7c708 <col:23> 'int' lvalue ParmVar 0x55871bd66030 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55871bd7c728 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55871bd7c830 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55871bd7c818 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55871bd7c780 <col:33> 'int' lvalue ParmVar 0x55871bd66030 'i' 'int'
|   |   |     `-BinaryOperator 0x55871bd7c7f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55871bd7c7e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55871bd7c7a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55871bd628f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55871bd7c7c0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55871bd7c8e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55871bd7c8c0 <col:60> 'int' 0
|   |   `-CallExpr 0x55871bd7ca88 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55871bd7ca70 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55871bd7ca50 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55871b8cef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55871bd7cac8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bd7c950 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55871bd7cae0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bd7c988 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55871bd7caf8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55871bd7c9c0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55871bd7cb10 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55871bd7ca38 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55871bd7ca20 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55871bd7c9e0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55871bd7ce08 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55871bd7cdf0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55871bd7cdd8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55871bd7cda8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55871bd7cd20 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55871bd7ccf0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55871bd7cca0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55871bd6d3c0
|             |   `-CXXMemberCallExpr 0x55871bd7cc80 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55871bd7cc50 <col:61> '<bound member function type>' ->xanno 0x55871bd62508
|             |       `-CXXThisExpr 0x55871bd7cc40 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55871bd7cd08 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55871bd7ccd0 <col:74> 'int' lvalue ParmVar 0x55871bd66030 'i' 'int'
|-CXXMethodDecl 0x55871bd66378 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55871bd661e8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55871bd66260 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55871bd7d4f8 <col:42, line:606:5>
|   |-ParenExpr 0x55871bd7d288 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55871bd7d258 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55871bd7cfb0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55871bd7cf80 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55871bd7ce90 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55871bd7ce78 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55871bd7ce38 <col:23> 'int' lvalue ParmVar 0x55871bd661e8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55871bd7ce58 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55871bd7cf60 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55871bd7cf48 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55871bd7ceb0 <col:33> 'int' lvalue ParmVar 0x55871bd661e8 'i' 'int'
|   |   |     `-BinaryOperator 0x55871bd7cf28 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55871bd7cf10 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55871bd7ced0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55871bd628f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55871bd7cef0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55871bd7d010 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55871bd7cff0 <col:60> 'int' 0
|   |   `-CallExpr 0x55871bd7d1b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55871bd7d1a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55871bd7d180 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55871b8cef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55871bd7d1f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bd7d080 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55871bd7d210 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bd7d0b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55871bd7d228 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55871bd7d0f0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55871bd7d240 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55871bd7d168 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55871bd7d150 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55871bd7d110 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55871bd7d4d8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55871bd7d488 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55871bd7d458 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55871bd7d3f8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55871bd7d3c8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55871bd7d378 <col:48, col:57> 'char [48]' lvalue ->c 0x55871bd6d3c0
|     |     |   `-CXXMemberCallExpr 0x55871bd7d358 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55871bd7d328 <col:48> '<bound member function type>' ->xanno 0x55871bd626a8
|     |     |       `-CXXThisExpr 0x55871bd7d318 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55871bd7d3e0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55871bd7d3a8 <col:61> 'int' lvalue ParmVar 0x55871bd661e8 'i' 'int'
|     `-ImplicitCastExpr 0x55871bd7d4c0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55871bd7d4a0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55871bd66260 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55871bd66510 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55871bd66440 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55871bd7dd68 <col:33, line:620:5>
|   |-ParenExpr 0x55871bd7dae0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55871bd7dab0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55871bd7d700 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55871bd7d6d0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55871bd7d570 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55871bd7d558 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55871bd7d518 <col:23> 'int' lvalue ParmVar 0x55871bd66440 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55871bd7d538 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55871bd7d6b0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55871bd7d698 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55871bd7d590 <col:33> 'int' lvalue ParmVar 0x55871bd66440 'i' 'int'
|   |   |     `-BinaryOperator 0x55871bd7d678 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55871bd7d660 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55871bd7d5b0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55871bd628f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55871bd7d638 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55871bd7d620 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55871bd7d5e8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55871bd7d760 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55871bd7d740 <col:79> 'int' 0
|   |   `-CallExpr 0x55871bd7da10 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55871bd7d9f8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55871bd7d9d8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55871b8cef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55871bd7da50 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bd7d848 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55871bd7da68 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bd7d890 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55871bd7da80 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55871bd7d8c8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55871bd7da98 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55871bd7d9c0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55871bd7d9a8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55871bd7d968 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55871bd7dd58 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55871bd7dd40 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55871bd7dd28 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55871bd7dcf8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55871bd7dc70 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55871bd7dc40 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55871bd7dbf0 <col:67, col:76> 'char const[48]' lvalue ->c 0x55871bd6d3c0
|             |   `-CXXMemberCallExpr 0x55871bd7dbd0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55871bd7dba0 <col:67> '<bound member function type>' ->xanno 0x55871bd62508
|             |       `-CXXThisExpr 0x55871bd7db90 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55871bd7dc58 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55871bd7dc20 <col:80> 'int' lvalue ParmVar 0x55871bd66440 'i' 'int'
|-CXXMethodDecl 0x55871bd66728 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55871bd665d0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55871bd66650 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55871bd7e590 <col:45, line:635:5>
|   |-ParenExpr 0x55871bd7e2d8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55871bd7e2a8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55871bd7df70 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55871bd7df40 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55871bd7dde0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55871bd7ddc8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55871bd7dd88 <col:23> 'int' lvalue ParmVar 0x55871bd665d0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55871bd7dda8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55871bd7df20 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55871bd7df08 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55871bd7de00 <col:33> 'int' lvalue ParmVar 0x55871bd665d0 'i' 'int'
|   |   |     `-BinaryOperator 0x55871bd7dee8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55871bd7ded0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55871bd7de20 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55871bd628f0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55871bd7dea8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55871bd7de90 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55871bd7de58 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55871bd7dfd0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55871bd7dfb0 <col:79> 'int' 0
|   |   `-CallExpr 0x55871bd7e208 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55871bd7e1f0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55871bd7e1d0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55871b8cef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55871bd7e248 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bd7e040 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55871bd7e260 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55871bd7e088 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55871bd7e278 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55871bd7e0c0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55871bd7e290 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55871bd7e1b8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55871bd7e1a0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55871bd7e158 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55871bd7e570 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55871bd7e4d8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55871bd7e4a8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55871bd7e448 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55871bd7e418 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55871bd7e3c8 <col:54, col:63> 'char [48]' lvalue ->c 0x55871bd6d3c0
|     |     |   `-CXXMemberCallExpr 0x55871bd7e3a8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55871bd7e378 <col:54> '<bound member function type>' ->xanno 0x55871bd626a8
|     |     |       `-CXXThisExpr 0x55871bd7e368 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55871bd7e430 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55871bd7e3f8 <col:67> 'int' lvalue ParmVar 0x55871bd665d0 'i' 'int'
|     `-CXXConstCastExpr 0x55871bd7e540 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55871bd7e528 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55871bd7e4f0 <col:91> 'const void *' lvalue ParmVar 0x55871bd66650 'x' 'const void *'
|-CXXMethodDecl 0x55871bd667f8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55871bd7e618 <col:34, line:640:5>
|   `-ReturnStmt 0x55871bd7e608 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55871bd7e5f0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55871bd7e5c0 <col:16> 'Packet *' lvalue ->_data_packet 0x55871bd6df78
|         `-CXXThisExpr 0x55871bd7e5b0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55871bd66938 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55871bd668a8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55871bd776d8 <col:46> 'bool' true
|-CXXMethodDecl 0x55871bd66ab8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55871bd669f0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55871bd66b60 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55871bd67310 <line:660:22> "" ""
| |-EnumConstantDecl 0x55871bd66c60 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55871bd67380 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd66c40 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55871bd66c20 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55871bd5bdc0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55871bd66cf0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55871bd67398 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd66cd0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55871bd66cb0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55871bd5be50 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55871bd66d80 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55871bd673b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd66d60 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55871bd66d40 <col:21> 'int' 0
| |-EnumConstantDecl 0x55871bd66e10 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55871bd673c8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd66df0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55871bd66dd0 <col:19> 'int' 16
| |-EnumConstantDecl 0x55871bd66ea0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55871bd673e0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd66e80 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55871bd66e60 <col:21> 'int' 16
| |-EnumConstantDecl 0x55871bd66f30 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55871bd673f8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd66f10 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55871bd66ef0 <col:19> 'int' 32
| |-EnumConstantDecl 0x55871bd66fc0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55871bd67410 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd66fa0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55871bd66f80 <col:19> 'int' EnumConstant 0x55871bd66e10 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55871bd67050 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55871bd67428 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd67030 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55871bd67010 <col:19> 'int' EnumConstant 0x55871bd66f30 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55871bd67120 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55871bd67440 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd67100 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55871bd670e0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55871bd670a0 <col:23> 'int' EnumConstant 0x55871bd67050 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55871bd670c0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55871bd671f0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55871bd67458 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55871bd671d0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55871bd671b0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55871bd67170 <col:23> 'int' EnumConstant 0x55871bd67050 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55871bd67190 <col:40> 'int' 4
| `-EnumConstantDecl 0x55871bd672c0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55871bd67470 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55871bd672a0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55871bd67280 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55871bd67240 <col:23> 'int' EnumConstant 0x55871bd67050 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55871bd67260 <col:40> 'int' 8
|-CXXMethodDecl 0x55871bd674b0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55871bd67550 <col:68> "" ""
|-CXXMethodDecl 0x55871bd675e8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55871bd67688 <col:45> "" ""
|-CXXMethodDecl 0x55871bd67720 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55871bd677c0 <col:57> "" ""
|-CXXMethodDecl 0x55871bd67858 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55871bd678f8 <col:45> "" ""
|-CXXMethodDecl 0x55871bd67990 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55871bd67a30 <col:57> "" ""
|-CXXMethodDecl 0x55871bd67ac0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55871bd67b60 <col:51> "" ""
|-CXXMethodDecl 0x55871bd67bf0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55871bd67c90 <col:63> "" ""
|-CXXMethodDecl 0x55871bd67d20 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55871bd67dc0 <col:53> "" ""
|-CXXMethodDecl 0x55871bd67e50 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55871bd67ef0 <col:65> "" ""
|-CXXMethodDecl 0x55871bd68008 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55871bd67f78 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55871bd680b0 <col:61> "" ""
|-CXXMethodDecl 0x55871bd68248 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55871bd68138 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55871bd681b0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55871bd682f8 <col:67> "" ""
|-CXXMethodDecl 0x55871bd68410 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55871bd68380 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55871bd684b8 <col:63> "" ""
|-CXXMethodDecl 0x55871bd68650 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55871bd68540 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55871bd685b8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55871bd68700 <col:69> "" ""
|-CXXMethodDecl 0x55871bd68818 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55871bd68788 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55871bd688c0 <col:63> "" ""
|-CXXMethodDecl 0x55871bd6af98 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55871bd6ae88 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55871bd6af00 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55871bd6b048 <col:69> "" ""
|-CXXMethodDecl 0x55871bd6b160 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55871bd6b0d0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55871bd6b208 <col:62> "" ""
|-CXXMethodDecl 0x55871bd6b3a0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55871bd6b290 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55871bd6b308 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55871bd6b450 <col:68> "" ""
|-CXXMethodDecl 0x55871bd6b568 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55871bd6b4d8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55871bd6b610 <col:63> "" ""
|-CXXMethodDecl 0x55871bd6b7a8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55871bd6b698 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55871bd6b710 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55871bd6b858 <col:69> "" ""
|-CXXMethodDecl 0x55871bd6b8e8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55871bd6b988 <col:64> "" ""
|-CXXMethodDecl 0x55871bd6ba18 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55871bd6bab8 <col:52> "" ""
|-CXXMethodDecl 0x55871bd6bb48 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55871bd6bbe8 <col:67> "" ""
|-CXXMethodDecl 0x55871bd6bc78 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55871bd6bd18 <col:55> "" ""
|-CXXMethodDecl 0x55871bd6be30 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55871bd6bda0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55871bd6bed8 <col:58> "" ""
|-CXXMethodDecl 0x55871bd6c070 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55871bd6bf60 <col:33> col:36 'int'
| |-ParmVarDecl 0x55871bd6bfd8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55871bd6c120 <col:62> "" ""
|-CXXMethodDecl 0x55871bd6c238 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55871bd6c1a8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55871bd6c2e0 <col:58> "" ""
|-CXXMethodDecl 0x55871bd6c478 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55871bd6c368 <col:33> col:36 'int'
| |-ParmVarDecl 0x55871bd6c3e0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55871bd6c528 <col:62> "" ""
|-CXXMethodDecl 0x55871bd6c640 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55871bd6c5b0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55871bd6c6e8 <col:60> "" ""
|-CXXMethodDecl 0x55871bd6c880 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55871bd6c770 <col:34> col:37 'int'
| |-ParmVarDecl 0x55871bd6c7e8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55871bd6c930 <col:64> "" ""
|-CXXMethodDecl 0x55871bd6ca48 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55871bd6c9b8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55871bd6caf0 <col:58> "" ""
|-CXXMethodDecl 0x55871bd6cc88 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55871bd6cb78 <col:33> col:36 'int'
| |-ParmVarDecl 0x55871bd6cbf0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55871bd6cd38 <col:62> "" ""
|-CXXMethodDecl 0x55871bd6ce50 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55871bd6cdc0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55871bd6cef8 <col:59> "" ""
|-CXXMethodDecl 0x55871bd6d090 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55871bd6cf80 <col:33> col:36 'int'
| |-ParmVarDecl 0x55871bd6cff8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55871bd6d140 <col:63> "" ""
|-AccessSpecDecl 0x55871bd6d1b0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55871bd6d1d8 prev 0x55871bd623e0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55871bd6d2d0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55871bd6d3c0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55871bd6d4e8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55871bd6d668 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55871bd6d7e8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55871bd6d968 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55871bd7e798 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55871bd7f008 <col:11>
| |-CXXDestructorDecl 0x55871bd7e870 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55871bd7e9a8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55871bd7e9a8
| | `-ParmVarDecl 0x55871bd7eab8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55871bd7eb58 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55871bd7eb58
| | `-ParmVarDecl 0x55871bd7ec68 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55871bd81a28 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55871bd81b38 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55871bd81db8 <col:11>
| |   `-ReturnStmt 0x55871bd81da8 <col:11>
| |     `-UnaryOperator 0x55871bd81d90 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55871bd81d80 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55871bd81ba8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55871bd81ba8
|   `-ParmVarDecl 0x55871bd81cb8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55871bd6d9d0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55871bd6dae8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55871bd6db88 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55871bd6dbf0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55871bd6dc58 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55871bd6dcc0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55871bd6dd20 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55871bd6dde0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55871bd6de40 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55871bd6dea0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55871bd7e6a8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55871bd6db88 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55871bd7f018 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55871bd7f070 <col:12>
| |-CXXConstructorDecl 0x55871bd7ecd8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55871bd7ecd8
| | `-ParmVarDecl 0x55871bd7ede8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55871bd7ee88 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55871bd7ee88
| | `-ParmVarDecl 0x55871bd7ef98 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55871bd81110 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55871bd6df18 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55871bd6df78 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55871bd6dfe0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55871bd6e048 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55871bd6e0b0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55871bd6e118 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55871bd6e178 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55871bd6e1d8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55871bd6e240 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55871bd6e2c8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55871bd6df18 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55871bd7e640 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55871bd6e178 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55871bd7f080 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55871bd7f0e0 <col:21, line:755:5>
|-CXXConstructorDecl 0x55871bd6e468 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55871bd6e3a8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55871bd6e560 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55871bd6e748 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55871bd6e650 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55871bd6ea18 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55871bd6e800 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55871bd6e878 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55871bd6e8f0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55871bd6ec38 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55871bd6eae8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55871bd6eb60 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55871bd77218 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55871bd6ecf8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55871bd6ed70 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55871bd6ede8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55871bd77370 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55871bd772e0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55871bd774b8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55871bd77428 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55871bd775b0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55871bb679d0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55871bb67ae8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55871bb67b88 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55871bb67be8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55871bb67c48 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55871bb67cf8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55871bb68000 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55871bb68118 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55871bb681c0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55871bb68228 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55871bb682b8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55871bb6e350 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55871bb6e788 <col:12>
|-CXXConstructorDecl 0x55871bb6e458 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55871bb6e568 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55871bb681c0 'data' 'const char *'
| | `-ImplicitCastExpr 0x55871bb70d10 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55871bb70ce0 <col:12> 'const char *const' lvalue .data 0x55871bb681c0
| |     `-DeclRefExpr 0x55871bb70cc0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55871bb6e568 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55871bb68228 'length' 'int'
| | `-ImplicitCastExpr 0x55871bb70da0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55871bb70d70 <col:12> 'const int' lvalue .length 0x55871bb68228
| |     `-DeclRefExpr 0x55871bb70d50 <col:12> 'const String::rep_t' lvalue ParmVar 0x55871bb6e568 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55871bb682b8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55871bb70e30 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55871bb70e00 <col:12> 'String::memo_t *const' lvalue .memo 0x55871bb682b8
| |     `-DeclRefExpr 0x55871bb70de0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55871bb6e568 '' 'const String::rep_t &'
| `-CompoundStmt 0x55871bb70e88 <col:12>
|-CXXConstructorDecl 0x55871bb6e608 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55871bb6e608
| `-ParmVarDecl 0x55871bb6e718 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55871bb73c70 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55871bb7f688 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55871bb7f798 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55871bb7fcb0 <col:12>
|   |-BinaryOperator 0x55871bb7fac8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55871bb7fa80 <col:12> 'const char *' lvalue ->data 0x55871bb681c0
|   | | `-CXXThisExpr 0x55871bb7fa70 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55871bb7fab0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55871bb7fa40 <col:12> 'const char *const' lvalue .data 0x55871bb681c0
|   |     `-DeclRefExpr 0x55871bb7fa20 <col:12> 'const String::rep_t' lvalue ParmVar 0x55871bb7f798 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55871bb7fb90 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55871bb7fb48 <col:12> 'int' lvalue ->length 0x55871bb68228
|   | | `-CXXThisExpr 0x55871bb7fb38 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55871bb7fb78 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55871bb7fb08 <col:12> 'const int' lvalue .length 0x55871bb68228
|   |     `-DeclRefExpr 0x55871bb7fae8 <col:12> 'const String::rep_t' lvalue ParmVar 0x55871bb7f798 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55871bb7fc58 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55871bb7fc10 <col:12> 'String::memo_t *' lvalue ->memo 0x55871bb682b8
|   | | `-CXXThisExpr 0x55871bb7fc00 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55871bb7fc40 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55871bb7fbd0 <col:12> 'String::memo_t *const' lvalue .memo 0x55871bb682b8
|   |     `-DeclRefExpr 0x55871bb7fbb0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55871bb7f798 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55871bb7fca0 <col:12>
|     `-UnaryOperator 0x55871bb7fc88 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55871bb7fc78 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55871bb7f808 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55871bb7f808
  `-ParmVarDecl 0x55871bb7f918 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55871bb5ef40 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55871bb5f058 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55871bb5f0e8 <col:16, col:22> col:16 public
|-TypedefDecl 0x55871bb5f128 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55871b835fd0 'const char *'
|   `-QualType 0x55871b835521 'const char' const
|     `-BuiltinType 0x55871b835520 'char'
|-TypedefDecl 0x55871bb5f1b0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55871bb5f180 'String::const_iterator' sugar
|   |-Typedef 0x55871bb5f128 'const_iterator'
|   `-PointerType 0x55871b835fd0 'const char *'
|     `-QualType 0x55871b835521 'const char' const
|       `-BuiltinType 0x55871b835520 'char'
|-TypedefDecl 0x55871bb5f320 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55871bb5f290 'int (String::*)() const'
|   |-RecordType 0x55871bb5efd0 'String'
|   | `-CXXRecord 0x55871bb5ef40 'String'
|   `-ParenType 0x55871bb5f230 'int () const' sugar
|     `-FunctionProtoType 0x55871bb33dd0 'int () const' const cdecl
|       `-BuiltinType 0x55871b835580 'int'
|-TypedefDecl 0x55871bb5f388 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55871b9887b0 'int64_t' sugar
|   |-Typedef 0x55871b89e390 'int64_t'
|   `-TypedefType 0x55871b877630 '__int64_t' sugar
|     |-Typedef 0x55871b877208 '__int64_t'
|     `-BuiltinType 0x55871b8355a0 'long'
|-TypedefDecl 0x55871bb5f3f0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55871b9886d0 'uint64_t' sugar
|   |-Typedef 0x55871b89e530 'uint64_t'
|   `-TypedefType 0x55871b8776c0 '__uint64_t' sugar
|     |-Typedef 0x55871b877278 '__uint64_t'
|     `-BuiltinType 0x55871b835640 'unsigned long'
|-TypedefDecl 0x55871bb5f480 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55871bb5f450 'String::intmax_t' sugar
|   |-Typedef 0x55871bb5f388 'intmax_t'
|   `-TypedefType 0x55871b9887b0 'int64_t' sugar
|     |-Typedef 0x55871b89e390 'int64_t'
|     `-TypedefType 0x55871b877630 '__int64_t' sugar
|       |-Typedef 0x55871b877208 '__int64_t'
|       `-BuiltinType 0x55871b8355a0 'long'
|-TypedefDecl 0x55871bb5f510 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55871bb5f4e0 'String::uintmax_t' sugar
|   |-Typedef 0x55871bb5f3f0 'uintmax_t'
|   `-TypedefType 0x55871b9886d0 'uint64_t' sugar
|     |-Typedef 0x55871b89e530 'uint64_t'
|     `-TypedefType 0x55871b8776c0 '__uint64_t' sugar
|       |-Typedef 0x55871b877278 '__uint64_t'
|       `-BuiltinType 0x55871b835640 'unsigned long'
|-CXXConstructorDecl 0x55871bb5f5d0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55871bb5f778 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55871bb5f6b8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55871bb5f928 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55871bb5f868 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55871bb5fa80 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55871bb5f9f0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55871bb5fc98 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55871bb5fb48 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55871bb5fbc8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55871bb5feb8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55871bb5fd68 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55871bb5fde8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55871bb600d8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55871bb5ff88 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55871bb60008 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55871bb602f8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55871bb601a8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55871bb60228 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55871bb60488 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x55871bb603c0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55871bb60608 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55871bb60548 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55871bb60798 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55871bb606d0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55871bb608f0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55871bb60860 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55871bb60a48 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55871bb609b8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55871bb60ba0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55871bb60b10 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55871bb60d28 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55871bb60c68 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55871bb60eb8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55871bb60df0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55871bb61048 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55871bb60f80 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55871bb611d8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55871bb61110 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55871bb612d0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55871bb613f8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55871bb61578 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55871bb614b0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55871bb616c8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55871bb61638 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55871bb61780 <col:63> "" ""
|-CXXMethodDecl 0x55871bb618c8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55871bb61808 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55871bb61ad8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55871bb61988 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55871bb61a08 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55871bb61cf8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55871bb61ba0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55871bb61c20 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55871bb61fd8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55871bb61db8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55871bb61e38 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55871bb6de20 <col:55> 'int' 10
| `-ParmVarDecl 0x55871bb61eb0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55871bb6de40 <col:76> 'bool' true
|-CXXMethodDecl 0x55871bb622b8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55871bb620a0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55871bb62120 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55871bb6de50 <col:56> 'int' 10
| `-ParmVarDecl 0x55871bb62198 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55871bb6de70 <col:77> 'bool' true
|-CXXMethodDecl 0x55871bb623c0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55871bb62488 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55871bb62550 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55871bb625f0 <col:20>
| `-OptimizeNoneAttr 0x55871bb62648 <col:30>
|-CXXConversionDecl 0x55871bb62738 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55871bb62808 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55871bb628c8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55871bb629b8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55871bb62a78 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55871bb62bf8 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55871bb62b30 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55871bb62d48 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55871bb62cb8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55871bb62e38 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55871bb62ef8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55871bb63148 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55871bb62fb0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55871bb63030 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55871bb633a8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55871bb63210 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55871bb63290 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55871bb63478 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55871bb63688 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55871bb63530 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55871bb635b0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55871bb638a8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55871bb63750 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55871bb637d0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55871bb63a38 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55871bb63970 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55871bb63b28 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55871bb63c98 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55871bb63bd8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55871bb63ea8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55871bb63d58 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55871bb63dd8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55871bb640c0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55871bb63f68 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55871bb63fe0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55871bb64250 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55871bb64180 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55871bb64470 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55871bb64310 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55871bb64390 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55871bb645c0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55871bb64530 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55871bb64798 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55871bb64680 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55871bb64700 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55871bb648e8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55871bb64858 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55871bb64b00 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55871bb649a0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55871bb64a20 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55871bb6de80 <col:39> 'int' 0
|-CXXMethodDecl 0x55871bb64d20 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55871bb64bc0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55871bb64c40 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55871bb6dea0 <col:48> 'int' 0
|-CXXMethodDecl 0x55871bb64f00 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55871bb64de0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55871bb64e60 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55871bb6dec0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55871bb64fd0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55871bb65090 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55871bb65150 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55871bb65210 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55871bb652d0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55871bb65478 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55871bb65380 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55871bb655f8 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55871bb65530 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55871bb657d0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55871bb656b8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55871bb65948 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55871bb65888 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55871bb65a90 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55871bb65a00 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55871bb65be0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55871bb65b50 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55871bb65db8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55871bb65ca0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55871bb65d20 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55871bb65f98 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55871bb65e80 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55871bb65f00 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55871bb660e8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55871bb66058 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55871bb662f8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55871bb661a8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55871bb66228 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55871bb66458 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55871bb663c0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55871bb665b0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55871bb66518 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55871bb66658 <col:57> "" ""
|-CXXMethodDecl 0x55871bb66768 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55871bb666d8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55871bb668b8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55871bb66828 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55871bb66a38 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55871bb66970 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55871bb66b00 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55871bb66bc0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55871bb66c80 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55871bb66d20 <col:49> "" ""
|-CXXMethodDecl 0x55871bb66db0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55871bb66e70 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55871bb66f60 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55871bb67028 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55871bb670e8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55871bb671a8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55871bb672a0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55871bb67368 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55871bb67430 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55871bb67608 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55871bb674e8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55871bb67568 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55871bb67830 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55871bb676d0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55871bb67750 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55871bb67940 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55871bb679a8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55871bb679d0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55871bb67ae8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55871bb67b88 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55871bb67be8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55871bb67c48 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55871bb67cf8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55871bb67d60 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55871bb67f98 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55871bb67fe8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55871bb67f78 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55871bb67e88 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55871bb67e30 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55871bb67e70 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55871bb67e50 <col:32> 'int' 8
|-CXXRecordDecl 0x55871bb68000 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55871bb68118 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55871bb681c0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55871bb68228 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55871bb682b8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55871bb6e350 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55871bb6e788 <col:12>
| |-CXXConstructorDecl 0x55871bb6e458 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55871bb6e568 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55871bb681c0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55871bb70d10 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55871bb70ce0 <col:12> 'const char *const' lvalue .data 0x55871bb681c0
| | |     `-DeclRefExpr 0x55871bb70cc0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55871bb6e568 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55871bb68228 'length' 'int'
| | | `-ImplicitCastExpr 0x55871bb70da0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55871bb70d70 <col:12> 'const int' lvalue .length 0x55871bb68228
| | |     `-DeclRefExpr 0x55871bb70d50 <col:12> 'const String::rep_t' lvalue ParmVar 0x55871bb6e568 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55871bb682b8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55871bb70e30 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55871bb70e00 <col:12> 'String::memo_t *const' lvalue .memo 0x55871bb682b8
| | |     `-DeclRefExpr 0x55871bb70de0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55871bb6e568 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55871bb70e88 <col:12>
| |-CXXConstructorDecl 0x55871bb6e608 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55871bb6e608
| | `-ParmVarDecl 0x55871bb6e718 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55871bb73c70 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55871bb7f688 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55871bb7f798 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55871bb7fcb0 <col:12>
| |   |-BinaryOperator 0x55871bb7fac8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55871bb7fa80 <col:12> 'const char *' lvalue ->data 0x55871bb681c0
| |   | | `-CXXThisExpr 0x55871bb7fa70 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55871bb7fab0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55871bb7fa40 <col:12> 'const char *const' lvalue .data 0x55871bb681c0
| |   |     `-DeclRefExpr 0x55871bb7fa20 <col:12> 'const String::rep_t' lvalue ParmVar 0x55871bb7f798 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55871bb7fb90 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55871bb7fb48 <col:12> 'int' lvalue ->length 0x55871bb68228
| |   | | `-CXXThisExpr 0x55871bb7fb38 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55871bb7fb78 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55871bb7fb08 <col:12> 'const int' lvalue .length 0x55871bb68228
| |   |     `-DeclRefExpr 0x55871bb7fae8 <col:12> 'const String::rep_t' lvalue ParmVar 0x55871bb7f798 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55871bb7fc58 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55871bb7fc10 <col:12> 'String::memo_t *' lvalue ->memo 0x55871bb682b8
| |   | | `-CXXThisExpr 0x55871bb7fc00 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55871bb7fc40 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55871bb7fbd0 <col:12> 'String::memo_t *const' lvalue .memo 0x55871bb682b8
| |   |     `-DeclRefExpr 0x55871bb7fbb0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55871bb7f798 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55871bb7fca0 <col:12>
| |     `-UnaryOperator 0x55871bb7fc88 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55871bb7fc78 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55871bb7f808 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55871bb7f808
|   `-ParmVarDecl 0x55871bb7f918 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55871bb68330 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55871bb68578 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55871bb68398 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55871bb68418 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55871bb68490 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55871bb6e310 <col:79, line:261:5>
|   |-BinaryOperator 0x55871bb6df88 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55871bb6df20 <col:2, col:5> 'const char *' lvalue .data 0x55871bb681c0
|   | | `-MemberExpr 0x55871bb6def0 <col:2> 'String::rep_t' lvalue ->_r 0x55871bb68330
|   | |   `-CXXThisExpr 0x55871bb6dee0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55871bb6df70 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55871bb6df50 <col:12> 'const char *' lvalue ParmVar 0x55871bb68398 'data' 'const char *'
|   |-BinaryOperator 0x55871bb6e050 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55871bb6dfe8 <col:2, col:5> 'int' lvalue .length 0x55871bb68228
|   | | `-MemberExpr 0x55871bb6dfb8 <col:2> 'String::rep_t' lvalue ->_r 0x55871bb68330
|   | |   `-CXXThisExpr 0x55871bb6dfa8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55871bb6e038 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55871bb6e018 <col:14> 'int' lvalue ParmVar 0x55871bb68418 'length' 'int'
|   `-IfStmt 0x55871bb6e2f8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55871bb6e170 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55871bb6e158 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55871bb6e138 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55871bb6e118 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55871bb6e0b0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55871bb682b8
|     |       | `-MemberExpr 0x55871bb6e080 <col:7> 'String::rep_t' lvalue ->_r 0x55871bb68330
|     |       |   `-CXXThisExpr 0x55871bb6e070 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55871bb6e100 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55871bb6e0e0 <col:17> 'String::memo_t *' lvalue ParmVar 0x55871bb68490 'memo' 'String::memo_t *'
|     `-CallExpr 0x55871bb6e2d0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55871bb6e2b8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55871bb6e1c0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55871bb56fa8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55871bb6e228 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55871bb67b88
|         `-ImplicitCastExpr 0x55871bb6e210 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55871bb6e1f0 <col:27> 'String::memo_t *' lvalue ParmVar 0x55871bb68490 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55871bb68828 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55871bb68648 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55871bb686c8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55871bb68740 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55871bb68330 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55871bb6e798 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55871bb6e928 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55871bb6e890 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55871bb6e800 <col:2> '<bound member function type>' ->assign_memo 0x55871bb68578
|     | `-ImplicitCastExpr 0x55871bb6e8c8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55871bb6e7f0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55871bb6e8e0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55871bb6e830 <col:14> 'const char *' lvalue ParmVar 0x55871bb68648 'data' 'const char *'
|     |-ImplicitCastExpr 0x55871bb6e8f8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55871bb6e850 <col:20> 'int' lvalue ParmVar 0x55871bb686c8 'length' 'int'
|     `-ImplicitCastExpr 0x55871bb6e910 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55871bb6e870 <col:28> 'String::memo_t *' lvalue ParmVar 0x55871bb68740 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55871bb689b8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55871bb688f8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55871bb6eb80 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55871bb6eb00 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55871bb6e950 <col:2> '<bound member function type>' ->assign_memo 0x55871bb68578
|     | `-CXXThisExpr 0x55871bb6e940 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55871bb6eb38 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55871bb6e9d0 <col:14, col:19> 'const char *' lvalue .data 0x55871bb681c0
|     |   `-MemberExpr 0x55871bb6e9a0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55871bb68330
|     |     `-DeclRefExpr 0x55871bb6e980 <col:14> 'const String' lvalue ParmVar 0x55871bb688f8 'x' 'const String &'
|     |-ImplicitCastExpr 0x55871bb6eb50 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55871bb6ea50 <col:25, col:30> 'int' lvalue .length 0x55871bb68228
|     |   `-MemberExpr 0x55871bb6ea20 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55871bb68330
|     |     `-DeclRefExpr 0x55871bb6ea00 <col:25> 'const String' lvalue ParmVar 0x55871bb688f8 'x' 'const String &'
|     `-ImplicitCastExpr 0x55871bb6eb68 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55871bb6ead0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55871bb682b8
|         `-MemberExpr 0x55871bb6eaa0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55871bb68330
|           `-DeclRefExpr 0x55871bb6ea80 <col:38> 'const String' lvalue ParmVar 0x55871bb688f8 'x' 'const String &'
|-CXXMethodDecl 0x55871bb68a80 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55871bb6f540 <col:31, line:278:5>
|   `-IfStmt 0x55871bb6f528 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55871bb6ec20 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55871bb6ec08 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55871bb6ebd8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55871bb682b8
|     |     `-MemberExpr 0x55871bb6eba8 <col:6> 'String::rep_t' lvalue ->_r 0x55871bb68330
|     |       `-CXXThisExpr 0x55871bb6eb98 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55871bb6f500 <col:15, line:277:2>
|       |-ParenExpr 0x55871bb6f0d0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55871bb6f0a0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55871bb6ed30 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55871bb6ed18 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55871bb6ed00 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55871bb6ecc0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55871bb67b88
|       |   |       `-ImplicitCastExpr 0x55871bb6eca8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55871bb6ec78 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55871bb682b8
|       |   |           `-MemberExpr 0x55871bb6ec48 <col:27> 'String::rep_t' lvalue ->_r 0x55871bb68330
|       |   |             `-CXXThisExpr 0x55871bb6ec38 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55871bb6ed90 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55871bb6ed70 <col:54> 'int' 0
|       |   `-CallExpr 0x55871bb6f000 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55871bb6efe8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55871bb6ef68 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55871b8cef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55871bb6f040 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55871bb6ee78 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55871bb6f058 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55871bb6eea8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55871bb6f070 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55871bb6eee0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55871bb6f088 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55871bb6ef50 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55871bb6ef38 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55871bb6ef00 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55871bb6f420 <line:274:6, line:275:22>
|       | |-CallExpr 0x55871bb6f2e0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55871bb6f2c8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55871bb6f240 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55871bb583f0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55871bb6f210 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55871bb67b88
|       | |   `-ImplicitCastExpr 0x55871bb6f1f8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55871bb6f1c8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55871bb682b8
|       | |       `-MemberExpr 0x55871bb6f198 <col:40> 'String::rep_t' lvalue ->_r 0x55871bb68330
|       | |         `-CXXThisExpr 0x55871bb6f188 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55871bb6f3e0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55871bb6f3c8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55871bb6f308 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55871bb6d260 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55871bb6f408 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55871bb6f368 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55871bb682b8
|       |       `-MemberExpr 0x55871bb6f338 <col:15> 'String::rep_t' lvalue ->_r 0x55871bb68330
|       |         `-CXXThisExpr 0x55871bb6f328 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55871bb6f4e0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55871bb6f478 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55871bb682b8
|         | `-MemberExpr 0x55871bb6f448 <col:6> 'String::rep_t' lvalue ->_r 0x55871bb68330
|         |   `-CXXThisExpr 0x55871bb6f438 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55871bb6f4c8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55871bb6f4a8 <col:16> 'int' 0
|-CXXMethodDecl 0x55871bb68d18 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55871bb68b38 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55871bb68bb8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55871bb68c30 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55871bb68df0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55871bb69040 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55871bb68ea8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55871bb68f28 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55871bb68fa0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55871bb69228 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55871bb69110 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55871bb69190 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55871bb69328 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55871bb6f618 <col:41, line:286:5>
|   `-ReturnStmt 0x55871bb6f608 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55871bb6f5d8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55871bb6f5a0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55871bb6f588 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55871bb6f568 <col:46> 'int' 1
|-CXXMethodDecl 0x55871bb695c8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55871bb693e0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55871bb69460 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55871bb694e0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55871bb6d260 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55871bb69690 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55871bb6d330 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55871bb6d500 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55871bb6d3e8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55871bb6d468 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55871bb6d5c0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55871bb6d688 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55871bb6d788 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55871bb6d800 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55871bb6d878 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55871bb6d8e0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55871bb6d9e0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55871bb6da30 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55871bb6d9c0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55871bb6d9a0 <col:22> 'int' 14
|-CXXMethodDecl 0x55871bb6dc48 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55871bb6da60 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55871bb6dae0 <col:38> col:41 'int'
| `-ParmVarDecl 0x55871bb6db60 <col:43> col:46 'int'
|-FriendDecl 0x55871bb6dd50 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55871bb6dde0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>
