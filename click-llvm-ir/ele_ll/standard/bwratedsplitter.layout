
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cd4c0f63a8 prev 0x55cd4c0edb48 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cd4c0f64a0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55cd4c0f6530 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55cd4c0f65a8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55cd4c0f6668 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55cd4c0f6730 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55cd4c0f68a8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55cd4c0f67e0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55cd4c0f6950 <col:24>
| `-OptimizeNoneAttr 0x55cd4c0f69a8 <col:34>
|-CXXMethodDecl 0x55cd4c0f69f0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55cd4c0f6ca8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55cd4c0f6aa0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55cd4c0f6b18 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55cd4c0f6b98 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55cd4c0f6d60 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55cd4c0f6d98 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55cd4c0f6e00 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55cd4c0f6e88 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55cd4c0f71a8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55cd4c0f6f40 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55cd4c0f6fb8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55cd4c0f7030 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55cd4c0f70b0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55cd4c0f72c0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55cd4c0fec38 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55cd4c0fec38
| `-ParmVarDecl 0x55cd4c0fed48 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55cd4c0fede8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55cd4c0fede8
| `-ParmVarDecl 0x55cd4c0feef8 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55cd4c206720 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cd4c0e93c0 prev 0x55cd4c0e9140 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55cd4c0e94b8 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55cd4c0e9548 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55cd4c0e95a8 <line:31:5, col:13> col:5 Element 'void ()'
|-CXXDestructorDecl 0x55cd4c0e9698 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55cd4c0e9798 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55cd4c0e9968 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55cd4c0e9818 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55cd4c0e9890 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55cd4c0e9af8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55cd4c0e9a30 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55cd4c0e9ba0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55cd4c0e9cd8 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55cd4c0e9c10 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55cd4c0e9e78 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55cd4c0e9db8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55cd4c0ea018 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55cd4c0e9f58 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55cd4c0ea0c0 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55cd4c0ea1c0 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55cd4c0ea2a0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0ea1a0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55cd4c0ea180 <col:26> 'int' 1
| `-EnumConstantDecl 0x55cd4c0ea250 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55cd4c0ea2b8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cd4c0ea230 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55cd4c0ea210 <col:44> 'int' 2
|-CXXMethodDecl 0x55cd4c0ea400 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55cd4c0ea2e8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55cd4c0ea368 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55cd4c0ea558 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55cd4c0ea4c8 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55cd4c0ea798 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55cd4c0ea618 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55cd4c0ea690 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55cd4c0ea848 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0ea8a0 <col:30>
|-CXXMethodDecl 0x55cd4c0ea9a8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55cd4c0ea8e0 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55cd4c0eaa50 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0eaaa8 <col:30>
|-CXXMethodDecl 0x55cd4c0eaaf8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55cd4c0eabc0 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55cd4c0eacd8 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55cd4c0ead60 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55cd4c0eade8 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55cd4c0eae70 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x55cd4c0eaef8 <line:59:5, col:35> col:23 used PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55cd4c0eaf88 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55cd4c0eb048 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55cd4c0eb0d0 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x55cd4c0eb158 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55cd4c0eb1e0 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55cd4c0eb268 <line:66:5, col:36> col:23 used PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55cd4c0eb2f0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55cd4c0eb380 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55cd4c0eb440 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55cd4c0eb4d0 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55cd4c0eb620 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55cd4c0eb588 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55cd4c0eb7b0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55cd4c0eb6e0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55cd4c0eba60 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55cd4c0eb868 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55cd4c0eb8e8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55cd4c0eb968 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55cd4c0ebb18 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55cd4c0ebc20 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55cd4c0ebeb0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0ebc00 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55cd4c0ebbe0 <col:33> 'int' 0
| |-EnumConstantDecl 0x55cd4c0ebcb0 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55cd4c0ebec8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0ebc90 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55cd4c0ebc70 <col:32> 'int' 20
| |-EnumConstantDecl 0x55cd4c0ebd40 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55cd4c0ebee0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0ebd20 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55cd4c0ebd00 <col:38> 'int' 90
| |-EnumConstantDecl 0x55cd4c0ebdd0 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55cd4c0ebef8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0ebdb0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55cd4c0ebd90 <col:35> 'int' 100
| `-EnumConstantDecl 0x55cd4c0ebe60 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55cd4c0ebf10 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cd4c0ebe40 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55cd4c0ebe20 <col:32> 'int' 2000
|-CXXMethodDecl 0x55cd4c0ebf50 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55cd4c0ec390 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55cd4c0ec200 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55cd4c0ec278 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55cd4c0ec460 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55cd4c0ec5e0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55cd4c0ec510 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55cd4c0ec7e8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55cd4c0ec698 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55cd4c0ec710 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55cd4c0ec8e8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55cd4c0ec988 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55cd4c0eca50 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55cd4c0ecae0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55cd4c0ecd10 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0ecac0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55cd4c0ecaa0 <col:36> 'int' EnumConstant 0x55cd4c0eca50 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55cd4c0ecb30 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55cd4c0ecb80 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55cd4c0ecbd0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55cd4c0ecc20 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55cd4c0ecc70 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55cd4c0eccc0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55cd4c0ecdf8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55cd4c0ecd38 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55cd4c0ecec0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55cd4c0ecf80 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55cd4c0ed040 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55cd4c0ed100 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55cd4c0ed218 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55cd4c0ed2e0 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x55cd4c0ed460 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55cd4c0ed390 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55cd4c0ed588 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55cd4c0ed788 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55cd4c0ed638 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55cd4c0ed6b8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55cd4c0fb0d8 <col:54, line:127:5>
|   |-ParenExpr 0x55cd4c0faf88 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55cd4c0faf58 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55cd4c0fac48 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55cd4c0fac20 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55cd4c0fac08 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55cd4c0fabf0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55cd4c0fabc0 <col:31> 'Router *' lvalue ->_router 0x55cd4c0f8aa0
|   |   |         `-CXXThisExpr 0x55cd4c0fabb0 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55cd4c0faca8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cd4c0fac88 <col:48> 'int' 0
|   |   `-CallExpr 0x55cd4c0faeb8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55cd4c0faea0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cd4c0fae80 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cd4bc23880 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cd4c0faef8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0fad18 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55cd4c0faf10 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0fad38 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55cd4c0faf28 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cd4c0fad70 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55cd4c0faf40 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cd4c0fae68 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cd4c0fae50 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cd4c0fae08 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55cd4c0fb020 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55cd4c0fafb8 <col:9> 'Router *' lvalue ->_router 0x55cd4c0f8aa0
|   | | `-CXXThisExpr 0x55cd4c0fafa8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55cd4c0fb008 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cd4c0fafe8 <col:19> 'Router *' lvalue ParmVar 0x55cd4c0ed638 'r' 'Router *'
|   `-BinaryOperator 0x55cd4c0fb0b8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55cd4c0fb050 <col:9> 'int' lvalue ->_eindex 0x55cd4c0f8b08
|     | `-CXXThisExpr 0x55cd4c0fb040 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55cd4c0fb0a0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55cd4c0fb080 <col:19> 'int' lvalue ParmVar 0x55cd4c0ed6b8 'eindex' 'int'
|-CXXMethodDecl 0x55cd4c0ed910 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55cd4c0ed848 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55cd4c0ed9e0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55cd4c0edaa8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55cd4c0edb48 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55cd4c0edd98 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55cd4c0edc10 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55cd4c0edc90 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55cd4c0ede48 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0edea0 <col:30>
|-CXXMethodDecl 0x55cd4c0edfa8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55cd4c0edee0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55cd4c0ee050 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0ee0a8 <col:30>
|-CXXMethodDecl 0x55cd4c0ee178 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55cd4c0ee0e8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55cd4c0ee220 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0ee278 <col:30>
|-CXXMethodDecl 0x55cd4c0ee408 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55cd4c0ee2b0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55cd4c0ee330 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55cd4c0ee598 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55cd4c0ee4d0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55cd4c0ee6e8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55cd4c0ee658 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55cd4c0ee838 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55cd4c0ee7a8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55cd4c0ee988 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55cd4c0ee8f8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55cd4c0eec48 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55cd4c0eea40 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55cd4c0eeac0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55cd4c0eeb68 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55cd4c0eed20 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55cd4c0eede0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55cd4c0ef0b0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55cd4c0eef60 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55cd4c0eefd8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55cd4c0ef1d8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55cd4c0ef3b0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55cd4c0ef290 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55cd4c0ef310 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55cd4c0ef598 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55cd4c0ef478 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55cd4c0ef4f8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55cd4c0ef908 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55cd4c0ef658 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55cd4c0ef6d0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55cd4c0ef750 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55cd4c0fa6c0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55cd4c0fa6a0 <col:106> 'int' 0
| `-ParmVarDecl 0x55cd4c0ef7c8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55cd4c0fa6f8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55cd4c0fa6d8 <col:126> 'int' 0
|-CXXMethodDecl 0x55cd4c0efca8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55cd4c0ef9d8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55cd4c0efa70 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55cd4c0efaf0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55cd4c0efb68 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55cd4c0fa730 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55cd4c0fa710 <col:114> 'int' 0
|-CXXMethodDecl 0x55cd4c0f0038 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55cd4c0efd80 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55cd4c0efdf8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55cd4c0efe78 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55cd4c0fa748 <col:96> 'int' 0
| `-ParmVarDecl 0x55cd4c0efef0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55cd4c0fa788 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55cd4c0fa768 <col:116> 'int' 0
|-CXXMethodDecl 0x55cd4c0f03b8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55cd4c0f0108 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55cd4c0f0180 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55cd4c0f0200 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55cd4c0fa7c0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55cd4c0fa7a0 <col:109> 'int' 0
| `-ParmVarDecl 0x55cd4c0f0278 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55cd4c0fa7f8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55cd4c0fa7d8 <col:129> 'int' 0
|-CXXMethodDecl 0x55cd4c0f0738 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55cd4c0f0488 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55cd4c0f0500 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55cd4c0f0580 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55cd4c0f05f8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55cd4c0fa830 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55cd4c0fa810 <col:117> 'int' 0
|-CXXMethodDecl 0x55cd4c0f0ac8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55cd4c0f0810 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cd4c0f0888 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55cd4c0f0908 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55cd4c0fa848 <col:99> 'int' 0
| `-ParmVarDecl 0x55cd4c0f0980 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55cd4c0fa888 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55cd4c0fa868 <col:119> 'int' 0
|-CXXMethodDecl 0x55cd4c0f0ee8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55cd4c0f0b98 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55cd4c0f0c18 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55cd4c0f0c90 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55cd4c0f0d10 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55cd4c0fa8c0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55cd4c0fa8a0 <col:108> 'int' 0
| `-ParmVarDecl 0x55cd4c0f0d90 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55cd4c0fa8f8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55cd4c0fa8d8 <col:141> 'int' 0
|-CXXMethodDecl 0x55cd4c0f1308 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55cd4c0f0fc0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55cd4c0f1040 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55cd4c0f10b8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55cd4c0f1138 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55cd4c0f11b8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55cd4c0fa910 <col:121> 'int' 0
|-CXXMethodDecl 0x55cd4c0f1738 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55cd4c0f13e8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55cd4c0f1468 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55cd4c0f14e0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55cd4c0f1560 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55cd4c0fa930 <col:98> 'int' 0
| `-ParmVarDecl 0x55cd4c0f15e0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55cd4c0fa950 <col:123> 'int' 0
|-CXXMethodDecl 0x55cd4c0f1a00 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55cd4c0f1810 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55cd4c0f1890 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55cd4c0f1910 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55cd4c0fa970 <col:80> 'int' 0
|-EnumDecl 0x55cd4c0f1ab8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55cd4c0f1bc0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55cd4c0f1e50 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0f1ba0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55cd4c0f1b80 <col:42> 'int' 1
| |-EnumConstantDecl 0x55cd4c0f1c50 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55cd4c0f1e68 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0f1c30 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55cd4c0f1c10 <col:40> 'int' 2
| |-EnumConstantDecl 0x55cd4c0f1ce0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55cd4c0f1e80 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0f1cc0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55cd4c0f1ca0 <col:44> 'int' 4
| |-EnumConstantDecl 0x55cd4c0f1d70 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55cd4c0f1e98 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0f1d50 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55cd4c0f1d30 <col:36> 'int' 7
| `-EnumConstantDecl 0x55cd4c0f1e00 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55cd4c0f1eb0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cd4c0f1de0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55cd4c0f1dc0 <col:34> 'int' 6
|-CXXMethodDecl 0x55cd4c0f2168 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55cd4c0f1ed8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55cd4c0f1f78 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55cd4c0f1ff8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55cd4c0f2070 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55cd4c0faa28 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55cd4c0faa10 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55cd4c0fa9f8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55cd4c0fa9d8 <col:98, col:105> 'String' (CXXTemporary 0x55cd4c0fa9d8)
|           `-CXXTemporaryObjectExpr 0x55cd4c0fa9a0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55cd4c0f2408 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55cd4c0f2238 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55cd4c0f22b0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55cd4c0f2328 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55cd4c0faad8 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55cd4c0faac0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55cd4c0faaa8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55cd4c0faa88 <col:94, col:101> 'String' (CXXTemporary 0x55cd4c0faa88)
| |         `-CXXTemporaryObjectExpr 0x55cd4c0faa50 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55cd4c0fb2c0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55cd4c0fb238 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55cd4c0fb208 <col:9> '<bound member function type>' ->add_task_handlers 0x55cd4c0f2168
|     | `-CXXThisExpr 0x55cd4c0fb1f8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55cd4c0fb278 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55cd4c0fb178 <col:27> 'Task *' lvalue ParmVar 0x55cd4c0f2238 'task' 'Task *'
|     |-ImplicitCastExpr 0x55cd4c0fb290 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55cd4c0fb198 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55cd4c0f22b0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55cd4c0fb2a8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55cd4c0fb1b8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55cd4c0f1e00 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55cd4c0fb1d8 <col:62> 'const String' lvalue ParmVar 0x55cd4c0f2328 'prefix' 'const String &'
|-CXXMethodDecl 0x55cd4c0f2618 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55cd4c0f24d0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55cd4c0f2548 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55cd4c0fab88 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55cd4c0fab70 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55cd4c0fab58 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55cd4c0fab38 <col:70, col:77> 'String' (CXXTemporary 0x55cd4c0fab38)
| |         `-CXXTemporaryObjectExpr 0x55cd4c0fab00 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55cd4c0fb498 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55cd4c0fb410 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55cd4c0fb3e0 <col:9> '<bound member function type>' ->add_task_handlers 0x55cd4c0f2168
|     | `-CXXThisExpr 0x55cd4c0fb3d0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55cd4c0fb450 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55cd4c0fb350 <col:27> 'Task *' lvalue ParmVar 0x55cd4c0f24d0 'task' 'Task *'
|     |-ImplicitCastExpr 0x55cd4c0fb468 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55cd4c0fb370 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55cd4c0fb480 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55cd4c0fb390 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55cd4c0f1e00 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55cd4c0fb3b0 <col:57> 'const String' lvalue ParmVar 0x55cd4c0f2548 'prefix' 'const String &'
|-CXXMethodDecl 0x55cd4c0f28f8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55cd4c0f26e0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cd4c0f2760 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cd4c0f27d8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55cd4c0f2ba8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55cd4c0f29c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cd4c0f2a48 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cd4c0f2ac8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55cd4c0f2e98 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55cd4c0f2c78 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cd4c0f2cf8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cd4c0f2d70 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55cd4c0f3148 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55cd4c0f2f68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cd4c0f2fe8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cd4c0f3068 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55cd4c0f33f8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55cd4c0f3218 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cd4c0f3298 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cd4c0f3318 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55cd4c0f36a8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55cd4c0f34c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cd4c0f3548 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cd4c0f35c0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55cd4c0f3958 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55cd4c0f3778 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cd4c0f37f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cd4c0f3878 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55cd4c0f3c68 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55cd4c0f3a80 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cd4c0f3b00 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cd4c0f3b80 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55cd4c0f3f48 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55cd4c0f3d38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cd4c0f3db8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cd4c0f3e60 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55cd4c0f4228 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55cd4c0f4018 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cd4c0f4098 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cd4c0f4140 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55cd4c0f4490 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55cd4c0f42f8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55cd4c0f4378 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55cd4c0f43f0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55cd4c0f4738 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55cd4c0f4560 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55cd4c0f45e0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55cd4c0f4658 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55cd4c0f49e8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55cd4c0f4808 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cd4c0f4888 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cd4c0f4908 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55cd4c0f4c98 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55cd4c0f4ab8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cd4c0f4b38 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cd4c0f4bb0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55cd4c0f4f48 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55cd4c0f4d68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cd4c0f4de8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cd4c0f4e60 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55cd4c0f5218 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55cd4c0f5018 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cd4c0f5098 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cd4c0f5138 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55cd4c0f5548 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55cd4c0f52e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cd4c0f5368 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55cd4c0f53e0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55cd4c0f5458 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55cd4c0faba0 <col:93> 'bool' false
|-CXXMethodDecl 0x55cd4c0f5730 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55cd4c0f5618 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55cd4c0f5698 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55cd4c0f5908 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55cd4c0f57f0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55cd4c0f5870 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55cd4c0f5be8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55cd4c0f59c8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55cd4c0f5a40 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55cd4c0f5ac0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55cd4c0f5b38 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55cd4c0f5ed8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55cd4c0f5cb8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55cd4c0f5d30 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55cd4c0f5db0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55cd4c0f5e28 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55cd4c0f6110 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55cd4c0f5fb0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55cd4c0f6030 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55cd4c0f62f8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55cd4c0f61d8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55cd4c0f6258 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55cd4c0f63a8 prev 0x55cd4c0edb48 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55cd4c0f64a0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55cd4c0f6530 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55cd4c0f65a8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55cd4c0f6668 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55cd4c0f6730 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55cd4c0f68a8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55cd4c0f67e0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55cd4c0f6950 <col:24>
| | `-OptimizeNoneAttr 0x55cd4c0f69a8 <col:34>
| |-CXXMethodDecl 0x55cd4c0f69f0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55cd4c0f6ca8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55cd4c0f6aa0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55cd4c0f6b18 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55cd4c0f6b98 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55cd4c0f6d60 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55cd4c0f6d98 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55cd4c0f6e00 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55cd4c0f6e88 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55cd4c0f71a8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55cd4c0f6f40 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55cd4c0f6fb8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55cd4c0f7030 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55cd4c0f70b0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55cd4c0f72c0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55cd4c0fec38 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55cd4c0fec38
| | `-ParmVarDecl 0x55cd4c0fed48 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55cd4c0fede8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55cd4c0fede8
| | `-ParmVarDecl 0x55cd4c0feef8 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55cd4c206720 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55cd4c0f7338 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55cd4c0f73d8 <col:38> "" ""
|-CXXMethodDecl 0x55cd4c0f7468 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55cd4c0f7508 <col:44> "" ""
|-AccessSpecDecl 0x55cd4c0f7578 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55cd4c0f75a0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55cd4c0f76a0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55cd4c0f76f0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cd4c0f7680 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55cd4c0f7660 <col:27> 'int' 4
|-FieldDecl 0x55cd4c0f77a8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55cd4c0f7958 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55cd4c0f7a10 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55cd4c0f8aa0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55cd4c0f8b08 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55cd4c0f8c58 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55cd4c0f8b98 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55cd4c0f8e08 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55cd4c0f8d18 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55cd4c0f8fe8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55cd4c0f8ec8 <col:20> col:23 'int'
| `-ParmVarDecl 0x55cd4c0f8f48 <col:25> col:28 'int'
|-CXXMethodDecl 0x55cd4c0f9290 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55cd4c0f90b0 <col:23> col:26 'int'
| |-ParmVarDecl 0x55cd4c0f9130 <col:28> col:31 'int'
| `-ParmVarDecl 0x55cd4c0f91a8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55cd4c0f9348 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55cd4c0f9410 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55cd4c0f9460 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55cd4c0f94b0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55cd4c0f9690 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55cd4c0f9540 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55cd4c0f95b8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55cd4c0f9938 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55cd4c0f9758 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55cd4c0f97d8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55cd4c0f9850 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55cd4c0f9b58 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55cd4c0f9a08 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55cd4c0f9a88 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55cd4c0f9e90 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55cd4c0f9c18 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55cd4c0f9c98 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55cd4c0f9d10 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55cd4c0f9d90 <col:57> col:60 'int'
|-CXXMethodDecl 0x55cd4c0fa078 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55cd4c0f9f60 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55cd4c0f9fe0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55cd4c0fa1c8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55cd4c0fa138 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55cd4c0fa548 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55cd4c0fa288 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55cd4c0fa308 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55cd4c0fa380 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55cd4c0fa400 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55cd4c0fa660 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class TokenBucketJiffyParameters<unsigned int> (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class TokenRateX<class TokenBucketJiffyParameters<unsigned int> >
         0 |   class TokenBucketJiffyParameters<unsigned int> (base) (empty)
         0 |   TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::token_type _tokens_per_tick
         4 |   TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::token_type _token_scale
         8 |   TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::ticks_type _time_until_full
           | [sizeof=12, dsize=12, align=4,
           |  nvsize=12, nvalign=4]

*** Dumping AST Record Layout
         0 | class TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >
         0 |   TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >::token_type _tokens
         4 |   TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >::time_point_type _time_point
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | class TokenBucketX<class TokenBucketJiffyParameters<unsigned int> >
         0 |   class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > _rate
         0 |     class TokenBucketJiffyParameters<unsigned int> (base) (empty)
         0 |     TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::token_type _tokens_per_tick
         4 |     TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::token_type _token_scale
         8 |     TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::ticks_type _time_until_full
        12 |   class TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > > _bucket
        12 |     TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >::token_type _tokens
        16 |     TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >::time_point_type _time_point
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class RatedSplitter
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   class TokenBucketX<class TokenBucketJiffyParameters<unsigned int> > _tb
       108 |     class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > _rate
       108 |       class TokenBucketJiffyParameters<unsigned int> (base) (empty)
       108 |       TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::token_type _tokens_per_tick
       112 |       TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::token_type _token_scale
       116 |       TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::ticks_type _time_until_full
       120 |     class TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > > _bucket
       120 |       TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >::token_type _tokens
       124 |       TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >::time_point_type _time_point
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cd4c137a20 <../dummy_inc/click/tokenbucket.hh:628:1, line:686:1> line:629:7 class TokenBucketJiffyParameters definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x55cd4c139460 prev 0x55cd4c137a20 <col:1, col:7> col:7 implicit class TokenBucketJiffyParameters
|-AccessSpecDecl 0x55cd4c1394f0 <col:36, col:42> col:36 public
|-TypedefDecl 0x55cd4c139558 <line:632:5, col:15> col:15 referenced token_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x55cd4c139520 'unsigned int' sugar
|   |-TemplateTypeParmType 0x55cd4c12f520 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55cd4c12f4c8 'T'
|   `-BuiltinType 0x55cd4bb85450 'unsigned int'
|-TypedefDecl 0x55cd4c1395b0 <line:635:5, col:29> col:29 referenced time_point_type 'click_jiffies_t':'unsigned int'
| `-TypedefType 0x55cd4be3c9f0 'click_jiffies_t' sugar
|   |-Typedef 0x55cd4be3c928 'click_jiffies_t'
|   `-BuiltinType 0x55cd4bb85450 'unsigned int'
|-TypedefDecl 0x55cd4c139608 <line:638:5, col:40> col:40 referenced duration_type 'click_jiffies_difference_t':'int'
| `-TypedefType 0x55cd4c07c730 'click_jiffies_difference_t' sugar
|   |-Typedef 0x55cd4be3c998 'click_jiffies_difference_t'
|   `-BuiltinType 0x55cd4bb853b0 'int'
|-CXXMethodDecl 0x55cd4c139660 <line:642:5, line:644:5> line:642:28 now 'TokenBucketJiffyParameters::time_point_type ()' static
|-CXXMethodDecl 0x55cd4c1397f8 <line:646:5, line:648:5> line:646:28 time_point 'TokenBucketJiffyParameters<unsigned int>::time_point_type (TokenBucketJiffyParameters::time_point_type)' static
| `-ParmVarDecl 0x55cd4c139730 <col:39, col:55> col:55 t 'TokenBucketJiffyParameters::time_point_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c139a08 <line:656:5, line:662:5> line:656:26 time_monotonic_difference 'TokenBucketJiffyParameters<unsigned int>::duration_type (TokenBucketJiffyParameters::time_point_type, TokenBucketJiffyParameters::time_point_type)' static
| |-ParmVarDecl 0x55cd4c1398d0 <col:52, col:68> col:68 a 'TokenBucketJiffyParameters::time_point_type':'unsigned int'
| `-ParmVarDecl 0x55cd4c139938 <col:71, col:87> col:87 b 'TokenBucketJiffyParameters::time_point_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c139bc8 <line:665:5, line:667:5> line:665:17 time_less 'bool (TokenBucketJiffyParameters::time_point_type, TokenBucketJiffyParameters::time_point_type)' static
| |-ParmVarDecl 0x55cd4c139ac8 <col:27, col:43> col:43 a 'TokenBucketJiffyParameters::time_point_type':'unsigned int'
| `-ParmVarDecl 0x55cd4c139b30 <col:46, col:62> col:62 b 'TokenBucketJiffyParameters::time_point_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c139c88 <line:672:5, line:674:5> line:672:21 frequency 'unsigned int ()' static
|-CXXMethodDecl 0x55cd4c139dc8 <line:677:5, line:679:5> line:677:22 timestamp 'Timestamp (TokenBucketJiffyParameters::time_point_type)' static
| `-ParmVarDecl 0x55cd4c139d38 <col:32, col:48> col:48 x 'TokenBucketJiffyParameters::time_point_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c139f10 <line:682:5, line:684:5> line:682:22 timestamp 'Timestamp (TokenBucketJiffyParameters::duration_type)' static
| `-ParmVarDecl 0x55cd4c139e80 <col:32, col:46> col:46 x 'TokenBucketJiffyParameters::duration_type':'int'
`-CXXDestructorDecl 0x55cd4c148950 <line:629:7> col:7 implicit ~TokenBucketJiffyParameters 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.TokenBucketJiffyParameters = type { i8 }
  NonVirtualBaseLLVMType:%class.TokenBucketJiffyParameters = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cd4c137bc0 <../dummy_inc/click/tokenbucket.hh:57:1, line:191:1> line:58:7 class TokenRateX definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'TokenBucketJiffyParameters<unsigned int>':'TokenBucketJiffyParameters<unsigned int>'
|-TemplateArgument type 'TokenBucketJiffyParameters<unsigned int>'
|-CXXRecordDecl 0x55cd4c13a010 prev 0x55cd4c137bc0 <col:1, col:7> col:7 implicit class TokenRateX
|-AccessSpecDecl 0x55cd4c13a0a0 <col:31, col:37> col:31 public
|-TypedefDecl 0x55cd4c13a0d8 <line:61:5, col:15> col:15 parameter_type 'TokenBucketJiffyParameters<unsigned int>':'TokenBucketJiffyParameters<unsigned int>'
| `-SubstTemplateTypeParmType 0x55cd4c1393c0 'TokenBucketJiffyParameters<unsigned int>' sugar
|   |-TemplateTypeParmType 0x55cd4c119640 'P' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55cd4c1195e8 'P'
|   `-RecordType 0x55cd4c137b00 'TokenBucketJiffyParameters<unsigned int>'
|     `-ClassTemplateSpecialization 0x55cd4c137a20 'TokenBucketJiffyParameters'
|-TypedefDecl 0x55cd4c13a1e0 <line:64:5, col:36> col:36 referenced token_type 'typename TokenBucketJiffyParameters<unsigned int>::token_type':'unsigned int'
| `-ElaboratedType 0x55cd4c13a190 'typename TokenBucketJiffyParameters<unsigned int>::token_type' sugar
|   `-TypedefType 0x55cd4c13a170 'TokenBucketJiffyParameters<unsigned int>::token_type' sugar
|     |-Typedef 0x55cd4c139558 'token_type'
|     `-SubstTemplateTypeParmType 0x55cd4c139520 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55cd4c12f520 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cd4c12f4c8 'T'
|       `-BuiltinType 0x55cd4bb85450 'unsigned int'
|-TypedefDecl 0x55cd4c13b2d0 <line:67:5, col:41> col:41 referenced time_point_type 'typename TokenBucketJiffyParameters<unsigned int>::time_point_type':'unsigned int'
| `-ElaboratedType 0x55cd4c13b280 'typename TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
|   `-TypedefType 0x55cd4c139710 'TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
|     |-Typedef 0x55cd4c1395b0 'time_point_type'
|     `-TypedefType 0x55cd4be3c9f0 'click_jiffies_t' sugar
|       |-Typedef 0x55cd4be3c928 'click_jiffies_t'
|       `-BuiltinType 0x55cd4bb85450 'unsigned int'
|-TypedefDecl 0x55cd4c13b860 <line:70:5, col:69> col:69 referenced ticks_type 'typename make_unsigned<typename TokenBucketJiffyParameters<unsigned int>::duration_type>::type':'unsigned int'
| `-ElaboratedType 0x55cd4c13b810 'typename make_unsigned<typename TokenBucketJiffyParameters<unsigned int>::duration_type>::type' sugar
|   `-TypedefType 0x55cd4c13b7f0 'make_unsigned<int>::type' sugar
|     |-Typedef 0x55cd4c13b780 'type'
|     `-ElaboratedType 0x55cd4c13b730 'typename integer_traits<int>::unsigned_type' sugar
|       `-TypedefType 0x55cd4c13b710 'integer_traits<int>::unsigned_type' sugar
|         |-Typedef 0x55cd4be63e70 'unsigned_type'
|         `-BuiltinType 0x55cd4bb85450 'unsigned int'
|-EnumDecl 0x55cd4c13b8b8 <line:72:5> col:5
| `-EnumConstantDecl 0x55cd4c13ba20 <line:73:2, col:29> col:2 referenced max_tokens 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:72:5)'
|   `-ConstantExpr 0x55cd4c13ba00 <col:15, col:29> 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int' Int: 4294967295
|     `-CStyleCastExpr 0x55cd4c13b9d8 <col:15, col:29> 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int' <NoOp>
|       `-ImplicitCastExpr 0x55cd4c13b9c0 <col:28, col:29> 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x55cd4c11a750 <col:28, col:29> 'int' prefix '-'
|           `-IntegerLiteral 0x55cd4c11a730 <col:29> 'int' 1
|-CXXConstructorDecl 0x55cd4c13baa8 <line:77:5, line:79:5> line:77:5 TokenRateX 'void ()'
|-CXXConstructorDecl 0x55cd4c13bc10 <line:83:5, line:85:5> line:83:14 TokenRateX 'void (bool)'
| `-ParmVarDecl 0x55cd4c13bb60 <col:25, col:30> col:30 unlimited 'bool'
|-CXXConstructorDecl 0x55cd4c13be48 <line:94:5, line:96:5> line:94:5 TokenRateX 'void (TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type, TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| |-ParmVarDecl 0x55cd4c13bce0 <col:16, col:27> col:27 rate 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-ParmVarDecl 0x55cd4c13bd58 <col:33, col:44> col:44 capacity 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c13bfa0 <line:100:5, col:46> col:17 assign 'void (bool)' inline
| `-ParmVarDecl 0x55cd4c13bf10 <col:24, col:41> col:29 unlimited 'bool'
|-CXXMethodDecl 0x55cd4c13c178 <line:108:5, col:60> col:17 assign 'void (TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type, TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type)' inline
| |-ParmVarDecl 0x55cd4c13c068 <col:24, col:35> col:35 rate 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-ParmVarDecl 0x55cd4c13c0e0 <col:41, col:52> col:52 capacity 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c13c238 <line:111:5, line:113:5> line:111:10 unlimited 'bool () const'
|-CXXMethodDecl 0x55cd4c13c2e8 <line:116:5, line:118:5> line:116:10 idle 'bool () const'
|-CXXMethodDecl 0x55cd4c13c3e8 <line:124:5, col:23> col:16 rate 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x55cd4c13c4b8 <line:130:5, line:132:5> line:130:16 capacity 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x55cd4c13c588 <line:135:5, line:137:5> line:135:16 tokens_per_tick 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x55cd4c13c658 <line:140:5, line:142:5> line:140:16 token_scale 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x55cd4c13c778 <line:148:5, line:150:5> line:148:16 time_until_full 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type () const'
|-CXXMethodDecl 0x55cd4c13c898 <line:155:5, line:157:5> line:155:21 now 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type () const'
|-FunctionTemplateDecl 0x55cd4c13cb88 <line:163:5, line:166:5> line:164:21 time_point
| |-TemplateTypeParmDecl 0x55cd4c13c948 <line:163:15, col:24> col:24 typename depth 0 index 0 U
| `-CXXMethodDecl 0x55cd4c13cae8 <line:164:5, line:166:5> line:164:21 time_point 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type (U) const'
|   `-ParmVarDecl 0x55cd4c13c9f8 <col:32, col:34> col:34 time 'U'
|-CXXMethodDecl 0x55cd4c13ce08 <line:174:5, line:176:5> line:174:16 time_monotonic_difference 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type (TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type, TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type) const'
| |-ParmVarDecl 0x55cd4c13cc78 <col:42, col:58> col:58 a 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type':'unsigned int'
| `-ParmVarDecl 0x55cd4c13ccf0 <col:61, col:77> col:77 b 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type':'unsigned int'
|-TypedefDecl 0x55cd4c13ced8 <line:180:5, col:29> col:29 epoch_type 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type':'unsigned int'
| |-TypedefType 0x55cd4c13c830 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type' sugar
| | |-Typedef 0x55cd4c13b2d0 'time_point_type'
| | `-ElaboratedType 0x55cd4c13b280 'typename TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
| |   `-TypedefType 0x55cd4c139710 'TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
| |     |-Typedef 0x55cd4c1395b0 'time_point_type'
| |     `-TypedefType 0x55cd4be3c9f0 'click_jiffies_t' sugar
| |       |-Typedef 0x55cd4be3c928 'click_jiffies_t'
| |       `-BuiltinType 0x55cd4bb85450 'unsigned int'
| `-DeprecatedAttr 0x55cd4c13cf30 <col:55> "" ""
|-CXXMethodDecl 0x55cd4c13cfc0 <line:181:5, col:74> col:23 tokens_per_epoch 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type () const' inline
| `-DeprecatedAttr 0x55cd4c13d098 <col:63> Inherited "" ""
|-CXXMethodDecl 0x55cd4c13d128 <line:182:5, col:75> col:23 epochs_until_full 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type () const' inline
| `-DeprecatedAttr 0x55cd4c13d1d8 <col:64> Inherited "" ""
|-AccessSpecDecl 0x55cd4c13d248 <line:185:2, col:9> col:2 private
|-FieldDecl 0x55cd4c13d280 <line:187:5, col:16> col:16 _tokens_per_tick 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-FieldDecl 0x55cd4c13d2e0 <line:188:5, col:16> col:16 _token_scale 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-FieldDecl 0x55cd4c13d340 <line:189:5, col:16> col:16 _time_until_full 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type':'unsigned int'
`-CXXDestructorDecl 0x55cd4c148870 <line:58:7> col:7 implicit ~TokenRateX 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.TokenRateX = type { i32, i32, i32 }
  NonVirtualBaseLLVMType:%class.TokenRateX = type { i32, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cd4c137df0 <../dummy_inc/click/tokenbucket.hh:325:1, line:577:1> line:326:7 class TokenCounterX definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
|-CXXRecordDecl 0x55cd4c140568 prev 0x55cd4c137df0 <col:1, col:7> col:7 implicit class TokenCounterX
|-AccessSpecDecl 0x55cd4c1405f8 <col:23, col:29> col:23 public
|-TypedefDecl 0x55cd4c140658 <line:329:5, col:15> col:15 rate_type 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >':'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
| `-SubstTemplateTypeParmType 0x55cd4c140620 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >' sugar
|   |-TemplateTypeParmType 0x55cd4c126340 'R' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55cd4c1262f0 'R'
|   `-RecordType 0x55cd4c137ca0 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
|     `-ClassTemplateSpecialization 0x55cd4c137bc0 'TokenRateX'
|-TypedefDecl 0x55cd4c140740 <line:332:5, col:36> col:36 token_type 'typename TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-ElaboratedType 0x55cd4c1406f0 'typename TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type' sugar
|   `-TypedefType 0x55cd4c13b990 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type' sugar
|     |-Typedef 0x55cd4c13a1e0 'token_type'
|     `-ElaboratedType 0x55cd4c13a190 'typename TokenBucketJiffyParameters<unsigned int>::token_type' sugar
|       `-TypedefType 0x55cd4c13a170 'TokenBucketJiffyParameters<unsigned int>::token_type' sugar
|         |-Typedef 0x55cd4c139558 'token_type'
|         `-SubstTemplateTypeParmType 0x55cd4c139520 'unsigned int' sugar
|           |-TemplateTypeParmType 0x55cd4c12f520 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55cd4c12f4c8 'T'
|           `-BuiltinType 0x55cd4bb85450 'unsigned int'
|-TypedefDecl 0x55cd4c140810 <line:335:5, col:41> col:41 time_point_type 'typename TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type':'unsigned int'
| `-ElaboratedType 0x55cd4c1407c0 'typename TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type' sugar
|   `-TypedefType 0x55cd4c13c830 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type' sugar
|     |-Typedef 0x55cd4c13b2d0 'time_point_type'
|     `-ElaboratedType 0x55cd4c13b280 'typename TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
|       `-TypedefType 0x55cd4c139710 'TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
|         |-Typedef 0x55cd4c1395b0 'time_point_type'
|         `-TypedefType 0x55cd4be3c9f0 'click_jiffies_t' sugar
|           |-Typedef 0x55cd4be3c928 'click_jiffies_t'
|           `-BuiltinType 0x55cd4bb85450 'unsigned int'
|-TypedefDecl 0x55cd4c1408e0 <line:338:5, col:36> col:36 ticks_type 'typename TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type':'unsigned int'
| `-ElaboratedType 0x55cd4c140890 'typename TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type' sugar
|   `-TypedefType 0x55cd4c13c710 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type' sugar
|     |-Typedef 0x55cd4c13b860 'ticks_type'
|     `-ElaboratedType 0x55cd4c13b810 'typename make_unsigned<typename TokenBucketJiffyParameters<unsigned int>::duration_type>::type' sugar
|       `-TypedefType 0x55cd4c13b7f0 'make_unsigned<int>::type' sugar
|         |-Typedef 0x55cd4c13b780 'type'
|         `-ElaboratedType 0x55cd4c13b730 'typename integer_traits<int>::unsigned_type' sugar
|           `-TypedefType 0x55cd4c13b710 'integer_traits<int>::unsigned_type' sugar
|             |-Typedef 0x55cd4be63e70 'unsigned_type'
|             `-BuiltinType 0x55cd4bb85450 'unsigned int'
|-EnumDecl 0x55cd4c140938 <line:340:5> col:5
| `-EnumConstantDecl 0x55cd4c140a80 <line:341:2, col:18> col:2 max_tokens 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:340:5)'
|   `-ImplicitCastExpr 0x55cd4c140ad0 <col:15, col:18> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cd4c140a60 <col:15, col:18> 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:72:5)' Int: 4294967295
|       `-DeclRefExpr 0x55cd4c140a30 <col:15, col:18> 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:72:5)' EnumConstant 0x55cd4c13ba20 'max_tokens' 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:72:5)'
|-CXXConstructorDecl 0x55cd4c140b20 <line:347:5, line:349:5> line:347:5 TokenCounterX 'void ()'
|-CXXConstructorDecl 0x55cd4c140c88 <line:356:5, line:358:5> line:356:14 TokenCounterX 'void (bool)'
| `-ParmVarDecl 0x55cd4c140bd8 <col:28, col:33> col:33 full 'bool'
|-CXXMethodDecl 0x55cd4c140eb8 <line:365:5, line:367:5> line:365:16 size 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &) const'
| `-ParmVarDecl 0x55cd4c140dc8 <col:21, col:38> col:38 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
|-CXXMethodDecl 0x55cd4c140fb8 <line:373:5, line:375:5> line:373:16 fraction 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type () const'
|-CXXMethodDecl 0x55cd4c141068 <line:378:5, line:380:5> line:378:10 empty 'bool () const'
|-CXXMethodDecl 0x55cd4c141118 <line:383:5, line:385:5> line:383:10 full 'bool () const'
|-CXXMethodDecl 0x55cd4c141368 <line:393:5, line:395:5> line:393:10 contains 'bool (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type) const'
| |-ParmVarDecl 0x55cd4c1411d8 <col:19, col:36> col:36 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x55cd4c141250 <col:42, col:53> col:53 t 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c1414f8 <line:399:5, line:401:5> line:399:10 contains_fraction 'bool (TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type) const'
| `-ParmVarDecl 0x55cd4c141438 <col:28, col:39> col:39 f 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c1415b0 <line:406:5, line:408:5> line:406:10 clear 'void ()'
|-CXXMethodDecl 0x55cd4c141660 <line:413:5, line:415:5> line:413:10 set_full 'void ()'
|-CXXMethodDecl 0x55cd4c1418a8 <line:422:5, line:425:5> line:422:10 set 'void (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type)'
| |-ParmVarDecl 0x55cd4c141720 <col:14, col:31> col:31 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x55cd4c141798 <col:37, col:48> col:48 t 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c141a38 <line:429:5, line:431:5> line:429:10 set_fraction 'void (TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type)'
| `-ParmVarDecl 0x55cd4c141978 <col:23, col:34> col:34 f 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c141c88 <line:443:5, line:453:5> line:443:10 adjust 'void (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &)'
| |-ParmVarDecl 0x55cd4c141b00 <col:17, col:34> col:34 old_rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x55cd4c141b78 <col:44, col:61> col:61 new_rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
|-CXXMethodDecl 0x55cd4c141e48 <line:464:5, col:38> col:10 refill 'void (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &)'
| `-ParmVarDecl 0x55cd4c141d58 <col:17, col:34> col:34 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
|-CXXMethodDecl 0x55cd4c142088 <line:469:5, col:60> col:10 refill 'void (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::time_point_type)'
| |-ParmVarDecl 0x55cd4c141f10 <col:17, col:34> col:34 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x55cd4c141fb0 <col:40, col:56> col:56 time 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::time_point_type':'unsigned int'
|-FunctionTemplateDecl 0x55cd4c142428 <line:474:5, col:68> col:32 refill
| |-TemplateTypeParmDecl 0x55cd4c142148 <col:15, col:24> col:24 typename depth 0 index 0 U
| `-CXXMethodDecl 0x55cd4c142388 <col:27, col:68> col:32 refill 'void (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, U)'
|   |-ParmVarDecl 0x55cd4c1421f8 <col:39, col:56> col:56 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
|   `-ParmVarDecl 0x55cd4c142270 <col:62, col:64> col:64 time 'U'
|-CXXMethodDecl 0x55cd4c1425e8 <line:482:5, line:484:5> line:482:10 set_time_point 'void (TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::time_point_type)'
| `-ParmVarDecl 0x55cd4c142520 <col:25, col:41> col:41 time 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::time_point_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c1427c0 <line:492:5, line:495:5> line:492:10 remove 'void (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type)'
| |-ParmVarDecl 0x55cd4c1426b0 <col:17, col:34> col:34 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x55cd4c142728 <col:40, col:51> col:51 t 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c142a18 <line:505:5, line:507:5> line:505:10 remove_if 'bool (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type)'
| |-ParmVarDecl 0x55cd4c142890 <col:20, col:37> col:37 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x55cd4c142908 <col:43, col:54> col:54 t 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c142b78 <line:513:5, line:515:5> line:513:10 remove_fraction 'void (TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type)'
| `-ParmVarDecl 0x55cd4c142ae8 <col:26, col:37> col:37 f 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c142d08 <line:523:5, line:529:5> line:523:10 remove_fraction_if 'bool (TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type)'
| `-ParmVarDecl 0x55cd4c142c40 <col:29, col:40> col:40 f 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c142f38 <line:539:5, line:545:5> line:539:16 time_until_contains 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::ticks_type (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type) const'
| |-ParmVarDecl 0x55cd4c142df0 <col:36, col:53> col:53 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x55cd4c142e68 <line:540:8, col:19> col:19 t 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c143118 <line:554:5, line:562:5> line:554:16 time_until_contains_fraction 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::ticks_type (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type) const'
| |-ParmVarDecl 0x55cd4c143008 <col:45, col:62> col:62 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| `-ParmVarDecl 0x55cd4c143080 <line:555:10, col:21> col:21 f 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c147328 <line:566:5, col:114> col:23 epochs_until_contains 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::ticks_type (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type) const' inline
| |-ParmVarDecl 0x55cd4c1431e8 <col:45, col:62> col:62 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| |-ParmVarDecl 0x55cd4c147290 <col:68, col:79> col:79 t 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
| `-DeprecatedAttr 0x55cd4c147418 <col:103> Inherited "" ""
|-CXXMethodDecl 0x55cd4c1475a8 <line:567:5, col:123> col:23 epochs_until_contains_fraction 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::ticks_type (const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &, TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type) const' inline
| |-ParmVarDecl 0x55cd4c147498 <col:54, col:71> col:71 rate 'const TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type &'
| |-ParmVarDecl 0x55cd4c147510 <col:77, col:88> col:88 f 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
| `-DeprecatedAttr 0x55cd4c147668 <col:112> Inherited "" ""
|-AccessSpecDecl 0x55cd4c1476d8 <line:570:3, col:10> col:3 private
|-FieldDecl 0x55cd4c147710 <line:572:5, col:16> col:16 _tokens 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::token_type':'unsigned int'
|-FieldDecl 0x55cd4c147770 <line:573:5, col:21> col:21 _time_point 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::time_point_type':'unsigned int'
|-TypedefDecl 0x55cd4c147d10 <line:575:5, col:85> col:85 cvt_type 'TokenRateConverter<TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type, has_fast_int_multiply<token_type>::value>':'TokenRateConverter<TokenRateX<TokenBucketJiffyParameters<unsigned int> >, true>'
| `-TemplateSpecializationType 0x55cd4c147c70 'TokenRateConverter<TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type, has_fast_int_multiply<token_type>::value>' sugar TokenRateConverter
|   |-TemplateArgument type 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >::rate_type':'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
|   |-TemplateArgument expr
|   | `-ConstantExpr 0x55cd4c147b30 <col:43, col:78> 'bool':'bool' Int: 1
|   |   `-ImplicitCastExpr 0x55cd4c147b18 <col:43, col:78> 'bool':'bool' <LValueToRValue>
|   |     `-DeclRefExpr 0x55cd4c147ae8 <col:43, col:78> 'const bool':'const bool' lvalue Var 0x55cd4be4f9f0 'value' 'const bool':'const bool' non_odr_use_constant
|   `-RecordType 0x55cd4c147c50 'TokenRateConverter<TokenRateX<TokenBucketJiffyParameters<unsigned int> >, true>'
|     `-ClassTemplateSpecialization 0x55cd4c147b50 'TokenRateConverter'
`-CXXDestructorDecl 0x55cd4c148a30 <line:326:7> col:7 implicit ~TokenCounterX 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.TokenCounterX = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.TokenCounterX = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cd4c1380a0 <../dummy_inc/click/tokenbucket.hh:700:1, line:980:1> line:701:7 class TokenBucketX definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'TokenBucketJiffyParameters<unsigned int>'
|-CXXRecordDecl 0x55cd4c138ff8 prev 0x55cd4c1380a0 <col:1, col:7> col:7 implicit class TokenBucketX
|-AccessSpecDecl 0x55cd4c139088 <col:22, col:28> col:22 public
|-TypedefDecl 0x55cd4c1390e8 <line:704:5, col:15> col:15 parameter_type 'TokenBucketJiffyParameters<unsigned int>':'TokenBucketJiffyParameters<unsigned int>'
| `-SubstTemplateTypeParmType 0x55cd4c1390b0 'TokenBucketJiffyParameters<unsigned int>' sugar
|   |-TemplateTypeParmType 0x55cd4c131090 'P' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55cd4c131038 'P'
|   `-RecordType 0x55cd4c137b00 'TokenBucketJiffyParameters<unsigned int>'
|     `-ClassTemplateSpecialization 0x55cd4c137a20 'TokenBucketJiffyParameters'
|-TypedefDecl 0x55cd4c1391c0 <line:707:5, col:27> col:27 rate_type 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >':'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
| `-TemplateSpecializationType 0x55cd4c139150 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >' sugar TokenRateX
|   |-TemplateArgument type 'TokenBucketJiffyParameters<unsigned int>':'TokenBucketJiffyParameters<unsigned int>'
|   `-RecordType 0x55cd4c137ca0 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
|     `-ClassTemplateSpecialization 0x55cd4c137bc0 'TokenRateX'
|-TypedefDecl 0x55cd4c1392c0 <line:710:5, col:38> col:38 counter_type 'TokenCounterX<TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type>':'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >'
| `-TemplateSpecializationType 0x55cd4c139250 'TokenCounterX<TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type>' sugar TokenCounterX
|   |-TemplateArgument type 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type':'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
|   `-RecordType 0x55cd4c137ed0 'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >'
|     `-ClassTemplateSpecialization 0x55cd4c137df0 'TokenCounterX'
|-TypedefDecl 0x55cd4c13d400 <line:713:5, col:44> col:44 token_type 'typename rate_type::token_type':'unsigned int'
| `-ElaboratedType 0x55cd4c13d3b0 'typename rate_type::token_type' sugar
|   `-TypedefType 0x55cd4c13b990 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::token_type' sugar
|     |-Typedef 0x55cd4c13a1e0 'token_type'
|     `-ElaboratedType 0x55cd4c13a190 'typename TokenBucketJiffyParameters<unsigned int>::token_type' sugar
|       `-TypedefType 0x55cd4c13a170 'TokenBucketJiffyParameters<unsigned int>::token_type' sugar
|         |-Typedef 0x55cd4c139558 'token_type'
|         `-SubstTemplateTypeParmType 0x55cd4c139520 'unsigned int' sugar
|           |-TemplateTypeParmType 0x55cd4c12f520 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55cd4c12f4c8 'T'
|           `-BuiltinType 0x55cd4bb85450 'unsigned int'
|-TypedefDecl 0x55cd4c13d4d0 <line:716:5, col:49> col:49 time_point_type 'typename rate_type::time_point_type':'unsigned int'
| `-ElaboratedType 0x55cd4c13d480 'typename rate_type::time_point_type' sugar
|   `-TypedefType 0x55cd4c13c830 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::time_point_type' sugar
|     |-Typedef 0x55cd4c13b2d0 'time_point_type'
|     `-ElaboratedType 0x55cd4c13b280 'typename TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
|       `-TypedefType 0x55cd4c139710 'TokenBucketJiffyParameters<unsigned int>::time_point_type' sugar
|         |-Typedef 0x55cd4c1395b0 'time_point_type'
|         `-TypedefType 0x55cd4be3c9f0 'click_jiffies_t' sugar
|           |-Typedef 0x55cd4be3c928 'click_jiffies_t'
|           `-BuiltinType 0x55cd4bb85450 'unsigned int'
|-TypedefDecl 0x55cd4c13d5a0 <line:719:5, col:44> col:44 ticks_type 'typename rate_type::ticks_type':'unsigned int'
| `-ElaboratedType 0x55cd4c13d550 'typename rate_type::ticks_type' sugar
|   `-TypedefType 0x55cd4c13c710 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::ticks_type' sugar
|     |-Typedef 0x55cd4c13b860 'ticks_type'
|     `-ElaboratedType 0x55cd4c13b810 'typename make_unsigned<typename TokenBucketJiffyParameters<unsigned int>::duration_type>::type' sugar
|       `-TypedefType 0x55cd4c13b7f0 'make_unsigned<int>::type' sugar
|         |-Typedef 0x55cd4c13b780 'type'
|         `-ElaboratedType 0x55cd4c13b730 'typename integer_traits<int>::unsigned_type' sugar
|           `-TypedefType 0x55cd4c13b710 'integer_traits<int>::unsigned_type' sugar
|             |-Typedef 0x55cd4be63e70 'unsigned_type'
|             `-BuiltinType 0x55cd4bb85450 'unsigned int'
|-EnumDecl 0x55cd4c13d5f8 <line:721:5> col:5
| `-EnumConstantDecl 0x55cd4c13d740 <line:722:2, col:26> col:2 max_tokens 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:721:5)'
|   `-ImplicitCastExpr 0x55cd4c13d790 <col:15, col:26> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cd4c13d720 <col:15, col:26> 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:72:5)' Int: 4294967295
|       `-DeclRefExpr 0x55cd4c13d6f0 <col:15, col:26> 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:72:5)' EnumConstant 0x55cd4c13ba20 'max_tokens' 'TokenRateX<TokenBucketJiffyParameters<unsigned int> >::(anonymous enum at ../dummy_inc/click/tokenbucket.hh:72:5)'
|-CXXConstructorDecl 0x55cd4c13d7e0 <line:728:5, line:729:5> line:728:5 TokenBucketX 'void ()'
|-CXXConstructorDecl 0x55cd4c13d948 <line:735:5, line:737:5> line:735:14 TokenBucketX 'void (bool)'
| `-ParmVarDecl 0x55cd4c13d898 <col:27, col:32> col:32 unlimited 'bool'
|-CXXConstructorDecl 0x55cd4c13dba8 <line:748:5, line:750:5> line:748:5 TokenBucketX 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type, TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| |-ParmVarDecl 0x55cd4c13da40 <col:18, col:29> col:29 rate 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-ParmVarDecl 0x55cd4c13dab8 <col:35, col:46> col:46 capacity 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c13dd00 <line:754:5, line:756:5> line:754:10 assign 'void (bool)'
| `-ParmVarDecl 0x55cd4c13dc70 <col:17, col:34> col:22 unlimited 'bool'
|-CXXMethodDecl 0x55cd4c13ded8 <line:771:5, line:773:5> line:771:10 assign 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type, TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| |-ParmVarDecl 0x55cd4c13ddc8 <col:17, col:28> col:28 rate 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-ParmVarDecl 0x55cd4c13de40 <col:34, col:45> col:45 capacity 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c13e0b8 <line:784:5, line:788:5> line:784:10 assign_adjust 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type, TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| |-ParmVarDecl 0x55cd4c13dfa8 <col:24, col:35> col:35 rate 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-ParmVarDecl 0x55cd4c13e020 <col:41, col:52> col:52 capacity 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c13e178 <line:791:5, line:793:5> line:791:10 unlimited 'bool () const'
|-CXXMethodDecl 0x55cd4c13e228 <line:796:5, line:798:5> line:796:10 idle 'bool () const'
|-CXXMethodDecl 0x55cd4c13e328 <line:804:5, line:806:5> line:804:16 rate 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x55cd4c13e3f8 <line:812:5, line:814:5> line:812:16 capacity 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x55cd4c13e4c8 <line:820:5, line:822:5> line:820:16 size 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x55cd4c13e598 <line:828:5, line:830:5> line:828:16 fraction 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type () const'
|-CXXMethodDecl 0x55cd4c13e648 <line:833:5, line:835:5> line:833:10 empty 'bool () const'
|-CXXMethodDecl 0x55cd4c13e6f8 <line:838:5, line:840:5> line:838:10 full 'bool () const'
|-CXXMethodDecl 0x55cd4c13e8a8 <line:846:5, line:848:5> line:846:10 contains 'bool (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type) const'
| `-ParmVarDecl 0x55cd4c13e7b8 <col:19, col:30> col:30 t 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c13ea00 <line:852:5, line:854:5> line:852:10 contains_fraction 'bool (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type) const'
| `-ParmVarDecl 0x55cd4c13e970 <col:28, col:39> col:39 f 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c13eab8 <line:859:5, line:861:5> line:859:10 clear 'void ()'
|-CXXMethodDecl 0x55cd4c13eb68 <line:866:5, line:868:5> line:866:10 set_full 'void ()'
|-CXXMethodDecl 0x55cd4c13ece8 <line:874:5, line:876:5> line:874:10 set 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| `-ParmVarDecl 0x55cd4c13ec28 <col:14, col:25> col:25 t 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c13ee40 <line:880:5, line:882:5> line:880:10 set_fraction 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| `-ParmVarDecl 0x55cd4c13edb0 <col:23, col:34> col:34 f 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c13eef8 <line:892:5, line:894:5> line:892:10 refill 'void ()'
|-CXXMethodDecl 0x55cd4c13f0a8 <line:897:5, line:899:5> line:897:10 refill 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::time_point_type)'
| `-ParmVarDecl 0x55cd4c13efe0 <col:17, col:33> col:33 time 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::time_point_type':'unsigned int'
|-FunctionTemplateDecl 0x55cd4c13f368 <line:902:5, line:904:5> line:902:32 refill
| |-TemplateTypeParmDecl 0x55cd4c13f160 <col:15, col:24> col:24 typename depth 0 index 0 U
| `-CXXMethodDecl 0x55cd4c13f2c8 <col:27, line:904:5> line:902:32 refill 'void (U)'
|   `-ParmVarDecl 0x55cd4c13f208 <col:39, col:41> col:41 time 'U'
|-CXXMethodDecl 0x55cd4c13f4e8 <line:911:5, line:913:5> line:911:10 set_time_point 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::time_point_type)'
| `-ParmVarDecl 0x55cd4c13f458 <col:25, col:41> col:41 time 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::time_point_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c13f640 <line:920:5, line:922:5> line:920:10 remove 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| `-ParmVarDecl 0x55cd4c13f5b0 <col:17, col:28> col:28 t 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c13f7c8 <line:931:5, line:933:5> line:931:10 remove_if 'bool (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| `-ParmVarDecl 0x55cd4c13f708 <col:20, col:31> col:31 t 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c13f920 <line:939:5, line:941:5> line:939:10 remove_fraction 'void (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| `-ParmVarDecl 0x55cd4c13f890 <col:26, col:37> col:37 f 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c13fa78 <line:949:5, line:951:5> line:949:10 remove_fraction_if 'bool (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type)'
| `-ParmVarDecl 0x55cd4c13f9e8 <col:29, col:40> col:40 f 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c13fc58 <line:957:5, line:959:5> line:957:16 time_until_contains 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::ticks_type (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type) const'
| `-ParmVarDecl 0x55cd4c13fb60 <col:36, col:47> col:47 t 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c13fde8 <line:965:5, line:967:5> line:965:16 time_until_contains_fraction 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::ticks_type (TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::ticks_type) const'
| `-ParmVarDecl 0x55cd4c13fd20 <col:45, col:56> col:56 f 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::ticks_type':'unsigned int'
|-CXXMethodDecl 0x55cd4c140098 <line:971:5, col:114> col:23 epochs_until_contains 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::ticks_type (const TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type &, TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type) const' inline
| |-ParmVarDecl 0x55cd4c13ff08 <col:45, col:62> col:62 rate 'const TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type &'
| |-ParmVarDecl 0x55cd4c13ff80 <col:68, col:79> col:79 t 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-DeprecatedAttr 0x55cd4c140188 <col:103> Inherited "" ""
|-CXXMethodDecl 0x55cd4c140318 <line:972:5, col:123> col:23 epochs_until_contains_fraction 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::ticks_type (const TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type &, TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type) const' inline
| |-ParmVarDecl 0x55cd4c140208 <col:54, col:71> col:71 rate 'const TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type &'
| |-ParmVarDecl 0x55cd4c140280 <col:77, col:88> col:88 f 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::token_type':'unsigned int'
| `-DeprecatedAttr 0x55cd4c1403d8 <col:112> Inherited "" ""
|-AccessSpecDecl 0x55cd4c140448 <line:975:3, col:10> col:3 private
|-FieldDecl 0x55cd4c140480 <line:977:5, col:15> col:15 _rate 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::rate_type':'TokenRateX<TokenBucketJiffyParameters<unsigned int> >'
|-FieldDecl 0x55cd4c147d80 <line:978:5, col:18> col:18 _bucket 'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >::counter_type':'TokenCounterX<TokenRateX<TokenBucketJiffyParameters<unsigned int> > >'
`-CXXDestructorDecl 0x55cd4c148790 <line:701:7> col:7 implicit ~TokenBucketX 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.TokenBucketX = type { %class.TokenRateX, %class.TokenCounterX }
  NonVirtualBaseLLVMType:%class.TokenBucketX = type { %class.TokenRateX, %class.TokenCounterX }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cd4c138298 <../elements/standard/ratedsplitter.hh:65:1, line:86:1> line:65:7 referenced class RatedSplitter definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55cd4c1383f8 <col:1, col:7> col:7 implicit referenced class RatedSplitter
|-AccessSpecDecl 0x55cd4c138488 <col:40, col:46> col:40 public
|-CXXConstructorDecl 0x55cd4c138510 <line:67:5, col:19> col:5 used RatedSplitter 'void ()'
|-CXXMethodDecl 0x55cd4c138610 <line:69:5, col:62> col:17 used class_name 'const char *() const'
| |-Overrides: [ 0x55cd4c0eaaf8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55cd4c148b60 <col:36, col:62>
|   `-ReturnStmt 0x55cd4c148b50 <col:38, col:45>
|     `-ImplicitCastExpr 0x55cd4c148b38 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55cd4c148b10 <col:45> 'const char [14]' lvalue "RatedSplitter"
|-CXXMethodDecl 0x55cd4c1386d8 <line:70:5, col:58> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x55cd4c0eabc0 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55cd4c148bc0 <col:36, col:58>
|   `-ReturnStmt 0x55cd4c148bb0 <col:38, col:45>
|     `-ImplicitCastExpr 0x55cd4c148b98 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55cd4c148b78 <col:45> 'const char []' lvalue Var 0x55cd4c0eaef8 'PORTS_1_1X2' 'const char []'
|-CXXMethodDecl 0x55cd4c1387a0 <line:71:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x55cd4c0eaf88 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x55cd4c148c20 <col:36, col:51>
|   `-ReturnStmt 0x55cd4c148c10 <col:38, col:45>
|     `-ImplicitCastExpr 0x55cd4c148bf8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55cd4c148bd8 <col:45> 'const char []' lvalue Var 0x55cd4c0eb0d0 'PUSH' 'const char []'
|-CXXMethodDecl 0x55cd4c138860 <line:72:5, col:64> col:10 is_bandwidth 'bool () const'
| `-CompoundStmt 0x55cd4c148d68 <col:31, col:64>
|   `-ReturnStmt 0x55cd4c148d58 <col:33, col:59>
|     `-BinaryOperator 0x55cd4c148d38 <col:40, col:59> 'bool' '=='
|       |-ImplicitCastExpr 0x55cd4c148d08 <col:40, col:54> 'int' <IntegralCast>
|       | `-ImplicitCastExpr 0x55cd4c148cf0 <col:40, col:54> 'char' <LValueToRValue>
|       |   `-ArraySubscriptExpr 0x55cd4c148cb8 <col:40, col:54> 'const char' lvalue
|       |     |-CXXMemberCallExpr 0x55cd4c148c78 <col:40, col:51> 'const char *'
|       |     | `-MemberExpr 0x55cd4c148c48 <col:40> '<bound member function type>' ->class_name 0x55cd4c138610
|       |     |   `-CXXThisExpr 0x55cd4c148c38 <col:40> 'const RatedSplitter *' implicit this
|       |     `-IntegerLiteral 0x55cd4c148c98 <col:53> 'int' 0
|       `-ImplicitCastExpr 0x55cd4c148d20 <col:59> 'int' <IntegralCast>
|         `-CharacterLiteral 0x55cd4c148cd8 <col:59> 'char' 66
|-CXXMethodDecl 0x55cd4c138b30 <line:74:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55cd4c0ec390 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55cd4c1389e0 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x55cd4c138a58 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXMethodDecl 0x55cd4c138c00 <line:75:5, col:54> col:10 can_live_reconfigure 'bool () const'
| |-Overrides: [ 0x55cd4c0eede0 Element::can_live_reconfigure 'bool () const' ]
| `-CompoundStmt 0x55cd4c148da0 <col:39, col:54>
|   `-ReturnStmt 0x55cd4c148d90 <col:41, col:48>
|     `-CXXBoolLiteralExpr 0x55cd4c148d80 <col:48> 'bool' true
|-CXXMethodDecl 0x55cd4c138cc0 <line:76:5, col:23> col:10 add_handlers 'void ()'
| `-Overrides: [ 0x55cd4c0ec460 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x55cd4c138e88 <line:78:5, col:33> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x55cd4c0e9968 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x55cd4c138d78 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x55cd4c138df0 <col:25, col:32> col:33 'Packet *'
|-AccessSpecDecl 0x55cd4c138f38 <line:80:2, col:11> col:2 protected
|-FieldDecl 0x55cd4c147de8 <line:82:5, col:17> col:17 _tb 'TokenBucket':'TokenBucketX<TokenBucketJiffyParameters<unsigned int> >'
|-CXXMethodDecl 0x55cd4c147f60 <line:84:5, col:49> col:19 read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55cd4c147e48 <col:32, col:40> col:41 'Element *'
| `-ParmVarDecl 0x55cd4c147ec8 <col:43, col:48> col:49 'void *'
|-CXXConstructorDecl 0x55cd4c148038 <line:65:7> col:7 implicit RatedSplitter 'void (const RatedSplitter &)' inline default_delete noexcept-unevaluated 0x55cd4c148038
| `-ParmVarDecl 0x55cd4c148148 <col:7> col:7 'const RatedSplitter &'
|-CXXConstructorDecl 0x55cd4c1481e8 <col:7> col:7 implicit RatedSplitter 'void (RatedSplitter &&)' inline default_delete noexcept-unevaluated 0x55cd4c1481e8
| `-ParmVarDecl 0x55cd4c1482f8 <col:7> col:7 'RatedSplitter &&'
|-CXXMethodDecl 0x55cd4c148398 <col:7> col:7 implicit operator= 'RatedSplitter &(const RatedSplitter &)' inline default_delete noexcept-unevaluated 0x55cd4c148398
| `-ParmVarDecl 0x55cd4c1484a8 <col:7> col:7 'const RatedSplitter &'
|-CXXMethodDecl 0x55cd4c148518 <col:7> col:7 implicit operator= 'RatedSplitter &(RatedSplitter &&)' inline default_delete noexcept-unevaluated 0x55cd4c148518
| `-ParmVarDecl 0x55cd4c148628 <col:7> col:7 'RatedSplitter &&'
`-CXXDestructorDecl 0x55cd4c1486b0 <col:7> col:7 implicit used ~RatedSplitter 'void () noexcept' inline default
  |-Overrides: [ 0x55cd4c0e9698 Element::~Element 'void () noexcept' ]
  `-CompoundStmt 0x55cd4c206800 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.RatedSplitter = type { %class.Element.base, %class.TokenBucketX }
  NonVirtualBaseLLVMType:%class.RatedSplitter = type { %class.Element.base, %class.TokenBucketX }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class BandwidthRatedSplitter
         0 |   class RatedSplitter (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       108 |     class TokenBucketX<class TokenBucketJiffyParameters<unsigned int> > _tb
       108 |       class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > _rate
       108 |         class TokenBucketJiffyParameters<unsigned int> (base) (empty)
       108 |         TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::token_type _tokens_per_tick
       112 |         TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::token_type _token_scale
       116 |         TokenRateX<class TokenBucketJiffyParameters<unsigned int> >::ticks_type _time_until_full
       120 |       class TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > > _bucket
       120 |         TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >::token_type _tokens
       124 |         TokenCounterX<class TokenRateX<class TokenBucketJiffyParameters<unsigned int> > >::time_point_type _time_point
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cd4c148db8 <../elements/standard/bwratedsplitter.hh:49:1, line:57:1> line:49:7 class BandwidthRatedSplitter definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial
|-public 'RatedSplitter'
|-CXXRecordDecl 0x55cd4c148f18 <col:1, col:7> col:7 implicit referenced class BandwidthRatedSplitter
|-AccessSpecDecl 0x55cd4c148fa8 <col:55, col:61> col:55 public
|-CXXConstructorDecl 0x55cd4c149030 <line:51:5, col:28> col:5 BandwidthRatedSplitter 'void ()'
|-CXXMethodDecl 0x55cd4c149130 <line:53:5, col:71> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55cd4c138610 RatedSplitter::class_name 'const char *() const' ]
| `-CompoundStmt 0x55cd4c149b88 <col:36, col:71>
|   `-ReturnStmt 0x55cd4c149b78 <col:38, col:45>
|     `-ImplicitCastExpr 0x55cd4c149b60 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55cd4c149b30 <col:45> 'const char [23]' lvalue "BandwidthRatedSplitter"
|-CXXMethodDecl 0x55cd4c1492f8 <line:55:5, col:33> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x55cd4c138e88 RatedSplitter::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x55cd4c1491e8 <col:15, col:19> col:19 port 'int'
| `-ParmVarDecl 0x55cd4c149260 <col:25, col:32> col:33 'Packet *'
|-CXXConstructorDecl 0x55cd4c1493d8 <line:49:7> col:7 implicit BandwidthRatedSplitter 'void (const BandwidthRatedSplitter &)' inline default_delete noexcept-unevaluated 0x55cd4c1493d8
| `-ParmVarDecl 0x55cd4c1494e8 <col:7> col:7 'const BandwidthRatedSplitter &'
|-CXXConstructorDecl 0x55cd4c149588 <col:7> col:7 implicit BandwidthRatedSplitter 'void (BandwidthRatedSplitter &&)' inline default_delete noexcept-unevaluated 0x55cd4c149588
| `-ParmVarDecl 0x55cd4c149698 <col:7> col:7 'BandwidthRatedSplitter &&'
|-CXXMethodDecl 0x55cd4c149738 <col:7> col:7 implicit operator= 'BandwidthRatedSplitter &(const BandwidthRatedSplitter &)' inline default_delete noexcept-unevaluated 0x55cd4c149738
| `-ParmVarDecl 0x55cd4c149848 <col:7> col:7 'const BandwidthRatedSplitter &'
|-CXXMethodDecl 0x55cd4c1498b8 <col:7> col:7 implicit operator= 'BandwidthRatedSplitter &(BandwidthRatedSplitter &&)' inline default_delete noexcept-unevaluated 0x55cd4c1498b8
| `-ParmVarDecl 0x55cd4c1499c8 <col:7> col:7 'BandwidthRatedSplitter &&'
`-CXXDestructorDecl 0x55cd4c149a50 <col:7> col:7 implicit ~BandwidthRatedSplitter 'void ()' inline default noexcept-unevaluated 0x55cd4c149a50
  `-Overrides: [ 0x55cd4c1486b0 RatedSplitter::~RatedSplitter 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.BandwidthRatedSplitter = type { %class.RatedSplitter }
  NonVirtualBaseLLVMType:%class.BandwidthRatedSplitter = type { %class.RatedSplitter }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cd4bea7e70 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cd4bea7f88 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55cd4bea8018 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55cd4bea80e8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55cd4bea81d0 <line:58:5, col:32> col:12 used operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55cd4bea83e8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55cd4bea8290 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cd4bea8598 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55cd4bea84a0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55cd4bea86e0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55cd4bea8650 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55cd4bea8828 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55cd4bea8798 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cd4bea8970 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55cd4bea88e0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cd4bea8a38 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x55cd4bea8b80 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x55cd4bea8af0 <col:28> col:31 'int'
|-CXXMethodDecl 0x55cd4bea8c48 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x55cd4bea8d90 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55cd4bea8d00 <col:28> col:31 'int'
|-CXXMethodDecl 0x55cd4bea8f08 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55cd4bea8e48 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cd4bea9050 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55cd4bea8fc0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cd4bea9118 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55cd4bea92d8 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55cd4bea91c8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55cd4bea9240 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cd4bea9528 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55cd4bea9398 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55cd4bea9410 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55cd4bea95d8 <col:86> "" ""
|-CXXMethodDecl 0x55cd4bea9848 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55cd4bea96b8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55cd4bea9730 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cd4bea99f8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55cd4bea9908 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55cd4bea9ba8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55cd4bea9ab0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55cd4bea9e78 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55cd4bea9c60 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55cd4bea9cd8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55cd4bea9d50 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cd4beaa158 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55cd4bea9f40 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55cd4bea9fb8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55cd4beaa030 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55cd4beaa210 <col:115> "" ""
|-AccessSpecDecl 0x55cd4beaa280 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55cd4beaa2b8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cd4beab7d0 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55cd4beab7d0
| `-ParmVarDecl 0x55cd4beab8d8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55cd4beab978 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55cd4beab978
| `-ParmVarDecl 0x55cd4beaba88 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55cd4bee10b8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55cd4c0d2eb0 <col:7>
|-CXXConstructorDecl 0x55cd4bee1190 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55cd4bee1190
| `-ParmVarDecl 0x55cd4bee12a8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55cd4bee1318 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55cd4bee1318
| `-ParmVarDecl 0x55cd4bee1428 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55cd4c0d58b0 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cd4c0c1a58 prev 0x55cd4c0b6c60 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cd4c0c1b50 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55cd4c0c1c40 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55cd4c0c1d68 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55cd4c0c1ee8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55cd4c0c2068 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55cd4c0c21e8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55cd4c0d3018 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55cd4c0d3888 <col:11>
|-CXXDestructorDecl 0x55cd4c0d30f0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55cd4c0d3228 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55cd4c0d3228
| `-ParmVarDecl 0x55cd4c0d3338 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55cd4c0d33d8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55cd4c0d33d8
| `-ParmVarDecl 0x55cd4c0d34e8 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55cd4c0d62a8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55cd4c0d63b8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55cd4c0d6638 <col:11>
|   `-ReturnStmt 0x55cd4c0d6628 <col:11>
|     `-UnaryOperator 0x55cd4c0d6610 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55cd4c0d6600 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55cd4c0d6428 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55cd4c0d6428
  `-ParmVarDecl 0x55cd4c0d6538 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cd4c0c2250 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cd4c0c2368 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55cd4c0c2408 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55cd4c0c2470 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55cd4c0c24d8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55cd4c0c2540 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55cd4c0c25a0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55cd4c0c2660 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55cd4c0c26c0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55cd4c0c2720 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55cd4c0d2f28 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55cd4c0c2408 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55cd4c0d3898 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55cd4c0d38f0 <col:12>
|-CXXConstructorDecl 0x55cd4c0d3558 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55cd4c0d3558
| `-ParmVarDecl 0x55cd4c0d3668 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55cd4c0d3708 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55cd4c0d3708
| `-ParmVarDecl 0x55cd4c0d3818 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55cd4c0d5990 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cd4c0b0370 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55cd4c0b0488 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55cd4c0b0518 <col:16, col:22> col:16 public
|-EnumDecl 0x55cd4c0b0540 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55cd4c0b0640 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55cd4c0b0720 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0b0620 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55cd4c0b0600 <col:21> 'int' 28
| `-EnumConstantDecl 0x55cd4c0b06d0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55cd4c0b0738 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cd4c0b06b0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55cd4c0b0690 <col:22> 'int' 64
|-CXXMethodDecl 0x55cd4c0b0a78 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55cd4c0b0760 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55cd4c0b07e0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55cd4c0b0858 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55cd4c0b08d0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55cd4c0b0b38 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55cd4c0b0d38 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55cd4c0b0bb0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55cd4c0b0c28 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55cd4c0b0de8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55cd4c0b0f48 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55cd4c0b0e58 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55cd4c0b0ff0 <col:72> warn_unused_result ""
|-TypedefDecl 0x55cd4c0b1350 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55cd4c0b12e0 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55cd4c0b1280 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55cd4c0b1240 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55cd4bb85310 'void'
|       |-PointerType 0x55cd4be30710 'unsigned char *'
|       | `-BuiltinType 0x55cd4bb85410 'unsigned char'
|       |-TypedefType 0x55cd4bc2cac0 'size_t' sugar
|       | |-Typedef 0x55cd4bbf5af0 'size_t'
|       | `-BuiltinType 0x55cd4bb85470 'unsigned long'
|       `-PointerType 0x55cd4bb85b10 'void *'
|         `-BuiltinType 0x55cd4bb85310 'void'
|-CXXMethodDecl 0x55cd4c0b17c8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55cd4c0b13c0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55cd4c0b1438 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55cd4c0b14d0 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55cd4c0b1550 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55cd4c0cbec0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55cd4c0cbea8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55cd4c0cbe70 <col:58> 'int' 0
| |-ParmVarDecl 0x55cd4c0b15d0 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55cd4c0cbee8 <col:76> 'int' 0
| |-ParmVarDecl 0x55cd4c0b1650 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55cd4c0cbf08 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55cd4c0b1898 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55cd4c0b1918 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55cd4c0b19d8 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55cd4c0b1a78 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0b1ad0 <col:30>
|-CXXMethodDecl 0x55cd4c0b1b48 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55cd4c0b1be8 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0b1c40 <col:30>
|-CXXMethodDecl 0x55cd4c0b1cb8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55cd4c0b1d58 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55cd4c0b1e08 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55cd4c0b1ea8 <col:20>
| |-OptimizeNoneAttr 0x55cd4c0b1f00 <col:30>
| `-WarnUnusedResultAttr 0x55cd4c0b1f28 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55cd4c0b1f80 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55cd4c0b2020 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0b2078 <col:30>
|-CXXMethodDecl 0x55cd4c0b20c8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55cd4c0b2168 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0b21c0 <col:30>
|-CXXMethodDecl 0x55cd4c0b2208 <line:81:5, col:58> col:49 used length 'uint32_t () const'
| |-NoInlineAttr 0x55cd4c0b22a8 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0b2300 <col:30>
|-CXXMethodDecl 0x55cd4c0b2348 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55cd4c0b2408 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55cd4c0b24d0 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55cd4c0b2598 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55cd4c0b2658 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55cd4c0b2778 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55cd4c0cbfd0 <col:54, line:99:5>
|   `-ReturnStmt 0x55cd4c0cbfc0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55cd4c0cbfa8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55cd4c0cbf78 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55cd4c0c2a58
|         `-CXXThisExpr 0x55cd4c0cbf68 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55cd4c0b2918 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55cd4c0b2828 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55cd4c0cc080 <col:67, line:103:5>
|   `-BinaryOperator 0x55cd4c0cc060 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55cd4c0cbff8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55cd4c0c2a58
|     | `-CXXThisExpr 0x55cd4c0cbfe8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55cd4c0cc048 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55cd4c0cc028 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55cd4c0b2828 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55cd4c0b2a10 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55cd4c0cc100 <col:33, line:107:5>
|   `-ReturnStmt 0x55cd4c0cc0f0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55cd4c0cc0d8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55cd4c0cc0a8 <col:16> 'void *' lvalue ->_destructor_argument 0x55cd4c0c2ac0
|         `-CXXThisExpr 0x55cd4c0cc098 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55cd4c0b2ad0 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55cd4c0cc730 <col:25, line:113:5>
|   |-ParenExpr 0x55cd4c0cc478 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55cd4c0cc448 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55cd4c0cc1b8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55cd4c0cc190 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55cd4c0cc158 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55cd4c0cc128 <col:24> '<bound member function type>' ->shared 0x55cd4c0b1b48
|   |   |       `-ImplicitCastExpr 0x55cd4c0cc178 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55cd4c0cc118 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55cd4c0cc218 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cd4c0cc1f8 <col:42> 'int' 0
|   |   `-CallExpr 0x55cd4c0cc3a8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55cd4c0cc390 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cd4c0cc370 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cd4bc23880 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cd4c0cc3e8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0cc288 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55cd4c0cc400 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0cc2b0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cd4c0cc418 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cd4c0cc2e8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55cd4c0cc430 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cd4c0cc358 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cd4c0cc340 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cd4c0cc308 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55cd4c0cc678 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55cd4c0cc4a8 <col:2> 'unsigned char *' lvalue ->_head 0x55cd4c0c2860
|   | | `-CXXThisExpr 0x55cd4c0cc498 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55cd4c0cc660 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55cd4c0cc640 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55cd4c0cc4e8 <col:10> 'unsigned char *' lvalue ->_data 0x55cd4c0c28c8
|   |     | `-CXXThisExpr 0x55cd4c0cc4d8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55cd4c0cc628 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55cd4c0cc608 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55cd4c0cc528 <col:18> 'unsigned char *' lvalue ->_tail 0x55cd4c0c2930
|   |         | `-CXXThisExpr 0x55cd4c0cc518 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55cd4c0cc5f0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55cd4c0cc5d0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55cd4c0cc568 <col:26> 'unsigned char *' lvalue ->_end 0x55cd4c0c2998
|   |             | `-CXXThisExpr 0x55cd4c0cc558 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55cd4c0cc5b8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55cd4c0cc598 <col:33> 'int' 0
|   `-BinaryOperator 0x55cd4c0cc710 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55cd4c0cc6a8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55cd4c0c2a58
|     | `-CXXThisExpr 0x55cd4c0cc698 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55cd4c0cc6f8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55cd4c0cc6d8 <col:16> 'int' 0
|-CXXMethodDecl 0x55cd4c0b2c10 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55cd4c0b2b80 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55cd4c0b2cb8 <col:20>
| |-OptimizeNoneAttr 0x55cd4c0b2d10 <col:30>
| `-WarnUnusedResultAttr 0x55cd4c0b2d38 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55cd4c0b2e08 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55cd4c0b2d78 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55cd4c0b2eb0 <col:20>
| |-OptimizeNoneAttr 0x55cd4c0b2f08 <col:30>
| `-WarnUnusedResultAttr 0x55cd4c0b2f30 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55cd4c0b3068 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55cd4c0b2f70 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55cd4c0b3110 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55cd4c0b3210 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55cd4c0b3180 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55cd4c0b32b8 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0b3310 <col:30>
|-CXXMethodDecl 0x55cd4c0b33d8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55cd4c0b3348 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55cd4c0b3480 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55cd4c0b3580 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55cd4c0b34f0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55cd4c0b3628 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55cd4c0b3728 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55cd4c0b3698 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55cd4c0b37d0 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0b3828 <col:30>
|-CXXMethodDecl 0x55cd4c0b39b8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55cd4c0b3868 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55cd4c0b38e0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55cd4c0cbf28 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55cd4c0b3a68 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55cd4c0b3c68 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55cd4c0b3ae0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55cd4c0b3b58 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cd4c0b3e78 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55cd4c0b3d28 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55cd4c0b3da0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cd4c0b4088 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55cd4c0b3f38 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55cd4c0b3fb8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55cd4c0cbf38 <col:39> 'int' 0
|-CXXMethodDecl 0x55cd4c0b4158 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55cd4c0b4220 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55cd4c0b42e8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55cd4c0b43a8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55cd4c0b4470 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55cd4c0b45b8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55cd4c0b4528 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55cd4c0b4788 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55cd4c0b4678 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55cd4c0b46f0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cd4c0b4858 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55cd4c0b4918 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55cd4c0b49b8 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0b4a10 <col:30>
|-CXXMethodDecl 0x55cd4c0b4a60 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55cd4c0b4b00 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0b4b58 <col:30>
|-CXXMethodDecl 0x55cd4c0b4ba8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55cd4c0b4c68 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55cd4c0b4d30 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55cd4c0b4dd0 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0b4e28 <col:30>
|-CXXMethodDecl 0x55cd4c0b4f78 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55cd4c0b4e68 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55cd4c0b4ee0 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cd4c0b50c8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55cd4c0b5038 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cd4c0b51a0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55cd4c0b5260 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55cd4c0b5300 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0b5358 <col:30>
|-CXXMethodDecl 0x55cd4c0b53a8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55cd4c0b5448 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0b54a0 <col:30>
|-CXXMethodDecl 0x55cd4c0b54f0 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55cd4c0b55b8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55cd4c0b5658 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0b56b0 <col:30>
|-CXXMethodDecl 0x55cd4c0b56f8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55cd4c0b5818 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55cd4c0b5988 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55cd4c0b58c8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55cd4c0b5a78 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55cd4c0b5b18 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0b5b70 <col:30>
|-CXXMethodDecl 0x55cd4c0b5bc0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55cd4c0b5c80 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55cd4c0b5eb8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55cd4c0b5d30 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55cd4c0b5da8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55cd4c0b5f68 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0b5fc0 <col:30>
|-CXXMethodDecl 0x55cd4c0b6068 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55cd4c0b6108 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0b6160 <col:30>
|-CXXMethodDecl 0x55cd4c0b61b0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55cd4c0b6250 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0b62a8 <col:30>
|-CXXMethodDecl 0x55cd4c0b62f0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55cd4c0b6390 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0b63e8 <col:30>
|-CXXMethodDecl 0x55cd4c0b64e8 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55cd4c0b6420 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55cd4c0b6590 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0b65e8 <col:30>
|-CXXMethodDecl 0x55cd4c0b67a8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55cd4c0b6620 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55cd4c0b6698 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55cd4c0b6858 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0b68b0 <col:30>
|-CXXMethodDecl 0x55cd4c0b6958 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55cd4c0b6a78 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55cd4c0b6b98 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55cd4c0b6c38 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55cd4c0b6c60 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55cd4c0b6d88 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55cd4c0b6e28 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0b6e80 <col:30>
|-CXXMethodDecl 0x55cd4c0b6f28 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55cd4c0b6fc8 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0b7020 <col:30>
|-AccessSpecDecl 0x55cd4c0b7048 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55cd4c0b7070 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55cd4c0b7170 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55cd4c0b71c0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cd4c0b7150 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55cd4c0b7130 <col:14> 'int' 48
|-CXXMethodDecl 0x55cd4c0b7228 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55cd4c0b72c8 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0b7320 <col:30>
|-CXXMethodDecl 0x55cd4c0b7398 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55cd4c0b7438 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0b7490 <col:30>
|-CXXMethodDecl 0x55cd4c0b7558 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55cd4c0b74c8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55cd4c0b76f8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55cd4c0b7898 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55cd4c0b77a8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55cd4c0b7940 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55cd4c0b7a40 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55cd4c0b7df0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0b7a20 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55cd4c0b7a00 <col:9> 'int' 0
| |-EnumConstantDecl 0x55cd4c0b7ad0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55cd4c0b7e08 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0b7ab0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55cd4c0b7a90 <col:14> 'int' 1
| |-EnumConstantDecl 0x55cd4c0b7b60 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55cd4c0b7e20 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0b7b40 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55cd4c0b7b20 <col:14> 'int' 2
| |-EnumConstantDecl 0x55cd4c0b7bf0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55cd4c0b7e38 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0b7bd0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55cd4c0b7bb0 <col:14> 'int' 3
| |-EnumConstantDecl 0x55cd4c0b7c80 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55cd4c0b7e50 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0b7c60 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55cd4c0b7c40 <col:13> 'int' 4
| |-EnumConstantDecl 0x55cd4c0b7d10 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55cd4c0b7e68 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0b7cf0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55cd4c0b7cd0 <col:13> 'int' 5
| `-EnumConstantDecl 0x55cd4c0b7da0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55cd4c0b7e80 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cd4c0b7d80 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55cd4c0b7d60 <col:14> 'int' 6
|-CXXMethodDecl 0x55cd4c0b7ee8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55cd4c0b7f88 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0b7fe0 <col:30>
|-CXXMethodDecl 0x55cd4c0b80d8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55cd4c0b8018 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55cd4c0b8180 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0b81d8 <col:30>
|-CXXMethodDecl 0x55cd4c0b8248 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55cd4c0b8370 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55cd4c0b84e8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55cd4c0b8420 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55cd4c0b85b0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55cd4c0b8678 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55cd4c0b87b8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55cd4c0b8728 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55cd4c0b8860 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55cd4c0b8960 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55cd4c0b8b60 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0b8940 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55cd4c0b8920 <col:23> 'int' 0
| |-EnumConstantDecl 0x55cd4c0b89f0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55cd4c0b8b78 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0b89d0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55cd4c0b89b0 <col:45> 'int' 4
| |-EnumConstantDecl 0x55cd4c0b8a80 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55cd4c0b8b90 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0b8a60 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55cd4c0b8a40 <col:24> 'int' 0
| `-EnumConstantDecl 0x55cd4c0b8b10 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55cd4c0b8ba8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cd4c0b8af0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55cd4c0b8ad0 <col:47> 'int' 16
|-CXXMethodDecl 0x55cd4c0b8c08 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55cd4c0b8d78 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55cd4c0b8cb8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55cd4c0b8e20 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0b8e78 <col:30>
|-CXXMethodDecl 0x55cd4c0b8ec8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55cd4c0cc850 <col:18, col:36>
|   `-ReturnStmt 0x55cd4c0cc840 <col:20, col:33>
|     `-ImplicitCastExpr 0x55cd4c0cc828 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55cd4c0cc808 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55cd4c0cc7d8 <col:27> '<bound member function type>' ->xanno 0x55cd4c0b6f28
|           `-CXXThisExpr 0x55cd4c0cc7c8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55cd4c0b8fc0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55cd4c0cc960 <col:30, col:48>
|   `-ReturnStmt 0x55cd4c0cc950 <col:32, col:45>
|     `-ImplicitCastExpr 0x55cd4c0cc938 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55cd4c0cc918 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55cd4c0cc8e8 <col:39> '<bound member function type>' ->xanno 0x55cd4c0b6d88
|           `-CXXThisExpr 0x55cd4c0cc8d8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55cd4c0b90a8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55cd4c0ccaf8 <col:24, col:50>
|   `-ReturnStmt 0x55cd4c0ccae8 <col:26, col:47>
|     `-UnaryOperator 0x55cd4c0ccad0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55cd4c0ccab0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55cd4c0cca98 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55cd4c0cca48 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55cd4c0c1d68
|         |   `-CXXMemberCallExpr 0x55cd4c0cca28 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55cd4c0cc9f8 <col:34> '<bound member function type>' ->xanno 0x55cd4c0b6f28
|         |       `-CXXThisExpr 0x55cd4c0cc9e8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55cd4c0cca78 <col:46> 'int' 0
|-CXXMethodDecl 0x55cd4c0b91b0 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55cd4c0cccc8 <col:36, col:62>
|   `-ReturnStmt 0x55cd4c0cccb8 <col:38, col:59>
|     `-UnaryOperator 0x55cd4c0ccca0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55cd4c0ccc80 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55cd4c0ccc68 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55cd4c0ccbe0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55cd4c0c1d68
|         |   `-CXXMemberCallExpr 0x55cd4c0ccbc0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55cd4c0ccb90 <col:46> '<bound member function type>' ->xanno 0x55cd4c0b6d88
|         |       `-CXXThisExpr 0x55cd4c0ccb80 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55cd4c0ccc10 <col:58> 'int' 0
|-CXXMethodDecl 0x55cd4c0b92c8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55cd4c0cce60 <col:26, col:53>
|   `-ReturnStmt 0x55cd4c0cce50 <col:28, col:50>
|     `-UnaryOperator 0x55cd4c0cce38 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55cd4c0cce18 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55cd4c0cce00 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55cd4c0ccdb0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55cd4c0c2068
|         |   `-CXXMemberCallExpr 0x55cd4c0ccd90 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55cd4c0ccd60 <col:36> '<bound member function type>' ->xanno 0x55cd4c0b6f28
|         |       `-CXXThisExpr 0x55cd4c0ccd50 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55cd4c0ccde0 <col:49> 'int' 0
|-CXXMethodDecl 0x55cd4c0b93e8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55cd4c0cd038 <col:38, col:65>
|   `-ReturnStmt 0x55cd4c0cd028 <col:40, col:62>
|     `-UnaryOperator 0x55cd4c0cd010 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55cd4c0ccff0 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55cd4c0ccfd8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55cd4c0ccf48 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55cd4c0c2068
|         |   `-CXXMemberCallExpr 0x55cd4c0ccf28 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55cd4c0ccef8 <col:48> '<bound member function type>' ->xanno 0x55cd4c0b6d88
|         |       `-CXXThisExpr 0x55cd4c0ccee8 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55cd4c0ccf78 <col:61> 'int' 0
|-CXXMethodDecl 0x55cd4c0b9598 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55cd4c0b94a0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55cd4c0cd708 <col:34, line:463:5>
|   |-ParenExpr 0x55cd4c0cd550 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55cd4c0cd520 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55cd4c0cd188 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cd4c0cd158 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cd4c0cd0a8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cd4c0cd090 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cd4c0cd050 <col:23> 'int' lvalue ParmVar 0x55cd4c0b94a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cd4c0cd070 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cd4c0cd138 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cd4c0cd108 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cd4c0cd0c8 <col:33> 'int' lvalue ParmVar 0x55cd4c0b94a0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55cd4c0cd120 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55cd4c0cd0e8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cd4c0b7170 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55cd4c0cd1e8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cd4c0cd1c8 <col:56> 'int' 0
|   |   `-CallExpr 0x55cd4c0cd480 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55cd4c0cd468 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cd4c0cd448 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cd4bc23880 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cd4c0cd4c0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0cd2d8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55cd4c0cd4d8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0cd308 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cd4c0cd4f0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cd4c0cd340 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55cd4c0cd508 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cd4c0cd430 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cd4c0cd418 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cd4c0cd3d8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55cd4c0cd6f8 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55cd4c0cd6e0 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55cd4c0cd6c0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55cd4c0cd690 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55cd4c0cd640 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55cd4c0c1d68
|         |   `-CXXMemberCallExpr 0x55cd4c0cd620 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55cd4c0cd5f0 <col:9> '<bound member function type>' ->xanno 0x55cd4c0b6d88
|         |       `-CXXThisExpr 0x55cd4c0cd5e0 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55cd4c0cd6a8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55cd4c0cd670 <col:21> 'int' lvalue ParmVar 0x55cd4c0b94a0 'i' 'int'
|-CXXMethodDecl 0x55cd4c0b97e8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55cd4c0b9658 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55cd4c0b96d0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55cd4c0cdd98 <col:40, line:472:5>
|   |-ParenExpr 0x55cd4c0cdbb0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55cd4c0cdb80 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55cd4c0cd860 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cd4c0cd830 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cd4c0cd780 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cd4c0cd768 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cd4c0cd728 <col:23> 'int' lvalue ParmVar 0x55cd4c0b9658 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cd4c0cd748 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cd4c0cd810 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cd4c0cd7e0 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cd4c0cd7a0 <col:33> 'int' lvalue ParmVar 0x55cd4c0b9658 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55cd4c0cd7f8 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55cd4c0cd7c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cd4c0b7170 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55cd4c0cd8c0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cd4c0cd8a0 <col:56> 'int' 0
|   |   `-CallExpr 0x55cd4c0cdae0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55cd4c0cdac8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cd4c0cdaa8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cd4bc23880 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cd4c0cdb20 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0cd930 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55cd4c0cdb38 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0cd960 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cd4c0cdb50 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cd4c0cd998 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55cd4c0cdb68 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cd4c0cda90 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cd4c0cda78 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cd4c0cda38 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55cd4c0cdd78 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55cd4c0cdd20 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55cd4c0cdcf0 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55cd4c0cdca0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55cd4c0c1d68
|     | |   `-CXXMemberCallExpr 0x55cd4c0cdc80 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55cd4c0cdc50 <col:2> '<bound member function type>' ->xanno 0x55cd4c0b6f28
|     | |       `-CXXThisExpr 0x55cd4c0cdc40 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55cd4c0cdd08 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55cd4c0cdcd0 <col:14> 'int' lvalue ParmVar 0x55cd4c0b9658 'i' 'int'
|     `-ImplicitCastExpr 0x55cd4c0cdd60 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55cd4c0cdd40 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55cd4c0b96d0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55cd4c0b99a8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55cd4c0b98b0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55cd4c0ce518 <col:36, line:485:5>
|   |-ParenExpr 0x55cd4c0ce280 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cd4c0ce250 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cd4c0cdf30 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cd4c0cdf00 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cd4c0cde10 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cd4c0cddf8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cd4c0cddb8 <col:23> 'int' lvalue ParmVar 0x55cd4c0b98b0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cd4c0cddd8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cd4c0cdee0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cd4c0cdec8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cd4c0cde30 <col:33> 'int' lvalue ParmVar 0x55cd4c0b98b0 'i' 'int'
|   |   |     `-BinaryOperator 0x55cd4c0cdea8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cd4c0cde90 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cd4c0cde50 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cd4c0b7170 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cd4c0cde70 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55cd4c0cdf90 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cd4c0cdf70 <col:60> 'int' 0
|   |   `-CallExpr 0x55cd4c0ce1b0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cd4c0ce198 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cd4c0ce178 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cd4bc23880 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cd4c0ce1f0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0ce000 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55cd4c0ce208 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0ce038 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cd4c0ce220 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cd4c0ce070 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55cd4c0ce238 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cd4c0ce160 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cd4c0ce148 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cd4c0ce108 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55cd4c0ce508 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55cd4c0ce4f0 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55cd4c0ce4d8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55cd4c0ce4a8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55cd4c0ce448 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55cd4c0ce418 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55cd4c0ce390 <col:61, col:70> 'char const[48]' lvalue ->c 0x55cd4c0c1c40
|             |   `-CXXMemberCallExpr 0x55cd4c0ce370 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55cd4c0ce340 <col:61> '<bound member function type>' ->xanno 0x55cd4c0b6d88
|             |       `-CXXThisExpr 0x55cd4c0ce330 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55cd4c0ce430 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55cd4c0ce3c0 <col:74> 'int' lvalue ParmVar 0x55cd4c0b98b0 'i' 'int'
|-CXXMethodDecl 0x55cd4c0b9bf8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55cd4c0b9a68 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55cd4c0b9ae0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55cd4c0cec68 <col:42, line:500:5>
|   |-ParenExpr 0x55cd4c0cea00 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cd4c0ce9d0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cd4c0ce6b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cd4c0ce680 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cd4c0ce590 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cd4c0ce578 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cd4c0ce538 <col:23> 'int' lvalue ParmVar 0x55cd4c0b9a68 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cd4c0ce558 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cd4c0ce660 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cd4c0ce648 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cd4c0ce5b0 <col:33> 'int' lvalue ParmVar 0x55cd4c0b9a68 'i' 'int'
|   |   |     `-BinaryOperator 0x55cd4c0ce628 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cd4c0ce610 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cd4c0ce5d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cd4c0b7170 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cd4c0ce5f0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55cd4c0ce710 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cd4c0ce6f0 <col:60> 'int' 0
|   |   `-CallExpr 0x55cd4c0ce930 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cd4c0ce918 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cd4c0ce8f8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cd4bc23880 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cd4c0ce970 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0ce780 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55cd4c0ce988 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0ce7b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cd4c0ce9a0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cd4c0ce7f0 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55cd4c0ce9b8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cd4c0ce8e0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cd4c0ce8c8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cd4c0ce888 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55cd4c0cec48 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55cd4c0cebf8 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55cd4c0cebc8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55cd4c0ceb70 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55cd4c0ceb40 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55cd4c0ceaf0 <col:48, col:57> 'char [48]' lvalue ->c 0x55cd4c0c1c40
|     |     |   `-CXXMemberCallExpr 0x55cd4c0cead0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55cd4c0ceaa0 <col:48> '<bound member function type>' ->xanno 0x55cd4c0b6f28
|     |     |       `-CXXThisExpr 0x55cd4c0cea90 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55cd4c0ceb58 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55cd4c0ceb20 <col:61> 'int' lvalue ParmVar 0x55cd4c0b9a68 'i' 'int'
|     `-ImplicitCastExpr 0x55cd4c0cec30 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55cd4c0cec10 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55cd4c0b9ae0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55cd4c0b9db8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55cd4c0b9cc0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55cd4c0cf3c8 <col:35, line:513:5>
|   |-ParenExpr 0x55cd4c0cf0d8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cd4c0cf0a8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cd4c0cee00 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cd4c0cedd0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cd4c0cece0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cd4c0cecc8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cd4c0cec88 <col:23> 'int' lvalue ParmVar 0x55cd4c0b9cc0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cd4c0ceca8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cd4c0cedb0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cd4c0ced98 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cd4c0ced00 <col:33> 'int' lvalue ParmVar 0x55cd4c0b9cc0 'i' 'int'
|   |   |     `-BinaryOperator 0x55cd4c0ced78 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cd4c0ced60 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cd4c0ced20 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cd4c0b7170 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cd4c0ced40 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55cd4c0cee60 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cd4c0cee40 <col:60> 'int' 0
|   |   `-CallExpr 0x55cd4c0cf008 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cd4c0ceff0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cd4c0cefd0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cd4bc23880 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cd4c0cf048 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0ceed0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55cd4c0cf060 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0cef08 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cd4c0cf078 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cd4c0cef40 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55cd4c0cf090 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cd4c0cefb8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cd4c0cefa0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cd4c0cef60 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55cd4c0cf3b8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55cd4c0cf3a0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55cd4c0cf388 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55cd4c0cf358 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55cd4c0cf2d0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55cd4c0cf2a0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55cd4c0cf250 <col:60, col:69> 'char const[48]' lvalue ->c 0x55cd4c0c1c40
|             |   `-CXXMemberCallExpr 0x55cd4c0cf230 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55cd4c0cf200 <col:60> '<bound member function type>' ->xanno 0x55cd4c0b6d88
|             |       `-CXXThisExpr 0x55cd4c0cf1f0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55cd4c0cf2b8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55cd4c0cf280 <col:73> 'int' lvalue ParmVar 0x55cd4c0b9cc0 'i' 'int'
|-CXXMethodDecl 0x55cd4c0ba008 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55cd4c0b9e78 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55cd4c0b9ef0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55cd4c0cfae8 <col:41, line:528:5>
|   |-ParenExpr 0x55cd4c0cf870 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cd4c0cf840 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cd4c0cf560 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cd4c0cf530 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cd4c0cf440 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cd4c0cf428 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cd4c0cf3e8 <col:23> 'int' lvalue ParmVar 0x55cd4c0b9e78 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cd4c0cf408 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cd4c0cf510 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cd4c0cf4f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cd4c0cf460 <col:33> 'int' lvalue ParmVar 0x55cd4c0b9e78 'i' 'int'
|   |   |     `-BinaryOperator 0x55cd4c0cf4d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cd4c0cf4c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cd4c0cf480 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cd4c0b7170 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cd4c0cf4a0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55cd4c0cf5c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cd4c0cf5a0 <col:60> 'int' 0
|   |   `-CallExpr 0x55cd4c0cf7a0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cd4c0cf788 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cd4c0cf768 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cd4bc23880 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cd4c0cf7e0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0cf630 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55cd4c0cf7f8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0cf668 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cd4c0cf810 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cd4c0cf6a0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55cd4c0cf828 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cd4c0cf750 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cd4c0cf738 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cd4c0cf6f8 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55cd4c0cfac8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55cd4c0cfa78 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55cd4c0cfa48 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55cd4c0cf9f0 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55cd4c0cf9b0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55cd4c0cf960 <col:47, col:56> 'char [48]' lvalue ->c 0x55cd4c0c1c40
|     |     |   `-CXXMemberCallExpr 0x55cd4c0cf940 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55cd4c0cf910 <col:47> '<bound member function type>' ->xanno 0x55cd4c0b6f28
|     |     |       `-CXXThisExpr 0x55cd4c0cf900 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55cd4c0cf9c8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55cd4c0cf990 <col:60> 'int' lvalue ParmVar 0x55cd4c0b9e78 'i' 'int'
|     `-ImplicitCastExpr 0x55cd4c0cfab0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55cd4c0cfa90 <col:65> 'int16_t':'short' lvalue ParmVar 0x55cd4c0b9ef0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55cd4c0ba1c8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55cd4c0ba0d0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55cd4c0d01b8 <col:36, line:541:5>
|   |-ParenExpr 0x55cd4c0cff58 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cd4c0cff28 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cd4c0cfc80 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cd4c0cfc50 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cd4c0cfb60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cd4c0cfb48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cd4c0cfb08 <col:23> 'int' lvalue ParmVar 0x55cd4c0ba0d0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cd4c0cfb28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cd4c0cfc30 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cd4c0cfc18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cd4c0cfb80 <col:33> 'int' lvalue ParmVar 0x55cd4c0ba0d0 'i' 'int'
|   |   |     `-BinaryOperator 0x55cd4c0cfbf8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cd4c0cfbe0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cd4c0cfba0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cd4c0b7170 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cd4c0cfbc0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55cd4c0cfce0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cd4c0cfcc0 <col:60> 'int' 0
|   |   `-CallExpr 0x55cd4c0cfe88 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cd4c0cfe70 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cd4c0cfe50 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cd4bc23880 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cd4c0cfec8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0cfd50 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55cd4c0cfee0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0cfd88 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cd4c0cfef8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cd4c0cfdc0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55cd4c0cff10 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cd4c0cfe38 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cd4c0cfe20 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cd4c0cfde0 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55cd4c0d01a8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55cd4c0d0190 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55cd4c0d0178 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55cd4c0d0148 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55cd4c0d00f0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55cd4c0d00c0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55cd4c0d0070 <col:61, col:70> 'char const[48]' lvalue ->c 0x55cd4c0c1c40
|             |   `-CXXMemberCallExpr 0x55cd4c0d0050 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55cd4c0d0020 <col:61> '<bound member function type>' ->xanno 0x55cd4c0b6d88
|             |       `-CXXThisExpr 0x55cd4c0d0010 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55cd4c0d00d8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55cd4c0d00a0 <col:74> 'int' lvalue ParmVar 0x55cd4c0ba0d0 'i' 'int'
|-CXXMethodDecl 0x55cd4c0ba398 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55cd4c0ba288 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55cd4c0ba300 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55cd4c0ba448 <col:20>
| `-OptimizeNoneAttr 0x55cd4c0ba4a0 <col:30>
|-CXXMethodDecl 0x55cd4c0ba5d8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55cd4c0ba4e0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55cd4c0d0888 <col:35, line:562:5>
|   |-ParenExpr 0x55cd4c0d0628 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cd4c0d05f8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cd4c0d0350 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cd4c0d0320 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cd4c0d0230 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cd4c0d0218 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cd4c0d01d8 <col:23> 'int' lvalue ParmVar 0x55cd4c0ba4e0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cd4c0d01f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cd4c0d0300 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cd4c0d02e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cd4c0d0250 <col:33> 'int' lvalue ParmVar 0x55cd4c0ba4e0 'i' 'int'
|   |   |     `-BinaryOperator 0x55cd4c0d02c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cd4c0d02b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cd4c0d0270 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cd4c0b7170 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cd4c0d0290 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55cd4c0d03b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cd4c0d0390 <col:60> 'int' 0
|   |   `-CallExpr 0x55cd4c0d0558 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cd4c0d0540 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cd4c0d0520 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cd4bc23880 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cd4c0d0598 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0d0420 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55cd4c0d05b0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0d0458 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cd4c0d05c8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cd4c0d0490 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55cd4c0d05e0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cd4c0d0508 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cd4c0d04f0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cd4c0d04b0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55cd4c0d0878 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55cd4c0d0860 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55cd4c0d0848 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55cd4c0d0818 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55cd4c0d07c0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55cd4c0d0790 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55cd4c0d0740 <col:60, col:69> 'char const[48]' lvalue ->c 0x55cd4c0c1c40
|             |   `-CXXMemberCallExpr 0x55cd4c0d0720 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55cd4c0d06f0 <col:60> '<bound member function type>' ->xanno 0x55cd4c0b6d88
|             |       `-CXXThisExpr 0x55cd4c0d06e0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55cd4c0d07a8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55cd4c0d0770 <col:73> 'int' lvalue ParmVar 0x55cd4c0ba4e0 'i' 'int'
|-CXXMethodDecl 0x55cd4c0ba7e8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55cd4c0ba698 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55cd4c0ba710 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55cd4c0d0f68 <col:41, line:577:5>
|   |-ParenExpr 0x55cd4c0d0cf8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cd4c0d0cc8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cd4c0d0a20 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cd4c0d09f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cd4c0d0900 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cd4c0d08e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cd4c0d08a8 <col:23> 'int' lvalue ParmVar 0x55cd4c0ba698 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cd4c0d08c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cd4c0d09d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cd4c0d09b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cd4c0d0920 <col:33> 'int' lvalue ParmVar 0x55cd4c0ba698 'i' 'int'
|   |   |     `-BinaryOperator 0x55cd4c0d0998 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cd4c0d0980 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cd4c0d0940 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cd4c0b7170 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cd4c0d0960 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55cd4c0d0a80 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cd4c0d0a60 <col:60> 'int' 0
|   |   `-CallExpr 0x55cd4c0d0c28 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cd4c0d0c10 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cd4c0d0bf0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cd4bc23880 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cd4c0d0c68 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0d0af0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55cd4c0d0c80 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0d0b28 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cd4c0d0c98 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cd4c0d0b60 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55cd4c0d0cb0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cd4c0d0bd8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cd4c0d0bc0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cd4c0d0b80 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55cd4c0d0f48 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55cd4c0d0ef8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55cd4c0d0ec8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55cd4c0d0e68 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55cd4c0d0e38 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55cd4c0d0de8 <col:47, col:56> 'char [48]' lvalue ->c 0x55cd4c0c1c40
|     |     |   `-CXXMemberCallExpr 0x55cd4c0d0dc8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55cd4c0d0d98 <col:47> '<bound member function type>' ->xanno 0x55cd4c0b6f28
|     |     |       `-CXXThisExpr 0x55cd4c0d0d88 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55cd4c0d0e50 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55cd4c0d0e18 <col:60> 'int' lvalue ParmVar 0x55cd4c0ba698 'i' 'int'
|     `-ImplicitCastExpr 0x55cd4c0d0f30 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55cd4c0d0f10 <col:65> 'int32_t':'int' lvalue ParmVar 0x55cd4c0ba710 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55cd4c0ba9a8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55cd4c0ba8b0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55cd4c0d1698 <col:36, line:591:5>
|   |-ParenExpr 0x55cd4c0d13d8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cd4c0d13a8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cd4c0d1100 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cd4c0d10d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cd4c0d0fe0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cd4c0d0fc8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cd4c0d0f88 <col:23> 'int' lvalue ParmVar 0x55cd4c0ba8b0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cd4c0d0fa8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cd4c0d10b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cd4c0d1098 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cd4c0d1000 <col:33> 'int' lvalue ParmVar 0x55cd4c0ba8b0 'i' 'int'
|   |   |     `-BinaryOperator 0x55cd4c0d1078 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cd4c0d1060 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cd4c0d1020 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cd4c0b7170 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cd4c0d1040 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55cd4c0d1160 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cd4c0d1140 <col:60> 'int' 0
|   |   `-CallExpr 0x55cd4c0d1308 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cd4c0d12f0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cd4c0d12d0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cd4bc23880 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cd4c0d1348 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0d11d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55cd4c0d1360 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0d1208 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cd4c0d1378 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cd4c0d1240 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55cd4c0d1390 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cd4c0d12b8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cd4c0d12a0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cd4c0d1260 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55cd4c0d1688 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55cd4c0d1670 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55cd4c0d1658 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55cd4c0d1628 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55cd4c0d15a0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55cd4c0d1570 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55cd4c0d1520 <col:61, col:70> 'char const[48]' lvalue ->c 0x55cd4c0c1c40
|             |   `-CXXMemberCallExpr 0x55cd4c0d1500 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55cd4c0d14d0 <col:61> '<bound member function type>' ->xanno 0x55cd4c0b6d88
|             |       `-CXXThisExpr 0x55cd4c0d14c0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55cd4c0d1588 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55cd4c0d1550 <col:74> 'int' lvalue ParmVar 0x55cd4c0ba8b0 'i' 'int'
|-CXXMethodDecl 0x55cd4c0babf8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55cd4c0baa68 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55cd4c0baae0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55cd4c0d1d78 <col:42, line:606:5>
|   |-ParenExpr 0x55cd4c0d1b08 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cd4c0d1ad8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cd4c0d1830 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cd4c0d1800 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cd4c0d1710 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cd4c0d16f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cd4c0d16b8 <col:23> 'int' lvalue ParmVar 0x55cd4c0baa68 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cd4c0d16d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cd4c0d17e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cd4c0d17c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cd4c0d1730 <col:33> 'int' lvalue ParmVar 0x55cd4c0baa68 'i' 'int'
|   |   |     `-BinaryOperator 0x55cd4c0d17a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cd4c0d1790 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cd4c0d1750 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cd4c0b7170 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cd4c0d1770 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55cd4c0d1890 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cd4c0d1870 <col:60> 'int' 0
|   |   `-CallExpr 0x55cd4c0d1a38 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cd4c0d1a20 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cd4c0d1a00 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cd4bc23880 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cd4c0d1a78 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0d1900 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55cd4c0d1a90 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0d1938 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cd4c0d1aa8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cd4c0d1970 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55cd4c0d1ac0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cd4c0d19e8 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cd4c0d19d0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cd4c0d1990 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55cd4c0d1d58 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55cd4c0d1d08 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55cd4c0d1cd8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55cd4c0d1c78 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55cd4c0d1c48 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55cd4c0d1bf8 <col:48, col:57> 'char [48]' lvalue ->c 0x55cd4c0c1c40
|     |     |   `-CXXMemberCallExpr 0x55cd4c0d1bd8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55cd4c0d1ba8 <col:48> '<bound member function type>' ->xanno 0x55cd4c0b6f28
|     |     |       `-CXXThisExpr 0x55cd4c0d1b98 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55cd4c0d1c60 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55cd4c0d1c28 <col:61> 'int' lvalue ParmVar 0x55cd4c0baa68 'i' 'int'
|     `-ImplicitCastExpr 0x55cd4c0d1d40 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55cd4c0d1d20 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55cd4c0baae0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55cd4c0bad90 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55cd4c0bacc0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55cd4c0d25e8 <col:33, line:620:5>
|   |-ParenExpr 0x55cd4c0d2360 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55cd4c0d2330 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55cd4c0d1f80 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cd4c0d1f50 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cd4c0d1df0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cd4c0d1dd8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cd4c0d1d98 <col:23> 'int' lvalue ParmVar 0x55cd4c0bacc0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cd4c0d1db8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cd4c0d1f30 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55cd4c0d1f18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cd4c0d1e10 <col:33> 'int' lvalue ParmVar 0x55cd4c0bacc0 'i' 'int'
|   |   |     `-BinaryOperator 0x55cd4c0d1ef8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cd4c0d1ee0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cd4c0d1e30 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cd4c0b7170 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55cd4c0d1eb8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55cd4c0d1ea0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55cd4c0d1e68 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55cd4c0d1fe0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cd4c0d1fc0 <col:79> 'int' 0
|   |   `-CallExpr 0x55cd4c0d2290 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55cd4c0d2278 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cd4c0d2258 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cd4bc23880 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cd4c0d22d0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0d20c8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55cd4c0d22e8 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0d2110 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cd4c0d2300 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cd4c0d2148 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55cd4c0d2318 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cd4c0d2240 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cd4c0d2228 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cd4c0d21e8 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55cd4c0d25d8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55cd4c0d25c0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55cd4c0d25a8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55cd4c0d2578 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55cd4c0d24f0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55cd4c0d24c0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55cd4c0d2470 <col:67, col:76> 'char const[48]' lvalue ->c 0x55cd4c0c1c40
|             |   `-CXXMemberCallExpr 0x55cd4c0d2450 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55cd4c0d2420 <col:67> '<bound member function type>' ->xanno 0x55cd4c0b6d88
|             |       `-CXXThisExpr 0x55cd4c0d2410 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55cd4c0d24d8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55cd4c0d24a0 <col:80> 'int' lvalue ParmVar 0x55cd4c0bacc0 'i' 'int'
|-CXXMethodDecl 0x55cd4c0bafa8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55cd4c0bae50 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55cd4c0baed0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55cd4c0d2e10 <col:45, line:635:5>
|   |-ParenExpr 0x55cd4c0d2b58 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55cd4c0d2b28 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55cd4c0d27f0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cd4c0d27c0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cd4c0d2660 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cd4c0d2648 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cd4c0d2608 <col:23> 'int' lvalue ParmVar 0x55cd4c0bae50 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cd4c0d2628 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cd4c0d27a0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55cd4c0d2788 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cd4c0d2680 <col:33> 'int' lvalue ParmVar 0x55cd4c0bae50 'i' 'int'
|   |   |     `-BinaryOperator 0x55cd4c0d2768 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cd4c0d2750 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cd4c0d26a0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cd4c0b7170 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55cd4c0d2728 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55cd4c0d2710 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55cd4c0d26d8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55cd4c0d2850 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cd4c0d2830 <col:79> 'int' 0
|   |   `-CallExpr 0x55cd4c0d2a88 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55cd4c0d2a70 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cd4c0d2a50 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cd4bc23880 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cd4c0d2ac8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0d28c0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55cd4c0d2ae0 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cd4c0d2908 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cd4c0d2af8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cd4c0d2940 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55cd4c0d2b10 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cd4c0d2a38 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cd4c0d2a20 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cd4c0d29d8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55cd4c0d2df0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55cd4c0d2d58 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55cd4c0d2d28 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55cd4c0d2cc8 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55cd4c0d2c98 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55cd4c0d2c48 <col:54, col:63> 'char [48]' lvalue ->c 0x55cd4c0c1c40
|     |     |   `-CXXMemberCallExpr 0x55cd4c0d2c28 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55cd4c0d2bf8 <col:54> '<bound member function type>' ->xanno 0x55cd4c0b6f28
|     |     |       `-CXXThisExpr 0x55cd4c0d2be8 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55cd4c0d2cb0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55cd4c0d2c78 <col:67> 'int' lvalue ParmVar 0x55cd4c0bae50 'i' 'int'
|     `-CXXConstCastExpr 0x55cd4c0d2dc0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55cd4c0d2da8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55cd4c0d2d70 <col:91> 'const void *' lvalue ParmVar 0x55cd4c0baed0 'x' 'const void *'
|-CXXMethodDecl 0x55cd4c0bb078 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55cd4c0d2e98 <col:34, line:640:5>
|   `-ReturnStmt 0x55cd4c0d2e88 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55cd4c0d2e70 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55cd4c0d2e40 <col:16> 'Packet *' lvalue ->_data_packet 0x55cd4c0c27f8
|         `-CXXThisExpr 0x55cd4c0d2e30 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55cd4c0bb1b8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55cd4c0bb128 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55cd4c0cbf58 <col:46> 'bool' true
|-CXXMethodDecl 0x55cd4c0bb338 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55cd4c0bb270 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55cd4c0bb3e0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55cd4c0bbb90 <line:660:22> "" ""
| |-EnumConstantDecl 0x55cd4c0bb4e0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cd4c0bbc00 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0bb4c0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55cd4c0bb4a0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55cd4c0b0640 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55cd4c0bb570 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cd4c0bbc18 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0bb550 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55cd4c0bb530 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55cd4c0b06d0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55cd4c0bb600 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cd4c0bbc30 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0bb5e0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55cd4c0bb5c0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55cd4c0bb690 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cd4c0bbc48 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0bb670 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55cd4c0bb650 <col:19> 'int' 16
| |-EnumConstantDecl 0x55cd4c0bb720 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cd4c0bbc60 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0bb700 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55cd4c0bb6e0 <col:21> 'int' 16
| |-EnumConstantDecl 0x55cd4c0bb7b0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cd4c0bbc78 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0bb790 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55cd4c0bb770 <col:19> 'int' 32
| |-EnumConstantDecl 0x55cd4c0bb840 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cd4c0bbc90 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0bb820 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55cd4c0bb800 <col:19> 'int' EnumConstant 0x55cd4c0bb690 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55cd4c0bb8d0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cd4c0bbca8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0bb8b0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55cd4c0bb890 <col:19> 'int' EnumConstant 0x55cd4c0bb7b0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55cd4c0bb9a0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cd4c0bbcc0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0bb980 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55cd4c0bb960 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55cd4c0bb920 <col:23> 'int' EnumConstant 0x55cd4c0bb8d0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55cd4c0bb940 <col:40> 'int' 2
| |-EnumConstantDecl 0x55cd4c0bba70 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cd4c0bbcd8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0bba50 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55cd4c0bba30 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55cd4c0bb9f0 <col:23> 'int' EnumConstant 0x55cd4c0bb8d0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55cd4c0bba10 <col:40> 'int' 4
| `-EnumConstantDecl 0x55cd4c0bbb40 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55cd4c0bbcf0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cd4c0bbb20 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55cd4c0bbb00 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55cd4c0bbac0 <col:23> 'int' EnumConstant 0x55cd4c0bb8d0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55cd4c0bbae0 <col:40> 'int' 8
|-CXXMethodDecl 0x55cd4c0bbd30 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55cd4c0bbdd0 <col:68> "" ""
|-CXXMethodDecl 0x55cd4c0bbe68 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55cd4c0bbf08 <col:45> "" ""
|-CXXMethodDecl 0x55cd4c0bbfa0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55cd4c0bc040 <col:57> "" ""
|-CXXMethodDecl 0x55cd4c0bc0d8 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55cd4c0bc178 <col:45> "" ""
|-CXXMethodDecl 0x55cd4c0bc210 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55cd4c0bc2b0 <col:57> "" ""
|-CXXMethodDecl 0x55cd4c0bc340 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55cd4c0bc3e0 <col:51> "" ""
|-CXXMethodDecl 0x55cd4c0bc470 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55cd4c0bc510 <col:63> "" ""
|-CXXMethodDecl 0x55cd4c0bc5a0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55cd4c0bc640 <col:53> "" ""
|-CXXMethodDecl 0x55cd4c0bc6d0 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55cd4c0bc770 <col:65> "" ""
|-CXXMethodDecl 0x55cd4c0bc888 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55cd4c0bc7f8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55cd4c0bc930 <col:61> "" ""
|-CXXMethodDecl 0x55cd4c0bcac8 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55cd4c0bc9b8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55cd4c0bca30 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55cd4c0bcb78 <col:67> "" ""
|-CXXMethodDecl 0x55cd4c0bcc90 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55cd4c0bcc00 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55cd4c0bcd38 <col:63> "" ""
|-CXXMethodDecl 0x55cd4c0bced0 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55cd4c0bcdc0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55cd4c0bce38 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55cd4c0bcf80 <col:69> "" ""
|-CXXMethodDecl 0x55cd4c0bd098 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55cd4c0bd008 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55cd4c0bd140 <col:63> "" ""
|-CXXMethodDecl 0x55cd4c0bf818 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55cd4c0bf708 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55cd4c0bf780 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55cd4c0bf8c8 <col:69> "" ""
|-CXXMethodDecl 0x55cd4c0bf9e0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55cd4c0bf950 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55cd4c0bfa88 <col:62> "" ""
|-CXXMethodDecl 0x55cd4c0bfc20 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55cd4c0bfb10 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55cd4c0bfb88 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55cd4c0bfcd0 <col:68> "" ""
|-CXXMethodDecl 0x55cd4c0bfde8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55cd4c0bfd58 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55cd4c0bfe90 <col:63> "" ""
|-CXXMethodDecl 0x55cd4c0c0028 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55cd4c0bff18 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55cd4c0bff90 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55cd4c0c00d8 <col:69> "" ""
|-CXXMethodDecl 0x55cd4c0c0168 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55cd4c0c0208 <col:64> "" ""
|-CXXMethodDecl 0x55cd4c0c0298 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55cd4c0c0338 <col:52> "" ""
|-CXXMethodDecl 0x55cd4c0c03c8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55cd4c0c0468 <col:67> "" ""
|-CXXMethodDecl 0x55cd4c0c04f8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55cd4c0c0598 <col:55> "" ""
|-CXXMethodDecl 0x55cd4c0c06b0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55cd4c0c0620 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55cd4c0c0758 <col:58> "" ""
|-CXXMethodDecl 0x55cd4c0c08f0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55cd4c0c07e0 <col:33> col:36 'int'
| |-ParmVarDecl 0x55cd4c0c0858 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55cd4c0c09a0 <col:62> "" ""
|-CXXMethodDecl 0x55cd4c0c0ab8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55cd4c0c0a28 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55cd4c0c0b60 <col:58> "" ""
|-CXXMethodDecl 0x55cd4c0c0cf8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55cd4c0c0be8 <col:33> col:36 'int'
| |-ParmVarDecl 0x55cd4c0c0c60 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55cd4c0c0da8 <col:62> "" ""
|-CXXMethodDecl 0x55cd4c0c0ec0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55cd4c0c0e30 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55cd4c0c0f68 <col:60> "" ""
|-CXXMethodDecl 0x55cd4c0c1100 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55cd4c0c0ff0 <col:34> col:37 'int'
| |-ParmVarDecl 0x55cd4c0c1068 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55cd4c0c11b0 <col:64> "" ""
|-CXXMethodDecl 0x55cd4c0c12c8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55cd4c0c1238 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55cd4c0c1370 <col:58> "" ""
|-CXXMethodDecl 0x55cd4c0c1508 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55cd4c0c13f8 <col:33> col:36 'int'
| |-ParmVarDecl 0x55cd4c0c1470 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55cd4c0c15b8 <col:62> "" ""
|-CXXMethodDecl 0x55cd4c0c16d0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55cd4c0c1640 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55cd4c0c1778 <col:59> "" ""
|-CXXMethodDecl 0x55cd4c0c1910 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55cd4c0c1800 <col:33> col:36 'int'
| |-ParmVarDecl 0x55cd4c0c1878 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55cd4c0c19c0 <col:63> "" ""
|-AccessSpecDecl 0x55cd4c0c1a30 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55cd4c0c1a58 prev 0x55cd4c0b6c60 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55cd4c0c1b50 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55cd4c0c1c40 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55cd4c0c1d68 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55cd4c0c1ee8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55cd4c0c2068 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55cd4c0c21e8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55cd4c0d3018 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55cd4c0d3888 <col:11>
| |-CXXDestructorDecl 0x55cd4c0d30f0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55cd4c0d3228 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55cd4c0d3228
| | `-ParmVarDecl 0x55cd4c0d3338 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55cd4c0d33d8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55cd4c0d33d8
| | `-ParmVarDecl 0x55cd4c0d34e8 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55cd4c0d62a8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55cd4c0d63b8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55cd4c0d6638 <col:11>
| |   `-ReturnStmt 0x55cd4c0d6628 <col:11>
| |     `-UnaryOperator 0x55cd4c0d6610 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55cd4c0d6600 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55cd4c0d6428 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55cd4c0d6428
|   `-ParmVarDecl 0x55cd4c0d6538 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55cd4c0c2250 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55cd4c0c2368 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55cd4c0c2408 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55cd4c0c2470 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55cd4c0c24d8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55cd4c0c2540 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55cd4c0c25a0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55cd4c0c2660 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55cd4c0c26c0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55cd4c0c2720 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55cd4c0d2f28 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55cd4c0c2408 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55cd4c0d3898 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55cd4c0d38f0 <col:12>
| |-CXXConstructorDecl 0x55cd4c0d3558 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55cd4c0d3558
| | `-ParmVarDecl 0x55cd4c0d3668 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55cd4c0d3708 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55cd4c0d3708
| | `-ParmVarDecl 0x55cd4c0d3818 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55cd4c0d5990 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55cd4c0c2798 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55cd4c0c27f8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55cd4c0c2860 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55cd4c0c28c8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55cd4c0c2930 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55cd4c0c2998 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55cd4c0c29f8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55cd4c0c2a58 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55cd4c0c2ac0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55cd4c0c2b48 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55cd4c0c2798 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55cd4c0d2ec0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55cd4c0c29f8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55cd4c0d3900 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55cd4c0d3960 <col:21, line:755:5>
|-CXXConstructorDecl 0x55cd4c0c2ce8 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55cd4c0c2c28 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55cd4c0c2de0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55cd4c0c2fc8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55cd4c0c2ed0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55cd4c0c3298 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55cd4c0c3080 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55cd4c0c30f8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55cd4c0c3170 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cd4c0c34b8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55cd4c0c3368 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55cd4c0c33e0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55cd4c0cba98 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55cd4c0c3578 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55cd4c0c35f0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55cd4c0c3668 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55cd4c0cbbf0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55cd4c0cbb60 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cd4c0cbd38 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55cd4c0cbca8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55cd4c0cbe30 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cd4c14ead0 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cd4c14ebe8 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x55cd4c14ecb8 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x55cd4c14ed18 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x55cd4c14ed80 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x55cd4c14ee08 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x55cd4c14f070 <col:16, line:46:5>
|   |-BinaryOperator 0x55cd4c14efb8 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x55cd4c14eed8 <col:9> 'TaskLink *' lvalue ->_prev 0x55cd4c14ecb8
|   | | `-CXXThisExpr 0x55cd4c14eec8 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x55cd4c14efa0 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x55cd4c14ef80 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x55cd4c14ef18 <col:17> 'TaskLink *' lvalue ->_next 0x55cd4c14ed18
|   |     | `-CXXThisExpr 0x55cd4c14ef08 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x55cd4c14ef68 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x55cd4c14ef48 <col:25> 'int' 0
|   `-BinaryOperator 0x55cd4c14f050 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x55cd4c14efe8 <col:9> 'unsigned int' lvalue ->_pass 0x55cd4c14ed80
|     | `-CXXThisExpr 0x55cd4c14efd8 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x55cd4c14f038 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55cd4c14f018 <col:17> 'int' 0
|-CXXConstructorDecl 0x55cd4c1d7968 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x55cd4c1d7968
| `-ParmVarDecl 0x55cd4c1d7a78 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x55cd4c1d7b18 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x55cd4c1d7b18
| `-ParmVarDecl 0x55cd4c1d7c28 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x55cd4c1d7e18 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x55cd4c1d7e18
|-CXXMethodDecl 0x55cd4c1d8618 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x55cd4c1d8618
| `-ParmVarDecl 0x55cd4c1d8728 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x55cd4c1d8798 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x55cd4c1d8798
  `-ParmVarDecl 0x55cd4c1d88a8 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cd4c06a938 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55cd4c06aa68 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x55cd4c06aac8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x55cd4c06ab28 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55cd4c1e1ae8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55cd4c1e1bc0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55cd4c1e1bc0
|-CXXConstructorDecl 0x55cd4c1e1e78 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55cd4c1e1e78
| `-ParmVarDecl 0x55cd4c1e1f88 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x55cd4c1e2028 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55cd4c1e2028
  `-ParmVarDecl 0x55cd4c1e2138 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cd4c06a790 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55cd4c06a8a8 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x55cd4c06a938 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55cd4c06aa68 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x55cd4c06aac8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x55cd4c06ab28 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x55cd4c1e1ae8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x55cd4c1e1bc0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55cd4c1e1bc0
| |-CXXConstructorDecl 0x55cd4c1e1e78 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55cd4c1e1e78
| | `-ParmVarDecl 0x55cd4c1e1f88 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x55cd4c1e2028 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55cd4c1e2028
|   `-ParmVarDecl 0x55cd4c1e2138 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x55cd4c06abe8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x55cd4c06ac48 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x55cd4c06abe8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55cd4c06aa68 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x55cd4c06aca0 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x55cd4c06abe8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55cd4c06aac8 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x55cd4c06acf8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x55cd4c06abe8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55cd4c06ab28 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x55cd4c06ad50 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55cd4c1e19f0 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55cd4c1e2358 <col:11>
|-CXXConstructorDecl 0x55cd4c1e1cc8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55cd4c1e1cc8
| `-ParmVarDecl 0x55cd4c1e1dd8 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x55cd4c1e21d8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55cd4c1e21d8
  `-ParmVarDecl 0x55cd4c1e22e8 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cd4c081cf0 prev 0x55cd4c078b30 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cd4c081de8 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x55cd4c081e88 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x55cd4c088c50 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55cd4c089038 <col:11>
|-CXXConstructorDecl 0x55cd4c088d30 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55cd4c088e18 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55cd4c089780 <col:11>
|-CXXConstructorDecl 0x55cd4c088eb8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55cd4c088fc8 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x55cd4c08afd8 <col:11>
|-CXXDestructorDecl 0x55cd4c08a2e8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55cd4bd90e98 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55cd4bd90fa8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55cd4bd91870 <col:11>
|   `-ReturnStmt 0x55cd4bd91860 <col:11>
|     `-UnaryOperator 0x55cd4bd91848 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55cd4bd91838 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x55cd4bd91018 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55cd4bd91128 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x55cd4c169630 <col:11>
    `-ReturnStmt 0x55cd4c169620 <col:11>
      `-UnaryOperator 0x55cd4c169608 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55cd4c1695f8 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cd4c077ce8 prev 0x55cd4c0779f8 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cd4c077de0 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x55cd4c077e70 <col:19, col:25> col:19 public
|-TypedefDecl 0x55cd4c077ea8 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x55cd4bcdce50 'int32_t' sugar
|   |-Typedef 0x55cd4bbee238 'int32_t'
|   `-TypedefType 0x55cd4bbc73f0 '__int32_t' sugar
|     |-Typedef 0x55cd4bbc7008 '__int32_t'
|     `-BuiltinType 0x55cd4bb853b0 'int'
|-TypedefDecl 0x55cd4c077f10 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x55cd4bcdd010 'int64_t' sugar
|   |-Typedef 0x55cd4bbee2a0 'int64_t'
|   `-TypedefType 0x55cd4bbc7510 '__int64_t' sugar
|     |-Typedef 0x55cd4bbc70e8 '__int64_t'
|     `-BuiltinType 0x55cd4bb853d0 'long'
|-EnumDecl 0x55cd4c077f68 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x55cd4c0780e0 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x55cd4c0780c0 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x55cd4c078098 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x55cd4c078080 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x55cd4c078050 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x55cd4c0781d8 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x55cd4c0781b8 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x55cd4c078190 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x55cd4c078178 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x55cd4c078150 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x55cd4c078130 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x55cd4c078228 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x55cd4c078330 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55cd4c078880 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c078310 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x55cd4c0782f0 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x55cd4c0783c0 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55cd4c078898 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0783a0 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55cd4c078380 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x55cd4c078450 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55cd4c0788b0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c078430 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55cd4c078410 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55cd4c0784e0 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55cd4c0788c8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0784c0 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55cd4c0784a0 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x55cd4c078570 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55cd4c0788e0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c078550 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55cd4c078530 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55cd4c078600 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55cd4c0788f8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0785e0 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x55cd4c0785c0 <col:24> 'int' 1000
| |-EnumConstantDecl 0x55cd4c078690 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55cd4c078910 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c078670 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x55cd4c078650 <col:26> 'int' EnumConstant 0x55cd4c078330 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x55cd4c078760 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55cd4c078928 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c078740 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x55cd4c078720 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x55cd4c0786e0 <col:27> 'int' EnumConstant 0x55cd4c078690 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x55cd4c078700 <col:44> 'int' EnumConstant 0x55cd4c078600 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x55cd4c078830 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x55cd4c078940 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cd4c078810 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x55cd4c0787f0 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x55cd4c0787b0 <col:27> 'int' EnumConstant 0x55cd4c078690 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x55cd4c0787d0 <col:44> 'int' EnumConstant 0x55cd4c0784e0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x55cd4c078958 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x55cd4c078a60 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x55cd4c078ab0 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cd4c078a40 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x55cd4c078a20 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c078690 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x55cd4c078ad8 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x55cd4bcdca80 'uninitialized_type'
|   `-CXXRecord 0x55cd4bcdc9e8 'uninitialized_type'
|-CXXRecordDecl 0x55cd4c078b30 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x55cd4c078c40 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x55cd4c082e38 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55cd4c089048 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55cd4c089168 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x55cd4c089120 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x55cd4c0890b0 <col:9> '<bound member function type>' ->assign 0x55cd4c07d888
|     | `-CXXThisExpr 0x55cd4c0890a0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55cd4c0890e0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55cd4c089150 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55cd4c089100 <col:19> 'int' 0
|-CXXConstructorDecl 0x55cd4c078e88 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x55cd4c078d00 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x55cd4c078d78 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55cd4c084980 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55cd4c084960 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x55cd4c082e38 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55cd4c089180 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55cd4c0892d0 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x55cd4c089258 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x55cd4c0891e8 <col:9> '<bound member function type>' ->assign 0x55cd4c07d888
|     | `-CXXThisExpr 0x55cd4c0891d8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55cd4c0892a0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55cd4c089288 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55cd4c089218 <col:16> 'long' lvalue ParmVar 0x55cd4c078d00 'sec' 'long'
|     `-ImplicitCastExpr 0x55cd4c0892b8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55cd4c089238 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cd4c078d78 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55cd4c0790e8 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55cd4c078f58 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x55cd4c078fd0 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55cd4c0849b8 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55cd4c084998 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x55cd4c082e38 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55cd4c0892e8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55cd4c089420 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x55cd4c0893c0 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x55cd4c089350 <col:9> '<bound member function type>' ->assign 0x55cd4c07d888
|     | `-CXXThisExpr 0x55cd4c089340 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55cd4c0893f0 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55cd4c089380 <col:16> 'int' lvalue ParmVar 0x55cd4c078f58 'sec' 'int'
|     `-ImplicitCastExpr 0x55cd4c089408 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55cd4c0893a0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cd4c078fd0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55cd4c079348 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x55cd4c0791b8 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x55cd4c079230 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55cd4c0849f0 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55cd4c0849d0 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x55cd4c082e38 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55cd4c089438 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55cd4c089588 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x55cd4c089510 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x55cd4c0894a0 <col:9> '<bound member function type>' ->assign 0x55cd4c07d888
|     | `-CXXThisExpr 0x55cd4c089490 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55cd4c089558 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55cd4c089540 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55cd4c0894d0 <col:16> 'unsigned long' lvalue ParmVar 0x55cd4c0791b8 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x55cd4c089570 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55cd4c0894f0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cd4c079230 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55cd4c07a4e0 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x55cd4c079418 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x55cd4c079490 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55cd4c084a28 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55cd4c084a08 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55cd4c082e38 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55cd4c0895a0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55cd4c0896f0 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x55cd4c089678 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x55cd4c089608 <col:9> '<bound member function type>' ->assign 0x55cd4c07d888
|     | `-CXXThisExpr 0x55cd4c0895f8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55cd4c0896c0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55cd4c0896a8 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55cd4c089638 <col:16> 'unsigned int' lvalue ParmVar 0x55cd4c079418 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x55cd4c0896d8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55cd4c089658 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cd4c079490 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55cd4c07a640 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x55cd4c07a5b0 <col:31> col:37 'double'
|-CXXConstructorDecl 0x55cd4c07a7d8 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x55cd4c07a718 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x55cd4c07aa08 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x55cd4c07a910 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x55cd4c07abb8 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x55cd4c07aaf8 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x55cd4c082e38 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55cd4c089790 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x55cd4c089708 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x55cd4c07aaf8 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55cd4c0897f0 <col:19, line:214:5>
|-CXXConstructorDecl 0x55cd4c07ad88 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x55cd4c07acc8 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x55cd4c082e38 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55cd4c089800 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55cd4c0898b0 <col:53, line:219:5>
|   `-CStyleCastExpr 0x55cd4c089888 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x55cd4c089858 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x55cd4c07acc8 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x55cd4c07af78 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x55cd4c07aef0 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x55cd4c077a90 'Timestamp'
|   | `-CXXRecord 0x55cd4c077ce8 'Timestamp'
|   `-ParenType 0x55cd4c07ae90 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x55cd4c07ae60 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x55cd4c078030 'Timestamp::seconds_type' sugar
|         |-Typedef 0x55cd4c077ea8 'seconds_type'
|         `-TypedefType 0x55cd4bcdce50 'int32_t' sugar
|           |-Typedef 0x55cd4bbee238 'int32_t'
|           `-TypedefType 0x55cd4bbc73f0 '__int32_t' sugar
|             |-Typedef 0x55cd4bbc7008 '__int32_t'
|             `-BuiltinType 0x55cd4bb853b0 'int'
|-CXXConversionDecl 0x55cd4c07b0b8 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55cd4c07b188 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x55cd4c0899b8 <col:37, line:231:5>
|   `-ReturnStmt 0x55cd4c0899a8 <line:227:9, col:23>
|     `-BinaryOperator 0x55cd4c089988 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x55cd4c089958 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55cd4c089908 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55cd4c081e88
|       |   `-MemberExpr 0x55cd4c0898d8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55cd4c082e38
|       |     `-CXXThisExpr 0x55cd4c0898c8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55cd4c089970 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x55cd4c089938 <col:23> 'int' 0
|-CXXMethodDecl 0x55cd4c07b248 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x55cd4c07b308 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55cd4c07b3c8 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x55cd4c07b488 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x55cd4c07b548 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55cd4c07b6b8 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x55cd4c07b5f8 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x55cd4c07b800 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x55cd4c07b770 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cd4c07b8c8 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55cd4c07b968 <col:54> "" ""
|-CXXMethodDecl 0x55cd4c07b9f8 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55cd4c07ba98 <col:54> "" ""
|-CXXMethodDecl 0x55cd4c07bb28 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55cd4c07bbc8 <col:54> "" ""
|-CXXMethodDecl 0x55cd4c07bcc8 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x55cd4c07bd98 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x55cd4c07bec8 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x55cd4c07bfc0 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x55cd4c07c0f8 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55cd4c089bd0 <col:39, line:271:5>
|   `-ReturnStmt 0x55cd4c089bc0 <line:267:9, col:61>
|     `-CallExpr 0x55cd4c089b60 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55cd4c089b48 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55cd4c0899d0 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55cd4c083168 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55cd4c089b90 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55cd4c089a30 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55cd4c081e88
|       |   `-MemberExpr 0x55cd4c089a00 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55cd4c082e38
|       |     `-CXXThisExpr 0x55cd4c0899f0 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55cd4c089ba8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55cd4c089ad0 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55cd4c089aa0 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55cd4c089a60 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c078690 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55cd4c089ab8 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55cd4c089a80 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c078600 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55cd4c07c1b8 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55cd4c089d90 <col:39, line:279:5>
|   `-ReturnStmt 0x55cd4c089d80 <line:275:9, col:61>
|     `-CallExpr 0x55cd4c089d20 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55cd4c089d08 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55cd4c089be8 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55cd4c083168 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55cd4c089d50 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55cd4c089c48 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55cd4c081e88
|       |   `-MemberExpr 0x55cd4c089c18 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55cd4c082e38
|       |     `-CXXThisExpr 0x55cd4c089c08 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55cd4c089d68 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55cd4c089ce8 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55cd4c089cb8 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55cd4c089c78 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c078690 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55cd4c089cd0 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55cd4c089c98 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c0784e0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55cd4c07c278 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55cd4c089f28 <col:39, line:287:5>
|   `-ReturnStmt 0x55cd4c089f18 <line:283:9, col:53>
|     `-BinaryOperator 0x55cd4c089ef8 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x55cd4c089ec8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55cd4c089de8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55cd4c081e88
|       |   `-MemberExpr 0x55cd4c089db8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55cd4c082e38
|       |     `-CXXThisExpr 0x55cd4c089da8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55cd4c089ee0 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x55cd4c089ea8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55cd4c089e88 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55cd4c089e58 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55cd4c089e18 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c078330 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55cd4c089e70 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55cd4c089e38 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c078690 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55cd4c07c368 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55cd4c08b1c0 <col:40, line:293:5>
|   |-DeclStmt 0x55cd4c08a070 <line:291:9, col:48>
|   | `-VarDecl 0x55cd4c089f50 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55cd4c08a050 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55cd4c089ff8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55cd4c089fc8 <col:22> '<bound member function type>' ->subsec 0x55cd4c07b308
|   |     |   `-CXXThisExpr 0x55cd4c089fb8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55cd4c08a038 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55cd4c08a018 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c078760 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55cd4c08b1b0 <line:292:9, col:70>
|     `-ExprWithCleanups 0x55cd4c08b198 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55cd4c08b168 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55cd4c08b150 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55cd4c08b130 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55cd4c08b100 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55cd4c08ae98 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55cd4c08ae80 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55cd4c08a088 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55cd4c089f50 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55cd4c08b0a0 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55cd4c08b088 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55cd4c08b058 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55cd4c08aeb0 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55cd4c08ae20 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55cd4c08ae08 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55cd4c08adb8 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55cd4c077c38 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55cd4c08ad58 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55cd4c08a0b8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55cd4c08a0a8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55cd4c08ada0 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55cd4c08ad88 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55cd4c08a578 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55cd4c08a0e0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55cd4c08a170 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55cd4c08a140 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55cd4c08a100 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c078760 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55cd4c08a158 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55cd4c08a120 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55cd4c089f50 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55cd4c08b0d0 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55cd4c08ae68 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55cd4c08ae58 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55cd4c07c428 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55cd4c08b718 <col:40, line:302:5>
|   |-DeclStmt 0x55cd4c08b310 <line:297:9, col:48>
|   | `-VarDecl 0x55cd4c08b1f0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55cd4c08b2f0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55cd4c08b298 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55cd4c08b268 <col:22> '<bound member function type>' ->subsec 0x55cd4c07b308
|   |     |   `-CXXThisExpr 0x55cd4c08b258 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55cd4c08b2d8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55cd4c08b2b8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c078830 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55cd4c08b708 <line:298:9, col:70>
|     `-ExprWithCleanups 0x55cd4c08b6f0 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55cd4c08b6c0 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55cd4c08b6a8 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55cd4c08b688 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55cd4c08b658 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55cd4c08b580 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55cd4c08b568 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55cd4c08b328 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55cd4c08b1f0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55cd4c08b5f8 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55cd4c08b5e0 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55cd4c08b5b0 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55cd4c08b598 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55cd4c08b508 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55cd4c08b4f0 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55cd4c08b4d0 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55cd4c077c38 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55cd4c08b470 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55cd4c08b358 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55cd4c08b348 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55cd4c08b4b8 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55cd4c08b4a0 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55cd4c08b430 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55cd4c08b380 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55cd4c08b410 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55cd4c08b3e0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55cd4c08b3a0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c078830 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55cd4c08b3f8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55cd4c08b3c0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55cd4c08b1f0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55cd4c08b628 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55cd4c08b550 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55cd4c08b540 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55cd4c07c4e8 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55cd4c08b7a0 <col:40, line:306:5>
|   `-ReturnStmt 0x55cd4c08b790 <line:305:9, col:17>
|     `-CXXConstructExpr 0x55cd4c08b760 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x55cd4c08b748 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55cd4c08b738 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x55cd4c07c688 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x55cd4c07c598 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55cd4c07c858 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x55cd4c07c760 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x55cd4c07c948 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x55cd4c07cab8 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x55cd4c07c9f8 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x55cd4c08b8e8 <col:56, line:320:5>
|   `-ReturnStmt 0x55cd4c08b8d8 <line:319:9, col:32>
|     `-ExprWithCleanups 0x55cd4c08b8c0 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x55cd4c08b890 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55cd4c08b878 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55cd4c08b838 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55cd4c08b808 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55cd4c08b7c8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55cd4c07c9f8 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x55cd4c08b820 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55cd4c08b7e8 <col:31> 'int' 0
|-CXXMethodDecl 0x55cd4c07ccf8 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55cd4c07cb70 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55cd4c07cbe8 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cd4c08bab8 <col:72, line:326:5>
|   `-ReturnStmt 0x55cd4c08baa8 <line:325:9, col:51>
|     `-ExprWithCleanups 0x55cd4c08ba90 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55cd4c08ba60 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55cd4c08ba48 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55cd4c08ba08 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55cd4c08b9f0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55cd4c08b910 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55cd4c07cb70 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55cd4c08b9b0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55cd4c08b998 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55cd4c08b930 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55cd4c0815e0 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55cd4c08b9d8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55cd4c08b950 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cd4c07cbe8 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cd4c07cea8 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55cd4c07cdb8 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55cd4c08c180 <col:56, line:337:5>
|   |-DeclStmt 0x55cd4c08bdb8 <line:329:9, col:51>
|   | `-VarDecl 0x55cd4c08bae0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55cd4c08bda0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55cd4c08bd70 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55cd4c08bd58 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55cd4c08bd40 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55cd4c08bd10 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55cd4c08bcf8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55cd4c08bce0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55cd4c08bbd0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55cd4c08bf70 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55cd4c08be20 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55cd4c081e88
|   | | `-MemberExpr 0x55cd4c08bdf0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55cd4c082e38
|   | |   `-DeclRefExpr 0x55cd4c08bdd0 <col:9> 'Timestamp' lvalue Var 0x55cd4c08bae0 't' 'Timestamp'
|   | `-BinaryOperator 0x55cd4c08bf50 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55cd4c08bf20 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cd4c08be50 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55cd4c07cdb8 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55cd4c08bf38 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55cd4c08bf00 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55cd4c08bee0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55cd4c08beb0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55cd4c08be70 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c078690 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55cd4c08bec8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55cd4c08be90 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c078600 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55cd4c08c168 <line:336:9, col:16>
|     `-CXXConstructExpr 0x55cd4c08c138 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55cd4c08c120 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55cd4c08c100 <col:16> 'Timestamp' lvalue Var 0x55cd4c08bae0 't' 'Timestamp'
|-CXXMethodDecl 0x55cd4c07d070 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55cd4c07cf60 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55cd4c07cfd8 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cd4c08c338 <col:72, line:343:5>
|   `-ReturnStmt 0x55cd4c08c328 <line:342:9, col:51>
|     `-ExprWithCleanups 0x55cd4c08c310 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55cd4c08c2e0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55cd4c08c2c8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55cd4c08c288 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55cd4c08c270 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55cd4c08c1b8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55cd4c07cf60 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55cd4c08c230 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55cd4c08c218 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55cd4c08c1d8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55cd4c081728 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55cd4c08c258 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55cd4c08c1f8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cd4c07cfd8 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cd4c07d1c0 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55cd4c07d130 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55cd4c08c780 <col:56, line:354:5>
|   |-DeclStmt 0x55cd4c08c528 <line:346:9, col:51>
|   | `-VarDecl 0x55cd4c08c360 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55cd4c08c510 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55cd4c08c4e0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55cd4c08c4c8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55cd4c08c4b0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55cd4c08c480 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55cd4c08c468 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55cd4c08c450 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55cd4c08c420 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55cd4c08c6e0 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55cd4c08c590 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55cd4c081e88
|   | | `-MemberExpr 0x55cd4c08c560 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55cd4c082e38
|   | |   `-DeclRefExpr 0x55cd4c08c540 <col:9> 'Timestamp' lvalue Var 0x55cd4c08c360 't' 'Timestamp'
|   | `-BinaryOperator 0x55cd4c08c6c0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55cd4c08c690 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cd4c08c5c0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55cd4c07d130 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55cd4c08c6a8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55cd4c08c670 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55cd4c08c650 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55cd4c08c620 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55cd4c08c5e0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c078690 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55cd4c08c638 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55cd4c08c600 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c0784e0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55cd4c08c768 <line:353:9, col:16>
|     `-CXXConstructExpr 0x55cd4c08c738 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55cd4c08c720 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55cd4c08c700 <col:16> 'Timestamp' lvalue Var 0x55cd4c08c360 't' 'Timestamp'
|-CXXMethodDecl 0x55cd4c07d388 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55cd4c07d278 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55cd4c07d2f0 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cd4c08c938 <col:72, line:360:5>
|   `-ReturnStmt 0x55cd4c08c928 <line:359:9, col:51>
|     `-ExprWithCleanups 0x55cd4c08c910 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55cd4c08c8e0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55cd4c08c8c8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55cd4c08c888 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55cd4c08c870 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55cd4c08c7b8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55cd4c07d278 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55cd4c08c830 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55cd4c08c818 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55cd4c08c7d8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55cd4c081870 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55cd4c08c858 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55cd4c08c7f8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cd4c07d2f0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cd4c07d4d8 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55cd4c07d448 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55cd4c0992a8 <col:56, line:371:5>
|   |-DeclStmt 0x55cd4c08cb28 <line:363:9, col:51>
|   | `-VarDecl 0x55cd4c08c960 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55cd4c08cb10 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55cd4c08cae0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55cd4c08cac8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55cd4c08cab0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55cd4c08ca80 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55cd4c08ca68 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55cd4c08ca50 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55cd4c08ca20 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55cd4c099208 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55cd4c08cb90 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55cd4c081e88
|   | | `-MemberExpr 0x55cd4c08cb60 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55cd4c082e38
|   | |   `-DeclRefExpr 0x55cd4c08cb40 <col:9> 'Timestamp' lvalue Var 0x55cd4c08c960 't' 'Timestamp'
|   | `-CallExpr 0x55cd4c0991a8 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x55cd4c099190 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x55cd4c08cbc0 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55cd4c083168 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x55cd4c0991d8 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55cd4c08cbe0 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x55cd4c07d448 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55cd4c0991f0 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x55cd4c099170 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x55cd4c099140 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x55cd4c08cc00 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c078330 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x55cd4c099158 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x55cd4c08cc20 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c078690 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55cd4c099290 <line:370:9, col:16>
|     `-CXXConstructExpr 0x55cd4c099260 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55cd4c099248 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55cd4c099228 <col:16> 'Timestamp' lvalue Var 0x55cd4c08c960 't' 'Timestamp'
|-CXXMethodDecl 0x55cd4c07d5c8 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x55cd4c0993e8 <col:39, line:377:5>
|   `-ReturnStmt 0x55cd4c0993d8 <line:376:9, col:30>
|     `-ExprWithCleanups 0x55cd4c0993c0 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x55cd4c099390 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55cd4c099378 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55cd4c099338 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x55cd4c0992e0 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x55cd4c099320 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55cd4c099300 <col:29> 'int' 1
|-CXXMethodDecl 0x55cd4c07d688 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x55cd4c0994c8 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x55cd4c099480 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x55cd4c099410 <col:9> '<bound member function type>' ->assign 0x55cd4c07d888
|     | `-CXXThisExpr 0x55cd4c099400 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55cd4c099440 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55cd4c0994b0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55cd4c099460 <col:19> 'int' 0
|-CXXMethodDecl 0x55cd4c07d888 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55cd4c07d738 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55cd4c07d7b0 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55cd4c084a60 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55cd4c084a40 <col:60> 'int' 0
| `-CompoundStmt 0x55cd4c0996c0 <col:63, line:395:5>
|   `-BinaryOperator 0x55cd4c0996a0 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x55cd4c099520 <col:9, col:12> 'int64_t':'long' lvalue .x 0x55cd4c081e88
|     | `-MemberExpr 0x55cd4c0994f0 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x55cd4c082e38
|     |   `-CXXThisExpr 0x55cd4c0994e0 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x55cd4c099680 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x55cd4c099610 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x55cd4c0995b0 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x55cd4c099598 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x55cd4c099580 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x55cd4c099550 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55cd4c07d738 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x55cd4c0995f8 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x55cd4c0995d8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c078690 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x55cd4c099668 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x55cd4c099650 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x55cd4c099630 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cd4c07d7b0 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cd4c07da58 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55cd4c07d948 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55cd4c07d9c0 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cd4c099818 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x55cd4c0997d0 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x55cd4c0996e8 <col:9> '<bound member function type>' ->assign 0x55cd4c07d888
|     | `-CXXThisExpr 0x55cd4c0996d8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55cd4c099800 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55cd4c099718 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55cd4c07d948 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55cd4c099790 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55cd4c099778 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55cd4c099738 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55cd4c081728 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55cd4c0997b8 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55cd4c099758 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cd4c07d9c0 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cd4c07dc28 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55cd4c07db18 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55cd4c07db90 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cd4c099970 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x55cd4c099928 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x55cd4c099840 <col:9> '<bound member function type>' ->assign 0x55cd4c07d888
|     | `-CXXThisExpr 0x55cd4c099830 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55cd4c099958 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55cd4c099870 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55cd4c07db18 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55cd4c0998e8 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55cd4c0998d0 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55cd4c099890 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55cd4c081870 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55cd4c099910 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55cd4c0998b0 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cd4c07db90 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cd4c07ddf8 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55cd4c07dce8 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55cd4c07dd60 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55cd4c084a98 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55cd4c084a78 <col:57> 'int' 0
| `-DeprecatedAttr 0x55cd4c07dea8 <col:75> "" ""
|-CXXMethodDecl 0x55cd4c07e038 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55cd4c07df28 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55cd4c07dfa0 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55cd4c07e0e8 <col:74> "" ""
|-CXXMethodDecl 0x55cd4c07e278 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55cd4c07e168 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55cd4c07e1e0 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55cd4c07e328 <col:74> "" ""
|-CXXMethodDecl 0x55cd4c07e3b8 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x55cd4c07e458 <col:42> "" ""
|-CXXMethodDecl 0x55cd4c080c90 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x55cd4c080b70 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55cd4c080bf0 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x55cd4c080d60 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x55cd4c080e20 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x55cd4c080ec0 <col:20>
| `-OptimizeNoneAttr 0x55cd4c080f18 <col:30>
|-CXXMethodDecl 0x55cd4c080f60 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x55cd4c081020 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x55cd4c0810e0 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55cd4c0811a0 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x55cd4c081260 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55cd4c081320 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x55cd4c0813e0 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55cd4c0814a0 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x55cd4c0815e0 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55cd4c081550 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cd4c099ab8 <col:58, line:512:5>
|   `-ReturnStmt 0x55cd4c099aa8 <line:511:9, col:53>
|     `-BinaryOperator 0x55cd4c099a88 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55cd4c099a58 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55cd4c099988 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cd4c081550 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55cd4c099a70 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55cd4c099a38 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55cd4c099a18 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55cd4c0999e8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55cd4c0999a8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c078690 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55cd4c099a00 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55cd4c0999c8 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c078600 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55cd4c081728 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55cd4c081698 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cd4c099c00 <col:58, line:516:5>
|   `-ReturnStmt 0x55cd4c099bf0 <line:515:9, col:53>
|     `-BinaryOperator 0x55cd4c099bd0 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55cd4c099ba0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55cd4c099ad0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cd4c081698 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55cd4c099bb8 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55cd4c099b80 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55cd4c099b60 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55cd4c099b30 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55cd4c099af0 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c078690 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55cd4c099b48 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55cd4c099b10 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c0784e0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55cd4c081870 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55cd4c0817e0 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cd4c099d48 <col:58, line:520:5>
|   `-ReturnStmt 0x55cd4c099d38 <line:519:9, col:53>
|     `-BinaryOperator 0x55cd4c099d18 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55cd4c099ce8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55cd4c099c18 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cd4c0817e0 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55cd4c099d00 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55cd4c099cc8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55cd4c099ca8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55cd4c099c78 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55cd4c099c38 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c078330 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55cd4c099c90 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55cd4c099c58 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c078690 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55cd4c0819b8 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55cd4c081928 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cd4c099e90 <col:60, line:524:5>
|   `-ReturnStmt 0x55cd4c099e80 <line:523:9, col:55>
|     `-BinaryOperator 0x55cd4c099e60 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55cd4c099e30 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55cd4c099d60 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cd4c081928 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55cd4c099e48 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55cd4c099e10 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55cd4c099df0 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55cd4c099dc0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55cd4c099d80 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c078690 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55cd4c099dd8 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55cd4c099da0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c078600 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55cd4c081b00 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55cd4c081a70 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cd4c099fd8 <col:60, line:528:5>
|   `-ReturnStmt 0x55cd4c099fc8 <line:527:9, col:55>
|     `-BinaryOperator 0x55cd4c099fa8 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55cd4c099f78 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55cd4c099ea8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cd4c081a70 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55cd4c099f90 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55cd4c099f58 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55cd4c099f38 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55cd4c099f08 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55cd4c099ec8 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c078690 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55cd4c099f20 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55cd4c099ee8 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c0784e0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55cd4c081c48 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55cd4c081bb8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cd4c09a120 <col:60, line:532:5>
|   `-ReturnStmt 0x55cd4c09a110 <line:531:9, col:55>
|     `-BinaryOperator 0x55cd4c09a0f0 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55cd4c09a0c0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55cd4c099ff0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cd4c081bb8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55cd4c09a0d8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55cd4c09a0a0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55cd4c09a080 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55cd4c09a050 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55cd4c09a010 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c078330 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55cd4c09a068 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55cd4c09a030 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55cd4c078690 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x55cd4c081cf0 prev 0x55cd4c078b30 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55cd4c081de8 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x55cd4c081e88 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x55cd4c088c50 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55cd4c089038 <col:11>
| |-CXXConstructorDecl 0x55cd4c088d30 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55cd4c088e18 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55cd4c089780 <col:11>
| |-CXXConstructorDecl 0x55cd4c088eb8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x55cd4c088fc8 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x55cd4c08afd8 <col:11>
| |-CXXDestructorDecl 0x55cd4c08a2e8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55cd4bd90e98 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55cd4bd90fa8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55cd4bd91870 <col:11>
| |   `-ReturnStmt 0x55cd4bd91860 <col:11>
| |     `-UnaryOperator 0x55cd4bd91848 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55cd4bd91838 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x55cd4bd91018 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55cd4bd91128 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x55cd4c169630 <col:11>
|     `-ReturnStmt 0x55cd4c169620 <col:11>
|       `-UnaryOperator 0x55cd4c169608 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55cd4c1695f8 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x55cd4c081ef0 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x55cd4c081ff0 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55cd4c0821f0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c081fd0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55cd4c081fb0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55cd4c082080 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55cd4c082208 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c082060 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55cd4c082040 <col:23> 'int' 1
| |-EnumConstantDecl 0x55cd4c082110 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55cd4c082220 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0820f0 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x55cd4c0820d0 <col:23> 'int' 2
| `-EnumConstantDecl 0x55cd4c0821a0 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x55cd4c082238 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cd4c082180 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x55cd4c082160 <col:27> 'int' 3
|-CXXMethodDecl 0x55cd4c082278 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x55cd4c082340 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x55cd4c082548 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x55cd4c0823f0 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x55cd4c082470 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x55cd4c084ab0 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x55cd4c082758 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x55cd4c082608 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x55cd4c082680 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x55cd4c082828 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x55cd4c0828e8 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x55cd4c082a58 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x55cd4c082998 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x55cd4c082b20 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55cd4c082be0 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x55cd4c082ca0 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55cd4c082d60 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x55cd4c082e00 <line:670:3, col:10> col:3 private
|-FieldDecl 0x55cd4c082e38 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x55cd4c082ea8 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x55cd4c09a138 <col:27, line:684:5>
|-CXXMethodDecl 0x55cd4c082f68 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x55cd4c09a148 <col:27, line:696:5>
|-CXXMethodDecl 0x55cd4c083168 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55cd4c083018 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55cd4c083090 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cd4c09a2d0 <col:66, line:700:5>
|   `-ReturnStmt 0x55cd4c09a2c0 <line:699:9, col:31>
|     `-CallExpr 0x55cd4c09a260 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x55cd4c09a248 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55cd4c09a1f8 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x55cd4bf05518 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x55cd4c09a290 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x55cd4c09a1b8 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x55cd4c083018 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x55cd4c09a2a8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55cd4c09a1d8 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cd4c083090 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cd4c0834d8 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55cd4c083228 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x55cd4c0832a0 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x55cd4c083318 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55cd4c083390 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cd4c09a620 <col:64, line:707:5>
|   |-DeclStmt 0x55cd4c09a360 <line:704:9, col:24>
|   | `-VarDecl 0x55cd4c09a2f8 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x55cd4c09a570 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x55cd4c09a378 <col:9> 'int32_t':'int' lvalue ParmVar 0x55cd4c0832a0 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x55cd4c09a558 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x55cd4c09a4f0 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x55cd4c09a4d8 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cd4c09a458 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x55cd4bf0a7e8 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x55cd4c09a528 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55cd4c09a3f8 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x55cd4c083318 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x55cd4c09a540 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55cd4c09a418 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cd4c083390 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x55cd4c09a438 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x55cd4c09a2f8 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x55cd4c09a600 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x55cd4c09a590 <col:9> 'int32_t':'int' lvalue ParmVar 0x55cd4c083228 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x55cd4c09a5e8 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55cd4c09a5d0 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x55cd4c09a5b0 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x55cd4c09a2f8 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x55cd4c083778 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x55cd4c0835a8 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x55cd4c083620 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x55cd4c083698 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x55cd4c083a18 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x55cd4c083840 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x55cd4c0838b8 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x55cd4c083930 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x55cd4c083ba8 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x55cd4c083ae0 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x55cd4c083da8 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x55cd4c083c60 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x55cd4c083cd8 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x55cd4c084078 <line:717:5, col:73> col:24
| `-FunctionDecl 0x55cd4c083fb8 parent 0x55cd4bb852b8 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55cd4c083e68 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x55cd4c083ee0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55cd4c084298 <line:718:5, col:72> col:24
| `-FunctionDecl 0x55cd4c0841d8 parent 0x55cd4bb852b8 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55cd4c0840c8 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x55cd4c084140 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x55cd4c084460 <line:719:5, col:57> col:29
| `-FunctionDecl 0x55cd4c0843a8 parent 0x55cd4bb852b8 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x55cd4c0842e8 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x55cd4c0846e8 <line:720:5, col:73> col:30
| `-FunctionDecl 0x55cd4c084628 parent 0x55cd4bb852b8 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55cd4c0844d8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55cd4c084550 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55cd4c084908 <line:721:5, col:73> col:30
| `-FunctionDecl 0x55cd4c084848 parent 0x55cd4bb852b8 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55cd4c084738 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55cd4c0847b0 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x55cd4c08a190 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55cd4c08a278 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x55cd4c082e38 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55cd4c08ace8 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x55cd4c08aca0 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55cd4c082e38
| |     `-DeclRefExpr 0x55cd4c08ac80 <col:7> 'const Timestamp' lvalue ParmVar 0x55cd4c08a278 '' 'const Timestamp &'
| `-CompoundStmt 0x55cd4c08ad48 <col:7>
|-CXXConstructorDecl 0x55cd4c08a3f8 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55cd4c08a508 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x55cd4c082e38 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55cd4c08afe8 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x55cd4c08af90 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55cd4c082e38
| |     `-CXXStaticCastExpr 0x55cd4c08af60 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x55cd4c08af30 <col:7> 'Timestamp' lvalue ParmVar 0x55cd4c08a508 '' 'Timestamp &&'
| `-CompoundStmt 0x55cd4c08b048 <col:7>
|-CXXDestructorDecl 0x55cd4c08a5b8 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55cd4bd90ce8 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55cd4bd90df8 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x55cd4bd918e8 <col:7>
|   |-CXXMemberCallExpr 0x55cd4bd91888 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x55cd4bd917c8 <col:7> '<bound member function type>' .operator= 0x55cd4bd90e98
|   | | `-MemberExpr 0x55cd4bd916d8 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55cd4c082e38
|   | |   `-CXXThisExpr 0x55cd4bd916c8 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x55cd4bd91798 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55cd4c082e38
|   |   `-DeclRefExpr 0x55cd4bd91778 <col:7> 'const Timestamp' lvalue ParmVar 0x55cd4bd90df8 '' 'const Timestamp &'
|   `-ReturnStmt 0x55cd4bd918d8 <col:7>
|     `-UnaryOperator 0x55cd4bd918c0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55cd4bd918b0 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x55cd4bd91198 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55cd4bd912a8 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x55cd4c1696a8 <col:7>
    |-CXXMemberCallExpr 0x55cd4c169648 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x55cd4c1695b0 <col:7> '<bound member function type>' .operator= 0x55cd4bd91018
    | | `-MemberExpr 0x55cd4c169480 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55cd4c082e38
    | |   `-CXXThisExpr 0x55cd4c169470 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x55cd4c169580 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55cd4c082e38
    |   `-CXXStaticCastExpr 0x55cd4c169550 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x55cd4c169520 <col:7> 'Timestamp' lvalue ParmVar 0x55cd4bd912a8 '' 'Timestamp &&'
    `-ReturnStmt 0x55cd4c169698 <col:7>
      `-UnaryOperator 0x55cd4c169680 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55cd4c169670 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cd4c16e160 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x55cd4c172668 prev 0x55cd4c16e160 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55cd4c1726f8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55cd4c172720 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55cd4bb853b0 'int'
|-TypedefDecl 0x55cd4c1742f0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x55cd4c1742a0 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x55cd4c172bd0 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x55cd4c172ad0 'type'
|     `-TemplateSpecializationType 0x55cd4c172a60 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55cd4c172940 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x55cd4c172920 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55cd4c172900 <col:24> 'unsigned long' 16
|       `-RecordType 0x55cd4c172a40 'char_array<16>'
|         `-ClassTemplateSpecialization 0x55cd4c172960 'char_array'
|-TypedefDecl 0x55cd4c1743a8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x55cd4c174370 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x55cd4c174350 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x55cd4c1742f0 'type'
|     `-ElaboratedType 0x55cd4c1742a0 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x55cd4c172bd0 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x55cd4c172ad0 'type'
|         `-TemplateSpecializationType 0x55cd4c172a60 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55cd4c172940 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x55cd4c172920 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55cd4c172900 <col:24> 'unsigned long' 16
|           `-RecordType 0x55cd4c172a40 'char_array<16>'
|             `-ClassTemplateSpecialization 0x55cd4c172960 'char_array'
|-CXXMethodDecl 0x55cd4c174528 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x55cd4c174438 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x55cd4c174618 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55cd4c1746f8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55cd4c1746f8
|-CXXMethodDecl 0x55cd4c1749c8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55cd4c1748d0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x55cd4c174c08 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55cd4c174a80 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55cd4c174af8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55cd4c174dd8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55cd4c174cc8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55cd4c174d40 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55cd4c174f38 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55cd4c175008 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55cd4c175258 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55cd4c1750c8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55cd4c175140 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55cd4c1754b8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x55cd4c175328 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55cd4c1753a0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55cd4c175678 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55cd4c175588 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55cd4c175838 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55cd4c175740 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55cd4c1758f0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55cd4c1759a0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55cd4c175bd8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55cd4c175a50 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55cd4c175ac8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55cd4c175e78 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55cd4c175d80 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x55cd4c175f40 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x55cd4c175f90 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55cd4c175fe0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cd4c16ccb8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x55cd4c16cec8 prev 0x55cd4c16ccb8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55cd4c16e0d0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55cd4c16e080 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x55cd4c16e060 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x55cd4c16df10 'type'
|     `-SubstTemplateTypeParmType 0x55cd4c16dd30 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55cd4be4d6a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cd4be4d648 'T'
|       `-RecordType 0x55cd4c16d880 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55cd4c16d798 'sized_array_memory'
|-FieldDecl 0x55cd4c176030 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55cd4c176080 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55cd4c1760b8 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x55cd4c16cf60 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55cd4be85338 'T'
|   `-RecordType 0x55cd4c16bec0 'TimerSet::heap_element'
|     `-CXXRecord 0x55cd4c16be30 'heap_element'
|-TypedefDecl 0x55cd4c176178 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x55cd4c176140 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x55cd4c16cf60 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cd4be85338 'T'
|     `-RecordType 0x55cd4c16bec0 'TimerSet::heap_element'
|       `-CXXRecord 0x55cd4c16be30 'heap_element'
|-TypedefDecl 0x55cd4c176208 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55cd4c1761d0 'const TimerSet::heap_element &'
|   `-QualType 0x55cd4c16cf61 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55cd4c16cf60 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cd4be85338 'T'
|       `-RecordType 0x55cd4c16bec0 'TimerSet::heap_element'
|         `-CXXRecord 0x55cd4c16be30 'heap_element'
|-TypedefDecl 0x55cd4c176298 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x55cd4c176260 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55cd4c16cf60 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cd4be85338 'T'
|     `-RecordType 0x55cd4c16bec0 'TimerSet::heap_element'
|       `-CXXRecord 0x55cd4c16be30 'heap_element'
|-TypedefDecl 0x55cd4c176358 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x55cd4c176320 'const TimerSet::heap_element *'
|   `-QualType 0x55cd4c16cf61 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55cd4c16cf60 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cd4be85338 'T'
|       `-RecordType 0x55cd4c16bec0 'TimerSet::heap_element'
|         `-CXXRecord 0x55cd4c16be30 'heap_element'
|-TypedefDecl 0x55cd4c1771c0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x55cd4c177170 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x55cd4c177150 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x55cd4c177088 'type'
|     `-LValueReferenceType 0x55cd4c177050 'const TimerSet::heap_element &'
|       `-QualType 0x55cd4c176df1 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x55cd4c176df0 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x55cd4be57d70 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55cd4be57d18 'T'
|           `-RecordType 0x55cd4c16bec0 'TimerSet::heap_element'
|             `-CXXRecord 0x55cd4c16be30 'heap_element'
|-TypedefDecl 0x55cd4c177228 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55cd4c1761d0 'const TimerSet::heap_element &'
|   `-QualType 0x55cd4c16cf61 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55cd4c16cf60 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cd4be85338 'T'
|       `-RecordType 0x55cd4c16bec0 'TimerSet::heap_element'
|         `-CXXRecord 0x55cd4c16be30 'heap_element'
|-TypedefDecl 0x55cd4c177280 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55cd4bb853b0 'int'
|-TypedefDecl 0x55cd4c1772e8 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x55cd4c176260 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55cd4c16cf60 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cd4be85338 'T'
|     `-RecordType 0x55cd4c16bec0 'TimerSet::heap_element'
|       `-CXXRecord 0x55cd4c16be30 'heap_element'
|-TypedefDecl 0x55cd4c177350 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x55cd4c176320 'const TimerSet::heap_element *'
|   `-QualType 0x55cd4c16cf61 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55cd4c16cf60 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cd4be85338 'T'
|       `-RecordType 0x55cd4c16bec0 'TimerSet::heap_element'
|         `-CXXRecord 0x55cd4c16be30 'heap_element'
|-EnumDecl 0x55cd4c1773a8 <line:134:5> col:5
| `-EnumConstantDecl 0x55cd4c1774a0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55cd4c177480 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55cd4be86a18 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55cd4be869f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55cd4be869d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55cd4c177528 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55cd4c1777b8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55cd4c1775e0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cd4c177680 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x55cd4c177a78 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55cd4c177960 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x55cd4c177d38 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55cd4c177c20 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55cd4c178080 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55cd4c177f60 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x55cd4c178390 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55cd4c178270 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55cd4c178680 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55cd4c1784c8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cd4c178540 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55cd4c1787d8 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55cd4c1788b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cd4c178910 <col:30> Inherited
|-CXXMethodDecl 0x55cd4c178958 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55cd4c178a08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cd4c178a60 <col:30> Inherited
|-CXXMethodDecl 0x55cd4c178b28 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55cd4c178bd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cd4c178c30 <col:30> Inherited
|-CXXMethodDecl 0x55cd4c178c78 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55cd4c178d28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cd4c178d80 <col:30> Inherited
|-CXXMethodDecl 0x55cd4c178dc8 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55cd4c178e78 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cd4c178ed0 <col:30> Inherited
|-CXXMethodDecl 0x55cd4c178f18 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55cd4c178fc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cd4c179020 <col:30> Inherited
|-CXXMethodDecl 0x55cd4c179048 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cd4c1790f8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cd4c1791a8 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55cd4c179368 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55cd4c179258 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cd4c1792d0 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55cd4c1794b8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55cd4c179428 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cd4c179668 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x55cd4c179570 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cd4c179720 <col:20>
| `-OptimizeNoneAttr 0x55cd4c179778 <col:30>
|-CXXMethodDecl 0x55cd4c179898 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x55cd4c1797a0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cd4c179950 <col:20>
| `-OptimizeNoneAttr 0x55cd4c1799a8 <col:30>
|-CXXMethodDecl 0x55cd4c179a60 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55cd4c1799d0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cd4c179ba8 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cd4c179b18 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cd4c179cd8 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55cd4c179e08 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55cd4c179ed8 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55cd4c179fa8 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55cd4c17a0e8 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55cd4c17a058 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cd4c17a230 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cd4c17a1a0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cd4c17a378 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x55cd4c17a2e8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cd4c17a430 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55cd4c17a580 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55cd4c17a4a0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cd4c17a638 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55cd4c17a6f8 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x55cd4c17a7f8 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x55cd4c17a9a8 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55cd4c17a8b8 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x55cd4c17b198 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55cd4c17aa60 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x55cd4c17b0f8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x55cd4c17aff8 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x55cd4c17b278 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55cd4c17b3c8 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55cd4c17b338 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55cd4c17b480 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55cd4c17b6c8 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55cd4c17b540 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55cd4c17b5b8 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55cd4c17b888 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x55cd4c17b798 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55cd4c17bad8 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x55cd4c17b950 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55cd4c17b9c8 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55cd4c17bb98 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55cd4c17bdf8 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55cd4c17bd00 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x55cd4c17bec8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55cd4c17bec8

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cd4c17d3f0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x55cd4c17d5c8 prev 0x55cd4c17d3f0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55cd4c17d658 <col:46, col:52> col:46 public
|-TypedefDecl 0x55cd4c17d680 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55cd4bb853b0 'int'
|-TypedefDecl 0x55cd4c17f250 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x55cd4c17f200 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x55cd4c17db30 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x55cd4c17da30 'type'
|     `-TemplateSpecializationType 0x55cd4c17d9c0 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55cd4c17d8a0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x55cd4c17d880 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55cd4c17d860 <col:24> 'unsigned long' 8
|       `-RecordType 0x55cd4c17d9a0 'char_array<8>'
|         `-ClassTemplateSpecialization 0x55cd4c17d8c0 'char_array'
|-TypedefDecl 0x55cd4c17f308 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x55cd4c17f2d0 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x55cd4c17f2b0 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x55cd4c17f250 'type'
|     `-ElaboratedType 0x55cd4c17f200 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x55cd4c17db30 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x55cd4c17da30 'type'
|         `-TemplateSpecializationType 0x55cd4c17d9c0 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55cd4c17d8a0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x55cd4c17d880 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55cd4c17d860 <col:24> 'unsigned long' 8
|           `-RecordType 0x55cd4c17d9a0 'char_array<8>'
|             `-ClassTemplateSpecialization 0x55cd4c17d8c0 'char_array'
|-CXXMethodDecl 0x55cd4c17f488 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x55cd4c17f398 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x55cd4c17f578 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55cd4c17f658 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55cd4c17f658
|-CXXMethodDecl 0x55cd4c17f928 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55cd4c17f830 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x55cd4c17fb68 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55cd4c17f9e0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55cd4c17fa58 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55cd4c17fd38 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55cd4c17fc28 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55cd4c17fca0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55cd4c17fe98 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55cd4c17ff68 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55cd4c1801b8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55cd4c180028 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55cd4c1800a0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55cd4c180418 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x55cd4c180288 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55cd4c180300 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55cd4c1805d8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55cd4c1804e8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55cd4c180798 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55cd4c1806a0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55cd4c180850 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55cd4c180900 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55cd4c180b38 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55cd4c1809b0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55cd4c180a28 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55cd4c180dd8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55cd4c180ce0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x55cd4c180ea0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x55cd4c180ef0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55cd4c180f40 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cd4c17c010 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x55cd4c17c218 prev 0x55cd4c17c010 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55cd4c17d360 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55cd4c17d310 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x55cd4c17d2f0 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x55cd4c17d1a0 'type'
|     `-SubstTemplateTypeParmType 0x55cd4c17cfc0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55cd4be4d6a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cd4be4d648 'T'
|       `-RecordType 0x55cd4c17cb10 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55cd4c17ca28 'sized_array_memory'
|-FieldDecl 0x55cd4c180f90 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55cd4c180fe0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55cd4c181018 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x55cd4c17c2b0 'Timer *' sugar
|   |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55cd4be85338 'T'
|   `-PointerType 0x55cd4c0e9f20 'Timer *'
|     `-RecordType 0x55cd4c0e9070 'Timer'
|       `-CXXRecord 0x55cd4c06d298 'Timer'
|-TypedefDecl 0x55cd4c1810d8 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x55cd4c1810a0 'Timer *&'
|   `-SubstTemplateTypeParmType 0x55cd4c17c2b0 'Timer *' sugar
|     |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cd4be85338 'T'
|     `-PointerType 0x55cd4c0e9f20 'Timer *'
|       `-RecordType 0x55cd4c0e9070 'Timer'
|         `-CXXRecord 0x55cd4c06d298 'Timer'
|-TypedefDecl 0x55cd4c181198 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x55cd4c181160 'Timer *const &'
|   `-QualType 0x55cd4c17c2b1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55cd4c17c2b0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cd4be85338 'T'
|       `-PointerType 0x55cd4c0e9f20 'Timer *'
|         `-RecordType 0x55cd4c0e9070 'Timer'
|           `-CXXRecord 0x55cd4c06d298 'Timer'
|-TypedefDecl 0x55cd4c181258 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x55cd4c181220 'Timer **'
|   `-SubstTemplateTypeParmType 0x55cd4c17c2b0 'Timer *' sugar
|     |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cd4be85338 'T'
|     `-PointerType 0x55cd4c0e9f20 'Timer *'
|       `-RecordType 0x55cd4c0e9070 'Timer'
|         `-CXXRecord 0x55cd4c06d298 'Timer'
|-TypedefDecl 0x55cd4c181318 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x55cd4c1812e0 'Timer *const *'
|   `-QualType 0x55cd4c17c2b1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55cd4c17c2b0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cd4be85338 'T'
|       `-PointerType 0x55cd4c0e9f20 'Timer *'
|         `-RecordType 0x55cd4c0e9070 'Timer'
|           `-CXXRecord 0x55cd4c06d298 'Timer'
|-TypedefDecl 0x55cd4c181ef0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x55cd4c181ea0 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x55cd4c181e80 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x55cd4c181e10 'type'
|     `-SubstTemplateTypeParmType 0x55cd4c181bd0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55cd4be584a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cd4be58450 'T'
|       `-PointerType 0x55cd4c0e9f20 'Timer *'
|         `-RecordType 0x55cd4c0e9070 'Timer'
|           `-CXXRecord 0x55cd4c06d298 'Timer'
|-TypedefDecl 0x55cd4c181f58 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x55cd4c181160 'Timer *const &'
|   `-QualType 0x55cd4c17c2b1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55cd4c17c2b0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cd4be85338 'T'
|       `-PointerType 0x55cd4c0e9f20 'Timer *'
|         `-RecordType 0x55cd4c0e9070 'Timer'
|           `-CXXRecord 0x55cd4c06d298 'Timer'
|-TypedefDecl 0x55cd4c181fb0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55cd4bb853b0 'int'
|-TypedefDecl 0x55cd4c182018 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x55cd4c181220 'Timer **'
|   `-SubstTemplateTypeParmType 0x55cd4c17c2b0 'Timer *' sugar
|     |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cd4be85338 'T'
|     `-PointerType 0x55cd4c0e9f20 'Timer *'
|       `-RecordType 0x55cd4c0e9070 'Timer'
|         `-CXXRecord 0x55cd4c06d298 'Timer'
|-TypedefDecl 0x55cd4c182080 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x55cd4c1812e0 'Timer *const *'
|   `-QualType 0x55cd4c17c2b1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55cd4c17c2b0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cd4be85338 'T'
|       `-PointerType 0x55cd4c0e9f20 'Timer *'
|         `-RecordType 0x55cd4c0e9070 'Timer'
|           `-CXXRecord 0x55cd4c06d298 'Timer'
|-EnumDecl 0x55cd4c1820d8 <line:134:5> col:5
| `-EnumConstantDecl 0x55cd4c1821d0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55cd4c1821b0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55cd4be86a18 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55cd4be869f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55cd4be869d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55cd4c182258 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55cd4c182590 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55cd4c182310 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cd4c1823b0 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x55cd4c182858 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55cd4c182740 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x55cd4c182b18 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55cd4c182a00 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55cd4c182e60 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55cd4c182d40 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x55cd4c183170 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55cd4c183050 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55cd4c183460 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55cd4c1832a8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cd4c183320 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55cd4c1835b8 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55cd4c183698 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cd4c1836f0 <col:30> Inherited
|-CXXMethodDecl 0x55cd4c183738 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55cd4c1837e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cd4c183840 <col:30> Inherited
|-CXXMethodDecl 0x55cd4c183908 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55cd4c1839b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cd4c183a10 <col:30> Inherited
|-CXXMethodDecl 0x55cd4c183a58 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55cd4c183b08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cd4c183b60 <col:30> Inherited
|-CXXMethodDecl 0x55cd4c183ba8 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55cd4c183c58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cd4c183cb0 <col:30> Inherited
|-CXXMethodDecl 0x55cd4c183cf8 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55cd4c183da8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cd4c183e00 <col:30> Inherited
|-CXXMethodDecl 0x55cd4c183e28 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cd4c183ed8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cd4c183f88 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55cd4c184148 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55cd4c184038 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cd4c1840b0 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55cd4c184298 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55cd4c184208 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cd4c184448 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x55cd4c184350 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cd4c184500 <col:20>
| `-OptimizeNoneAttr 0x55cd4c184558 <col:30>
|-CXXMethodDecl 0x55cd4c184678 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55cd4c184580 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cd4c184730 <col:20>
| `-OptimizeNoneAttr 0x55cd4c184788 <col:30>
|-CXXMethodDecl 0x55cd4c184840 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55cd4c1847b0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cd4c184988 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cd4c1848f8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cd4c184ab8 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x55cd4c184be8 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x55cd4c184cb8 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x55cd4c184d88 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x55cd4c184ec8 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55cd4c184e38 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cd4c185010 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cd4c184f80 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cd4c185158 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55cd4c1850c8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cd4c185210 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55cd4c185310 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55cd4c185280 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cd4c1853c8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55cd4c185488 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x55cd4c185588 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x55cd4c185708 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55cd4c185648 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x55cd4c185ec8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55cd4c1857c0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x55cd4c185e28 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x55cd4c185d28 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x55cd4c185fa8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55cd4c1860f8 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55cd4c186068 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55cd4c1861b0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55cd4c1863f8 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55cd4c186270 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55cd4c1862e8 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55cd4c1865b8 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x55cd4c1864c8 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55cd4c186808 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x55cd4c186680 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55cd4c1866f8 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55cd4c1868c8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55cd4c186b28 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55cd4c186a30 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x55cd4c186bf8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55cd4c186bf8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cd4c14b3c0 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55cd4c14b4d8 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x55cd4c14b568 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55cd4c14b5f0 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x55cd4c14b6e0 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55cd4c14b7e0 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x55cd4c14b8a0 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x55cd4c14b960 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x55cd4c14ba88 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55cd4c14ba88
| `-ParmVarDecl 0x55cd4c14bb98 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x55cd4c1879a8 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55cd4c1879a8
  `-ParmVarDecl 0x55cd4c187ab8 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cd4c16afb0 prev 0x55cd4c167138 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55cd4c16b0a8 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x55cd4c16b138 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55cd4c16b1c0 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x55cd4c16b2b8 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x55cd4c187e20 <col:43, col:67>
|   `-ReturnStmt 0x55cd4c187e10 <col:45, col:52>
|     `-CXXConstructExpr 0x55cd4c187de0 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x55cd4c187db0 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x55cd4c16caa0
|         `-CXXThisExpr 0x55cd4c187da0 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55cd4c16b378 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x55cd4c16b580 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x55cd4c16b428 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x55cd4c16b4a0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x55cd4c16b678 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x55cd4c16b740 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55cd4c187ea0 <col:39, col:67>
|   `-ReturnStmt 0x55cd4c187e90 <col:41, col:48>
|     `-ImplicitCastExpr 0x55cd4c187e78 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55cd4c187e48 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x55cd4c16cb88
|         `-CXXThisExpr 0x55cd4c187e38 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55cd4c16b808 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55cd4c187f20 <col:35, col:59>
|   `-ReturnStmt 0x55cd4c187f10 <col:37, col:44>
|     `-ImplicitCastExpr 0x55cd4c187ef8 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55cd4c187ec8 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x55cd4c16cbf0
|         `-CXXThisExpr 0x55cd4c187eb8 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55cd4c16b950 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x55cd4c16b8c0 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x55cd4c16ba98 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55cd4c16ba08 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55cd4c16bc98 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x55cd4c16bb50 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x55cd4c16bbc8 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x55cd4c16bd68 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55cd4c16be08 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x55cd4c16be30 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55cd4c16bf48 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x55cd4c16bfe8 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x55cd4c16c048 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x55cd4c16c178 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x55cd4c16c0a8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x55cd4c16bfe8 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x55cd4c187ff8 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x55cd4c187fa0 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x55cd4c187f70 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x55cd4c06e8d8
|   |       `-ImplicitCastExpr 0x55cd4c187fc0 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x55cd4c187f58 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x55cd4c187f38 <col:17> 'Timer *' lvalue ParmVar 0x55cd4c16c0a8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x55cd4c16c048 't' 'Timer *'
|   | `-ImplicitCastExpr 0x55cd4c188090 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cd4c188050 <col:41> 'Timer *' lvalue ParmVar 0x55cd4c16c0a8 't_' 'Timer *'
|   `-CompoundStmt 0x55cd4c1880e0 <col:45, line:44:2>
|-CXXRecordDecl 0x55cd4c16c240 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55cd4c16c358 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x55cd4c16c5a8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x55cd4c16c428 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x55cd4c16c4a0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x55cd4c188210 <col:71, line:49:2>
|     `-ReturnStmt 0x55cd4c188200 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x55cd4c1881c8 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x55cd4c1881b0 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55cd4c188190 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x55cd4c0a7288 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x55cd4c188110 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x55cd4c16bfe8
|         | `-DeclRefExpr 0x55cd4c1880f0 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x55cd4c16c428 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x55cd4c188160 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x55cd4c16bfe8
|           `-DeclRefExpr 0x55cd4c188140 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x55cd4c16c4a0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x55cd4c16c670 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55cd4c16c788 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x55cd4c16c9a8 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x55cd4c16c828 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x55cd4c16c8a0 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x55cd4c188418 <col:63, line:54:2>
|     `-BinaryOperator 0x55cd4c1883f8 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x55cd4c1882a8 <col:6, col:12> 'int' lvalue ->_schedpos1 0x55cd4c1665d8
|       | `-ImplicitCastExpr 0x55cd4c188290 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x55cd4c188260 <col:6, col:9> 'Timer *' lvalue ->t 0x55cd4c16c048
|       |     `-ImplicitCastExpr 0x55cd4c188248 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x55cd4c188228 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x55cd4c16c8a0 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x55cd4c1883e0 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x55cd4c1883c0 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x55cd4c188368 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x55cd4c188348 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x55cd4c188318 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x55cd4c1882d8 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x55cd4c16c8a0 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x55cd4c188330 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x55cd4c1882f8 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x55cd4c16c828 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x55cd4c1883a8 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x55cd4c188388 <col:39> 'int' 1
|-FieldDecl 0x55cd4c16caa0 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x55cd4c16cb10 <col:44, col:53> aligned
|   `-ConstantExpr 0x55cd4c16caf0 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x55cd4c16ca70 <col:52> 'int' 8
|-FieldDecl 0x55cd4c16cb88 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x55cd4c16cbf0 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x55cd4c16cc58 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x55cd4c17bfb0 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x55cd4c186ce0 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x55cd4c186d40 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x55cd4c186da0 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x55cd4c186e00 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cd4c186ef0 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x55cd4c186e60 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x55cd4c186fb8 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x55cd4c188870 <col:29, line:81:5>
|   `-IfStmt 0x55cd4c188848 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x55cd4c188500 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x55cd4c1884a0 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x55cd4c188470 <col:6, col:18> '<bound member function type>' .size 0x55cd4c179048
|     |     `-ImplicitCastExpr 0x55cd4c1884e8 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x55cd4c188440 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55cd4c17bfb0
|     |         `-CXXThisExpr 0x55cd4c188430 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x55cd4c1886f0 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x55cd4c1886d8 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x55cd4c1886b8 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x55cd4bd90ce8 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x55cd4c188528 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55cd4c16caa0
|     | | `-CXXThisExpr 0x55cd4c188518 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x55cd4c1886a0 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x55cd4c188670 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x55cd4c16bfe8
|     |     `-CXXMemberCallExpr 0x55cd4c188648 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x55cd4c188618 <col:22, col:34> '<bound member function type>' .unchecked_at 0x55cd4c17a0e8
|     |       | `-MemberExpr 0x55cd4c188568 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55cd4c17bfb0
|     |       |   `-CXXThisExpr 0x55cd4c188558 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x55cd4c1885f8 <col:47> 'int' 0
|     `-ExprWithCleanups 0x55cd4c188830 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x55cd4c1887f8 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x55cd4c1887e0 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55cd4c1887c0 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55cd4bd91198 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x55cd4c188738 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55cd4c16caa0
|         | `-CXXThisExpr 0x55cd4c188728 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x55cd4c1887a8 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55cd4c188778 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55cd4c1870f8 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x55cd4c187068 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x55cd4c1871c0 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x55cd4c187280 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x55cd4c187340 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x55cd4c187430 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x55cd4c187498 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x55cd4c187498
| `-ParmVarDecl 0x55cd4c1875a8 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x55cd4c187648 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x55cd4c187648
| `-ParmVarDecl 0x55cd4c187758 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x55cd4c1877f8 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x55cd4c1877f8
| `-ParmVarDecl 0x55cd4c187908 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x55cd4c187b28 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x55cd4c187b28
| `-ParmVarDecl 0x55cd4c187c38 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x55cd4c187cc0 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x55cd4c187cc0

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cd4c1bd2c8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x55cd4c1bd4d8 prev 0x55cd4c1bd2c8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55cd4c1be5b0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55cd4c1be560 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x55cd4c1be540 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x55cd4c1be3f0 'type'
|     `-SubstTemplateTypeParmType 0x55cd4c17cfc0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55cd4be4d6a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cd4be4d648 'T'
|       `-RecordType 0x55cd4c17cb10 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55cd4c17ca28 'sized_array_memory'
|-FieldDecl 0x55cd4c1be6b0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55cd4c1be700 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55cd4c1be738 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x55cd4c1bd570 'pollfd' sugar
|   |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55cd4be85338 'T'
|   `-RecordType 0x55cd4c1bb380 'pollfd'
|     `-CXXRecord 0x55cd4c1bb2f0 'pollfd'
|-TypedefDecl 0x55cd4c1be7f8 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x55cd4c1be7c0 'pollfd &'
|   `-SubstTemplateTypeParmType 0x55cd4c1bd570 'pollfd' sugar
|     |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cd4be85338 'T'
|     `-RecordType 0x55cd4c1bb380 'pollfd'
|       `-CXXRecord 0x55cd4c1bb2f0 'pollfd'
|-TypedefDecl 0x55cd4c1be8b8 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x55cd4c1be880 'const pollfd &'
|   `-QualType 0x55cd4c1bd571 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55cd4c1bd570 'pollfd' sugar
|       |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cd4be85338 'T'
|       `-RecordType 0x55cd4c1bb380 'pollfd'
|         `-CXXRecord 0x55cd4c1bb2f0 'pollfd'
|-TypedefDecl 0x55cd4c1be948 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x55cd4c1be910 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55cd4c1bd570 'pollfd' sugar
|     |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cd4be85338 'T'
|     `-RecordType 0x55cd4c1bb380 'pollfd'
|       `-CXXRecord 0x55cd4c1bb2f0 'pollfd'
|-TypedefDecl 0x55cd4c1bea08 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x55cd4c1be9d0 'const pollfd *'
|   `-QualType 0x55cd4c1bd571 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55cd4c1bd570 'pollfd' sugar
|       |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cd4be85338 'T'
|       `-RecordType 0x55cd4c1bb380 'pollfd'
|         `-CXXRecord 0x55cd4c1bb2f0 'pollfd'
|-TypedefDecl 0x55cd4c1bf5e0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x55cd4c1bf590 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x55cd4c1bf570 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x55cd4c1bf500 'type'
|     `-SubstTemplateTypeParmType 0x55cd4c1bf2c0 'pollfd' sugar
|       |-TemplateTypeParmType 0x55cd4be584a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cd4be58450 'T'
|       `-RecordType 0x55cd4c1bb380 'pollfd'
|         `-CXXRecord 0x55cd4c1bb2f0 'pollfd'
|-TypedefDecl 0x55cd4c1bf648 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x55cd4c1be880 'const pollfd &'
|   `-QualType 0x55cd4c1bd571 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55cd4c1bd570 'pollfd' sugar
|       |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cd4be85338 'T'
|       `-RecordType 0x55cd4c1bb380 'pollfd'
|         `-CXXRecord 0x55cd4c1bb2f0 'pollfd'
|-TypedefDecl 0x55cd4c1bf6a0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55cd4bb853b0 'int'
|-TypedefDecl 0x55cd4c1bf708 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x55cd4c1be910 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55cd4c1bd570 'pollfd' sugar
|     |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cd4be85338 'T'
|     `-RecordType 0x55cd4c1bb380 'pollfd'
|       `-CXXRecord 0x55cd4c1bb2f0 'pollfd'
|-TypedefDecl 0x55cd4c1bf770 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x55cd4c1be9d0 'const pollfd *'
|   `-QualType 0x55cd4c1bd571 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55cd4c1bd570 'pollfd' sugar
|       |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cd4be85338 'T'
|       `-RecordType 0x55cd4c1bb380 'pollfd'
|         `-CXXRecord 0x55cd4c1bb2f0 'pollfd'
|-EnumDecl 0x55cd4c1bf7c8 <line:134:5> col:5
| `-EnumConstantDecl 0x55cd4c1bf8c0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55cd4c1bf8a0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55cd4be86a18 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55cd4be869f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55cd4be869d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55cd4c1bf948 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55cd4c1bfbd8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55cd4c1bfa00 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cd4c1bfaa0 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x55cd4c1bfe98 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55cd4c1bfd80 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x55cd4c1c0158 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55cd4c1c0040 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55cd4c1c04a0 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55cd4c1c0380 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x55cd4c1c07b0 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55cd4c1c0690 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55cd4c1c0aa0 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55cd4c1c08e8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cd4c1c0960 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55cd4c1c0bf8 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55cd4c1c0cd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cd4c1c0d30 <col:30> Inherited
|-CXXMethodDecl 0x55cd4c1c0d78 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55cd4c1c0e28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cd4c1c0e80 <col:30> Inherited
|-CXXMethodDecl 0x55cd4c1c0f48 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55cd4c1c0ff8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cd4c1c1050 <col:30> Inherited
|-CXXMethodDecl 0x55cd4c1c1098 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55cd4c1c1148 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cd4c1c11a0 <col:30> Inherited
|-CXXMethodDecl 0x55cd4c1c11e8 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55cd4c1c1298 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cd4c1c12f0 <col:30> Inherited
|-CXXMethodDecl 0x55cd4c1c1338 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55cd4c1c13e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cd4c1c1440 <col:30> Inherited
|-CXXMethodDecl 0x55cd4c1c1468 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cd4c1c1518 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cd4c1c15c8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55cd4c1c1788 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55cd4c1c1678 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cd4c1c16f0 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55cd4c1c18d8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55cd4c1c1848 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cd4c1c1a88 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x55cd4c1c1990 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cd4c1c1b40 <col:20>
| `-OptimizeNoneAttr 0x55cd4c1c1b98 <col:30>
|-CXXMethodDecl 0x55cd4c1c1cb8 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x55cd4c1c1bc0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cd4c1c1d70 <col:20>
| `-OptimizeNoneAttr 0x55cd4c1c1dc8 <col:30>
|-CXXMethodDecl 0x55cd4c1c1e80 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55cd4c1c1df0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cd4c1c1fc8 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cd4c1c1f38 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cd4c1c20f8 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x55cd4c1c2228 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x55cd4c1c22f8 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x55cd4c1c23c8 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x55cd4c1c2508 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55cd4c1c2478 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cd4c1c2650 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cd4c1c25c0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cd4c1c2798 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x55cd4c1c2708 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cd4c1c2850 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55cd4c1c2950 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55cd4c1c28c0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cd4c1c2a08 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55cd4c1c2ac8 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x55cd4c1c2bc8 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x55cd4c1c2dd0 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55cd4c1c2c88 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x55cd4c1c3598 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55cd4c1c2e88 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x55cd4c1c34f8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x55cd4c1c33f8 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x55cd4c1c3678 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55cd4c1c37c8 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55cd4c1c3738 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55cd4c1c3880 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55cd4c1c3ac8 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55cd4c1c3940 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55cd4c1c39b8 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55cd4c1c3c88 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x55cd4c1c3b98 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55cd4c1c3ed8 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x55cd4c1c3d50 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55cd4c1c3dc8 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55cd4c1c3f98 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55cd4c1c41f8 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55cd4c1c4100 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x55cd4c1c42c8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55cd4c1c42c8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cd4c1c58b0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x55cd4c1c5a88 prev 0x55cd4c1c58b0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55cd4c1c5b18 <col:46, col:52> col:46 public
|-TypedefDecl 0x55cd4c1c5b40 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55cd4bb853b0 'int'
|-TypedefDecl 0x55cd4c1c7710 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x55cd4c1c76c0 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x55cd4c1c5ff0 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x55cd4c1c5ef0 'type'
|     `-TemplateSpecializationType 0x55cd4c1c5e80 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55cd4c1c5d60 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x55cd4c1c5d40 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55cd4c1c5d20 <col:24> 'unsigned long' 24
|       `-RecordType 0x55cd4c1c5e60 'char_array<24>'
|         `-ClassTemplateSpecialization 0x55cd4c1c5d80 'char_array'
|-TypedefDecl 0x55cd4c1c77c8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x55cd4c1c7790 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x55cd4c1c7770 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x55cd4c1c7710 'type'
|     `-ElaboratedType 0x55cd4c1c76c0 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x55cd4c1c5ff0 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x55cd4c1c5ef0 'type'
|         `-TemplateSpecializationType 0x55cd4c1c5e80 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55cd4c1c5d60 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x55cd4c1c5d40 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55cd4c1c5d20 <col:24> 'unsigned long' 24
|           `-RecordType 0x55cd4c1c5e60 'char_array<24>'
|             `-ClassTemplateSpecialization 0x55cd4c1c5d80 'char_array'
|-CXXMethodDecl 0x55cd4c1c7948 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x55cd4c1c7858 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x55cd4c1c7a38 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55cd4c1c7b18 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55cd4c1c7b18
|-CXXMethodDecl 0x55cd4c1c7de8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55cd4c1c7cf0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x55cd4c1c8028 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55cd4c1c7ea0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55cd4c1c7f18 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55cd4c1c81f8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55cd4c1c80e8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55cd4c1c8160 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55cd4c1c8358 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55cd4c1c8428 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55cd4c1c8678 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55cd4c1c84e8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55cd4c1c8560 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55cd4c1c88d8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x55cd4c1c8748 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55cd4c1c87c0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55cd4c1c8a98 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55cd4c1c89a8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55cd4c1c8c58 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55cd4c1c8b60 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55cd4c1c8d10 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55cd4c1c8dc0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55cd4c1c8ff8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55cd4c1c8e70 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55cd4c1c8ee8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55cd4c1c9298 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55cd4c1c91a0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x55cd4c1c9360 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x55cd4c1c93b0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55cd4c1c9400 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cd4c1c4410 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x55cd4c1c4618 prev 0x55cd4c1c4410 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55cd4c1c5820 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x55cd4c1c57d0 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x55cd4c1c57b0 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x55cd4c1c5660 'type'
|     `-SubstTemplateTypeParmType 0x55cd4c1c5480 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x55cd4be4d6a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cd4be4d648 'T'
|       `-RecordType 0x55cd4c1c4fd0 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x55cd4c1c4ef0 'sized_array_memory'
|-FieldDecl 0x55cd4c1c9450 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x55cd4c1c94a0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55cd4c1c94d8 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x55cd4c1c46b0 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55cd4be85338 'T'
|   `-RecordType 0x55cd4c1bce30 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x55cd4c1bcda0 'SelectorInfo'
|-TypedefDecl 0x55cd4c1c9598 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55cd4c1c9560 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x55cd4c1c46b0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cd4be85338 'T'
|     `-RecordType 0x55cd4c1bce30 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55cd4c1bcda0 'SelectorInfo'
|-TypedefDecl 0x55cd4c1c9658 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55cd4c1c9620 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55cd4c1c46b1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55cd4c1c46b0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cd4be85338 'T'
|       `-RecordType 0x55cd4c1bce30 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55cd4c1bcda0 'SelectorInfo'
|-TypedefDecl 0x55cd4c1c96e8 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x55cd4c1c96b0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55cd4c1c46b0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cd4be85338 'T'
|     `-RecordType 0x55cd4c1bce30 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55cd4c1bcda0 'SelectorInfo'
|-TypedefDecl 0x55cd4c1c97a8 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55cd4c1c9770 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55cd4c1c46b1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55cd4c1c46b0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cd4be85338 'T'
|       `-RecordType 0x55cd4c1bce30 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55cd4c1bcda0 'SelectorInfo'
|-TypedefDecl 0x55cd4c1ca400 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x55cd4c1ca3b0 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x55cd4c1ca390 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x55cd4c1ca2c8 'type'
|     `-LValueReferenceType 0x55cd4c1ca290 'const SelectSet::SelectorInfo &'
|       `-QualType 0x55cd4c1ca031 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x55cd4c1ca030 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x55cd4be57d70 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55cd4be57d18 'T'
|           `-RecordType 0x55cd4c1bce30 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x55cd4c1bcda0 'SelectorInfo'
|-TypedefDecl 0x55cd4c1ca468 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55cd4c1c9620 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55cd4c1c46b1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55cd4c1c46b0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cd4be85338 'T'
|       `-RecordType 0x55cd4c1bce30 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55cd4c1bcda0 'SelectorInfo'
|-TypedefDecl 0x55cd4c1ca4c0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55cd4bb853b0 'int'
|-TypedefDecl 0x55cd4c1ca528 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x55cd4c1c96b0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55cd4c1c46b0 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55cd4be85338 'T'
|     `-RecordType 0x55cd4c1bce30 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55cd4c1bcda0 'SelectorInfo'
|-TypedefDecl 0x55cd4c1ca590 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55cd4c1c9770 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55cd4c1c46b1 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55cd4c1c46b0 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55cd4be85390 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55cd4be85338 'T'
|       `-RecordType 0x55cd4c1bce30 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55cd4c1bcda0 'SelectorInfo'
|-EnumDecl 0x55cd4c1ca5e8 <line:134:5> col:5
| `-EnumConstantDecl 0x55cd4c1ca6e0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55cd4c1ca6c0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55cd4be86a18 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55cd4be869f0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55cd4be869d0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55cd4c1ca768 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55cd4c1ca9f8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55cd4c1ca820 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cd4c1ca8c0 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x55cd4c1cacb8 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55cd4c1caba0 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x55cd4c1caf88 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55cd4c1cae70 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55cd4c1cb2d0 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55cd4c1cb1b0 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x55cd4c1cb5e0 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55cd4c1cb4c0 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55cd4c1cb8d0 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55cd4c1cb718 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cd4c1cb790 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55cd4c1cba28 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55cd4c1cbb08 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cd4c1cbb60 <col:30> Inherited
|-CXXMethodDecl 0x55cd4c1cbba8 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55cd4c1cbc58 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cd4c1cbcb0 <col:30> Inherited
|-CXXMethodDecl 0x55cd4c1cbd78 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55cd4c1cbe28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cd4c1cbe80 <col:30> Inherited
|-CXXMethodDecl 0x55cd4c1cbec8 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55cd4c1cbf78 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cd4c1cbfd0 <col:30> Inherited
|-CXXMethodDecl 0x55cd4c1cc018 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55cd4c1cc0c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cd4c1cc120 <col:30> Inherited
|-CXXMethodDecl 0x55cd4c1cc168 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55cd4c1cc218 <col:20> Inherited
| `-OptimizeNoneAttr 0x55cd4c1cc270 <col:30> Inherited
|-CXXMethodDecl 0x55cd4c1cc298 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cd4c1cc348 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55cd4c1cc3f8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55cd4c1cc5b8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55cd4c1cc4a8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55cd4c1cc520 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55cd4c1cc708 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55cd4c1cc678 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cd4c1cc8b8 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x55cd4c1cc7c0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cd4c1cc970 <col:20>
| `-OptimizeNoneAttr 0x55cd4c1cc9c8 <col:30>
|-CXXMethodDecl 0x55cd4c1ccae8 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x55cd4c1cc9f0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55cd4c1ccba0 <col:20>
| `-OptimizeNoneAttr 0x55cd4c1ccbf8 <col:30>
|-CXXMethodDecl 0x55cd4c1cccb0 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55cd4c1ccc20 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cd4c1ccdf8 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cd4c1ccd68 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cd4c1ccf28 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55cd4c1cd058 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55cd4c1cd128 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55cd4c1cd1f8 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55cd4c1cd338 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55cd4c1cd2a8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cd4c1cd480 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55cd4c1cd3f0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55cd4c1cd5c8 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x55cd4c1cd538 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cd4c1cd680 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55cd4c1cd780 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55cd4c1cd6f0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55cd4c1cd838 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55cd4c1cd8f8 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x55cd4c1cd9f8 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x55cd4c1cdba8 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55cd4c1cdab8 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x55cd4c1ce368 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55cd4c1cdc60 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x55cd4c1ce2c8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x55cd4c1ce1c8 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x55cd4c1ce448 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55cd4c1ce598 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55cd4c1ce508 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55cd4c1ce650 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55cd4c1ce898 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55cd4c1ce710 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55cd4c1ce788 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55cd4c1cea58 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x55cd4c1ce968 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55cd4c1ceca8 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x55cd4c1ceb20 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55cd4c1ceb98 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55cd4c1ced68 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55cd4c1cefc8 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55cd4c1ceed0 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x55cd4c1cf098 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55cd4c1cf098

Layout: <CGRecordLayout
  LLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  NonVirtualBaseLLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cd4c1bbf80 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55cd4c1bc098 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x55cd4c1bc128 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x55cd4c1bc1b0 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x55cd4c1bc2a0 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x55cd4c1bc2a0
|-CXXMethodDecl 0x55cd4c1bc3a0 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x55cd4c1bc640 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55cd4c1bc458 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x55cd4c1bc4d0 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x55cd4c1bc550 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x55cd4c1bc8b0 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55cd4c1bc710 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x55cd4c1bc788 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x55cd4c1bc808 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x55cd4c1bca08 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x55cd4c1bc978 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x55cd4c1bcad0 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x55cd4c1d0748 <col:34, line:50:5>
|   |-BinaryOperator 0x55cd4c1d0118 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x55cd4c1d00d8 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x55cd4c1bd258
|   | | `-CXXThisExpr 0x55cd4c1d00c8 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x55cd4c1d0108 <col:23> 'bool' true
|   `-CallExpr 0x55cd4c1d0720 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x55cd4c1d0708 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55cd4c1d0688 <col:2> 'void (long)' lvalue Function 0x55cd4c1d0588 'ignore_result' 'void (long)' (FunctionTemplate 0x55cd4be48648 'ignore_result')
|     `-CallExpr 0x55cd4c1d0330 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x55cd4c1d0318 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55cd4c1d0298 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x55cd4c1964a8 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x55cd4c1d0368 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x55cd4c1d0240 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x55cd4c1d0228 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x55cd4c1d01d8 <col:22> 'int [2]' lvalue ->_wake_pipe 0x55cd4c1bd1f8
|       |   |   `-CXXThisExpr 0x55cd4c1d01c8 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x55cd4c1d0208 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x55cd4c1d0398 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x55cd4c1d0380 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x55cd4c1d0260 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x55cd4c1d03b0 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55cd4c1d0278 <col:41> 'int' 1
|-CXXMethodDecl 0x55cd4c1bcc10 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55cd4c1bcb80 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55cd4c1bccd8 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55cd4c1bcd78 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x55cd4c1bcda0 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55cd4c1bceb8 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x55cd4c1bcf58 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x55cd4c1bcfb8 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x55cd4c1bd020 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x55cd4c1bd0d0 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x55cd4c1bcf58 'read' 'Element *'
|   | `-ImplicitCastExpr 0x55cd4c1d07a8 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55cd4c1d0768 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x55cd4c1bcfb8 'write' 'Element *'
|   | `-ImplicitCastExpr 0x55cd4c1d0828 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55cd4c1d07e8 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x55cd4c1bd020 'pollfd' 'int'
|   | `-UnaryOperator 0x55cd4c1d0888 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x55cd4c1d0868 <col:35> 'int' 1
|   `-CompoundStmt 0x55cd4c1d0900 <line:64:2, line:65:2>
|-FieldDecl 0x55cd4c1bd1f8 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x55cd4c1bd258 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x55cd4c1c43b0 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x55cd4c1cf180 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x55cd4c1cf3b8 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x55cd4c1cf1e8 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x55cd4c1cf260 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x55cd4c1cf2d8 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x55cd4c1cf5a0 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x55cd4c1cf488 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x55cd4c1cf508 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x55cd4c1cf7e8 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x55cd4c1cf668 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x55cd4c1cf6e8 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x55cd4c1cf9f8 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x55cd4c1cf8a8 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x55cd4c1cf920 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x55cd4c1cfb48 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x55cd4c1cfab8 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x55cd4c1cfc10 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x55cd4c1cfcd0 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x55cd4c1cfd98 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x55cd4c1cfd98
| `-ParmVarDecl 0x55cd4c1cfea8 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x55cd4c1cff48 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x55cd4c1cff48
  `-ParmVarDecl 0x55cd4c1d0058 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cd4c14a328 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55cd4c14a448 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x55cd4c14a4d8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55cd4c14a560 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x55cd4c14a650 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55cd4c14a750 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x55cd4c14a810 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x55cd4c14a8d0 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x55cd4c14a9b8 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x55cd4c14aad8 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x55cd4c14aad8
| `-ParmVarDecl 0x55cd4c14abe8 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x55cd4c1d8948 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x55cd4c1d8948
  `-ParmVarDecl 0x55cd4c1d8a58 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cd4c06b008 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cd4c06b128 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x55cd4c06b1c8 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x55cd4c06b228 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x55cd4c1d7f48 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55cd4c1d7f48
| `-ParmVarDecl 0x55cd4c1d8058 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x55cd4c1d80f8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55cd4c1d80f8
| `-ParmVarDecl 0x55cd4c1d8208 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x55cd4c1d8278 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55cd4c1d8278
|-CXXMethodDecl 0x55cd4c1d8af8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55cd4c1d8af8
| `-ParmVarDecl 0x55cd4c1d8c08 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x55cd4c1d8c78 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55cd4c1d8c78
| `-ParmVarDecl 0x55cd4c1d8d88 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x55cd4c1e23b8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x55cd4c1e2490 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cd4c14c220 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cd4c14c338 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x55cd4c14c3c8 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x55cd4c14c450 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x55cd4c14c510 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x55cd4bb853b0 'int'
|-CXXMethodDecl 0x55cd4c14c5d8 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x55cd4c14c678 <col:45> always_inline
|-CXXMethodDecl 0x55cd4c14c7a8 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x55cd4c14c6e0 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x55cd4c14c850 <col:49> always_inline
|-CXXConstructorDecl 0x55cd4c14c948 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55cd4c14c948
| `-ParmVarDecl 0x55cd4c14ca58 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x55cd4c14caf8 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55cd4c14caf8
| `-ParmVarDecl 0x55cd4c14cc08 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x55cd4c1d8360 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x55cd4c1d8360
|-CXXMethodDecl 0x55cd4c1d8e28 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55cd4c1d8e28
| `-ParmVarDecl 0x55cd4c1d8f38 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x55cd4c1d8fa8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55cd4c1d8fa8
  `-ParmVarDecl 0x55cd4c1d90b8 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cd4c1d0d70 prev 0x55cd4c1bbef0 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55cd4c1d0e68 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x55cd4c1d0ef8 <col:22, col:28> col:22 public
|-EnumDecl 0x55cd4c1d0f20 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x55cd4c1d1038 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x55cd4c1d1018 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55cd4c1d1000 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55cd4c1d0fe0 <col:32> 'int' 1
| `-EnumConstantDecl 0x55cd4c1d10e0 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x55cd4c1d10c0 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55cd4c1d10a8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55cd4c1d1088 <col:53> 'int' 1000
|-CXXMethodDecl 0x55cd4c1d1180 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x55cd4c1d1240 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55cd4c1d1328 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x55cd4c1d9178 <col:34, col:52>
|   `-ReturnStmt 0x55cd4c1d9168 <col:36, col:43>
|     `-MemberExpr 0x55cd4c1d9138 <col:43> 'TimerSet' lvalue ->_timers 0x55cd4c1d6440
|       `-CXXThisExpr 0x55cd4c1d9128 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55cd4c1d1418 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x55cd4c1d91e0 <col:46, col:64>
|   `-ReturnStmt 0x55cd4c1d91d0 <col:48, col:55>
|     `-MemberExpr 0x55cd4c1d91a0 <col:55> 'const TimerSet' lvalue ->_timers 0x55cd4c1d6440
|       `-CXXThisExpr 0x55cd4c1d9190 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55cd4c1d1508 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x55cd4c1d9248 <col:36, col:55>
|   `-ReturnStmt 0x55cd4c1d9238 <col:38, col:45>
|     `-MemberExpr 0x55cd4c1d9208 <col:45> 'SelectSet' lvalue ->_selects 0x55cd4c1d64a0
|       `-CXXThisExpr 0x55cd4c1d91f8 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55cd4c1d15f8 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x55cd4c1d92b0 <col:48, col:67>
|   `-ReturnStmt 0x55cd4c1d92a0 <col:50, col:57>
|     `-MemberExpr 0x55cd4c1d9270 <col:57> 'const SelectSet' lvalue ->_selects 0x55cd4c1d64a0
|       `-CXXThisExpr 0x55cd4c1d9260 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55cd4c1d16b8 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x55cd4c1d17a8 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x55cd4c1d1918 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x55cd4c1d1858 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x55cd4c1d19e0 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x55cd4c1d1e28 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x55cd4c1d1a90 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x55cd4c1d1d10 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x55cd4c1d1ef8 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x55cd4c1d1fb8 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x55cd4c1d2078 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x55cd4c1d21b8 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x55cd4c1d2128 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x55cd4c1d2280 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x55cd4c1d2340 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x55cd4c1d2400 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x55cd4c1d24c0 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x55cd4c1d2600 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55cd4c1d2570 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55cd4c1d26c8 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x55cd4c1d2788 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x55cd4c1d2828 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x55cd4c1d28f0 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55cd4c1d2940 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55cd4c1d2990 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55cd4c1d29e0 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55cd4c1d2a30 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55cd4c1d2a80 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55cd4c1d2ad0 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55cd4c1d2b20 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55cd4c1d2b70 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55cd4c1d2bc0 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x55cd4c1d2c10 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x55cd4c1d2d08 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x55cd4c1d2c78 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x55cd4c1d62a0 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x55cd4c1d6210 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x55cd4c1d6348 <line:104:3, col:10> col:3 private
|-FieldDecl 0x55cd4c1d6380 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x55cd4c1d63e0 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x55cd4c1d6440 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x55cd4c1d64a0 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x55cd4c1d6520 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x55cd4c1d6590 <col:40, col:50> aligned
|   `-ConstantExpr 0x55cd4c1d6570 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x55cd4c1d64f0 <col:48> 'int' 64
|-FieldDecl 0x55cd4c1d6600 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x55cd4c1d6660 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x55cd4c1d6760 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x55cd4c1d6870 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x55cd4c1d68d0 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x55cd4c1d6950 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x55cd4c1d69c0 <col:36, col:46> aligned
|   `-ConstantExpr 0x55cd4c1d69a0 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x55cd4c1d6920 <col:44> 'int' 64
|-FieldDecl 0x55cd4c1d6a38 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x55cd4c1d6a98 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x55cd4c1d6ae8 <line:170:3, col:9> col:3 public
|-FieldDecl 0x55cd4c1d6b28 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x55cd4c1d6b90 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x55cd4c1d6be0 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x55cd4c1d6d88 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x55cd4c1d6c18 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x55cd4c1d6c98 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x55cd4c1d6e88 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x55cd4c1d6e88
|-CXXMethodDecl 0x55cd4c1d6f90 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x55cd4c1d7058 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x55cd4c1d93a8 <col:34, line:217:5>
|   `-ReturnStmt 0x55cd4c1d9398 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x55cd4c1d9380 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55cd4c1d9350 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x55cd4c14ed80
|         `-ImplicitCastExpr 0x55cd4c1d9338 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x55cd4c1d9308 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x55cd4c14ed18
|             `-MemberExpr 0x55cd4c1d92d8 <col:16> 'const TaskLink' lvalue ->_task_link 0x55cd4c1d6380
|               `-CXXThisExpr 0x55cd4c1d92c8 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55cd4c1d7118 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x55cd4c1d71d8 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x55cd4c1d9ad0 <col:39, line:226:5>
|   |-DeclStmt 0x55cd4c1d95f8 <line:223:9, col:68>
|   | `-VarDecl 0x55cd4c1d93d0 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x55cd4c1d95b0 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x55cd4c1d9580 <col:24, col:38> '<bound member function type>' .compare_swap 0x55cd4beaec90
|   |     | `-MemberExpr 0x55cd4c1d9448 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x55cd4c1d6600
|   |     |   `-CXXThisExpr 0x55cd4c1d9438 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x55cd4c1d9538 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x55cd4c1d9520 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x55cd4c1d94f8 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x55cd4c1d94d8 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x55cd4c1d95e0 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x55cd4c1d9560 <col:66> 'int' 0
|   |-CStyleCastExpr 0x55cd4c1d9640 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55cd4c1d9610 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x55cd4c1d93d0 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x55cd4c1d9ab0 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x55cd4c1d9a80 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x55cd4c1d9758 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55cd4c1d9728 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x55cd4c1d9710 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x55cd4c1d9668 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x55cd4c1d93d0 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x55cd4c1d96e8 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x55cd4c1d96d0 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x55cd4c1d96a8 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x55cd4c1d9688 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x55cd4c1d97b8 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55cd4c1d9798 <col:60> 'int' 0
|       `-CallExpr 0x55cd4c1d99e0 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x55cd4c1d99c8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55cd4c1d99a8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cd4bc23880 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55cd4c1d9a20 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55cd4c1d98a8 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x55cd4c1d9a38 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55cd4c1d98d8 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x55cd4c1d9a50 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55cd4c1d9918 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x55cd4c1d9a68 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55cd4c1d9990 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55cd4c1d9978 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55cd4c1d9938 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x55cd4c1d7320 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x55cd4c1d7290 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x55cd4c1d73e8 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x55cd4c1d74a8 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x55cd4c1d7568 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x55cd4c1d7628 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x55cd4c1d76e8 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x55cd4c1d77e0 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x55cd4c1d7840 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55cd4c1d78d0 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x55cd4c1d7c98 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x55cd4c1d7c98
| `-ParmVarDecl 0x55cd4c1d7da8 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x55cd4c1d8468 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x55cd4c1d8468
  `-ParmVarDecl 0x55cd4c1d8578 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cd4c14f090 prev 0x55cd4c0e8f30 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x55cd4c14f1c8 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x55cd4c14f258 <col:33, col:39> col:33 public
|-EnumDecl 0x55cd4c068570 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x55cd4c0686b0 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x55cd4c068690 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x55cd4c068670 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55cd4c068630 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x55cd4c068650 <col:26> 'int' 16
| `-EnumConstantDecl 0x55cd4c068780 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x55cd4c068760 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x55cd4c068740 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x55cd4c068700 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x55cd4c068720 <col:47> 'int' 31
|-EnumDecl 0x55cd4c0687d0 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x55cd4c068910 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x55cd4c068a30 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cd4c0688f0 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x55cd4c0688d0 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x55cd4c068890 <col:26> 'int' 1
| |       `-IntegerLiteral 0x55cd4c0688b0 <col:29> 'int' 15
| `-EnumConstantDecl 0x55cd4c0689e0 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x55cd4c068a48 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cd4c0689c0 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x55cd4c0689a0 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x55cd4c068960 <col:51> 'int' 1
|         `-IntegerLiteral 0x55cd4c068980 <col:54> 'int' 10
|-CXXConstructorDecl 0x55cd4c068c18 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x55cd4c068a70 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x55cd4c068af0 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x55cd4c068da8 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x55cd4c068ce0 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x55cd4c068ea0 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x55cd4c068ea0
|-CXXMethodDecl 0x55cd4c069028 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x55cd4c06c168 <col:42, line:100:5>
|   `-ReturnStmt 0x55cd4c06c158 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x55cd4c06c140 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x55cd4c06c110 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x55cd4c06ae90
|         `-CXXThisExpr 0x55cd4c06c100 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55cd4c0690f0 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x55cd4c06c1e8 <col:36, line:105:5>
|   `-ReturnStmt 0x55cd4c06c1d8 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x55cd4c06c1c0 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55cd4c06c190 <col:16> 'void *const' lvalue ->_thunk 0x55cd4c06aef8
|         `-CXXThisExpr 0x55cd4c06c180 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55cd4c0691b0 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x55cd4c06c268 <col:37, line:110:5>
|   `-ReturnStmt 0x55cd4c06c258 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x55cd4c06c240 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55cd4c06c210 <col:16> 'Element *const' lvalue ->_owner 0x55cd4c06afb8
|         `-CXXThisExpr 0x55cd4c06c200 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55cd4c069270 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x55cd4c069338 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x55cd4c0693f8 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x55cd4c0694b8 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x55cd4c06c350 <col:35, line:137:5>
|   `-ReturnStmt 0x55cd4c06c340 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x55cd4c06c308 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x55cd4c06c2d8 <col:16, col:24> '<bound member function type>' ->router 0x55cd4c0fb740
|         `-ImplicitCastExpr 0x55cd4c06c328 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55cd4c06c2c0 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55cd4c06c290 <col:16> 'Element *const' lvalue ->_owner 0x55cd4c06afb8
|               `-CXXThisExpr 0x55cd4c06c280 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55cd4c069578 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x55cd4c069778 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55cd4c069628 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55cd4c0696a0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55cd4c069988 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x55cd4c069838 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x55cd4c0698b0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55cd4c069a58 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x55cd4c06c460 <col:35, line:181:5>
|   `-ReturnStmt 0x55cd4c06c450 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x55cd4c06c438 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55cd4c06c420 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55cd4c06c3f0 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x55cd4c06aac8
|           `-MemberExpr 0x55cd4c06c3a8 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55cd4c06abe8
|             `-MemberExpr 0x55cd4c06c378 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x55cd4c06ae18
|               `-CXXThisExpr 0x55cd4c06c368 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55cd4c069b18 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x55cd4c06c578 <col:30, line:192:5>
|   `-BinaryOperator 0x55cd4c06c558 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55cd4c06c500 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55cd4c06aac8
|     | `-MemberExpr 0x55cd4c06c4b8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55cd4c06abe8
|     |   `-MemberExpr 0x55cd4c06c488 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55cd4c06ae18
|     |     `-CXXThisExpr 0x55cd4c06c478 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55cd4c06c540 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55cd4c06c530 <col:32> 'bool' false
|-CXXMethodDecl 0x55cd4c069bd8 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x55cd4c06c8c8 <col:30, line:206:5>
|   |-BinaryOperator 0x55cd4c06c670 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55cd4c06c618 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55cd4c06aac8
|   | | `-MemberExpr 0x55cd4c06c5d0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55cd4c06abe8
|   | |   `-MemberExpr 0x55cd4c06c5a0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55cd4c06ae18
|   | |     `-CXXThisExpr 0x55cd4c06c590 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55cd4c06c658 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55cd4c06c648 <col:32> 'bool' true
|   |-CallExpr 0x55cd4c06c710 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x55cd4c06c6f8 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cd4c06c6d8 <col:9> 'void ()' lvalue Function 0x55cd4c149ee0 'click_fence' 'void ()'
|   `-IfStmt 0x55cd4c06c8b0 <line:204:9, line:205:32>
|     |-BinaryOperator 0x55cd4c06c7f0 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x55cd4c06c7c0 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x55cd4c06c770 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x55cd4c06b228
|     | |   `-MemberExpr 0x55cd4c06c740 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x55cd4c06b2a0
|     | |     `-CXXThisExpr 0x55cd4c06c730 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x55cd4c06c7d8 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x55cd4c06c7a0 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x55cd4c06c870 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x55cd4c06c820 <col:13> '<bound member function type>' ->complete_schedule 0x55cd4c06bca0
|       | `-CXXThisExpr 0x55cd4c06c810 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x55cd4c06c898 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x55cd4c06c850 <col:31> 'int' 0
|-CXXMethodDecl 0x55cd4c069c98 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x55cd4c06c9f0 <col:35, line:240:5>
|   `-BinaryOperator 0x55cd4c06c9d0 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55cd4c06c978 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55cd4c06aac8
|     | `-MemberExpr 0x55cd4c06c930 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55cd4c06abe8
|     |   `-MemberExpr 0x55cd4c06c900 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55cd4c06ae18
|     |     `-CXXThisExpr 0x55cd4c06c8f0 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55cd4c06c9b8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55cd4c06c9a8 <col:32> 'bool' true
|-CXXMethodDecl 0x55cd4c069d58 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x55cd4c06cc08 <col:37, line:253:5>
|   |-BinaryOperator 0x55cd4c06cae8 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55cd4c06ca90 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55cd4c06aac8
|   | | `-MemberExpr 0x55cd4c06ca48 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55cd4c06abe8
|   | |   `-MemberExpr 0x55cd4c06ca18 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55cd4c06ae18
|   | |     `-CXXThisExpr 0x55cd4c06ca08 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55cd4c06cad0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55cd4c06cac0 <col:32> 'bool' false
|   `-BinaryOperator 0x55cd4c06cbe8 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55cd4c06cb90 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55cd4c06ab28
|     | `-MemberExpr 0x55cd4c06cb48 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55cd4c06abe8
|     |   `-MemberExpr 0x55cd4c06cb18 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55cd4c06ae18
|     |     `-CXXThisExpr 0x55cd4c06cb08 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55cd4c06cbd0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55cd4c06cbc0 <col:41> 'bool' true
|-CXXMethodDecl 0x55cd4c069e18 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x55cd4c06cd88 <col:37, line:264:5>
|   |-BinaryOperator 0x55cd4c06cd08 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55cd4c06ccb0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55cd4c06ab28
|   | | `-MemberExpr 0x55cd4c06cc68 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55cd4c06abe8
|   | |   `-MemberExpr 0x55cd4c06cc38 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55cd4c06ae18
|   | |     `-CXXThisExpr 0x55cd4c06cc28 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55cd4c06ccf0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55cd4c06cce0 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x55cd4c06cd68 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x55cd4c06cd38 <col:9> '<bound member function type>' ->reschedule 0x55cd4c069bd8
|       `-CXXThisExpr 0x55cd4c06cd28 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x55cd4c069f60 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x55cd4c069ed0 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x55cd4c06a030 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x55cd4c06a178 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x55cd4c06a0e8 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x55cd4c06a2c8 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x55cd4c06a238 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x55cd4c06a390 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x55cd4c06a450 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x55cd4c06a4f0 <col:53> "" ""
|-CXXMethodDecl 0x55cd4c06a588 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x55cd4c06a628 <col:47> "" ""
|-AccessSpecDecl 0x55cd4c06a698 <line:303:3, col:10> col:3 private
|-FieldDecl 0x55cd4c06a6d8 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x55cd4c06a740 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x55cd4c06a790 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55cd4c06a8a8 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x55cd4c06a938 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x55cd4c06aa68 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x55cd4c06aac8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x55cd4c06ab28 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x55cd4c1e1ae8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x55cd4c1e1bc0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55cd4c1e1bc0
| | |-CXXConstructorDecl 0x55cd4c1e1e78 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55cd4c1e1e78
| | | `-ParmVarDecl 0x55cd4c1e1f88 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x55cd4c1e2028 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55cd4c1e2028
| |   `-ParmVarDecl 0x55cd4c1e2138 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x55cd4c06abe8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x55cd4c06ac48 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x55cd4c06abe8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55cd4c06aa68 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x55cd4c06aca0 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x55cd4c06abe8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55cd4c06aac8 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x55cd4c06acf8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x55cd4c06abe8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55cd4c06ab28 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x55cd4c06ad50 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x55cd4c1e19f0 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55cd4c1e2358 <col:11>
| |-CXXConstructorDecl 0x55cd4c1e1cc8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55cd4c1e1cc8
| | `-ParmVarDecl 0x55cd4c1e1dd8 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x55cd4c1e21d8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55cd4c1e21d8
|   `-ParmVarDecl 0x55cd4c1e22e8 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x55cd4c06ae18 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x55cd4c06ae90 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x55cd4c06aef8 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55cd4c06af58 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x55cd4c06afb8 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x55cd4c06b008 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55cd4c06b128 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x55cd4c06b1c8 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x55cd4c06b228 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x55cd4c1d7f48 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55cd4c1d7f48
| | `-ParmVarDecl 0x55cd4c1d8058 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x55cd4c1d80f8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55cd4c1d80f8
| | `-ParmVarDecl 0x55cd4c1d8208 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x55cd4c1d8278 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55cd4c1d8278
| |-CXXMethodDecl 0x55cd4c1d8af8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55cd4c1d8af8
| | `-ParmVarDecl 0x55cd4c1d8c08 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x55cd4c1d8c78 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55cd4c1d8c78
| | `-ParmVarDecl 0x55cd4c1d8d88 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x55cd4c1e23b8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55cd4c1e2490 <col:11>
|-FieldDecl 0x55cd4c06b2a0 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x55cd4c06b3e8 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x55cd4c06b328 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x55cd4c06b598 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x55cd4c06b4a8 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x55cd4c06b660 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x55cd4c06b720 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x55cd4c06b7e0 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x55cd4c06ce98 <col:41, line:355:5>
|   `-ReturnStmt 0x55cd4c06ce88 <line:354:9, col:38>
|     `-BinaryOperator 0x55cd4c06ce68 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x55cd4c06ce38 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x55cd4c06cde8 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x55cd4c06b228
|       |   `-MemberExpr 0x55cd4c06cdb8 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x55cd4c06b2a0
|       |     `-CXXThisExpr 0x55cd4c06cda8 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x55cd4c06ce50 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55cd4c06ce18 <col:38> 'int' 0
|-CXXMethodDecl 0x55cd4c06b8a0 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x55cd4c06b9e0 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x55cd4c06b950 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x55cd4c06bb58 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x55cd4c06ba98 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x55cd4c06bca0 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x55cd4c06bc10 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x55cd4c06bd68 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x55cd4c06bf30 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x55cd4c06be18 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x55cd4c06be98 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x55cd4c06c030 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x55cd4c06c0c0 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cd4c166688 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55cd4c1667b8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x55cd4c1672a8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cd4c06d298 prev 0x55cd4c0e8fe0 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55cd4c06d390 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x55cd4c06d420 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x55cd4c06d480 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x55cd4c06d528 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x55cd4c06d648 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x55cd4c06d7e8 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x55cd4c06d728 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x55cd4c06da38 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x55cd4c06d8a8 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x55cd4c06d928 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x55cd4c06db90 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x55cd4c06db00 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x55cd4c06dd18 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x55cd4c06dc50 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x55cd4c06dec8 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x55cd4c06de08 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x55cd4c06dfc0 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x55cd4c167480 <col:21, line:58:5>
|   `-IfStmt 0x55cd4c167468 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x55cd4c1673d0 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x55cd4c1673a0 <col:6> '<bound member function type>' ->scheduled 0x55cd4c06e818
|     |   `-ImplicitCastExpr 0x55cd4c1673f0 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x55cd4c167390 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x55cd4c167448 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x55cd4c167418 <col:6> '<bound member function type>' ->unschedule 0x55cd4c06fe40
|         `-CXXThisExpr 0x55cd4c167408 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x55cd4c06e0c0 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x55cd4c167620 <col:26, line:65:5>
|   |-BinaryOperator 0x55cd4c167540 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55cd4c1674d8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55cd4c1667b8
|   | | `-MemberExpr 0x55cd4c1674a8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55cd4c166878
|   | |   `-CXXThisExpr 0x55cd4c167498 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55cd4c167528 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cd4c167508 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55cd4c166cd8 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55cd4c167600 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x55cd4c167570 <col:2> 'void *' lvalue ->_thunk 0x55cd4c1668f8
|     | `-CXXThisExpr 0x55cd4c167560 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x55cd4c1675d8 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x55cd4c1675a0 <col:20> 'int' 1
|-CXXMethodDecl 0x55cd4c06e200 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x55cd4c06e170 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x55cd4c167780 <col:52, line:71:5>
|   |-CStyleCastExpr 0x55cd4c167670 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55cd4c167640 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x55cd4c06e170 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x55cd4c167760 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x55cd4c167730 <col:2> '<bound member function type>' ->assign 0x55cd4c06e0c0
|       `-CXXThisExpr 0x55cd4c167720 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x55cd4c06e3d0 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x55cd4c06e2b8 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x55cd4c06e338 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x55cd4c167900 <col:58, line:79:5>
|   |-BinaryOperator 0x55cd4c167848 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55cd4c1677e0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55cd4c1667b8
|   | | `-MemberExpr 0x55cd4c1677b0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55cd4c166878
|   | |   `-CXXThisExpr 0x55cd4c1677a0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55cd4c167830 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cd4c167810 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x55cd4c06e2b8 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x55cd4c1678e0 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55cd4c167878 <col:2> 'void *' lvalue ->_thunk 0x55cd4c1668f8
|     | `-CXXThisExpr 0x55cd4c167868 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55cd4c1678c8 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x55cd4c1678a8 <col:11> 'void *' lvalue ParmVar 0x55cd4c06e338 'user_data' 'void *'
|-CXXMethodDecl 0x55cd4c06e520 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x55cd4c06e490 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x55cd4c167a98 <col:35, line:87:5>
|   |-BinaryOperator 0x55cd4c1679c8 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55cd4c167960 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55cd4c1667b8
|   | | `-MemberExpr 0x55cd4c167930 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55cd4c166878
|   | |   `-CXXThisExpr 0x55cd4c167920 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55cd4c1679b0 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cd4c167990 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55cd4c166eb0 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55cd4c167a78 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55cd4c1679f8 <col:2> 'void *' lvalue ->_thunk 0x55cd4c1668f8
|     | `-CXXThisExpr 0x55cd4c1679e8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55cd4c167a60 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55cd4c167a48 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x55cd4c167a28 <col:11> 'Element *' lvalue ParmVar 0x55cd4c06e490 'element' 'Element *'
|-CXXMethodDecl 0x55cd4c06e668 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x55cd4c06e5d8 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x55cd4c167c30 <col:29, line:94:5>
|   |-BinaryOperator 0x55cd4c167b60 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55cd4c167af8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55cd4c1667b8
|   | | `-MemberExpr 0x55cd4c167ac8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55cd4c166878
|   | |   `-CXXThisExpr 0x55cd4c167ab8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55cd4c167b48 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55cd4c167b28 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55cd4c167088 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55cd4c167c10 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55cd4c167b90 <col:2> 'void *' lvalue ->_thunk 0x55cd4c1668f8
|     | `-CXXThisExpr 0x55cd4c167b80 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55cd4c167bf8 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55cd4c167be0 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x55cd4c167bc0 <col:11> 'Task *' lvalue ParmVar 0x55cd4c06e5d8 'task' 'Task *'
|-CXXMethodDecl 0x55cd4c06e758 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55cd4c167d10 <col:37, line:100:5>
|   `-ReturnStmt 0x55cd4c167d00 <line:99:2, col:19>
|     `-BinaryOperator 0x55cd4c167ce0 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x55cd4c167cb0 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x55cd4c167c60 <col:9> 'Element *const' lvalue ->_owner 0x55cd4c166958
|       |   `-CXXThisExpr 0x55cd4c167c50 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x55cd4c167cc8 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x55cd4c167c90 <col:19> 'int' 0
|-CXXMethodDecl 0x55cd4c06e818 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x55cd4c167dd0 <col:35, line:105:5>
|   `-ReturnStmt 0x55cd4c167dc0 <line:104:2, col:23>
|     `-BinaryOperator 0x55cd4c167da0 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x55cd4c167d88 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x55cd4c167d38 <col:9> 'const int' lvalue ->_schedpos1 0x55cd4c1665d8
|       |   `-CXXThisExpr 0x55cd4c167d28 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x55cd4c167d68 <col:23> 'int' 0
|-CXXMethodDecl 0x55cd4c06e8d8 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x55cd4c167e38 <col:51, line:118:5>
|   `-ReturnStmt 0x55cd4c167e28 <line:117:2, col:9>
|     `-MemberExpr 0x55cd4c167df8 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x55cd4c166638
|       `-CXXThisExpr 0x55cd4c167de8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55cd4c06e998 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x55cd4c168390 <col:37, line:136:5>
|   `-IfStmt 0x55cd4c168368 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x55cd4c167ef8 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x55cd4c167ee0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x55cd4c167ec0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x55cd4c167e90 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x55cd4c07b0b8
|     |       `-MemberExpr 0x55cd4c167e60 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x55cd4c166638
|     |         `-CXXThisExpr 0x55cd4c167e50 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x55cd4c1682d8 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x55cd4c1682c0 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x55cd4c168290 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x55cd4c168278 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x55cd4c168240 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x55cd4c168228 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x55cd4c168208 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55cd4c0a9890 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x55cd4c1681a8 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x55cd4c168190 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x55cd4c1680b8 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x55cd4c1680a0 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x55cd4c168080 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55cd4c0a9550 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x55cd4c168020 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x55cd4c167f20 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55cd4c166638
|     |         |     |   `-CXXThisExpr 0x55cd4c167f10 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x55cd4c168068 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x55cd4c168050 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x55cd4c168000 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x55cd4c167fe8 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x55cd4c167f88 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x55cd4c09cbb0 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x55cd4c1681f0 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x55cd4c1681d8 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x55cd4c168170 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x55cd4c168158 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x55cd4c168128 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x55cd4bef8100 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x55cd4c168358 <line:135:6, col:13>
|       `-CXXConstructExpr 0x55cd4c168328 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x55cd4c1682f8 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55cd4c166638
|           `-CXXThisExpr 0x55cd4c1682e8 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x55cd4c06ea58 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x55cd4c168478 <col:35, line:141:5>
|   `-ReturnStmt 0x55cd4c168468 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x55cd4c168430 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x55cd4c168400 <col:9, col:17> '<bound member function type>' ->router 0x55cd4c0fb740
|         `-ImplicitCastExpr 0x55cd4c168450 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55cd4c1683e8 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55cd4c1683b8 <col:9> 'Element *const' lvalue ->_owner 0x55cd4c166958
|               `-CXXThisExpr 0x55cd4c1683a8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55cd4c06eb18 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x55cd4c1684f8 <col:37, line:146:5>
|   `-ReturnStmt 0x55cd4c1684e8 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x55cd4c1684d0 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55cd4c1684a0 <col:9> 'Element *const' lvalue ->_owner 0x55cd4c166958
|         `-CXXThisExpr 0x55cd4c168490 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55cd4c06ebd8 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x55cd4c168578 <col:41, line:151:5>
|   `-ReturnStmt 0x55cd4c168568 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x55cd4c168550 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x55cd4c168520 <col:9> 'RouterThread *const' lvalue ->_thread 0x55cd4c1669b8
|         `-CXXThisExpr 0x55cd4c168510 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55cd4c06eca0 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x55cd4c06ee60 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55cd4c06ed50 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55cd4c06edc8 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55cd4c167298 <col:50> 'bool' false
|-CXXMethodDecl 0x55cd4c06efe8 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x55cd4c06ef20 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x55cd4c06f130 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55cd4c06f0a0 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55cd4c06f278 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55cd4c06f1e8 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55cd4c06f3c0 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55cd4c06f330 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x55cd4c06f508 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55cd4c06f478 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x55cd4c06f5d0 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x55cd4c1686e0 <col:32, line:223:5>
|   `-ExprWithCleanups 0x55cd4c1686c8 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x55cd4c168670 <col:2, col:47> 'void'
|       |-MemberExpr 0x55cd4c1685a0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55cd4c06f130
|       | `-CXXThisExpr 0x55cd4c168590 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55cd4c1686b0 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55cd4c168698 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55cd4c168650 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x55cd4c168638 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x55cd4c168608 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x55cd4bef8100 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x55cd4c06f710 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x55cd4c06f680 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x55cd4c06f858 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55cd4c06f7c8 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cd4c168868 <col:56, line:241:5>
|   `-ExprWithCleanups 0x55cd4c168850 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x55cd4c1687f8 <col:2, col:40> 'void'
|       |-MemberExpr 0x55cd4c168708 <col:2> '<bound member function type>' ->schedule_after 0x55cd4c06f710
|       | `-CXXThisExpr 0x55cd4c1686f8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55cd4c168838 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55cd4c168820 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55cd4c1687b8 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x55cd4c168788 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x55cd4c168748 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cd4c06f7c8 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x55cd4c1687a0 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55cd4c168768 <col:38> 'int' 0
|-CXXMethodDecl 0x55cd4c06f9a0 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55cd4c06f910 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cd4c168ad8 <col:58, line:249:5>
|   `-ExprWithCleanups 0x55cd4c168ac0 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x55cd4c168a68 <col:2, col:49> 'void'
|       |-MemberExpr 0x55cd4c168890 <col:2> '<bound member function type>' ->schedule_after 0x55cd4c06f710
|       | `-CXXThisExpr 0x55cd4c168880 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55cd4c168aa8 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55cd4c168a90 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55cd4c168a10 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x55cd4c1689f8 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55cd4c168968 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55cd4c07cea8 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55cd4c168a50 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x55cd4c168a38 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55cd4c168948 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cd4c06f910 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cd4c06fae8 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x55cd4c06fa58 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x55cd4c168cb8 <col:58, line:261:5>
|   `-ExprWithCleanups 0x55cd4c168ca0 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x55cd4c168c48 <col:2, col:38> 'void'
|       |-MemberExpr 0x55cd4c168b00 <col:2> '<bound member function type>' ->schedule_at_steady 0x55cd4c06f130
|       | `-CXXThisExpr 0x55cd4c168af0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55cd4c168c88 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55cd4c168c70 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55cd4c168c10 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55cd4c168bf8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55cd4c168bd8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55cd4c0a9550 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55cd4c168ba8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55cd4c168b90 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55cd4c168b40 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55cd4c166638
|             |     `-CXXThisExpr 0x55cd4c168b30 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x55cd4c168b70 <col:33> 'const Timestamp' lvalue ParmVar 0x55cd4c06fa58 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x55cd4c06fc30 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55cd4c06fba0 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cd4c168f90 <col:58, line:270:5>
|   `-ExprWithCleanups 0x55cd4c168f78 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x55cd4c168f20 <col:2, col:79> 'void'
|       |-MemberExpr 0x55cd4c168ce0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55cd4c06f130
|       | `-CXXThisExpr 0x55cd4c168cd0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55cd4c168f60 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55cd4c168f48 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55cd4c168ee0 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x55cd4c168e18 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x55cd4c168e00 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x55cd4c168d90 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x55cd4c168d60 <col:31, col:41> '<bound member function type>' .sec 0x55cd4bef9bf8
|             | |     `-ImplicitCastExpr 0x55cd4c168db0 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x55cd4c168d30 <col:31> 'Timestamp' lvalue ->_expiry_s 0x55cd4c166638
|             | |         `-CXXThisExpr 0x55cd4c168d20 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x55cd4c168de8 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x55cd4c168dc8 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cd4c06fba0 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x55cd4c168ea8 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x55cd4c168e78 <col:60, col:70> '<bound member function type>' .subsec 0x55cd4befa2f0
|                 `-ImplicitCastExpr 0x55cd4c168ec8 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x55cd4c168e48 <col:60> 'Timestamp' lvalue ->_expiry_s 0x55cd4c166638
|                     `-CXXThisExpr 0x55cd4c168e38 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x55cd4c06fd78 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55cd4c06fce8 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55cd4c1692c8 <col:60, line:279:5>
|   `-ExprWithCleanups 0x55cd4c1692b0 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x55cd4c169258 <col:2, col:65> 'void'
|       |-MemberExpr 0x55cd4c168fb8 <col:2> '<bound member function type>' ->schedule_at_steady 0x55cd4c06f130
|       | `-CXXThisExpr 0x55cd4c168fa8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55cd4c169298 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55cd4c169280 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55cd4c169220 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x55cd4c169208 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55cd4c1691e8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55cd4c0a9550 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55cd4c169188 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55cd4c169170 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55cd4c168ff8 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55cd4c166638
|             |     `-CXXThisExpr 0x55cd4c168fe8 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x55cd4c1691d0 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x55cd4c1691b8 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x55cd4c169118 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x55cd4c169100 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x55cd4c1690d0 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55cd4c07cea8 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x55cd4c169158 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x55cd4c169140 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x55cd4c1690b0 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x55cd4c06fce8 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cd4c06fe40 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x55cd4c06ff00 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x55cd4c169790 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x55cd4c169320 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x55cd4c1692f0 <col:2> '<bound member function type>' ->unschedule 0x55cd4c06fe40
|   |   `-CXXThisExpr 0x55cd4c1692e0 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x55cd4c169778 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x55cd4c169740 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x55cd4c169728 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55cd4c1693d8 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55cd4bd91198 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x55cd4c169350 <col:2> 'Timestamp' lvalue ->_expiry_s 0x55cd4c166638
|       | `-CXXThisExpr 0x55cd4c169340 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55cd4c1693c0 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x55cd4c169390 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55cd4c06ffc0 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x55cd4c169ae8 <col:42, line:310:5>
|   |-IfStmt 0x55cd4c169930 <line:306:2, line:307:23>
|   | |-CallExpr 0x55cd4c169860 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x55cd4c169848 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x55cd4c1697e8 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x55cd4c09b020 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x55cd4c169920 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x55cd4c169908 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x55cd4c1698d8 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55cd4c1698c0 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x55cd4c169890 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x55cd4c169ad8 <line:309:2, col:33>
|     `-ExprWithCleanups 0x55cd4c169ac0 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x55cd4c169a90 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55cd4c169a78 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x55cd4c169a38 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55cd4c169a20 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55cd4c1699f0 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55cd4c07d1c0 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55cd4c169a60 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x55cd4c1699d0 <col:30> 'int' 500
|-CXXMethodDecl 0x55cd4c070100 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55cd4c070070 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55cd4c0701a8 <col:69> "" ""
|-CXXMethodDecl 0x55cd4c0702b8 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55cd4c070228 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55cd4c070360 <col:70> "" ""
|-CXXMethodDecl 0x55cd4c070470 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55cd4c0703e0 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55cd4c070518 <col:71> "" ""
|-CXXMethodDecl 0x55cd4c166310 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55cd4c166280 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55cd4c1663b8 <col:72> "" ""
|-EnumDecl 0x55cd4c166428 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x55cd4c166530 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x55cd4c166580 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cd4c166510 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x55cd4c1664f0 <col:25> 'int' 1
|-AccessSpecDecl 0x55cd4c166598 <line:339:3, col:10> col:3 private
|-FieldDecl 0x55cd4c1665d8 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x55cd4c166638 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x55cd4c166688 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55cd4c1667b8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x55cd4c1672a8 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x55cd4c166878 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x55cd4c1668f8 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55cd4c166958 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x55cd4c1669b8 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x55cd4c166b08 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x55cd4c166a18 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x55cd4c166cd8 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55cd4c166bc0 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x55cd4c166c40 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x55cd4c166eb0 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55cd4c166d98 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x55cd4c166e18 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x55cd4c167088 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55cd4c166f70 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x55cd4c166ff0 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x55cd4c167258 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cd4bebd260 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55cd4bebd378 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55cd4bebd418 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55cd4bebd478 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55cd4bebd4d8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55cd4bebd588 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cd4bebd890 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cd4bebd9a8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55cd4bebda50 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55cd4bebdab8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55cd4bebdb48 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55cd4bec3be0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55cd4bec4018 <col:12>
|-CXXConstructorDecl 0x55cd4bec3ce8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55cd4bec3df8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55cd4bebda50 'data' 'const char *'
| | `-ImplicitCastExpr 0x55cd4bec65a0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55cd4bec6570 <col:12> 'const char *const' lvalue .data 0x55cd4bebda50
| |     `-DeclRefExpr 0x55cd4bec6550 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cd4bec3df8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55cd4bebdab8 'length' 'int'
| | `-ImplicitCastExpr 0x55cd4bec6630 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55cd4bec6600 <col:12> 'const int' lvalue .length 0x55cd4bebdab8
| |     `-DeclRefExpr 0x55cd4bec65e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cd4bec3df8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55cd4bebdb48 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55cd4bec66c0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55cd4bec6690 <col:12> 'String::memo_t *const' lvalue .memo 0x55cd4bebdb48
| |     `-DeclRefExpr 0x55cd4bec6670 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cd4bec3df8 '' 'const String::rep_t &'
| `-CompoundStmt 0x55cd4bec6718 <col:12>
|-CXXConstructorDecl 0x55cd4bec3e98 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55cd4bec3e98
| `-ParmVarDecl 0x55cd4bec3fa8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55cd4bec9500 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55cd4bed4f18 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55cd4bed5028 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55cd4bed5540 <col:12>
|   |-BinaryOperator 0x55cd4bed5358 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55cd4bed5310 <col:12> 'const char *' lvalue ->data 0x55cd4bebda50
|   | | `-CXXThisExpr 0x55cd4bed5300 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55cd4bed5340 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55cd4bed52d0 <col:12> 'const char *const' lvalue .data 0x55cd4bebda50
|   |     `-DeclRefExpr 0x55cd4bed52b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cd4bed5028 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55cd4bed5420 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55cd4bed53d8 <col:12> 'int' lvalue ->length 0x55cd4bebdab8
|   | | `-CXXThisExpr 0x55cd4bed53c8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55cd4bed5408 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55cd4bed5398 <col:12> 'const int' lvalue .length 0x55cd4bebdab8
|   |     `-DeclRefExpr 0x55cd4bed5378 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cd4bed5028 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55cd4bed54e8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55cd4bed54a0 <col:12> 'String::memo_t *' lvalue ->memo 0x55cd4bebdb48
|   | | `-CXXThisExpr 0x55cd4bed5490 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55cd4bed54d0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55cd4bed5460 <col:12> 'String::memo_t *const' lvalue .memo 0x55cd4bebdb48
|   |     `-DeclRefExpr 0x55cd4bed5440 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cd4bed5028 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55cd4bed5530 <col:12>
|     `-UnaryOperator 0x55cd4bed5518 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55cd4bed5508 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55cd4bed5098 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55cd4bed5098
  `-ParmVarDecl 0x55cd4bed51a8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cd4beb47d0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55cd4beb48e8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55cd4beb4978 <col:16, col:22> col:16 public
|-TypedefDecl 0x55cd4beb49b8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55cd4bb85e00 'const char *'
|   `-QualType 0x55cd4bb85351 'const char' const
|     `-BuiltinType 0x55cd4bb85350 'char'
|-TypedefDecl 0x55cd4beb4a40 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55cd4beb4a10 'String::const_iterator' sugar
|   |-Typedef 0x55cd4beb49b8 'const_iterator'
|   `-PointerType 0x55cd4bb85e00 'const char *'
|     `-QualType 0x55cd4bb85351 'const char' const
|       `-BuiltinType 0x55cd4bb85350 'char'
|-TypedefDecl 0x55cd4beb4bb0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55cd4beb4b20 'int (String::*)() const'
|   |-RecordType 0x55cd4beb4860 'String'
|   | `-CXXRecord 0x55cd4beb47d0 'String'
|   `-ParenType 0x55cd4beb4ac0 'int () const' sugar
|     `-FunctionProtoType 0x55cd4be88650 'int () const' const cdecl
|       `-BuiltinType 0x55cd4bb853b0 'int'
|-TypedefDecl 0x55cd4beb4c18 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55cd4bcdd010 'int64_t' sugar
|   |-Typedef 0x55cd4bbee2a0 'int64_t'
|   `-TypedefType 0x55cd4bbc7510 '__int64_t' sugar
|     |-Typedef 0x55cd4bbc70e8 '__int64_t'
|     `-BuiltinType 0x55cd4bb853d0 'long'
|-TypedefDecl 0x55cd4beb4c80 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55cd4bcdcf30 'uint64_t' sugar
|   |-Typedef 0x55cd4bbee440 'uint64_t'
|   `-TypedefType 0x55cd4bbc75a0 '__uint64_t' sugar
|     |-Typedef 0x55cd4bbc7158 '__uint64_t'
|     `-BuiltinType 0x55cd4bb85470 'unsigned long'
|-TypedefDecl 0x55cd4beb4d10 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55cd4beb4ce0 'String::intmax_t' sugar
|   |-Typedef 0x55cd4beb4c18 'intmax_t'
|   `-TypedefType 0x55cd4bcdd010 'int64_t' sugar
|     |-Typedef 0x55cd4bbee2a0 'int64_t'
|     `-TypedefType 0x55cd4bbc7510 '__int64_t' sugar
|       |-Typedef 0x55cd4bbc70e8 '__int64_t'
|       `-BuiltinType 0x55cd4bb853d0 'long'
|-TypedefDecl 0x55cd4beb4da0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55cd4beb4d70 'String::uintmax_t' sugar
|   |-Typedef 0x55cd4beb4c80 'uintmax_t'
|   `-TypedefType 0x55cd4bcdcf30 'uint64_t' sugar
|     |-Typedef 0x55cd4bbee440 'uint64_t'
|     `-TypedefType 0x55cd4bbc75a0 '__uint64_t' sugar
|       |-Typedef 0x55cd4bbc7158 '__uint64_t'
|       `-BuiltinType 0x55cd4bb85470 'unsigned long'
|-CXXConstructorDecl 0x55cd4beb4e60 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55cd4beb5008 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55cd4beb4f48 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55cd4beb51b8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55cd4beb50f8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55cd4beb5310 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55cd4beb5280 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55cd4beb5528 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55cd4beb53d8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55cd4beb5458 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55cd4beb5748 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55cd4beb55f8 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55cd4beb5678 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55cd4beb5968 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55cd4beb5818 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55cd4beb5898 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55cd4beb5b88 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55cd4beb5a38 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55cd4beb5ab8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55cd4beb5d18 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x55cd4beb5c50 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55cd4beb5e98 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55cd4beb5dd8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55cd4beb6028 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55cd4beb5f60 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55cd4beb6180 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55cd4beb60f0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55cd4beb62d8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55cd4beb6248 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55cd4beb6430 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55cd4beb63a0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55cd4beb65b8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55cd4beb64f8 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55cd4beb6748 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55cd4beb6680 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55cd4beb68d8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55cd4beb6810 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55cd4beb6a68 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55cd4beb69a0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55cd4beb6b60 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55cd4beb6c88 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55cd4beb6e08 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55cd4beb6d40 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55cd4beb6f58 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55cd4beb6ec8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55cd4beb7010 <col:63> "" ""
|-CXXMethodDecl 0x55cd4beb7158 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55cd4beb7098 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55cd4beb7368 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55cd4beb7218 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55cd4beb7298 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55cd4beb7588 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55cd4beb7430 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55cd4beb74b0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55cd4beb7868 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55cd4beb7648 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55cd4beb76c8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55cd4bec36b0 <col:55> 'int' 10
| `-ParmVarDecl 0x55cd4beb7740 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55cd4bec36d0 <col:76> 'bool' true
|-CXXMethodDecl 0x55cd4beb7b48 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55cd4beb7930 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55cd4beb79b0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55cd4bec36e0 <col:56> 'int' 10
| `-ParmVarDecl 0x55cd4beb7a28 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55cd4bec3700 <col:77> 'bool' true
|-CXXMethodDecl 0x55cd4beb7c50 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55cd4beb7d18 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55cd4beb7de0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55cd4beb7e80 <col:20>
| `-OptimizeNoneAttr 0x55cd4beb7ed8 <col:30>
|-CXXConversionDecl 0x55cd4beb7fc8 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55cd4beb8098 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55cd4beb8158 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55cd4beb8248 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55cd4beb8308 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55cd4beb8488 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55cd4beb83c0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55cd4beb85d8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55cd4beb8548 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55cd4beb86c8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55cd4beb8788 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55cd4beb89d8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55cd4beb8840 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55cd4beb88c0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55cd4beb8c38 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55cd4beb8aa0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55cd4beb8b20 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55cd4beb8d08 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55cd4beb8f18 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55cd4beb8dc0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55cd4beb8e40 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55cd4beb9138 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55cd4beb8fe0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55cd4beb9060 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55cd4beb92c8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55cd4beb9200 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55cd4beb93b8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55cd4beb9528 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55cd4beb9468 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55cd4beb9738 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55cd4beb95e8 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55cd4beb9668 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55cd4beb9950 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55cd4beb97f8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55cd4beb9870 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55cd4beb9ae0 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55cd4beb9a10 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55cd4beb9d00 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55cd4beb9ba0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55cd4beb9c20 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55cd4beb9e50 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55cd4beb9dc0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55cd4beba028 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55cd4beb9f10 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55cd4beb9f90 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55cd4beba178 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55cd4beba0e8 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55cd4beba390 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55cd4beba230 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55cd4beba2b0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55cd4bec3710 <col:39> 'int' 0
|-CXXMethodDecl 0x55cd4beba5b0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55cd4beba450 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55cd4beba4d0 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55cd4bec3730 <col:48> 'int' 0
|-CXXMethodDecl 0x55cd4beba790 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55cd4beba670 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55cd4beba6f0 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55cd4bec3750 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55cd4beba860 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55cd4beba920 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55cd4beba9e0 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55cd4bebaaa0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55cd4bebab60 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55cd4bebad08 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55cd4bebac10 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55cd4bebae88 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55cd4bebadc0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55cd4bebb060 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55cd4bebaf48 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55cd4bebb1d8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55cd4bebb118 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55cd4bebb320 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55cd4bebb290 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55cd4bebb470 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55cd4bebb3e0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55cd4bebb648 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55cd4bebb530 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55cd4bebb5b0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55cd4bebb828 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55cd4bebb710 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55cd4bebb790 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55cd4bebb978 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55cd4bebb8e8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55cd4bebbb88 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55cd4bebba38 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55cd4bebbab8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55cd4bebbce8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55cd4bebbc50 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55cd4bebbe40 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55cd4bebbda8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55cd4bebbee8 <col:57> "" ""
|-CXXMethodDecl 0x55cd4bebbff8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55cd4bebbf68 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55cd4bebc148 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55cd4bebc0b8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55cd4bebc2c8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55cd4bebc200 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55cd4bebc390 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55cd4bebc450 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55cd4bebc510 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55cd4bebc5b0 <col:49> "" ""
|-CXXMethodDecl 0x55cd4bebc640 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55cd4bebc700 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55cd4bebc7f0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55cd4bebc8b8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55cd4bebc978 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55cd4bebca38 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55cd4bebcb30 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55cd4bebcbf8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55cd4bebccc0 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55cd4bebce98 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55cd4bebcd78 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55cd4bebcdf8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55cd4bebd0c0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55cd4bebcf60 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55cd4bebcfe0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55cd4bebd1d0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55cd4bebd238 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55cd4bebd260 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55cd4bebd378 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55cd4bebd418 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55cd4bebd478 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55cd4bebd4d8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55cd4bebd588 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55cd4bebd5f0 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55cd4bebd828 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55cd4bebd878 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cd4bebd808 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55cd4bebd718 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55cd4bebd6c0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55cd4bebd700 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55cd4bebd6e0 <col:32> 'int' 8
|-CXXRecordDecl 0x55cd4bebd890 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55cd4bebd9a8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55cd4bebda50 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55cd4bebdab8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55cd4bebdb48 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55cd4bec3be0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55cd4bec4018 <col:12>
| |-CXXConstructorDecl 0x55cd4bec3ce8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55cd4bec3df8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55cd4bebda50 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55cd4bec65a0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55cd4bec6570 <col:12> 'const char *const' lvalue .data 0x55cd4bebda50
| | |     `-DeclRefExpr 0x55cd4bec6550 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cd4bec3df8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55cd4bebdab8 'length' 'int'
| | | `-ImplicitCastExpr 0x55cd4bec6630 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55cd4bec6600 <col:12> 'const int' lvalue .length 0x55cd4bebdab8
| | |     `-DeclRefExpr 0x55cd4bec65e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cd4bec3df8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55cd4bebdb48 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55cd4bec66c0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55cd4bec6690 <col:12> 'String::memo_t *const' lvalue .memo 0x55cd4bebdb48
| | |     `-DeclRefExpr 0x55cd4bec6670 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cd4bec3df8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55cd4bec6718 <col:12>
| |-CXXConstructorDecl 0x55cd4bec3e98 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55cd4bec3e98
| | `-ParmVarDecl 0x55cd4bec3fa8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55cd4bec9500 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55cd4bed4f18 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55cd4bed5028 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55cd4bed5540 <col:12>
| |   |-BinaryOperator 0x55cd4bed5358 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55cd4bed5310 <col:12> 'const char *' lvalue ->data 0x55cd4bebda50
| |   | | `-CXXThisExpr 0x55cd4bed5300 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55cd4bed5340 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55cd4bed52d0 <col:12> 'const char *const' lvalue .data 0x55cd4bebda50
| |   |     `-DeclRefExpr 0x55cd4bed52b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cd4bed5028 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55cd4bed5420 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55cd4bed53d8 <col:12> 'int' lvalue ->length 0x55cd4bebdab8
| |   | | `-CXXThisExpr 0x55cd4bed53c8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55cd4bed5408 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55cd4bed5398 <col:12> 'const int' lvalue .length 0x55cd4bebdab8
| |   |     `-DeclRefExpr 0x55cd4bed5378 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cd4bed5028 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55cd4bed54e8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55cd4bed54a0 <col:12> 'String::memo_t *' lvalue ->memo 0x55cd4bebdb48
| |   | | `-CXXThisExpr 0x55cd4bed5490 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55cd4bed54d0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55cd4bed5460 <col:12> 'String::memo_t *const' lvalue .memo 0x55cd4bebdb48
| |   |     `-DeclRefExpr 0x55cd4bed5440 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cd4bed5028 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55cd4bed5530 <col:12>
| |     `-UnaryOperator 0x55cd4bed5518 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55cd4bed5508 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55cd4bed5098 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55cd4bed5098
|   `-ParmVarDecl 0x55cd4bed51a8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55cd4bebdbc0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55cd4bebde08 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55cd4bebdc28 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55cd4bebdca8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55cd4bebdd20 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55cd4bec3ba0 <col:79, line:261:5>
|   |-BinaryOperator 0x55cd4bec3818 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55cd4bec37b0 <col:2, col:5> 'const char *' lvalue .data 0x55cd4bebda50
|   | | `-MemberExpr 0x55cd4bec3780 <col:2> 'String::rep_t' lvalue ->_r 0x55cd4bebdbc0
|   | |   `-CXXThisExpr 0x55cd4bec3770 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55cd4bec3800 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cd4bec37e0 <col:12> 'const char *' lvalue ParmVar 0x55cd4bebdc28 'data' 'const char *'
|   |-BinaryOperator 0x55cd4bec38e0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55cd4bec3878 <col:2, col:5> 'int' lvalue .length 0x55cd4bebdab8
|   | | `-MemberExpr 0x55cd4bec3848 <col:2> 'String::rep_t' lvalue ->_r 0x55cd4bebdbc0
|   | |   `-CXXThisExpr 0x55cd4bec3838 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55cd4bec38c8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cd4bec38a8 <col:14> 'int' lvalue ParmVar 0x55cd4bebdca8 'length' 'int'
|   `-IfStmt 0x55cd4bec3b88 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55cd4bec3a00 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55cd4bec39e8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55cd4bec39c8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55cd4bec39a8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55cd4bec3940 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55cd4bebdb48
|     |       | `-MemberExpr 0x55cd4bec3910 <col:7> 'String::rep_t' lvalue ->_r 0x55cd4bebdbc0
|     |       |   `-CXXThisExpr 0x55cd4bec3900 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55cd4bec3990 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55cd4bec3970 <col:17> 'String::memo_t *' lvalue ParmVar 0x55cd4bebdd20 'memo' 'String::memo_t *'
|     `-CallExpr 0x55cd4bec3b60 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55cd4bec3b48 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55cd4bec3a50 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55cd4beac838 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55cd4bec3ab8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55cd4bebd418
|         `-ImplicitCastExpr 0x55cd4bec3aa0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55cd4bec3a80 <col:27> 'String::memo_t *' lvalue ParmVar 0x55cd4bebdd20 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55cd4bebe0b8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55cd4bebded8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55cd4bebdf58 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55cd4bebdfd0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55cd4bebdbc0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55cd4bec4028 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55cd4bec41b8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55cd4bec4120 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55cd4bec4090 <col:2> '<bound member function type>' ->assign_memo 0x55cd4bebde08
|     | `-ImplicitCastExpr 0x55cd4bec4158 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55cd4bec4080 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55cd4bec4170 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55cd4bec40c0 <col:14> 'const char *' lvalue ParmVar 0x55cd4bebded8 'data' 'const char *'
|     |-ImplicitCastExpr 0x55cd4bec4188 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55cd4bec40e0 <col:20> 'int' lvalue ParmVar 0x55cd4bebdf58 'length' 'int'
|     `-ImplicitCastExpr 0x55cd4bec41a0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55cd4bec4100 <col:28> 'String::memo_t *' lvalue ParmVar 0x55cd4bebdfd0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55cd4bebe248 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55cd4bebe188 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55cd4bec4410 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55cd4bec4390 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55cd4bec41e0 <col:2> '<bound member function type>' ->assign_memo 0x55cd4bebde08
|     | `-CXXThisExpr 0x55cd4bec41d0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55cd4bec43c8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55cd4bec4260 <col:14, col:19> 'const char *' lvalue .data 0x55cd4bebda50
|     |   `-MemberExpr 0x55cd4bec4230 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55cd4bebdbc0
|     |     `-DeclRefExpr 0x55cd4bec4210 <col:14> 'const String' lvalue ParmVar 0x55cd4bebe188 'x' 'const String &'
|     |-ImplicitCastExpr 0x55cd4bec43e0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55cd4bec42e0 <col:25, col:30> 'int' lvalue .length 0x55cd4bebdab8
|     |   `-MemberExpr 0x55cd4bec42b0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55cd4bebdbc0
|     |     `-DeclRefExpr 0x55cd4bec4290 <col:25> 'const String' lvalue ParmVar 0x55cd4bebe188 'x' 'const String &'
|     `-ImplicitCastExpr 0x55cd4bec43f8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55cd4bec4360 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55cd4bebdb48
|         `-MemberExpr 0x55cd4bec4330 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55cd4bebdbc0
|           `-DeclRefExpr 0x55cd4bec4310 <col:38> 'const String' lvalue ParmVar 0x55cd4bebe188 'x' 'const String &'
|-CXXMethodDecl 0x55cd4bebe310 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55cd4bec4dd0 <col:31, line:278:5>
|   `-IfStmt 0x55cd4bec4db8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55cd4bec44b0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55cd4bec4498 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55cd4bec4468 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55cd4bebdb48
|     |     `-MemberExpr 0x55cd4bec4438 <col:6> 'String::rep_t' lvalue ->_r 0x55cd4bebdbc0
|     |       `-CXXThisExpr 0x55cd4bec4428 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55cd4bec4d90 <col:15, line:277:2>
|       |-ParenExpr 0x55cd4bec4960 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55cd4bec4930 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55cd4bec45c0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55cd4bec45a8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55cd4bec4590 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55cd4bec4550 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55cd4bebd418
|       |   |       `-ImplicitCastExpr 0x55cd4bec4538 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55cd4bec4508 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55cd4bebdb48
|       |   |           `-MemberExpr 0x55cd4bec44d8 <col:27> 'String::rep_t' lvalue ->_r 0x55cd4bebdbc0
|       |   |             `-CXXThisExpr 0x55cd4bec44c8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55cd4bec4620 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55cd4bec4600 <col:54> 'int' 0
|       |   `-CallExpr 0x55cd4bec4890 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55cd4bec4878 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55cd4bec47f8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cd4bc23880 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55cd4bec48d0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55cd4bec4708 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55cd4bec48e8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55cd4bec4738 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55cd4bec4900 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55cd4bec4770 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55cd4bec4918 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55cd4bec47e0 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55cd4bec47c8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55cd4bec4790 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55cd4bec4cb0 <line:274:6, line:275:22>
|       | |-CallExpr 0x55cd4bec4b70 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55cd4bec4b58 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55cd4bec4ad0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55cd4beadc80 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55cd4bec4aa0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55cd4bebd418
|       | |   `-ImplicitCastExpr 0x55cd4bec4a88 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55cd4bec4a58 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55cd4bebdb48
|       | |       `-MemberExpr 0x55cd4bec4a28 <col:40> 'String::rep_t' lvalue ->_r 0x55cd4bebdbc0
|       | |         `-CXXThisExpr 0x55cd4bec4a18 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55cd4bec4c70 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55cd4bec4c58 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55cd4bec4b98 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55cd4bec2af0 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55cd4bec4c98 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55cd4bec4bf8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55cd4bebdb48
|       |       `-MemberExpr 0x55cd4bec4bc8 <col:15> 'String::rep_t' lvalue ->_r 0x55cd4bebdbc0
|       |         `-CXXThisExpr 0x55cd4bec4bb8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55cd4bec4d70 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55cd4bec4d08 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55cd4bebdb48
|         | `-MemberExpr 0x55cd4bec4cd8 <col:6> 'String::rep_t' lvalue ->_r 0x55cd4bebdbc0
|         |   `-CXXThisExpr 0x55cd4bec4cc8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55cd4bec4d58 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55cd4bec4d38 <col:16> 'int' 0
|-CXXMethodDecl 0x55cd4bebe5a8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55cd4bebe3c8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55cd4bebe448 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55cd4bebe4c0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55cd4bebe680 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55cd4bebe8d0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55cd4bebe738 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55cd4bebe7b8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55cd4bebe830 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55cd4bebeab8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55cd4bebe9a0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55cd4bebea20 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55cd4bebebb8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55cd4bec4ea8 <col:41, line:286:5>
|   `-ReturnStmt 0x55cd4bec4e98 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55cd4bec4e68 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55cd4bec4e30 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55cd4bec4e18 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55cd4bec4df8 <col:46> 'int' 1
|-CXXMethodDecl 0x55cd4bebee58 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55cd4bebec70 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55cd4bebecf0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55cd4bebed70 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55cd4bec2af0 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55cd4bebef20 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55cd4bec2bc0 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55cd4bec2d90 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55cd4bec2c78 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55cd4bec2cf8 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55cd4bec2e50 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55cd4bec2f18 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55cd4bec3018 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55cd4bec3090 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55cd4bec3108 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55cd4bec3170 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55cd4bec3270 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55cd4bec32c0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cd4bec3250 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55cd4bec3230 <col:22> 'int' 14
|-CXXMethodDecl 0x55cd4bec34d8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55cd4bec32f0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55cd4bec3370 <col:38> col:41 'int'
| `-ParmVarDecl 0x55cd4bec33f0 <col:43> col:46 'int'
|-FriendDecl 0x55cd4bec35e0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55cd4bec3670 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55cd4c172960 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x55cd4c21d008 <line:167:18>
|-CXXRecordDecl 0x55cd4c21d0c8 prev 0x55cd4c172960 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55cd4c21d1d8 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>
