
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a69977e788 prev 0x55a699775f28 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a69977e880 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55a69977e910 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55a69977e988 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55a69977ea48 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55a69977eb10 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55a69977ec88 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55a69977ebc0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55a69977ed30 <col:24>
| `-OptimizeNoneAttr 0x55a69977ed88 <col:34>
|-CXXMethodDecl 0x55a69977edd0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55a69977f088 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55a69977ee80 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55a69977eef8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55a69977ef78 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55a69977f140 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55a69977f178 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55a69977f1e0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55a69977f268 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55a69977f588 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55a69977f320 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55a69977f398 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55a69977f410 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55a69977f490 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55a69977f6a0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55a699787018 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55a699787018
| `-ParmVarDecl 0x55a699787128 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55a6997871c8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55a6997871c8
| `-ParmVarDecl 0x55a6997872d8 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55a69978b6d8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a6997717a0 prev 0x55a699771520 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a699771898 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55a699771928 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55a699771988 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55a699771a78 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55a699771b78 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55a699771d48 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55a699771bf8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55a699771c70 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55a699771ed8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55a699771e10 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55a699771f80 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55a6997720b8 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55a699771ff0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55a699772258 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55a699772198 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55a6997723f8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55a699772338 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55a6997724a0 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55a6997725a0 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55a699772680 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a699772580 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55a699772560 <col:26> 'int' 1
| `-EnumConstantDecl 0x55a699772630 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55a699772698 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a699772610 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55a6997725f0 <col:44> 'int' 2
|-CXXMethodDecl 0x55a6997727e0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55a6997726c8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55a699772748 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55a699772938 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55a6997728a8 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55a699772b78 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55a6997729f8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55a699772a70 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55a699772c28 <col:20>
| `-OptimizeNoneAttr 0x55a699772c80 <col:30>
|-CXXMethodDecl 0x55a699772d88 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55a699772cc0 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55a699772e30 <col:20>
| `-OptimizeNoneAttr 0x55a699772e88 <col:30>
|-CXXMethodDecl 0x55a699772ed8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55a699772fa0 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55a6997730b8 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55a699773140 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55a6997731c8 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55a699773250 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55a6997732d8 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55a699773368 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55a699773428 <line:62:5, col:32> col:23 used AGNOSTIC 'const char []' static
|-VarDecl 0x55a6997734b0 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55a699773538 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55a6997735c0 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55a699773648 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55a6997736d0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55a699773760 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55a699773820 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55a6997738b0 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55a699773a00 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55a699773968 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55a699773b90 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55a699773ac0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55a699773e40 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55a699773c48 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55a699773cc8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55a699773d48 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55a699773ef8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55a699774000 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55a699774290 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a699773fe0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55a699773fc0 <col:33> 'int' 0
| |-EnumConstantDecl 0x55a699774090 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55a6997742a8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a699774070 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55a699774050 <col:32> 'int' 20
| |-EnumConstantDecl 0x55a699774120 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55a6997742c0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a699774100 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55a6997740e0 <col:38> 'int' 90
| |-EnumConstantDecl 0x55a6997741b0 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55a6997742d8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a699774190 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55a699774170 <col:35> 'int' 100
| `-EnumConstantDecl 0x55a699774240 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55a6997742f0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a699774220 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55a699774200 <col:32> 'int' 2000
|-CXXMethodDecl 0x55a699774330 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55a699774770 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55a6997745e0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55a699774658 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a699774840 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55a6997749c0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55a6997748f0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a699774bc8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55a699774a78 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55a699774af0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a699774cc8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55a699774d68 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55a699774e30 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a699774ec0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55a6997750f0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a699774ea0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55a699774e80 <col:36> 'int' EnumConstant 0x55a699774e30 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a699774f10 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a699774f60 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a699774fb0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a699775000 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55a699775050 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55a6997750a0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55a6997751d8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55a699775118 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55a6997752a0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55a699775360 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55a699775420 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55a6997754e0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55a6997755f8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55a6997756c0 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x55a699775840 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55a699775770 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55a699775968 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55a699775b68 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55a699775a18 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55a699775a98 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55a6997834b8 <col:54, line:127:5>
|   |-ParenExpr 0x55a699783368 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55a699783338 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55a699783028 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55a699783000 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55a699782fe8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55a699782fd0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55a699782fa0 <col:31> 'Router *' lvalue ->_router 0x55a699780e80
|   |   |         `-CXXThisExpr 0x55a699782f90 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55a699783088 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a699783068 <col:48> 'int' 0
|   |   `-CallExpr 0x55a699783298 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55a699783280 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a699783260 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a6992abe70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a6997832d8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a6997830f8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55a6997832f0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a699783118 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55a699783308 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a699783150 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55a699783320 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a699783248 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a699783230 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a6997831e8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55a699783400 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55a699783398 <col:9> 'Router *' lvalue ->_router 0x55a699780e80
|   | | `-CXXThisExpr 0x55a699783388 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55a6997833e8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a6997833c8 <col:19> 'Router *' lvalue ParmVar 0x55a699775a18 'r' 'Router *'
|   `-BinaryOperator 0x55a699783498 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55a699783430 <col:9> 'int' lvalue ->_eindex 0x55a699780ee8
|     | `-CXXThisExpr 0x55a699783420 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55a699783480 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55a699783460 <col:19> 'int' lvalue ParmVar 0x55a699775a98 'eindex' 'int'
|-CXXMethodDecl 0x55a699775cf0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55a699775c28 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55a699775dc0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55a699775e88 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55a699775f28 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55a699776178 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55a699775ff0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55a699776070 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55a699776228 <col:20>
| `-OptimizeNoneAttr 0x55a699776280 <col:30>
|-CXXMethodDecl 0x55a699776388 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55a6997762c0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55a699776430 <col:20>
| `-OptimizeNoneAttr 0x55a699776488 <col:30>
|-CXXMethodDecl 0x55a699776558 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55a6997764c8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55a699776600 <col:20>
| `-OptimizeNoneAttr 0x55a699776658 <col:30>
|-CXXMethodDecl 0x55a6997767e8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55a699776690 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55a699776710 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55a699776978 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55a6997768b0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55a699776ac8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55a699776a38 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55a699776c18 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55a699776b88 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55a699776d68 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55a699776cd8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55a699777028 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55a699776e20 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55a699776ea0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55a699776f48 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55a699777100 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55a6997771c0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55a699777490 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55a699777340 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55a6997773b8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55a6997775b8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55a699777790 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55a699777670 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55a6997776f0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55a699777978 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55a699777858 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55a6997778d8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55a699777ce8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55a699777a38 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55a699777ab0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55a699777b30 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55a699782aa0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55a699782a80 <col:106> 'int' 0
| `-ParmVarDecl 0x55a699777ba8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a699782ad8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a699782ab8 <col:126> 'int' 0
|-CXXMethodDecl 0x55a699778088 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55a699777db8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55a699777e50 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55a699777ed0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55a699777f48 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a699782b10 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a699782af0 <col:114> 'int' 0
|-CXXMethodDecl 0x55a699778418 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55a699778160 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55a6997781d8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55a699778258 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55a699782b28 <col:96> 'int' 0
| `-ParmVarDecl 0x55a6997782d0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a699782b68 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a699782b48 <col:116> 'int' 0
|-CXXMethodDecl 0x55a699778798 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55a6997784e8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55a699778560 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55a6997785e0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55a699782ba0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55a699782b80 <col:109> 'int' 0
| `-ParmVarDecl 0x55a699778658 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a699782bd8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a699782bb8 <col:129> 'int' 0
|-CXXMethodDecl 0x55a699778b18 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55a699778868 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55a6997788e0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55a699778960 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55a6997789d8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a699782c10 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a699782bf0 <col:117> 'int' 0
|-CXXMethodDecl 0x55a699778ea8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55a699778bf0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a699778c68 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55a699778ce8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55a699782c28 <col:99> 'int' 0
| `-ParmVarDecl 0x55a699778d60 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55a699782c68 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55a699782c48 <col:119> 'int' 0
|-CXXMethodDecl 0x55a6997792c8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55a699778f78 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55a699778ff8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55a699779070 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55a6997790f0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55a699782ca0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55a699782c80 <col:108> 'int' 0
| `-ParmVarDecl 0x55a699779170 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55a699782cd8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55a699782cb8 <col:141> 'int' 0
|-CXXMethodDecl 0x55a6997796e8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55a6997793a0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55a699779420 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55a699779498 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55a699779518 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55a699779598 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55a699782cf0 <col:121> 'int' 0
|-CXXMethodDecl 0x55a699779b18 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55a6997797c8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55a699779848 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55a6997798c0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55a699779940 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55a699782d10 <col:98> 'int' 0
| `-ParmVarDecl 0x55a6997799c0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55a699782d30 <col:123> 'int' 0
|-CXXMethodDecl 0x55a699779de0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55a699779bf0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55a699779c70 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55a699779cf0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55a699782d50 <col:80> 'int' 0
|-EnumDecl 0x55a699779e98 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55a699779fa0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55a69977a230 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a699779f80 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55a699779f60 <col:42> 'int' 1
| |-EnumConstantDecl 0x55a69977a030 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55a69977a248 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a69977a010 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55a699779ff0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55a69977a0c0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55a69977a260 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a69977a0a0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55a69977a080 <col:44> 'int' 4
| |-EnumConstantDecl 0x55a69977a150 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55a69977a278 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a69977a130 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55a69977a110 <col:36> 'int' 7
| `-EnumConstantDecl 0x55a69977a1e0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55a69977a290 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a69977a1c0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55a69977a1a0 <col:34> 'int' 6
|-CXXMethodDecl 0x55a69977a548 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55a69977a2b8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55a69977a358 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55a69977a3d8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55a69977a450 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55a699782e08 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55a699782df0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55a699782dd8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55a699782db8 <col:98, col:105> 'String' (CXXTemporary 0x55a699782db8)
|           `-CXXTemporaryObjectExpr 0x55a699782d80 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55a69977a7e8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55a69977a618 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55a69977a690 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55a69977a708 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55a699782eb8 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55a699782ea0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55a699782e88 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55a699782e68 <col:94, col:101> 'String' (CXXTemporary 0x55a699782e68)
| |         `-CXXTemporaryObjectExpr 0x55a699782e30 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55a6997836a0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55a699783618 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55a6997835e8 <col:9> '<bound member function type>' ->add_task_handlers 0x55a69977a548
|     | `-CXXThisExpr 0x55a6997835d8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55a699783658 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55a699783558 <col:27> 'Task *' lvalue ParmVar 0x55a69977a618 'task' 'Task *'
|     |-ImplicitCastExpr 0x55a699783670 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55a699783578 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55a69977a690 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55a699783688 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55a699783598 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55a69977a1e0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55a6997835b8 <col:62> 'const String' lvalue ParmVar 0x55a69977a708 'prefix' 'const String &'
|-CXXMethodDecl 0x55a69977a9f8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55a69977a8b0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55a69977a928 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55a699782f68 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55a699782f50 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55a699782f38 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55a699782f18 <col:70, col:77> 'String' (CXXTemporary 0x55a699782f18)
| |         `-CXXTemporaryObjectExpr 0x55a699782ee0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55a699783878 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55a6997837f0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55a6997837c0 <col:9> '<bound member function type>' ->add_task_handlers 0x55a69977a548
|     | `-CXXThisExpr 0x55a6997837b0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55a699783830 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55a699783730 <col:27> 'Task *' lvalue ParmVar 0x55a69977a8b0 'task' 'Task *'
|     |-ImplicitCastExpr 0x55a699783848 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55a699783750 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55a699783860 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55a699783770 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55a69977a1e0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55a699783790 <col:57> 'const String' lvalue ParmVar 0x55a69977a928 'prefix' 'const String &'
|-CXXMethodDecl 0x55a69977acd8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55a69977aac0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a69977ab40 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a69977abb8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55a69977af88 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55a69977ada8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a69977ae28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a69977aea8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55a69977b278 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55a69977b058 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a69977b0d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a69977b150 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55a69977b528 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55a69977b348 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a69977b3c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a69977b448 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55a69977b7d8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55a69977b5f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a69977b678 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a69977b6f8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55a69977ba88 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55a69977b8a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a69977b928 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a69977b9a0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55a69977bd38 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55a69977bb58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a69977bbd8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a69977bc58 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55a69977c048 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55a69977be60 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a69977bee0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a69977bf60 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55a69977c328 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55a69977c118 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a69977c198 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a69977c240 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55a69977c608 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55a69977c3f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a69977c478 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a69977c520 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55a69977c870 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55a69977c6d8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55a69977c758 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55a69977c7d0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55a69977cb18 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55a69977c940 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55a69977c9c0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55a69977ca38 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55a69977cdc8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55a69977cbe8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a69977cc68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a69977cce8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55a69977d078 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55a69977ce98 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a69977cf18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a69977cf90 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55a69977d328 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55a69977d148 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a69977d1c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a69977d240 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55a69977d5f8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55a69977d3f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a69977d478 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55a69977d518 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55a69977d928 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55a69977d6c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55a69977d748 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55a69977d7c0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55a69977d838 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55a699782f80 <col:93> 'bool' false
|-CXXMethodDecl 0x55a69977db10 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55a69977d9f8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55a69977da78 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55a69977dce8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55a69977dbd0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55a69977dc50 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55a69977dfc8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55a69977dda8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55a69977de20 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55a69977dea0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55a69977df18 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55a69977e2b8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55a69977e098 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55a69977e110 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55a69977e190 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55a69977e208 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55a69977e4f0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55a69977e390 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55a69977e410 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55a69977e6d8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55a69977e5b8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55a69977e638 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55a69977e788 prev 0x55a699775f28 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a69977e880 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55a69977e910 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55a69977e988 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55a69977ea48 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55a69977eb10 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55a69977ec88 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55a69977ebc0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55a69977ed30 <col:24>
| | `-OptimizeNoneAttr 0x55a69977ed88 <col:34>
| |-CXXMethodDecl 0x55a69977edd0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55a69977f088 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55a69977ee80 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55a69977eef8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55a69977ef78 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55a69977f140 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55a69977f178 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55a69977f1e0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55a69977f268 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55a69977f588 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55a69977f320 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55a69977f398 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55a69977f410 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55a69977f490 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55a69977f6a0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55a699787018 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55a699787018
| | `-ParmVarDecl 0x55a699787128 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55a6997871c8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55a6997871c8
| | `-ParmVarDecl 0x55a6997872d8 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55a69978b6d8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55a69977f718 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55a69977f7b8 <col:38> "" ""
|-CXXMethodDecl 0x55a69977f848 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55a69977f8e8 <col:44> "" ""
|-AccessSpecDecl 0x55a69977f958 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55a69977f980 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55a69977fa80 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55a69977fad0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a69977fa60 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55a69977fa40 <col:27> 'int' 4
|-FieldDecl 0x55a69977fb88 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55a69977fd38 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55a69977fdf0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55a699780e80 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55a699780ee8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55a699781038 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55a699780f78 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55a6997811e8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55a6997810f8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55a6997813c8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55a6997812a8 <col:20> col:23 'int'
| `-ParmVarDecl 0x55a699781328 <col:25> col:28 'int'
|-CXXMethodDecl 0x55a699781670 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55a699781490 <col:23> col:26 'int'
| |-ParmVarDecl 0x55a699781510 <col:28> col:31 'int'
| `-ParmVarDecl 0x55a699781588 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55a699781728 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55a6997817f0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55a699781840 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55a699781890 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55a699781a70 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55a699781920 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55a699781998 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55a699781d18 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55a699781b38 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55a699781bb8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55a699781c30 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55a699781f38 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55a699781de8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55a699781e68 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55a699782270 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55a699781ff8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55a699782078 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55a6997820f0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55a699782170 <col:57> col:60 'int'
|-CXXMethodDecl 0x55a699782458 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55a699782340 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55a6997823c0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55a6997825a8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55a699782518 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55a699782928 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55a699782668 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55a6997826e8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55a699782760 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55a6997827e0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55a699782a40 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorElement
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a69978a188 <../dummy_inc/click/standard/errorelement.hh:20:1, line:32:1> line:20:7 class ErrorElement definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55a69978a2e8 <col:1, col:7> col:7 implicit referenced class ErrorElement
|-AccessSpecDecl 0x55a69978a378 <col:39, col:45> col:39 public
|-CXXConstructorDecl 0x55a69978a400 <line:22:5, col:18> col:5 ErrorElement 'void ()'
|-CXXMethodDecl 0x55a69978a500 <line:24:5, col:54> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55a699772ed8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55a69978b3f8 <col:36, col:54>
|   `-ReturnStmt 0x55a69978b3e8 <col:38, col:45>
|     `-ImplicitCastExpr 0x55a69978b3d0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55a69978b3b0 <col:45> 'const char [6]' lvalue "Error"
|-CXXMethodDecl 0x55a69978a5c8 <line:25:5, col:52> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x55a699772fa0 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55a69978b458 <col:36, col:52>
|   `-ReturnStmt 0x55a69978b448 <col:38, col:45>
|     `-ImplicitCastExpr 0x55a69978b430 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55a69978b410 <col:45> 'const char [4]' lvalue "-/-"
|-CXXMethodDecl 0x55a69978a690 <line:26:5, col:55> col:17 processing 'const char *() const'
| |-Overrides: [ 0x55a699773368 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x55a69978b4b8 <col:36, col:55>
|   `-ReturnStmt 0x55a69978b4a8 <col:38, col:45>
|     `-ImplicitCastExpr 0x55a69978b490 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55a69978b470 <col:45> 'const char []' lvalue Var 0x55a699773428 'AGNOSTIC' 'const char []'
|-CXXMethodDecl 0x55a69978a758 <line:27:5, col:51> col:17 flow_code 'const char *() const'
| |-Overrides: [ 0x55a699773760 Element::flow_code 'const char *() const' ]
| `-CompoundStmt 0x55a69978b518 <col:35, col:51>
|   `-ReturnStmt 0x55a69978b508 <col:37, col:44>
|     `-ImplicitCastExpr 0x55a69978b4f0 <col:44> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55a69978b4d0 <col:44> 'const char [4]' lvalue "x/y"
|-CXXMethodDecl 0x55a69978aa30 <line:29:5, col:51> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55a699774770 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55a69978a8e0 <col:19, col:34> col:35 'Vector<String> &'
| `-ParmVarDecl 0x55a69978a958 <col:37, col:50> col:51 'ErrorHandler *'
|-CXXMethodDecl 0x55a69978ab88 <line:30:5, col:34> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x55a6997749c0 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x55a69978aaf0 <col:20, col:33> col:34 'ErrorHandler *'
|-CXXConstructorDecl 0x55a69978ac58 <line:20:7> col:7 implicit ErrorElement 'void (const ErrorElement &)' inline default_delete noexcept-unevaluated 0x55a69978ac58
| `-ParmVarDecl 0x55a69978ad68 <col:7> col:7 'const ErrorElement &'
|-CXXConstructorDecl 0x55a69978ae08 <col:7> col:7 implicit ErrorElement 'void (ErrorElement &&)' inline default_delete noexcept-unevaluated 0x55a69978ae08
| `-ParmVarDecl 0x55a69978af18 <col:7> col:7 'ErrorElement &&'
|-CXXMethodDecl 0x55a69978afb8 <col:7> col:7 implicit operator= 'ErrorElement &(const ErrorElement &)' inline default_delete noexcept-unevaluated 0x55a69978afb8
| `-ParmVarDecl 0x55a69978b0c8 <col:7> col:7 'const ErrorElement &'
|-CXXMethodDecl 0x55a69978b138 <col:7> col:7 implicit operator= 'ErrorElement &(ErrorElement &&)' inline default_delete noexcept-unevaluated 0x55a69978b138
| `-ParmVarDecl 0x55a69978b248 <col:7> col:7 'ErrorElement &&'
`-CXXDestructorDecl 0x55a69978b2d0 <col:7> col:7 implicit ~ErrorElement 'void ()' inline default noexcept-unevaluated 0x55a69978b2d0
  `-Overrides: [ 0x55a699771a78 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.ErrorElement = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.ErrorElement.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a699530250 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a699530368 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55a6995303f8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55a6995304c8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55a6995305b0 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55a6995307c8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55a699530670 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a699530978 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55a699530880 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55a699530ac0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55a699530a30 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55a699530c08 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55a699530b78 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a699530d50 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55a699530cc0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a699530e18 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x55a699530f60 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x55a699530ed0 <col:28> col:31 'int'
|-CXXMethodDecl 0x55a699531028 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x55a699531170 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55a6995310e0 <col:28> col:31 'int'
|-CXXMethodDecl 0x55a6995312e8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55a699531228 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a699531430 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55a6995313a0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a6995314f8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55a6995316b8 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55a6995315a8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55a699531620 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a699531908 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55a699531778 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a6995317f0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a6995319b8 <col:86> "" ""
|-CXXMethodDecl 0x55a699531c28 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55a699531a98 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55a699531b10 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a699531dd8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55a699531ce8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55a699531f88 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55a699531e90 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55a699532258 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55a699532040 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55a6995320b8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55a699532130 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a699532538 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55a699532320 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55a699532398 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a699532410 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a6995325f0 <col:115> "" ""
|-AccessSpecDecl 0x55a699532660 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55a699532698 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a699533bb0 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55a699533bb0
| `-ParmVarDecl 0x55a699533cb8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55a699533d58 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55a699533d58
| `-ParmVarDecl 0x55a699533e68 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55a699569498 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55a69975b290 <col:7>
|-CXXConstructorDecl 0x55a699569570 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55a699569570
| `-ParmVarDecl 0x55a699569688 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55a6995696f8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55a6995696f8
| `-ParmVarDecl 0x55a699569808 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55a69975dc90 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a699749e38 prev 0x55a69973f040 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a699749f30 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55a69974a020 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55a69974a148 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55a69974a2c8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55a69974a448 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55a69974a5c8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55a69975b3f8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55a69975bc68 <col:11>
|-CXXDestructorDecl 0x55a69975b4d0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55a69975b608 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55a69975b608
| `-ParmVarDecl 0x55a69975b718 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55a69975b7b8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55a69975b7b8
| `-ParmVarDecl 0x55a69975b8c8 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55a69975e688 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55a69975e798 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55a69975ea18 <col:11>
|   `-ReturnStmt 0x55a69975ea08 <col:11>
|     `-UnaryOperator 0x55a69975e9f0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55a69975e9e0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55a69975e808 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55a69975e808
  `-ParmVarDecl 0x55a69975e918 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a69974a630 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a69974a748 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55a69974a7e8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55a69974a850 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55a69974a8b8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55a69974a920 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55a69974a980 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55a69974aa40 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55a69974aaa0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55a69974ab00 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55a69975b308 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55a69974a7e8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55a69975bc78 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55a69975bcd0 <col:12>
|-CXXConstructorDecl 0x55a69975b938 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55a69975b938
| `-ParmVarDecl 0x55a69975ba48 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55a69975bae8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55a69975bae8
| `-ParmVarDecl 0x55a69975bbf8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55a69975dd70 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a699738750 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a699738868 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55a6997388f8 <col:16, col:22> col:16 public
|-EnumDecl 0x55a699738920 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55a699738a20 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55a699738b00 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a699738a00 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55a6997389e0 <col:21> 'int' 28
| `-EnumConstantDecl 0x55a699738ab0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55a699738b18 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a699738a90 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55a699738a70 <col:22> 'int' 64
|-CXXMethodDecl 0x55a699738e58 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55a699738b40 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a699738bc0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55a699738c38 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a699738cb0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a699738f18 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55a699739118 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55a699738f90 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55a699739008 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a6997391c8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55a699739328 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55a699739238 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a6997393d0 <col:72> warn_unused_result ""
|-TypedefDecl 0x55a699739730 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55a6997396c0 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55a699739660 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55a699739620 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55a6992122d0 'void'
|       |-PointerType 0x55a6994b8af0 'unsigned char *'
|       | `-BuiltinType 0x55a6992123d0 'unsigned char'
|       |-TypedefType 0x55a6992b5060 'size_t' sugar
|       | |-Typedef 0x55a699282b20 'size_t'
|       | `-BuiltinType 0x55a699212430 'unsigned long'
|       `-PointerType 0x55a699212ad0 'void *'
|         `-BuiltinType 0x55a6992122d0 'void'
|-CXXMethodDecl 0x55a699739ba8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55a6997397a0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55a699739818 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a6997398b0 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55a699739930 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55a6997542a0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55a699754288 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55a699754250 <col:58> 'int' 0
| |-ParmVarDecl 0x55a6997399b0 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55a6997542c8 <col:76> 'int' 0
| |-ParmVarDecl 0x55a699739a30 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55a6997542e8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55a699739c78 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55a699739cf8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55a699739db8 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55a699739e58 <col:20>
| `-OptimizeNoneAttr 0x55a699739eb0 <col:30>
|-CXXMethodDecl 0x55a699739f28 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55a699739fc8 <col:20>
| `-OptimizeNoneAttr 0x55a69973a020 <col:30>
|-CXXMethodDecl 0x55a69973a098 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55a69973a138 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55a69973a1e8 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55a69973a288 <col:20>
| |-OptimizeNoneAttr 0x55a69973a2e0 <col:30>
| `-WarnUnusedResultAttr 0x55a69973a308 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55a69973a360 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55a69973a400 <col:20>
| `-OptimizeNoneAttr 0x55a69973a458 <col:30>
|-CXXMethodDecl 0x55a69973a4a8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55a69973a548 <col:20>
| `-OptimizeNoneAttr 0x55a69973a5a0 <col:30>
|-CXXMethodDecl 0x55a69973a5e8 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55a69973a688 <col:20>
| `-OptimizeNoneAttr 0x55a69973a6e0 <col:30>
|-CXXMethodDecl 0x55a69973a728 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55a69973a7e8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55a69973a8b0 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55a69973a978 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55a69973aa38 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55a69973ab58 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55a6997543b0 <col:54, line:99:5>
|   `-ReturnStmt 0x55a6997543a0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55a699754388 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55a699754358 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55a69974ae38
|         `-CXXThisExpr 0x55a699754348 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55a69973acf8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55a69973ac08 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55a699754460 <col:67, line:103:5>
|   `-BinaryOperator 0x55a699754440 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55a6997543d8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55a69974ae38
|     | `-CXXThisExpr 0x55a6997543c8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55a699754428 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55a699754408 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55a69973ac08 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55a69973adf0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55a6997544e0 <col:33, line:107:5>
|   `-ReturnStmt 0x55a6997544d0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55a6997544b8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55a699754488 <col:16> 'void *' lvalue ->_destructor_argument 0x55a69974aea0
|         `-CXXThisExpr 0x55a699754478 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55a69973aeb0 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55a699754b10 <col:25, line:113:5>
|   |-ParenExpr 0x55a699754858 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55a699754828 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55a699754598 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55a699754570 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55a699754538 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55a699754508 <col:24> '<bound member function type>' ->shared 0x55a699739f28
|   |   |       `-ImplicitCastExpr 0x55a699754558 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55a6997544f8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55a6997545f8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a6997545d8 <col:42> 'int' 0
|   |   `-CallExpr 0x55a699754788 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55a699754770 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a699754750 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a6992abe70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a6997547c8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a699754668 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55a6997547e0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a699754690 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a6997547f8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a6997546c8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55a699754810 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a699754738 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a699754720 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a6997546e8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55a699754a58 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55a699754888 <col:2> 'unsigned char *' lvalue ->_head 0x55a69974ac40
|   | | `-CXXThisExpr 0x55a699754878 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55a699754a40 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55a699754a20 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55a6997548c8 <col:10> 'unsigned char *' lvalue ->_data 0x55a69974aca8
|   |     | `-CXXThisExpr 0x55a6997548b8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55a699754a08 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55a6997549e8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55a699754908 <col:18> 'unsigned char *' lvalue ->_tail 0x55a69974ad10
|   |         | `-CXXThisExpr 0x55a6997548f8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55a6997549d0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55a6997549b0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55a699754948 <col:26> 'unsigned char *' lvalue ->_end 0x55a69974ad78
|   |             | `-CXXThisExpr 0x55a699754938 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55a699754998 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55a699754978 <col:33> 'int' 0
|   `-BinaryOperator 0x55a699754af0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55a699754a88 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55a69974ae38
|     | `-CXXThisExpr 0x55a699754a78 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55a699754ad8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55a699754ab8 <col:16> 'int' 0
|-CXXMethodDecl 0x55a69973aff0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55a69973af60 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a69973b098 <col:20>
| |-OptimizeNoneAttr 0x55a69973b0f0 <col:30>
| `-WarnUnusedResultAttr 0x55a69973b118 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55a69973b1e8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55a69973b158 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a69973b290 <col:20>
| |-OptimizeNoneAttr 0x55a69973b2e8 <col:30>
| `-WarnUnusedResultAttr 0x55a69973b310 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55a69973b448 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55a69973b350 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a69973b4f0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55a69973b5f0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55a69973b560 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a69973b698 <col:20>
| `-OptimizeNoneAttr 0x55a69973b6f0 <col:30>
|-CXXMethodDecl 0x55a69973b7b8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55a69973b728 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a69973b860 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55a69973b960 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55a69973b8d0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55a69973ba08 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55a69973bb08 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55a69973ba78 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a69973bbb0 <col:20>
| `-OptimizeNoneAttr 0x55a69973bc08 <col:30>
|-CXXMethodDecl 0x55a69973bd98 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55a69973bc48 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55a69973bcc0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55a699754308 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55a69973be48 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55a69973c048 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55a69973bec0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55a69973bf38 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a69973c258 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55a69973c108 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55a69973c180 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a69973c468 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55a69973c318 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55a69973c398 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55a699754318 <col:39> 'int' 0
|-CXXMethodDecl 0x55a69973c538 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55a69973c600 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55a69973c6c8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55a69973c788 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55a69973c850 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55a69973c998 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55a69973c908 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55a69973cb68 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55a69973ca58 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55a69973cad0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a69973cc38 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55a69973ccf8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55a69973cd98 <col:20>
| `-OptimizeNoneAttr 0x55a69973cdf0 <col:30>
|-CXXMethodDecl 0x55a69973ce40 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55a69973cee0 <col:20>
| `-OptimizeNoneAttr 0x55a69973cf38 <col:30>
|-CXXMethodDecl 0x55a69973cf88 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55a69973d048 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55a69973d110 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55a69973d1b0 <col:20>
| `-OptimizeNoneAttr 0x55a69973d208 <col:30>
|-CXXMethodDecl 0x55a69973d358 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55a69973d248 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55a69973d2c0 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a69973d4a8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55a69973d418 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a69973d580 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55a69973d640 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55a69973d6e0 <col:20>
| `-OptimizeNoneAttr 0x55a69973d738 <col:30>
|-CXXMethodDecl 0x55a69973d788 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55a69973d828 <col:20>
| `-OptimizeNoneAttr 0x55a69973d880 <col:30>
|-CXXMethodDecl 0x55a69973d8d0 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55a69973d998 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55a69973da38 <col:20>
| `-OptimizeNoneAttr 0x55a69973da90 <col:30>
|-CXXMethodDecl 0x55a69973dad8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55a69973dbf8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55a69973dd68 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55a69973dca8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55a69973de58 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55a69973def8 <col:20>
| `-OptimizeNoneAttr 0x55a69973df50 <col:30>
|-CXXMethodDecl 0x55a69973dfa0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55a69973e060 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55a69973e298 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55a69973e110 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55a69973e188 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a69973e348 <col:20>
| `-OptimizeNoneAttr 0x55a69973e3a0 <col:30>
|-CXXMethodDecl 0x55a69973e448 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55a69973e4e8 <col:20>
| `-OptimizeNoneAttr 0x55a69973e540 <col:30>
|-CXXMethodDecl 0x55a69973e590 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55a69973e630 <col:20>
| `-OptimizeNoneAttr 0x55a69973e688 <col:30>
|-CXXMethodDecl 0x55a69973e6d0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55a69973e770 <col:20>
| `-OptimizeNoneAttr 0x55a69973e7c8 <col:30>
|-CXXMethodDecl 0x55a69973e8c8 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55a69973e800 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55a69973e970 <col:20>
| `-OptimizeNoneAttr 0x55a69973e9c8 <col:30>
|-CXXMethodDecl 0x55a69973eb88 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55a69973ea00 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55a69973ea78 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a69973ec38 <col:20>
| `-OptimizeNoneAttr 0x55a69973ec90 <col:30>
|-CXXMethodDecl 0x55a69973ed38 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55a69973ee58 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55a69973ef78 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55a69973f018 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55a69973f040 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55a69973f168 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55a69973f208 <col:20>
| `-OptimizeNoneAttr 0x55a69973f260 <col:30>
|-CXXMethodDecl 0x55a69973f308 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55a69973f3a8 <col:20>
| `-OptimizeNoneAttr 0x55a69973f400 <col:30>
|-AccessSpecDecl 0x55a69973f428 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55a69973f450 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55a69973f550 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55a69973f5a0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a69973f530 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55a69973f510 <col:14> 'int' 48
|-CXXMethodDecl 0x55a69973f608 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55a69973f6a8 <col:20>
| `-OptimizeNoneAttr 0x55a69973f700 <col:30>
|-CXXMethodDecl 0x55a69973f778 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55a69973f818 <col:20>
| `-OptimizeNoneAttr 0x55a69973f870 <col:30>
|-CXXMethodDecl 0x55a69973f938 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55a69973f8a8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55a69973fad8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55a69973fc78 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55a69973fb88 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55a69973fd20 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55a69973fe20 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a6997401d0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a69973fe00 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55a69973fde0 <col:9> 'int' 0
| |-EnumConstantDecl 0x55a69973feb0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a6997401e8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a69973fe90 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55a69973fe70 <col:14> 'int' 1
| |-EnumConstantDecl 0x55a69973ff40 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a699740200 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a69973ff20 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55a69973ff00 <col:14> 'int' 2
| |-EnumConstantDecl 0x55a69973ffd0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a699740218 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a69973ffb0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55a69973ff90 <col:14> 'int' 3
| |-EnumConstantDecl 0x55a699740060 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a699740230 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a699740040 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55a699740020 <col:13> 'int' 4
| |-EnumConstantDecl 0x55a6997400f0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55a699740248 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a6997400d0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55a6997400b0 <col:13> 'int' 5
| `-EnumConstantDecl 0x55a699740180 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55a699740260 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a699740160 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55a699740140 <col:14> 'int' 6
|-CXXMethodDecl 0x55a6997402c8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55a699740368 <col:20>
| `-OptimizeNoneAttr 0x55a6997403c0 <col:30>
|-CXXMethodDecl 0x55a6997404b8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55a6997403f8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55a699740560 <col:20>
| `-OptimizeNoneAttr 0x55a6997405b8 <col:30>
|-CXXMethodDecl 0x55a699740628 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55a699740750 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55a6997408c8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55a699740800 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55a699740990 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55a699740a58 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55a699740b98 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55a699740b08 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55a699740c40 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55a699740d40 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55a699740f40 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a699740d20 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55a699740d00 <col:23> 'int' 0
| |-EnumConstantDecl 0x55a699740dd0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55a699740f58 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a699740db0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55a699740d90 <col:45> 'int' 4
| |-EnumConstantDecl 0x55a699740e60 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55a699740f70 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a699740e40 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55a699740e20 <col:24> 'int' 0
| `-EnumConstantDecl 0x55a699740ef0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55a699740f88 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a699740ed0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55a699740eb0 <col:47> 'int' 16
|-CXXMethodDecl 0x55a699740fe8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55a699741158 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55a699741098 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55a699741200 <col:20>
| `-OptimizeNoneAttr 0x55a699741258 <col:30>
|-CXXMethodDecl 0x55a6997412a8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55a699754c30 <col:18, col:36>
|   `-ReturnStmt 0x55a699754c20 <col:20, col:33>
|     `-ImplicitCastExpr 0x55a699754c08 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55a699754be8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55a699754bb8 <col:27> '<bound member function type>' ->xanno 0x55a69973f308
|           `-CXXThisExpr 0x55a699754ba8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55a6997413a0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55a699754d40 <col:30, col:48>
|   `-ReturnStmt 0x55a699754d30 <col:32, col:45>
|     `-ImplicitCastExpr 0x55a699754d18 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55a699754cf8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55a699754cc8 <col:39> '<bound member function type>' ->xanno 0x55a69973f168
|           `-CXXThisExpr 0x55a699754cb8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55a699741488 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55a699754ed8 <col:24, col:50>
|   `-ReturnStmt 0x55a699754ec8 <col:26, col:47>
|     `-UnaryOperator 0x55a699754eb0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55a699754e90 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55a699754e78 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55a699754e28 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55a69974a148
|         |   `-CXXMemberCallExpr 0x55a699754e08 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55a699754dd8 <col:34> '<bound member function type>' ->xanno 0x55a69973f308
|         |       `-CXXThisExpr 0x55a699754dc8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55a699754e58 <col:46> 'int' 0
|-CXXMethodDecl 0x55a699741590 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55a6997550a8 <col:36, col:62>
|   `-ReturnStmt 0x55a699755098 <col:38, col:59>
|     `-UnaryOperator 0x55a699755080 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55a699755060 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55a699755048 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55a699754fc0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55a69974a148
|         |   `-CXXMemberCallExpr 0x55a699754fa0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55a699754f70 <col:46> '<bound member function type>' ->xanno 0x55a69973f168
|         |       `-CXXThisExpr 0x55a699754f60 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55a699754ff0 <col:58> 'int' 0
|-CXXMethodDecl 0x55a6997416a8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55a699755240 <col:26, col:53>
|   `-ReturnStmt 0x55a699755230 <col:28, col:50>
|     `-UnaryOperator 0x55a699755218 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55a6997551f8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55a6997551e0 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55a699755190 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55a69974a448
|         |   `-CXXMemberCallExpr 0x55a699755170 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55a699755140 <col:36> '<bound member function type>' ->xanno 0x55a69973f308
|         |       `-CXXThisExpr 0x55a699755130 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55a6997551c0 <col:49> 'int' 0
|-CXXMethodDecl 0x55a6997417c8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55a699755418 <col:38, col:65>
|   `-ReturnStmt 0x55a699755408 <col:40, col:62>
|     `-UnaryOperator 0x55a6997553f0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55a6997553d0 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55a6997553b8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55a699755328 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55a69974a448
|         |   `-CXXMemberCallExpr 0x55a699755308 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55a6997552d8 <col:48> '<bound member function type>' ->xanno 0x55a69973f168
|         |       `-CXXThisExpr 0x55a6997552c8 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55a699755358 <col:61> 'int' 0
|-CXXMethodDecl 0x55a699741978 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55a699741880 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55a699755ae8 <col:34, line:463:5>
|   |-ParenExpr 0x55a699755930 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55a699755900 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55a699755568 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a699755538 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a699755488 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a699755470 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a699755430 <col:23> 'int' lvalue ParmVar 0x55a699741880 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a699755450 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a699755518 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a6997554e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a6997554a8 <col:33> 'int' lvalue ParmVar 0x55a699741880 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55a699755500 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55a6997554c8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a69973f550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55a6997555c8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a6997555a8 <col:56> 'int' 0
|   |   `-CallExpr 0x55a699755860 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55a699755848 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a699755828 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a6992abe70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a6997558a0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a6997556b8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55a6997558b8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a6997556e8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a6997558d0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a699755720 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55a6997558e8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a699755810 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a6997557f8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a6997557b8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55a699755ad8 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55a699755ac0 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55a699755aa0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55a699755a70 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55a699755a20 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55a69974a148
|         |   `-CXXMemberCallExpr 0x55a699755a00 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55a6997559d0 <col:9> '<bound member function type>' ->xanno 0x55a69973f168
|         |       `-CXXThisExpr 0x55a6997559c0 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55a699755a88 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55a699755a50 <col:21> 'int' lvalue ParmVar 0x55a699741880 'i' 'int'
|-CXXMethodDecl 0x55a699741bc8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55a699741a38 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55a699741ab0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55a699756178 <col:40, line:472:5>
|   |-ParenExpr 0x55a699755f90 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55a699755f60 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55a699755c40 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a699755c10 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a699755b60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a699755b48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a699755b08 <col:23> 'int' lvalue ParmVar 0x55a699741a38 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a699755b28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a699755bf0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a699755bc0 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a699755b80 <col:33> 'int' lvalue ParmVar 0x55a699741a38 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55a699755bd8 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55a699755ba0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a69973f550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55a699755ca0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a699755c80 <col:56> 'int' 0
|   |   `-CallExpr 0x55a699755ec0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55a699755ea8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a699755e88 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a6992abe70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a699755f00 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a699755d10 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55a699755f18 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a699755d40 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a699755f30 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a699755d78 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55a699755f48 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a699755e70 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a699755e58 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a699755e18 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55a699756158 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55a699756100 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55a6997560d0 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55a699756080 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55a69974a148
|     | |   `-CXXMemberCallExpr 0x55a699756060 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55a699756030 <col:2> '<bound member function type>' ->xanno 0x55a69973f308
|     | |       `-CXXThisExpr 0x55a699756020 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55a6997560e8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55a6997560b0 <col:14> 'int' lvalue ParmVar 0x55a699741a38 'i' 'int'
|     `-ImplicitCastExpr 0x55a699756140 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55a699756120 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55a699741ab0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55a699741d88 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55a699741c90 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55a6997568f8 <col:36, line:485:5>
|   |-ParenExpr 0x55a699756660 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a699756630 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a699756310 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a6997562e0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a6997561f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a6997561d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a699756198 <col:23> 'int' lvalue ParmVar 0x55a699741c90 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a6997561b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a6997562c0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a6997562a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a699756210 <col:33> 'int' lvalue ParmVar 0x55a699741c90 'i' 'int'
|   |   |     `-BinaryOperator 0x55a699756288 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a699756270 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a699756230 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a69973f550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a699756250 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55a699756370 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a699756350 <col:60> 'int' 0
|   |   `-CallExpr 0x55a699756590 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a699756578 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a699756558 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a6992abe70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a6997565d0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a6997563e0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55a6997565e8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a699756418 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a699756600 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a699756450 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55a699756618 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a699756540 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a699756528 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a6997564e8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55a6997568e8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55a6997568d0 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55a6997568b8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a699756888 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55a699756828 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a6997567f8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a699756770 <col:61, col:70> 'char const[48]' lvalue ->c 0x55a69974a020
|             |   `-CXXMemberCallExpr 0x55a699756750 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a699756720 <col:61> '<bound member function type>' ->xanno 0x55a69973f168
|             |       `-CXXThisExpr 0x55a699756710 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a699756810 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a6997567a0 <col:74> 'int' lvalue ParmVar 0x55a699741c90 'i' 'int'
|-CXXMethodDecl 0x55a699741fd8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55a699741e48 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55a699741ec0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55a699757048 <col:42, line:500:5>
|   |-ParenExpr 0x55a699756de0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a699756db0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a699756a90 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a699756a60 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a699756970 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a699756958 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a699756918 <col:23> 'int' lvalue ParmVar 0x55a699741e48 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a699756938 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a699756a40 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a699756a28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a699756990 <col:33> 'int' lvalue ParmVar 0x55a699741e48 'i' 'int'
|   |   |     `-BinaryOperator 0x55a699756a08 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a6997569f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a6997569b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a69973f550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a6997569d0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55a699756af0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a699756ad0 <col:60> 'int' 0
|   |   `-CallExpr 0x55a699756d10 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a699756cf8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a699756cd8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a6992abe70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a699756d50 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a699756b60 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55a699756d68 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a699756b98 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a699756d80 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a699756bd0 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55a699756d98 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a699756cc0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a699756ca8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a699756c68 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55a699757028 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55a699756fd8 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55a699756fa8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55a699756f50 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55a699756f20 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55a699756ed0 <col:48, col:57> 'char [48]' lvalue ->c 0x55a69974a020
|     |     |   `-CXXMemberCallExpr 0x55a699756eb0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55a699756e80 <col:48> '<bound member function type>' ->xanno 0x55a69973f308
|     |     |       `-CXXThisExpr 0x55a699756e70 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55a699756f38 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55a699756f00 <col:61> 'int' lvalue ParmVar 0x55a699741e48 'i' 'int'
|     `-ImplicitCastExpr 0x55a699757010 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55a699756ff0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55a699741ec0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55a699742198 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55a6997420a0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55a6997577a8 <col:35, line:513:5>
|   |-ParenExpr 0x55a6997574b8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a699757488 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a6997571e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a6997571b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a6997570c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a6997570a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a699757068 <col:23> 'int' lvalue ParmVar 0x55a6997420a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a699757088 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a699757190 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a699757178 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a6997570e0 <col:33> 'int' lvalue ParmVar 0x55a6997420a0 'i' 'int'
|   |   |     `-BinaryOperator 0x55a699757158 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a699757140 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a699757100 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a69973f550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a699757120 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55a699757240 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a699757220 <col:60> 'int' 0
|   |   `-CallExpr 0x55a6997573e8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a6997573d0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a6997573b0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a6992abe70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a699757428 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a6997572b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55a699757440 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a6997572e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a699757458 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a699757320 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55a699757470 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a699757398 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a699757380 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a699757340 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55a699757798 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55a699757780 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55a699757768 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a699757738 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55a6997576b0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a699757680 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a699757630 <col:60, col:69> 'char const[48]' lvalue ->c 0x55a69974a020
|             |   `-CXXMemberCallExpr 0x55a699757610 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a6997575e0 <col:60> '<bound member function type>' ->xanno 0x55a69973f168
|             |       `-CXXThisExpr 0x55a6997575d0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a699757698 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a699757660 <col:73> 'int' lvalue ParmVar 0x55a6997420a0 'i' 'int'
|-CXXMethodDecl 0x55a6997423e8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55a699742258 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55a6997422d0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55a699757ec8 <col:41, line:528:5>
|   |-ParenExpr 0x55a699757c50 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a699757c20 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a699757940 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a699757910 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a699757820 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a699757808 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a6997577c8 <col:23> 'int' lvalue ParmVar 0x55a699742258 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a6997577e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a6997578f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a6997578d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a699757840 <col:33> 'int' lvalue ParmVar 0x55a699742258 'i' 'int'
|   |   |     `-BinaryOperator 0x55a6997578b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a6997578a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a699757860 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a69973f550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a699757880 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55a6997579a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a699757980 <col:60> 'int' 0
|   |   `-CallExpr 0x55a699757b80 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a699757b68 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a699757b48 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a6992abe70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a699757bc0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a699757a10 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55a699757bd8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a699757a48 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a699757bf0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a699757a80 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55a699757c08 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a699757b30 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a699757b18 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a699757ad8 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55a699757ea8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55a699757e58 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55a699757e28 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55a699757dd0 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55a699757d90 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55a699757d40 <col:47, col:56> 'char [48]' lvalue ->c 0x55a69974a020
|     |     |   `-CXXMemberCallExpr 0x55a699757d20 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55a699757cf0 <col:47> '<bound member function type>' ->xanno 0x55a69973f308
|     |     |       `-CXXThisExpr 0x55a699757ce0 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55a699757da8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55a699757d70 <col:60> 'int' lvalue ParmVar 0x55a699742258 'i' 'int'
|     `-ImplicitCastExpr 0x55a699757e90 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55a699757e70 <col:65> 'int16_t':'short' lvalue ParmVar 0x55a6997422d0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55a6997425a8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55a6997424b0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55a699758598 <col:36, line:541:5>
|   |-ParenExpr 0x55a699758338 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a699758308 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a699758060 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a699758030 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a699757f40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a699757f28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a699757ee8 <col:23> 'int' lvalue ParmVar 0x55a6997424b0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a699757f08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a699758010 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a699757ff8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a699757f60 <col:33> 'int' lvalue ParmVar 0x55a6997424b0 'i' 'int'
|   |   |     `-BinaryOperator 0x55a699757fd8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a699757fc0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a699757f80 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a69973f550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a699757fa0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55a6997580c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a6997580a0 <col:60> 'int' 0
|   |   `-CallExpr 0x55a699758268 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a699758250 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a699758230 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a6992abe70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a6997582a8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a699758130 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55a6997582c0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a699758168 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a6997582d8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a6997581a0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55a6997582f0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a699758218 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a699758200 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a6997581c0 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55a699758588 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55a699758570 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55a699758558 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a699758528 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55a6997584d0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a6997584a0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a699758450 <col:61, col:70> 'char const[48]' lvalue ->c 0x55a69974a020
|             |   `-CXXMemberCallExpr 0x55a699758430 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a699758400 <col:61> '<bound member function type>' ->xanno 0x55a69973f168
|             |       `-CXXThisExpr 0x55a6997583f0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a6997584b8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a699758480 <col:74> 'int' lvalue ParmVar 0x55a6997424b0 'i' 'int'
|-CXXMethodDecl 0x55a699742778 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55a699742668 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55a6997426e0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55a699742828 <col:20>
| `-OptimizeNoneAttr 0x55a699742880 <col:30>
|-CXXMethodDecl 0x55a6997429b8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55a6997428c0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55a699758c68 <col:35, line:562:5>
|   |-ParenExpr 0x55a699758a08 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a6997589d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a699758730 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a699758700 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a699758610 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a6997585f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a6997585b8 <col:23> 'int' lvalue ParmVar 0x55a6997428c0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a6997585d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a6997586e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a6997586c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a699758630 <col:33> 'int' lvalue ParmVar 0x55a6997428c0 'i' 'int'
|   |   |     `-BinaryOperator 0x55a6997586a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a699758690 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a699758650 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a69973f550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a699758670 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55a699758790 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a699758770 <col:60> 'int' 0
|   |   `-CallExpr 0x55a699758938 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a699758920 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a699758900 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a6992abe70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a699758978 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a699758800 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55a699758990 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a699758838 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a6997589a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a699758870 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55a6997589c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a6997588e8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a6997588d0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a699758890 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55a699758c58 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55a699758c40 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55a699758c28 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a699758bf8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55a699758ba0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a699758b70 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a699758b20 <col:60, col:69> 'char const[48]' lvalue ->c 0x55a69974a020
|             |   `-CXXMemberCallExpr 0x55a699758b00 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a699758ad0 <col:60> '<bound member function type>' ->xanno 0x55a69973f168
|             |       `-CXXThisExpr 0x55a699758ac0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a699758b88 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a699758b50 <col:73> 'int' lvalue ParmVar 0x55a6997428c0 'i' 'int'
|-CXXMethodDecl 0x55a699742bc8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55a699742a78 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55a699742af0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55a699759348 <col:41, line:577:5>
|   |-ParenExpr 0x55a6997590d8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a6997590a8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a699758e00 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a699758dd0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a699758ce0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a699758cc8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a699758c88 <col:23> 'int' lvalue ParmVar 0x55a699742a78 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a699758ca8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a699758db0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a699758d98 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a699758d00 <col:33> 'int' lvalue ParmVar 0x55a699742a78 'i' 'int'
|   |   |     `-BinaryOperator 0x55a699758d78 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a699758d60 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a699758d20 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a69973f550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a699758d40 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55a699758e60 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a699758e40 <col:60> 'int' 0
|   |   `-CallExpr 0x55a699759008 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a699758ff0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a699758fd0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a6992abe70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a699759048 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a699758ed0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55a699759060 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a699758f08 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a699759078 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a699758f40 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55a699759090 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a699758fb8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a699758fa0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a699758f60 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55a699759328 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55a6997592d8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55a6997592a8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55a699759248 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55a699759218 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55a6997591c8 <col:47, col:56> 'char [48]' lvalue ->c 0x55a69974a020
|     |     |   `-CXXMemberCallExpr 0x55a6997591a8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55a699759178 <col:47> '<bound member function type>' ->xanno 0x55a69973f308
|     |     |       `-CXXThisExpr 0x55a699759168 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55a699759230 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55a6997591f8 <col:60> 'int' lvalue ParmVar 0x55a699742a78 'i' 'int'
|     `-ImplicitCastExpr 0x55a699759310 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55a6997592f0 <col:65> 'int32_t':'int' lvalue ParmVar 0x55a699742af0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55a699742d88 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55a699742c90 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55a699759a78 <col:36, line:591:5>
|   |-ParenExpr 0x55a6997597b8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a699759788 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a6997594e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a6997594b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a6997593c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a6997593a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a699759368 <col:23> 'int' lvalue ParmVar 0x55a699742c90 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a699759388 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a699759490 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a699759478 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a6997593e0 <col:33> 'int' lvalue ParmVar 0x55a699742c90 'i' 'int'
|   |   |     `-BinaryOperator 0x55a699759458 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a699759440 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a699759400 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a69973f550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a699759420 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55a699759540 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a699759520 <col:60> 'int' 0
|   |   `-CallExpr 0x55a6997596e8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a6997596d0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a6997596b0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a6992abe70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a699759728 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a6997595b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55a699759740 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a6997595e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a699759758 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a699759620 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55a699759770 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a699759698 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a699759680 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a699759640 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55a699759a68 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55a699759a50 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55a699759a38 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a699759a08 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55a699759980 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a699759950 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a699759900 <col:61, col:70> 'char const[48]' lvalue ->c 0x55a69974a020
|             |   `-CXXMemberCallExpr 0x55a6997598e0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a6997598b0 <col:61> '<bound member function type>' ->xanno 0x55a69973f168
|             |       `-CXXThisExpr 0x55a6997598a0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a699759968 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a699759930 <col:74> 'int' lvalue ParmVar 0x55a699742c90 'i' 'int'
|-CXXMethodDecl 0x55a699742fd8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55a699742e48 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55a699742ec0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55a69975a158 <col:42, line:606:5>
|   |-ParenExpr 0x55a699759ee8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55a699759eb8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55a699759c10 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a699759be0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a699759af0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a699759ad8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a699759a98 <col:23> 'int' lvalue ParmVar 0x55a699742e48 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a699759ab8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a699759bc0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55a699759ba8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a699759b10 <col:33> 'int' lvalue ParmVar 0x55a699742e48 'i' 'int'
|   |   |     `-BinaryOperator 0x55a699759b88 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a699759b70 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a699759b30 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a69973f550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55a699759b50 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55a699759c70 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a699759c50 <col:60> 'int' 0
|   |   `-CallExpr 0x55a699759e18 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55a699759e00 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a699759de0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a6992abe70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a699759e58 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a699759ce0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55a699759e70 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a699759d18 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a699759e88 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a699759d50 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55a699759ea0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a699759dc8 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a699759db0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a699759d70 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55a69975a138 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55a69975a0e8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55a69975a0b8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55a69975a058 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55a69975a028 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55a699759fd8 <col:48, col:57> 'char [48]' lvalue ->c 0x55a69974a020
|     |     |   `-CXXMemberCallExpr 0x55a699759fb8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55a699759f88 <col:48> '<bound member function type>' ->xanno 0x55a69973f308
|     |     |       `-CXXThisExpr 0x55a699759f78 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55a69975a040 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55a69975a008 <col:61> 'int' lvalue ParmVar 0x55a699742e48 'i' 'int'
|     `-ImplicitCastExpr 0x55a69975a120 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55a69975a100 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55a699742ec0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55a699743170 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55a6997430a0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55a69975a9c8 <col:33, line:620:5>
|   |-ParenExpr 0x55a69975a740 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55a69975a710 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55a69975a360 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a69975a330 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a69975a1d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a69975a1b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a69975a178 <col:23> 'int' lvalue ParmVar 0x55a6997430a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a69975a198 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a69975a310 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55a69975a2f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a69975a1f0 <col:33> 'int' lvalue ParmVar 0x55a6997430a0 'i' 'int'
|   |   |     `-BinaryOperator 0x55a69975a2d8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a69975a2c0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a69975a210 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a69973f550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55a69975a298 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55a69975a280 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55a69975a248 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55a69975a3c0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a69975a3a0 <col:79> 'int' 0
|   |   `-CallExpr 0x55a69975a670 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55a69975a658 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a69975a638 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a6992abe70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a69975a6b0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a69975a4a8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55a69975a6c8 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a69975a4f0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a69975a6e0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a69975a528 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55a69975a6f8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a69975a620 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a69975a608 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a69975a5c8 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55a69975a9b8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55a69975a9a0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55a69975a988 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55a69975a958 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55a69975a8d0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55a69975a8a0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55a69975a850 <col:67, col:76> 'char const[48]' lvalue ->c 0x55a69974a020
|             |   `-CXXMemberCallExpr 0x55a69975a830 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55a69975a800 <col:67> '<bound member function type>' ->xanno 0x55a69973f168
|             |       `-CXXThisExpr 0x55a69975a7f0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55a69975a8b8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55a69975a880 <col:80> 'int' lvalue ParmVar 0x55a6997430a0 'i' 'int'
|-CXXMethodDecl 0x55a699743388 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55a699743230 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55a6997432b0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55a69975b1f0 <col:45, line:635:5>
|   |-ParenExpr 0x55a69975af38 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55a69975af08 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55a69975abd0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55a69975aba0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55a69975aa40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55a69975aa28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55a69975a9e8 <col:23> 'int' lvalue ParmVar 0x55a699743230 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55a69975aa08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55a69975ab80 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55a69975ab68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55a69975aa60 <col:33> 'int' lvalue ParmVar 0x55a699743230 'i' 'int'
|   |   |     `-BinaryOperator 0x55a69975ab48 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55a69975ab30 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55a69975aa80 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55a69973f550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55a69975ab08 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55a69975aaf0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55a69975aab8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55a69975ac30 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55a69975ac10 <col:79> 'int' 0
|   |   `-CallExpr 0x55a69975ae68 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55a69975ae50 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55a69975ae30 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a6992abe70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55a69975aea8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a69975aca0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55a69975aec0 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55a69975ace8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55a69975aed8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55a69975ad20 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55a69975aef0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55a69975ae18 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55a69975ae00 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55a69975adb8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55a69975b1d0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55a69975b138 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55a69975b108 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55a69975b0a8 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55a69975b078 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55a69975b028 <col:54, col:63> 'char [48]' lvalue ->c 0x55a69974a020
|     |     |   `-CXXMemberCallExpr 0x55a69975b008 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55a69975afd8 <col:54> '<bound member function type>' ->xanno 0x55a69973f308
|     |     |       `-CXXThisExpr 0x55a69975afc8 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55a69975b090 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55a69975b058 <col:67> 'int' lvalue ParmVar 0x55a699743230 'i' 'int'
|     `-CXXConstCastExpr 0x55a69975b1a0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55a69975b188 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55a69975b150 <col:91> 'const void *' lvalue ParmVar 0x55a6997432b0 'x' 'const void *'
|-CXXMethodDecl 0x55a699743458 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55a69975b278 <col:34, line:640:5>
|   `-ReturnStmt 0x55a69975b268 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55a69975b250 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55a69975b220 <col:16> 'Packet *' lvalue ->_data_packet 0x55a69974abd8
|         `-CXXThisExpr 0x55a69975b210 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55a699743598 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55a699743508 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55a699754338 <col:46> 'bool' true
|-CXXMethodDecl 0x55a699743718 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55a699743650 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55a6997437c0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55a699743f70 <line:660:22> "" ""
| |-EnumConstantDecl 0x55a6997438c0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a699743fe0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a6997438a0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55a699743880 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55a699738a20 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55a699743950 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a699743ff8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a699743930 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55a699743910 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55a699738ab0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55a6997439e0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a699744010 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a6997439c0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55a6997439a0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55a699743a70 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a699744028 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a699743a50 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55a699743a30 <col:19> 'int' 16
| |-EnumConstantDecl 0x55a699743b00 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a699744040 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a699743ae0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55a699743ac0 <col:21> 'int' 16
| |-EnumConstantDecl 0x55a699743b90 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a699744058 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a699743b70 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55a699743b50 <col:19> 'int' 32
| |-EnumConstantDecl 0x55a699743c20 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a699744070 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a699743c00 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55a699743be0 <col:19> 'int' EnumConstant 0x55a699743a70 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55a699743cb0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a699744088 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a699743c90 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55a699743c70 <col:19> 'int' EnumConstant 0x55a699743b90 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55a699743d80 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a6997440a0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a699743d60 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55a699743d40 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55a699743d00 <col:23> 'int' EnumConstant 0x55a699743cb0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55a699743d20 <col:40> 'int' 2
| |-EnumConstantDecl 0x55a699743e50 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55a6997440b8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55a699743e30 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55a699743e10 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55a699743dd0 <col:23> 'int' EnumConstant 0x55a699743cb0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55a699743df0 <col:40> 'int' 4
| `-EnumConstantDecl 0x55a699743f20 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55a6997440d0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a699743f00 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55a699743ee0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55a699743ea0 <col:23> 'int' EnumConstant 0x55a699743cb0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55a699743ec0 <col:40> 'int' 8
|-CXXMethodDecl 0x55a699744110 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55a6997441b0 <col:68> "" ""
|-CXXMethodDecl 0x55a699744248 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55a6997442e8 <col:45> "" ""
|-CXXMethodDecl 0x55a699744380 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55a699744420 <col:57> "" ""
|-CXXMethodDecl 0x55a6997444b8 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55a699744558 <col:45> "" ""
|-CXXMethodDecl 0x55a6997445f0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55a699744690 <col:57> "" ""
|-CXXMethodDecl 0x55a699744720 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55a6997447c0 <col:51> "" ""
|-CXXMethodDecl 0x55a699744850 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55a6997448f0 <col:63> "" ""
|-CXXMethodDecl 0x55a699744980 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55a699744a20 <col:53> "" ""
|-CXXMethodDecl 0x55a699744ab0 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55a699744b50 <col:65> "" ""
|-CXXMethodDecl 0x55a699744c68 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55a699744bd8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55a699744d10 <col:61> "" ""
|-CXXMethodDecl 0x55a699744ea8 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55a699744d98 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55a699744e10 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55a699744f58 <col:67> "" ""
|-CXXMethodDecl 0x55a699745070 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55a699744fe0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55a699745118 <col:63> "" ""
|-CXXMethodDecl 0x55a6997452b0 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55a6997451a0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55a699745218 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55a699745360 <col:69> "" ""
|-CXXMethodDecl 0x55a699745478 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55a6997453e8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55a699745520 <col:63> "" ""
|-CXXMethodDecl 0x55a699747bf8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55a699747ae8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55a699747b60 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a699747ca8 <col:69> "" ""
|-CXXMethodDecl 0x55a699747dc0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55a699747d30 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55a699747e68 <col:62> "" ""
|-CXXMethodDecl 0x55a699748000 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55a699747ef0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55a699747f68 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55a6997480b0 <col:68> "" ""
|-CXXMethodDecl 0x55a6997481c8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55a699748138 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55a699748270 <col:63> "" ""
|-CXXMethodDecl 0x55a699748408 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55a6997482f8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55a699748370 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55a6997484b8 <col:69> "" ""
|-CXXMethodDecl 0x55a699748548 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55a6997485e8 <col:64> "" ""
|-CXXMethodDecl 0x55a699748678 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55a699748718 <col:52> "" ""
|-CXXMethodDecl 0x55a6997487a8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55a699748848 <col:67> "" ""
|-CXXMethodDecl 0x55a6997488d8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55a699748978 <col:55> "" ""
|-CXXMethodDecl 0x55a699748a90 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55a699748a00 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55a699748b38 <col:58> "" ""
|-CXXMethodDecl 0x55a699748cd0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55a699748bc0 <col:33> col:36 'int'
| |-ParmVarDecl 0x55a699748c38 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55a699748d80 <col:62> "" ""
|-CXXMethodDecl 0x55a699748e98 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55a699748e08 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55a699748f40 <col:58> "" ""
|-CXXMethodDecl 0x55a6997490d8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55a699748fc8 <col:33> col:36 'int'
| |-ParmVarDecl 0x55a699749040 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55a699749188 <col:62> "" ""
|-CXXMethodDecl 0x55a6997492a0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55a699749210 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55a699749348 <col:60> "" ""
|-CXXMethodDecl 0x55a6997494e0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55a6997493d0 <col:34> col:37 'int'
| |-ParmVarDecl 0x55a699749448 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55a699749590 <col:64> "" ""
|-CXXMethodDecl 0x55a6997496a8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55a699749618 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55a699749750 <col:58> "" ""
|-CXXMethodDecl 0x55a6997498e8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55a6997497d8 <col:33> col:36 'int'
| |-ParmVarDecl 0x55a699749850 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55a699749998 <col:62> "" ""
|-CXXMethodDecl 0x55a699749ab0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55a699749a20 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55a699749b58 <col:59> "" ""
|-CXXMethodDecl 0x55a699749cf0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55a699749be0 <col:33> col:36 'int'
| |-ParmVarDecl 0x55a699749c58 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55a699749da0 <col:63> "" ""
|-AccessSpecDecl 0x55a699749e10 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55a699749e38 prev 0x55a69973f040 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a699749f30 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55a69974a020 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55a69974a148 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55a69974a2c8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55a69974a448 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55a69974a5c8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55a69975b3f8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55a69975bc68 <col:11>
| |-CXXDestructorDecl 0x55a69975b4d0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55a69975b608 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55a69975b608
| | `-ParmVarDecl 0x55a69975b718 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55a69975b7b8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55a69975b7b8
| | `-ParmVarDecl 0x55a69975b8c8 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55a69975e688 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55a69975e798 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55a69975ea18 <col:11>
| |   `-ReturnStmt 0x55a69975ea08 <col:11>
| |     `-UnaryOperator 0x55a69975e9f0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55a69975e9e0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55a69975e808 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55a69975e808
|   `-ParmVarDecl 0x55a69975e918 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55a69974a630 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a69974a748 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55a69974a7e8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55a69974a850 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55a69974a8b8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55a69974a920 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55a69974a980 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55a69974aa40 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55a69974aaa0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55a69974ab00 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55a69975b308 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55a69974a7e8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55a69975bc78 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55a69975bcd0 <col:12>
| |-CXXConstructorDecl 0x55a69975b938 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55a69975b938
| | `-ParmVarDecl 0x55a69975ba48 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55a69975bae8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55a69975bae8
| | `-ParmVarDecl 0x55a69975bbf8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55a69975dd70 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55a69974ab78 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55a69974abd8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55a69974ac40 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55a69974aca8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55a69974ad10 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55a69974ad78 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55a69974add8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55a69974ae38 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55a69974aea0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55a69974af28 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55a69974ab78 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55a69975b2a0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55a69974add8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55a69975bce0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55a69975bd40 <col:21, line:755:5>
|-CXXConstructorDecl 0x55a69974b0c8 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55a69974b008 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55a69974b1c0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55a69974b3a8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55a69974b2b0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55a69974b678 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55a69974b460 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55a69974b4d8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55a69974b550 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a69974b898 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55a69974b748 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55a69974b7c0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55a699753e78 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55a69974b958 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55a69974b9d0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55a69974ba48 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55a699753fd0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55a699753f40 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55a699754118 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55a699754088 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55a699754210 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a699545640 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55a699545758 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55a6995457f8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55a699545858 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55a6995458b8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55a699545968 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a699545c70 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55a699545d88 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55a699545e30 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55a699545e98 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55a699545f28 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55a69954bfc0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55a69954c3f8 <col:12>
|-CXXConstructorDecl 0x55a69954c0c8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55a69954c1d8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55a699545e30 'data' 'const char *'
| | `-ImplicitCastExpr 0x55a69954e980 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55a69954e950 <col:12> 'const char *const' lvalue .data 0x55a699545e30
| |     `-DeclRefExpr 0x55a69954e930 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a69954c1d8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55a699545e98 'length' 'int'
| | `-ImplicitCastExpr 0x55a69954ea10 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55a69954e9e0 <col:12> 'const int' lvalue .length 0x55a699545e98
| |     `-DeclRefExpr 0x55a69954e9c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a69954c1d8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55a699545f28 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55a69954eaa0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55a69954ea70 <col:12> 'String::memo_t *const' lvalue .memo 0x55a699545f28
| |     `-DeclRefExpr 0x55a69954ea50 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a69954c1d8 '' 'const String::rep_t &'
| `-CompoundStmt 0x55a69954eaf8 <col:12>
|-CXXConstructorDecl 0x55a69954c278 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55a69954c278
| `-ParmVarDecl 0x55a69954c388 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55a6995518e0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55a69955d2f8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55a69955d408 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55a69955d920 <col:12>
|   |-BinaryOperator 0x55a69955d738 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55a69955d6f0 <col:12> 'const char *' lvalue ->data 0x55a699545e30
|   | | `-CXXThisExpr 0x55a69955d6e0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55a69955d720 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55a69955d6b0 <col:12> 'const char *const' lvalue .data 0x55a699545e30
|   |     `-DeclRefExpr 0x55a69955d690 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a69955d408 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55a69955d800 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55a69955d7b8 <col:12> 'int' lvalue ->length 0x55a699545e98
|   | | `-CXXThisExpr 0x55a69955d7a8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55a69955d7e8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55a69955d778 <col:12> 'const int' lvalue .length 0x55a699545e98
|   |     `-DeclRefExpr 0x55a69955d758 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a69955d408 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55a69955d8c8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55a69955d880 <col:12> 'String::memo_t *' lvalue ->memo 0x55a699545f28
|   | | `-CXXThisExpr 0x55a69955d870 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55a69955d8b0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55a69955d840 <col:12> 'String::memo_t *const' lvalue .memo 0x55a699545f28
|   |     `-DeclRefExpr 0x55a69955d820 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a69955d408 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55a69955d910 <col:12>
|     `-UnaryOperator 0x55a69955d8f8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55a69955d8e8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55a69955d478 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55a69955d478
  `-ParmVarDecl 0x55a69955d588 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55a69953cbb0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55a69953ccc8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55a69953cd58 <col:16, col:22> col:16 public
|-TypedefDecl 0x55a69953cd98 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55a699212dc0 'const char *'
|   `-QualType 0x55a699212311 'const char' const
|     `-BuiltinType 0x55a699212310 'char'
|-TypedefDecl 0x55a69953ce20 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55a69953cdf0 'String::const_iterator' sugar
|   |-Typedef 0x55a69953cd98 'const_iterator'
|   `-PointerType 0x55a699212dc0 'const char *'
|     `-QualType 0x55a699212311 'const char' const
|       `-BuiltinType 0x55a699212310 'char'
|-TypedefDecl 0x55a69953cf90 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55a69953cf00 'int (String::*)() const'
|   |-RecordType 0x55a69953cc40 'String'
|   | `-CXXRecord 0x55a69953cbb0 'String'
|   `-ParenType 0x55a69953cea0 'int () const' sugar
|     `-FunctionProtoType 0x55a699510a30 'int () const' const cdecl
|       `-BuiltinType 0x55a699212370 'int'
|-TypedefDecl 0x55a69953cff8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55a699365610 'int64_t' sugar
|   |-Typedef 0x55a69927b2d0 'int64_t'
|   `-TypedefType 0x55a6992544d0 '__int64_t' sugar
|     |-Typedef 0x55a6992540a8 '__int64_t'
|     `-BuiltinType 0x55a699212390 'long'
|-TypedefDecl 0x55a69953d060 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55a699365530 'uint64_t' sugar
|   |-Typedef 0x55a69927b470 'uint64_t'
|   `-TypedefType 0x55a699254560 '__uint64_t' sugar
|     |-Typedef 0x55a699254118 '__uint64_t'
|     `-BuiltinType 0x55a699212430 'unsigned long'
|-TypedefDecl 0x55a69953d0f0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55a69953d0c0 'String::intmax_t' sugar
|   |-Typedef 0x55a69953cff8 'intmax_t'
|   `-TypedefType 0x55a699365610 'int64_t' sugar
|     |-Typedef 0x55a69927b2d0 'int64_t'
|     `-TypedefType 0x55a6992544d0 '__int64_t' sugar
|       |-Typedef 0x55a6992540a8 '__int64_t'
|       `-BuiltinType 0x55a699212390 'long'
|-TypedefDecl 0x55a69953d180 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55a69953d150 'String::uintmax_t' sugar
|   |-Typedef 0x55a69953d060 'uintmax_t'
|   `-TypedefType 0x55a699365530 'uint64_t' sugar
|     |-Typedef 0x55a69927b470 'uint64_t'
|     `-TypedefType 0x55a699254560 '__uint64_t' sugar
|       |-Typedef 0x55a699254118 '__uint64_t'
|       `-BuiltinType 0x55a699212430 'unsigned long'
|-CXXConstructorDecl 0x55a69953d240 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55a69953d3e8 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55a69953d328 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55a69953d598 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55a69953d4d8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55a69953d6f0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55a69953d660 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55a69953d908 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55a69953d7b8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55a69953d838 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55a69953db28 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55a69953d9d8 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55a69953da58 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55a69953dd48 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55a69953dbf8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55a69953dc78 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55a69953df68 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55a69953de18 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55a69953de98 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55a69953e0f8 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x55a69953e030 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55a69953e278 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55a69953e1b8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55a69953e408 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55a69953e340 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55a69953e560 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55a69953e4d0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55a69953e6b8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55a69953e628 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55a69953e810 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55a69953e780 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55a69953e998 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55a69953e8d8 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55a69953eb28 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55a69953ea60 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55a69953ecb8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55a69953ebf0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55a69953ee48 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55a69953ed80 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55a69953ef40 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55a69953f068 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55a69953f1e8 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55a69953f120 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55a69953f338 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55a69953f2a8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55a69953f3f0 <col:63> "" ""
|-CXXMethodDecl 0x55a69953f538 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55a69953f478 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55a69953f748 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55a69953f5f8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55a69953f678 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55a69953f968 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55a69953f810 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55a69953f890 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55a69953fc48 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55a69953fa28 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55a69953faa8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55a69954ba90 <col:55> 'int' 10
| `-ParmVarDecl 0x55a69953fb20 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55a69954bab0 <col:76> 'bool' true
|-CXXMethodDecl 0x55a69953ff28 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55a69953fd10 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55a69953fd90 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55a69954bac0 <col:56> 'int' 10
| `-ParmVarDecl 0x55a69953fe08 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55a69954bae0 <col:77> 'bool' true
|-CXXMethodDecl 0x55a699540030 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55a6995400f8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55a6995401c0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55a699540260 <col:20>
| `-OptimizeNoneAttr 0x55a6995402b8 <col:30>
|-CXXConversionDecl 0x55a6995403a8 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55a699540478 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55a699540538 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55a699540628 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55a6995406e8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55a699540868 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55a6995407a0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55a6995409b8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55a699540928 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55a699540aa8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55a699540b68 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55a699540db8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55a699540c20 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55a699540ca0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55a699541018 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55a699540e80 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55a699540f00 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55a6995410e8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55a6995412f8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55a6995411a0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55a699541220 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55a699541518 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55a6995413c0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55a699541440 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55a6995416a8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55a6995415e0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55a699541798 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55a699541908 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55a699541848 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55a699541b18 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55a6995419c8 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55a699541a48 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55a699541d30 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55a699541bd8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55a699541c50 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55a699541ec0 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55a699541df0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55a6995420e0 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55a699541f80 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55a699542000 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55a699542230 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55a6995421a0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55a699542408 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55a6995422f0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55a699542370 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55a699542558 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55a6995424c8 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55a699542770 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55a699542610 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55a699542690 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55a69954baf0 <col:39> 'int' 0
|-CXXMethodDecl 0x55a699542990 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55a699542830 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55a6995428b0 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55a69954bb10 <col:48> 'int' 0
|-CXXMethodDecl 0x55a699542b70 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55a699542a50 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55a699542ad0 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55a69954bb30 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55a699542c40 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55a699542d00 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55a699542dc0 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55a699542e80 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55a699542f40 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55a6995430e8 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55a699542ff0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55a699543268 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55a6995431a0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55a699543440 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55a699543328 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55a6995435b8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55a6995434f8 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55a699543700 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55a699543670 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55a699543850 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55a6995437c0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55a699543a28 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55a699543910 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55a699543990 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55a699543c08 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55a699543af0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55a699543b70 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55a699543d58 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55a699543cc8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55a699543f68 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55a699543e18 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55a699543e98 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55a6995440c8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55a699544030 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55a699544220 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55a699544188 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55a6995442c8 <col:57> "" ""
|-CXXMethodDecl 0x55a6995443d8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55a699544348 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55a699544528 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55a699544498 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55a6995446a8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55a6995445e0 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55a699544770 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55a699544830 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55a6995448f0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55a699544990 <col:49> "" ""
|-CXXMethodDecl 0x55a699544a20 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55a699544ae0 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55a699544bd0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55a699544c98 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55a699544d58 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55a699544e18 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55a699544f10 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55a699544fd8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55a6995450a0 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55a699545278 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55a699545158 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55a6995451d8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55a6995454a0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55a699545340 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55a6995453c0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55a6995455b0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55a699545618 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55a699545640 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55a699545758 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55a6995457f8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55a699545858 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55a6995458b8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55a699545968 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55a6995459d0 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55a699545c08 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55a699545c58 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a699545be8 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55a699545af8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55a699545aa0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55a699545ae0 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55a699545ac0 <col:32> 'int' 8
|-CXXRecordDecl 0x55a699545c70 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55a699545d88 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55a699545e30 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55a699545e98 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55a699545f28 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55a69954bfc0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55a69954c3f8 <col:12>
| |-CXXConstructorDecl 0x55a69954c0c8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55a69954c1d8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55a699545e30 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55a69954e980 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55a69954e950 <col:12> 'const char *const' lvalue .data 0x55a699545e30
| | |     `-DeclRefExpr 0x55a69954e930 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a69954c1d8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55a699545e98 'length' 'int'
| | | `-ImplicitCastExpr 0x55a69954ea10 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55a69954e9e0 <col:12> 'const int' lvalue .length 0x55a699545e98
| | |     `-DeclRefExpr 0x55a69954e9c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a69954c1d8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55a699545f28 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55a69954eaa0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55a69954ea70 <col:12> 'String::memo_t *const' lvalue .memo 0x55a699545f28
| | |     `-DeclRefExpr 0x55a69954ea50 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a69954c1d8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55a69954eaf8 <col:12>
| |-CXXConstructorDecl 0x55a69954c278 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55a69954c278
| | `-ParmVarDecl 0x55a69954c388 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55a6995518e0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55a69955d2f8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55a69955d408 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55a69955d920 <col:12>
| |   |-BinaryOperator 0x55a69955d738 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55a69955d6f0 <col:12> 'const char *' lvalue ->data 0x55a699545e30
| |   | | `-CXXThisExpr 0x55a69955d6e0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55a69955d720 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55a69955d6b0 <col:12> 'const char *const' lvalue .data 0x55a699545e30
| |   |     `-DeclRefExpr 0x55a69955d690 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a69955d408 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55a69955d800 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55a69955d7b8 <col:12> 'int' lvalue ->length 0x55a699545e98
| |   | | `-CXXThisExpr 0x55a69955d7a8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55a69955d7e8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55a69955d778 <col:12> 'const int' lvalue .length 0x55a699545e98
| |   |     `-DeclRefExpr 0x55a69955d758 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a69955d408 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55a69955d8c8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55a69955d880 <col:12> 'String::memo_t *' lvalue ->memo 0x55a699545f28
| |   | | `-CXXThisExpr 0x55a69955d870 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55a69955d8b0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55a69955d840 <col:12> 'String::memo_t *const' lvalue .memo 0x55a699545f28
| |   |     `-DeclRefExpr 0x55a69955d820 <col:12> 'const String::rep_t' lvalue ParmVar 0x55a69955d408 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55a69955d910 <col:12>
| |     `-UnaryOperator 0x55a69955d8f8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55a69955d8e8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55a69955d478 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55a69955d478
|   `-ParmVarDecl 0x55a69955d588 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55a699545fa0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55a6995461e8 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55a699546008 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55a699546088 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55a699546100 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55a69954bf80 <col:79, line:261:5>
|   |-BinaryOperator 0x55a69954bbf8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55a69954bb90 <col:2, col:5> 'const char *' lvalue .data 0x55a699545e30
|   | | `-MemberExpr 0x55a69954bb60 <col:2> 'String::rep_t' lvalue ->_r 0x55a699545fa0
|   | |   `-CXXThisExpr 0x55a69954bb50 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55a69954bbe0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a69954bbc0 <col:12> 'const char *' lvalue ParmVar 0x55a699546008 'data' 'const char *'
|   |-BinaryOperator 0x55a69954bcc0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55a69954bc58 <col:2, col:5> 'int' lvalue .length 0x55a699545e98
|   | | `-MemberExpr 0x55a69954bc28 <col:2> 'String::rep_t' lvalue ->_r 0x55a699545fa0
|   | |   `-CXXThisExpr 0x55a69954bc18 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55a69954bca8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55a69954bc88 <col:14> 'int' lvalue ParmVar 0x55a699546088 'length' 'int'
|   `-IfStmt 0x55a69954bf68 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55a69954bde0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55a69954bdc8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55a69954bda8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55a69954bd88 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55a69954bd20 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55a699545f28
|     |       | `-MemberExpr 0x55a69954bcf0 <col:7> 'String::rep_t' lvalue ->_r 0x55a699545fa0
|     |       |   `-CXXThisExpr 0x55a69954bce0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55a69954bd70 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55a69954bd50 <col:17> 'String::memo_t *' lvalue ParmVar 0x55a699546100 'memo' 'String::memo_t *'
|     `-CallExpr 0x55a69954bf40 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55a69954bf28 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55a69954be30 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55a699534c18 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55a69954be98 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55a6995457f8
|         `-ImplicitCastExpr 0x55a69954be80 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55a69954be60 <col:27> 'String::memo_t *' lvalue ParmVar 0x55a699546100 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55a699546498 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55a6995462b8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55a699546338 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55a6995463b0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55a699545fa0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55a69954c408 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55a69954c598 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55a69954c500 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55a69954c470 <col:2> '<bound member function type>' ->assign_memo 0x55a6995461e8
|     | `-ImplicitCastExpr 0x55a69954c538 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55a69954c460 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55a69954c550 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55a69954c4a0 <col:14> 'const char *' lvalue ParmVar 0x55a6995462b8 'data' 'const char *'
|     |-ImplicitCastExpr 0x55a69954c568 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55a69954c4c0 <col:20> 'int' lvalue ParmVar 0x55a699546338 'length' 'int'
|     `-ImplicitCastExpr 0x55a69954c580 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55a69954c4e0 <col:28> 'String::memo_t *' lvalue ParmVar 0x55a6995463b0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55a699546628 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55a699546568 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55a69954c7f0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55a69954c770 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55a69954c5c0 <col:2> '<bound member function type>' ->assign_memo 0x55a6995461e8
|     | `-CXXThisExpr 0x55a69954c5b0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55a69954c7a8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55a69954c640 <col:14, col:19> 'const char *' lvalue .data 0x55a699545e30
|     |   `-MemberExpr 0x55a69954c610 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55a699545fa0
|     |     `-DeclRefExpr 0x55a69954c5f0 <col:14> 'const String' lvalue ParmVar 0x55a699546568 'x' 'const String &'
|     |-ImplicitCastExpr 0x55a69954c7c0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55a69954c6c0 <col:25, col:30> 'int' lvalue .length 0x55a699545e98
|     |   `-MemberExpr 0x55a69954c690 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55a699545fa0
|     |     `-DeclRefExpr 0x55a69954c670 <col:25> 'const String' lvalue ParmVar 0x55a699546568 'x' 'const String &'
|     `-ImplicitCastExpr 0x55a69954c7d8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55a69954c740 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55a699545f28
|         `-MemberExpr 0x55a69954c710 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55a699545fa0
|           `-DeclRefExpr 0x55a69954c6f0 <col:38> 'const String' lvalue ParmVar 0x55a699546568 'x' 'const String &'
|-CXXMethodDecl 0x55a6995466f0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55a69954d1b0 <col:31, line:278:5>
|   `-IfStmt 0x55a69954d198 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55a69954c890 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55a69954c878 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55a69954c848 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55a699545f28
|     |     `-MemberExpr 0x55a69954c818 <col:6> 'String::rep_t' lvalue ->_r 0x55a699545fa0
|     |       `-CXXThisExpr 0x55a69954c808 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55a69954d170 <col:15, line:277:2>
|       |-ParenExpr 0x55a69954cd40 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55a69954cd10 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55a69954c9a0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55a69954c988 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55a69954c970 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55a69954c930 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55a6995457f8
|       |   |       `-ImplicitCastExpr 0x55a69954c918 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55a69954c8e8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55a699545f28
|       |   |           `-MemberExpr 0x55a69954c8b8 <col:27> 'String::rep_t' lvalue ->_r 0x55a699545fa0
|       |   |             `-CXXThisExpr 0x55a69954c8a8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55a69954ca00 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55a69954c9e0 <col:54> 'int' 0
|       |   `-CallExpr 0x55a69954cc70 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55a69954cc58 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55a69954cbd8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55a6992abe70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55a69954ccb0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55a69954cae8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55a69954ccc8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55a69954cb18 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55a69954cce0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55a69954cb50 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55a69954ccf8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55a69954cbc0 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55a69954cba8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55a69954cb70 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55a69954d090 <line:274:6, line:275:22>
|       | |-CallExpr 0x55a69954cf50 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55a69954cf38 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55a69954ceb0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55a699536060 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55a69954ce80 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55a6995457f8
|       | |   `-ImplicitCastExpr 0x55a69954ce68 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55a69954ce38 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55a699545f28
|       | |       `-MemberExpr 0x55a69954ce08 <col:40> 'String::rep_t' lvalue ->_r 0x55a699545fa0
|       | |         `-CXXThisExpr 0x55a69954cdf8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55a69954d050 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55a69954d038 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55a69954cf78 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55a69954aed0 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55a69954d078 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55a69954cfd8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55a699545f28
|       |       `-MemberExpr 0x55a69954cfa8 <col:15> 'String::rep_t' lvalue ->_r 0x55a699545fa0
|       |         `-CXXThisExpr 0x55a69954cf98 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55a69954d150 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55a69954d0e8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55a699545f28
|         | `-MemberExpr 0x55a69954d0b8 <col:6> 'String::rep_t' lvalue ->_r 0x55a699545fa0
|         |   `-CXXThisExpr 0x55a69954d0a8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55a69954d138 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55a69954d118 <col:16> 'int' 0
|-CXXMethodDecl 0x55a699546988 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55a6995467a8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55a699546828 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55a6995468a0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55a699546a60 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55a699546cb0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55a699546b18 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55a699546b98 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55a699546c10 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55a699546e98 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55a699546d80 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55a699546e00 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55a699546f98 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55a69954d288 <col:41, line:286:5>
|   `-ReturnStmt 0x55a69954d278 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55a69954d248 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55a69954d210 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55a69954d1f8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55a69954d1d8 <col:46> 'int' 1
|-CXXMethodDecl 0x55a699547238 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55a699547050 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55a6995470d0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55a699547150 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55a69954aed0 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55a699547300 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55a69954afa0 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55a69954b170 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55a69954b058 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55a69954b0d8 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55a69954b230 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55a69954b2f8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55a69954b3f8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55a69954b470 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55a69954b4e8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55a69954b550 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55a69954b650 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55a69954b6a0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55a69954b630 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55a69954b610 <col:22> 'int' 14
|-CXXMethodDecl 0x55a69954b8b8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55a69954b6d0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55a69954b750 <col:38> col:41 'int'
| `-ParmVarDecl 0x55a69954b7d0 <col:43> col:46 'int'
|-FriendDecl 0x55a69954b9c0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55a69954ba50 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>
