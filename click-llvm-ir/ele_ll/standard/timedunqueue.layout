
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a997cd118 prev 0x558a997c48b8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558a997cd210 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x558a997cd2a0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x558a997cd318 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x558a997cd3d8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x558a997cd4a0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x558a997cd618 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x558a997cd550 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x558a997cd6c0 <col:24>
| `-OptimizeNoneAttr 0x558a997cd718 <col:34>
|-CXXMethodDecl 0x558a997cd760 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x558a997cda18 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x558a997cd810 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x558a997cd888 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x558a997cd908 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x558a997cdad0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x558a997cdb08 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x558a997cdb70 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x558a997cdbf8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x558a997cdf18 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x558a997cdcb0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x558a997cdd28 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x558a997cdda0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x558a997cde20 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x558a997ce030 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x558a997d59a8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x558a997d59a8
| `-ParmVarDecl 0x558a997d5ab8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x558a997d5b58 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x558a997d5b58
| `-ParmVarDecl 0x558a997d5c68 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x558a9995af80 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a997c0130 prev 0x558a997bfeb0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558a997c0228 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x558a997c02b8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x558a997c0318 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x558a997c0408 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x558a997c0508 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x558a997c06d8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x558a997c0588 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x558a997c0600 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x558a997c0868 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x558a997c07a0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x558a997c0910 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x558a997c0a48 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x558a997c0980 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x558a997c0be8 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x558a997c0b28 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x558a997c0d88 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x558a997c0cc8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x558a997c0e30 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x558a997c0f30 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x558a997c1010 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a997c0f10 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x558a997c0ef0 <col:26> 'int' 1
| `-EnumConstantDecl 0x558a997c0fc0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x558a997c1028 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558a997c0fa0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x558a997c0f80 <col:44> 'int' 2
|-CXXMethodDecl 0x558a997c1170 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x558a997c1058 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x558a997c10d8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x558a997c12c8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x558a997c1238 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x558a997c1508 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x558a997c1388 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x558a997c1400 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x558a997c15b8 <col:20>
| `-OptimizeNoneAttr 0x558a997c1610 <col:30>
|-CXXMethodDecl 0x558a997c1718 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x558a997c1650 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x558a997c17c0 <col:20>
| `-OptimizeNoneAttr 0x558a997c1818 <col:30>
|-CXXMethodDecl 0x558a997c1868 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x558a997c1930 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x558a997c1a48 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x558a997c1ad0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x558a997c1b58 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x558a997c1be0 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x558a997c1c68 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x558a997c1cf8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x558a997c1db8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x558a997c1e40 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x558a997c1ec8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x558a997c1f50 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x558a997c1fd8 <line:66:5, col:36> col:23 used PULL_TO_PUSH 'const char []' static
|-VarDecl 0x558a997c2060 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x558a997c20f0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x558a997c21b0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x558a997c2240 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x558a997c2390 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x558a997c22f8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x558a997c2520 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x558a997c2450 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x558a997c27d0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x558a997c25d8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x558a997c2658 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x558a997c26d8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x558a997c2888 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x558a997c2990 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x558a997c2c20 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a997c2970 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x558a997c2950 <col:33> 'int' 0
| |-EnumConstantDecl 0x558a997c2a20 <line:81:9, col:32> col:9 referenced CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x558a997c2c38 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a997c2a00 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x558a997c29e0 <col:32> 'int' 20
| |-EnumConstantDecl 0x558a997c2ab0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x558a997c2c50 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a997c2a90 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x558a997c2a70 <col:38> 'int' 90
| |-EnumConstantDecl 0x558a997c2b40 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x558a997c2c68 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a997c2b20 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x558a997c2b00 <col:35> 'int' 100
| `-EnumConstantDecl 0x558a997c2bd0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x558a997c2c80 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558a997c2bb0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x558a997c2b90 <col:32> 'int' 2000
|-CXXMethodDecl 0x558a997c2cc0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x558a997c3100 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x558a997c2f70 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x558a997c2fe8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558a997c31d0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x558a997c3350 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x558a997c3280 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558a997c3558 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x558a997c3408 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x558a997c3480 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558a997c3658 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x558a997c36f8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x558a997c37c0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x558a997c3850 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x558a997c3a80 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a997c3830 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x558a997c3810 <col:36> 'int' EnumConstant 0x558a997c37c0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x558a997c38a0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x558a997c38f0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x558a997c3940 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x558a997c3990 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x558a997c39e0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x558a997c3a30 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x558a997c3b68 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x558a997c3aa8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x558a997c3c30 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x558a997c3cf0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x558a997c3db0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x558a997c3e70 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x558a997c3f88 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x558a997c4050 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x558a997c41d0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x558a997c4100 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x558a997c42f8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x558a997c44f8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x558a997c43a8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x558a997c4428 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x558a997d1e48 <col:54, line:127:5>
|   |-ParenExpr 0x558a997d1cf8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x558a997d1cc8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x558a997d19b8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x558a997d1990 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x558a997d1978 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x558a997d1960 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x558a997d1930 <col:31> 'Router *' lvalue ->_router 0x558a997cf810
|   |   |         `-CXXThisExpr 0x558a997d1920 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x558a997d1a18 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558a997d19f8 <col:48> 'int' 0
|   |   `-CallExpr 0x558a997d1c28 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x558a997d1c10 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558a997d1bf0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558a992fa800 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558a997d1c68 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997d1a88 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x558a997d1c80 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997d1aa8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x558a997d1c98 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558a997d1ae0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x558a997d1cb0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558a997d1bd8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558a997d1bc0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558a997d1b78 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x558a997d1d90 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x558a997d1d28 <col:9> 'Router *' lvalue ->_router 0x558a997cf810
|   | | `-CXXThisExpr 0x558a997d1d18 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x558a997d1d78 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x558a997d1d58 <col:19> 'Router *' lvalue ParmVar 0x558a997c43a8 'r' 'Router *'
|   `-BinaryOperator 0x558a997d1e28 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x558a997d1dc0 <col:9> 'int' lvalue ->_eindex 0x558a997cf878
|     | `-CXXThisExpr 0x558a997d1db0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x558a997d1e10 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x558a997d1df0 <col:19> 'int' lvalue ParmVar 0x558a997c4428 'eindex' 'int'
|-CXXMethodDecl 0x558a997c4680 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x558a997c45b8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x558a997c4750 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x558a997c4818 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x558a997c48b8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x558a997c4b08 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x558a997c4980 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x558a997c4a00 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x558a997c4bb8 <col:20>
| `-OptimizeNoneAttr 0x558a997c4c10 <col:30>
|-CXXMethodDecl 0x558a997c4d18 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x558a997c4c50 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x558a997c4dc0 <col:20>
| `-OptimizeNoneAttr 0x558a997c4e18 <col:30>
|-CXXMethodDecl 0x558a997c4ee8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x558a997c4e58 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x558a997c4f90 <col:20>
| `-OptimizeNoneAttr 0x558a997c4fe8 <col:30>
|-CXXMethodDecl 0x558a997c5178 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x558a997c5020 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x558a997c50a0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x558a997c5308 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x558a997c5240 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x558a997c5458 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x558a997c53c8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x558a997c55a8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x558a997c5518 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x558a997c56f8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x558a997c5668 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x558a997c59b8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x558a997c57b0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x558a997c5830 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x558a997c58d8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x558a997c5a90 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x558a997c5b50 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x558a997c5e20 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x558a997c5cd0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x558a997c5d48 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x558a997c5f48 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x558a997c6120 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x558a997c6000 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x558a997c6080 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x558a997c6308 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x558a997c61e8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x558a997c6268 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x558a997c6678 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x558a997c63c8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x558a997c6440 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x558a997c64c0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x558a997d1430 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x558a997d1410 <col:106> 'int' 0
| `-ParmVarDecl 0x558a997c6538 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558a997d1468 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558a997d1448 <col:126> 'int' 0
|-CXXMethodDecl 0x558a997c6a18 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x558a997c6748 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x558a997c67e0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x558a997c6860 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x558a997c68d8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558a997d14a0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558a997d1480 <col:114> 'int' 0
|-CXXMethodDecl 0x558a997c6da8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x558a997c6af0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x558a997c6b68 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x558a997c6be8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x558a997d14b8 <col:96> 'int' 0
| `-ParmVarDecl 0x558a997c6c60 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558a997d14f8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558a997d14d8 <col:116> 'int' 0
|-CXXMethodDecl 0x558a997c7128 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x558a997c6e78 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x558a997c6ef0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x558a997c6f70 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x558a997d1530 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x558a997d1510 <col:109> 'int' 0
| `-ParmVarDecl 0x558a997c6fe8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558a997d1568 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558a997d1548 <col:129> 'int' 0
|-CXXMethodDecl 0x558a997c74a8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x558a997c71f8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x558a997c7270 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x558a997c72f0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x558a997c7368 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558a997d15a0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558a997d1580 <col:117> 'int' 0
|-CXXMethodDecl 0x558a997c7838 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x558a997c7580 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558a997c75f8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x558a997c7678 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x558a997d15b8 <col:99> 'int' 0
| `-ParmVarDecl 0x558a997c76f0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558a997d15f8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558a997d15d8 <col:119> 'int' 0
|-CXXMethodDecl 0x558a997c7c58 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x558a997c7908 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x558a997c7988 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x558a997c7a00 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x558a997c7a80 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x558a997d1630 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x558a997d1610 <col:108> 'int' 0
| `-ParmVarDecl 0x558a997c7b00 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x558a997d1668 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x558a997d1648 <col:141> 'int' 0
|-CXXMethodDecl 0x558a997c8078 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x558a997c7d30 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x558a997c7db0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x558a997c7e28 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x558a997c7ea8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x558a997c7f28 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x558a997d1680 <col:121> 'int' 0
|-CXXMethodDecl 0x558a997c84a8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x558a997c8158 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x558a997c81d8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x558a997c8250 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x558a997c82d0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x558a997d16a0 <col:98> 'int' 0
| `-ParmVarDecl 0x558a997c8350 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x558a997d16c0 <col:123> 'int' 0
|-CXXMethodDecl 0x558a997c8770 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x558a997c8580 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x558a997c8600 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x558a997c8680 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x558a997d16e0 <col:80> 'int' 0
|-EnumDecl 0x558a997c8828 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x558a997c8930 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x558a997c8bc0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a997c8910 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x558a997c88f0 <col:42> 'int' 1
| |-EnumConstantDecl 0x558a997c89c0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x558a997c8bd8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a997c89a0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x558a997c8980 <col:40> 'int' 2
| |-EnumConstantDecl 0x558a997c8a50 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x558a997c8bf0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a997c8a30 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x558a997c8a10 <col:44> 'int' 4
| |-EnumConstantDecl 0x558a997c8ae0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x558a997c8c08 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a997c8ac0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x558a997c8aa0 <col:36> 'int' 7
| `-EnumConstantDecl 0x558a997c8b70 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x558a997c8c20 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558a997c8b50 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x558a997c8b30 <col:34> 'int' 6
|-CXXMethodDecl 0x558a997c8ed8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x558a997c8c48 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x558a997c8ce8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x558a997c8d68 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x558a997c8de0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x558a997d1798 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x558a997d1780 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x558a997d1768 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x558a997d1748 <col:98, col:105> 'String' (CXXTemporary 0x558a997d1748)
|           `-CXXTemporaryObjectExpr 0x558a997d1710 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x558a997c9178 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x558a997c8fa8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x558a997c9020 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x558a997c9098 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x558a997d1848 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x558a997d1830 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x558a997d1818 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x558a997d17f8 <col:94, col:101> 'String' (CXXTemporary 0x558a997d17f8)
| |         `-CXXTemporaryObjectExpr 0x558a997d17c0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x558a997d2030 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x558a997d1fa8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x558a997d1f78 <col:9> '<bound member function type>' ->add_task_handlers 0x558a997c8ed8
|     | `-CXXThisExpr 0x558a997d1f68 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x558a997d1fe8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x558a997d1ee8 <col:27> 'Task *' lvalue ParmVar 0x558a997c8fa8 'task' 'Task *'
|     |-ImplicitCastExpr 0x558a997d2000 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x558a997d1f08 <col:33> 'NotifierSignal *' lvalue ParmVar 0x558a997c9020 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x558a997d2018 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x558a997d1f28 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x558a997c8b70 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x558a997d1f48 <col:62> 'const String' lvalue ParmVar 0x558a997c9098 'prefix' 'const String &'
|-CXXMethodDecl 0x558a997c9388 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x558a997c9240 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x558a997c92b8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x558a997d18f8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x558a997d18e0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x558a997d18c8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x558a997d18a8 <col:70, col:77> 'String' (CXXTemporary 0x558a997d18a8)
| |         `-CXXTemporaryObjectExpr 0x558a997d1870 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x558a997d2208 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x558a997d2180 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x558a997d2150 <col:9> '<bound member function type>' ->add_task_handlers 0x558a997c8ed8
|     | `-CXXThisExpr 0x558a997d2140 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x558a997d21c0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x558a997d20c0 <col:27> 'Task *' lvalue ParmVar 0x558a997c9240 'task' 'Task *'
|     |-ImplicitCastExpr 0x558a997d21d8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x558a997d20e0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x558a997d21f0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x558a997d2100 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x558a997c8b70 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x558a997d2120 <col:57> 'const String' lvalue ParmVar 0x558a997c92b8 'prefix' 'const String &'
|-CXXMethodDecl 0x558a997c9668 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x558a997c9450 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558a997c94d0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558a997c9548 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x558a997c9918 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x558a997c9738 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558a997c97b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558a997c9838 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x558a997c9c08 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x558a997c99e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558a997c9a68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558a997c9ae0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x558a997c9eb8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x558a997c9cd8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558a997c9d58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558a997c9dd8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x558a997ca168 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x558a997c9f88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558a997ca008 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558a997ca088 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x558a997ca418 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x558a997ca238 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558a997ca2b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558a997ca330 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x558a997ca6c8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x558a997ca4e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558a997ca568 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558a997ca5e8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x558a997ca9d8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x558a997ca7f0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558a997ca870 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558a997ca8f0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x558a997cacb8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x558a997caaa8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558a997cab28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558a997cabd0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x558a997caf98 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x558a997cad88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558a997cae08 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558a997caeb0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x558a997cb200 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x558a997cb068 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x558a997cb0e8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x558a997cb160 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x558a997cb4a8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x558a997cb2d0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x558a997cb350 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x558a997cb3c8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x558a997cb758 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x558a997cb578 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558a997cb5f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558a997cb678 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x558a997cba08 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x558a997cb828 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558a997cb8a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558a997cb920 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x558a997cbcb8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x558a997cbad8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558a997cbb58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558a997cbbd0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x558a997cbf88 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x558a997cbd88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558a997cbe08 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558a997cbea8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x558a997cc2b8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x558a997cc058 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558a997cc0d8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x558a997cc150 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x558a997cc1c8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558a997d1910 <col:93> 'bool' false
|-CXXMethodDecl 0x558a997cc4a0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x558a997cc388 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x558a997cc408 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x558a997cc678 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x558a997cc560 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x558a997cc5e0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x558a997cc958 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x558a997cc738 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x558a997cc7b0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x558a997cc830 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x558a997cc8a8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x558a997ccc48 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x558a997cca28 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x558a997ccaa0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x558a997ccb20 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x558a997ccb98 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x558a997cce80 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x558a997ccd20 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x558a997ccda0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x558a997cd068 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x558a997ccf48 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x558a997ccfc8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x558a997cd118 prev 0x558a997c48b8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558a997cd210 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x558a997cd2a0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x558a997cd318 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x558a997cd3d8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x558a997cd4a0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x558a997cd618 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x558a997cd550 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x558a997cd6c0 <col:24>
| | `-OptimizeNoneAttr 0x558a997cd718 <col:34>
| |-CXXMethodDecl 0x558a997cd760 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x558a997cda18 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x558a997cd810 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x558a997cd888 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x558a997cd908 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x558a997cdad0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x558a997cdb08 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x558a997cdb70 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x558a997cdbf8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x558a997cdf18 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x558a997cdcb0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x558a997cdd28 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x558a997cdda0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x558a997cde20 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x558a997ce030 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x558a997d59a8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x558a997d59a8
| | `-ParmVarDecl 0x558a997d5ab8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x558a997d5b58 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x558a997d5b58
| | `-ParmVarDecl 0x558a997d5c68 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x558a9995af80 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x558a997ce0a8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x558a997ce148 <col:38> "" ""
|-CXXMethodDecl 0x558a997ce1d8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x558a997ce278 <col:44> "" ""
|-AccessSpecDecl 0x558a997ce2e8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x558a997ce310 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x558a997ce410 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x558a997ce460 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558a997ce3f0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x558a997ce3d0 <col:27> 'int' 4
|-FieldDecl 0x558a997ce518 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x558a997ce6c8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x558a997ce780 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x558a997cf810 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x558a997cf878 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x558a997cf9c8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x558a997cf908 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x558a997cfb78 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x558a997cfa88 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x558a997cfd58 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x558a997cfc38 <col:20> col:23 'int'
| `-ParmVarDecl 0x558a997cfcb8 <col:25> col:28 'int'
|-CXXMethodDecl 0x558a997d0000 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x558a997cfe20 <col:23> col:26 'int'
| |-ParmVarDecl 0x558a997cfea0 <col:28> col:31 'int'
| `-ParmVarDecl 0x558a997cff18 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x558a997d00b8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x558a997d0180 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x558a997d01d0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x558a997d0220 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x558a997d0400 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x558a997d02b0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x558a997d0328 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558a997d06a8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x558a997d04c8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x558a997d0548 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x558a997d05c0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x558a997d08c8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x558a997d0778 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x558a997d07f8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x558a997d0c00 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x558a997d0988 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x558a997d0a08 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x558a997d0a80 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x558a997d0b00 <col:57> col:60 'int'
|-CXXMethodDecl 0x558a997d0de8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x558a997d0cd0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x558a997d0d50 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x558a997d0f38 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x558a997d0ea8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x558a997d12b8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x558a997d0ff8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x558a997d1078 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x558a997d10f0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x558a997d1170 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x558a997d13d0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | union NotifierSignal::vmvalue
         0 |   class atomic_uint32_t * v1
         0 |   struct NotifierSignal::vmpair * vm
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class NotifierSignal
         0 |   union NotifierSignal::vmvalue _v
         0 |     class atomic_uint32_t * v1
         0 |     struct NotifierSignal::vmpair * vm
         8 |   uint32_t _mask
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class TimedUnqueue
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   int _burst
       112 |   class Task _task
       112 |     struct TaskLink (base)
       112 |       struct TaskLink * _prev
       120 |       struct TaskLink * _next
       128 |       unsigned int _pass
       132 |     unsigned int _stride
       136 |     int _tickets
       140 |     union Task::Status _status
       140 |       struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
       140 |         int16_t home_thread_id
       142 |         uint8_t is_scheduled
       143 |         uint8_t is_strong_unscheduled
       140 |       uint32_t status
       144 |     TaskCallback _hook
       152 |     void * _thunk
       160 |     class RouterThread * _thread
       168 |     class Element * _owner
       176 |     union Task::Pending _pending_nextptr
       176 |       class Task * t
       176 |       uintptr_t x
       184 |   class Timer _timer
       184 |     int _schedpos1
       192 |     class Timestamp _expiry_s
       192 |       union Timestamp::rep_t _t
       192 |         int64_t x
       200 |     union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       200 |       TimerCallback callback
       208 |     void * _thunk
       216 |     class Element * _owner
       224 |     class RouterThread * _thread
       232 |   unsigned int _interval
       240 |   class NotifierSignal _signal
       240 |     union NotifierSignal::vmvalue _v
       240 |       class atomic_uint32_t * v1
       240 |       struct NotifierSignal::vmpair * vm
       248 |     uint32_t _mask
           | [sizeof=256, dsize=256, align=8,
           |  nvsize=256, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a997dda50 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558a997ddb68 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x558a997ddc38 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x558a997ddc98 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x558a997ddd00 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x558a997ddd88 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x558a997ddff0 <col:16, line:46:5>
|   |-BinaryOperator 0x558a997ddf38 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x558a997dde58 <col:9> 'TaskLink *' lvalue ->_prev 0x558a997ddc38
|   | | `-CXXThisExpr 0x558a997dde48 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x558a997ddf20 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x558a997ddf00 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x558a997dde98 <col:17> 'TaskLink *' lvalue ->_next 0x558a997ddc98
|   |     | `-CXXThisExpr 0x558a997dde88 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x558a997ddee8 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x558a997ddec8 <col:25> 'int' 0
|   `-BinaryOperator 0x558a997ddfd0 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x558a997ddf68 <col:9> 'unsigned int' lvalue ->_pass 0x558a997ddd00
|     | `-CXXThisExpr 0x558a997ddf58 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x558a997ddfb8 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x558a997ddf98 <col:17> 'int' 0
|-CXXConstructorDecl 0x558a9986a528 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x558a9986a528
| `-ParmVarDecl 0x558a9986a638 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x558a9986a6d8 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x558a9986a6d8
| `-ParmVarDecl 0x558a9986a7e8 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x558a9986a9d8 <col:8> col:8 implicit ~TaskLink 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x558a9986b1d8 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x558a9986b1d8
| `-ParmVarDecl 0x558a9986b2e8 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x558a9986b358 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x558a9986b358
  `-ParmVarDecl 0x558a9986b468 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a99741118 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x558a99741248 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x558a997412a8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x558a99741308 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x558a998716e8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x558a998717c0 <col:9> col:9 implicit ~ 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x558a99871a78 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x558a99871a78
| `-ParmVarDecl 0x558a99871b88 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x558a99871c28 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x558a99871c28
  `-ParmVarDecl 0x558a99871d38 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a99740f68 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558a99741088 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x558a99741118 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x558a99741248 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x558a997412a8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x558a99741308 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x558a998716e8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x558a998717c0 <col:9> col:9 implicit ~ 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x558a99871a78 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x558a99871a78
| | `-ParmVarDecl 0x558a99871b88 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x558a99871c28 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x558a99871c28
|   `-ParmVarDecl 0x558a99871d38 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x558a997413c8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x558a99741428 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x558a997413c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x558a99741248 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x558a99741480 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x558a997413c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x558a997412a8 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x558a997414d8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x558a997413c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x558a99741308 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x558a99741530 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x558a998715f8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558a99871f58 <col:11>
|-CXXConstructorDecl 0x558a998718c8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x558a998718c8
| `-ParmVarDecl 0x558a998719d8 <col:11> col:11 'const Task::Status &'
|-CXXConstructorDecl 0x558a99871dd8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x558a99871dd8
| `-ParmVarDecl 0x558a99871ee8 <col:11> col:11 'Task::Status &&'
`-CXXDestructorDecl 0x558a9995ae98 <col:11> col:11 implicit ~Status 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a99758a60 prev 0x558a9974f8a0 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558a99758b58 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x558a99758bf8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x558a9975f9c0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558a9975fda8 <col:11>
|-CXXConstructorDecl 0x558a9975faa0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x558a9975fb88 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x558a997604f0 <col:11>
|-CXXConstructorDecl 0x558a9975fc28 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x558a9975fd38 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x558a99761d48 <col:11>
|-CXXDestructorDecl 0x558a99761058 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x558a99467c08 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x558a99467d18 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x558a994685e0 <col:11>
|   `-ReturnStmt 0x558a994685d0 <col:11>
|     `-UnaryOperator 0x558a994685b8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558a994685a8 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x558a99467d88 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x558a99467e98 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x558a997fa480 <col:11>
    `-ReturnStmt 0x558a997fa470 <col:11>
      `-UnaryOperator 0x558a997fa458 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x558a997fa448 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a9974ea58 prev 0x558a9974e768 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558a9974eb50 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x558a9974ebe0 <col:19, col:25> col:19 public
|-TypedefDecl 0x558a9974ec18 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x558a993b3de0 'int32_t' sugar
|   |-Typedef 0x558a992c4268 'int32_t'
|   `-TypedefType 0x558a9929d3b0 '__int32_t' sugar
|     |-Typedef 0x558a9929cfc8 '__int32_t'
|     `-BuiltinType 0x558a9925b370 'int'
|-TypedefDecl 0x558a9974ec80 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x558a993b3fa0 'int64_t' sugar
|   |-Typedef 0x558a992c42d0 'int64_t'
|   `-TypedefType 0x558a9929d4d0 '__int64_t' sugar
|     |-Typedef 0x558a9929d0a8 '__int64_t'
|     `-BuiltinType 0x558a9925b390 'long'
|-EnumDecl 0x558a9974ecd8 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x558a9974ee50 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x558a9974ee30 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x558a9974ee08 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x558a9974edf0 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x558a9974edc0 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x558a9974ef48 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x558a9974ef28 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x558a9974ef00 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x558a9974eee8 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x558a9974eec0 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x558a9974eea0 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x558a9974ef98 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x558a9974f0a0 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558a9974f5f0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9974f080 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x558a9974f060 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x558a9974f130 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558a9974f608 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9974f110 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x558a9974f0f0 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x558a9974f1c0 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558a9974f620 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9974f1a0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x558a9974f180 <col:25> 'int' 1000
| |-EnumConstantDecl 0x558a9974f250 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558a9974f638 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9974f230 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x558a9974f210 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x558a9974f2e0 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558a9974f650 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9974f2c0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x558a9974f2a0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x558a9974f370 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558a9974f668 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9974f350 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x558a9974f330 <col:24> 'int' 1000
| |-EnumConstantDecl 0x558a9974f400 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558a9974f680 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9974f3e0 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x558a9974f3c0 <col:26> 'int' EnumConstant 0x558a9974f0a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x558a9974f4d0 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558a9974f698 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9974f4b0 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x558a9974f490 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x558a9974f450 <col:27> 'int' EnumConstant 0x558a9974f400 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x558a9974f470 <col:44> 'int' EnumConstant 0x558a9974f370 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x558a9974f5a0 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x558a9974f6b0 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558a9974f580 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x558a9974f560 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x558a9974f520 <col:27> 'int' EnumConstant 0x558a9974f400 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x558a9974f540 <col:44> 'int' EnumConstant 0x558a9974f250 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x558a9974f6c8 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x558a9974f7d0 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x558a9974f820 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558a9974f7b0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x558a9974f790 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f400 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x558a9974f848 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x558a993b3a10 'uninitialized_type'
|   `-CXXRecord 0x558a993b3978 'uninitialized_type'
|-CXXRecordDecl 0x558a9974f8a0 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x558a9974f9b0 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x558a99759ba8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558a9975fdb8 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558a9975fed8 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x558a9975fe90 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x558a9975fe20 <col:9> '<bound member function type>' ->assign 0x558a997545f8
|     | `-CXXThisExpr 0x558a9975fe10 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x558a9975fe50 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x558a9975fec0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x558a9975fe70 <col:19> 'int' 0
|-CXXConstructorDecl 0x558a9974fbf8 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x558a9974fa70 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x558a9974fae8 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x558a9975b6f0 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x558a9975b6d0 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x558a99759ba8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558a9975fef0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558a99760040 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x558a9975ffc8 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x558a9975ff58 <col:9> '<bound member function type>' ->assign 0x558a997545f8
|     | `-CXXThisExpr 0x558a9975ff48 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x558a99760010 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x558a9975fff8 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x558a9975ff88 <col:16> 'long' lvalue ParmVar 0x558a9974fa70 'sec' 'long'
|     `-ImplicitCastExpr 0x558a99760028 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x558a9975ffa8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x558a9974fae8 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x558a9974fe58 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x558a9974fcc8 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x558a9974fd40 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x558a9975b728 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x558a9975b708 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x558a99759ba8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558a99760058 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558a99760190 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x558a99760130 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x558a997600c0 <col:9> '<bound member function type>' ->assign 0x558a997545f8
|     | `-CXXThisExpr 0x558a997600b0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x558a99760160 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x558a997600f0 <col:16> 'int' lvalue ParmVar 0x558a9974fcc8 'sec' 'int'
|     `-ImplicitCastExpr 0x558a99760178 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x558a99760110 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x558a9974fd40 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x558a997500b8 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x558a9974ff28 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x558a9974ffa0 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x558a9975b760 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x558a9975b740 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x558a99759ba8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558a997601a8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558a997602f8 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x558a99760280 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x558a99760210 <col:9> '<bound member function type>' ->assign 0x558a997545f8
|     | `-CXXThisExpr 0x558a99760200 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x558a997602c8 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x558a997602b0 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x558a99760240 <col:16> 'unsigned long' lvalue ParmVar 0x558a9974ff28 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x558a997602e0 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x558a99760260 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x558a9974ffa0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x558a99751250 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x558a99750188 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x558a99750200 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x558a9975b798 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x558a9975b778 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x558a99759ba8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558a99760310 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558a99760460 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x558a997603e8 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x558a99760378 <col:9> '<bound member function type>' ->assign 0x558a997545f8
|     | `-CXXThisExpr 0x558a99760368 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x558a99760430 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x558a99760418 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x558a997603a8 <col:16> 'unsigned int' lvalue ParmVar 0x558a99750188 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x558a99760448 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x558a997603c8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x558a99750200 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x558a997513b0 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x558a99751320 <col:31> col:37 'double'
|-CXXConstructorDecl 0x558a99751548 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x558a99751488 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x558a99751778 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x558a99751680 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x558a99751928 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x558a99751868 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x558a99759ba8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558a99760500 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x558a99760478 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x558a99751868 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x558a99760560 <col:19, line:214:5>
|-CXXConstructorDecl 0x558a99751af8 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x558a99751a38 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x558a99759ba8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558a99760570 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558a99760620 <col:53, line:219:5>
|   `-CStyleCastExpr 0x558a997605f8 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x558a997605c8 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x558a99751a38 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x558a99751ce8 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x558a99751c60 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x558a9974e800 'Timestamp'
|   | `-CXXRecord 0x558a9974ea58 'Timestamp'
|   `-ParenType 0x558a99751c00 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x558a99751bd0 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x558a9974eda0 'Timestamp::seconds_type' sugar
|         |-Typedef 0x558a9974ec18 'seconds_type'
|         `-TypedefType 0x558a993b3de0 'int32_t' sugar
|           |-Typedef 0x558a992c4268 'int32_t'
|           `-TypedefType 0x558a9929d3b0 '__int32_t' sugar
|             |-Typedef 0x558a9929cfc8 '__int32_t'
|             `-BuiltinType 0x558a9925b370 'int'
|-CXXConversionDecl 0x558a99751e28 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x558a99751ef8 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x558a99760728 <col:37, line:231:5>
|   `-ReturnStmt 0x558a99760718 <line:227:9, col:23>
|     `-BinaryOperator 0x558a997606f8 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x558a997606c8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x558a99760678 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x558a99758bf8
|       |   `-MemberExpr 0x558a99760648 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x558a99759ba8
|       |     `-CXXThisExpr 0x558a99760638 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x558a997606e0 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x558a997606a8 <col:23> 'int' 0
|-CXXMethodDecl 0x558a99751fb8 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x558a99752078 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x558a99752138 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x558a997521f8 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x558a997522b8 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x558a99752428 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x558a99752368 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x558a99752570 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x558a997524e0 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558a99752638 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x558a997526d8 <col:54> "" ""
|-CXXMethodDecl 0x558a99752768 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x558a99752808 <col:54> "" ""
|-CXXMethodDecl 0x558a99752898 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x558a99752938 <col:54> "" ""
|-CXXMethodDecl 0x558a99752a38 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x558a99752b08 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x558a99752c38 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x558a99752d30 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x558a99752e68 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x558a99760940 <col:39, line:271:5>
|   `-ReturnStmt 0x558a99760930 <line:267:9, col:61>
|     `-CallExpr 0x558a997608d0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x558a997608b8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558a99760740 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x558a99759ed8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x558a99760900 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x558a997607a0 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x558a99758bf8
|       |   `-MemberExpr 0x558a99760770 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x558a99759ba8
|       |     `-CXXThisExpr 0x558a99760760 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x558a99760918 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x558a99760840 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x558a99760810 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x558a997607d0 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f400 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x558a99760828 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x558a997607f0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f370 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558a99752f28 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x558a99760b00 <col:39, line:279:5>
|   `-ReturnStmt 0x558a99760af0 <line:275:9, col:61>
|     `-CallExpr 0x558a99760a90 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x558a99760a78 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558a99760958 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x558a99759ed8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x558a99760ac0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x558a997609b8 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x558a99758bf8
|       |   `-MemberExpr 0x558a99760988 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x558a99759ba8
|       |     `-CXXThisExpr 0x558a99760978 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x558a99760ad8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x558a99760a58 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x558a99760a28 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x558a997609e8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f400 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x558a99760a40 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x558a99760a08 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f250 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558a99752fe8 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x558a99760c98 <col:39, line:287:5>
|   `-ReturnStmt 0x558a99760c88 <line:283:9, col:53>
|     `-BinaryOperator 0x558a99760c68 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x558a99760c38 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x558a99760b58 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x558a99758bf8
|       |   `-MemberExpr 0x558a99760b28 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x558a99759ba8
|       |     `-CXXThisExpr 0x558a99760b18 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x558a99760c50 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x558a99760c18 <col:23, col:53> 'int'
|           `-BinaryOperator 0x558a99760bf8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x558a99760bc8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x558a99760b88 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f0a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x558a99760be0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x558a99760ba8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f400 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558a997530d8 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x558a99761f30 <col:40, line:293:5>
|   |-DeclStmt 0x558a99760de0 <line:291:9, col:48>
|   | `-VarDecl 0x558a99760cc0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x558a99760dc0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x558a99760d68 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x558a99760d38 <col:22> '<bound member function type>' ->subsec 0x558a99752078
|   |     |   `-CXXThisExpr 0x558a99760d28 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x558a99760da8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x558a99760d88 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f4d0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x558a99761f20 <line:292:9, col:70>
|     `-ExprWithCleanups 0x558a99761f08 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x558a99761ed8 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558a99761ec0 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x558a99761ea0 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x558a99761e70 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x558a99761c08 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x558a99761bf0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x558a99760df8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x558a99760cc0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x558a99761e10 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x558a99761df8 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x558a99761dc8 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x558a99761c20 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x558a99761b90 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x558a99761b78 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x558a99761b28 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x558a9974e9a8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x558a99761ac8 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x558a99760e28 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x558a99760e18 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x558a99761b10 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x558a99761af8 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x558a997612e8 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x558a99760e50 <col:39> 'int' 0
|               |               `-BinaryOperator 0x558a99760ee0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x558a99760eb0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x558a99760e70 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f4d0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x558a99760ec8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x558a99760e90 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x558a99760cc0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x558a99761e40 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x558a99761bd8 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x558a99761bc8 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x558a99753198 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x558a99762488 <col:40, line:302:5>
|   |-DeclStmt 0x558a99762080 <line:297:9, col:48>
|   | `-VarDecl 0x558a99761f60 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x558a99762060 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x558a99762008 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x558a99761fd8 <col:22> '<bound member function type>' ->subsec 0x558a99752078
|   |     |   `-CXXThisExpr 0x558a99761fc8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x558a99762048 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x558a99762028 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f5a0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x558a99762478 <line:298:9, col:70>
|     `-ExprWithCleanups 0x558a99762460 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x558a99762430 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558a99762418 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x558a997623f8 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x558a997623c8 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x558a997622f0 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x558a997622d8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x558a99762098 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x558a99761f60 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x558a99762368 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x558a99762350 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x558a99762320 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x558a99762308 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x558a99762278 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x558a99762260 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x558a99762240 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x558a9974e9a8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x558a997621e0 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x558a997620c8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x558a997620b8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x558a99762228 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x558a99762210 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x558a997621a0 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x558a997620f0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x558a99762180 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x558a99762150 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x558a99762110 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f5a0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x558a99762168 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x558a99762130 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x558a99761f60 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x558a99762398 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x558a997622c0 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x558a997622b0 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x558a99753258 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x558a99762510 <col:40, line:306:5>
|   `-ReturnStmt 0x558a99762500 <line:305:9, col:17>
|     `-CXXConstructExpr 0x558a997624d0 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x558a997624b8 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558a997624a8 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x558a997533f8 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x558a99753308 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x558a997535c8 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x558a997534d0 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x558a997536b8 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x558a99753828 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x558a99753768 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x558a99762658 <col:56, line:320:5>
|   `-ReturnStmt 0x558a99762648 <line:319:9, col:32>
|     `-ExprWithCleanups 0x558a99762630 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x558a99762600 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558a997625e8 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x558a997625a8 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x558a99762578 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x558a99762538 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x558a99753768 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x558a99762590 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x558a99762558 <col:31> 'int' 0
|-CXXMethodDecl 0x558a99753a68 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x558a997538e0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558a99753958 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558a99762828 <col:72, line:326:5>
|   `-ReturnStmt 0x558a99762818 <line:325:9, col:51>
|     `-ExprWithCleanups 0x558a99762800 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x558a997627d0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558a997627b8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x558a99762778 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x558a99762760 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x558a99762680 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x558a997538e0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x558a99762720 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x558a99762708 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x558a997626a0 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x558a99758350 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x558a99762748 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x558a997626c0 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x558a99753958 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558a99753c18 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x558a99753b28 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x558a99762ef0 <col:56, line:337:5>
|   |-DeclStmt 0x558a99762b28 <line:329:9, col:51>
|   | `-VarDecl 0x558a99762850 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x558a99762b10 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x558a99762ae0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x558a99762ac8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x558a99762ab0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x558a99762a80 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x558a99762a68 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x558a99762a50 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x558a99762940 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x558a99762ce0 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x558a99762b90 <col:9, col:14> 'int64_t':'long' lvalue .x 0x558a99758bf8
|   | | `-MemberExpr 0x558a99762b60 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x558a99759ba8
|   | |   `-DeclRefExpr 0x558a99762b40 <col:9> 'Timestamp' lvalue Var 0x558a99762850 't' 'Timestamp'
|   | `-BinaryOperator 0x558a99762cc0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x558a99762c90 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558a99762bc0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x558a99753b28 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x558a99762ca8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x558a99762c70 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x558a99762c50 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x558a99762c20 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x558a99762be0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f400 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x558a99762c38 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x558a99762c00 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f370 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x558a99762ed8 <line:336:9, col:16>
|     `-CXXConstructExpr 0x558a99762ea8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x558a99762e90 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x558a99762e70 <col:16> 'Timestamp' lvalue Var 0x558a99762850 't' 'Timestamp'
|-CXXMethodDecl 0x558a99753de0 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x558a99753cd0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558a99753d48 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558a997630a8 <col:72, line:343:5>
|   `-ReturnStmt 0x558a99763098 <line:342:9, col:51>
|     `-ExprWithCleanups 0x558a99763080 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x558a99763050 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558a99763038 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x558a99762ff8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x558a99762fe0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x558a99762f28 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x558a99753cd0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x558a99762fa0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x558a99762f88 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x558a99762f48 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x558a99758498 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x558a99762fc8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x558a99762f68 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x558a99753d48 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558a99753f30 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x558a99753ea0 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x558a997634f0 <col:56, line:354:5>
|   |-DeclStmt 0x558a99763298 <line:346:9, col:51>
|   | `-VarDecl 0x558a997630d0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x558a99763280 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x558a99763250 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x558a99763238 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x558a99763220 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x558a997631f0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x558a997631d8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x558a997631c0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x558a99763190 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x558a99763450 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x558a99763300 <col:9, col:14> 'int64_t':'long' lvalue .x 0x558a99758bf8
|   | | `-MemberExpr 0x558a997632d0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x558a99759ba8
|   | |   `-DeclRefExpr 0x558a997632b0 <col:9> 'Timestamp' lvalue Var 0x558a997630d0 't' 'Timestamp'
|   | `-BinaryOperator 0x558a99763430 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x558a99763400 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558a99763330 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x558a99753ea0 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x558a99763418 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x558a997633e0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x558a997633c0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x558a99763390 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x558a99763350 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f400 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x558a997633a8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x558a99763370 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f250 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x558a997634d8 <line:353:9, col:16>
|     `-CXXConstructExpr 0x558a997634a8 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x558a99763490 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x558a99763470 <col:16> 'Timestamp' lvalue Var 0x558a997630d0 't' 'Timestamp'
|-CXXMethodDecl 0x558a997540f8 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x558a99753fe8 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558a99754060 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558a997636a8 <col:72, line:360:5>
|   `-ReturnStmt 0x558a99763698 <line:359:9, col:51>
|     `-ExprWithCleanups 0x558a99763680 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x558a99763650 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558a99763638 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x558a997635f8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x558a997635e0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x558a99763528 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x558a99753fe8 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x558a997635a0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x558a99763588 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x558a99763548 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x558a997585e0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x558a997635c8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x558a99763568 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x558a99754060 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558a99754248 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x558a997541b8 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x558a99770018 <col:56, line:371:5>
|   |-DeclStmt 0x558a99763898 <line:363:9, col:51>
|   | `-VarDecl 0x558a997636d0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x558a99763880 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x558a99763850 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x558a99763838 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x558a99763820 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x558a997637f0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x558a997637d8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x558a997637c0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x558a99763790 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x558a9976ff78 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x558a99763900 <col:9, col:14> 'int64_t':'long' lvalue .x 0x558a99758bf8
|   | | `-MemberExpr 0x558a997638d0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x558a99759ba8
|   | |   `-DeclRefExpr 0x558a997638b0 <col:9> 'Timestamp' lvalue Var 0x558a997636d0 't' 'Timestamp'
|   | `-CallExpr 0x558a9976ff18 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x558a9976ff00 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x558a99763930 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x558a99759ed8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x558a9976ff48 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558a99763950 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x558a997541b8 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x558a9976ff60 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x558a9976fee0 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x558a9976feb0 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x558a99763970 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f0a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x558a9976fec8 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x558a99763990 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f400 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x558a99770000 <line:370:9, col:16>
|     `-CXXConstructExpr 0x558a9976ffd0 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x558a9976ffb8 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x558a9976ff98 <col:16> 'Timestamp' lvalue Var 0x558a997636d0 't' 'Timestamp'
|-CXXMethodDecl 0x558a99754338 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x558a99770158 <col:39, line:377:5>
|   `-ReturnStmt 0x558a99770148 <line:376:9, col:30>
|     `-ExprWithCleanups 0x558a99770130 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x558a99770100 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558a997700e8 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x558a997700a8 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x558a99770050 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x558a99770090 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x558a99770070 <col:29> 'int' 1
|-CXXMethodDecl 0x558a997543f8 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x558a99770238 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x558a997701f0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x558a99770180 <col:9> '<bound member function type>' ->assign 0x558a997545f8
|     | `-CXXThisExpr 0x558a99770170 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x558a997701b0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x558a99770220 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x558a997701d0 <col:19> 'int' 0
|-CXXMethodDecl 0x558a997545f8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x558a997544a8 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558a99754520 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x558a9975b7d0 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x558a9975b7b0 <col:60> 'int' 0
| `-CompoundStmt 0x558a99770430 <col:63, line:395:5>
|   `-BinaryOperator 0x558a99770410 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x558a99770290 <col:9, col:12> 'int64_t':'long' lvalue .x 0x558a99758bf8
|     | `-MemberExpr 0x558a99770260 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x558a99759ba8
|     |   `-CXXThisExpr 0x558a99770250 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x558a997703f0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x558a99770380 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x558a99770320 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x558a99770308 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x558a997702f0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x558a997702c0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x558a997544a8 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x558a99770368 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x558a99770348 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f400 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x558a997703d8 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x558a997703c0 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x558a997703a0 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x558a99754520 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558a997547c8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x558a997546b8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558a99754730 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558a99770588 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x558a99770540 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x558a99770458 <col:9> '<bound member function type>' ->assign 0x558a997545f8
|     | `-CXXThisExpr 0x558a99770448 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x558a99770570 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x558a99770488 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x558a997546b8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x558a99770500 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x558a997704e8 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558a997704a8 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x558a99758498 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x558a99770528 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x558a997704c8 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x558a99754730 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558a99754998 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x558a99754888 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558a99754900 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558a997706e0 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x558a99770698 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x558a997705b0 <col:9> '<bound member function type>' ->assign 0x558a997545f8
|     | `-CXXThisExpr 0x558a997705a0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x558a997706c8 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x558a997705e0 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x558a99754888 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x558a99770658 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x558a99770640 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558a99770600 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x558a997585e0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x558a99770680 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x558a99770620 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x558a99754900 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558a99754b68 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x558a99754a58 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558a99754ad0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x558a9975b808 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x558a9975b7e8 <col:57> 'int' 0
| `-DeprecatedAttr 0x558a99754c18 <col:75> "" ""
|-CXXMethodDecl 0x558a99754da8 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x558a99754c98 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558a99754d10 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558a99754e58 <col:74> "" ""
|-CXXMethodDecl 0x558a99754fe8 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x558a99754ed8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558a99754f50 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558a99755098 <col:74> "" ""
|-CXXMethodDecl 0x558a99755128 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x558a997551c8 <col:42> "" ""
|-CXXMethodDecl 0x558a99757a00 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x558a997578e0 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x558a99757960 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x558a99757ad0 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x558a99757b90 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x558a99757c30 <col:20>
| `-OptimizeNoneAttr 0x558a99757c88 <col:30>
|-CXXMethodDecl 0x558a99757cd0 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x558a99757d90 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x558a99757e50 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x558a99757f10 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x558a99757fd0 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x558a99758090 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x558a99758150 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x558a99758210 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x558a99758350 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x558a997582c0 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558a99770828 <col:58, line:512:5>
|   `-ReturnStmt 0x558a99770818 <line:511:9, col:53>
|     `-BinaryOperator 0x558a997707f8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x558a997707c8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x558a997706f8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x558a997582c0 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x558a997707e0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x558a997707a8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x558a99770788 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x558a99770758 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x558a99770718 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f400 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x558a99770770 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x558a99770738 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f370 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558a99758498 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x558a99758408 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558a99770970 <col:58, line:516:5>
|   `-ReturnStmt 0x558a99770960 <line:515:9, col:53>
|     `-BinaryOperator 0x558a99770940 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x558a99770910 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x558a99770840 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x558a99758408 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x558a99770928 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x558a997708f0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x558a997708d0 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x558a997708a0 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x558a99770860 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f400 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x558a997708b8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x558a99770880 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f250 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558a997585e0 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x558a99758550 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558a99770ab8 <col:58, line:520:5>
|   `-ReturnStmt 0x558a99770aa8 <line:519:9, col:53>
|     `-BinaryOperator 0x558a99770a88 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x558a99770a58 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x558a99770988 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x558a99758550 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x558a99770a70 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x558a99770a38 <col:23, col:53> 'int'
|           `-BinaryOperator 0x558a99770a18 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x558a997709e8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x558a997709a8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f0a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x558a99770a00 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x558a997709c8 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f400 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558a99758728 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x558a99758698 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558a99770c00 <col:60, line:524:5>
|   `-ReturnStmt 0x558a99770bf0 <line:523:9, col:55>
|     `-BinaryOperator 0x558a99770bd0 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x558a99770ba0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x558a99770ad0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x558a99758698 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x558a99770bb8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x558a99770b80 <col:25, col:55> 'int'
|           `-BinaryOperator 0x558a99770b60 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x558a99770b30 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x558a99770af0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f400 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x558a99770b48 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x558a99770b10 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f370 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558a99758870 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x558a997587e0 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558a99770d48 <col:60, line:528:5>
|   `-ReturnStmt 0x558a99770d38 <line:527:9, col:55>
|     `-BinaryOperator 0x558a99770d18 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x558a99770ce8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x558a99770c18 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x558a997587e0 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x558a99770d00 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x558a99770cc8 <col:25, col:55> 'int'
|           `-BinaryOperator 0x558a99770ca8 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x558a99770c78 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x558a99770c38 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f400 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x558a99770c90 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x558a99770c58 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f250 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558a997589b8 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x558a99758928 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558a99770e90 <col:60, line:532:5>
|   `-ReturnStmt 0x558a99770e80 <line:531:9, col:55>
|     `-BinaryOperator 0x558a99770e60 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x558a99770e30 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x558a99770d60 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x558a99758928 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x558a99770e48 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x558a99770e10 <col:25, col:55> 'int'
|           `-BinaryOperator 0x558a99770df0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x558a99770dc0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x558a99770d80 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f0a0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x558a99770dd8 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x558a99770da0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558a9974f400 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x558a99758a60 prev 0x558a9974f8a0 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558a99758b58 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x558a99758bf8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x558a9975f9c0 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x558a9975fda8 <col:11>
| |-CXXConstructorDecl 0x558a9975faa0 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x558a9975fb88 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x558a997604f0 <col:11>
| |-CXXConstructorDecl 0x558a9975fc28 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x558a9975fd38 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x558a99761d48 <col:11>
| |-CXXDestructorDecl 0x558a99761058 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x558a99467c08 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x558a99467d18 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x558a994685e0 <col:11>
| |   `-ReturnStmt 0x558a994685d0 <col:11>
| |     `-UnaryOperator 0x558a994685b8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x558a994685a8 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x558a99467d88 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x558a99467e98 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x558a997fa480 <col:11>
|     `-ReturnStmt 0x558a997fa470 <col:11>
|       `-UnaryOperator 0x558a997fa458 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558a997fa448 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x558a99758c60 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x558a99758d60 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x558a99758f60 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a99758d40 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x558a99758d20 <col:21> 'int' 0
| |-EnumConstantDecl 0x558a99758df0 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x558a99758f78 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a99758dd0 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x558a99758db0 <col:23> 'int' 1
| |-EnumConstantDecl 0x558a99758e80 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x558a99758f90 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a99758e60 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x558a99758e40 <col:23> 'int' 2
| `-EnumConstantDecl 0x558a99758f10 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x558a99758fa8 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558a99758ef0 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x558a99758ed0 <col:27> 'int' 3
|-CXXMethodDecl 0x558a99758fe8 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x558a997590b0 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x558a997592b8 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x558a99759160 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x558a997591e0 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x558a9975b820 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x558a997594c8 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x558a99759378 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x558a997593f0 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x558a99759598 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x558a99759658 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x558a997597c8 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x558a99759708 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x558a99759890 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x558a99759950 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x558a99759a10 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x558a99759ad0 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x558a99759b70 <line:670:3, col:10> col:3 private
|-FieldDecl 0x558a99759ba8 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x558a99759c18 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x558a99770ea8 <col:27, line:684:5>
|-CXXMethodDecl 0x558a99759cd8 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x558a99770eb8 <col:27, line:696:5>
|-CXXMethodDecl 0x558a99759ed8 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x558a99759d88 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x558a99759e00 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558a99771040 <col:66, line:700:5>
|   `-ReturnStmt 0x558a99771030 <line:699:9, col:31>
|     `-CallExpr 0x558a99770fd0 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x558a99770fb8 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558a99770f68 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x558a995dc288 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x558a99771000 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x558a99770f28 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x558a99759d88 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x558a99771018 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x558a99770f48 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x558a99759e00 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558a9975a248 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x558a99759f98 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x558a9975a010 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x558a9975a088 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x558a9975a100 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558a99771390 <col:64, line:707:5>
|   |-DeclStmt 0x558a997710d0 <line:704:9, col:24>
|   | `-VarDecl 0x558a99771068 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x558a997712e0 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x558a997710e8 <col:9> 'int32_t':'int' lvalue ParmVar 0x558a9975a010 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x558a997712c8 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x558a99771260 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x558a99771248 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558a997711c8 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x558a995e1558 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x558a99771298 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x558a99771168 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x558a9975a088 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x558a997712b0 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x558a99771188 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x558a9975a100 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x558a997711a8 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x558a99771068 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x558a99771370 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x558a99771300 <col:9> 'int32_t':'int' lvalue ParmVar 0x558a99759f98 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x558a99771358 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x558a99771340 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x558a99771320 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x558a99771068 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x558a9975a4e8 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x558a9975a318 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x558a9975a390 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x558a9975a408 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x558a9975a788 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x558a9975a5b0 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x558a9975a628 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x558a9975a6a0 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x558a9975a918 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x558a9975a850 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x558a9975ab18 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x558a9975a9d0 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x558a9975aa48 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x558a9975ade8 <line:717:5, col:73> col:24
| `-FunctionDecl 0x558a9975ad28 parent 0x558a9925b278 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x558a9975abd8 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x558a9975ac50 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x558a9975b008 <line:718:5, col:72> col:24
| `-FunctionDecl 0x558a9975af48 parent 0x558a9925b278 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x558a9975ae38 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x558a9975aeb0 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x558a9975b1d0 <line:719:5, col:57> col:29
| `-FunctionDecl 0x558a9975b118 parent 0x558a9925b278 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x558a9975b058 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x558a9975b458 <line:720:5, col:73> col:30
| `-FunctionDecl 0x558a9975b398 parent 0x558a9925b278 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x558a9975b248 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x558a9975b2c0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x558a9975b678 <line:721:5, col:73> col:30
| `-FunctionDecl 0x558a9975b5b8 parent 0x558a9925b278 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x558a9975b4a8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x558a9975b520 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x558a99760f00 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x558a99760fe8 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x558a99759ba8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558a99761a58 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x558a99761a10 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x558a99759ba8
| |     `-DeclRefExpr 0x558a997619f0 <col:7> 'const Timestamp' lvalue ParmVar 0x558a99760fe8 '' 'const Timestamp &'
| `-CompoundStmt 0x558a99761ab8 <col:7>
|-CXXConstructorDecl 0x558a99761168 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x558a99761278 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x558a99759ba8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558a99761d58 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x558a99761d00 <col:7> 'Timestamp::rep_t' xvalue ._t 0x558a99759ba8
| |     `-CXXStaticCastExpr 0x558a99761cd0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x558a99761ca0 <col:7> 'Timestamp' lvalue ParmVar 0x558a99761278 '' 'Timestamp &&'
| `-CompoundStmt 0x558a99761db8 <col:7>
|-CXXDestructorDecl 0x558a99761328 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x558a99467a58 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x558a99467b68 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x558a99468658 <col:7>
|   |-CXXMemberCallExpr 0x558a994685f8 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x558a99468538 <col:7> '<bound member function type>' .operator= 0x558a99467c08
|   | | `-MemberExpr 0x558a99468448 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x558a99759ba8
|   | |   `-CXXThisExpr 0x558a99468438 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x558a99468508 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x558a99759ba8
|   |   `-DeclRefExpr 0x558a994684e8 <col:7> 'const Timestamp' lvalue ParmVar 0x558a99467b68 '' 'const Timestamp &'
|   `-ReturnStmt 0x558a99468648 <col:7>
|     `-UnaryOperator 0x558a99468630 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558a99468620 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x558a99467f08 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x558a99468018 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x558a997fa4f8 <col:7>
    |-CXXMemberCallExpr 0x558a997fa498 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x558a997fa400 <col:7> '<bound member function type>' .operator= 0x558a99467d88
    | | `-MemberExpr 0x558a997fa2d0 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x558a99759ba8
    | |   `-CXXThisExpr 0x558a997fa2c0 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x558a997fa3d0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x558a99759ba8
    |   `-CXXStaticCastExpr 0x558a997fa3a0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x558a997fa370 <col:7> 'Timestamp' lvalue ParmVar 0x558a99468018 '' 'Timestamp &&'
    `-ReturnStmt 0x558a997fa4e8 <col:7>
      `-UnaryOperator 0x558a997fa4d0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x558a997fa4c0 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558a997ff1f0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x558a997ff3c8 prev 0x558a997ff1f0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x558a997ff458 <col:46, col:52> col:46 public
|-TypedefDecl 0x558a997ff480 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558a9925b370 'int'
|-TypedefDecl 0x558a99804e80 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x558a99804e30 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x558a997ff930 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x558a997ff830 'type'
|     `-TemplateSpecializationType 0x558a997ff7c0 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x558a997ff6a0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x558a997ff680 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x558a997ff660 <col:24> 'unsigned long' 16
|       `-RecordType 0x558a997ff7a0 'char_array<16>'
|         `-ClassTemplateSpecialization 0x558a997ff6c0 'char_array'
|-TypedefDecl 0x558a99804f38 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x558a99804f00 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x558a99804ee0 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x558a99804e80 'type'
|     `-ElaboratedType 0x558a99804e30 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x558a997ff930 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x558a997ff830 'type'
|         `-TemplateSpecializationType 0x558a997ff7c0 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x558a997ff6a0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x558a997ff680 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x558a997ff660 <col:24> 'unsigned long' 16
|           `-RecordType 0x558a997ff7a0 'char_array<16>'
|             `-ClassTemplateSpecialization 0x558a997ff6c0 'char_array'
|-CXXMethodDecl 0x558a998050b8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x558a99804fc8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x558a998051a8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x558a99805288 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x558a99805288
|-CXXMethodDecl 0x558a99805558 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x558a99805460 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x558a99805798 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x558a99805610 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558a99805688 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x558a99805968 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x558a99805858 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558a998058d0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x558a99805ac8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x558a99805b98 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x558a99805de8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x558a99805c58 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x558a99805cd0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x558a99806048 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x558a99805eb8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x558a99805f30 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x558a99806208 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x558a99806118 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x558a998063c8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x558a998062d0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x558a99806480 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558a99806530 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x558a99806768 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x558a998065e0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558a99806658 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x558a99806a08 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x558a99806910 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x558a99806ad0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x558a99806b20 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x558a99806b70 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558a997fdb08 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x558a997fdd18 prev 0x558a997fdb08 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x558a997ff160 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x558a997ff110 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x558a997ff0f0 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x558a997fefa0 'type'
|     `-SubstTemplateTypeParmType 0x558a997fedc0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x558a99524410 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a995243b8 'T'
|       `-RecordType 0x558a997fe910 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x558a997fe828 'sized_array_memory'
|-FieldDecl 0x558a99806bc0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x558a99806c10 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x558a99806c48 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x558a997fddb0 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x558a9955c0a8 'T'
|   `-RecordType 0x558a997fcd10 'TimerSet::heap_element'
|     `-CXXRecord 0x558a997fcc80 'heap_element'
|-TypedefDecl 0x558a99806d08 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x558a99806cd0 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x558a997fddb0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558a9955c0a8 'T'
|     `-RecordType 0x558a997fcd10 'TimerSet::heap_element'
|       `-CXXRecord 0x558a997fcc80 'heap_element'
|-TypedefDecl 0x558a99806d98 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x558a99806d60 'const TimerSet::heap_element &'
|   `-QualType 0x558a997fddb1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x558a997fddb0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a9955c0a8 'T'
|       `-RecordType 0x558a997fcd10 'TimerSet::heap_element'
|         `-CXXRecord 0x558a997fcc80 'heap_element'
|-TypedefDecl 0x558a99806e28 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x558a99806df0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x558a997fddb0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558a9955c0a8 'T'
|     `-RecordType 0x558a997fcd10 'TimerSet::heap_element'
|       `-CXXRecord 0x558a997fcc80 'heap_element'
|-TypedefDecl 0x558a99806ee8 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x558a99806eb0 'const TimerSet::heap_element *'
|   `-QualType 0x558a997fddb1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x558a997fddb0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a9955c0a8 'T'
|       `-RecordType 0x558a997fcd10 'TimerSet::heap_element'
|         `-CXXRecord 0x558a997fcc80 'heap_element'
|-TypedefDecl 0x558a99807d50 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x558a99807d00 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x558a99807ce0 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x558a99807c18 'type'
|     `-LValueReferenceType 0x558a99807be0 'const TimerSet::heap_element &'
|       `-QualType 0x558a99807981 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x558a99807980 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x558a9952eae0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x558a9952ea88 'T'
|           `-RecordType 0x558a997fcd10 'TimerSet::heap_element'
|             `-CXXRecord 0x558a997fcc80 'heap_element'
|-TypedefDecl 0x558a99807db8 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x558a99806d60 'const TimerSet::heap_element &'
|   `-QualType 0x558a997fddb1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x558a997fddb0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a9955c0a8 'T'
|       `-RecordType 0x558a997fcd10 'TimerSet::heap_element'
|         `-CXXRecord 0x558a997fcc80 'heap_element'
|-TypedefDecl 0x558a99807e10 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558a9925b370 'int'
|-TypedefDecl 0x558a99807e78 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x558a99806df0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x558a997fddb0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558a9955c0a8 'T'
|     `-RecordType 0x558a997fcd10 'TimerSet::heap_element'
|       `-CXXRecord 0x558a997fcc80 'heap_element'
|-TypedefDecl 0x558a99807ee0 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x558a99806eb0 'const TimerSet::heap_element *'
|   `-QualType 0x558a997fddb1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x558a997fddb0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a9955c0a8 'T'
|       `-RecordType 0x558a997fcd10 'TimerSet::heap_element'
|         `-CXXRecord 0x558a997fcc80 'heap_element'
|-EnumDecl 0x558a99807f38 <line:134:5> col:5
| `-EnumConstantDecl 0x558a99808030 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x558a99808010 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x558a9955d788 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x558a9955d760 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x558a9955d740 <col:40> 'int' 1
|-CXXConstructorDecl 0x558a998080b8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x558a99808348 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x558a99808170 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558a99808210 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x558a99808608 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x558a998084f0 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x558a998088c8 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x558a998087b0 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x558a99808c10 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x558a99808af0 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x558a99808f20 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x558a99808e00 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x558a99809210 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x558a99809058 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558a998090d0 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x558a99809368 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x558a99809448 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a998094a0 <col:30> Inherited
|-CXXMethodDecl 0x558a998094e8 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x558a99809598 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a998095f0 <col:30> Inherited
|-CXXMethodDecl 0x558a998096b8 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x558a99809768 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a998097c0 <col:30> Inherited
|-CXXMethodDecl 0x558a99809808 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x558a998098b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a99809910 <col:30> Inherited
|-CXXMethodDecl 0x558a99809958 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x558a99809a08 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a99809a60 <col:30> Inherited
|-CXXMethodDecl 0x558a99809aa8 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x558a99809b58 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a99809bb0 <col:30> Inherited
|-CXXMethodDecl 0x558a99809bd8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558a99809c88 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558a99809d38 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x558a99809ef8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x558a99809de8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558a99809e60 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x558a9980a048 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x558a99809fb8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a9980a1f8 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x558a9980a100 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558a9980a2b0 <col:20>
| `-OptimizeNoneAttr 0x558a9980a308 <col:30>
|-CXXMethodDecl 0x558a9980a428 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x558a9980a330 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558a9980a4e0 <col:20>
| `-OptimizeNoneAttr 0x558a9980a538 <col:30>
|-CXXMethodDecl 0x558a9980a5f0 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x558a9980a560 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a9980a738 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558a9980a6a8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a9980a868 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x558a9980a998 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x558a9980aa68 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x558a9980ab38 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x558a9980ac78 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x558a9980abe8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a9980adc0 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558a9980ad30 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a9980af08 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x558a9980ae78 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558a9980afc0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x558a9980b0c0 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x558a9980b030 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558a9980b178 <col:60> Inherited "" ""
|-CXXMethodDecl 0x558a9980b238 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x558a9980b338 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x558a9980b4e8 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x558a9980b3f8 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x558a9980bcd8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x558a9980b5a0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x558a9980bc38 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x558a9980bb38 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x558a9980bdb8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558a9980bf08 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x558a9980be78 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x558a9980bfc0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x558a9980c208 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x558a9980c080 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x558a9980c0f8 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x558a9980c460 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x558a9980c2d8 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x558a9980c6b8 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x558a9980c528 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x558a9980c5a0 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x558a9980c778 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x558a9980c9d8 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x558a9980c8e0 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x558a9980caa8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x558a9980caa8

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558a9980dfd0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x558a9980e1a8 prev 0x558a9980dfd0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x558a9980e238 <col:46, col:52> col:46 public
|-TypedefDecl 0x558a9980e260 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558a9925b370 'int'
|-TypedefDecl 0x558a9980fe30 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x558a9980fde0 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x558a9980e710 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x558a9980e610 'type'
|     `-TemplateSpecializationType 0x558a9980e5a0 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x558a9980e480 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x558a9980e460 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x558a9980e440 <col:24> 'unsigned long' 8
|       `-RecordType 0x558a9980e580 'char_array<8>'
|         `-ClassTemplateSpecialization 0x558a9980e4a0 'char_array'
|-TypedefDecl 0x558a9980fee8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x558a9980feb0 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x558a9980fe90 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x558a9980fe30 'type'
|     `-ElaboratedType 0x558a9980fde0 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x558a9980e710 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x558a9980e610 'type'
|         `-TemplateSpecializationType 0x558a9980e5a0 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x558a9980e480 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x558a9980e460 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x558a9980e440 <col:24> 'unsigned long' 8
|           `-RecordType 0x558a9980e580 'char_array<8>'
|             `-ClassTemplateSpecialization 0x558a9980e4a0 'char_array'
|-CXXMethodDecl 0x558a99810068 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x558a9980ff78 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x558a99810158 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x558a99810238 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x558a99810238
|-CXXMethodDecl 0x558a99810508 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x558a99810410 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x558a99810748 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x558a998105c0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558a99810638 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x558a99810918 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x558a99810808 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558a99810880 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x558a99810a78 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x558a99810b48 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x558a99810d98 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x558a99810c08 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x558a99810c80 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x558a99810ff8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x558a99810e68 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x558a99810ee0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x558a998111b8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x558a998110c8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x558a99811378 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x558a99811280 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x558a99811430 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558a998114e0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x558a99811718 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x558a99811590 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558a99811608 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x558a998119b8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x558a998118c0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x558a99811a80 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x558a99811ad0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x558a99811b20 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %struct.char_array.2*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558a9980cbf0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x558a9980cdf8 prev 0x558a9980cbf0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x558a9980df40 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x558a9980def0 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x558a9980ded0 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x558a9980dd80 'type'
|     `-SubstTemplateTypeParmType 0x558a9980dba0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x558a99524410 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a995243b8 'T'
|       `-RecordType 0x558a9980d6f0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x558a9980d608 'sized_array_memory'
|-FieldDecl 0x558a99811b70 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x558a99811bc0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x558a99811bf8 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x558a9980ce90 'Timer *' sugar
|   |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x558a9955c0a8 'T'
|   `-PointerType 0x558a997c0c90 'Timer *'
|     `-RecordType 0x558a997bfde0 'Timer'
|       `-CXXRecord 0x558a99743a78 'Timer'
|-TypedefDecl 0x558a99811cb8 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x558a99811c80 'Timer *&'
|   `-SubstTemplateTypeParmType 0x558a9980ce90 'Timer *' sugar
|     |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558a9955c0a8 'T'
|     `-PointerType 0x558a997c0c90 'Timer *'
|       `-RecordType 0x558a997bfde0 'Timer'
|         `-CXXRecord 0x558a99743a78 'Timer'
|-TypedefDecl 0x558a99811d78 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x558a99811d40 'Timer *const &'
|   `-QualType 0x558a9980ce91 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x558a9980ce90 'Timer *' sugar
|       |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a9955c0a8 'T'
|       `-PointerType 0x558a997c0c90 'Timer *'
|         `-RecordType 0x558a997bfde0 'Timer'
|           `-CXXRecord 0x558a99743a78 'Timer'
|-TypedefDecl 0x558a99811e38 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x558a99811e00 'Timer **'
|   `-SubstTemplateTypeParmType 0x558a9980ce90 'Timer *' sugar
|     |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558a9955c0a8 'T'
|     `-PointerType 0x558a997c0c90 'Timer *'
|       `-RecordType 0x558a997bfde0 'Timer'
|         `-CXXRecord 0x558a99743a78 'Timer'
|-TypedefDecl 0x558a99811ef8 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x558a99811ec0 'Timer *const *'
|   `-QualType 0x558a9980ce91 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x558a9980ce90 'Timer *' sugar
|       |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a9955c0a8 'T'
|       `-PointerType 0x558a997c0c90 'Timer *'
|         `-RecordType 0x558a997bfde0 'Timer'
|           `-CXXRecord 0x558a99743a78 'Timer'
|-TypedefDecl 0x558a99812ad0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x558a99812a80 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x558a99812a60 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x558a998129f0 'type'
|     `-SubstTemplateTypeParmType 0x558a998127b0 'Timer *' sugar
|       |-TemplateTypeParmType 0x558a9952f210 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a9952f1c0 'T'
|       `-PointerType 0x558a997c0c90 'Timer *'
|         `-RecordType 0x558a997bfde0 'Timer'
|           `-CXXRecord 0x558a99743a78 'Timer'
|-TypedefDecl 0x558a99812b38 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x558a99811d40 'Timer *const &'
|   `-QualType 0x558a9980ce91 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x558a9980ce90 'Timer *' sugar
|       |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a9955c0a8 'T'
|       `-PointerType 0x558a997c0c90 'Timer *'
|         `-RecordType 0x558a997bfde0 'Timer'
|           `-CXXRecord 0x558a99743a78 'Timer'
|-TypedefDecl 0x558a99812b90 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558a9925b370 'int'
|-TypedefDecl 0x558a99812bf8 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x558a99811e00 'Timer **'
|   `-SubstTemplateTypeParmType 0x558a9980ce90 'Timer *' sugar
|     |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558a9955c0a8 'T'
|     `-PointerType 0x558a997c0c90 'Timer *'
|       `-RecordType 0x558a997bfde0 'Timer'
|         `-CXXRecord 0x558a99743a78 'Timer'
|-TypedefDecl 0x558a99812c60 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x558a99811ec0 'Timer *const *'
|   `-QualType 0x558a9980ce91 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x558a9980ce90 'Timer *' sugar
|       |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a9955c0a8 'T'
|       `-PointerType 0x558a997c0c90 'Timer *'
|         `-RecordType 0x558a997bfde0 'Timer'
|           `-CXXRecord 0x558a99743a78 'Timer'
|-EnumDecl 0x558a99812cb8 <line:134:5> col:5
| `-EnumConstantDecl 0x558a99812db0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x558a99812d90 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x558a9955d788 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x558a9955d760 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x558a9955d740 <col:40> 'int' 1
|-CXXConstructorDecl 0x558a99812e38 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x558a998130c8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x558a99812ef0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558a99812f90 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x558a99813388 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x558a99813270 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x558a99813648 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x558a99813530 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x558a99813990 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x558a99813870 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x558a99813ca0 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x558a99813b80 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x558a99813f90 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x558a99813dd8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558a99813e50 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x558a998140e8 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x558a998141c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a99814220 <col:30> Inherited
|-CXXMethodDecl 0x558a99814268 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x558a99814318 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a99814370 <col:30> Inherited
|-CXXMethodDecl 0x558a99818480 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x558a99818530 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a99818588 <col:30> Inherited
|-CXXMethodDecl 0x558a998185d0 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x558a99818680 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a998186d8 <col:30> Inherited
|-CXXMethodDecl 0x558a99818720 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x558a998187d0 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a99818828 <col:30> Inherited
|-CXXMethodDecl 0x558a99818870 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x558a99818920 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a99818978 <col:30> Inherited
|-CXXMethodDecl 0x558a998189a0 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558a99818a50 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558a99818b00 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x558a99818cc0 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x558a99818bb0 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558a99818c28 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x558a99818e10 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x558a99818d80 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a99818fb8 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x558a99818ec8 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558a99819070 <col:20>
| `-OptimizeNoneAttr 0x558a998190c8 <col:30>
|-CXXMethodDecl 0x558a998191e8 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x558a998190f0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558a998192a0 <col:20>
| `-OptimizeNoneAttr 0x558a998192f8 <col:30>
|-CXXMethodDecl 0x558a998193b0 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x558a99819320 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a998194f8 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558a99819468 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a99819628 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x558a99819758 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x558a99819828 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x558a998198f8 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x558a99819a38 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x558a998199a8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a99819b80 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558a99819af0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a99819cc8 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x558a99819c38 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558a99819d80 <col:48> Inherited "" ""
|-CXXMethodDecl 0x558a99819e80 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x558a99819df0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558a99819f38 <col:60> Inherited "" ""
|-CXXMethodDecl 0x558a99819ff8 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x558a9981a0f8 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x558a9981a278 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x558a9981a1b8 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x558a9981aa38 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x558a9981a330 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x558a9981a998 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x558a9981a898 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x558a9981ab18 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558a9981ac68 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x558a9981abd8 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x558a9981ad20 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x558a9981af68 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x558a9981ade0 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x558a9981ae58 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x558a9981b128 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x558a9981b038 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x558a9981b378 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x558a9981b1f0 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x558a9981b268 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x558a9981b438 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x558a9981b698 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x558a9981b5a0 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x558a9981b768 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x558a9981b768

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a997da340 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558a997da458 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x558a997da4e8 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x558a997da570 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x558a997da660 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x558a997da760 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x558a997da820 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x558a997da8e0 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x558a997daa08 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x558a997daa08
| `-ParmVarDecl 0x558a997dab18 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x558a9981c518 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x558a9981c518
  `-ParmVarDecl 0x558a9981c628 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a997fbe00 prev 0x558a99747c28 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x558a997fbef8 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x558a997fbf88 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x558a997fc010 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x558a997fc108 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x558a9981c990 <col:43, col:67>
|   `-ReturnStmt 0x558a9981c980 <col:45, col:52>
|     `-CXXConstructExpr 0x558a9981c950 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x558a9981c920 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x558a997fd8f0
|         `-CXXThisExpr 0x558a9981c910 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x558a997fc1c8 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x558a997fc3d0 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x558a997fc278 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x558a997fc2f0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x558a997fc4c8 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x558a997fc590 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x558a9981ca10 <col:39, col:67>
|   `-ReturnStmt 0x558a9981ca00 <col:41, col:48>
|     `-ImplicitCastExpr 0x558a9981c9e8 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x558a9981c9b8 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x558a997fd9d8
|         `-CXXThisExpr 0x558a9981c9a8 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x558a997fc658 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x558a9981ca90 <col:35, col:59>
|   `-ReturnStmt 0x558a9981ca80 <col:37, col:44>
|     `-ImplicitCastExpr 0x558a9981ca68 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x558a9981ca38 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x558a997fda40
|         `-CXXThisExpr 0x558a9981ca28 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x558a997fc7a0 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x558a997fc710 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x558a997fc8e8 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x558a997fc858 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x558a997fcae8 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x558a997fc9a0 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x558a997fca18 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x558a997fcbb8 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x558a997fcc58 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x558a997fcc80 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x558a997fcd98 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x558a997fce38 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x558a997fce98 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x558a997fcfc8 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x558a997fcef8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x558a997fce38 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x558a9981cb68 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x558a9981cb10 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x558a9981cae0 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x558a997450b8
|   |       `-ImplicitCastExpr 0x558a9981cb30 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x558a9981cac8 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x558a9981caa8 <col:17> 'Timer *' lvalue ParmVar 0x558a997fcef8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x558a997fce98 't' 'Timer *'
|   | `-ImplicitCastExpr 0x558a9981cc00 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x558a9981cbc0 <col:41> 'Timer *' lvalue ParmVar 0x558a997fcef8 't_' 'Timer *'
|   `-CompoundStmt 0x558a9981cc50 <col:45, line:44:2>
|-CXXRecordDecl 0x558a997fd090 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x558a997fd1a8 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x558a997fd3f8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x558a997fd278 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x558a997fd2f0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x558a9981cd80 <col:71, line:49:2>
|     `-ReturnStmt 0x558a9981cd70 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x558a9981cd38 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x558a9981cd20 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x558a9981cd00 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x558a9977dff8 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x558a9981cc80 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x558a997fce38
|         | `-DeclRefExpr 0x558a9981cc60 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x558a997fd278 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x558a9981ccd0 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x558a997fce38
|           `-DeclRefExpr 0x558a9981ccb0 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x558a997fd2f0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x558a997fd4c0 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x558a997fd5d8 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x558a997fd7f8 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x558a997fd678 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x558a997fd6f0 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x558a9981cf88 <col:63, line:54:2>
|     `-BinaryOperator 0x558a9981cf68 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x558a9981ce18 <col:6, col:12> 'int' lvalue ->_schedpos1 0x558a997470c8
|       | `-ImplicitCastExpr 0x558a9981ce00 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x558a9981cdd0 <col:6, col:9> 'Timer *' lvalue ->t 0x558a997fce98
|       |     `-ImplicitCastExpr 0x558a9981cdb8 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x558a9981cd98 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x558a997fd6f0 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x558a9981cf50 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x558a9981cf30 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x558a9981ced8 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x558a9981ceb8 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x558a9981ce88 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x558a9981ce48 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x558a997fd6f0 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x558a9981cea0 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x558a9981ce68 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x558a997fd678 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x558a9981cf18 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x558a9981cef8 <col:39> 'int' 1
|-FieldDecl 0x558a997fd8f0 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x558a997fd960 <col:44, col:53> aligned
|   `-ConstantExpr 0x558a997fd940 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x558a997fd8c0 <col:52> 'int' 8
|-FieldDecl 0x558a997fd9d8 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x558a997fda40 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x558a997fdaa8 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x558a9980cb90 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x558a9981b850 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x558a9981b8b0 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x558a9981b910 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x558a9981b970 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558a9981ba60 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x558a9981b9d0 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x558a9981bb28 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x558a9981d3e0 <col:29, line:81:5>
|   `-IfStmt 0x558a9981d3b8 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x558a9981d070 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x558a9981d010 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x558a9981cfe0 <col:6, col:18> '<bound member function type>' .size 0x558a99809bd8
|     |     `-ImplicitCastExpr 0x558a9981d058 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x558a9981cfb0 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x558a9980cb90
|     |         `-CXXThisExpr 0x558a9981cfa0 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x558a9981d260 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x558a9981d248 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x558a9981d228 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x558a99467a58 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x558a9981d098 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x558a997fd8f0
|     | | `-CXXThisExpr 0x558a9981d088 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x558a9981d210 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x558a9981d1e0 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x558a997fce38
|     |     `-CXXMemberCallExpr 0x558a9981d1b8 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x558a9981d188 <col:22, col:34> '<bound member function type>' .unchecked_at 0x558a9980ac78
|     |       | `-MemberExpr 0x558a9981d0d8 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x558a9980cb90
|     |       |   `-CXXThisExpr 0x558a9981d0c8 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x558a9981d168 <col:47> 'int' 0
|     `-ExprWithCleanups 0x558a9981d3a0 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x558a9981d368 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x558a9981d350 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x558a9981d330 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x558a99467f08 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x558a9981d2a8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x558a997fd8f0
|         | `-CXXThisExpr 0x558a9981d298 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x558a9981d318 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x558a9981d2e8 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x558a9981bc68 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x558a9981bbd8 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x558a9981bd30 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x558a9981bdf0 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x558a9981beb0 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x558a9981bfa0 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x558a9981c008 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x558a9981c008
| `-ParmVarDecl 0x558a9981c118 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x558a9981c1b8 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x558a9981c1b8
| `-ParmVarDecl 0x558a9981c2c8 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x558a9981c368 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x558a9981c368
| `-ParmVarDecl 0x558a9981c478 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x558a9981c698 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x558a9981c698
| `-ParmVarDecl 0x558a9981c7a8 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x558a9981c830 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x558a9981c830

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector, %class.Vector.0, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558a99853278 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x558a99853488 prev 0x558a99853278 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x558a99854560 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x558a99854510 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x558a998544f0 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x558a998543a0 'type'
|     `-SubstTemplateTypeParmType 0x558a9980dba0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x558a99524410 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a995243b8 'T'
|       `-RecordType 0x558a9980d6f0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x558a9980d608 'sized_array_memory'
|-FieldDecl 0x558a99854660 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x558a998546b0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x558a998546e8 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x558a99853520 'pollfd' sugar
|   |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x558a9955c0a8 'T'
|   `-RecordType 0x558a998472f0 'pollfd'
|     `-CXXRecord 0x558a99847260 'pollfd'
|-TypedefDecl 0x558a998547a8 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x558a99854770 'pollfd &'
|   `-SubstTemplateTypeParmType 0x558a99853520 'pollfd' sugar
|     |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558a9955c0a8 'T'
|     `-RecordType 0x558a998472f0 'pollfd'
|       `-CXXRecord 0x558a99847260 'pollfd'
|-TypedefDecl 0x558a99854868 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x558a99854830 'const pollfd &'
|   `-QualType 0x558a99853521 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x558a99853520 'pollfd' sugar
|       |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a9955c0a8 'T'
|       `-RecordType 0x558a998472f0 'pollfd'
|         `-CXXRecord 0x558a99847260 'pollfd'
|-TypedefDecl 0x558a998548f8 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x558a998548c0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x558a99853520 'pollfd' sugar
|     |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558a9955c0a8 'T'
|     `-RecordType 0x558a998472f0 'pollfd'
|       `-CXXRecord 0x558a99847260 'pollfd'
|-TypedefDecl 0x558a998549b8 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x558a99854980 'const pollfd *'
|   `-QualType 0x558a99853521 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x558a99853520 'pollfd' sugar
|       |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a9955c0a8 'T'
|       `-RecordType 0x558a998472f0 'pollfd'
|         `-CXXRecord 0x558a99847260 'pollfd'
|-TypedefDecl 0x558a99855590 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x558a99855540 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x558a99855520 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x558a998554b0 'type'
|     `-SubstTemplateTypeParmType 0x558a99855270 'pollfd' sugar
|       |-TemplateTypeParmType 0x558a9952f210 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a9952f1c0 'T'
|       `-RecordType 0x558a998472f0 'pollfd'
|         `-CXXRecord 0x558a99847260 'pollfd'
|-TypedefDecl 0x558a998555f8 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x558a99854830 'const pollfd &'
|   `-QualType 0x558a99853521 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x558a99853520 'pollfd' sugar
|       |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a9955c0a8 'T'
|       `-RecordType 0x558a998472f0 'pollfd'
|         `-CXXRecord 0x558a99847260 'pollfd'
|-TypedefDecl 0x558a99855650 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558a9925b370 'int'
|-TypedefDecl 0x558a998556b8 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x558a998548c0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x558a99853520 'pollfd' sugar
|     |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558a9955c0a8 'T'
|     `-RecordType 0x558a998472f0 'pollfd'
|       `-CXXRecord 0x558a99847260 'pollfd'
|-TypedefDecl 0x558a99855720 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x558a99854980 'const pollfd *'
|   `-QualType 0x558a99853521 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x558a99853520 'pollfd' sugar
|       |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a9955c0a8 'T'
|       `-RecordType 0x558a998472f0 'pollfd'
|         `-CXXRecord 0x558a99847260 'pollfd'
|-EnumDecl 0x558a99855778 <line:134:5> col:5
| `-EnumConstantDecl 0x558a99855870 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x558a99855850 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x558a9955d788 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x558a9955d760 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x558a9955d740 <col:40> 'int' 1
|-CXXConstructorDecl 0x558a998558f8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x558a99855b88 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x558a998559b0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558a99855a50 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x558a99855e48 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x558a99855d30 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x558a99856108 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x558a99855ff0 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x558a99856450 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x558a99856330 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x558a99856760 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x558a99856640 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x558a99856a50 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x558a99856898 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558a99856910 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x558a99856ba8 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x558a99856c88 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a99856ce0 <col:30> Inherited
|-CXXMethodDecl 0x558a99856d28 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x558a99856dd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a99856e30 <col:30> Inherited
|-CXXMethodDecl 0x558a99856ef8 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x558a99856fa8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a99857000 <col:30> Inherited
|-CXXMethodDecl 0x558a99857048 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x558a998570f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a99857150 <col:30> Inherited
|-CXXMethodDecl 0x558a99857198 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x558a99857248 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a998572a0 <col:30> Inherited
|-CXXMethodDecl 0x558a998572e8 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x558a99857398 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a998573f0 <col:30> Inherited
|-CXXMethodDecl 0x558a99857418 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558a998574c8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558a99857578 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x558a99857738 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x558a99857628 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558a998576a0 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x558a99857888 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x558a998577f8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a99857a38 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x558a99857940 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558a99857af0 <col:20>
| `-OptimizeNoneAttr 0x558a99857b48 <col:30>
|-CXXMethodDecl 0x558a99857c68 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x558a99857b70 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558a99857d20 <col:20>
| `-OptimizeNoneAttr 0x558a99857d78 <col:30>
|-CXXMethodDecl 0x558a99857e30 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x558a99857da0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a99857f78 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558a99857ee8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a998580a8 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x558a998581d8 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x558a998582a8 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x558a99858378 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x558a998584b8 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x558a99858428 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a99858600 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558a99858570 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a99858748 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x558a998586b8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558a99858800 <col:48> Inherited "" ""
|-CXXMethodDecl 0x558a99858900 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x558a99858870 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558a998589b8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x558a99858a78 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x558a99858b78 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x558a99858d28 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x558a99858c38 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x558a998594e8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x558a99858de0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x558a99859448 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x558a99859348 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x558a998595c8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558a99859718 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x558a99859688 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x558a998597d0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x558a99859a18 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x558a99859890 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x558a99859908 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x558a99859bd8 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x558a99859ae8 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x558a99859e28 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x558a99859ca0 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x558a99859d18 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x558a99859ee8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x558a9985a168 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x558a9985a050 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x558a9985a238 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x558a9985a238

Layout: <CGRecordLayout
  LLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.3 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558a9985b820 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x558a9985b9f8 prev 0x558a9985b820 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x558a9985ba88 <col:46, col:52> col:46 public
|-TypedefDecl 0x558a9985bab0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558a9925b370 'int'
|-TypedefDecl 0x558a9985d680 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x558a9985d630 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x558a9985bf60 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x558a9985be60 'type'
|     `-TemplateSpecializationType 0x558a9985bdf0 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x558a9985bcd0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x558a9985bcb0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x558a9985bc90 <col:24> 'unsigned long' 24
|       `-RecordType 0x558a9985bdd0 'char_array<24>'
|         `-ClassTemplateSpecialization 0x558a9985bcf0 'char_array'
|-TypedefDecl 0x558a9985d738 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x558a9985d700 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x558a9985d6e0 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x558a9985d680 'type'
|     `-ElaboratedType 0x558a9985d630 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x558a9985bf60 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x558a9985be60 'type'
|         `-TemplateSpecializationType 0x558a9985bdf0 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x558a9985bcd0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x558a9985bcb0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x558a9985bc90 <col:24> 'unsigned long' 24
|           `-RecordType 0x558a9985bdd0 'char_array<24>'
|             `-ClassTemplateSpecialization 0x558a9985bcf0 'char_array'
|-CXXMethodDecl 0x558a9985d8b8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x558a9985d7c8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x558a9985d9a8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x558a9985da88 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x558a9985da88
|-CXXMethodDecl 0x558a9985dd58 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x558a9985dc60 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x558a9985df98 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x558a9985de10 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558a9985de88 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x558a9985e168 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x558a9985e058 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558a9985e0d0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x558a9985e2c8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x558a9985e398 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x558a9985e5e8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x558a9985e458 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x558a9985e4d0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x558a9985e848 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x558a9985e6b8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x558a9985e730 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x558a9985ea08 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x558a9985e918 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x558a9985ebc8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x558a9985ead0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x558a9985ec80 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558a9985ed30 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x558a9985ef68 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x558a9985ede0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558a9985ee58 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x558a9985f208 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x558a9985f110 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x558a9985f2d0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x558a9985f320 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x558a9985f370 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.5 = type { %struct.char_array.6*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558a9985a380 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x558a9985a588 prev 0x558a9985a380 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x558a9985b790 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x558a9985b740 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x558a9985b720 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x558a9985b5d0 'type'
|     `-SubstTemplateTypeParmType 0x558a9985b3f0 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x558a99524410 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a995243b8 'T'
|       `-RecordType 0x558a9985af40 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x558a9985ae60 'sized_array_memory'
|-FieldDecl 0x558a9985f3c0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x558a9985f410 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x558a9985f448 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x558a9985a620 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x558a9955c0a8 'T'
|   `-RecordType 0x558a99852de0 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x558a99852d50 'SelectorInfo'
|-TypedefDecl 0x558a9985f508 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x558a9985f4d0 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x558a9985a620 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558a9955c0a8 'T'
|     `-RecordType 0x558a99852de0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x558a99852d50 'SelectorInfo'
|-TypedefDecl 0x558a9985f5c8 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x558a9985f590 'const SelectSet::SelectorInfo &'
|   `-QualType 0x558a9985a621 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x558a9985a620 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a9955c0a8 'T'
|       `-RecordType 0x558a99852de0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x558a99852d50 'SelectorInfo'
|-TypedefDecl 0x558a9985f658 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x558a9985f620 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x558a9985a620 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558a9955c0a8 'T'
|     `-RecordType 0x558a99852de0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x558a99852d50 'SelectorInfo'
|-TypedefDecl 0x558a9985f718 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x558a9985f6e0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x558a9985a621 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x558a9985a620 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a9955c0a8 'T'
|       `-RecordType 0x558a99852de0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x558a99852d50 'SelectorInfo'
|-TypedefDecl 0x558a99860370 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x558a99860320 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x558a99860300 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x558a99860238 'type'
|     `-LValueReferenceType 0x558a99860200 'const SelectSet::SelectorInfo &'
|       `-QualType 0x558a9985ffa1 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x558a9985ffa0 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x558a9952eae0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x558a9952ea88 'T'
|           `-RecordType 0x558a99852de0 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x558a99852d50 'SelectorInfo'
|-TypedefDecl 0x558a998603d8 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x558a9985f590 'const SelectSet::SelectorInfo &'
|   `-QualType 0x558a9985a621 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x558a9985a620 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a9955c0a8 'T'
|       `-RecordType 0x558a99852de0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x558a99852d50 'SelectorInfo'
|-TypedefDecl 0x558a99860430 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558a9925b370 'int'
|-TypedefDecl 0x558a99860498 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x558a9985f620 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x558a9985a620 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558a9955c0a8 'T'
|     `-RecordType 0x558a99852de0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x558a99852d50 'SelectorInfo'
|-TypedefDecl 0x558a99860500 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x558a9985f6e0 'const SelectSet::SelectorInfo *'
|   `-QualType 0x558a9985a621 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x558a9985a620 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a9955c0a8 'T'
|       `-RecordType 0x558a99852de0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x558a99852d50 'SelectorInfo'
|-EnumDecl 0x558a99860558 <line:134:5> col:5
| `-EnumConstantDecl 0x558a99860650 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x558a99860630 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x558a9955d788 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x558a9955d760 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x558a9955d740 <col:40> 'int' 1
|-CXXConstructorDecl 0x558a998606d8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x558a99860968 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x558a99860790 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558a99860830 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x558a99860c28 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x558a99860b10 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x558a99860ee8 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x558a99860dd0 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x558a99861230 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x558a99861110 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x558a99861540 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x558a99861420 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x558a99861830 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x558a99861678 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558a998616f0 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x558a99861988 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x558a99861a68 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a99861ac0 <col:30> Inherited
|-CXXMethodDecl 0x558a99861b08 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x558a99861bb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a99861c10 <col:30> Inherited
|-CXXMethodDecl 0x558a99861cd8 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x558a99861d88 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a99861de0 <col:30> Inherited
|-CXXMethodDecl 0x558a99861e28 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x558a99861ed8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a99861f30 <col:30> Inherited
|-CXXMethodDecl 0x558a99861f78 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x558a99862028 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a99862080 <col:30> Inherited
|-CXXMethodDecl 0x558a99862120 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x558a998621d0 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a99862228 <col:30> Inherited
|-CXXMethodDecl 0x558a99862250 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558a99862300 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558a998623b0 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x558a99862570 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x558a99862460 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558a998624d8 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x558a998626c0 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x558a99862630 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a99862868 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x558a99862778 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558a99862920 <col:20>
| `-OptimizeNoneAttr 0x558a99862978 <col:30>
|-CXXMethodDecl 0x558a99862a98 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x558a998629a0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558a99862b50 <col:20>
| `-OptimizeNoneAttr 0x558a99862ba8 <col:30>
|-CXXMethodDecl 0x558a99862c60 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x558a99862bd0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a99862da8 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558a99862d18 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a99862ed8 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x558a99863008 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x558a998630d8 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x558a998631a8 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x558a998632e8 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x558a99863258 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a99863430 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558a998633a0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a99863578 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x558a998634e8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558a99863630 <col:48> Inherited "" ""
|-CXXMethodDecl 0x558a99863730 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x558a998636a0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558a998637e8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x558a998638a8 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x558a998639a8 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x558a99863b58 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x558a99863a68 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x558a99864318 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x558a99863c10 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x558a99864278 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x558a99864178 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x558a998643f8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558a99864548 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x558a998644b8 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x558a99864600 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x558a99864848 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x558a998646c0 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x558a99864738 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x558a99864a08 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x558a99864918 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x558a99864c58 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x558a99864ad0 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x558a99864b48 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x558a99864d18 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x558a99864f78 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x558a99864e80 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x558a99865048 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x558a99865048

Layout: <CGRecordLayout
  LLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  NonVirtualBaseLLVMType:%class.Vector.4 = type { %class.vector_memory.5 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a99847ef0 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558a99848008 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x558a99848098 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x558a99852160 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x558a99852250 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x558a99852250
|-CXXMethodDecl 0x558a99852350 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x558a998525f0 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x558a99852408 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x558a99852480 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x558a99852500 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x558a99852860 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x558a998526c0 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x558a99852738 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x558a998527b8 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x558a998529b8 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x558a99852928 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x558a99852a80 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x558a998666f8 <col:34, line:50:5>
|   |-BinaryOperator 0x558a998660c8 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x558a99866088 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x558a99853208
|   | | `-CXXThisExpr 0x558a99866078 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x558a998660b8 <col:23> 'bool' true
|   `-CallExpr 0x558a998666d0 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x558a998666b8 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x558a99866638 <col:2> 'void (long)' lvalue Function 0x558a99866538 'ignore_result' 'void (long)' (FunctionTemplate 0x558a9951f3b8 'ignore_result')
|     `-CallExpr 0x558a998662e0 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x558a998662c8 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558a99866248 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x558a99820490 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x558a99866318 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x558a998661f0 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x558a998661d8 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x558a99866188 <col:22> 'int [2]' lvalue ->_wake_pipe 0x558a998531a8
|       |   |   `-CXXThisExpr 0x558a99866178 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x558a998661b8 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x558a99866348 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x558a99866330 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x558a99866210 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x558a99866360 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x558a99866228 <col:41> 'int' 1
|-CXXMethodDecl 0x558a99852bc0 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x558a99852b30 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x558a99852c88 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x558a99852d28 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x558a99852d50 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x558a99852e68 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x558a99852f08 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x558a99852f68 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x558a99852fd0 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x558a99853080 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x558a99852f08 'read' 'Element *'
|   | `-ImplicitCastExpr 0x558a99866758 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x558a99866718 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x558a99852f68 'write' 'Element *'
|   | `-ImplicitCastExpr 0x558a998667d8 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x558a99866798 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x558a99852fd0 'pollfd' 'int'
|   | `-UnaryOperator 0x558a99866838 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x558a99866818 <col:35> 'int' 1
|   `-CompoundStmt 0x558a998668b0 <line:64:2, line:65:2>
|-FieldDecl 0x558a998531a8 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x558a99853208 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x558a9985a320 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x558a99865130 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x558a99865368 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x558a99865198 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x558a99865210 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x558a99865288 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x558a99865550 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x558a99865438 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x558a998654b8 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x558a99865798 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x558a99865618 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x558a99865698 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x558a998659a8 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x558a99865858 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x558a998658d0 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x558a99865af8 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x558a99865a68 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x558a99865bc0 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x558a99865c80 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x558a99865d48 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x558a99865d48
| `-ParmVarDecl 0x558a99865e58 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x558a99865ef8 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x558a99865ef8
  `-ParmVarDecl 0x558a99866008 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.3, %class.Vector.4 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a997d92a8 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558a997d93c8 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x558a997d9458 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x558a997d94e0 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x558a997d95d0 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x558a997d96d0 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x558a997d9790 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x558a997d9850 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x558a997d9938 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x558a997d9a58 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x558a997d9a58
| `-ParmVarDecl 0x558a997d9b68 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x558a9986b508 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x558a9986b508
  `-ParmVarDecl 0x558a9986b618 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a9957ebe0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558a9957ecf8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x558a9957ed88 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x558a9957ee58 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x558a9957ef40 <line:58:5, col:32> col:12 used operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x558a9957f158 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x558a9957f000 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558a9957f308 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x558a9957f210 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x558a9957f450 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x558a9957f3c0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x558a9957f598 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x558a9957f508 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558a9957f6e0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x558a9957f650 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558a9957f7a8 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x558a9957f8f0 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x558a9957f860 <col:28> col:31 'int'
|-CXXMethodDecl 0x558a9957f9b8 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x558a9957fb00 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x558a9957fa70 <col:28> col:31 'int'
|-CXXMethodDecl 0x558a9957fc78 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x558a9957fbb8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558a9957fdc0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x558a9957fd30 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558a9957fe88 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x558a99580048 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x558a9957ff38 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x558a9957ffb0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558a99580298 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x558a99580108 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558a99580180 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558a99580348 <col:86> "" ""
|-CXXMethodDecl 0x558a995805b8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x558a99580428 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x558a995804a0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558a99580768 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x558a99580678 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x558a99580918 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x558a99580820 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x558a99580be8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x558a995809d0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x558a99580a48 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x558a99580ac0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558a99580ec8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x558a99580cb0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x558a99580d28 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558a99580da0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558a99580f80 <col:115> "" ""
|-AccessSpecDecl 0x558a99580ff0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x558a99581028 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558a99582540 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x558a99582540
| `-ParmVarDecl 0x558a99582648 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x558a995826e8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x558a995826e8
| `-ParmVarDecl 0x558a995827f8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x558a995b7e28 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558a997a9c20 <col:7>
|-CXXConstructorDecl 0x558a995b7f00 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x558a995b7f00
| `-ParmVarDecl 0x558a995b8018 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x558a995b8088 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x558a995b8088
| `-ParmVarDecl 0x558a995b8198 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x558a997ac620 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a997417e8 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558a99741908 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x558a997419a8 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x558a99741a08 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x558a9986ab08 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x558a9986ab08
| `-ParmVarDecl 0x558a9986ac18 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x558a9986acb8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x558a9986acb8
| `-ParmVarDecl 0x558a9986adc8 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x558a9986ae38 <col:11> col:11 implicit ~Pending 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x558a9986b6b8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x558a9986b6b8
| `-ParmVarDecl 0x558a9986b7c8 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x558a9986b838 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x558a9986b838
| `-ParmVarDecl 0x558a9986b948 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x558a99871fb8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x558a99872090 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a997db1a0 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558a997db2b8 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x558a997db348 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x558a997db3d0 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x558a997db490 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x558a9925b370 'int'
|-CXXMethodDecl 0x558a997db558 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x558a997db5f8 <col:45> always_inline
|-CXXMethodDecl 0x558a997db728 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x558a997db660 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x558a997db7d0 <col:49> always_inline
|-CXXConstructorDecl 0x558a997db8c8 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x558a997db8c8
| `-ParmVarDecl 0x558a997db9d8 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x558a997dba78 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x558a997dba78
| `-ParmVarDecl 0x558a997dbb88 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x558a9986af20 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x558a9986af20
|-CXXMethodDecl 0x558a9986b9e8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x558a9986b9e8
| `-ParmVarDecl 0x558a9986baf8 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x558a9986bb68 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x558a9986bb68
  `-ParmVarDecl 0x558a9986bc78 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a99866d20 prev 0x558a99847e60 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x558a99866e18 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x558a99866ea8 <col:22, col:28> col:22 public
|-EnumDecl 0x558a99866ed0 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x558a99866fe8 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x558a99866fc8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x558a99866fb0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x558a99866f90 <col:32> 'int' 1
| `-EnumConstantDecl 0x558a99867090 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x558a99867070 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x558a99867058 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x558a99867038 <col:53> 'int' 1000
|-CXXMethodDecl 0x558a99867130 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x558a998671f0 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x558a998672d8 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x558a9986bd38 <col:34, col:52>
|   `-ReturnStmt 0x558a9986bd28 <col:36, col:43>
|     `-MemberExpr 0x558a9986bcf8 <col:43> 'TimerSet' lvalue ->_timers 0x558a99868fa8
|       `-CXXThisExpr 0x558a9986bce8 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x558a998673c8 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x558a9986bda0 <col:46, col:64>
|   `-ReturnStmt 0x558a9986bd90 <col:48, col:55>
|     `-MemberExpr 0x558a9986bd60 <col:55> 'const TimerSet' lvalue ->_timers 0x558a99868fa8
|       `-CXXThisExpr 0x558a9986bd50 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x558a998674b8 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x558a9986be08 <col:36, col:55>
|   `-ReturnStmt 0x558a9986bdf8 <col:38, col:45>
|     `-MemberExpr 0x558a9986bdc8 <col:45> 'SelectSet' lvalue ->_selects 0x558a99869008
|       `-CXXThisExpr 0x558a9986bdb8 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x558a998675a8 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x558a9986be70 <col:48, col:67>
|   `-ReturnStmt 0x558a9986be60 <col:50, col:57>
|     `-MemberExpr 0x558a9986be30 <col:57> 'const SelectSet' lvalue ->_selects 0x558a99869008
|       `-CXXThisExpr 0x558a9986be20 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x558a99867668 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x558a99867758 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x558a998678c8 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x558a99867808 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x558a99867990 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x558a99867dd8 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x558a99867a40 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x558a99867cc0 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x558a99867ea8 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x558a99867f68 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x558a99868028 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x558a99868168 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x558a998680d8 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x558a99868230 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x558a998682f0 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x558a998683b0 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x558a99868470 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x558a998685b0 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x558a99868520 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x558a99868678 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x558a99868738 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x558a998687d8 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x558a998688a0 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558a998688f0 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558a99868940 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558a99868990 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558a998689e0 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558a99868a30 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558a99868a80 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558a99868ad0 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558a99868b20 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558a99868b70 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x558a99868bc0 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x558a99868cb8 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x558a99868c28 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x558a99868e08 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x558a99868d78 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x558a99868eb0 <line:104:3, col:10> col:3 private
|-FieldDecl 0x558a99868ee8 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x558a99868f48 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x558a99868fa8 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x558a99869008 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x558a99869088 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x558a998690f8 <col:40, col:50> aligned
|   `-ConstantExpr 0x558a998690d8 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x558a99869058 <col:48> 'int' 64
|-FieldDecl 0x558a99869168 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x558a998691c8 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x558a998692c0 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x558a998693d0 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x558a99869430 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x558a998694b0 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x558a99869520 <col:36, col:46> aligned
|   `-ConstantExpr 0x558a99869500 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x558a99869480 <col:44> 'int' 64
|-FieldDecl 0x558a99869598 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x558a998695f8 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x558a99869648 <line:170:3, col:9> col:3 public
|-FieldDecl 0x558a99869688 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x558a998696f0 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x558a99869740 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x558a998698e8 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x558a99869778 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x558a998697f8 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x558a998699e8 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x558a998699e8
|-CXXMethodDecl 0x558a99869af0 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x558a99869bb8 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x558a9986bf68 <col:34, line:217:5>
|   `-ReturnStmt 0x558a9986bf58 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x558a9986bf40 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x558a9986bf10 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x558a997ddd00
|         `-ImplicitCastExpr 0x558a9986bef8 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x558a9986bec8 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x558a997ddc98
|             `-MemberExpr 0x558a9986be98 <col:16> 'const TaskLink' lvalue ->_task_link 0x558a99868ee8
|               `-CXXThisExpr 0x558a9986be88 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x558a99869c78 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x558a99869d38 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x558a9986c690 <col:39, line:226:5>
|   |-DeclStmt 0x558a9986c1b8 <line:223:9, col:68>
|   | `-VarDecl 0x558a9986bf90 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x558a9986c170 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x558a9986c140 <col:24, col:38> '<bound member function type>' .compare_swap 0x558a99585a00
|   |     | `-MemberExpr 0x558a9986c008 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x558a99869168
|   |     |   `-CXXThisExpr 0x558a9986bff8 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x558a9986c0f8 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x558a9986c0e0 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x558a9986c0b8 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x558a9986c098 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x558a9986c1a0 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x558a9986c120 <col:66> 'int' 0
|   |-CStyleCastExpr 0x558a9986c200 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x558a9986c1d0 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x558a9986bf90 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x558a9986c670 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x558a9986c640 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x558a9986c318 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x558a9986c2e8 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x558a9986c2d0 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x558a9986c228 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x558a9986bf90 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x558a9986c2a8 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x558a9986c290 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x558a9986c268 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x558a9986c248 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x558a9986c378 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x558a9986c358 <col:60> 'int' 0
|       `-CallExpr 0x558a9986c5a0 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x558a9986c588 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x558a9986c568 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558a992fa800 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x558a9986c5e0 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x558a9986c468 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x558a9986c5f8 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x558a9986c498 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x558a9986c610 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x558a9986c4d8 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x558a9986c628 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x558a9986c550 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x558a9986c538 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x558a9986c4f8 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x558a99869e80 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x558a99869df0 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x558a99869f48 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x558a9986a008 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x558a9986a130 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x558a9986a1f0 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x558a9986a2b0 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x558a9986a3a0 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x558a9986a400 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x558a9986a490 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x558a9986a858 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x558a9986a858
| `-ParmVarDecl 0x558a9986a968 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x558a9986b028 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x558a9986b028
  `-ParmVarDecl 0x558a9986b138 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a997de010 prev 0x558a997bfca0 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x558a997de148 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x558a997de1d8 <col:33, col:39> col:33 public
|-EnumDecl 0x558a997de200 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x558a997de340 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x558a997de320 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x558a997de300 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x558a997de2c0 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x558a997de2e0 <col:26> 'int' 16
| `-EnumConstantDecl 0x558a997de410 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x558a997de3f0 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x558a997de3d0 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x558a997de390 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x558a997de3b0 <col:47> 'int' 31
|-EnumDecl 0x558a997de460 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x558a997de5a0 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x558a997de6c0 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a997de580 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x558a997de560 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x558a997de520 <col:26> 'int' 1
| |       `-IntegerLiteral 0x558a997de540 <col:29> 'int' 15
| `-EnumConstantDecl 0x558a997de670 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x558a997de6d8 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558a997de650 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x558a997de630 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x558a997de5f0 <col:51> 'int' 1
|         `-IntegerLiteral 0x558a997de610 <col:54> 'int' 10
|-CXXConstructorDecl 0x558a997de8a8 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x558a997de700 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x558a997de780 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x558a997dea38 <line:86:5, col:27> col:12 used Task 'void (Element *)' inline
| `-ParmVarDecl 0x558a997de970 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x558a997deb30 <line:91:5, col:11> col:5 used ~Task 'void () noexcept'
|-CXXMethodDecl 0x558a997decb8 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x558a99742948 <col:42, line:100:5>
|   `-ReturnStmt 0x558a99742938 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x558a99742920 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x558a997428f0 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x558a99741670
|         `-CXXThisExpr 0x558a997428e0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x558a997ded80 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x558a997429c8 <col:36, line:105:5>
|   `-ReturnStmt 0x558a997429b8 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x558a997429a0 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x558a99742970 <col:16> 'void *const' lvalue ->_thunk 0x558a997416d8
|         `-CXXThisExpr 0x558a99742960 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x558a997dee40 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x558a99742a48 <col:37, line:110:5>
|   `-ReturnStmt 0x558a99742a38 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x558a99742a20 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x558a997429f0 <col:16> 'Element *const' lvalue ->_owner 0x558a99741798
|         `-CXXThisExpr 0x558a997429e0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x558a997def00 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x558a997defc8 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x558a997df088 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x558a997df148 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x558a99742b30 <col:35, line:137:5>
|   `-ReturnStmt 0x558a99742b20 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x558a99742ae8 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x558a99742ab8 <col:16, col:24> '<bound member function type>' ->router 0x558a997d24b0
|         `-ImplicitCastExpr 0x558a99742b08 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x558a99742aa0 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x558a99742a70 <col:16> 'Element *const' lvalue ->_owner 0x558a99741798
|               `-CXXThisExpr 0x558a99742a60 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x558a997df208 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x558a997df408 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x558a997df2b8 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x558a997df330 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x558a997df618 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x558a997df4c8 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x558a997df540 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x558a997df6e8 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x558a99742c40 <col:35, line:181:5>
|   `-ReturnStmt 0x558a99742c30 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x558a99742c18 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x558a99742c00 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x558a99742bd0 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x558a997412a8
|           `-MemberExpr 0x558a99742b88 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x558a997413c8
|             `-MemberExpr 0x558a99742b58 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x558a997415f8
|               `-CXXThisExpr 0x558a99742b48 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x558a997402f0 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x558a99742d58 <col:30, line:192:5>
|   `-BinaryOperator 0x558a99742d38 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x558a99742ce0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x558a997412a8
|     | `-MemberExpr 0x558a99742c98 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x558a997413c8
|     |   `-MemberExpr 0x558a99742c68 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x558a997415f8
|     |     `-CXXThisExpr 0x558a99742c58 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x558a99742d20 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x558a99742d10 <col:32> 'bool' false
|-CXXMethodDecl 0x558a997403b0 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x558a997430a8 <col:30, line:206:5>
|   |-BinaryOperator 0x558a99742e50 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x558a99742df8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x558a997412a8
|   | | `-MemberExpr 0x558a99742db0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x558a997413c8
|   | |   `-MemberExpr 0x558a99742d80 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x558a997415f8
|   | |     `-CXXThisExpr 0x558a99742d70 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x558a99742e38 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x558a99742e28 <col:32> 'bool' true
|   |-CallExpr 0x558a99742ef0 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x558a99742ed8 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558a99742eb8 <col:9> 'void ()' lvalue Function 0x558a997d8e60 'click_fence' 'void ()'
|   `-IfStmt 0x558a99743090 <line:204:9, line:205:32>
|     |-BinaryOperator 0x558a99742fd0 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x558a99742fa0 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x558a99742f50 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x558a99741a08
|     | |   `-MemberExpr 0x558a99742f20 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x558a99741a80
|     | |     `-CXXThisExpr 0x558a99742f10 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x558a99742fb8 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x558a99742f80 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x558a99743050 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x558a99743000 <col:13> '<bound member function type>' ->complete_schedule 0x558a99742480
|       | `-CXXThisExpr 0x558a99742ff0 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x558a99743078 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x558a99743030 <col:31> 'int' 0
|-CXXMethodDecl 0x558a99740470 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x558a997431d0 <col:35, line:240:5>
|   `-BinaryOperator 0x558a997431b0 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x558a99743158 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x558a997412a8
|     | `-MemberExpr 0x558a99743110 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x558a997413c8
|     |   `-MemberExpr 0x558a997430e0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x558a997415f8
|     |     `-CXXThisExpr 0x558a997430d0 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x558a99743198 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x558a99743188 <col:32> 'bool' true
|-CXXMethodDecl 0x558a99740530 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x558a997433e8 <col:37, line:253:5>
|   |-BinaryOperator 0x558a997432c8 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x558a99743270 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x558a997412a8
|   | | `-MemberExpr 0x558a99743228 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x558a997413c8
|   | |   `-MemberExpr 0x558a997431f8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x558a997415f8
|   | |     `-CXXThisExpr 0x558a997431e8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x558a997432b0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x558a997432a0 <col:32> 'bool' false
|   `-BinaryOperator 0x558a997433c8 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x558a99743370 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x558a99741308
|     | `-MemberExpr 0x558a99743328 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x558a997413c8
|     |   `-MemberExpr 0x558a997432f8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x558a997415f8
|     |     `-CXXThisExpr 0x558a997432e8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x558a997433b0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x558a997433a0 <col:41> 'bool' true
|-CXXMethodDecl 0x558a997405f0 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x558a99743568 <col:37, line:264:5>
|   |-BinaryOperator 0x558a997434e8 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x558a99743490 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x558a99741308
|   | | `-MemberExpr 0x558a99743448 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x558a997413c8
|   | |   `-MemberExpr 0x558a99743418 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x558a997415f8
|   | |     `-CXXThisExpr 0x558a99743408 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x558a997434d0 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x558a997434c0 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x558a99743548 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x558a99743518 <col:9> '<bound member function type>' ->reschedule 0x558a997403b0
|       `-CXXThisExpr 0x558a99743508 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x558a99740738 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x558a997406a8 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x558a99740808 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x558a99740950 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x558a997408c0 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x558a99740aa0 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x558a99740a10 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x558a99740b68 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x558a99740c28 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x558a99740cc8 <col:53> "" ""
|-CXXMethodDecl 0x558a99740d60 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x558a99740e00 <col:47> "" ""
|-AccessSpecDecl 0x558a99740e70 <line:303:3, col:10> col:3 private
|-FieldDecl 0x558a99740eb0 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x558a99740f18 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x558a99740f68 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558a99741088 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x558a99741118 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x558a99741248 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x558a997412a8 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x558a99741308 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x558a998716e8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x558a998717c0 <col:9> col:9 implicit ~ 'void () noexcept' inline default trivial
| | |-CXXConstructorDecl 0x558a99871a78 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x558a99871a78
| | | `-ParmVarDecl 0x558a99871b88 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x558a99871c28 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x558a99871c28
| |   `-ParmVarDecl 0x558a99871d38 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x558a997413c8 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x558a99741428 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x558a997413c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x558a99741248 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x558a99741480 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x558a997413c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x558a997412a8 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x558a997414d8 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x558a997413c8 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x558a99741308 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x558a99741530 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x558a998715f8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x558a99871f58 <col:11>
| |-CXXConstructorDecl 0x558a998718c8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x558a998718c8
| | `-ParmVarDecl 0x558a998719d8 <col:11> col:11 'const Task::Status &'
| |-CXXConstructorDecl 0x558a99871dd8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x558a99871dd8
| | `-ParmVarDecl 0x558a99871ee8 <col:11> col:11 'Task::Status &&'
| `-CXXDestructorDecl 0x558a9995ae98 <col:11> col:11 implicit ~Status 'void () noexcept' inline default trivial
|-FieldDecl 0x558a997415f8 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x558a99741670 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x558a997416d8 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x558a99741738 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x558a99741798 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x558a997417e8 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558a99741908 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x558a997419a8 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x558a99741a08 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x558a9986ab08 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x558a9986ab08
| | `-ParmVarDecl 0x558a9986ac18 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x558a9986acb8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x558a9986acb8
| | `-ParmVarDecl 0x558a9986adc8 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x558a9986ae38 <col:11> col:11 implicit ~Pending 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x558a9986b6b8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x558a9986b6b8
| | `-ParmVarDecl 0x558a9986b7c8 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x558a9986b838 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x558a9986b838
| | `-ParmVarDecl 0x558a9986b948 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x558a99871fb8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x558a99872090 <col:11>
|-FieldDecl 0x558a99741a80 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x558a99741bc8 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x558a99741b08 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x558a99741d78 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x558a99741c88 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x558a99741e40 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x558a99741f00 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x558a99741fc0 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x558a99743678 <col:41, line:355:5>
|   `-ReturnStmt 0x558a99743668 <line:354:9, col:38>
|     `-BinaryOperator 0x558a99743648 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x558a99743618 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x558a997435c8 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x558a99741a08
|       |   `-MemberExpr 0x558a99743598 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x558a99741a80
|       |     `-CXXThisExpr 0x558a99743588 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x558a99743630 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x558a997435f8 <col:38> 'int' 0
|-CXXMethodDecl 0x558a99742080 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x558a997421c0 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x558a99742130 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x558a99742338 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x558a99742278 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x558a99742480 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x558a997423f0 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x558a99742548 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x558a99742710 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x558a997425f8 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x558a99742678 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x558a99742810 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x558a997428a0 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a99747178 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x558a997472a8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x558a99747d98 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a99743a78 prev 0x558a997bfd50 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558a99743b70 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x558a99743c00 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x558a99743c60 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x558a99743d08 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x558a99743e28 <col:5, col:12> col:12 implicit struct do_nothing_t
| |-CXXConstructorDecl 0x558a9995a988 <col:12> col:12 implicit constexpr do_nothing_t 'void ()' inline default trivial noexcept-unevaluated 0x558a9995a988
| |-CXXConstructorDecl 0x558a9995aa60 <col:12> col:12 implicit constexpr do_nothing_t 'void (const Timer::do_nothing_t &)' inline default trivial noexcept-unevaluated 0x558a9995aa60
| | `-ParmVarDecl 0x558a9995ab48 <col:12> col:12 'const Timer::do_nothing_t &'
| `-CXXConstructorDecl 0x558a9995abe8 <col:12> col:12 implicit constexpr do_nothing_t 'void (Timer::do_nothing_t &&)' inline default trivial noexcept-unevaluated 0x558a9995abe8
|   `-ParmVarDecl 0x558a9995acf8 <col:12> col:12 'Timer::do_nothing_t &&'
|-CXXConstructorDecl 0x558a99743fc8 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x558a99743f08 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x558a99744218 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x558a99744088 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x558a99744108 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x558a99744370 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x558a997442e0 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x558a997444f8 <line:47:5, col:21> col:5 used Timer 'void (Task *)'
| `-ParmVarDecl 0x558a99744430 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x558a997446a8 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x558a997445e8 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x558a997447a0 <line:55:5, line:58:5> line:55:12 used ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x558a99747f70 <col:21, line:58:5>
|   `-IfStmt 0x558a99747f58 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x558a99747ec0 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x558a99747e90 <col:6> '<bound member function type>' ->scheduled 0x558a99744ff8
|     |   `-ImplicitCastExpr 0x558a99747ee0 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x558a99747e80 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x558a99747f38 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x558a99747f08 <col:6> '<bound member function type>' ->unschedule 0x558a99746620
|         `-CXXThisExpr 0x558a99747ef8 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x558a997448a0 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x558a99748110 <col:26, line:65:5>
|   |-BinaryOperator 0x558a99748030 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x558a99747fc8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x558a997472a8
|   | | `-MemberExpr 0x558a99747f98 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x558a99747368
|   | |   `-CXXThisExpr 0x558a99747f88 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x558a99748018 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558a99747ff8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x558a997477c8 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x558a997480f0 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x558a99748060 <col:2> 'void *' lvalue ->_thunk 0x558a997473e8
|     | `-CXXThisExpr 0x558a99748050 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x558a997480c8 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x558a99748090 <col:20> 'int' 1
|-CXXMethodDecl 0x558a997449e0 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x558a99744950 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x558a99748270 <col:52, line:71:5>
|   |-CStyleCastExpr 0x558a99748160 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x558a99748130 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x558a99744950 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x558a99748250 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x558a99748220 <col:2> '<bound member function type>' ->assign 0x558a997448a0
|       `-CXXThisExpr 0x558a99748210 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x558a99744bb0 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x558a99744a98 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x558a99744b18 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x558a997f8750 <col:58, line:79:5>
|   |-BinaryOperator 0x558a997f8698 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x558a997f8630 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x558a997472a8
|   | | `-MemberExpr 0x558a997482a0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x558a99747368
|   | |   `-CXXThisExpr 0x558a99748290 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x558a997f8680 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x558a997f8660 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x558a99744a98 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x558a997f8730 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x558a997f86c8 <col:2> 'void *' lvalue ->_thunk 0x558a997473e8
|     | `-CXXThisExpr 0x558a997f86b8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x558a997f8718 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x558a997f86f8 <col:11> 'void *' lvalue ParmVar 0x558a99744b18 'user_data' 'void *'
|-CXXMethodDecl 0x558a99744d00 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x558a99744c70 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x558a997f88e8 <col:35, line:87:5>
|   |-BinaryOperator 0x558a997f8818 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x558a997f87b0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x558a997472a8
|   | | `-MemberExpr 0x558a997f8780 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x558a99747368
|   | |   `-CXXThisExpr 0x558a997f8770 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x558a997f8800 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558a997f87e0 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x558a997479a0 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x558a997f88c8 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x558a997f8848 <col:2> 'void *' lvalue ->_thunk 0x558a997473e8
|     | `-CXXThisExpr 0x558a997f8838 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x558a997f88b0 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x558a997f8898 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x558a997f8878 <col:11> 'Element *' lvalue ParmVar 0x558a99744c70 'element' 'Element *'
|-CXXMethodDecl 0x558a99744e48 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x558a99744db8 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x558a997f8a80 <col:29, line:94:5>
|   |-BinaryOperator 0x558a997f89b0 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x558a997f8948 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x558a997472a8
|   | | `-MemberExpr 0x558a997f8918 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x558a99747368
|   | |   `-CXXThisExpr 0x558a997f8908 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x558a997f8998 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558a997f8978 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x558a99747b78 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x558a997f8a60 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x558a997f89e0 <col:2> 'void *' lvalue ->_thunk 0x558a997473e8
|     | `-CXXThisExpr 0x558a997f89d0 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x558a997f8a48 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x558a997f8a30 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x558a997f8a10 <col:11> 'Task *' lvalue ParmVar 0x558a99744db8 'task' 'Task *'
|-CXXMethodDecl 0x558a99744f38 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x558a997f8b60 <col:37, line:100:5>
|   `-ReturnStmt 0x558a997f8b50 <line:99:2, col:19>
|     `-BinaryOperator 0x558a997f8b30 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x558a997f8b00 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x558a997f8ab0 <col:9> 'Element *const' lvalue ->_owner 0x558a99747448
|       |   `-CXXThisExpr 0x558a997f8aa0 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x558a997f8b18 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x558a997f8ae0 <col:19> 'int' 0
|-CXXMethodDecl 0x558a99744ff8 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x558a997f8c20 <col:35, line:105:5>
|   `-ReturnStmt 0x558a997f8c10 <line:104:2, col:23>
|     `-BinaryOperator 0x558a997f8bf0 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x558a997f8bd8 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x558a997f8b88 <col:9> 'const int' lvalue ->_schedpos1 0x558a997470c8
|       |   `-CXXThisExpr 0x558a997f8b78 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x558a997f8bb8 <col:23> 'int' 0
|-CXXMethodDecl 0x558a997450b8 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x558a997f8c88 <col:51, line:118:5>
|   `-ReturnStmt 0x558a997f8c78 <line:117:2, col:9>
|     `-MemberExpr 0x558a997f8c48 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x558a99747128
|       `-CXXThisExpr 0x558a997f8c38 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x558a99745178 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x558a997f91e0 <col:37, line:136:5>
|   `-IfStmt 0x558a997f91b8 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x558a997f8d48 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x558a997f8d30 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x558a997f8d10 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x558a997f8ce0 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x558a99751e28
|     |       `-MemberExpr 0x558a997f8cb0 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x558a99747128
|     |         `-CXXThisExpr 0x558a997f8ca0 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x558a997f9128 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x558a997f9110 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x558a997f90e0 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x558a997f90c8 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x558a997f9090 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x558a997f9078 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x558a997f9058 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x558a99780600 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x558a997f8ff8 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x558a997f8fe0 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x558a997f8f08 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x558a997f8ef0 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x558a997f8ed0 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x558a997802c0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x558a997f8e70 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x558a997f8d70 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x558a99747128
|     |         |     |   `-CXXThisExpr 0x558a997f8d60 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x558a997f8eb8 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x558a997f8ea0 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x558a997f8e50 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x558a997f8e38 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x558a997f8dd8 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x558a99773920 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x558a997f9040 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x558a997f9028 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x558a997f8fc0 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x558a997f8fa8 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x558a997f8f78 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x558a995cee70 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x558a997f91a8 <line:135:6, col:13>
|       `-CXXConstructExpr 0x558a997f9178 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x558a997f9148 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x558a99747128
|           `-CXXThisExpr 0x558a997f9138 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x558a99745238 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x558a997f92c8 <col:35, line:141:5>
|   `-ReturnStmt 0x558a997f92b8 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x558a997f9280 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x558a997f9250 <col:9, col:17> '<bound member function type>' ->router 0x558a997d24b0
|         `-ImplicitCastExpr 0x558a997f92a0 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x558a997f9238 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x558a997f9208 <col:9> 'Element *const' lvalue ->_owner 0x558a99747448
|               `-CXXThisExpr 0x558a997f91f8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x558a997452f8 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x558a997f9348 <col:37, line:146:5>
|   `-ReturnStmt 0x558a997f9338 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x558a997f9320 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x558a997f92f0 <col:9> 'Element *const' lvalue ->_owner 0x558a99747448
|         `-CXXThisExpr 0x558a997f92e0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x558a997453b8 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x558a997f93c8 <col:41, line:151:5>
|   `-ReturnStmt 0x558a997f93b8 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x558a997f93a0 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x558a997f9370 <col:9> 'RouterThread *const' lvalue ->_thread 0x558a997474a8
|         `-CXXThisExpr 0x558a997f9360 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x558a99745480 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x558a99745640 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x558a99745530 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x558a997455a8 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558a99747d88 <col:50> 'bool' false
|-CXXMethodDecl 0x558a997457c8 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x558a99745700 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x558a99745910 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x558a99745880 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x558a99745a58 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x558a997459c8 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x558a99745ba0 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x558a99745b10 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x558a99745ce8 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x558a99745c58 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x558a99745db0 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x558a997f9530 <col:32, line:223:5>
|   `-ExprWithCleanups 0x558a997f9518 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x558a997f94c0 <col:2, col:47> 'void'
|       |-MemberExpr 0x558a997f93f0 <col:2> '<bound member function type>' ->schedule_at_steady 0x558a99745910
|       | `-CXXThisExpr 0x558a997f93e0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x558a997f9500 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x558a997f94e8 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x558a997f94a0 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x558a997f9488 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x558a997f9458 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x558a995cee70 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x558a99745ef0 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x558a99745e60 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x558a99746038 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x558a99745fa8 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558a997f96b8 <col:56, line:241:5>
|   `-ExprWithCleanups 0x558a997f96a0 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x558a997f9648 <col:2, col:40> 'void'
|       |-MemberExpr 0x558a997f9558 <col:2> '<bound member function type>' ->schedule_after 0x558a99745ef0
|       | `-CXXThisExpr 0x558a997f9548 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x558a997f9688 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x558a997f9670 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x558a997f9608 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x558a997f95d8 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x558a997f9598 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x558a99745fa8 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x558a997f95f0 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x558a997f95b8 <col:38> 'int' 0
|-CXXMethodDecl 0x558a99746180 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x558a997460f0 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558a997f9928 <col:58, line:249:5>
|   `-ExprWithCleanups 0x558a997f9910 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x558a997f98b8 <col:2, col:49> 'void'
|       |-MemberExpr 0x558a997f96e0 <col:2> '<bound member function type>' ->schedule_after 0x558a99745ef0
|       | `-CXXThisExpr 0x558a997f96d0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x558a997f98f8 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x558a997f98e0 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x558a997f9860 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x558a997f9848 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x558a997f97b8 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x558a99753c18 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x558a997f98a0 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x558a997f9888 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x558a997f9798 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x558a997460f0 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558a997462c8 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x558a99746238 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x558a997f9b08 <col:58, line:261:5>
|   `-ExprWithCleanups 0x558a997f9af0 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x558a997f9a98 <col:2, col:38> 'void'
|       |-MemberExpr 0x558a997f9950 <col:2> '<bound member function type>' ->schedule_at_steady 0x558a99745910
|       | `-CXXThisExpr 0x558a997f9940 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x558a997f9ad8 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x558a997f9ac0 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x558a997f9a60 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x558a997f9a48 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x558a997f9a28 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x558a997802c0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x558a997f99f8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x558a997f99e0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x558a997f9990 <col:21> 'Timestamp' lvalue ->_expiry_s 0x558a99747128
|             |     `-CXXThisExpr 0x558a997f9980 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x558a997f99c0 <col:33> 'const Timestamp' lvalue ParmVar 0x558a99746238 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x558a99746410 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x558a99746380 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558a997f9de0 <col:58, line:270:5>
|   `-ExprWithCleanups 0x558a997f9dc8 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x558a997f9d70 <col:2, col:79> 'void'
|       |-MemberExpr 0x558a997f9b30 <col:2> '<bound member function type>' ->schedule_at_steady 0x558a99745910
|       | `-CXXThisExpr 0x558a997f9b20 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x558a997f9db0 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x558a997f9d98 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x558a997f9d30 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x558a997f9c68 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x558a997f9c50 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x558a997f9be0 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x558a997f9bb0 <col:31, col:41> '<bound member function type>' .sec 0x558a995d0968
|             | |     `-ImplicitCastExpr 0x558a997f9c00 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x558a997f9b80 <col:31> 'Timestamp' lvalue ->_expiry_s 0x558a99747128
|             | |         `-CXXThisExpr 0x558a997f9b70 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x558a997f9c38 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x558a997f9c18 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x558a99746380 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x558a997f9cf8 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x558a997f9cc8 <col:60, col:70> '<bound member function type>' .subsec 0x558a995d1060
|                 `-ImplicitCastExpr 0x558a997f9d18 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x558a997f9c98 <col:60> 'Timestamp' lvalue ->_expiry_s 0x558a99747128
|                     `-CXXThisExpr 0x558a997f9c88 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x558a99746558 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x558a997464c8 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558a997fa118 <col:60, line:279:5>
|   `-ExprWithCleanups 0x558a997fa100 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x558a997fa0a8 <col:2, col:65> 'void'
|       |-MemberExpr 0x558a997f9e08 <col:2> '<bound member function type>' ->schedule_at_steady 0x558a99745910
|       | `-CXXThisExpr 0x558a997f9df8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x558a997fa0e8 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x558a997fa0d0 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x558a997fa070 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x558a997fa058 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x558a997fa038 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x558a997802c0 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x558a997f9fd8 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x558a997f9fc0 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x558a997f9e48 <col:21> 'Timestamp' lvalue ->_expiry_s 0x558a99747128
|             |     `-CXXThisExpr 0x558a997f9e38 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x558a997fa020 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x558a997fa008 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x558a997f9f68 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x558a997f9f50 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x558a997f9f20 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x558a99753c18 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x558a997f9fa8 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x558a997f9f90 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x558a997f9f00 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x558a997464c8 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558a99746620 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x558a997466e0 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x558a997fa5e0 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x558a997fa170 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x558a997fa140 <col:2> '<bound member function type>' ->unschedule 0x558a99746620
|   |   `-CXXThisExpr 0x558a997fa130 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x558a997fa5c8 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x558a997fa590 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x558a997fa578 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558a997fa228 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x558a99467f08 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x558a997fa1a0 <col:2> 'Timestamp' lvalue ->_expiry_s 0x558a99747128
|       | `-CXXThisExpr 0x558a997fa190 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x558a997fa210 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x558a997fa1e0 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x558a997467a0 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x558a997fa938 <col:42, line:310:5>
|   |-IfStmt 0x558a997fa780 <line:306:2, line:307:23>
|   | |-CallExpr 0x558a997fa6b0 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x558a997fa698 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x558a997fa638 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x558a99771d90 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x558a997fa770 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x558a997fa758 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x558a997fa728 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x558a997fa710 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x558a997fa6e0 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x558a997fa928 <line:309:2, col:33>
|     `-ExprWithCleanups 0x558a997fa910 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x558a997fa8e0 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558a997fa8c8 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x558a997fa888 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x558a997fa870 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x558a997fa840 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x558a99753f30 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x558a997fa8b0 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x558a997fa820 <col:30> 'int' 500
|-CXXMethodDecl 0x558a997468e0 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x558a99746850 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558a99746988 <col:69> "" ""
|-CXXMethodDecl 0x558a99746a98 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x558a99746a08 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558a99746b40 <col:70> "" ""
|-CXXMethodDecl 0x558a99746c50 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x558a99746bc0 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558a99746cf8 <col:71> "" ""
|-CXXMethodDecl 0x558a99746e08 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x558a99746d78 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558a99746eb0 <col:72> "" ""
|-EnumDecl 0x558a99746f20 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x558a99747020 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x558a99747070 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558a99747000 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x558a99746fe0 <col:25> 'int' 1
|-AccessSpecDecl 0x558a99747088 <line:339:3, col:10> col:3 private
|-FieldDecl 0x558a997470c8 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x558a99747128 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x558a99747178 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x558a997472a8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x558a99747d98 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x558a99747368 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x558a997473e8 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x558a99747448 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x558a997474a8 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x558a997475f8 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x558a99747508 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x558a997477c8 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x558a997476b0 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x558a99747730 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x558a997479a0 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x558a99747888 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x558a99747908 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x558a99747b78 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x558a99747a60 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x558a99747ae0 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x558a99747d48 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct NotifierSignal::vmpair
         0 |   class atomic_uint32_t * value
         8 |   uint32_t mask
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a99879828 <../dummy_inc/click/notifier.hh:50:5, line:53:5> line:50:12 referenced struct vmpair definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558a99879948 <col:5, col:12> col:12 implicit struct vmpair
|-FieldDecl 0x558a998799e8 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
|-FieldDecl 0x558a99879a48 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
`-CXXDestructorDecl 0x558a99882e98 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x558a99882e98

Layout: <CGRecordLayout
  LLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  NonVirtualBaseLLVMType:%"struct.NotifierSignal::vmpair" = type { %class.atomic_uint32_t*, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a99879ab0 <../dummy_inc/click/notifier.hh:54:5, line:57:5> line:54:11 referenced union vmvalue definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558a99879bc8 <col:5, col:11> col:11 implicit union vmvalue
|-FieldDecl 0x558a99879c68 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
|-FieldDecl 0x558a99879cf8 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
|-CXXConstructorDecl 0x558a99881a30 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558a99881e68 <col:11>
|-CXXConstructorDecl 0x558a99881b38 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x558a99881b38
| `-ParmVarDecl 0x558a99881c48 <col:11> col:11 'const NotifierSignal::vmvalue &'
|-CXXConstructorDecl 0x558a99881ce8 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x558a99881ce8
| `-ParmVarDecl 0x558a99881df8 <col:11> col:11 'NotifierSignal::vmvalue &&'
`-CXXDestructorDecl 0x558a99882b60 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"union.NotifierSignal::vmvalue" = type { %class.atomic_uint32_t* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a99877760 prev 0x558a997bfe00 <../dummy_inc/click/notifier.hh:12:1, line:71:1> line:12:7 referenced class NotifierSignal definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558a99877858 <col:1, col:7> col:7 implicit referenced class NotifierSignal
|-AccessSpecDecl 0x558a998778e8 <line:13:3, col:9> col:3 public
|-TypedefDecl 0x558a99877a18 <line:14:5, col:61> col:36 referenced unspecified_bool_type 'bool (NotifierSignal::*)() const'
| `-MemberPointerType 0x558a99877990 'bool (NotifierSignal::*)() const'
|   |-RecordType 0x558a997bfe90 'NotifierSignal'
|   | `-CXXRecord 0x558a99877760 'NotifierSignal'
|   `-ParenType 0x558a99877930 'bool () const' sugar
|     `-FunctionProtoType 0x558a99306730 'bool () const' const cdecl
|       `-BuiltinType 0x558a9925b2f0 'bool'
|-CXXConstructorDecl 0x558a99877aa8 <line:16:5, col:27> col:12 used NotifierSignal 'void ()' inline
|-CXXConstructorDecl 0x558a99877ce8 <line:17:5, col:64> col:12 used NotifierSignal 'void (atomic_uint32_t *, uint32_t)' inline
| |-ParmVarDecl 0x558a99877b60 <col:27, col:44> col:44 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x558a99877bd8 <col:51, col:60> col:60 mask 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x558a99877e98 <line:18:5, col:50> col:12 used NotifierSignal 'void (const NotifierSignal &)' inline
| `-ParmVarDecl 0x558a99877dd8 <col:27, col:49> col:49 x 'const NotifierSignal &'
|-CXXDestructorDecl 0x558a99877f90 <line:19:5, col:28> col:12 used ~NotifierSignal 'void () noexcept' inline
|-CXXMethodDecl 0x558a998780b8 <line:21:5, col:46> col:34 idle_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x558a99878178 <line:22:5, col:46> col:34 busy_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x558a99878238 <line:23:5, col:53> col:34 overderived_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x558a998782f8 <line:24:5, col:55> col:34 used uninitialized_signal 'NotifierSignal ()' static inline
|-CXXMethodDecl 0x558a998783e8 <line:26:5, col:26> col:17 used active 'bool () const' inline
|-CXXConversionDecl 0x558a99878558 <line:27:5, col:45> col:12 operator bool (NotifierSignal::*)() const 'NotifierSignal::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x558a998786d8 <line:29:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x558a99878618 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x558a998787a0 <line:31:5, col:24> col:17 idle 'bool () const' inline
|-CXXMethodDecl 0x558a99878860 <line:32:5, col:24> col:17 busy 'bool () const' inline
|-CXXMethodDecl 0x558a99878920 <line:33:5, col:31> col:17 overderived 'bool () const' inline
|-CXXMethodDecl 0x558a998789e0 <line:34:5, col:31> col:17 used initialized 'bool () const' inline
|-FriendDecl 0x558a99878c98 <line:36:5, col:76> col:17
| `-FunctionDecl 0x558a99878bd8 parent 0x558a9925b278 <col:5, col:76> col:17 used operator== 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x558a99878a90 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x558a99878b08 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-FriendDecl 0x558a99878eb8 <line:37:5, col:76> col:17
| `-FunctionDecl 0x558a99878df8 parent 0x558a9925b278 <col:5, col:76> col:17 operator!= 'bool (const NotifierSignal &, const NotifierSignal &)'
|   |-ParmVarDecl 0x558a99878ce8 <col:28, col:50> col:50 a 'const NotifierSignal &'
|   `-ParmVarDecl 0x558a99878d60 <col:53, col:75> col:75 b 'const NotifierSignal &'
|-CXXMethodDecl 0x558a99878ff8 <line:39:5, col:54> col:21 operator= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x558a99878f08 <col:31, col:53> col:53 x 'const NotifierSignal &'
|-CXXMethodDecl 0x558a99879140 <line:40:5, col:55> col:21 used operator+= 'NotifierSignal &(const NotifierSignal &)'
| `-ParmVarDecl 0x558a998790b0 <col:32, col:54> col:54 x 'const NotifierSignal &'
|-FriendDecl 0x558a99879408 <line:41:5, col:78> col:27
| `-FunctionDecl 0x558a99879348 parent 0x558a9925b278 <col:5, col:78> col:27 operator+ 'NotifierSignal (NotifierSignal, const NotifierSignal &)'
|   |-ParmVarDecl 0x558a998791f8 <col:37, col:52> col:52 a 'NotifierSignal' destroyed
|   `-ParmVarDecl 0x558a99879270 <col:55, col:77> col:77 b 'const NotifierSignal &'
|-CXXMethodDecl 0x558a99879518 <line:43:5, col:39> col:17 used swap 'void (NotifierSignal &)' inline
| `-ParmVarDecl 0x558a99879458 <col:22, col:38> col:38 x 'NotifierSignal &'
|-CXXMethodDecl 0x558a99879698 <line:45:5, col:36> col:12 unparse 'String (Router *) const'
| `-ParmVarDecl 0x558a998795d0 <col:20, col:28> col:28 router 'Router *'
|-CXXMethodDecl 0x558a99879760 <line:47:5, col:35> col:17 static_initialize 'void ()' static
|-AccessSpecDecl 0x558a99879800 <line:49:3, col:10> col:3 private
|-CXXRecordDecl 0x558a99879828 <line:50:5, line:53:5> line:50:12 referenced struct vmpair definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558a99879948 <col:5, col:12> col:12 implicit struct vmpair
| |-FieldDecl 0x558a998799e8 <line:51:2, col:19> col:19 referenced value 'atomic_uint32_t *'
| |-FieldDecl 0x558a99879a48 <line:52:2, col:11> col:11 referenced mask 'uint32_t':'unsigned int'
| `-CXXDestructorDecl 0x558a99882e98 <line:50:12> col:12 implicit ~vmpair 'void ()' inline default trivial noexcept-unevaluated 0x558a99882e98
|-CXXRecordDecl 0x558a99879ab0 <line:54:5, line:57:5> line:54:11 referenced union vmvalue definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558a99879bc8 <col:5, col:11> col:11 implicit union vmvalue
| |-FieldDecl 0x558a99879c68 <line:55:2, col:19> col:19 referenced v1 'atomic_uint32_t *'
| |-FieldDecl 0x558a99879cf8 <line:56:2, col:10> col:10 referenced vm 'NotifierSignal::vmpair *'
| |-CXXConstructorDecl 0x558a99881a30 <line:54:11> col:11 implicit used vmvalue 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x558a99881e68 <col:11>
| |-CXXConstructorDecl 0x558a99881b38 <col:11> col:11 implicit constexpr vmvalue 'void (const NotifierSignal::vmvalue &)' inline default trivial noexcept-unevaluated 0x558a99881b38
| | `-ParmVarDecl 0x558a99881c48 <col:11> col:11 'const NotifierSignal::vmvalue &'
| |-CXXConstructorDecl 0x558a99881ce8 <col:11> col:11 implicit constexpr vmvalue 'void (NotifierSignal::vmvalue &&)' inline default trivial noexcept-unevaluated 0x558a99881ce8
| | `-ParmVarDecl 0x558a99881df8 <col:11> col:11 'NotifierSignal::vmvalue &&'
| `-CXXDestructorDecl 0x558a99882b60 <col:11> col:11 implicit ~vmvalue 'void () noexcept' inline default trivial
|-FieldDecl 0x558a99879d70 <line:59:5, col:13> col:13 referenced _v 'NotifierSignal::vmvalue'
|-FieldDecl 0x558a99879dd0 <line:60:5, col:14> col:14 referenced _mask 'uint32_t':'unsigned int'
|-EnumDecl 0x558a99879e20 <line:62:5, line:65:5> line:62:5
| |-EnumConstantDecl 0x558a99879f20 <line:63:2, col:14> col:2 referenced true_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x558a9987a120 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a99879f00 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x558a99879ee0 <col:14> 'int' 1
| |-EnumConstantDecl 0x558a99879fb0 <col:17, col:30> col:17 referenced false_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x558a9987a138 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a99879f90 <col:30> 'int' Int: 2
| |     `-IntegerLiteral 0x558a99879f70 <col:30> 'int' 2
| |-EnumConstantDecl 0x558a9987a040 <col:33, col:52> col:33 referenced overderived_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
| | `-ImplicitCastExpr 0x558a9987a150 <col:52> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9987a020 <col:52> 'int' Int: 4
| |     `-IntegerLiteral 0x558a9987a000 <col:52> 'int' 4
| `-EnumConstantDecl 0x558a9987a0d0 <line:64:2, col:23> col:2 referenced uninitialized_mask 'NotifierSignal::(anonymous enum at ../dummy_inc/click/notifier.hh:62:5)'
|   `-ImplicitCastExpr 0x558a9987a168 <col:23> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558a9987a0b0 <col:23> 'int' Int: 8
|       `-IntegerLiteral 0x558a9987a090 <col:23> 'int' 8
|-VarDecl 0x558a9987a190 <line:66:5, col:28> col:28 used static_value 'atomic_uint32_t' static
|-CXXMethodDecl 0x558a9987a298 <line:68:5, col:48> col:10 used hard_assign_vm 'void (const NotifierSignal &)'
| `-ParmVarDecl 0x558a9987a208 <col:25, col:47> col:47 x 'const NotifierSignal &'
|-CXXMethodDecl 0x558a9987a460 <line:69:5, col:63> col:10 hard_derive_one 'void (atomic_uint32_t *, uint32_t)'
| |-ParmVarDecl 0x558a9987a350 <col:26, col:43> col:43 value 'atomic_uint32_t *'
| `-ParmVarDecl 0x558a9987a3c8 <col:50, col:59> col:59 mask 'uint32_t':'unsigned int'
`-CXXMethodDecl 0x558a9987a698 <line:70:5, col:61> col:17 used hard_equals 'bool (const NotifierSignal::vmpair *, const NotifierSignal::vmpair *)' static
  |-ParmVarDecl 0x558a9987a548 <col:29, col:43> col:43 a 'const NotifierSignal::vmpair *'
  `-ParmVarDecl 0x558a9987a5c0 <col:46, col:60> col:60 b 'const NotifierSignal::vmpair *'

Layout: <CGRecordLayout
  LLVMType:%class.NotifierSignal = type <{ %"union.NotifierSignal::vmvalue", i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.NotifierSignal.base = type <{ %"union.NotifierSignal::vmvalue", i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a998961d8 <../elements/standard/timedunqueue.hh:36:1, line:58:1> line:36:7 class TimedUnqueue definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x558a99896338 <col:1, col:7> col:7 implicit referenced class TimedUnqueue
|-AccessSpecDecl 0x558a998963c8 <col:39, col:45> col:39 public
|-CXXConstructorDecl 0x558a99896450 <line:38:5, col:18> col:5 TimedUnqueue 'void ()'
|-CXXMethodDecl 0x558a99896550 <line:40:5, col:61> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x558a997c1868 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x558a99897850 <col:36, col:61>
|   `-ReturnStmt 0x558a99897840 <col:38, col:45>
|     `-ImplicitCastExpr 0x558a99897828 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x558a99897800 <col:45> 'const char [13]' lvalue "TimedUnqueue"
|-CXXMethodDecl 0x558a99896618 <line:41:5, col:56> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x558a997c1930 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x558a998978b0 <col:36, col:56>
|   `-ReturnStmt 0x558a998978a0 <col:38, col:45>
|     `-ImplicitCastExpr 0x558a99897888 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x558a99897868 <col:45> 'const char []' lvalue Var 0x558a997c1be0 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x558a998966e0 <line:42:5, col:59> col:17 processing 'const char *() const'
| |-Overrides: [ 0x558a997c1cf8 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x558a99897910 <col:36, col:59>
|   `-ReturnStmt 0x558a99897900 <col:38, col:45>
|     `-ImplicitCastExpr 0x558a998978e8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x558a998978c8 <col:45> 'const char []' lvalue Var 0x558a997c1fd8 'PULL_TO_PUSH' 'const char []'
|-CXXMethodDecl 0x558a998969b0 <line:44:5, col:59> col:9 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x558a997c3100 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x558a99896860 <col:19, col:35> col:35 conf 'Vector<String> &'
| `-ParmVarDecl 0x558a998968d8 <col:41, col:55> col:55 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558a99896b08 <line:45:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x558a997c3350 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x558a99896a70 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558a99896c50 <line:47:5, col:29> col:10 run_task 'bool (Task *)'
| |-Overrides: [ 0x558a997c0be8 Element::run_task 'bool (Task *)' ]
| `-ParmVarDecl 0x558a99896bc0 <col:19, col:25> col:25 task 'Task *'
|-AccessSpecDecl 0x558a99896cf8 <line:49:3, col:12> col:3 protected
|-FieldDecl 0x558a99896d38 <line:51:5, col:9> col:9 _burst 'int'
|-FieldDecl 0x558a99896d98 <line:52:5, col:10> col:10 referenced _task 'Task'
|-FieldDecl 0x558a99896df8 <line:53:5, col:11> col:11 _timer 'Timer'
|-FieldDecl 0x558a99896e60 <line:54:5, col:14> col:14 _interval 'unsigned int'
|-EnumDecl 0x558a99896eb0 <line:55:5, col:27> col:5
| `-EnumConstantDecl 0x558a99896fb0 <col:12, col:25> col:12 use_signal 'TimedUnqueue::(anonymous enum at ../elements/standard/timedunqueue.hh:55:5)'
|   `-ImplicitCastExpr 0x558a99897000 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558a99896f90 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x558a99896f70 <col:25> 'int' 1
|-FieldDecl 0x558a99897028 <line:56:5, col:20> col:20 _signal 'NotifierSignal'
|-CXXConstructorDecl 0x558a998970a8 <line:36:7> col:7 implicit TimedUnqueue 'void (const TimedUnqueue &)' inline default_delete noexcept-unevaluated 0x558a998970a8
| `-ParmVarDecl 0x558a998971b8 <col:7> col:7 'const TimedUnqueue &'
|-CXXConstructorDecl 0x558a99897258 <col:7> col:7 implicit TimedUnqueue 'void (TimedUnqueue &&)' inline default_delete noexcept-unevaluated 0x558a99897258
| `-ParmVarDecl 0x558a99897368 <col:7> col:7 'TimedUnqueue &&'
|-CXXMethodDecl 0x558a99897408 <col:7> col:7 implicit operator= 'TimedUnqueue &(const TimedUnqueue &)' inline default_delete noexcept-unevaluated 0x558a99897408
| `-ParmVarDecl 0x558a99897518 <col:7> col:7 'const TimedUnqueue &'
|-CXXMethodDecl 0x558a99897588 <col:7> col:7 implicit operator= 'TimedUnqueue &(TimedUnqueue &&)' inline default_delete noexcept-unevaluated 0x558a99897588
| `-ParmVarDecl 0x558a99897698 <col:7> col:7 'TimedUnqueue &&'
`-CXXDestructorDecl 0x558a99897720 <col:7> col:7 implicit ~TimedUnqueue 'void ()' inline default noexcept-unevaluated 0x558a99897720
  `-Overrides: [ 0x558a997c0408 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.TimedUnqueue = type { %class.Element.base, i32, %class.Task, %class.Timer, i32, [4 x i8], %class.NotifierSignal }
  NonVirtualBaseLLVMType:%class.TimedUnqueue = type { %class.Element.base, i32, %class.Task, %class.Timer, i32, [4 x i8], %class.NotifierSignal }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a99593fd0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x558a995940e8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x558a99594188 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x558a995941e8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x558a99594248 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x558a995942f8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a99594600 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558a99594718 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x558a995947c0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x558a99594828 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x558a995948b8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x558a9959a950 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558a9959ad88 <col:12>
|-CXXConstructorDecl 0x558a9959aa58 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x558a9959ab68 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x558a995947c0 'data' 'const char *'
| | `-ImplicitCastExpr 0x558a9959d310 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x558a9959d2e0 <col:12> 'const char *const' lvalue .data 0x558a995947c0
| |     `-DeclRefExpr 0x558a9959d2c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x558a9959ab68 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x558a99594828 'length' 'int'
| | `-ImplicitCastExpr 0x558a9959d3a0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x558a9959d370 <col:12> 'const int' lvalue .length 0x558a99594828
| |     `-DeclRefExpr 0x558a9959d350 <col:12> 'const String::rep_t' lvalue ParmVar 0x558a9959ab68 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x558a995948b8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x558a9959d430 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x558a9959d400 <col:12> 'String::memo_t *const' lvalue .memo 0x558a995948b8
| |     `-DeclRefExpr 0x558a9959d3e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x558a9959ab68 '' 'const String::rep_t &'
| `-CompoundStmt 0x558a9959d488 <col:12>
|-CXXConstructorDecl 0x558a9959ac08 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x558a9959ac08
| `-ParmVarDecl 0x558a9959ad18 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x558a995a0270 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x558a995abc88 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x558a995abd98 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x558a995ac2b0 <col:12>
|   |-BinaryOperator 0x558a995ac0c8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x558a995ac080 <col:12> 'const char *' lvalue ->data 0x558a995947c0
|   | | `-CXXThisExpr 0x558a995ac070 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x558a995ac0b0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x558a995ac040 <col:12> 'const char *const' lvalue .data 0x558a995947c0
|   |     `-DeclRefExpr 0x558a995ac020 <col:12> 'const String::rep_t' lvalue ParmVar 0x558a995abd98 '' 'const String::rep_t &'
|   |-BinaryOperator 0x558a995ac190 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x558a995ac148 <col:12> 'int' lvalue ->length 0x558a99594828
|   | | `-CXXThisExpr 0x558a995ac138 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x558a995ac178 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x558a995ac108 <col:12> 'const int' lvalue .length 0x558a99594828
|   |     `-DeclRefExpr 0x558a995ac0e8 <col:12> 'const String::rep_t' lvalue ParmVar 0x558a995abd98 '' 'const String::rep_t &'
|   |-BinaryOperator 0x558a995ac258 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x558a995ac210 <col:12> 'String::memo_t *' lvalue ->memo 0x558a995948b8
|   | | `-CXXThisExpr 0x558a995ac200 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x558a995ac240 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x558a995ac1d0 <col:12> 'String::memo_t *const' lvalue .memo 0x558a995948b8
|   |     `-DeclRefExpr 0x558a995ac1b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x558a995abd98 '' 'const String::rep_t &'
|   `-ReturnStmt 0x558a995ac2a0 <col:12>
|     `-UnaryOperator 0x558a995ac288 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558a995ac278 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x558a995abe08 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x558a995abe08
  `-ParmVarDecl 0x558a995abf18 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a9958b540 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558a9958b658 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x558a9958b6e8 <col:16, col:22> col:16 public
|-TypedefDecl 0x558a9958b728 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x558a9925bdc0 'const char *'
|   `-QualType 0x558a9925b311 'const char' const
|     `-BuiltinType 0x558a9925b310 'char'
|-TypedefDecl 0x558a9958b7b0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x558a9958b780 'String::const_iterator' sugar
|   |-Typedef 0x558a9958b728 'const_iterator'
|   `-PointerType 0x558a9925bdc0 'const char *'
|     `-QualType 0x558a9925b311 'const char' const
|       `-BuiltinType 0x558a9925b310 'char'
|-TypedefDecl 0x558a9958b920 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x558a9958b890 'int (String::*)() const'
|   |-RecordType 0x558a9958b5d0 'String'
|   | `-CXXRecord 0x558a9958b540 'String'
|   `-ParenType 0x558a9958b830 'int () const' sugar
|     `-FunctionProtoType 0x558a9955f3c0 'int () const' const cdecl
|       `-BuiltinType 0x558a9925b370 'int'
|-TypedefDecl 0x558a9958b988 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x558a993b3fa0 'int64_t' sugar
|   |-Typedef 0x558a992c42d0 'int64_t'
|   `-TypedefType 0x558a9929d4d0 '__int64_t' sugar
|     |-Typedef 0x558a9929d0a8 '__int64_t'
|     `-BuiltinType 0x558a9925b390 'long'
|-TypedefDecl 0x558a9958b9f0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x558a993b3ec0 'uint64_t' sugar
|   |-Typedef 0x558a992c4470 'uint64_t'
|   `-TypedefType 0x558a9929d560 '__uint64_t' sugar
|     |-Typedef 0x558a9929d118 '__uint64_t'
|     `-BuiltinType 0x558a9925b430 'unsigned long'
|-TypedefDecl 0x558a9958ba80 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x558a9958ba50 'String::intmax_t' sugar
|   |-Typedef 0x558a9958b988 'intmax_t'
|   `-TypedefType 0x558a993b3fa0 'int64_t' sugar
|     |-Typedef 0x558a992c42d0 'int64_t'
|     `-TypedefType 0x558a9929d4d0 '__int64_t' sugar
|       |-Typedef 0x558a9929d0a8 '__int64_t'
|       `-BuiltinType 0x558a9925b390 'long'
|-TypedefDecl 0x558a9958bb10 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x558a9958bae0 'String::uintmax_t' sugar
|   |-Typedef 0x558a9958b9f0 'uintmax_t'
|   `-TypedefType 0x558a993b3ec0 'uint64_t' sugar
|     |-Typedef 0x558a992c4470 'uint64_t'
|     `-TypedefType 0x558a9929d560 '__uint64_t' sugar
|       |-Typedef 0x558a9929d118 '__uint64_t'
|       `-BuiltinType 0x558a9925b430 'unsigned long'
|-CXXConstructorDecl 0x558a9958bbd0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x558a9958bd78 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x558a9958bcb8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x558a9958bf28 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x558a9958be68 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x558a9958c080 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x558a9958bff0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x558a9958c298 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x558a9958c148 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x558a9958c1c8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x558a9958c4b8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x558a9958c368 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x558a9958c3e8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x558a9958c6d8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x558a9958c588 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x558a9958c608 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x558a9958c8f8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x558a9958c7a8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x558a9958c828 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x558a9958ca88 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x558a9958c9c0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x558a9958cc08 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x558a9958cb48 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x558a9958cd98 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x558a9958ccd0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x558a9958cef0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x558a9958ce60 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x558a9958d048 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x558a9958cfb8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x558a9958d1a0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x558a9958d110 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x558a9958d328 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x558a9958d268 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x558a9958d4b8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x558a9958d3f0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x558a9958d648 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x558a9958d580 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x558a9958d7d8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x558a9958d710 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x558a9958d8d0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x558a9958d9f8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x558a9958db78 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x558a9958dab0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x558a9958dcc8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x558a9958dc38 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x558a9958dd80 <col:63> "" ""
|-CXXMethodDecl 0x558a9958dec8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x558a9958de08 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x558a9958e0d8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x558a9958df88 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x558a9958e008 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x558a9958e2f8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x558a9958e1a0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x558a9958e220 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x558a9958e5d8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x558a9958e3b8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x558a9958e438 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x558a9959a420 <col:55> 'int' 10
| `-ParmVarDecl 0x558a9958e4b0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558a9959a440 <col:76> 'bool' true
|-CXXMethodDecl 0x558a9958e8b8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x558a9958e6a0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x558a9958e720 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x558a9959a450 <col:56> 'int' 10
| `-ParmVarDecl 0x558a9958e798 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558a9959a470 <col:77> 'bool' true
|-CXXMethodDecl 0x558a9958e9c0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x558a9958ea88 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x558a9958eb50 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x558a9958ebf0 <col:20>
| `-OptimizeNoneAttr 0x558a9958ec48 <col:30>
|-CXXConversionDecl 0x558a9958ed38 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x558a9958ee08 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x558a9958eec8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x558a9958efb8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x558a9958f078 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x558a9958f1f8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x558a9958f130 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x558a9958f348 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x558a9958f2b8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x558a9958f438 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x558a9958f4f8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x558a9958f748 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x558a9958f5b0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x558a9958f630 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x558a9958f9a8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x558a9958f810 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x558a9958f890 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x558a9958fa78 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x558a9958fc88 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x558a9958fb30 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x558a9958fbb0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x558a9958fea8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x558a9958fd50 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x558a9958fdd0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x558a99590038 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x558a9958ff70 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x558a99590128 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x558a99590298 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x558a995901d8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x558a995904a8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x558a99590358 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x558a995903d8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x558a995906c0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x558a99590568 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x558a995905e0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x558a99590850 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x558a99590780 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x558a99590a70 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x558a99590910 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x558a99590990 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x558a99590bc0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x558a99590b30 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x558a99590d98 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x558a99590c80 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x558a99590d00 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x558a99590ee8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x558a99590e58 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x558a99591100 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x558a99590fa0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x558a99591020 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x558a9959a480 <col:39> 'int' 0
|-CXXMethodDecl 0x558a99591320 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x558a995911c0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x558a99591240 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x558a9959a4a0 <col:48> 'int' 0
|-CXXMethodDecl 0x558a99591500 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x558a995913e0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x558a99591460 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x558a9959a4c0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x558a995915d0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x558a99591690 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x558a99591750 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x558a99591810 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x558a995918d0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x558a99591a78 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x558a99591980 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x558a99591bf8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x558a99591b30 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x558a99591dd0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x558a99591cb8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x558a99591f48 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x558a99591e88 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x558a99592090 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x558a99592000 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x558a995921e0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x558a99592150 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x558a995923b8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x558a995922a0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x558a99592320 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x558a99592598 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x558a99592480 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x558a99592500 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x558a995926e8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x558a99592658 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x558a995928f8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x558a995927a8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x558a99592828 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x558a99592a58 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x558a995929c0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x558a99592bb0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x558a99592b18 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x558a99592c58 <col:57> "" ""
|-CXXMethodDecl 0x558a99592d68 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x558a99592cd8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x558a99592eb8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x558a99592e28 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x558a99593038 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x558a99592f70 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x558a99593100 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x558a995931c0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x558a99593280 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x558a99593320 <col:49> "" ""
|-CXXMethodDecl 0x558a995933b0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x558a99593470 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x558a99593560 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x558a99593628 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x558a995936e8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x558a995937a8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x558a995938a0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x558a99593968 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x558a99593a30 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x558a99593c08 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x558a99593ae8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x558a99593b68 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x558a99593e30 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x558a99593cd0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x558a99593d50 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x558a99593f40 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x558a99593fa8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x558a99593fd0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x558a995940e8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x558a99594188 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x558a995941e8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x558a99594248 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x558a995942f8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x558a99594360 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x558a99594598 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x558a995945e8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558a99594578 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x558a99594488 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x558a99594430 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x558a99594470 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x558a99594450 <col:32> 'int' 8
|-CXXRecordDecl 0x558a99594600 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558a99594718 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x558a995947c0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x558a99594828 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x558a995948b8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x558a9959a950 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x558a9959ad88 <col:12>
| |-CXXConstructorDecl 0x558a9959aa58 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x558a9959ab68 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x558a995947c0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x558a9959d310 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x558a9959d2e0 <col:12> 'const char *const' lvalue .data 0x558a995947c0
| | |     `-DeclRefExpr 0x558a9959d2c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x558a9959ab68 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x558a99594828 'length' 'int'
| | | `-ImplicitCastExpr 0x558a9959d3a0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x558a9959d370 <col:12> 'const int' lvalue .length 0x558a99594828
| | |     `-DeclRefExpr 0x558a9959d350 <col:12> 'const String::rep_t' lvalue ParmVar 0x558a9959ab68 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x558a995948b8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x558a9959d430 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x558a9959d400 <col:12> 'String::memo_t *const' lvalue .memo 0x558a995948b8
| | |     `-DeclRefExpr 0x558a9959d3e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x558a9959ab68 '' 'const String::rep_t &'
| | `-CompoundStmt 0x558a9959d488 <col:12>
| |-CXXConstructorDecl 0x558a9959ac08 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x558a9959ac08
| | `-ParmVarDecl 0x558a9959ad18 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x558a995a0270 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x558a995abc88 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x558a995abd98 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x558a995ac2b0 <col:12>
| |   |-BinaryOperator 0x558a995ac0c8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x558a995ac080 <col:12> 'const char *' lvalue ->data 0x558a995947c0
| |   | | `-CXXThisExpr 0x558a995ac070 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x558a995ac0b0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x558a995ac040 <col:12> 'const char *const' lvalue .data 0x558a995947c0
| |   |     `-DeclRefExpr 0x558a995ac020 <col:12> 'const String::rep_t' lvalue ParmVar 0x558a995abd98 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x558a995ac190 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x558a995ac148 <col:12> 'int' lvalue ->length 0x558a99594828
| |   | | `-CXXThisExpr 0x558a995ac138 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x558a995ac178 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x558a995ac108 <col:12> 'const int' lvalue .length 0x558a99594828
| |   |     `-DeclRefExpr 0x558a995ac0e8 <col:12> 'const String::rep_t' lvalue ParmVar 0x558a995abd98 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x558a995ac258 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x558a995ac210 <col:12> 'String::memo_t *' lvalue ->memo 0x558a995948b8
| |   | | `-CXXThisExpr 0x558a995ac200 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x558a995ac240 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x558a995ac1d0 <col:12> 'String::memo_t *const' lvalue .memo 0x558a995948b8
| |   |     `-DeclRefExpr 0x558a995ac1b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x558a995abd98 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x558a995ac2a0 <col:12>
| |     `-UnaryOperator 0x558a995ac288 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x558a995ac278 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x558a995abe08 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x558a995abe08
|   `-ParmVarDecl 0x558a995abf18 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x558a99594930 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x558a99594b78 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x558a99594998 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x558a99594a18 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x558a99594a90 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x558a9959a910 <col:79, line:261:5>
|   |-BinaryOperator 0x558a9959a588 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x558a9959a520 <col:2, col:5> 'const char *' lvalue .data 0x558a995947c0
|   | | `-MemberExpr 0x558a9959a4f0 <col:2> 'String::rep_t' lvalue ->_r 0x558a99594930
|   | |   `-CXXThisExpr 0x558a9959a4e0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x558a9959a570 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x558a9959a550 <col:12> 'const char *' lvalue ParmVar 0x558a99594998 'data' 'const char *'
|   |-BinaryOperator 0x558a9959a650 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x558a9959a5e8 <col:2, col:5> 'int' lvalue .length 0x558a99594828
|   | | `-MemberExpr 0x558a9959a5b8 <col:2> 'String::rep_t' lvalue ->_r 0x558a99594930
|   | |   `-CXXThisExpr 0x558a9959a5a8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x558a9959a638 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558a9959a618 <col:14> 'int' lvalue ParmVar 0x558a99594a18 'length' 'int'
|   `-IfStmt 0x558a9959a8f8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x558a9959a770 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x558a9959a758 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x558a9959a738 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x558a9959a718 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x558a9959a6b0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x558a995948b8
|     |       | `-MemberExpr 0x558a9959a680 <col:7> 'String::rep_t' lvalue ->_r 0x558a99594930
|     |       |   `-CXXThisExpr 0x558a9959a670 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x558a9959a700 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x558a9959a6e0 <col:17> 'String::memo_t *' lvalue ParmVar 0x558a99594a90 'memo' 'String::memo_t *'
|     `-CallExpr 0x558a9959a8d0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x558a9959a8b8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558a9959a7c0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x558a995835a8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x558a9959a828 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x558a99594188
|         `-ImplicitCastExpr 0x558a9959a810 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x558a9959a7f0 <col:27> 'String::memo_t *' lvalue ParmVar 0x558a99594a90 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x558a99594e28 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x558a99594c48 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x558a99594cc8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x558a99594d40 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x558a99594930 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x558a9959ad98 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558a9959af28 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x558a9959ae90 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x558a9959ae00 <col:2> '<bound member function type>' ->assign_memo 0x558a99594b78
|     | `-ImplicitCastExpr 0x558a9959aec8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x558a9959adf0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x558a9959aee0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x558a9959ae30 <col:14> 'const char *' lvalue ParmVar 0x558a99594c48 'data' 'const char *'
|     |-ImplicitCastExpr 0x558a9959aef8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x558a9959ae50 <col:20> 'int' lvalue ParmVar 0x558a99594cc8 'length' 'int'
|     `-ImplicitCastExpr 0x558a9959af10 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x558a9959ae70 <col:28> 'String::memo_t *' lvalue ParmVar 0x558a99594d40 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x558a99594fb8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x558a99594ef8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x558a9959b180 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x558a9959b100 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x558a9959af50 <col:2> '<bound member function type>' ->assign_memo 0x558a99594b78
|     | `-CXXThisExpr 0x558a9959af40 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x558a9959b138 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x558a9959afd0 <col:14, col:19> 'const char *' lvalue .data 0x558a995947c0
|     |   `-MemberExpr 0x558a9959afa0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x558a99594930
|     |     `-DeclRefExpr 0x558a9959af80 <col:14> 'const String' lvalue ParmVar 0x558a99594ef8 'x' 'const String &'
|     |-ImplicitCastExpr 0x558a9959b150 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x558a9959b050 <col:25, col:30> 'int' lvalue .length 0x558a99594828
|     |   `-MemberExpr 0x558a9959b020 <col:25, col:27> 'String::rep_t' lvalue ._r 0x558a99594930
|     |     `-DeclRefExpr 0x558a9959b000 <col:25> 'const String' lvalue ParmVar 0x558a99594ef8 'x' 'const String &'
|     `-ImplicitCastExpr 0x558a9959b168 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x558a9959b0d0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x558a995948b8
|         `-MemberExpr 0x558a9959b0a0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x558a99594930
|           `-DeclRefExpr 0x558a9959b080 <col:38> 'const String' lvalue ParmVar 0x558a99594ef8 'x' 'const String &'
|-CXXMethodDecl 0x558a99595080 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x558a9959bb40 <col:31, line:278:5>
|   `-IfStmt 0x558a9959bb28 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x558a9959b220 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x558a9959b208 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x558a9959b1d8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x558a995948b8
|     |     `-MemberExpr 0x558a9959b1a8 <col:6> 'String::rep_t' lvalue ->_r 0x558a99594930
|     |       `-CXXThisExpr 0x558a9959b198 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x558a9959bb00 <col:15, line:277:2>
|       |-ParenExpr 0x558a9959b6d0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x558a9959b6a0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x558a9959b330 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x558a9959b318 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x558a9959b300 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x558a9959b2c0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x558a99594188
|       |   |       `-ImplicitCastExpr 0x558a9959b2a8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x558a9959b278 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x558a995948b8
|       |   |           `-MemberExpr 0x558a9959b248 <col:27> 'String::rep_t' lvalue ->_r 0x558a99594930
|       |   |             `-CXXThisExpr 0x558a9959b238 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x558a9959b390 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x558a9959b370 <col:54> 'int' 0
|       |   `-CallExpr 0x558a9959b600 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x558a9959b5e8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x558a9959b568 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558a992fa800 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x558a9959b640 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x558a9959b478 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x558a9959b658 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x558a9959b4a8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x558a9959b670 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x558a9959b4e0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x558a9959b688 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x558a9959b550 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x558a9959b538 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x558a9959b500 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x558a9959ba20 <line:274:6, line:275:22>
|       | |-CallExpr 0x558a9959b8e0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x558a9959b8c8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x558a9959b840 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x558a995849f0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x558a9959b810 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x558a99594188
|       | |   `-ImplicitCastExpr 0x558a9959b7f8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x558a9959b7c8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x558a995948b8
|       | |       `-MemberExpr 0x558a9959b798 <col:40> 'String::rep_t' lvalue ->_r 0x558a99594930
|       | |         `-CXXThisExpr 0x558a9959b788 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x558a9959b9e0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x558a9959b9c8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x558a9959b908 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x558a99599860 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x558a9959ba08 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x558a9959b968 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x558a995948b8
|       |       `-MemberExpr 0x558a9959b938 <col:15> 'String::rep_t' lvalue ->_r 0x558a99594930
|       |         `-CXXThisExpr 0x558a9959b928 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x558a9959bae0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x558a9959ba78 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x558a995948b8
|         | `-MemberExpr 0x558a9959ba48 <col:6> 'String::rep_t' lvalue ->_r 0x558a99594930
|         |   `-CXXThisExpr 0x558a9959ba38 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x558a9959bac8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x558a9959baa8 <col:16> 'int' 0
|-CXXMethodDecl 0x558a99595318 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x558a99595138 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x558a995951b8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x558a99595230 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x558a995953f0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x558a99595640 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x558a995954a8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x558a99595528 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x558a995955a0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x558a99595828 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x558a99595710 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x558a99595790 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x558a99595928 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x558a9959bc18 <col:41, line:286:5>
|   `-ReturnStmt 0x558a9959bc08 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x558a9959bbd8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x558a9959bba0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x558a9959bb88 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x558a9959bb68 <col:46> 'int' 1
|-CXXMethodDecl 0x558a99595bc8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x558a995959e0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x558a99595a60 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x558a99595ae0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x558a99599860 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x558a99595c90 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x558a99599930 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x558a99599b00 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x558a995999e8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x558a99599a68 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x558a99599bc0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x558a99599c88 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x558a99599d88 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x558a99599e00 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x558a99599e78 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x558a99599ee0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x558a99599fe0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x558a9959a030 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558a99599fc0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x558a99599fa0 <col:22> 'int' 14
|-CXXMethodDecl 0x558a9959a248 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x558a9959a060 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x558a9959a0e0 <col:38> col:41 'int'
| `-ParmVarDecl 0x558a9959a160 <col:43> col:46 'int'
|-FriendDecl 0x558a9959a350 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x558a9959a3e0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558a998b9f40 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x558a998ba118 prev 0x558a998b9f40 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x558a998ba1a8 <col:46, col:52> col:46 public
|-TypedefDecl 0x558a998ba1d0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558a9925b370 'int'
|-TypedefDecl 0x558a998bbb30 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x558a998bbae0 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x558a998bbac0 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x558a998ba3e8 'type'
|     `-SubstTemplateTypeParmType 0x558a998ba3b0 'String' sugar
|       |-TemplateTypeParmType 0x558a9954ede0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a9954ed90 'T'
|       `-RecordType 0x558a9958b5d0 'String'
|         `-CXXRecord 0x558a9958b540 'String'
|-TypedefDecl 0x558a998bbbe8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x558a998bbbb0 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x558a998bbb90 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x558a998bbb30 'type'
|     `-ElaboratedType 0x558a998bbae0 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x558a998bbac0 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x558a998ba3e8 'type'
|         `-SubstTemplateTypeParmType 0x558a998ba3b0 'String' sugar
|           |-TemplateTypeParmType 0x558a9954ede0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x558a9954ed90 'T'
|           `-RecordType 0x558a9958b5d0 'String'
|             `-CXXRecord 0x558a9958b540 'String'
|-CXXMethodDecl 0x558a998bbd68 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x558a998bbc78 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x558a998bbe58 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x558a998bbf38 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x558a998bbf38
|-CXXMethodDecl 0x558a998bc208 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x558a998bc110 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x558a998bc448 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x558a998bc2c0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558a998bc338 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x558a998bc618 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x558a998bc508 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558a998bc580 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x558a998bc778 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x558a998bc848 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x558a998bca98 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x558a998bc908 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x558a998bc980 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x558a998bccf8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x558a998bcb68 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x558a998bcbe0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x558a998bceb8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x558a998bcdc8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x558a998bd078 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x558a998bcf80 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x558a998bd130 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558a998bd1e0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x558a998bd418 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x558a998bd290 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558a998bd308 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x558a998bd6b8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x558a998bd5c0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x558a998bd780 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x558a998bd7d0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x558a998bd820 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.8 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.8 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558a997c2d70 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x558a998b7c98 prev 0x558a997c2d70 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x558a998b9eb0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x558a998b9e60 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x558a998b9e40 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x558a998b9cf0 'type'
|     `-SubstTemplateTypeParmType 0x558a998b9b80 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x558a99524b90 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x558a99524b38 'F'
|       `-RecordType 0x558a998b8790 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x558a998b86b0 'typed_array_memory'
|-FieldDecl 0x558a998bd870 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x558a998bd8c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x558a998bd8f8 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x558a998b7d30 'String' sugar
|   |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x558a9955c0a8 'T'
|   `-RecordType 0x558a9958b5d0 'String'
|     `-CXXRecord 0x558a9958b540 'String'
|-TypedefDecl 0x558a998bd988 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x558a998bd950 'String &'
|   `-SubstTemplateTypeParmType 0x558a998b7d30 'String' sugar
|     |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558a9955c0a8 'T'
|     `-RecordType 0x558a9958b5d0 'String'
|       `-CXXRecord 0x558a9958b540 'String'
|-TypedefDecl 0x558a998bda18 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x558a998bd9e0 'const String &'
|   `-QualType 0x558a998b7d31 'const String' const
|     `-SubstTemplateTypeParmType 0x558a998b7d30 'String' sugar
|       |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a9955c0a8 'T'
|       `-RecordType 0x558a9958b5d0 'String'
|         `-CXXRecord 0x558a9958b540 'String'
|-TypedefDecl 0x558a998bdaa8 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x558a998bda70 'String *'
|   `-SubstTemplateTypeParmType 0x558a998b7d30 'String' sugar
|     |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558a9955c0a8 'T'
|     `-RecordType 0x558a9958b5d0 'String'
|       `-CXXRecord 0x558a9958b540 'String'
|-TypedefDecl 0x558a998bdb38 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x558a998bdb00 'const String *'
|   `-QualType 0x558a998b7d31 'const String' const
|     `-SubstTemplateTypeParmType 0x558a998b7d30 'String' sugar
|       |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a9955c0a8 'T'
|       `-RecordType 0x558a9958b5d0 'String'
|         `-CXXRecord 0x558a9958b540 'String'
|-TypedefDecl 0x558a998be790 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x558a998be740 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x558a998be720 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x558a998be658 'type'
|     `-LValueReferenceType 0x558a998be620 'const String &'
|       `-QualType 0x558a998be3c1 'const String' const
|         `-SubstTemplateTypeParmType 0x558a998be3c0 'String' sugar
|           |-TemplateTypeParmType 0x558a9952eae0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x558a9952ea88 'T'
|           `-RecordType 0x558a9958b5d0 'String'
|             `-CXXRecord 0x558a9958b540 'String'
|-TypedefDecl 0x558a998be7f8 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x558a998bd9e0 'const String &'
|   `-QualType 0x558a998b7d31 'const String' const
|     `-SubstTemplateTypeParmType 0x558a998b7d30 'String' sugar
|       |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a9955c0a8 'T'
|       `-RecordType 0x558a9958b5d0 'String'
|         `-CXXRecord 0x558a9958b540 'String'
|-TypedefDecl 0x558a998be850 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558a9925b370 'int'
|-TypedefDecl 0x558a998be8b8 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x558a998bda70 'String *'
|   `-SubstTemplateTypeParmType 0x558a998b7d30 'String' sugar
|     |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558a9955c0a8 'T'
|     `-RecordType 0x558a9958b5d0 'String'
|       `-CXXRecord 0x558a9958b540 'String'
|-TypedefDecl 0x558a998be920 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x558a998bdb00 'const String *'
|   `-QualType 0x558a998b7d31 'const String' const
|     `-SubstTemplateTypeParmType 0x558a998b7d30 'String' sugar
|       |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a9955c0a8 'T'
|       `-RecordType 0x558a9958b5d0 'String'
|         `-CXXRecord 0x558a9958b540 'String'
|-EnumDecl 0x558a998be978 <line:134:5> col:5
| `-EnumConstantDecl 0x558a998bea70 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x558a998bea50 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x558a9955d788 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x558a9955d760 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x558a9955d740 <col:40> 'int' 1
|-CXXConstructorDecl 0x558a998beaf8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x558a998bed88 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x558a998bebb0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558a998bec50 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x558a998bf018 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x558a998bef00 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x558a998bf2d8 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x558a998bf1c0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x558a998bf5f0 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x558a998bf4d0 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x558a998bf900 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x558a998bf7e0 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x558a998bfbf0 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x558a998bfa38 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558a998bfab0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x558a998bfd18 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x558a998bfdc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a998bfe20 <col:30> Inherited
|-CXXMethodDecl 0x558a998bfe68 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x558a998bff18 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a998bff70 <col:30> Inherited
|-CXXMethodDecl 0x558a998c0038 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x558a998c00e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a998c0140 <col:30> Inherited
|-CXXMethodDecl 0x558a998c0188 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x558a998c0238 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a998c0290 <col:30> Inherited
|-CXXMethodDecl 0x558a998c02d8 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x558a998c0388 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a998c03e0 <col:30> Inherited
|-CXXMethodDecl 0x558a998c0428 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x558a998c04d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a998c0530 <col:30> Inherited
|-CXXMethodDecl 0x558a998c0558 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558a998c0608 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558a998c06b8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x558a998c0878 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x558a998c0768 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558a998c07e0 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x558a998c09c8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x558a998c0938 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a998c0b78 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x558a998c0a80 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558a998c0c30 <col:20>
| `-OptimizeNoneAttr 0x558a998c0c88 <col:30>
|-CXXMethodDecl 0x558a998c0da8 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x558a998c0cb0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558a998c0e60 <col:20>
| `-OptimizeNoneAttr 0x558a998c0eb8 <col:30>
|-CXXMethodDecl 0x558a998c0f70 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x558a998c0ee0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a998c10b8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558a998c1028 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a998c11e8 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x558a998c12e8 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x558a998c13b8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x558a998c1488 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x558a998c15c8 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x558a998c1538 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a998c1710 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558a998c1680 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a998c1858 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x558a998c17c8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558a998c1910 <col:48> Inherited "" ""
|-CXXMethodDecl 0x558a998c1a10 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x558a998c1980 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558a998c1f20 <col:60> Inherited "" ""
|-CXXMethodDecl 0x558a998c1fd8 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x558a998c20d8 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x558a998c2258 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x558a998c2198 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x558a998c29e8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x558a998c2310 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x558a998c2948 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x558a998c2848 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x558a998c2ac8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558a998c2c18 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x558a998c2b88 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x558a998c2cd0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x558a998c2f18 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x558a998c2d90 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x558a998c2e08 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x558a998c30a8 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x558a998c2fe8 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x558a998c32b8 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x558a998c3170 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x558a998c31e8 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x558a998c3378 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x558a998c35d8 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x558a998c34e0 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x558a998c36a8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x558a998c36a8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.7 = type { %class.vector_memory.8 }
  NonVirtualBaseLLVMType:%class.Vector.7 = type { %class.vector_memory.8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a9977ba28 prev 0x558a998cee28 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558a9977bb20 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x558a9977bbb0 <col:22, col:28> col:22 public
|-EnumDecl 0x558a9977bbd8 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x558a9977bcf8 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x558a9977bcd8 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x558a9977bcc0 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x558a9977bca0 <col:14> 'int' 999
| |-EnumConstantDecl 0x558a9977bda0 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x558a9977bd80 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x558a9977bd68 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x558a9977bd48 <col:14> 'int' 1
| |-EnumConstantDecl 0x558a9977be30 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x558a9977be10 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x558a9977bdf0 <col:17> 'int' 0
| |-EnumConstantDecl 0x558a9994a2d0 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x558a9977bea0 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x558a9977be80 <col:13> 'int' 1
| |-EnumConstantDecl 0x558a9994a360 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x558a9994a340 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x558a9994a320 <col:16> 'int' 2
| |-EnumConstantDecl 0x558a9994a3f0 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x558a9994a3d0 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x558a9994a3b0 <col:13> 'int' 3
| |-EnumConstantDecl 0x558a9994a480 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x558a9994a460 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x558a9994a440 <col:15> 'int' 4
| |-EnumConstantDecl 0x558a9994a510 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x558a9994a4f0 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x558a9994a4d0 <col:14> 'int' 5
| |-EnumConstantDecl 0x558a9994a5a0 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x558a9994a580 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x558a9994a560 <col:12> 'int' 6
| `-EnumConstantDecl 0x558a9994a630 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x558a9994a610 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x558a9994a5f0 <col:13> 'int' 7
|-VarDecl 0x558a9994a6a0 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x558a9994a728 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x558a9994a7b0 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x558a9994a838 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x558a9994a8c0 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x558a9994a948 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x558a9994a9d0 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x558a9994aa58 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x558a9994aae0 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x558a9994ab68 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x558a9994abf0 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x558a9994acf0 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x558a9994ffd8 '_nerrors' 'int'
| | `-IntegerLiteral 0x558a99950768 <line:128:13> 'int' 0
| `-CompoundStmt 0x558a999507d8 <col:16, line:129:5>
|-CXXDestructorDecl 0x558a9994ade0 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x558a999507e8 <col:29, line:132:5>
|-CXXMethodDecl 0x558a9994af98 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x558a9994aed0 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558a9994b060 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x558a9994b148 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x558a99950840 <col:44, line:161:5>
|   `-ReturnStmt 0x558a99950830 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x558a99950818 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x558a999507f8 <col:9> 'ErrorHandler *' lvalue Var 0x558a99950038 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x558a9994b288 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x558a9994b1f8 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558a9994b350 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x558a999508a0 <col:43, line:173:5>
|   `-ReturnStmt 0x558a99950890 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x558a99950878 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x558a99950858 <col:9> 'ErrorHandler *' lvalue Var 0x558a999500b0 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x558a9994b408 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x558a9994b488 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x558a9994b598 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x558a9994b508 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x558a9994b6e8 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x558a9994b658 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x558a9994b840 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x558a9994b7a8 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x558a9994b998 <line:196:5, col:35> col:9 used error 'int (const char *, ...)'
| `-ParmVarDecl 0x558a9994b900 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x558a9994baf0 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x558a9994ba58 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x558a9994bd00 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x558a9994bba8 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x558a9994bc28 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x558a9994bed8 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x558a9994bdc0 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x558a9994be40 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x558a9994c0f8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x558a9994bf98 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x558a9994c018 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x558a9994c2d8 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x558a9994c1b8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x558a9994c238 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x558a9994c4b8 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x558a9994c398 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x558a9994c418 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x558a9994c640 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x558a9994c578 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x558a9994c810 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x558a9994c6f8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x558a9994c770 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x558a99950af8 <col:57, line:234:5>
|   `-ReturnStmt 0x558a99950ae8 <line:233:2, col:41>
|     `-ExprWithCleanups 0x558a99950ad0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x558a99950a78 <col:9, col:41> 'int'
|         |-MemberExpr 0x558a99950a48 <col:9> '<bound member function type>' ->xmessage 0x558a9994c640
|         | `-CXXThisExpr 0x558a99950a38 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x558a99950ab8 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x558a99950aa0 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x558a99950a18 <col:18, col:40> 'String' (CXXTemporary 0x558a99950a18)
|               `-CallExpr 0x558a999509e0 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x558a999509c8 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x558a99950940 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x558a9994e808 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x558a99950960 <col:31> 'const String' lvalue ParmVar 0x558a9994c770 'str' 'const String &'
|                 `-DeclRefExpr 0x558a99950980 <col:36> 'const String' lvalue ParmVar 0x558a9994c6f8 'anno' 'const String &'
|-CXXMethodDecl 0x558a9994caf0 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x558a9994c8d0 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x558a9994c950 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x558a9994c9c8 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x558a99950d88 <col:68, line:243:5>
|   `-ReturnStmt 0x558a99950d78 <line:242:2, col:41>
|     `-ExprWithCleanups 0x558a99950d60 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x558a99950d00 <col:9, col:41> 'int'
|         |-MemberExpr 0x558a99950cd0 <col:9> '<bound member function type>' ->xmessage 0x558a9994c810
|         | `-CXXThisExpr 0x558a99950cc0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x558a99950b98 <col:18> 'const String' lvalue ParmVar 0x558a9994c8d0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x558a99950d48 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x558a99950d30 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x558a99950ca0 <col:24, col:40> 'String' (CXXTemporary 0x558a99950ca0)
|               `-CXXMemberCallExpr 0x558a99950c38 <col:24, col:40> 'String'
|                 |-MemberExpr 0x558a99950bc8 <col:24> '<bound member function type>' ->vformat 0x558a9994dcd0
|                 | `-CXXThisExpr 0x558a99950bb8 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x558a99950c68 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x558a99950bf8 <col:32> 'const char *' lvalue ParmVar 0x558a9994c950 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x558a99950c80 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x558a99950c18 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x558a9994c9c8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x558a9994cd90 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x558a9994cbb8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x558a9994cc30 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x558a9994cca8 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x558a999510c8 <col:23, line:254:5>
|   `-ReturnStmt 0x558a999510b8 <line:253:2, col:71>
|     `-ExprWithCleanups 0x558a999510a0 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x558a99951040 <col:9, col:71> 'int'
|         |-MemberExpr 0x558a99951010 <col:9> '<bound member function type>' ->xmessage 0x558a9994c810
|         | `-CXXThisExpr 0x558a99951000 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x558a99951088 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x558a99951070 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x558a99950fc0 <col:18, col:65> 'String' (CXXTemporary 0x558a99950fc0)
|         |     `-CallExpr 0x558a99950f58 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x558a99950f40 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x558a99950e28 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x558a9994e808 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x558a99950e48 <col:31> 'const String' lvalue ParmVar 0x558a9994cc30 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x558a99950fa0 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x558a99950f88 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x558a99950f20 <col:37, col:64> 'String' (CXXTemporary 0x558a99950f20)
|         |             `-CallExpr 0x558a99950ef0 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x558a99950ed8 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x558a99950e68 <col:37> 'String (const String &)' lvalue CXXMethod 0x558a9994ee58 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x558a99950e88 <col:56> 'const String' lvalue ParmVar 0x558a9994cbb8 'landmark' 'const String &'
|         `-DeclRefExpr 0x558a99950fe0 <col:68> 'const String' lvalue ParmVar 0x558a9994cca8 'str' 'const String &'
|-CXXMethodDecl 0x558a9994d110 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x558a9994ce58 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x558a9994ced0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x558a9994cf50 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x558a9994cfc8 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x558a99951380 <col:34, line:267:5>
|   `-ReturnStmt 0x558a99951370 <line:266:2, col:51>
|     `-ExprWithCleanups 0x558a99951358 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x558a999512f0 <col:9, col:51> 'int'
|         |-MemberExpr 0x558a999512c0 <col:9> '<bound member function type>' ->xmessage 0x558a9994cd90
|         | `-CXXThisExpr 0x558a999512b0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x558a99951168 <col:18> 'const String' lvalue ParmVar 0x558a9994ce58 'landmark' 'const String &'
|         |-DeclRefExpr 0x558a99951188 <col:28> 'const String' lvalue ParmVar 0x558a9994ced0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x558a99951340 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x558a99951328 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x558a99951290 <col:34, col:50> 'String' (CXXTemporary 0x558a99951290)
|               `-CXXMemberCallExpr 0x558a99951228 <col:34, col:50> 'String'
|                 |-MemberExpr 0x558a999511b8 <col:34> '<bound member function type>' ->vformat 0x558a9994dcd0
|                 | `-CXXThisExpr 0x558a999511a8 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x558a99951258 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x558a999511e8 <col:42> 'const char *' lvalue ParmVar 0x558a9994cf50 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x558a99951270 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x558a99951208 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x558a9994cfc8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x558a9994d220 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x558a99951400 <col:25, line:288:5>
|   `-ReturnStmt 0x558a999513f0 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x558a999513d8 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x558a999513a8 <col:9> 'const int' lvalue ->_nerrors 0x558a9994ffd8
|         `-CXXThisExpr 0x558a99951398 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x558a9994d430 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x558a9994d2d8 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x558a9994d358 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x558a9994d718 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x558a9994d4f8 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x558a9994d578 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x558a9994d5f0 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x558a9994d8b0 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x558a9994d7e8 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x558a9994daf8 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x558a9994d970 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x558a9994d9e8 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x558a99951660 <col:58, line:357:5>
|   `-ReturnStmt 0x558a99951650 <line:356:2, col:29>
|     `-ExprWithCleanups 0x558a99951638 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x558a99951608 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x558a999515f0 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x558a999515d0 <col:9, col:29> 'String' (CXXTemporary 0x558a999515d0)
|             `-CallExpr 0x558a99951560 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x558a99951548 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x558a999514c8 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x558a9994d718 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x558a99951468 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x558a99951598 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x558a99951488 <col:21> 'const char *' lvalue ParmVar 0x558a9994d970 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x558a999515b0 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x558a999514a8 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x558a9994d9e8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x558a9994dcd0 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x558a9994dbc0 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x558a9994dc38 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x558a9994de28 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x558a9994dd98 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x558a9994df70 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x558a9994dee0 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x558a9994e210 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x558a9994e028 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x558a9994e0a8 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x558a9994e120 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x558a9994e370 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x558a9994e2e0 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x558a99951778 <col:37, line:441:5>
|   `-IfStmt 0x558a99951760 <line:439:2, line:440:8>
|     |-BinaryOperator 0x558a999516e8 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x558a999516b8 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x558a99951678 <col:6> 'int' lvalue ParmVar 0x558a9994e2e0 'level' 'int'
|     | `-ImplicitCastExpr 0x558a999516d0 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x558a99951698 <col:15> 'ErrorHandler::Level' EnumConstant 0x558a9994a3f0 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x558a99951748 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x558a99951718 <col:8> 'int' lvalue ->_nerrors 0x558a9994ffd8
|         `-CXXThisExpr 0x558a99951708 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x558a9994e438 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x558a99951810 <col:26, line:448:5>
|   `-BinaryOperator 0x558a999517f0 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x558a999517a0 <col:2> 'int' lvalue ->_nerrors 0x558a9994ffd8
|     | `-CXXThisExpr 0x558a99951790 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x558a999517d0 <col:13> 'int' 0
|-CXXMethodDecl 0x558a9994e600 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x558a9994e4f0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x558a9994e568 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x558a9994e808 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x558a9994e6c0 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x558a9994e738 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x558a9994eab8 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x558a9994e8c8 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x558a9994e948 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x558a9994e9c8 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x558a9994eb70 <col:59> 0 0
|-CXXMethodDecl 0x558a9994ed08 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x558a9994ebe8 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x558a9994ec68 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x558a99951e80 <col:70, line:534:5>
|   |-DeclStmt 0x558a99951980 <line:528:2, col:20>
|   | |-VarDecl 0x558a99951838 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x558a999518a0 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x558a999518d8 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x558a99951940 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x558a99951a50 <line:529:2, col:23>
|   | `-VarDecl 0x558a999519b0 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x558a99951a38 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x558a99951a18 <col:18> 'const char *' lvalue ParmVar 0x558a9994ebe8 'begin' 'const char *'
|   |-DoStmt 0x558a99951e18 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x558a99951d48 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x558a99951d30 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x558a99951d10 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x558a99951a68 <col:6> 'const char *' lvalue Var 0x558a999519b0 'x' 'const char *'
|   | |     `-CallExpr 0x558a99951c60 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x558a99951c48 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x558a99951c00 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x558a999504b0 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x558a99951cc8 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x558a99951cb0 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x558a99951b20 <col:20, col:27> 'String' (CXXTemporary 0x558a99951b20)
|   | |       |     `-CXXTemporaryObjectExpr 0x558a99951ae8 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x558a99951ce0 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x558a99951b40 <col:30> 'const char *' lvalue Var 0x558a999519b0 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x558a99951cf8 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x558a99951b60 <col:33> 'const char *' lvalue ParmVar 0x558a9994ec68 'end' 'const char *'
|   | |       |-UnaryOperator 0x558a99951ba0 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x558a99951b80 <col:39> 'String' lvalue Var 0x558a99951838 'name' 'String'
|   | |       |-UnaryOperator 0x558a99951bd8 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x558a99951bb8 <col:46> 'String' lvalue Var 0x558a999518d8 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x558a99951bf0 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x558a99951e00 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x558a99951de8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x558a99951dc8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x558a99951d98 <col:11> '<bound member function type>' .operator int (String::*)() const 0x558a9958ed38
|   |         `-ImplicitCastExpr 0x558a99951d80 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x558a99951d60 <col:11> 'String' lvalue Var 0x558a99951838 'name' 'String'
|   `-ReturnStmt 0x558a99951e70 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x558a99951e58 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x558a99951e38 <col:9> 'const char *' lvalue Var 0x558a999519b0 'x' 'const char *'
|-CXXMethodDecl 0x558a9994ee58 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x558a9994edc8 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x558a99952498 <col:55, line:550:5>
|   `-IfStmt 0x558a99952470 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x558a999520c0 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x558a999520a8 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x558a99952090 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x558a99952070 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x558a99952040 <col:6> '<bound member function type>' .operator int (String::*)() const 0x558a9958ed38
|     | |       `-DeclRefExpr 0x558a99951ee0 <col:6> 'const String' lvalue ParmVar 0x558a9994edc8 'x' 'const String &'
|     | `-BinaryOperator 0x558a99952020 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x558a99951ff0 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x558a99951fa0 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x558a99951f88 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x558a99951f40 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x558a995a8570 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x558a99951f00 <col:11> 'const String' lvalue ParmVar 0x558a9994edc8 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x558a99951f20 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x558a99952008 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x558a99951fd8 <col:19> 'char' 123
|     |-ReturnStmt 0x558a99952130 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x558a99952100 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x558a999520e0 <col:13> 'const String' lvalue ParmVar 0x558a9994edc8 'x' 'const String &'
|     `-IfStmt 0x558a99952448 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x558a999521c8 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x558a999521b0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x558a99952190 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x558a99952160 <col:11> '<bound member function type>' .operator int (String::*)() const 0x558a9958ed38
|       |       `-DeclRefExpr 0x558a99952140 <col:11> 'const String' lvalue ParmVar 0x558a9994edc8 'x' 'const String &'
|       |-ReturnStmt 0x558a99952360 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x558a99952348 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x558a99952318 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x558a99952300 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x558a999522e0 <col:13, col:29> 'String' (CXXTemporary 0x558a999522e0)
|       |         `-CallExpr 0x558a99952280 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x558a99952268 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x558a999521e0 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x558a9994e600 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x558a999522b0 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x558a99952200 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x558a99952220 <col:28> 'const String' lvalue ParmVar 0x558a9994edc8 'x' 'const String &'
|       `-ReturnStmt 0x558a99952438 <line:549:6, col:20>
|         `-ExprWithCleanups 0x558a99952420 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x558a999523f0 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x558a999523d8 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x558a999523b8 <col:13, col:20> 'String' (CXXTemporary 0x558a999523b8)
|                 `-CXXTemporaryObjectExpr 0x558a99952380 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x558a9994f020 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x558a9994ef10 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x558a9994ef88 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558a99950758 <col:71> 'bool' false
|-CXXRecordDecl 0x558a9994f0d0 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x558a9994f3c8 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x558a9994f360 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x558a9994f300 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x558a9994f2c0 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x558a9958b5d0 'String'
|       | `-CXXRecord 0x558a9958b540 'String'
|       |-BuiltinType 0x558a9925b370 'int'
|       `-DecayedType 0x558a998cfe70 '__va_list_tag *' sugar
|         |-TypedefType 0x558a998cfe40 'va_list' sugar
|         | |-Typedef 0x558a9947c680 'va_list'
|         | `-TypedefType 0x558a9947c630 '__gnuc_va_list' sugar
|         |   |-Typedef 0x558a993b4258 '__gnuc_va_list'
|         |   `-TypedefType 0x558a993b41c0 '__builtin_va_list' sugar
|         |     |-Typedef 0x558a9929cbd8 '__builtin_va_list'
|         |     `-ConstantArrayType 0x558a9929cb80 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x558a9925c0c0 '__va_list_tag'
|         |         `-CXXRecord 0x558a9925c028 '__va_list_tag'
|         `-PointerType 0x558a99481f20 '__va_list_tag *'
|           `-RecordType 0x558a9925c0c0 '__va_list_tag'
|             `-CXXRecord 0x558a9925c028 '__va_list_tag'
|-EnumDecl 0x558a9994f420 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x558a9994f520 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x558a9994fa80 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9994f500 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x558a9994f4e0 <col:16> 'int' 1
| |-EnumConstantDecl 0x558a9994f5b0 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x558a9994fa98 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9994f590 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x558a9994f570 <col:21> 'int' 2
| |-EnumConstantDecl 0x558a9994f640 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x558a9994fab0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9994f620 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x558a9994f600 <col:22> 'int' 4
| |-EnumConstantDecl 0x558a9994f6d0 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x558a9994fac8 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9994f6b0 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x558a9994f690 <col:17> 'int' 8
| |-EnumConstantDecl 0x558a9994f760 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x558a9994fae0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9994f740 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x558a9994f720 <col:22> 'int' 16
| |-EnumConstantDecl 0x558a9994f7f0 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x558a9994faf8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9994f7d0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x558a9994f7b0 <col:19> 'int' 32
| |-EnumConstantDecl 0x558a9994f880 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x558a9994fb10 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9994f860 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x558a9994f840 <col:17> 'int' 64
| |-EnumConstantDecl 0x558a9994f910 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x558a9994fb28 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9994f8f0 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x558a9994f8d0 <col:14> 'int' 128
| |-EnumConstantDecl 0x558a9994f9a0 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x558a9994fb40 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9994f980 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x558a9994f960 <col:16> 'int' 256
| `-EnumConstantDecl 0x558a9994fa30 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x558a9994fb58 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558a9994fa10 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x558a9994f9f0 <col:12> 'int' 1024
|-CXXMethodDecl 0x558a9994fd68 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x558a9994fb80 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x558a9994fc20 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x558a9994fef0 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x558a9994fe28 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x558a9994ff98 <line:580:3, col:10> col:3 private
|-FieldDecl 0x558a9994ffd8 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x558a99950038 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x558a999500b0 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x558a999504b0 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x558a99950128 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x558a999501a8 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x558a99950228 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x558a999502a0 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x558a99950318 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x558a99950390 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x558a999505d8 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x558a999505d8
| `-ParmVarDecl 0x558a999506e8 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x558a999527f8 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x558a999527f8
  `-ParmVarDecl 0x558a99952908 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Args
         0 |   class ArgContext (base)
         0 |     const class Element * _context
         8 |     class ErrorHandler * _errh
        16 |     const char * _arg_keyword
        24 |     _Bool _read_status
        25 |   _Bool _my_conf
        26 |   _Bool _status
        27 |   uint8_t _simple_slotpos
        32 |   Vector<class String> * _conf
        40 |   class Vector<int> _kwpos
        40 |     class vector_memory<class sized_array_memory<4> > vm_
        40 |       vector_memory<class sized_array_memory<4> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   struct Args::Slot * _slots
        64 |   uint8_t [48] _simple_slotbuf
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a998ceeb8 prev 0x558a99785818 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558a998cefb0 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x558a998cf040 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x558a998cf178 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x558a998cf078 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x558a998d05a0 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x558a998d0580 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x558a998d0118 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x558a998d0630 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x558a998d05f0 <col:17> 'ErrorHandler *' lvalue ParmVar 0x558a998cf078 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x558a998d0180 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x558a998d06b0 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x558a998d0670 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x558a998d01e0 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x558a998d06f0 <col:54> 'bool' false
| `-CompoundStmt 0x558a998d07f8 <col:61, line:38:5>
|   `-BinaryOperator 0x558a998d07d8 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x558a998d0770 <col:9> 'const Element *' lvalue ->_context 0x558a998d00b8
|     | `-CXXThisExpr 0x558a998d0760 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x558a998d07c0 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x558a998d07a0 <col:20> 'int' 0
|-CXXConstructorDecl 0x558a998cf388 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x558a998cf238 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x558a998cf2b0 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x558a998d05d8 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x558a998d05b8 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x558a998d00b8 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x558a998d0850 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x558a998d0810 <col:20> 'const Element *' lvalue ParmVar 0x558a998cf238 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x558a998d0118 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x558a998d08d0 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x558a998d0890 <col:36> 'ErrorHandler *' lvalue ParmVar 0x558a998cf2b0 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x558a998d0180 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x558a998d0950 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x558a998d0910 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x558a998d01e0 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x558a998d0990 <col:73> 'bool' false
| `-CompoundStmt 0x558a998d0a08 <col:80, line:46:5>
|-CXXMethodDecl 0x558a998cf4b8 <line:49:5, line:51:5> line:49:20 context 'const Element *() const'
| `-CompoundStmt 0x558a998d0a80 <col:36, line:51:5>
|   `-ReturnStmt 0x558a998d0a70 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x558a998d0a58 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x558a998d0a28 <col:16> 'const Element *const' lvalue ->_context 0x558a998d00b8
|         `-CXXThisExpr 0x558a998d0a18 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x558a998cf5a8 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x558a998d0b00 <col:32, line:57:5>
|   `-ReturnStmt 0x558a998d0af0 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x558a998d0ad8 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x558a998d0aa8 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x558a998d0118
|         `-CXXThisExpr 0x558a998d0a98 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x558a998cf668 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x558a998cf7f0 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x558a998cf720 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x558a998cf940 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x558a998cf8b0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x558a998cfa90 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x558a998cfa00 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x558a998cfc98 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x558a998cfb48 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x558a998cfbc0 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x558a998cffc8 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x558a998cfd58 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x558a998cfdd8 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x558a998cfea0 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x558a998d0080 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x558a998d00b8 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x558a998d0118 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x558a998d0180 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x558a998d01e0 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x558a998d0230 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x558a998d0230
| `-ParmVarDecl 0x558a998d0348 <col:7> col:7 'const ArgContext &'
|-CXXMethodDecl 0x558a998d03e8 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x558a998d03e8
| `-ParmVarDecl 0x558a998d04f8 <col:7> col:7 'const ArgContext &'
`-CXXDestructorDecl 0x558a9995c9f8 <col:7> col:7 implicit ~ArgContext 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558a998f5730 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x558a998f5908 prev 0x558a998f5730 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x558a998f5998 <col:46, col:52> col:46 public
|-TypedefDecl 0x558a998f59c0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558a9925b370 'int'
|-TypedefDecl 0x558a99903310 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x558a999032c0 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x558a998f5e70 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x558a998f5d70 'type'
|     `-TemplateSpecializationType 0x558a998f5d00 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x558a998f5be0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x558a998f5bc0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x558a998f5ba0 <col:24> 'unsigned long' 4
|       `-RecordType 0x558a998f5ce0 'char_array<4>'
|         `-ClassTemplateSpecialization 0x558a998f5c00 'char_array'
|-TypedefDecl 0x558a999033c8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x558a99903390 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x558a99903370 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x558a99903310 'type'
|     `-ElaboratedType 0x558a999032c0 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x558a998f5e70 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x558a998f5d70 'type'
|         `-TemplateSpecializationType 0x558a998f5d00 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x558a998f5be0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x558a998f5bc0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x558a998f5ba0 <col:24> 'unsigned long' 4
|           `-RecordType 0x558a998f5ce0 'char_array<4>'
|             `-ClassTemplateSpecialization 0x558a998f5c00 'char_array'
|-CXXMethodDecl 0x558a99903548 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x558a99903458 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x558a99903638 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x558a99903718 <line:23:5, col:20> col:5 ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x558a999039e8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x558a999038f0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x558a99903c28 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x558a99903aa0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558a99903b18 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x558a99903df8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x558a99903ce8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558a99903d60 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x558a99903f58 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x558a99904028 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x558a99904278 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x558a999040e8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x558a99904160 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x558a999044d8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x558a99904348 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x558a999043c0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x558a99904698 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x558a999045a8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x558a99904858 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x558a99904760 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x558a99904910 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558a999049c0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x558a99904bf8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x558a99904a70 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558a99904ae8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x558a99904e98 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x558a99904da0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x558a99904f60 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x558a99904fb0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x558a99905000 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.10 = type { %struct.char_array.11*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.10 = type { %struct.char_array.11*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558a998f4348 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x558a998f4558 prev 0x558a998f4348 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x558a998f56a0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x558a998f5650 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x558a998f5630 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x558a998f54e0 'type'
|     `-SubstTemplateTypeParmType 0x558a998f5300 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x558a99524410 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a995243b8 'T'
|       `-RecordType 0x558a998f4e50 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x558a998f4d68 'sized_array_memory'
|-FieldDecl 0x558a99905050 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x558a999050a0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x558a999050d8 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x558a998f45f0 'int' sugar
|   |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x558a9955c0a8 'T'
|   `-BuiltinType 0x558a9925b370 'int'
|-TypedefDecl 0x558a99905168 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x558a99905130 'int &'
|   `-SubstTemplateTypeParmType 0x558a998f45f0 'int' sugar
|     |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558a9955c0a8 'T'
|     `-BuiltinType 0x558a9925b370 'int'
|-TypedefDecl 0x558a99905228 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x558a999051f0 'const int &'
|   `-QualType 0x558a998f45f1 'const int' const
|     `-SubstTemplateTypeParmType 0x558a998f45f0 'int' sugar
|       |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a9955c0a8 'T'
|       `-BuiltinType 0x558a9925b370 'int'
|-TypedefDecl 0x558a999052b8 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x558a99905280 'int *'
|   `-SubstTemplateTypeParmType 0x558a998f45f0 'int' sugar
|     |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558a9955c0a8 'T'
|     `-BuiltinType 0x558a9925b370 'int'
|-TypedefDecl 0x558a99905348 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x558a99905310 'const int *'
|   `-QualType 0x558a998f45f1 'const int' const
|     `-SubstTemplateTypeParmType 0x558a998f45f0 'int' sugar
|       |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a9955c0a8 'T'
|       `-BuiltinType 0x558a9925b370 'int'
|-TypedefDecl 0x558a99905f30 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x558a99905ee0 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x558a99905ec0 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x558a99905e50 'type'
|     `-SubstTemplateTypeParmType 0x558a99905c10 'int' sugar
|       |-TemplateTypeParmType 0x558a9952f210 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a9952f1c0 'T'
|       `-BuiltinType 0x558a9925b370 'int'
|-TypedefDecl 0x558a99905f98 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x558a999051f0 'const int &'
|   `-QualType 0x558a998f45f1 'const int' const
|     `-SubstTemplateTypeParmType 0x558a998f45f0 'int' sugar
|       |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a9955c0a8 'T'
|       `-BuiltinType 0x558a9925b370 'int'
|-TypedefDecl 0x558a99905ff0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x558a9925b370 'int'
|-TypedefDecl 0x558a99906058 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x558a99905280 'int *'
|   `-SubstTemplateTypeParmType 0x558a998f45f0 'int' sugar
|     |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558a9955c0a8 'T'
|     `-BuiltinType 0x558a9925b370 'int'
|-TypedefDecl 0x558a999060c0 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x558a99905310 'const int *'
|   `-QualType 0x558a998f45f1 'const int' const
|     `-SubstTemplateTypeParmType 0x558a998f45f0 'int' sugar
|       |-TemplateTypeParmType 0x558a9955c100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558a9955c0a8 'T'
|       `-BuiltinType 0x558a9925b370 'int'
|-EnumDecl 0x558a99906118 <line:134:5> col:5
| `-EnumConstantDecl 0x558a99906210 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x558a999061f0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x558a9955d788 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x558a9955d760 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x558a9955d740 <col:40> 'int' 1
|-CXXConstructorDecl 0x558a99906298 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x558a999064e8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x558a99906350 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558a999063f0 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x558a999067a8 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x558a99906690 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x558a99906a68 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x558a99906950 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x558a99906db0 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x558a99906c90 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x558a999070c0 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x558a99906fa0 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x558a999073b0 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x558a999071f8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558a99907270 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x558a999074d8 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x558a999075b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a99907610 <col:30> Inherited
|-CXXMethodDecl 0x558a99907658 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x558a99907708 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a99907760 <col:30> Inherited
|-CXXMethodDecl 0x558a99907828 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x558a999078d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a99907930 <col:30> Inherited
|-CXXMethodDecl 0x558a99907978 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x558a99907a28 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a99907a80 <col:30> Inherited
|-CXXMethodDecl 0x558a99907ac8 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x558a99907b78 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a99907bd0 <col:30> Inherited
|-CXXMethodDecl 0x558a99907c18 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x558a99907cc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558a99907d20 <col:30> Inherited
|-CXXMethodDecl 0x558a99907d48 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558a99907df8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558a99907ea8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x558a99908068 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x558a99907f58 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558a99907fd0 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x558a999081b8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x558a99908128 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a99908368 <line:163:5, col:65> col:43 operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x558a99908270 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558a99908420 <col:20>
| `-OptimizeNoneAttr 0x558a99908478 <col:30>
|-CXXMethodDecl 0x558a99908598 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x558a999084a0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558a99908650 <col:20>
| `-OptimizeNoneAttr 0x558a999086a8 <col:30>
|-CXXMethodDecl 0x558a99908760 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x558a999086d0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a999088a8 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558a99908818 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a999089d8 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x558a99908b08 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x558a99908bd8 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x558a99908ca8 <line:170:5, col:28> col:21 back 'const int &() const' inline
|-CXXMethodDecl 0x558a99908de8 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x558a99908d58 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a99908f30 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558a99908ea0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558a99909078 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x558a99908fe8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558a99909130 <col:48> Inherited "" ""
|-CXXMethodDecl 0x558a99909230 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x558a999091a0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558a999092e8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x558a999093a8 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x558a999094a8 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x558a99909628 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x558a99909568 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x558a99909de8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x558a999096e0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x558a99909d48 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x558a99909c48 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x558a99909ec8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558a9990c610 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x558a99909f88 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x558a9990c6c8 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x558a9990c918 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x558a9990c788 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x558a9990c800 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x558a9990cad8 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x558a9990c9e8 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x558a9990cd28 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x558a9990cba0 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x558a9990cc18 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x558a9990cde8 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x558a9990d048 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x558a9990cf50 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x558a9990d118 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void () noexcept' inline default

Layout: <CGRecordLayout
  LLVMType:%class.Vector.9 = type { %class.vector_memory.10 }
  NonVirtualBaseLLVMType:%class.Vector.9 = type { %class.vector_memory.10 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::Slot
         0 |   (Slot vtable pointer)
         8 |   struct Args::Slot * _next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a998f24b8 prev 0x558a998d8c28 <../dummy_inc/click/args.hh:826:5, line:833:5> line:826:12 referenced struct Slot definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558a998f25b0 <col:5, col:12> col:12 implicit referenced struct Slot
|-CXXConstructorDecl 0x558a998f26a0 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| `-CompoundStmt 0x558a9991de80 <col:16, line:828:9>
|-CXXDestructorDecl 0x558a998f2790 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| `-CompoundStmt 0x558a9991de90 <col:25, line:830:9>
|-CXXMethodDecl 0x558a998f2890 <line:831:9, col:32> col:22 store 'void ()' virtual pure
|-FieldDecl 0x558a998f2940 <line:832:9, col:15> col:15 _next 'Args::Slot *'
|-CXXMethodDecl 0x558a998f29e8 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x558a998f29e8
| `-ParmVarDecl 0x558a998f2af8 <col:12> col:12 'const Args::Slot &'
`-CXXConstructorDecl 0x558a998f32b8 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x558a998f32b8
  `-ParmVarDecl 0x558a998f33c8 <col:12> col:12 'const Args::Slot &'

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  NonVirtualBaseLLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a998d8a38 <../dummy_inc/click/args.hh:247:1, line:898:1> line:247:7 referenced class Args definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-public 'ArgContext'
|-CXXRecordDecl 0x558a998d8b98 <col:1, col:7> col:7 implicit referenced class Args
|-CXXRecordDecl 0x558a998d8c28 <line:248:5, col:12> col:12 struct Slot
|-AccessSpecDecl 0x558a998d8ce0 <line:250:3, col:9> col:3 public
|-CXXConstructorDecl 0x558a998d8de8 <line:254:5, col:32> col:5 Args 'void (ErrorHandler *)'
| `-ParmVarDecl 0x558a998d8d18 <col:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x558a9990e6d8 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x558a9990e6b8 <col:31> 'int' 0
|-CXXConstructorDecl 0x558a998d9108 <line:259:5, col:60> col:5 Args 'void (const Vector<String> &, ErrorHandler *)'
| |-ParmVarDecl 0x558a998d8f80 <col:10, col:32> col:32 conf 'const Vector<String> &'
| `-ParmVarDecl 0x558a998d8ff8 <col:38, col:59> col:52 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x558a9990e710 <col:59> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x558a9990e6f0 <col:59> 'int' 0
|-CXXConstructorDecl 0x558a998d92e0 <line:265:5, col:56> col:5 Args 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x558a998d91d0 <col:10, col:25> col:25 context 'const Element *'
| `-ParmVarDecl 0x558a998d9248 <col:34, col:55> col:48 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x558a9990e748 <col:55> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x558a9990e728 <col:55> 'int' 0
|-CXXConstructorDecl 0x558a998d9698 <line:271:5, line:272:32> line:271:5 used Args 'void (const Vector<String> &, const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x558a998d9480 <col:10, col:32> col:32 conf 'const Vector<String> &'
| |-ParmVarDecl 0x558a998d94f8 <col:38, col:53> col:53 context 'const Element *'
| `-ParmVarDecl 0x558a998d9570 <line:272:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x558a9990e780 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x558a9990e760 <col:31> 'int' 0
|-CXXConstructorDecl 0x558a998d9858 <line:279:5, col:23> col:5 Args 'void (const Args &)'
| `-ParmVarDecl 0x558a998d9798 <col:10, col:22> col:22 x 'const Args &'
|-CXXDestructorDecl 0x558a998d9950 <line:281:5, col:11> col:5 used ~Args 'void () noexcept'
|-CXXMethodDecl 0x558a998d9b38 <line:285:5, col:34> col:11 operator= 'Args &(const Args &)'
| `-ParmVarDecl 0x558a998d9a40 <col:21, col:33> col:33 x 'const Args &'
|-CXXMethodDecl 0x558a998d9c28 <line:289:5, line:291:5> line:289:10 empty 'bool () const'
| `-CompoundStmt 0x558a9990eb30 <col:24, line:291:5>
|   `-ReturnStmt 0x558a9990eb20 <line:290:9, col:79>
|     `-BinaryOperator 0x558a9990eb00 <col:16, col:79> 'bool' '&&'
|       |-BinaryOperator 0x558a9990e9d8 <col:16, col:47> 'bool' '&&'
|       | |-ParenExpr 0x558a9990e930 <col:16, col:41> 'bool'
|       | | `-BinaryOperator 0x558a9990e910 <col:17, col:40> 'bool' '||'
|       | |   |-UnaryOperator 0x558a9990e808 <col:17, col:18> 'bool' prefix '!' cannot overflow
|       | |   | `-ImplicitCastExpr 0x558a9990e7f0 <col:18> 'bool' <PointerToBoolean>
|       | |   |   `-ImplicitCastExpr 0x558a9990e7d8 <col:18> 'Vector<String> *' <LValueToRValue>
|       | |   |     `-MemberExpr 0x558a9990e7a8 <col:18> 'Vector<String> *const' lvalue ->_conf 0x558a998f42e0
|       | |   |       `-CXXThisExpr 0x558a9990e798 <col:18> 'const Args *' implicit this
|       | |   `-UnaryOperator 0x558a9990e8f8 <col:27, col:40> 'bool' prefix '!' cannot overflow
|       | |     `-ImplicitCastExpr 0x558a9990e8e0 <col:28, col:40> 'bool' <IntegralToBoolean>
|       | |       `-CXXMemberCallExpr 0x558a9990e8a8 <col:28, col:40> 'Vector::size_type':'int'
|       | |         `-MemberExpr 0x558a9990e878 <col:28, col:35> '<bound member function type>' ->size 0x558a998c0558
|       | |           `-ImplicitCastExpr 0x558a9990e8c8 <col:28> 'const Vector<String> *' <NoOp>
|       | |             `-ImplicitCastExpr 0x558a9990e860 <col:28> 'Vector<String> *' <LValueToRValue>
|       | |               `-MemberExpr 0x558a9990e830 <col:28> 'Vector<String> *const' lvalue ->_conf 0x558a998f42e0
|       | |                 `-CXXThisExpr 0x558a9990e820 <col:28> 'const Args *' implicit this
|       | `-UnaryOperator 0x558a9990e9c0 <col:46, col:47> 'bool' prefix '!' cannot overflow
|       |   `-ImplicitCastExpr 0x558a9990e9a8 <col:47> 'bool' <PointerToBoolean>
|       |     `-ImplicitCastExpr 0x558a9990e990 <col:47> 'Args::Slot *' <LValueToRValue>
|       |       `-MemberExpr 0x558a9990e960 <col:47> 'Args::Slot *const' lvalue ->_slots 0x558a9990d260
|       |         `-CXXThisExpr 0x558a9990e950 <col:47> 'const Args *' implicit this
|       `-BinaryOperator 0x558a9990eae0 <col:57, col:79> 'bool' '=='
|         |-ImplicitCastExpr 0x558a9990eac8 <col:57, col:74> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x558a9990eab0 <col:57, col:74> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x558a9990ea70 <col:57, col:74> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x558a9990ea58 <col:57> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x558a9990ea08 <col:57> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x558a9990d310
|         |     |   `-CXXThisExpr 0x558a9990e9f8 <col:57> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x558a9990ea38 <col:73> 'int' 0
|         `-IntegerLiteral 0x558a9990ea90 <col:79> 'int' 0
|-CXXMethodDecl 0x558a998d9ce8 <line:294:5, line:296:5> line:294:10 results_empty 'bool () const'
| `-CompoundStmt 0x558a9990ed08 <col:32, line:296:5>
|   `-ReturnStmt 0x558a9990ecf8 <line:295:9, col:49>
|     `-BinaryOperator 0x558a9990ecd8 <col:16, col:49> 'bool' '&&'
|       |-UnaryOperator 0x558a9990ebb8 <col:16, col:17> 'bool' prefix '!' cannot overflow
|       | `-ImplicitCastExpr 0x558a9990eba0 <col:17> 'bool' <PointerToBoolean>
|       |   `-ImplicitCastExpr 0x558a9990eb88 <col:17> 'Args::Slot *' <LValueToRValue>
|       |     `-MemberExpr 0x558a9990eb58 <col:17> 'Args::Slot *const' lvalue ->_slots 0x558a9990d260
|       |       `-CXXThisExpr 0x558a9990eb48 <col:17> 'const Args *' implicit this
|       `-BinaryOperator 0x558a9990ecb8 <col:27, col:49> 'bool' '=='
|         |-ImplicitCastExpr 0x558a9990eca0 <col:27, col:44> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x558a9990ec88 <col:27, col:44> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x558a9990ec48 <col:27, col:44> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x558a9990ec30 <col:27> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x558a9990ebe0 <col:27> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x558a9990d310
|         |     |   `-CXXThisExpr 0x558a9990ebd0 <col:27> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x558a9990ec10 <col:43> 'int' 0
|         `-IntegerLiteral 0x558a9990ec68 <col:49> 'int' 0
|-CXXMethodDecl 0x558a998d9dd8 <line:301:5, line:306:5> line:301:11 clear 'Args &()'
| `-CompoundStmt 0x558a9990ef18 <col:19, line:306:5>
|   |-IfStmt 0x558a9990ee38 <line:302:9, line:303:26>
|   | |-ImplicitCastExpr 0x558a9990ed78 <line:302:13> 'bool' <PointerToBoolean>
|   | | `-ImplicitCastExpr 0x558a9990ed60 <col:13> 'Vector<String> *' <LValueToRValue>
|   | |   `-MemberExpr 0x558a9990ed30 <col:13> 'Vector<String> *' lvalue ->_conf 0x558a998f42e0
|   | |     `-CXXThisExpr 0x558a9990ed20 <col:13> 'Args *' implicit this
|   | `-CXXMemberCallExpr 0x558a9990ee18 <line:303:13, col:26> 'void'
|   |   `-MemberExpr 0x558a9990ede8 <col:13, col:20> '<bound member function type>' ->clear 0x558a998c3378
|   |     `-ImplicitCastExpr 0x558a9990edd0 <col:13> 'Vector<String> *' <LValueToRValue>
|   |       `-MemberExpr 0x558a9990eda0 <col:13> 'Vector<String> *' lvalue ->_conf 0x558a998f42e0
|   |         `-CXXThisExpr 0x558a9990ed90 <col:13> 'Args *' implicit this
|   |-CXXMemberCallExpr 0x558a9990eec0 <line:304:9, col:22> 'void'
|   | `-MemberExpr 0x558a9990ee90 <col:9, col:16> '<bound member function type>' .clear 0x558a9990cde8
|   |   `-MemberExpr 0x558a9990ee60 <col:9> 'Vector<int>':'Vector<int>' lvalue ->_kwpos 0x558a9990d200
|   |     `-CXXThisExpr 0x558a9990ee50 <col:9> 'Args *' implicit this
|   `-ReturnStmt 0x558a9990ef08 <line:305:9, col:17>
|     `-UnaryOperator 0x558a9990eef0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558a9990eee0 <col:17> 'Args *' this
|-CXXMethodDecl 0x558a998da058 <line:313:5, col:36> col:11 bind 'Args &(Vector<String> &)'
| `-ParmVarDecl 0x558a998d9f60 <col:16, col:32> col:32 conf 'Vector<String> &'
|-CXXMethodDecl 0x558a998da1d8 <line:317:5, col:38> col:11 push_back 'Args &(const String &)'
| `-ParmVarDecl 0x558a998da110 <col:21, col:35> col:35 arg 'const String &'
|-FunctionTemplateDecl 0x558a998da558 <line:321:5, line:327:5> line:321:35 push_back
| |-TemplateTypeParmDecl 0x558a998da280 <col:14, col:23> col:23 referenced typename depth 0 index 0 Iter
| `-CXXMethodDecl 0x558a998da4b8 <col:29, line:327:5> line:321:35 push_back 'Args &(Iter, Iter)'
|   |-ParmVarDecl 0x558a998da328 <col:45, col:50> col:50 referenced begin 'Iter'
|   |-ParmVarDecl 0x558a998da3a0 <col:57, col:62> col:62 referenced end 'Iter'
|   `-CompoundStmt 0x558a9990f240 <col:67, line:327:5>
|     |-WhileStmt 0x558a9990f1f0 <line:322:9, line:325:9>
|     | |-CXXOperatorCallExpr 0x558a9990f008 <line:322:16, col:25> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x558a9990ef80 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x558a9988ba60 0x558a9977dce8 0x558a995c72c8 0x558a995c6fa0 0x558a995b8780 0x558a995b8430 0x558a995b7d20 0x558a9958a690 0x558a99516b50
|     | | |-DeclRefExpr 0x558a9990ef40 <col:16> 'Iter' lvalue ParmVar 0x558a998da328 'begin' 'Iter'
|     | | `-DeclRefExpr 0x558a9990ef60 <col:25> 'Iter' lvalue ParmVar 0x558a998da3a0 'end' 'Iter'
|     | `-CompoundStmt 0x558a9990f1d0 <col:30, line:325:9>
|     |   |-CallExpr 0x558a9990f170 <line:323:13, col:29> '<dependent type>'
|     |   | |-UnresolvedMemberExpr 0x558a9990f050 <col:13> '<bound member function type>' lvalue
|     |   | `-CXXOperatorCallExpr 0x558a9990f140 <col:23, col:24> '<dependent type>'
|     |   |   |-UnresolvedLookupExpr 0x558a9990f0d0 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x558a99782e68 0x558a99782a88 0x558a997826b8 0x558a997822d8 0x558a99781ef8 0x558a99781b28
|     |   |   `-DeclRefExpr 0x558a9990f0b0 <col:24> 'Iter' lvalue ParmVar 0x558a998da328 'begin' 'Iter'
|     |   `-UnaryOperator 0x558a9990f1b8 <line:324:13, col:15> '<dependent type>' prefix '++' cannot overflow
|     |     `-DeclRefExpr 0x558a9990f198 <col:15> 'Iter' lvalue ParmVar 0x558a998da328 'begin' 'Iter'
|     `-ReturnStmt 0x558a9990f230 <line:326:9, col:17>
|       `-UnaryOperator 0x558a9990f218 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558a9990f208 <col:17> 'Args *' this
|-CXXMethodDecl 0x558a998da660 <line:331:5, col:44> col:11 push_back_words 'Args &(const String &)'
| `-ParmVarDecl 0x558a998da5d0 <col:27, col:41> col:41 str 'const String &'
|-CXXMethodDecl 0x558a998da7a8 <line:335:5, col:43> col:11 push_back_args 'Args &(const String &)'
| `-ParmVarDecl 0x558a998da718 <col:26, col:40> col:40 str 'const String &'
|-CXXMethodDecl 0x558a998da870 <line:350:5, line:353:5> line:350:11 reset 'Args &()'
| `-CompoundStmt 0x558a9990f320 <col:19, line:353:5>
|   |-CXXMemberCallExpr 0x558a9990f2c0 <line:351:9, col:21> 'void'
|   | |-MemberExpr 0x558a9990f270 <col:9> '<bound member function type>' ->reset_from 0x558a9990d688
|   | | `-CXXThisExpr 0x558a9990f260 <col:9> 'Args *' implicit this
|   | `-IntegerLiteral 0x558a9990f2a0 <col:20> 'int' 0
|   `-ReturnStmt 0x558a9990f310 <line:352:9, col:17>
|     `-UnaryOperator 0x558a9990f2f8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558a9990f2e8 <col:17> 'Args *' this
|-VarDecl 0x558a998da928 <line:356:5, col:38> col:26 referenced mandatory 'const int' static constexpr cinit
| `-IntegerLiteral 0x558a998da990 <col:38> 'int' 1
|-VarDecl 0x558a998daa20 <line:357:5, col:39> col:26 referenced positional 'const int' static constexpr cinit
| `-IntegerLiteral 0x558a998daa88 <col:39> 'int' 2
|-VarDecl 0x558a998dab18 <line:358:5, col:39> col:26 deprecated 'const int' static constexpr cinit
| `-IntegerLiteral 0x558a998dab80 <col:39> 'int' 4
|-VarDecl 0x558a998dac10 <line:359:5, col:39> col:26 referenced firstmatch 'const int' static constexpr cinit
| `-IntegerLiteral 0x558a998dac78 <col:39> 'int' 8
|-FunctionTemplateDecl 0x558a998daff8 <line:368:5, line:371:5> line:369:11 read
| |-TemplateTypeParmDecl 0x558a998dacf0 <line:368:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x558a998daf58 <line:369:5, line:371:5> line:369:11 read 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x558a998dada0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998dae48 <col:37, col:40> col:40 referenced x 'T &'
|   `-CompoundStmt 0x558a9990f478 <col:43, line:371:5>
|     `-ReturnStmt 0x558a9990f468 <line:370:9, col:34>
|       `-CallExpr 0x558a9990f430 <col:16, col:34> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558a9990f350 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558a9990f3d0 <col:21> 'const char *' lvalue ParmVar 0x558a998dada0 'keyword' 'const char *'
|         |-IntegerLiteral 0x558a9990f3f0 <col:30> 'int' 0
|         `-DeclRefExpr 0x558a9990f410 <col:33> 'T' lvalue ParmVar 0x558a998dae48 'x' 'T &'
|-FunctionTemplateDecl 0x558a998db328 <line:372:5, line:375:5> line:373:11 read_m
| |-TemplateTypeParmDecl 0x558a998db060 <line:372:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x558a998db288 <line:373:5, line:375:5> line:373:11 read_m 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x558a998db110 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998db1b8 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x558a9990f5c8 <col:45, line:375:5>
|     `-ReturnStmt 0x558a9990f5b8 <line:374:9, col:42>
|       `-CallExpr 0x558a9990f580 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558a9990f4a0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558a9990f520 <col:21> 'const char *' lvalue ParmVar 0x558a998db110 'keyword' 'const char *'
|         |-DeclRefExpr 0x558a9990f540 <col:30> 'const int' lvalue Var 0x558a998da928 'mandatory' 'const int'
|         `-DeclRefExpr 0x558a9990f560 <col:41> 'T' lvalue ParmVar 0x558a998db1b8 'x' 'T &'
|-FunctionTemplateDecl 0x558a998db658 <line:376:5, line:379:5> line:377:11 read_p
| |-TemplateTypeParmDecl 0x558a998db390 <line:376:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-CXXMethodDecl 0x558a998db5b8 <line:377:5, line:379:5> line:377:11 read_p 'Args &(const char *, T &)'
| | |-ParmVarDecl 0x558a998db440 <col:18, col:30> col:30 referenced keyword 'const char *'
| | |-ParmVarDecl 0x558a998db4e8 <col:39, col:42> col:42 referenced x 'T &'
| | `-CompoundStmt 0x558a9990f718 <col:45, line:379:5>
| |   `-ReturnStmt 0x558a9990f708 <line:378:9, col:43>
| |     `-CallExpr 0x558a9990f6d0 <col:16, col:43> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x558a9990f5f0 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x558a9990f670 <col:21> 'const char *' lvalue ParmVar 0x558a998db440 'keyword' 'const char *'
| |       |-DeclRefExpr 0x558a9990f690 <col:30> 'const int' lvalue Var 0x558a998daa20 'positional' 'const int'
| |       `-DeclRefExpr 0x558a9990f6b0 <col:42> 'T' lvalue ParmVar 0x558a998db4e8 'x' 'T &'
| `-CXXMethodDecl 0x558a9995dcc8 <line:377:5, line:379:5> line:377:11 used read_p 'Args &(const char *, int &)'
|   |-TemplateArgument type 'int'
|   |-ParmVarDecl 0x558a9995dae8 <col:18, col:30> col:30 keyword 'const char *'
|   `-ParmVarDecl 0x558a9995dbb8 <col:39, col:42> col:42 x 'int &'
|-FunctionTemplateDecl 0x558a998db988 <line:380:5, line:383:5> line:381:11 read_mp
| |-TemplateTypeParmDecl 0x558a998db6c0 <line:380:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x558a998db8e8 <line:381:5, line:383:5> line:381:11 read_mp 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x558a998db770 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998db818 <col:40, col:43> col:43 referenced x 'T &'
|   `-CompoundStmt 0x558a9990f918 <col:46, line:383:5>
|     `-ReturnStmt 0x558a9990f908 <line:382:9, col:55>
|       `-CallExpr 0x558a9990f8d0 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558a9990f740 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558a9990f7c0 <col:21> 'const char *' lvalue ParmVar 0x558a998db770 'keyword' 'const char *'
|         |-BinaryOperator 0x558a9990f890 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x558a9990f840 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x558a9990f820 <col:30> 'const int' lvalue Var 0x558a998da928 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x558a9990f878 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x558a9990f858 <col:42> 'const int' lvalue Var 0x558a998daa20 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x558a9990f8b0 <col:54> 'T' lvalue ParmVar 0x558a998db818 'x' 'T &'
|-FunctionTemplateDecl 0x558a998dbd88 <line:384:5, line:388:5> line:385:11 read
| |-TemplateTypeParmDecl 0x558a998db9f0 <line:384:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x558a998dbce8 <line:385:5, line:388:5> line:385:11 read 'Args &(const char *, int, T &)'
|   |-ParmVarDecl 0x558a998dbaa0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998dbb20 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x558a998dbbc8 <col:48, col:51> col:51 referenced x 'T &'
|   `-CompoundStmt 0x558a9990fa58 <col:54, line:388:5>
|     |-CallExpr 0x558a9990f9e0 <line:386:9, col:47> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x558a9990f930 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x558a9990f970 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x558a9990f980 <col:30> 'const char *' lvalue ParmVar 0x558a998dbaa0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x558a9990f9a0 <col:39> 'int' lvalue ParmVar 0x558a998dbb20 'flags' 'int'
|     | `-DeclRefExpr 0x558a9990f9c0 <col:46> 'T' lvalue ParmVar 0x558a998dbbc8 'x' 'T &'
|     `-ReturnStmt 0x558a9990fa48 <line:387:9, col:17>
|       `-UnaryOperator 0x558a9990fa30 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558a9990fa20 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x558a998dc238 <line:400:5, line:403:5> line:401:11 read_or_set
| |-TemplateTypeParmDecl 0x558a998dbdf8 <line:400:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x558a998dbe78 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x558a998dc198 <line:401:5, line:403:5> line:401:11 read_or_set 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x558a998dbf38 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998dbfd8 <col:44, col:47> col:47 referenced x 'T &'
|   |-ParmVarDecl 0x558a998dc078 <col:50, col:59> col:59 referenced default_value 'const V &'
|   `-CompoundStmt 0x558a9990fbc8 <col:74, line:403:5>
|     `-ReturnStmt 0x558a9990fbb8 <line:402:9, col:56>
|       `-CallExpr 0x558a9990fb78 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558a9990fa88 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558a9990faf8 <col:28> 'const char *' lvalue ParmVar 0x558a998dbf38 'keyword' 'const char *'
|         |-IntegerLiteral 0x558a9990fb18 <col:37> 'int' 0
|         |-DeclRefExpr 0x558a9990fb38 <col:40> 'T' lvalue ParmVar 0x558a998dbfd8 'x' 'T &'
|         `-DeclRefExpr 0x558a9990fb58 <col:43> 'const V' lvalue ParmVar 0x558a998dc078 'default_value' 'const V &'
|-FunctionTemplateDecl 0x558a998dc6a8 <line:404:5, line:407:5> line:405:11 read_or_set_p
| |-TemplateTypeParmDecl 0x558a998dc2a8 <line:404:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x558a998dc328 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x558a998dc608 <line:405:5, line:407:5> line:405:11 read_or_set_p 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x558a998dc3e8 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998dc488 <col:46, col:49> col:49 referenced x 'T &'
|   |-ParmVarDecl 0x558a998dc528 <col:52, col:61> col:61 referenced default_value 'const V &'
|   `-CompoundStmt 0x558a9990fd30 <col:76, line:407:5>
|     `-ReturnStmt 0x558a9990fd20 <line:406:9, col:65>
|       `-CallExpr 0x558a9990fce0 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558a9990fbf0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558a9990fc60 <col:28> 'const char *' lvalue ParmVar 0x558a998dc3e8 'keyword' 'const char *'
|         |-DeclRefExpr 0x558a9990fc80 <col:37> 'const int' lvalue Var 0x558a998daa20 'positional' 'const int'
|         |-DeclRefExpr 0x558a9990fca0 <col:49> 'T' lvalue ParmVar 0x558a998dc488 'x' 'T &'
|         `-DeclRefExpr 0x558a9990fcc0 <col:52> 'const V' lvalue ParmVar 0x558a998dc528 'default_value' 'const V &'
|-FunctionTemplateDecl 0x558a998dcbf8 <line:408:5, line:412:5> line:409:11 read_or_set
| |-TemplateTypeParmDecl 0x558a998dc718 <line:408:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x558a998dc798 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x558a998dcb58 <line:409:5, line:412:5> line:409:11 read_or_set 'Args &(const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x558a998dc858 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998dc8d8 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x558a998dc978 <col:55, col:58> col:58 referenced x 'T &'
|   |-ParmVarDecl 0x558a998dca18 <col:61, col:70> col:70 referenced default_value 'const V &'
|   `-CompoundStmt 0x558a9990fe98 <col:85, line:412:5>
|     |-CallExpr 0x558a9990fe18 <line:410:9, col:69> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x558a9990fd48 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x558a9990fd88 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x558a9990fd98 <col:37> 'const char *' lvalue ParmVar 0x558a998dc858 'keyword' 'const char *'
|     | |-DeclRefExpr 0x558a9990fdb8 <col:46> 'int' lvalue ParmVar 0x558a998dc8d8 'flags' 'int'
|     | |-DeclRefExpr 0x558a9990fdd8 <col:53> 'T' lvalue ParmVar 0x558a998dc978 'x' 'T &'
|     | `-DeclRefExpr 0x558a9990fdf8 <col:56> 'const V' lvalue ParmVar 0x558a998dca18 'default_value' 'const V &'
|     `-ReturnStmt 0x558a9990fe88 <line:411:9, col:17>
|       `-UnaryOperator 0x558a9990fe70 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558a9990fe60 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x558a998dd088 <line:422:5, line:425:5> line:423:11 read
| |-TemplateTypeParmDecl 0x558a998dcc70 <line:422:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558a998dcce8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558a998dcfe8 <line:423:5, line:425:5> line:423:11 read 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x558a998dcda8 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998dce20 <col:37, col:39> col:39 referenced parser 'P'
|   |-ParmVarDecl 0x558a998dcec8 <col:47, col:50> col:50 referenced x 'T &'
|   `-CompoundStmt 0x558a99910018 <col:53, line:425:5>
|     `-ReturnStmt 0x558a99910008 <line:424:9, col:42>
|       `-CallExpr 0x558a9990ffc8 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558a9990fec8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558a9990ff48 <col:21> 'const char *' lvalue ParmVar 0x558a998dcda8 'keyword' 'const char *'
|         |-IntegerLiteral 0x558a9990ff68 <col:30> 'int' 0
|         |-DeclRefExpr 0x558a9990ff88 <col:33> 'P' lvalue ParmVar 0x558a998dce20 'parser' 'P'
|         `-DeclRefExpr 0x558a9990ffa8 <col:41> 'T' lvalue ParmVar 0x558a998dcec8 'x' 'T &'
|-FunctionTemplateDecl 0x558a998dd4d8 <line:426:5, line:429:5> line:427:11 read_m
| |-TemplateTypeParmDecl 0x558a998dd0f8 <line:426:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558a998dd178 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558a998dd438 <line:427:5, line:429:5> line:427:11 read_m 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x558a998dd238 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998dd2b0 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x558a998dd358 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x558a99910190 <col:55, line:429:5>
|     `-ReturnStmt 0x558a99910180 <line:428:9, col:50>
|       `-CallExpr 0x558a99910140 <col:16, col:50> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558a99910040 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558a999100c0 <col:21> 'const char *' lvalue ParmVar 0x558a998dd238 'keyword' 'const char *'
|         |-DeclRefExpr 0x558a999100e0 <col:30> 'const int' lvalue Var 0x558a998da928 'mandatory' 'const int'
|         |-DeclRefExpr 0x558a99910100 <col:41> 'P' lvalue ParmVar 0x558a998dd2b0 'parser' 'P'
|         `-DeclRefExpr 0x558a99910120 <col:49> 'T' lvalue ParmVar 0x558a998dd358 'x' 'T &'
|-FunctionTemplateDecl 0x558a998dd928 <line:430:5, line:433:5> line:431:11 read_p
| |-TemplateTypeParmDecl 0x558a998dd548 <line:430:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558a998dd5c8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558a998dd888 <line:431:5, line:433:5> line:431:11 read_p 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x558a998dd688 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998dd700 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x558a998dd7a8 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x558a99910308 <col:55, line:433:5>
|     `-ReturnStmt 0x558a999102f8 <line:432:9, col:51>
|       `-CallExpr 0x558a999102b8 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558a999101b8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558a99910238 <col:21> 'const char *' lvalue ParmVar 0x558a998dd688 'keyword' 'const char *'
|         |-DeclRefExpr 0x558a99910258 <col:30> 'const int' lvalue Var 0x558a998daa20 'positional' 'const int'
|         |-DeclRefExpr 0x558a99910278 <col:42> 'P' lvalue ParmVar 0x558a998dd700 'parser' 'P'
|         `-DeclRefExpr 0x558a99910298 <col:50> 'T' lvalue ParmVar 0x558a998dd7a8 'x' 'T &'
|-FunctionTemplateDecl 0x558a998e1090 <line:434:5, line:437:5> line:435:11 read_mp
| |-TemplateTypeParmDecl 0x558a998dd998 <line:434:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558a998dda18 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-CXXMethodDecl 0x558a998e0ff0 <line:435:5, line:437:5> line:435:11 read_mp 'Args &(const char *, P, T &)'
| | |-ParmVarDecl 0x558a998ddad8 <col:19, col:31> col:31 referenced keyword 'const char *'
| | |-ParmVarDecl 0x558a998ddb50 <col:40, col:42> col:42 referenced parser 'P'
| | |-ParmVarDecl 0x558a998ddbf8 <col:50, col:53> col:53 referenced x 'T &'
| | `-CompoundStmt 0x558a99910530 <col:56, line:437:5>
| |   `-ReturnStmt 0x558a99910520 <line:436:9, col:63>
| |     `-CallExpr 0x558a999104e0 <col:16, col:63> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x558a99910330 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x558a999103b0 <col:21> 'const char *' lvalue ParmVar 0x558a998ddad8 'keyword' 'const char *'
| |       |-BinaryOperator 0x558a99910480 <col:30, col:42> 'int' '|'
| |       | |-ImplicitCastExpr 0x558a99910430 <col:30> 'int' <LValueToRValue>
| |       | | `-DeclRefExpr 0x558a99910410 <col:30> 'const int' lvalue Var 0x558a998da928 'mandatory' 'const int' non_odr_use_constant
| |       | `-ImplicitCastExpr 0x558a99910468 <col:42> 'int' <LValueToRValue>
| |       |   `-DeclRefExpr 0x558a99910448 <col:42> 'const int' lvalue Var 0x558a998daa20 'positional' 'const int' non_odr_use_constant
| |       |-DeclRefExpr 0x558a999104a0 <col:54> 'P' lvalue ParmVar 0x558a998ddb50 'parser' 'P'
| |       `-DeclRefExpr 0x558a999104c0 <col:62> 'T' lvalue ParmVar 0x558a998ddbf8 'x' 'T &'
| `-CXXMethodDecl 0x558a9995d438 <line:435:5, line:437:5> line:435:11 used read_mp 'Args &(const char *, SecondsArg, unsigned int &)'
|   |-TemplateArgument type 'SecondsArg'
|   |-TemplateArgument type 'unsigned int'
|   |-ParmVarDecl 0x558a9995d1a0 <col:19, col:31> col:31 keyword 'const char *'
|   |-ParmVarDecl 0x558a9995d248 <col:40, col:42> col:42 parser 'SecondsArg':'SecondsArg'
|   `-ParmVarDecl 0x558a9995d318 <col:50, col:53> col:53 x 'unsigned int &'
|-FunctionTemplateDecl 0x558a998e15b8 <line:438:5, line:442:5> line:439:11 read
| |-TemplateTypeParmDecl 0x558a998e1100 <line:438:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558a998e1178 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558a998e1518 <line:439:5, line:442:5> line:439:11 read 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x558a998e1238 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998e12b8 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x558a998e1330 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x558a998e13d8 <col:58, col:61> col:61 referenced x 'T &'
|   `-CompoundStmt 0x558a99910698 <col:64, line:442:5>
|     |-CallExpr 0x558a99910618 <line:440:9, col:55> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x558a99910548 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x558a99910588 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x558a99910598 <col:30> 'const char *' lvalue ParmVar 0x558a998e1238 'keyword' 'const char *'
|     | |-DeclRefExpr 0x558a999105b8 <col:39> 'int' lvalue ParmVar 0x558a998e12b8 'flags' 'int'
|     | |-DeclRefExpr 0x558a999105d8 <col:46> 'P' lvalue ParmVar 0x558a998e1330 'parser' 'P'
|     | `-DeclRefExpr 0x558a999105f8 <col:54> 'T' lvalue ParmVar 0x558a998e13d8 'x' 'T &'
|     `-ReturnStmt 0x558a99910688 <line:441:9, col:17>
|       `-UnaryOperator 0x558a99910670 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558a99910660 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x558a998e1bb8 <line:455:5, line:458:5> line:456:11 read_or_set
| |-TemplateTypeParmDecl 0x558a998e1630 <line:455:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558a998e16a8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x558a998e1728 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x558a998e1b18 <line:456:5, line:458:5> line:456:11 read_or_set 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x558a998e17f0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998e1868 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x558a998e1908 <col:54, col:57> col:57 referenced x 'T &'
|   |-ParmVarDecl 0x558a998e19d8 <col:60, col:69> col:69 referenced default_value 'const V &'
|   `-CompoundStmt 0x558a99910830 <col:84, line:458:5>
|     `-ReturnStmt 0x558a99910820 <line:457:9, col:64>
|       `-CallExpr 0x558a999107d8 <col:16, col:64> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558a999106c8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558a99910738 <col:28> 'const char *' lvalue ParmVar 0x558a998e17f0 'keyword' 'const char *'
|         |-IntegerLiteral 0x558a99910758 <col:37> 'int' 0
|         |-DeclRefExpr 0x558a99910778 <col:40> 'P' lvalue ParmVar 0x558a998e1868 'parser' 'P'
|         |-DeclRefExpr 0x558a99910798 <col:48> 'T' lvalue ParmVar 0x558a998e1908 'x' 'T &'
|         `-DeclRefExpr 0x558a999107b8 <col:51> 'const V' lvalue ParmVar 0x558a998e19d8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x558a998e2138 <line:459:5, line:462:5> line:460:11 read_or_set_p
| |-TemplateTypeParmDecl 0x558a998e1c30 <line:459:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558a998e1ca8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x558a998e1d28 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x558a998e2098 <line:460:5, line:462:5> line:460:11 read_or_set_p 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x558a998e1df0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998e1e68 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x558a998e1f08 <col:56, col:59> col:59 referenced x 'T &'
|   |-ParmVarDecl 0x558a998e1fa8 <col:62, col:71> col:71 referenced default_value 'const V &'
|   `-CompoundStmt 0x558a999109c0 <col:86, line:462:5>
|     `-ReturnStmt 0x558a999109b0 <line:461:9, col:73>
|       `-CallExpr 0x558a99910968 <col:16, col:73> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558a99910858 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558a999108c8 <col:28> 'const char *' lvalue ParmVar 0x558a998e1df0 'keyword' 'const char *'
|         |-DeclRefExpr 0x558a999108e8 <col:37> 'const int' lvalue Var 0x558a998daa20 'positional' 'const int'
|         |-DeclRefExpr 0x558a99910908 <col:49> 'P' lvalue ParmVar 0x558a998e1e68 'parser' 'P'
|         |-DeclRefExpr 0x558a99910928 <col:57> 'T' lvalue ParmVar 0x558a998e1f08 'x' 'T &'
|         `-DeclRefExpr 0x558a99910948 <col:60> 'const V' lvalue ParmVar 0x558a998e1fa8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x558a998e2798 <line:463:5, line:467:5> line:464:11 read_or_set
| |-TemplateTypeParmDecl 0x558a998e21b0 <line:463:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558a998e2228 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x558a998e22a8 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x558a998e26f8 <line:464:5, line:467:5> line:464:11 read_or_set 'Args &(const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x558a998e2370 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998e23f0 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x558a998e2468 <col:55, col:57> col:57 referenced parser 'P'
|   |-ParmVarDecl 0x558a998e2508 <col:65, col:68> col:68 referenced x 'T &'
|   |-ParmVarDecl 0x558a998e25a8 <col:71, col:80> col:80 referenced default_value 'const V &'
|   `-CompoundStmt 0x558a99910b50 <col:95, line:467:5>
|     |-CallExpr 0x558a99910ac8 <line:465:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x558a999109d8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x558a99910a18 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x558a99910a28 <col:37> 'const char *' lvalue ParmVar 0x558a998e2370 'keyword' 'const char *'
|     | |-DeclRefExpr 0x558a99910a48 <col:46> 'int' lvalue ParmVar 0x558a998e23f0 'flags' 'int'
|     | |-DeclRefExpr 0x558a99910a68 <col:53> 'P' lvalue ParmVar 0x558a998e2468 'parser' 'P'
|     | |-DeclRefExpr 0x558a99910a88 <col:61> 'T' lvalue ParmVar 0x558a998e2508 'x' 'T &'
|     | `-DeclRefExpr 0x558a99910aa8 <col:64> 'const V' lvalue ParmVar 0x558a998e25a8 'default_value' 'const V &'
|     `-ReturnStmt 0x558a99910b40 <line:466:9, col:17>
|       `-UnaryOperator 0x558a99910b28 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558a99910b18 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x558a998e2d78 <line:478:5, line:481:5> line:479:11 read
| |-TemplateTypeParmDecl 0x558a998e2818 <line:478:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558a998e2898 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x558a998e2918 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x558a998e2cd8 <line:479:5, line:481:5> line:479:11 read 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x558a998e29e0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998e2a58 <col:37, col:39> col:39 referenced parser 'P'
|   |-ParmVarDecl 0x558a998e2af8 <col:47, col:51> col:51 referenced x1 'T1 &'
|   |-ParmVarDecl 0x558a998e2b98 <col:55, col:59> col:59 referenced x2 'T2 &'
|   `-CompoundStmt 0x558a99910cf8 <col:63, line:481:5>
|     `-ReturnStmt 0x558a99910ce8 <line:480:9, col:47>
|       `-CallExpr 0x558a99910ca0 <col:16, col:47> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558a99910b80 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558a99910c00 <col:21> 'const char *' lvalue ParmVar 0x558a998e29e0 'keyword' 'const char *'
|         |-IntegerLiteral 0x558a99910c20 <col:30> 'int' 0
|         |-DeclRefExpr 0x558a99910c40 <col:33> 'P' lvalue ParmVar 0x558a998e2a58 'parser' 'P'
|         |-DeclRefExpr 0x558a99910c60 <col:41> 'T1' lvalue ParmVar 0x558a998e2af8 'x1' 'T1 &'
|         `-DeclRefExpr 0x558a99910c80 <col:45> 'T2' lvalue ParmVar 0x558a998e2b98 'x2' 'T2 &'
|-FunctionTemplateDecl 0x558a998e32f8 <line:482:5, line:485:5> line:483:11 read_m
| |-TemplateTypeParmDecl 0x558a998e2df0 <line:482:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558a998e2e68 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x558a998e2ee8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x558a998e3258 <line:483:5, line:485:5> line:483:11 read_m 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x558a998e2fb0 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998e3028 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x558a998e30c8 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x558a998e3168 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x558a99910e98 <col:65, line:485:5>
|     `-ReturnStmt 0x558a99910e88 <line:484:9, col:55>
|       `-CallExpr 0x558a99910e40 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558a99910d20 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558a99910da0 <col:21> 'const char *' lvalue ParmVar 0x558a998e2fb0 'keyword' 'const char *'
|         |-DeclRefExpr 0x558a99910dc0 <col:30> 'const int' lvalue Var 0x558a998da928 'mandatory' 'const int'
|         |-DeclRefExpr 0x558a99910de0 <col:41> 'P' lvalue ParmVar 0x558a998e3028 'parser' 'P'
|         |-DeclRefExpr 0x558a99910e00 <col:49> 'T1' lvalue ParmVar 0x558a998e30c8 'x1' 'T1 &'
|         `-DeclRefExpr 0x558a99910e20 <col:53> 'T2' lvalue ParmVar 0x558a998e3168 'x2' 'T2 &'
|-FunctionTemplateDecl 0x558a998e3878 <line:486:5, line:489:5> line:487:11 read_p
| |-TemplateTypeParmDecl 0x558a998e3370 <line:486:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558a998e33e8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x558a998e3468 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x558a998e37d8 <line:487:5, line:489:5> line:487:11 read_p 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x558a998e3530 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998e35a8 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x558a998e3648 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x558a998e36e8 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x558a99911038 <col:65, line:489:5>
|     `-ReturnStmt 0x558a99911028 <line:488:9, col:56>
|       `-CallExpr 0x558a99910fe0 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558a99910ec0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558a99910f40 <col:21> 'const char *' lvalue ParmVar 0x558a998e3530 'keyword' 'const char *'
|         |-DeclRefExpr 0x558a99910f60 <col:30> 'const int' lvalue Var 0x558a998daa20 'positional' 'const int'
|         |-DeclRefExpr 0x558a99910f80 <col:42> 'P' lvalue ParmVar 0x558a998e35a8 'parser' 'P'
|         |-DeclRefExpr 0x558a99910fa0 <col:50> 'T1' lvalue ParmVar 0x558a998e3648 'x1' 'T1 &'
|         `-DeclRefExpr 0x558a99910fc0 <col:54> 'T2' lvalue ParmVar 0x558a998e36e8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x558a998e3df8 <line:490:5, line:493:5> line:491:11 read_mp
| |-TemplateTypeParmDecl 0x558a998e38f0 <line:490:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558a998e3968 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x558a998e39e8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x558a998e3d58 <line:491:5, line:493:5> line:491:11 read_mp 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x558a998e3ab0 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998e3b28 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x558a998e3bc8 <col:50, col:54> col:54 referenced x1 'T1 &'
|   |-ParmVarDecl 0x558a998e3c68 <col:58, col:62> col:62 referenced x2 'T2 &'
|   `-CompoundStmt 0x558a99911288 <col:66, line:493:5>
|     `-ReturnStmt 0x558a99911278 <line:492:9, col:68>
|       `-CallExpr 0x558a99911230 <col:16, col:68> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558a99911060 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558a999110e0 <col:21> 'const char *' lvalue ParmVar 0x558a998e3ab0 'keyword' 'const char *'
|         |-BinaryOperator 0x558a999111b0 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x558a99911160 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x558a99911140 <col:30> 'const int' lvalue Var 0x558a998da928 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x558a99911198 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x558a99911178 <col:42> 'const int' lvalue Var 0x558a998daa20 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x558a999111d0 <col:54> 'P' lvalue ParmVar 0x558a998e3b28 'parser' 'P'
|         |-DeclRefExpr 0x558a999111f0 <col:62> 'T1' lvalue ParmVar 0x558a998e3bc8 'x1' 'T1 &'
|         `-DeclRefExpr 0x558a99911210 <col:66> 'T2' lvalue ParmVar 0x558a998e3c68 'x2' 'T2 &'
|-FunctionTemplateDecl 0x558a998e4458 <line:494:5, line:498:5> line:495:11 read
| |-TemplateTypeParmDecl 0x558a998e3e70 <line:494:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558a998e3ee8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x558a998e3f68 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x558a998e43b8 <line:495:5, line:498:5> line:495:11 read 'Args &(const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x558a998e4030 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998e40b0 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x558a998e4128 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x558a998e41c8 <col:58, col:62> col:62 referenced x1 'T1 &'
|   |-ParmVarDecl 0x558a998e4268 <col:66, col:70> col:70 referenced x2 'T2 &'
|   `-CompoundStmt 0x558a99911418 <col:74, line:498:5>
|     |-CallExpr 0x558a99911390 <line:496:9, col:60> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x558a999112a0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x558a999112e0 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x558a999112f0 <col:30> 'const char *' lvalue ParmVar 0x558a998e4030 'keyword' 'const char *'
|     | |-DeclRefExpr 0x558a99911310 <col:39> 'int' lvalue ParmVar 0x558a998e40b0 'flags' 'int'
|     | |-DeclRefExpr 0x558a99911330 <col:46> 'P' lvalue ParmVar 0x558a998e4128 'parser' 'P'
|     | |-DeclRefExpr 0x558a99911350 <col:54> 'T1' lvalue ParmVar 0x558a998e41c8 'x1' 'T1 &'
|     | `-DeclRefExpr 0x558a99911370 <col:58> 'T2' lvalue ParmVar 0x558a998e4268 'x2' 'T2 &'
|     `-ReturnStmt 0x558a99911408 <line:497:9, col:17>
|       `-UnaryOperator 0x558a999113f0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558a999113e0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x558a998e47b8 <line:506:5, line:509:5> line:507:11 read_with
| |-TemplateTypeParmDecl 0x558a998e44d8 <line:506:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x558a998e4718 <line:507:5, line:509:5> line:507:11 read_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x558a998e4590 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998e4608 <col:42, col:44> col:44 referenced parser 'P'
|   `-CompoundStmt 0x558a99911560 <col:52, line:509:5>
|     `-ReturnStmt 0x558a99911550 <line:508:9, col:44>
|       `-CallExpr 0x558a99911518 <col:16, col:44> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558a99911448 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558a999114b8 <col:26> 'const char *' lvalue ParmVar 0x558a998e4590 'keyword' 'const char *'
|         |-IntegerLiteral 0x558a999114d8 <col:35> 'int' 0
|         `-DeclRefExpr 0x558a999114f8 <col:38> 'P' lvalue ParmVar 0x558a998e4608 'parser' 'P'
|-FunctionTemplateDecl 0x558a998e4ab8 <line:510:5, line:513:5> line:511:11 read_m_with
| |-TemplateTypeParmDecl 0x558a998e4820 <line:510:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x558a998e4a18 <line:511:5, line:513:5> line:511:11 read_m_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x558a998e48d0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998e4948 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x558a999116a0 <col:54, line:513:5>
|     `-ReturnStmt 0x558a99911690 <line:512:9, col:52>
|       `-CallExpr 0x558a99911658 <col:16, col:52> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558a99911588 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558a999115f8 <col:26> 'const char *' lvalue ParmVar 0x558a998e48d0 'keyword' 'const char *'
|         |-DeclRefExpr 0x558a99911618 <col:35> 'const int' lvalue Var 0x558a998da928 'mandatory' 'const int'
|         `-DeclRefExpr 0x558a99911638 <col:46> 'P' lvalue ParmVar 0x558a998e4948 'parser' 'P'
|-FunctionTemplateDecl 0x558a998e4db8 <line:514:5, line:517:5> line:515:11 read_p_with
| |-TemplateTypeParmDecl 0x558a998e4b20 <line:514:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x558a998e4d18 <line:515:5, line:517:5> line:515:11 read_p_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x558a998e4bd0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998e4c48 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x558a999117e0 <col:54, line:517:5>
|     `-ReturnStmt 0x558a999117d0 <line:516:9, col:53>
|       `-CallExpr 0x558a99911798 <col:16, col:53> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558a999116c8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558a99911738 <col:26> 'const char *' lvalue ParmVar 0x558a998e4bd0 'keyword' 'const char *'
|         |-DeclRefExpr 0x558a99911758 <col:35> 'const int' lvalue Var 0x558a998daa20 'positional' 'const int'
|         `-DeclRefExpr 0x558a99911778 <col:47> 'P' lvalue ParmVar 0x558a998e4c48 'parser' 'P'
|-FunctionTemplateDecl 0x558a998e50b8 <line:518:5, line:521:5> line:519:11 read_mp_with
| |-TemplateTypeParmDecl 0x558a998e4e20 <line:518:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x558a998e5018 <line:519:5, line:521:5> line:519:11 read_mp_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x558a998e4ed0 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998e4f48 <col:45, col:47> col:47 referenced parser 'P'
|   `-CompoundStmt 0x558a999119d0 <col:55, line:521:5>
|     `-ReturnStmt 0x558a999119c0 <line:520:9, col:65>
|       `-CallExpr 0x558a99911988 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558a99911808 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558a99911878 <col:26> 'const char *' lvalue ParmVar 0x558a998e4ed0 'keyword' 'const char *'
|         |-BinaryOperator 0x558a99911948 <col:35, col:47> 'int' '|'
|         | |-ImplicitCastExpr 0x558a999118f8 <col:35> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x558a999118d8 <col:35> 'const int' lvalue Var 0x558a998da928 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x558a99911930 <col:47> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x558a99911910 <col:47> 'const int' lvalue Var 0x558a998daa20 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x558a99911968 <col:59> 'P' lvalue ParmVar 0x558a998e4f48 'parser' 'P'
|-FunctionTemplateDecl 0x558a998e5488 <line:522:5, line:526:5> line:523:11 read_with
| |-TemplateTypeParmDecl 0x558a998e5120 <line:522:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x558a998e53e8 <line:523:5, line:526:5> line:523:11 read_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x558a998e51d0 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998e5250 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x558a998e52c8 <col:53, col:55> col:55 referenced parser 'P'
|   `-CompoundStmt 0x558a99911b10 <col:63, line:526:5>
|     |-CallExpr 0x558a99911a98 <line:524:9, col:57> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x558a999119e8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_with' empty
|     | |-CXXThisExpr 0x558a99911a28 <col:29> 'Args *' this
|     | |-DeclRefExpr 0x558a99911a38 <col:35> 'const char *' lvalue ParmVar 0x558a998e51d0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x558a99911a58 <col:44> 'int' lvalue ParmVar 0x558a998e5250 'flags' 'int'
|     | `-DeclRefExpr 0x558a99911a78 <col:51> 'P' lvalue ParmVar 0x558a998e52c8 'parser' 'P'
|     `-ReturnStmt 0x558a99911b00 <line:525:9, col:17>
|       `-UnaryOperator 0x558a99911ae8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558a99911ad8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x558a998e58d8 <line:538:5, line:541:5> line:539:11 read_with
| |-TemplateTypeParmDecl 0x558a998e54f8 <line:538:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558a998e5578 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558a998e5838 <line:539:5, line:541:5> line:539:11 read_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x558a998e5638 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998e56b0 <col:42, col:44> col:44 referenced parser 'P'
|   |-ParmVarDecl 0x558a998e5758 <col:52, col:55> col:55 referenced x 'T &'
|   `-CompoundStmt 0x558a99911c68 <col:58, line:541:5>
|     `-ReturnStmt 0x558a99911c58 <line:540:9, col:39>
|       `-CallExpr 0x558a99911c20 <col:16, col:39> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558a99911b40 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558a99911bc0 <col:21> 'const char *' lvalue ParmVar 0x558a998e5638 'keyword' 'const char *'
|         |-DeclRefExpr 0x558a99911be0 <col:30> 'P' lvalue ParmVar 0x558a998e56b0 'parser' 'P'
|         `-DeclRefExpr 0x558a99911c00 <col:38> 'T' lvalue ParmVar 0x558a998e5758 'x' 'T &'
|-FunctionTemplateDecl 0x558a998e5d28 <line:542:5, line:545:5> line:543:11 read_m_with
| |-TemplateTypeParmDecl 0x558a998e5948 <line:542:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558a998e59c8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558a998e5c88 <line:543:5, line:545:5> line:543:11 read_m_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x558a998e5a88 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998e5b00 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x558a998e5ba8 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x558a99911da0 <col:60, line:545:5>
|     `-ReturnStmt 0x558a99911d90 <line:544:9, col:41>
|       `-CallExpr 0x558a99911d58 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558a99911c90 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558a99911cf8 <col:23> 'const char *' lvalue ParmVar 0x558a998e5a88 'keyword' 'const char *'
|         |-DeclRefExpr 0x558a99911d18 <col:32> 'P' lvalue ParmVar 0x558a998e5b00 'parser' 'P'
|         `-DeclRefExpr 0x558a99911d38 <col:40> 'T' lvalue ParmVar 0x558a998e5ba8 'x' 'T &'
|-FunctionTemplateDecl 0x558a998e6178 <line:546:5, line:549:5> line:547:11 read_p_with
| |-TemplateTypeParmDecl 0x558a998e5d98 <line:546:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558a998e5e18 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558a998e60d8 <line:547:5, line:549:5> line:547:11 read_p_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x558a998e5ed8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998e5f50 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x558a998e5ff8 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x558a99911ed8 <col:60, line:549:5>
|     `-ReturnStmt 0x558a99911ec8 <line:548:9, col:41>
|       `-CallExpr 0x558a99911e90 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558a99911dc8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558a99911e30 <col:23> 'const char *' lvalue ParmVar 0x558a998e5ed8 'keyword' 'const char *'
|         |-DeclRefExpr 0x558a99911e50 <col:32> 'P' lvalue ParmVar 0x558a998e5f50 'parser' 'P'
|         `-DeclRefExpr 0x558a99911e70 <col:40> 'T' lvalue ParmVar 0x558a998e5ff8 'x' 'T &'
|-FunctionTemplateDecl 0x558a998e65c8 <line:550:5, line:553:5> line:551:11 read_mp_with
| |-TemplateTypeParmDecl 0x558a998e61e8 <line:550:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558a998e6268 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558a998e6528 <line:551:5, line:553:5> line:551:11 read_mp_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x558a998e6328 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998e63a0 <col:45, col:47> col:47 referenced parser 'P'
|   |-ParmVarDecl 0x558a998e6448 <col:55, col:58> col:58 referenced x 'T &'
|   `-CompoundStmt 0x558a99912010 <col:61, line:553:5>
|     `-ReturnStmt 0x558a99912000 <line:552:9, col:42>
|       `-CallExpr 0x558a99911fc8 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558a99911f00 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558a99911f68 <col:24> 'const char *' lvalue ParmVar 0x558a998e6328 'keyword' 'const char *'
|         |-DeclRefExpr 0x558a99911f88 <col:33> 'P' lvalue ParmVar 0x558a998e63a0 'parser' 'P'
|         `-DeclRefExpr 0x558a99911fa8 <col:41> 'T' lvalue ParmVar 0x558a998e6448 'x' 'T &'
|-FunctionTemplateDecl 0x558a998e6aa8 <line:554:5, line:557:5> line:555:11 read_with
| |-TemplateTypeParmDecl 0x558a998e6638 <line:554:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558a998e66b8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558a998e6a08 <line:555:5, line:557:5> line:555:11 read_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x558a998e6778 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998e67f8 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x558a998e6870 <col:53, col:55> col:55 referenced parser 'P'
|   |-ParmVarDecl 0x558a998e6918 <col:63, col:66> col:66 referenced x 'T &'
|   `-CompoundStmt 0x558a99912188 <col:69, line:557:5>
|     `-ReturnStmt 0x558a99912178 <line:556:9, col:46>
|       `-CallExpr 0x558a99912138 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558a99912038 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558a999120b8 <col:21> 'const char *' lvalue ParmVar 0x558a998e6778 'keyword' 'const char *'
|         |-DeclRefExpr 0x558a999120d8 <col:30> 'int' lvalue ParmVar 0x558a998e67f8 'flags' 'int'
|         |-DeclRefExpr 0x558a999120f8 <col:37> 'P' lvalue ParmVar 0x558a998e6870 'parser' 'P'
|         `-DeclRefExpr 0x558a99912118 <col:45> 'T' lvalue ParmVar 0x558a998e6918 'x' 'T &'
|-FunctionTemplateDecl 0x558a998e6db8 <line:568:5, line:571:5> line:569:11 read_all_with
| |-TemplateTypeParmDecl 0x558a998e6b20 <line:568:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x558a998e6d18 <line:569:5, line:571:5> line:569:11 read_all_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x558a998e6bd0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998e6c48 <col:46, col:48> col:48 referenced parser 'P'
|   `-CompoundStmt 0x558a999122c8 <col:56, line:571:5>
|     `-ReturnStmt 0x558a999122b8 <line:570:9, col:48>
|       `-CallExpr 0x558a99912280 <col:16, col:48> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558a999121b0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558a99912220 <col:30> 'const char *' lvalue ParmVar 0x558a998e6bd0 'keyword' 'const char *'
|         |-IntegerLiteral 0x558a99912240 <col:39> 'int' 0
|         `-DeclRefExpr 0x558a99912260 <col:42> 'P' lvalue ParmVar 0x558a998e6c48 'parser' 'P'
|-FunctionTemplateDecl 0x558a998e7148 <line:572:5, line:576:5> line:573:11 read_all_with
| |-TemplateTypeParmDecl 0x558a998e6e20 <line:572:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x558a998e70a8 <line:573:5, line:576:5> line:573:11 read_all_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x558a998e6ed0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998e6f50 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x558a998e6fc8 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x558a99912498 <col:67, line:576:5>
|     |-CallExpr 0x558a99912420 <line:574:9, col:74> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x558a999122e0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x558a99912320 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x558a99912330 <col:39> 'const char *' lvalue ParmVar 0x558a998e6ed0 'keyword' 'const char *'
|     | |-BinaryOperator 0x558a999123e0 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x558a99912390 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x558a99912350 <col:48> 'int' lvalue ParmVar 0x558a998e6f50 'flags' 'int'
|     | | `-ImplicitCastExpr 0x558a999123c8 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x558a999123a8 <col:56> 'const int' lvalue Var 0x558a998dac10 'firstmatch' 'const int' non_odr_use_constant
|     | `-DeclRefExpr 0x558a99912400 <col:68> 'P' lvalue ParmVar 0x558a998e6fc8 'parser' 'P'
|     `-ReturnStmt 0x558a99912488 <line:575:9, col:17>
|       `-UnaryOperator 0x558a99912470 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558a99912460 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x558a998e7598 <line:589:5, line:592:5> line:590:11 read_all_with
| |-TemplateTypeParmDecl 0x558a998e71b8 <line:589:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558a998e7238 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558a998e74f8 <line:590:5, line:592:5> line:590:11 read_all_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x558a998e72f8 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998e7370 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x558a998e7418 <col:56, col:59> col:59 referenced x 'T &'
|   `-CompoundStmt 0x558a99912608 <col:62, line:592:5>
|     `-ReturnStmt 0x558a999125f8 <line:591:9, col:51>
|       `-CallExpr 0x558a999125b8 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558a999124c8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558a99912538 <col:30> 'const char *' lvalue ParmVar 0x558a998e72f8 'keyword' 'const char *'
|         |-IntegerLiteral 0x558a99912558 <col:39> 'int' 0
|         |-DeclRefExpr 0x558a99912578 <col:42> 'P' lvalue ParmVar 0x558a998e7370 'parser' 'P'
|         `-DeclRefExpr 0x558a99912598 <col:50> 'T' lvalue ParmVar 0x558a998e7418 'x' 'T &'
|-FunctionTemplateDecl 0x558a998e7a78 <line:593:5, line:597:5> line:594:11 read_all_with
| |-TemplateTypeParmDecl 0x558a998e7608 <line:593:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558a998e7688 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558a998e79d8 <line:594:5, line:597:5> line:594:11 read_all_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x558a998e7748 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998e77c8 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x558a998e7840 <col:57, col:59> col:59 referenced parser 'P'
|   |-ParmVarDecl 0x558a998e78e8 <col:67, col:70> col:70 referenced x 'T &'
|   `-CompoundStmt 0x558a99912800 <col:73, line:597:5>
|     |-CallExpr 0x558a99912780 <line:595:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x558a99912620 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x558a99912660 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x558a99912670 <col:39> 'const char *' lvalue ParmVar 0x558a998e7748 'keyword' 'const char *'
|     | |-BinaryOperator 0x558a99912720 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x558a999126d0 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x558a99912690 <col:48> 'int' lvalue ParmVar 0x558a998e77c8 'flags' 'int'
|     | | `-ImplicitCastExpr 0x558a99912708 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x558a999126e8 <col:56> 'const int' lvalue Var 0x558a998dac10 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x558a99912740 <col:68> 'P' lvalue ParmVar 0x558a998e7840 'parser' 'P'
|     | `-DeclRefExpr 0x558a99912760 <col:76> 'T' lvalue ParmVar 0x558a998e78e8 'x' 'T &'
|     `-ReturnStmt 0x558a999127f0 <line:596:9, col:17>
|       `-UnaryOperator 0x558a999127d8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558a999127c8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x558a998e8028 <line:611:5, line:614:5> line:612:11 read_all
| |-TemplateTypeParmDecl 0x558a998e7af0 <line:611:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558a998e7b68 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558a998e7f88 <line:612:5, line:614:5> line:612:11 read_all 'Args &(const char *, P, Vector<T> &)'
|   |-ParmVarDecl 0x558a998e7c28 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998e7ca0 <col:41, col:43> col:43 referenced parser 'P'
|   |-ParmVarDecl 0x558a998e7e60 <col:51, col:62> col:62 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x558a99912970 <col:65, line:614:5>
|     `-ReturnStmt 0x558a99912960 <line:613:9, col:46>
|       `-CallExpr 0x558a99912920 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558a99912830 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558a999128a0 <col:25> 'const char *' lvalue ParmVar 0x558a998e7c28 'keyword' 'const char *'
|         |-IntegerLiteral 0x558a999128c0 <col:34> 'int' 0
|         |-DeclRefExpr 0x558a999128e0 <col:37> 'P' lvalue ParmVar 0x558a998e7ca0 'parser' 'P'
|         `-DeclRefExpr 0x558a99912900 <col:45> 'Vector<T>' lvalue ParmVar 0x558a998e7e60 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x558a998e8458 <line:615:5, line:618:5> line:616:11 read_all
| |-TemplateTypeParmDecl 0x558a998e8098 <line:615:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x558a998e83b8 <line:616:5, line:618:5> line:616:11 read_all 'Args &(const char *, Vector<T> &)'
|   |-ParmVarDecl 0x558a998e8150 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998e82a0 <col:41, col:52> col:52 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x558a99912b90 <col:55, line:618:5>
|     `-ReturnStmt 0x558a99912b80 <line:617:9, col:55>
|       `-CallExpr 0x558a99912b40 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558a99912998 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558a99912a08 <col:25> 'const char *' lvalue ParmVar 0x558a998e8150 'keyword' 'const char *'
|         |-IntegerLiteral 0x558a99912a28 <col:34> 'int' 0
|         |-CXXUnresolvedConstructExpr 0x558a99912b00 <col:37, col:51> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x558a99912b20 <col:54> 'Vector<T>' lvalue ParmVar 0x558a998e82a0 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x558a998e8a28 <line:619:5, line:623:5> line:620:11 read_all
| |-TemplateTypeParmDecl 0x558a998e84c0 <line:619:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558a998e8538 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558a998e8988 <line:620:5, line:623:5> line:620:11 read_all 'Args &(const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x558a998e85f8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998e8678 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x558a998e86f0 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x558a998e8840 <col:62, col:73> col:73 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x558a99912d88 <col:76, line:623:5>
|     |-CallExpr 0x558a99912d08 <line:621:9, col:72> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x558a99912ba8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all' empty
|     | |-CXXThisExpr 0x558a99912be8 <col:28> 'Args *' this
|     | |-DeclRefExpr 0x558a99912bf8 <col:34> 'const char *' lvalue ParmVar 0x558a998e85f8 'keyword' 'const char *'
|     | |-BinaryOperator 0x558a99912ca8 <col:43, col:51> 'int' '|'
|     | | |-ImplicitCastExpr 0x558a99912c58 <col:43> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x558a99912c18 <col:43> 'int' lvalue ParmVar 0x558a998e8678 'flags' 'int'
|     | | `-ImplicitCastExpr 0x558a99912c90 <col:51> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x558a99912c70 <col:51> 'const int' lvalue Var 0x558a998dac10 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x558a99912cc8 <col:63> 'P' lvalue ParmVar 0x558a998e86f0 'parser' 'P'
|     | `-DeclRefExpr 0x558a99912ce8 <col:71> 'Vector<T>' lvalue ParmVar 0x558a998e8840 'x' 'Vector<T> &'
|     `-ReturnStmt 0x558a99912d78 <line:622:9, col:17>
|       `-UnaryOperator 0x558a99912d60 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558a99912d50 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x558a998e8f68 <line:624:5, line:627:5> line:625:11 read_all
| |-TemplateTypeParmDecl 0x558a998e8aa0 <line:624:15, col:24> col:24 typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558a998e8b18 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558a998e8ec8 <line:625:5, line:627:5> line:625:11 read_all 'Args &(const char *, int, Vector<T> &)'
|   |-ParmVarDecl 0x558a998e8bd8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998e8c58 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x558a998e8da0 <col:52, col:63> col:63 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x558a99912ff0 <col:66, line:627:5>
|     `-ReturnStmt 0x558a99912fe0 <line:626:9, col:59>
|       `-CallExpr 0x558a99912fa0 <col:16, col:59> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558a99912db8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558a99912e28 <col:25> 'const char *' lvalue ParmVar 0x558a998e8bd8 'keyword' 'const char *'
|         |-DeclRefExpr 0x558a99912e48 <col:34> 'int' lvalue ParmVar 0x558a998e8c58 'flags' 'int'
|         |-CXXUnresolvedConstructExpr 0x558a99912f60 <col:41, col:55> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x558a99912f80 <col:58> 'Vector<T>' lvalue ParmVar 0x558a998e8da0 'x' 'Vector<T> &'
|-CXXMethodDecl 0x558a998ee310 <line:631:5, line:633:5> line:631:10 status 'bool () const'
| `-CompoundStmt 0x558a99913070 <col:25, line:633:5>
|   `-ReturnStmt 0x558a99913060 <line:632:9, col:16>
|     `-ImplicitCastExpr 0x558a99913048 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x558a99913018 <col:16> 'const bool' lvalue ->_status 0x558a998f4148
|         `-CXXThisExpr 0x558a99913008 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x558a998ee488 <line:636:5, line:639:5> line:636:11 status 'Args &(bool &)'
| |-ParmVarDecl 0x558a998ee3c8 <col:18, col:24> col:24 used x 'bool &'
| `-CompoundStmt 0x558a99913158 <col:27, line:639:5>
|   |-BinaryOperator 0x558a99913100 <line:637:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x558a99913088 <col:9> 'bool' lvalue ParmVar 0x558a998ee3c8 'x' 'bool &'
|   | `-ImplicitCastExpr 0x558a999130e8 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x558a999130b8 <col:13> 'bool' lvalue ->_status 0x558a998f4148
|   |     `-CXXThisExpr 0x558a999130a8 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x558a99913148 <line:638:9, col:17>
|     `-UnaryOperator 0x558a99913130 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558a99913120 <col:17> 'Args *' this
|-CXXMethodDecl 0x558a998ee608 <line:641:5, line:644:5> line:641:17 status 'const Args &(bool &) const'
| |-ParmVarDecl 0x558a998ee548 <col:24, col:30> col:30 used x 'bool &'
| `-CompoundStmt 0x558a99913248 <col:39, line:644:5>
|   |-BinaryOperator 0x558a999131f0 <line:642:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x558a99913178 <col:9> 'bool' lvalue ParmVar 0x558a998ee548 'x' 'bool &'
|   | `-ImplicitCastExpr 0x558a999131d8 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x558a999131a8 <col:13> 'const bool' lvalue ->_status 0x558a998f4148
|   |     `-CXXThisExpr 0x558a99913198 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x558a99913238 <line:643:9, col:17>
|     `-UnaryOperator 0x558a99913220 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558a99913210 <col:17> 'const Args *' this
|-CXXMethodDecl 0x558a998ee6d0 <line:649:5, line:651:5> line:649:10 read_status 'bool () const'
| `-CompoundStmt 0x558a999132f0 <col:30, line:651:5>
|   `-ReturnStmt 0x558a999132e0 <line:650:9, col:16>
|     `-ImplicitCastExpr 0x558a999132c8 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x558a99913298 <col:16> 'bool' lvalue ->_read_status 0x558a998d01e0
|         `-ImplicitCastExpr 0x558a99913278 <col:16> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|           `-CXXThisExpr 0x558a99913268 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x558a998ee818 <line:655:5, line:658:5> line:655:11 read_status 'Args &(bool &)'
| |-ParmVarDecl 0x558a998ee788 <col:23, col:29> col:29 used x 'bool &'
| `-CompoundStmt 0x558a999133f8 <col:32, line:658:5>
|   |-BinaryOperator 0x558a999133a0 <line:656:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x558a99913308 <col:9> 'bool' lvalue ParmVar 0x558a998ee788 'x' 'bool &'
|   | `-ImplicitCastExpr 0x558a99913388 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x558a99913358 <col:13> 'bool' lvalue ->_read_status 0x558a998d01e0
|   |     `-ImplicitCastExpr 0x558a99913338 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x558a99913328 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x558a999133e8 <line:657:9, col:17>
|     `-UnaryOperator 0x558a999133d0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558a999133c0 <col:17> 'Args *' this
|-CXXMethodDecl 0x558a998ee968 <line:660:5, line:663:5> line:660:17 read_status 'const Args &(bool &) const'
| |-ParmVarDecl 0x558a998ee8d8 <col:29, col:35> col:35 used x 'bool &'
| `-CompoundStmt 0x558a99913508 <col:44, line:663:5>
|   |-BinaryOperator 0x558a999134b0 <line:661:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x558a99913418 <col:9> 'bool' lvalue ParmVar 0x558a998ee8d8 'x' 'bool &'
|   | `-ImplicitCastExpr 0x558a99913498 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x558a99913468 <col:13> 'bool' lvalue ->_read_status 0x558a998d01e0
|   |     `-ImplicitCastExpr 0x558a99913448 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x558a99913438 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x558a999134f8 <line:662:9, col:17>
|     `-UnaryOperator 0x558a999134e0 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558a999134d0 <col:17> 'const Args *' this
|-CXXMethodDecl 0x558a998eea30 <line:667:5, col:17> col:11 strip 'Args &()'
|-CXXMethodDecl 0x558a998eeaf8 <line:675:5, col:17> col:9 execute 'int ()'
|-CXXMethodDecl 0x558a998eebc0 <line:684:5, col:17> col:9 consume 'int ()'
|-CXXMethodDecl 0x558a998eec88 <line:693:5, col:18> col:9 used complete 'int ()'
|-FunctionTemplateDecl 0x558a998eef98 <line:700:5, line:706:5> line:701:8 slot
| |-TemplateTypeParmDecl 0x558a998eed28 <line:700:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x558a998eeef8 <line:701:5, line:706:5> line:701:8 slot 'T *(T &)'
|   |-ParmVarDecl 0x558a998eee08 <col:13, col:16> col:16 referenced x 'T &'
|   `-CompoundStmt 0x558a999138c0 <col:19, line:706:5>
|     `-IfStmt 0x558a99913898 <line:702:9, line:705:34> has_else
|       |-CXXDependentScopeMemberExpr 0x558a99913608 <line:702:13, col:34> '<dependent type>' lvalue ->value
|       |-ReturnStmt 0x558a999137c8 <line:703:13, col:68>
|       | `-CXXReinterpretCastExpr 0x558a99913798 <col:20, col:68> 'T *' reinterpret_cast<T *> <Dependent>
|       |   `-CallExpr 0x558a99913758 <col:42, col:67> '<dependent type>'
|       |     |-MemberExpr 0x558a99913660 <col:42> '<bound member function type>' ->simple_slot 0x558a9990e340
|       |     | `-CXXThisExpr 0x558a99913650 <col:42> 'Args *' implicit this
|       |     |-CXXOperatorCallExpr 0x558a999136f8 <col:54, col:55> '<dependent type>'
|       |     | |-UnresolvedLookupExpr 0x558a999136b0 <col:54> '<overloaded function type>' lvalue (ADL) = 'operator&' 0x558a995cbd68
|       |     | `-DeclRefExpr 0x558a99913690 <col:55> 'T' lvalue ParmVar 0x558a998eee08 'x' 'T &'
|       |     `-UnaryExprOrTypeTraitExpr 0x558a99913738 <col:58, col:66> 'unsigned long' sizeof 'T'
|       `-ReturnStmt 0x558a99913888 <line:705:13, col:34>
|         `-CallExpr 0x558a99913860 <col:20, col:34> '<dependent type>'
|           |-UnresolvedMemberExpr 0x558a999137e8 <col:20> '<bound member function type>' lvalue
|           `-DeclRefExpr 0x558a99913840 <col:33> 'T' lvalue ParmVar 0x558a998eee08 'x' 'T &'
|-FunctionTemplateDecl 0x558a998ef268 <line:711:5, line:717:5> line:712:8 initialized_slot
| |-TemplateTypeParmDecl 0x558a998eeff8 <line:711:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x558a998ef1c8 <line:712:5, line:717:5> line:712:8 initialized_slot 'T *(T &)'
|   |-ParmVarDecl 0x558a998ef0d8 <col:25, col:28> col:28 referenced x 'T &'
|   `-CompoundStmt 0x558a99913ca0 <col:31, line:717:5>
|     |-DeclStmt 0x558a99913a00 <line:713:9, col:23>
|     | `-VarDecl 0x558a999138e8 <col:9, col:22> col:12 referenced s 'T *' nrvo cinit
|     |   `-CallExpr 0x558a999139d8 <col:16, col:22> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x558a99913960 <col:16> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x558a999139b8 <col:21> 'T' lvalue ParmVar 0x558a998ef0d8 'x' 'T &'
|     |-IfStmt 0x558a99913c50 <line:714:9, line:715:20>
|     | |-CXXDependentScopeMemberExpr 0x558a99913af8 <line:714:13, col:34> '<dependent type>' lvalue ->value
|     | `-BinaryOperator 0x558a99913c30 <line:715:13, col:20> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x558a99913bd0 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x558a99913b60 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x558a99782e68 0x558a99782a88 0x558a997826b8 0x558a997822d8 0x558a99781ef8 0x558a99781b28
|     |   | `-DeclRefExpr 0x558a99913b40 <col:14> 'T *' lvalue Var 0x558a999138e8 's' 'T *'
|     |   `-CXXUnresolvedConstructExpr 0x558a99913c10 <col:18, col:20> 'T' 'T'
|     `-ReturnStmt 0x558a99913c88 <line:716:9, col:16>
|       `-DeclRefExpr 0x558a99913c68 <col:16> 'T *' lvalue Var 0x558a999138e8 's' 'T *'
|-FunctionTemplateDecl 0x558a998ef678 <line:721:5, line:726:5> line:722:11 set
| |-TemplateTypeParmDecl 0x558a998ef2c8 <line:721:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x558a998ef348 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x558a998ef5d8 <line:722:5, line:726:5> line:722:11 set 'Args &(T &, const V &)'
|   |-ParmVarDecl 0x558a998ef428 <col:15, col:18> col:18 referenced x 'T &'
|   |-ParmVarDecl 0x558a998ef4c8 <col:21, col:30> col:30 referenced value 'const V &'
|   `-CompoundStmt 0x558a99913fb0 <col:37, line:726:5>
|     |-IfStmt 0x558a99913f40 <line:723:9, line:724:18> has_var
|     | |-DeclStmt 0x558a99913f60 <line:723:13, col:26>
|     | | `-VarDecl 0x558a99913d08 <col:13, col:26> col:16 referenced s 'T *' cinit
|     | |   `-CallExpr 0x558a99913df8 <col:20, col:26> '<dependent type>'
|     | |     |-UnresolvedMemberExpr 0x558a99913d80 <col:20> '<bound member function type>' lvalue
|     | |     `-DeclRefExpr 0x558a99913dd8 <col:25> 'T' lvalue ParmVar 0x558a998ef428 'x' 'T &'
|     | |-DeclRefExpr 0x558a99913e20 <col:16> 'T *' lvalue Var 0x558a99913d08 's' 'T *'
|     | `-BinaryOperator 0x558a99913f20 <line:724:13, col:18> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x558a99913ed0 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x558a99913e60 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x558a99782e68 0x558a99782a88 0x558a997826b8 0x558a997822d8 0x558a99781ef8 0x558a99781b28
|     |   | `-DeclRefExpr 0x558a99913e40 <col:14> 'T *' lvalue Var 0x558a99913d08 's' 'T *'
|     |   `-DeclRefExpr 0x558a99913f00 <col:18> 'const V' lvalue ParmVar 0x558a998ef4c8 'value' 'const V &'
|     `-ReturnStmt 0x558a99913fa0 <line:725:9, col:17>
|       `-UnaryOperator 0x558a99913f88 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558a99913f78 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x558a998efa78 <line:730:5, line:737:5> line:731:10 base_read
| |-TemplateTypeParmDecl 0x558a998ef6e0 <line:730:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x558a998ef9d8 <line:731:5, line:737:5> line:731:10 base_read 'void (const char *, int, T &)'
|   |-ParmVarDecl 0x558a998ef790 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998ef810 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x558a998ef8b8 <col:52, col:55> col:55 referenced variable 'T &'
|   `-CompoundStmt 0x558a99917a20 <col:65, line:737:5>
|     |-DeclStmt 0x558a99914048 <line:732:9, col:26>
|     | `-VarDecl 0x558a99913fe0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x558a999179e8 <line:733:9, line:736:9> has_var
|       |-DeclStmt 0x558a99917a08 <line:733:13, col:58>
|       | `-VarDecl 0x558a99914070 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x558a99914250 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x558a99914220 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x558a99914208 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x558a999141e8 <col:26, col:58> 'String' (CXXTemporary 0x558a999141e8)
|       |           `-CXXMemberCallExpr 0x558a99914178 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x558a999140e8 <col:26> '<bound member function type>' ->find 0x558a9990d958
|       |             | `-CXXThisExpr 0x558a999140d8 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x558a999141b0 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x558a99914118 <col:31> 'const char *' lvalue ParmVar 0x558a998ef790 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x558a999141c8 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x558a99914138 <col:40> 'int' lvalue ParmVar 0x558a998ef810 'flags' 'int'
|       |             `-DeclRefExpr 0x558a99914158 <col:47> 'Args::Slot *' lvalue Var 0x558a99913fe0 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x558a99914308 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x558a999142f0 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x558a999142d0 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x558a999142a0 <col:20> '<bound member function type>' .operator int (String::*)() const 0x558a9958ed38
|       |       `-ImplicitCastExpr 0x558a99914288 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x558a99914268 <col:20> 'String' lvalue Var 0x558a99914070 'str' 'String'
|       `-CompoundStmt 0x558a999179c8 <col:61, line:736:9>
|         |-DeclStmt 0x558a99917410 <line:734:13, col:76>
|         | `-VarDecl 0x558a99914358 <col:13, col:75> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x558a999173e0 <col:20, col:75> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x558a99917350 <col:20, col:55> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x558a99917398 <col:60> 'T' lvalue ParmVar 0x558a998ef8b8 'variable' 'T &'
|         |     `-UnaryOperator 0x558a999173c8 <col:70, col:71> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x558a999173b8 <col:71> 'Args *' this
|         `-CallExpr 0x558a99917998 <line:735:13, col:114> '<dependent type>'
|           |-MemberExpr 0x558a99917438 <col:13> '<bound member function type>' ->postparse 0x558a9990db68
|           | `-CXXThisExpr 0x558a99917428 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x558a99917958 <col:23, col:100> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x558a99917468 <col:23> 'T *' lvalue Var 0x558a99914358 's' 'T *'
|           | `-CallExpr 0x558a99917918 <col:28, col:100> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x558a999176f0 <col:28, col:63> '<dependent type>' lvalue ->parse
|           |   |-CXXUnresolvedConstructExpr 0x558a999177f0 <col:69, col:83> 'DefaultArg<T>' 'DefaultArg<T>'
|           |   |-DeclRefExpr 0x558a99917810 <col:86> 'String' lvalue Var 0x558a99914070 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x558a999178c0 <col:91, col:92> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x558a99917850 <col:91> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x558a99782e68 0x558a99782a88 0x558a997826b8 0x558a997822d8 0x558a99781ef8 0x558a99781b28
|           |   | `-DeclRefExpr 0x558a99917830 <col:92> 'T *' lvalue Var 0x558a99914358 's' 'T *'
|           |   `-UnaryOperator 0x558a99917900 <col:95, col:96> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x558a999178f0 <col:96> 'Args *' this
|           `-DeclRefExpr 0x558a99917978 <col:103> 'Args::Slot *' lvalue Var 0x558a99913fe0 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x558a998effc8 <line:739:5, line:745:5> line:740:10 base_read_or_set
| |-TemplateTypeParmDecl 0x558a998efae8 <line:739:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x558a998efb68 <col:26, col:35> col:35 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x558a998eff28 <line:740:5, line:745:5> line:740:10 base_read_or_set 'void (const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x558a998efc28 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998efca8 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x558a998efd48 <col:59, col:62> col:62 referenced variable 'T &'
|   |-ParmVarDecl 0x558a998efde8 <col:72, col:81> col:81 referenced value 'const V &'
|   `-CompoundStmt 0x558a999188c0 <col:88, line:745:5>
|     |-DeclStmt 0x558a99917ab8 <line:741:9, col:26>
|     | `-VarDecl 0x558a99917a50 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x558a99917cd8 <line:742:9, col:55>
|     | `-VarDecl 0x558a99917ae0 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x558a99917cc0 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x558a99917c90 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x558a99917c78 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x558a99917c58 <col:22, col:54> 'String' (CXXTemporary 0x558a99917c58)
|     |           `-CXXMemberCallExpr 0x558a99917be8 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x558a99917b58 <col:22> '<bound member function type>' ->find 0x558a9990d958
|     |             | `-CXXThisExpr 0x558a99917b48 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x558a99917c20 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x558a99917b88 <col:27> 'const char *' lvalue ParmVar 0x558a998efc28 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x558a99917c38 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x558a99917ba8 <col:36> 'int' lvalue ParmVar 0x558a998efca8 'flags' 'int'
|     |             `-DeclRefExpr 0x558a99917bc8 <col:43> 'Args::Slot *' lvalue Var 0x558a99917a50 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x558a999180b0 <line:743:9, col:72>
|     | `-VarDecl 0x558a99917d28 <col:9, col:71> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x558a99918080 <col:16, col:71> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x558a99917ff0 <col:16, col:51> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x558a99918038 <col:56> 'T' lvalue ParmVar 0x558a998efd48 'variable' 'T &'
|     |     `-UnaryOperator 0x558a99918068 <col:66, col:67> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x558a99918058 <col:67> 'Args *' this
|     `-CallExpr 0x558a99918890 <line:744:9, col:139> '<dependent type>'
|       |-MemberExpr 0x558a999180d8 <col:9> '<bound member function type>' ->postparse 0x558a9990db68
|       | `-CXXThisExpr 0x558a999180c8 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x558a99918850 <col:19, col:125> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x558a99918108 <col:19> 'T *' lvalue Var 0x558a99917d28 's' 'T *'
|       | `-ParenExpr 0x558a99918830 <col:24, col:125> '<dependent type>'
|       |   `-ConditionalOperator 0x558a99918800 <col:25, col:124> '<dependent type>'
|       |     |-ImplicitCastExpr 0x558a999187e8 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x558a999187d0 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x558a999187b0 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x558a99918780 <col:25> '<bound member function type>' .operator int (String::*)() const 0x558a9958ed38
|       |     |       `-ImplicitCastExpr 0x558a99918768 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x558a99918128 <col:25> 'String' lvalue Var 0x558a99917ae0 'str' 'String'
|       |     |-CallExpr 0x558a999185d8 <col:31, col:103> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x558a999183b0 <col:31, col:66> '<dependent type>' lvalue ->parse
|       |     | |-CXXUnresolvedConstructExpr 0x558a999184b0 <col:72, col:86> 'DefaultArg<T>' 'DefaultArg<T>'
|       |     | |-DeclRefExpr 0x558a999184d0 <col:89> 'String' lvalue Var 0x558a99917ae0 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x558a99918580 <col:94, col:95> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x558a99918510 <col:94> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x558a99782e68 0x558a99782a88 0x558a997826b8 0x558a997822d8 0x558a99781ef8 0x558a99781b28
|       |     | | `-DeclRefExpr 0x558a999184f0 <col:95> 'T *' lvalue Var 0x558a99917d28 's' 'T *'
|       |     | `-UnaryOperator 0x558a999185c0 <col:98, col:99> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x558a999185b0 <col:99> 'Args *' this
|       |     `-ParenExpr 0x558a99918748 <col:107, col:124> '<dependent type>'
|       |       `-BinaryOperator 0x558a99918728 <col:108, col:120> '<dependent type>' ','
|       |         |-BinaryOperator 0x558a999186f8 <col:108, col:113> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x558a999186a8 <col:108, col:109> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x558a99918638 <col:108> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x558a99782e68 0x558a99782a88 0x558a997826b8 0x558a997822d8 0x558a99781ef8 0x558a99781b28
|       |         | | `-DeclRefExpr 0x558a99918618 <col:109> 'T *' lvalue Var 0x558a99917d28 's' 'T *'
|       |         | `-DeclRefExpr 0x558a999186d8 <col:113> 'const V' lvalue ParmVar 0x558a998efde8 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x558a99918718 <col:120> 'bool' true
|       `-DeclRefExpr 0x558a99918870 <col:128> 'Args::Slot *' lvalue Var 0x558a99917a50 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x558a998f04f8 <line:747:5, line:754:5> line:748:10 base_read
| |-TemplateTypeParmDecl 0x558a998f0040 <line:747:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558a998f00b8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558a998f0458 <line:748:5, line:754:5> line:748:10 base_read 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x558a998f0178 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998f01f8 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x558a998f0270 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x558a998f0318 <col:62, col:65> col:65 referenced variable 'T &'
|   `-CompoundStmt 0x558a999194b8 <col:75, line:754:5>
|     |-DeclStmt 0x558a99918968 <line:749:9, col:26>
|     | `-VarDecl 0x558a99918900 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x558a99919480 <line:750:9, line:753:9> has_var
|       |-DeclStmt 0x558a999194a0 <line:750:13, col:58>
|       | `-VarDecl 0x558a99918990 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x558a99918b70 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x558a99918b40 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x558a99918b28 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x558a99918b08 <col:26, col:58> 'String' (CXXTemporary 0x558a99918b08)
|       |           `-CXXMemberCallExpr 0x558a99918a98 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x558a99918a08 <col:26> '<bound member function type>' ->find 0x558a9990d958
|       |             | `-CXXThisExpr 0x558a999189f8 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x558a99918ad0 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x558a99918a38 <col:31> 'const char *' lvalue ParmVar 0x558a998f0178 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x558a99918ae8 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x558a99918a58 <col:40> 'int' lvalue ParmVar 0x558a998f01f8 'flags' 'int'
|       |             `-DeclRefExpr 0x558a99918a78 <col:47> 'Args::Slot *' lvalue Var 0x558a99918900 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x558a99918c28 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x558a99918c10 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x558a99918bf0 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x558a99918bc0 <col:20> '<bound member function type>' .operator int (String::*)() const 0x558a9958ed38
|       |       `-ImplicitCastExpr 0x558a99918ba8 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x558a99918b88 <col:20> 'String' lvalue Var 0x558a99918990 'str' 'String'
|       `-CompoundStmt 0x558a99919460 <col:61, line:753:9>
|         |-DeclStmt 0x558a99919000 <line:751:13, col:63>
|         | `-VarDecl 0x558a99918c78 <col:13, col:62> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x558a99918fd0 <col:20, col:62> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x558a99918f40 <col:20, col:42> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x558a99918f88 <col:47> 'T' lvalue ParmVar 0x558a998f0318 'variable' 'T &'
|         |     `-UnaryOperator 0x558a99918fb8 <col:57, col:58> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x558a99918fa8 <col:58> 'Args *' this
|         `-CallExpr 0x558a99919430 <line:752:13, col:92> '<dependent type>'
|           |-MemberExpr 0x558a99919028 <col:13> '<bound member function type>' ->postparse 0x558a9990db68
|           | `-CXXThisExpr 0x558a99919018 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x558a999193f0 <col:23, col:78> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x558a99919058 <col:23> 'T *' lvalue Var 0x558a99918c78 's' 'T *'
|           | `-CallExpr 0x558a999193b0 <col:28, col:78> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x558a99919240 <col:28, col:50> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x558a99919288 <col:56> 'P' lvalue ParmVar 0x558a998f0270 'parser' 'P'
|           |   |-DeclRefExpr 0x558a999192a8 <col:64> 'String' lvalue Var 0x558a99918990 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x558a99919358 <col:69, col:70> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x558a999192e8 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x558a99782e68 0x558a99782a88 0x558a997826b8 0x558a997822d8 0x558a99781ef8 0x558a99781b28
|           |   | `-DeclRefExpr 0x558a999192c8 <col:70> 'T *' lvalue Var 0x558a99918c78 's' 'T *'
|           |   `-UnaryOperator 0x558a99919398 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x558a99919388 <col:74> 'Args *' this
|           `-DeclRefExpr 0x558a99919410 <col:81> 'Args::Slot *' lvalue Var 0x558a99918900 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x558a998f0b58 <line:756:5, line:762:5> line:757:10 base_read_or_set
| |-TemplateTypeParmDecl 0x558a998f0570 <line:756:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x558a998f05e8 <col:26, col:35> col:35 referenced typename depth 0 index 1 P
| |-TemplateTypeParmDecl 0x558a998f0668 <col:38, col:47> col:47 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x558a998f0ab8 <line:757:5, line:762:5> line:757:10 base_read_or_set 'void (const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x558a998f0730 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998f07b0 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x558a998f0828 <col:59, col:61> col:61 referenced parser 'P'
|   |-ParmVarDecl 0x558a998f08c8 <col:69, col:72> col:72 referenced variable 'T &'
|   |-ParmVarDecl 0x558a998f0968 <col:82, col:91> col:91 referenced value 'const V &'
|   `-CompoundStmt 0x558a9991a248 <col:98, line:762:5>
|     |-DeclStmt 0x558a99919550 <line:758:9, col:26>
|     | `-VarDecl 0x558a999194e8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x558a99919770 <line:759:9, col:55>
|     | `-VarDecl 0x558a99919578 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x558a99919758 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x558a99919728 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x558a99919710 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x558a999196f0 <col:22, col:54> 'String' (CXXTemporary 0x558a999196f0)
|     |           `-CXXMemberCallExpr 0x558a99919680 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x558a999195f0 <col:22> '<bound member function type>' ->find 0x558a9990d958
|     |             | `-CXXThisExpr 0x558a999195e0 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x558a999196b8 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x558a99919620 <col:27> 'const char *' lvalue ParmVar 0x558a998f0730 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x558a999196d0 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x558a99919640 <col:36> 'int' lvalue ParmVar 0x558a998f07b0 'flags' 'int'
|     |             `-DeclRefExpr 0x558a99919660 <col:43> 'Args::Slot *' lvalue Var 0x558a999194e8 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x558a99919b90 <line:760:9, col:59>
|     | `-VarDecl 0x558a999197c8 <col:9, col:58> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x558a99919b60 <col:16, col:58> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x558a99919ad0 <col:16, col:38> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x558a99919b18 <col:43> 'T' lvalue ParmVar 0x558a998f08c8 'variable' 'T &'
|     |     `-UnaryOperator 0x558a99919b48 <col:53, col:54> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x558a99919b38 <col:54> 'Args *' this
|     `-CallExpr 0x558a9991a218 <line:761:9, col:117> '<dependent type>'
|       |-MemberExpr 0x558a99919bb8 <col:9> '<bound member function type>' ->postparse 0x558a9990db68
|       | `-CXXThisExpr 0x558a99919ba8 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x558a9991a1d8 <col:19, col:103> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x558a99919be8 <col:19> 'T *' lvalue Var 0x558a999197c8 's' 'T *'
|       | `-ParenExpr 0x558a9991a1b8 <col:24, col:103> '<dependent type>'
|       |   `-ConditionalOperator 0x558a9991a188 <col:25, col:102> '<dependent type>'
|       |     |-ImplicitCastExpr 0x558a9991a170 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x558a9991a158 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x558a9991a138 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x558a9991a108 <col:25> '<bound member function type>' .operator int (String::*)() const 0x558a9958ed38
|       |     |       `-ImplicitCastExpr 0x558a9991a0f0 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x558a99919c08 <col:25> 'String' lvalue Var 0x558a99919578 'str' 'String'
|       |     |-CallExpr 0x558a99919f60 <col:31, col:81> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x558a99919df0 <col:31, col:53> '<dependent type>' lvalue ->parse
|       |     | |-DeclRefExpr 0x558a99919e38 <col:59> 'P' lvalue ParmVar 0x558a998f0828 'parser' 'P'
|       |     | |-DeclRefExpr 0x558a99919e58 <col:67> 'String' lvalue Var 0x558a99919578 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x558a99919f08 <col:72, col:73> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x558a99919e98 <col:72> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x558a99782e68 0x558a99782a88 0x558a997826b8 0x558a997822d8 0x558a99781ef8 0x558a99781b28
|       |     | | `-DeclRefExpr 0x558a99919e78 <col:73> 'T *' lvalue Var 0x558a999197c8 's' 'T *'
|       |     | `-UnaryOperator 0x558a99919f48 <col:76, col:77> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x558a99919f38 <col:77> 'Args *' this
|       |     `-ParenExpr 0x558a9991a0d0 <col:85, col:102> '<dependent type>'
|       |       `-BinaryOperator 0x558a9991a0b0 <col:86, col:98> '<dependent type>' ','
|       |         |-BinaryOperator 0x558a9991a080 <col:86, col:91> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x558a9991a030 <col:86, col:87> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x558a99919fc0 <col:86> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x558a99782e68 0x558a99782a88 0x558a997826b8 0x558a997822d8 0x558a99781ef8 0x558a99781b28
|       |         | | `-DeclRefExpr 0x558a99919fa0 <col:87> 'T *' lvalue Var 0x558a999197c8 's' 'T *'
|       |         | `-DeclRefExpr 0x558a9991a060 <col:91> 'const V' lvalue ParmVar 0x558a998f0968 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x558a9991a0a0 <col:98> 'bool' true
|       `-DeclRefExpr 0x558a9991a1f8 <col:106> 'Args::Slot *' lvalue Var 0x558a999194e8 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x558a998f11c8 <line:764:5, line:773:5> line:765:10 base_read
| |-TemplateTypeParmDecl 0x558a998f0bd8 <line:764:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558a998f0c58 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x558a998f0cd8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x558a998f1128 <line:765:5, line:773:5> line:765:10 base_read 'void (const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x558a998f0da0 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998f0e20 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x558a998f0e98 <line:766:20, col:22> col:22 referenced parser 'P'
|   |-ParmVarDecl 0x558a998f0f38 <col:30, col:34> col:34 referenced variable1 'T1 &'
|   |-ParmVarDecl 0x558a998f0fd8 <col:45, col:49> col:49 referenced variable2 'T2 &'
|   `-CompoundStmt 0x558a9991b228 <col:60, line:773:5>
|     |-DeclStmt 0x558a9991a2f0 <line:767:9, col:26>
|     | `-VarDecl 0x558a9991a288 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x558a9991b1f0 <line:768:9, line:772:9> has_var
|       |-DeclStmt 0x558a9991b210 <line:768:13, col:58>
|       | `-VarDecl 0x558a9991a318 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x558a9991a4f8 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x558a9991a4c8 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x558a9991a4b0 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x558a9991a490 <col:26, col:58> 'String' (CXXTemporary 0x558a9991a490)
|       |           `-CXXMemberCallExpr 0x558a9991a420 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x558a9991a390 <col:26> '<bound member function type>' ->find 0x558a9990d958
|       |             | `-CXXThisExpr 0x558a9991a380 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x558a9991a458 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x558a9991a3c0 <col:31> 'const char *' lvalue ParmVar 0x558a998f0da0 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x558a9991a470 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x558a9991a3e0 <col:40> 'int' lvalue ParmVar 0x558a998f0e20 'flags' 'int'
|       |             `-DeclRefExpr 0x558a9991a400 <col:47> 'Args::Slot *' lvalue Var 0x558a9991a288 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x558a9991a5b0 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x558a9991a598 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x558a9991a578 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x558a9991a548 <col:20> '<bound member function type>' .operator int (String::*)() const 0x558a9958ed38
|       |       `-ImplicitCastExpr 0x558a9991a530 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x558a9991a510 <col:20> 'String' lvalue Var 0x558a9991a318 'str' 'String'
|       `-CompoundStmt 0x558a9991b1c8 <col:61, line:772:9>
|         |-DeclStmt 0x558a9991a8f0 <line:769:13, col:66>
|         | `-VarDecl 0x558a9991a608 <col:13, col:65> col:17 referenced s1 'T1 *' cinit
|         |   `-CallExpr 0x558a9991a8c0 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x558a9991a830 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x558a9991a878 <col:49> 'T1' lvalue ParmVar 0x558a998f0f38 'variable1' 'T1 &'
|         |     `-UnaryOperator 0x558a9991a8a8 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x558a9991a898 <col:61> 'Args *' this
|         |-DeclStmt 0x558a9991ac60 <line:770:13, col:66>
|         | `-VarDecl 0x558a9991a978 <col:13, col:65> col:17 referenced s2 'T2 *' cinit
|         |   `-CallExpr 0x558a9991ac30 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x558a9991aba0 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x558a9991abe8 <col:49> 'T2' lvalue ParmVar 0x558a998f0fd8 'variable2' 'T2 &'
|         |     `-UnaryOperator 0x558a9991ac18 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x558a9991ac08 <col:61> 'Args *' this
|         `-CallExpr 0x558a9991b198 <line:771:13, col:105> '<dependent type>'
|           |-MemberExpr 0x558a9991ac88 <col:13> '<bound member function type>' ->postparse 0x558a9990db68
|           | `-CXXThisExpr 0x558a9991ac78 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x558a9991b158 <col:23, col:91> '<dependent type>' '&&'
|           | |-BinaryOperator 0x558a9991acf8 <col:23, col:29> '<dependent type>' '&&'
|           | | |-DeclRefExpr 0x558a9991acb8 <col:23> 'T1 *' lvalue Var 0x558a9991a608 's1' 'T1 *'
|           | | `-DeclRefExpr 0x558a9991acd8 <col:29> 'T2 *' lvalue Var 0x558a9991a978 's2' 'T2 *'
|           | `-CallExpr 0x558a9991b110 <col:35, col:91> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x558a9991aee0 <col:35, col:57> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x558a9991af28 <col:63> 'P' lvalue ParmVar 0x558a998f0e98 'parser' 'P'
|           |   |-DeclRefExpr 0x558a9991af48 <col:71> 'String' lvalue Var 0x558a9991a318 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x558a9991aff8 <col:76, col:77> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x558a9991af88 <col:76> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x558a99782e68 0x558a99782a88 0x558a997826b8 0x558a997822d8 0x558a99781ef8 0x558a99781b28
|           |   | `-DeclRefExpr 0x558a9991af68 <col:77> 'T1 *' lvalue Var 0x558a9991a608 's1' 'T1 *'
|           |   |-CXXOperatorCallExpr 0x558a9991b0b8 <col:81, col:82> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x558a9991b048 <col:81> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x558a99782e68 0x558a99782a88 0x558a997826b8 0x558a997822d8 0x558a99781ef8 0x558a99781b28
|           |   | `-DeclRefExpr 0x558a9991b028 <col:82> 'T2 *' lvalue Var 0x558a9991a978 's2' 'T2 *'
|           |   `-UnaryOperator 0x558a9991b0f8 <col:86, col:87> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x558a9991b0e8 <col:87> 'Args *' this
|           `-DeclRefExpr 0x558a9991b178 <col:94> 'Args::Slot *' lvalue Var 0x558a9991a288 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x558a998f15b8 <line:775:5, line:780:5> line:776:10 base_read_with
| |-TemplateTypeParmDecl 0x558a998f1248 <line:775:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x558a998f1518 <line:776:5, line:780:5> line:776:10 base_read_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x558a998f1300 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998f1380 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x558a998f13f8 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x558a9991b740 <col:67, line:780:5>
|     |-DeclStmt 0x558a9991b2c0 <line:777:9, col:26>
|     | `-VarDecl 0x558a9991b258 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x558a9991b708 <line:778:9, line:779:60> has_var
|       |-DeclStmt 0x558a9991b728 <line:778:13, col:58>
|       | `-VarDecl 0x558a9991b2e8 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x558a9991b4c8 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x558a9991b498 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x558a9991b480 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x558a9991b460 <col:26, col:58> 'String' (CXXTemporary 0x558a9991b460)
|       |           `-CXXMemberCallExpr 0x558a9991b3f0 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x558a9991b360 <col:26> '<bound member function type>' ->find 0x558a9990d958
|       |             | `-CXXThisExpr 0x558a9991b350 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x558a9991b428 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x558a9991b390 <col:31> 'const char *' lvalue ParmVar 0x558a998f1300 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x558a9991b440 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x558a9991b3b0 <col:40> 'int' lvalue ParmVar 0x558a998f1380 'flags' 'int'
|       |             `-DeclRefExpr 0x558a9991b3d0 <col:47> 'Args::Slot *' lvalue Var 0x558a9991b258 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x558a9991b580 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x558a9991b568 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x558a9991b548 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x558a9991b518 <col:20> '<bound member function type>' .operator int (String::*)() const 0x558a9958ed38
|       |       `-ImplicitCastExpr 0x558a9991b500 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x558a9991b4e0 <col:20> 'String' lvalue Var 0x558a9991b2e8 'str' 'String'
|       `-CallExpr 0x558a9991b6d8 <line:779:13, col:60> '<dependent type>'
|         |-MemberExpr 0x558a9991b5a8 <col:13> '<bound member function type>' ->postparse 0x558a9990db68
|         | `-CXXThisExpr 0x558a9991b598 <col:13> 'Args *' implicit this
|         |-CallExpr 0x558a9991b688 <col:23, col:46> '<dependent type>'
|         | |-CXXDependentScopeMemberExpr 0x558a9991b5f8 <col:23, col:30> '<dependent type>' lvalue .parse
|         | | `-DeclRefExpr 0x558a9991b5d8 <col:23> 'P' lvalue ParmVar 0x558a998f13f8 'parser' 'P'
|         | |-DeclRefExpr 0x558a9991b640 <col:36> 'String' lvalue Var 0x558a9991b2e8 'str' 'String'
|         | `-UnaryOperator 0x558a9991b670 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|         |   `-CXXThisExpr 0x558a9991b660 <col:42> 'Args *' this
|         `-DeclRefExpr 0x558a9991b6b8 <col:49> 'Args::Slot *' lvalue Var 0x558a9991b258 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x558a998f1958 <line:782:5, line:792:5> line:783:10 base_read_all_with
| |-TemplateTypeParmDecl 0x558a998f1628 <line:782:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x558a998f18b8 <line:783:5, line:792:5> line:783:10 base_read_all_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x558a998f16e0 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998f1760 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x558a998f17d8 <col:61, col:63> col:63 referenced parser 'P'
|   `-CompoundStmt 0x558a9991c0b0 <col:71, line:792:5>
|     |-DeclStmt 0x558a9991b7d8 <line:784:9, col:26>
|     | `-VarDecl 0x558a9991b770 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x558a9991b8a8 <line:785:9, col:29>
|     | `-VarDecl 0x558a9991b808 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x558a9991b890 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x558a9991b870 <col:28> 'int' 1
|     |-WhileStmt 0x558a9991bf60 <line:786:9, line:790:9> has_var
|     | |-DeclStmt 0x558a9991bf80 <line:786:16, col:61>
|     | | `-VarDecl 0x558a9991b8d0 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x558a9991bab0 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x558a9991ba80 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x558a9991ba68 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x558a9991ba48 <col:29, col:61> 'String' (CXXTemporary 0x558a9991ba48)
|     | |           `-CXXMemberCallExpr 0x558a9991b9d8 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x558a9991b948 <col:29> '<bound member function type>' ->find 0x558a9990d958
|     | |             | `-CXXThisExpr 0x558a9991b938 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x558a9991ba10 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x558a9991b978 <col:34> 'const char *' lvalue ParmVar 0x558a998f16e0 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x558a9991ba28 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x558a9991b998 <col:43> 'int' lvalue ParmVar 0x558a998f1760 'flags' 'int'
|     | |             `-DeclRefExpr 0x558a9991b9b8 <col:50> 'Args::Slot *' lvalue Var 0x558a9991b770 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x558a9991bb68 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x558a9991bb50 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x558a9991bb30 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x558a9991bb00 <col:23> '<bound member function type>' .operator int (String::*)() const 0x558a9958ed38
|     | |       `-ImplicitCastExpr 0x558a9991bae8 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x558a9991bac8 <col:23> 'String' lvalue Var 0x558a9991b8d0 'str' 'String'
|     | `-CompoundStmt 0x558a9991bf38 <col:64, line:790:9>
|     |   |-CallExpr 0x558a9991bcc0 <line:787:13, col:60> '<dependent type>'
|     |   | |-MemberExpr 0x558a9991bb90 <col:13> '<bound member function type>' ->postparse 0x558a9990db68
|     |   | | `-CXXThisExpr 0x558a9991bb80 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x558a9991bc70 <col:23, col:46> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x558a9991bbe0 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x558a9991bbc0 <col:23> 'P' lvalue ParmVar 0x558a998f17d8 'parser' 'P'
|     |   | | |-DeclRefExpr 0x558a9991bc28 <col:36> 'String' lvalue Var 0x558a9991b8d0 'str' 'String'
|     |   | | `-UnaryOperator 0x558a9991bc58 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x558a9991bc48 <col:42> 'Args *' this
|     |   | `-DeclRefExpr 0x558a9991bca0 <col:49> 'Args::Slot *' lvalue Var 0x558a9991b770 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x558a9991be58 <line:788:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x558a9991bcf0 <col:13> 'int' lvalue Var 0x558a9991b808 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x558a9991be40 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x558a9991be20 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x558a9991bd88 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x558a9991bd68 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x558a9991bd50 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x558a9991bd10 <col:28> 'int' lvalue Var 0x558a9991b808 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x558a9991bd30 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x558a9991be08 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x558a9991bdd8 <col:49> 'bool' lvalue ->_read_status 0x558a998d01e0
|     |   |         `-ImplicitCastExpr 0x558a9991bdb8 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x558a9991bda8 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x558a9991bf08 <line:789:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x558a9991be78 <col:13> 'int' lvalue ParmVar 0x558a998f1760 'flags' 'int'
|     |     `-UnaryOperator 0x558a9991bef0 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x558a9991bed8 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x558a9991beb8 <col:23> 'const int' lvalue Var 0x558a998da928 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x558a9991c090 <line:791:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x558a9991bfc8 <col:9> 'bool' lvalue ->_read_status 0x558a998d01e0
|       | `-ImplicitCastExpr 0x558a9991bfa8 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x558a9991bf98 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x558a9991c070 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x558a9991c050 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x558a9991c038 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x558a9991bff8 <col:25> 'int' lvalue Var 0x558a9991b808 'read_status' 'int'
|           `-IntegerLiteral 0x558a9991c018 <col:40> 'int' 1
|-FunctionTemplateDecl 0x558a998f1e38 <line:794:5, line:805:5> line:795:10 base_read_all_with
| |-TemplateTypeParmDecl 0x558a998f19c8 <line:794:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558a998f1a48 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558a998f1d98 <line:795:5, line:805:5> line:795:10 base_read_all_with 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x558a998f1b08 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998f1b88 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x558a998f1c00 <col:61, col:63> col:63 referenced parser 'P'
|   |-ParmVarDecl 0x558a998f1ca8 <col:71, col:74> col:74 referenced variable 'T &'
|   `-CompoundStmt 0x558a9991d040 <col:84, line:805:5>
|     |-DeclStmt 0x558a9991c158 <line:796:9, col:26>
|     | `-VarDecl 0x558a9991c0f0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x558a9991c228 <line:797:9, col:29>
|     | `-VarDecl 0x558a9991c188 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x558a9991c210 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x558a9991c1f0 <col:28> 'int' 1
|     |-DeclStmt 0x558a9991c560 <line:798:9, col:71>
|     | `-VarDecl 0x558a9991c278 <col:9, col:70> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x558a9991c530 <col:16, col:70> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x558a9991c4a0 <col:16, col:38> '<dependent type>' lvalue ->initialized_slot
|     |     |-DeclRefExpr 0x558a9991c4e8 <col:55> 'T' lvalue ParmVar 0x558a998f1ca8 'variable' 'T &'
|     |     `-UnaryOperator 0x558a9991c518 <col:65, col:66> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x558a9991c508 <col:66> 'Args *' this
|     |-WhileStmt 0x558a9991cef0 <line:799:9, line:803:9> has_var
|     | |-DeclStmt 0x558a9991cf10 <line:799:16, col:61>
|     | | `-VarDecl 0x558a9991c588 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x558a9991c768 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x558a9991c738 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x558a9991c720 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x558a9991c700 <col:29, col:61> 'String' (CXXTemporary 0x558a9991c700)
|     | |           `-CXXMemberCallExpr 0x558a9991c690 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x558a9991c600 <col:29> '<bound member function type>' ->find 0x558a9990d958
|     | |             | `-CXXThisExpr 0x558a9991c5f0 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x558a9991c6c8 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x558a9991c630 <col:34> 'const char *' lvalue ParmVar 0x558a998f1b08 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x558a9991c6e0 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x558a9991c650 <col:43> 'int' lvalue ParmVar 0x558a998f1b88 'flags' 'int'
|     | |             `-DeclRefExpr 0x558a9991c670 <col:50> 'Args::Slot *' lvalue Var 0x558a9991c0f0 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x558a9991c820 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x558a9991c808 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x558a9991c7e8 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x558a9991c7b8 <col:23> '<bound member function type>' .operator int (String::*)() const 0x558a9958ed38
|     | |       `-ImplicitCastExpr 0x558a9991c7a0 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x558a9991c780 <col:23> 'String' lvalue Var 0x558a9991c588 'str' 'String'
|     | `-CompoundStmt 0x558a9991cec8 <col:64, line:803:9>
|     |   |-CallExpr 0x558a9991cc50 <line:800:13, col:92> '<dependent type>'
|     |   | |-MemberExpr 0x558a9991c848 <col:13> '<bound member function type>' ->postparse 0x558a9990db68
|     |   | | `-CXXThisExpr 0x558a9991c838 <col:13> 'Args *' implicit this
|     |   | |-BinaryOperator 0x558a9991cc10 <col:23, col:78> '<dependent type>' '&&'
|     |   | | |-DeclRefExpr 0x558a9991c878 <col:23> 'T *' lvalue Var 0x558a9991c278 's' 'T *'
|     |   | | `-CallExpr 0x558a9991cbd0 <col:28, col:78> '<dependent type>'
|     |   | |   |-CXXDependentScopeMemberExpr 0x558a9991ca60 <col:28, col:50> '<dependent type>' lvalue ->parse
|     |   | |   |-DeclRefExpr 0x558a9991caa8 <col:56> 'P' lvalue ParmVar 0x558a998f1c00 'parser' 'P'
|     |   | |   |-DeclRefExpr 0x558a9991cac8 <col:64> 'String' lvalue Var 0x558a9991c588 'str' 'String'
|     |   | |   |-CXXOperatorCallExpr 0x558a9991cb78 <col:69, col:70> '<dependent type>'
|     |   | |   | |-UnresolvedLookupExpr 0x558a9991cb08 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x558a99782e68 0x558a99782a88 0x558a997826b8 0x558a997822d8 0x558a99781ef8 0x558a99781b28
|     |   | |   | `-DeclRefExpr 0x558a9991cae8 <col:70> 'T *' lvalue Var 0x558a9991c278 's' 'T *'
|     |   | |   `-UnaryOperator 0x558a9991cbb8 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|     |   | |     `-CXXThisExpr 0x558a9991cba8 <col:74> 'Args *' this
|     |   | `-DeclRefExpr 0x558a9991cc30 <col:81> 'Args::Slot *' lvalue Var 0x558a9991c0f0 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x558a9991cde8 <line:801:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x558a9991cc80 <col:13> 'int' lvalue Var 0x558a9991c188 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x558a9991cdd0 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x558a9991cdb0 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x558a9991cd18 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x558a9991ccf8 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x558a9991cce0 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x558a9991cca0 <col:28> 'int' lvalue Var 0x558a9991c188 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x558a9991ccc0 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x558a9991cd98 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x558a9991cd68 <col:49> 'bool' lvalue ->_read_status 0x558a998d01e0
|     |   |         `-ImplicitCastExpr 0x558a9991cd48 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x558a9991cd38 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x558a9991ce98 <line:802:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x558a9991ce08 <col:13> 'int' lvalue ParmVar 0x558a998f1b88 'flags' 'int'
|     |     `-UnaryOperator 0x558a9991ce80 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x558a9991ce68 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x558a9991ce48 <col:23> 'const int' lvalue Var 0x558a998da928 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x558a9991d020 <line:804:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x558a9991cf58 <col:9> 'bool' lvalue ->_read_status 0x558a998d01e0
|       | `-ImplicitCastExpr 0x558a9991cf38 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x558a9991cf28 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x558a9991d000 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x558a9991cfe0 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x558a9991cfc8 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x558a9991cf88 <col:25> 'int' lvalue Var 0x558a9991c188 'read_status' 'int'
|           `-IntegerLiteral 0x558a9991cfa8 <col:40> 'int' 1
|-FunctionTemplateDecl 0x558a998f2418 <line:807:5, line:821:5> line:808:10 base_read_all
| |-TemplateTypeParmDecl 0x558a998f1eb0 <line:807:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558a998f1f28 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558a998f2378 <line:808:5, line:821:5> line:808:10 base_read_all 'void (const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x558a998f1fe8 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558a998f2068 <col:45, col:49> col:49 referenced flags 'int'
|   |-ParmVarDecl 0x558a998f20e0 <col:56, col:58> col:58 referenced parser 'P'
|   |-ParmVarDecl 0x558a998f2230 <col:66, col:77> col:77 referenced variable 'Vector<T> &'
|   `-CompoundStmt 0x558a9991de48 <col:87, line:821:5>
|     |-DeclStmt 0x558a9991d0f0 <line:809:9, col:26>
|     | `-VarDecl 0x558a9991d088 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x558a9991d1c0 <line:810:9, col:29>
|     | `-VarDecl 0x558a9991d120 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x558a9991d1a8 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x558a9991d188 <col:28> 'int' 1
|     |-DeclStmt 0x558a9991d408 <line:811:9, col:38>
|     | `-VarDecl 0x558a9991d2f0 <col:9, col:37> col:20 referenced s 'Vector<T> *' cinit
|     |   `-CallExpr 0x558a9991d3e0 <col:24, col:37> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x558a9991d368 <col:24> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x558a9991d3c0 <col:29> 'Vector<T>' lvalue ParmVar 0x558a998f2230 'variable' 'Vector<T> &'
|     |-WhileStmt 0x558a9991dcf8 <line:812:9, line:819:9> has_var
|     | |-DeclStmt 0x558a9991dd18 <line:812:16, col:61>
|     | | `-VarDecl 0x558a9991d430 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x558a9991d610 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x558a9991d5e0 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x558a9991d5c8 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x558a9991d5a8 <col:29, col:61> 'String' (CXXTemporary 0x558a9991d5a8)
|     | |           `-CXXMemberCallExpr 0x558a9991d538 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x558a9991d4a8 <col:29> '<bound member function type>' ->find 0x558a9990d958
|     | |             | `-CXXThisExpr 0x558a9991d498 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x558a9991d570 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x558a9991d4d8 <col:34> 'const char *' lvalue ParmVar 0x558a998f1fe8 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x558a9991d588 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x558a9991d4f8 <col:43> 'int' lvalue ParmVar 0x558a998f2068 'flags' 'int'
|     | |             `-DeclRefExpr 0x558a9991d518 <col:50> 'Args::Slot *' lvalue Var 0x558a9991d088 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x558a9991d6c8 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x558a9991d6b0 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x558a9991d690 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x558a9991d660 <col:23> '<bound member function type>' .operator int (String::*)() const 0x558a9958ed38
|     | |       `-ImplicitCastExpr 0x558a9991d648 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x558a9991d628 <col:23> 'String' lvalue Var 0x558a9991d430 'str' 'String'
|     | `-CompoundStmt 0x558a9991dcc0 <col:64, line:819:9>
|     |   |-DeclStmt 0x558a9991d788 <line:813:13, col:23>
|     |   | `-VarDecl 0x558a9991d6f0 <col:13, col:22> col:15 referenced sx 'T' cinit
|     |   |   `-CXXUnresolvedConstructExpr 0x558a9991d768 <col:20, col:22> 'T' 'T'
|     |   |-CallExpr 0x558a9991d908 <line:814:13, col:64> '<dependent type>'
|     |   | |-MemberExpr 0x558a9991d7b0 <col:13> '<bound member function type>' ->postparse 0x558a9990db68
|     |   | | `-CXXThisExpr 0x558a9991d7a0 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x558a9991d8b0 <col:23, col:50> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x558a9991d800 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x558a9991d7e0 <col:23> 'P' lvalue ParmVar 0x558a998f20e0 'parser' 'P'
|     |   | | |-DeclRefExpr 0x558a9991d848 <col:36> 'String' lvalue Var 0x558a9991d430 'str' 'String'
|     |   | | |-DeclRefExpr 0x558a9991d868 <col:41> 'T' lvalue Var 0x558a9991d6f0 'sx' 'T'
|     |   | | `-UnaryOperator 0x558a9991d898 <col:45, col:46> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x558a9991d888 <col:46> 'Args *' this
|     |   | `-DeclRefExpr 0x558a9991d8e8 <col:53> 'Args::Slot *' lvalue Var 0x558a9991d088 'slot_status' 'Args::Slot *'
|     |   |-IfStmt 0x558a9991da60 <line:815:13, line:816:32>
|     |   | |-ImplicitCastExpr 0x558a9991d998 <line:815:17> 'bool' <LValueToRValue>
|     |   | | `-MemberExpr 0x558a9991d968 <col:17> 'bool' lvalue ->_read_status 0x558a998d01e0
|     |   | |   `-ImplicitCastExpr 0x558a9991d948 <col:17> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   | |     `-CXXThisExpr 0x558a9991d938 <col:17> 'Args *' implicit this
|     |   | `-CallExpr 0x558a9991da38 <line:816:17, col:32> '<dependent type>'
|     |   |   |-CXXDependentScopeMemberExpr 0x558a9991d9d0 <col:17, col:20> '<dependent type>' lvalue ->push_back
|     |   |   | `-DeclRefExpr 0x558a9991d9b0 <col:17> 'Vector<T> *' lvalue Var 0x558a9991d2f0 's' 'Vector<T> *'
|     |   |   `-DeclRefExpr 0x558a9991da18 <col:30> 'T' lvalue Var 0x558a9991d6f0 'sx' 'T'
|     |   |-BinaryOperator 0x558a9991dbe0 <line:817:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x558a9991da78 <col:13> 'int' lvalue Var 0x558a9991d120 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x558a9991dbc8 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x558a9991dba8 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x558a9991db10 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x558a9991daf0 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x558a9991dad8 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x558a9991da98 <col:28> 'int' lvalue Var 0x558a9991d120 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x558a9991dab8 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x558a9991db90 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x558a9991db60 <col:49> 'bool' lvalue ->_read_status 0x558a998d01e0
|     |   |         `-ImplicitCastExpr 0x558a9991db40 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x558a9991db30 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x558a9991dc90 <line:818:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x558a9991dc00 <col:13> 'int' lvalue ParmVar 0x558a998f2068 'flags' 'int'
|     |     `-UnaryOperator 0x558a9991dc78 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x558a9991dc60 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x558a9991dc40 <col:23> 'const int' lvalue Var 0x558a998da928 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x558a9991de28 <line:820:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x558a9991dd60 <col:9> 'bool' lvalue ->_read_status 0x558a998d01e0
|       | `-ImplicitCastExpr 0x558a9991dd40 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x558a9991dd30 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x558a9991de08 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x558a9991dde8 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x558a9991ddd0 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x558a9991dd90 <col:25> 'int' lvalue Var 0x558a9991d120 'read_status' 'int'
|           `-IntegerLiteral 0x558a9991ddb0 <col:40> 'int' 1
|-AccessSpecDecl 0x558a998f2490 <line:824:3, col:10> col:3 private
|-CXXRecordDecl 0x558a998f24b8 prev 0x558a998d8c28 <line:826:5, line:833:5> line:826:12 referenced struct Slot definition
| |-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-CXXRecordDecl 0x558a998f25b0 <col:5, col:12> col:12 implicit referenced struct Slot
| |-CXXConstructorDecl 0x558a998f26a0 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| | `-CompoundStmt 0x558a9991de80 <col:16, line:828:9>
| |-CXXDestructorDecl 0x558a998f2790 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| | `-CompoundStmt 0x558a9991de90 <col:25, line:830:9>
| |-CXXMethodDecl 0x558a998f2890 <line:831:9, col:32> col:22 store 'void ()' virtual pure
| |-FieldDecl 0x558a998f2940 <line:832:9, col:15> col:15 _next 'Args::Slot *'
| |-CXXMethodDecl 0x558a998f29e8 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x558a998f29e8
| | `-ParmVarDecl 0x558a998f2af8 <col:12> col:12 'const Args::Slot &'
| `-CXXConstructorDecl 0x558a998f32b8 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x558a998f32b8
|   `-ParmVarDecl 0x558a998f33c8 <col:12> col:12 'const Args::Slot &'
|-CXXRecordDecl 0x558a998f2b68 <line:835:5, line:848:5> line:835:12 struct BytesSlot definition
| |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment needs_overload_resolution
| | `-Destructor non_trivial user_declared needs_overload_resolution
| |-public 'Args::Slot'
| |-CXXRecordDecl 0x558a998f2cc8 <col:5, col:12> col:12 implicit referenced struct BytesSlot
| |-CXXConstructorDecl 0x558a998f2ec0 <line:836:9, line:838:9> line:836:9 BytesSlot 'void (void *, size_t)'
| | |-ParmVarDecl 0x558a998f2d70 <col:19, col:25> col:25 used ptr 'void *'
| | |-ParmVarDecl 0x558a998f2de8 <col:30, col:37> col:37 used size 'size_t':'unsigned long'
| | |-CXXCtorInitializer 'Args::Slot'
| | | `-CXXConstructExpr 0x558a9991e070 <col:9> 'Args::Slot' 'void ()'
| | |-CXXCtorInitializer Field 0x558a998f3178 '_ptr' 'void *'
| | | `-ImplicitCastExpr 0x558a9991dee0 <line:837:20> 'void *' <LValueToRValue>
| | |   `-DeclRefExpr 0x558a9991dea0 <col:20> 'void *' lvalue ParmVar 0x558a998f2d70 'ptr' 'void *'
| | |-CXXCtorInitializer Field 0x558a998f31e0 '_slot' 'char *'
| | | `-CXXNewExpr 0x558a9991df68 <col:32, col:45> 'char *' array Function 0x558a993b19a8 'operator new[]' 'void *(std::size_t)'
| | |   `-ImplicitCastExpr 0x558a9991df50 <col:41> 'size_t':'unsigned long' <LValueToRValue>
| | |     `-DeclRefExpr 0x558a9991df20 <col:41> 'size_t':'unsigned long' lvalue ParmVar 0x558a998f2de8 'size' 'size_t':'unsigned long'
| | |-CXXCtorInitializer Field 0x558a998f3240 '_size' 'size_t':'unsigned long'
| | | `-ImplicitCastExpr 0x558a9991e030 <col:55> 'size_t':'unsigned long' <LValueToRValue>
| | |   `-DeclRefExpr 0x558a9991dff0 <col:55> 'size_t':'unsigned long' lvalue ParmVar 0x558a998f2de8 'size' 'size_t':'unsigned long'
| | `-CompoundStmt 0x558a9991e0f0 <col:61, line:838:9>
| |-CXXDestructorDecl 0x558a998f2fc0 <line:839:9, line:841:9> line:839:9 ~BytesSlot 'void () noexcept'
| | |-Overrides: [ 0x558a998f2790 Slot::~Slot 'void () noexcept' ]
| | `-CompoundStmt 0x558a9991e178 <col:22, line:841:9>
| |   `-CXXDeleteExpr 0x558a9991e158 <line:840:13, col:22> 'void' array Function 0x558a993b1d08 'operator delete[]' 'void (void *) noexcept'
| |     `-ImplicitCastExpr 0x558a9991e140 <col:22> 'char *' <LValueToRValue>
| |       `-MemberExpr 0x558a9991e110 <col:22> 'char *' lvalue ->_slot 0x558a998f31e0
| |         `-CXXThisExpr 0x558a9991e100 <col:22> 'Args::BytesSlot *' implicit this
| |-CXXMethodDecl 0x558a998f30c0 <line:842:9, line:844:9> line:842:14 store 'void ()'
| | |-Overrides: [ 0x558a998f2890 Slot::store 'void ()' ]
| | `-CompoundStmt 0x558a9991e368 <col:22, line:844:9>
| |   `-CallExpr 0x558a9991e2d0 <line:843:13, col:38> 'void *'
| |     |-ImplicitCastExpr 0x558a9991e2b8 <col:13> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x558a9991e298 <col:13> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x558a994bd788 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
| |     |-ImplicitCastExpr 0x558a9991e308 <col:20> 'void *' <LValueToRValue>
| |     | `-MemberExpr 0x558a9991e1e8 <col:20> 'void *' lvalue ->_ptr 0x558a998f3178
| |     |   `-CXXThisExpr 0x558a9991e1d8 <col:20> 'Args::BytesSlot *' implicit this
| |     |-ImplicitCastExpr 0x558a9991e338 <col:26> 'const void *' <BitCast>
| |     | `-ImplicitCastExpr 0x558a9991e320 <col:26> 'char *' <LValueToRValue>
| |     |   `-MemberExpr 0x558a9991e228 <col:26> 'char *' lvalue ->_slot 0x558a998f31e0
| |     |     `-CXXThisExpr 0x558a9991e218 <col:26> 'Args::BytesSlot *' implicit this
| |     `-ImplicitCastExpr 0x558a9991e350 <col:33> 'size_t':'unsigned long' <LValueToRValue>
| |       `-MemberExpr 0x558a9991e268 <col:33> 'size_t':'unsigned long' lvalue ->_size 0x558a998f3240
| |         `-CXXThisExpr 0x558a9991e258 <col:33> 'Args::BytesSlot *' implicit this
| |-FieldDecl 0x558a998f3178 <line:845:9, col:15> col:15 referenced _ptr 'void *'
| |-FieldDecl 0x558a998f31e0 <line:846:9, col:15> col:15 referenced _slot 'char *'
| |-FieldDecl 0x558a998f3240 <line:847:9, col:16> col:16 referenced _size 'size_t':'unsigned long'
| |-CXXConstructorDecl 0x558a998f3438 <line:835:12> col:12 implicit constexpr BytesSlot 'void (const Args::BytesSlot &)' inline default noexcept-unevaluated 0x558a998f3438
| | `-ParmVarDecl 0x558a998f3548 <col:12> col:12 'const Args::BytesSlot &'
| `-CXXMethodDecl 0x558a998f35e8 <col:12> col:12 implicit operator= 'Args::BytesSlot &(const Args::BytesSlot &)' inline default noexcept-unevaluated 0x558a998f35e8
|   `-ParmVarDecl 0x558a998f36f8 <col:12> col:12 'const Args::BytesSlot &'
|-ClassTemplateDecl 0x558a998f3898 <line:850:5, line:860:5> line:851:12 SlotT
| |-TemplateTypeParmDecl 0x558a998f3768 <line:850:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXRecordDecl 0x558a998f3808 <line:851:5, line:860:5> line:851:12 struct SlotT definition
|   |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   | |-DefaultConstructor
|   | |-CopyConstructor simple non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
|   | |-MoveConstructor exists simple non_trivial needs_implicit needs_overload_resolution
|   | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple non_trivial needs_implicit needs_overload_resolution
|   | `-Destructor simple non_trivial needs_implicit needs_overload_resolution
|   |-public 'Args::Slot'
|   |-CXXRecordDecl 0x558a998f3b30 <col:5, col:12> col:12 implicit referenced struct SlotT
|   |-CXXConstructorDecl 0x558a998f3d28 <line:852:9, line:854:9> line:852:9 SlotT<T> 'void (T *)'
|   | |-ParmVarDecl 0x558a998f3bf8 <col:15, col:18> col:18 referenced ptr 'T *'
|   | |-CXXCtorInitializer Field 0x558a998f3ea8 '_ptr' 'T *'
|   | | `-ParenListExpr 0x558a9991e3a0 <line:853:19, col:23> 'NULL TYPE'
|   | |   `-DeclRefExpr 0x558a9991e380 <col:20> 'T *' lvalue ParmVar 0x558a998f3bf8 'ptr' 'T *'
|   | `-CompoundStmt 0x558a9991e3f0 <col:25, line:854:9>
|   |-CXXMethodDecl 0x558a998f3df8 <line:855:9, line:857:9> line:855:14 store 'void ()'
|   | |-Overrides: [ 0x558a998f2890 Slot::store 'void ()' ]
|   | `-CompoundStmt 0x558a9991e5a0 <col:22, line:857:9>
|   |   `-CallExpr 0x558a9991e570 <line:856:13, col:40> '<dependent type>'
|   |     |-UnresolvedLookupExpr 0x558a9991e400 <col:13> '<overloaded function type>' lvalue (ADL) = 'assign_consume' 0x558a99575eb8 0x558a995201e8
|   |     |-CXXOperatorCallExpr 0x558a9991e500 <col:28, col:29> '<dependent type>'
|   |     | |-UnresolvedLookupExpr 0x558a9991e490 <col:28> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x558a99782e68 0x558a99782a88 0x558a997826b8 0x558a997822d8 0x558a99781ef8 0x558a99781b28
|   |     | `-MemberExpr 0x558a9991e460 <col:29> 'T *' lvalue ->_ptr 0x558a998f3ea8
|   |     |   `-CXXThisExpr 0x558a9991e450 <col:29> 'SlotT<T> *' implicit this
|   |     `-MemberExpr 0x558a9991e540 <col:35> 'T' lvalue ->_slot 0x558a998f3f08
|   |       `-CXXThisExpr 0x558a9991e530 <col:35> 'SlotT<T> *' implicit this
|   |-FieldDecl 0x558a998f3ea8 <line:858:9, col:12> col:12 referenced _ptr 'T *'
|   `-FieldDecl 0x558a998f3f08 <line:859:9, col:11> col:11 referenced _slot 'T'
|-EnumDecl 0x558a998f3f70 <line:862:5, line:868:5> line:862:5
| `-EnumConstantDecl 0x558a998f4070 <line:866:9, col:31> col:9 referenced simple_slotbuf_size 'Args::(anonymous enum at ../dummy_inc/click/args.hh:862:5)'
|   `-ImplicitCastExpr 0x558a998f40c0 <col:31> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558a998f4050 <col:31> 'int' Int: 48
|       `-IntegerLiteral 0x558a998f4030 <col:31> 'int' 48
|-FieldDecl 0x558a998f40e8 <line:871:5, col:10> col:10 _my_conf 'bool'
|-FieldDecl 0x558a998f4148 <line:876:5, col:10> col:10 referenced _status 'bool'
|-FieldDecl 0x558a998f41a8 <line:877:5, col:13> col:13 _simple_slotpos 'uint8_t':'unsigned char'
|-FieldDecl 0x558a998f42e0 <line:879:5, col:21> col:21 referenced _conf 'Vector<String> *'
|-FieldDecl 0x558a9990d200 <line:880:5, col:17> col:17 referenced _kwpos 'Vector<int>':'Vector<int>'
|-FieldDecl 0x558a9990d260 <line:882:5, col:11> col:11 referenced _slots 'Args::Slot *'
|-FieldDecl 0x558a9990d310 <line:883:5, col:48> col:13 referenced _simple_slotbuf 'uint8_t [48]'
|-CXXMethodDecl 0x558a9990d538 <line:885:5, col:54> col:17 initialize 'void (const Vector<String> *)' inline
| `-ParmVarDecl 0x558a9990d440 <col:28, col:50> col:50 conf 'const Vector<String> *'
|-CXXMethodDecl 0x558a9990d688 <line:886:5, col:26> col:10 used reset_from 'void (int)'
| `-ParmVarDecl 0x558a9990d5f8 <col:21, col:25> col:25 i 'int'
|-CXXMethodDecl 0x558a9990d958 <line:888:5, col:67> col:12 referenced find 'String (const char *, int, Args::Slot *&)'
| |-ParmVarDecl 0x558a9990d748 <col:17, col:29> col:29 keyword 'const char *'
| |-ParmVarDecl 0x558a9990d7c8 <col:38, col:42> col:42 flags 'int'
| `-ParmVarDecl 0x558a9990d870 <col:49, col:56> col:56 slot_status 'Args::Slot *&'
|-CXXMethodDecl 0x558a9990db68 <line:889:5, col:46> col:10 referenced postparse 'void (bool, Args::Slot *)'
| |-ParmVarDecl 0x558a9990da20 <col:20, col:25> col:25 ok 'bool'
| `-ParmVarDecl 0x558a9990da98 <col:29, col:35> col:35 slot_status 'Args::Slot *'
|-CXXMethodDecl 0x558a9990dc38 <line:890:5, col:25> col:10 check_complete 'void ()'
|-CXXMethodDecl 0x558a9990dd88 <line:892:5, col:48> col:23 simple_slot_size 'int (int)' static inline
| `-ParmVarDecl 0x558a9990dcf0 <col:40, col:44> col:44 size 'int'
|-CXXMethodDecl 0x558a9990e118 <line:893:5, line:894:62> line:893:17 simple_slot_info 'void (int, int, void *&, void **&)' inline
| |-ParmVarDecl 0x558a9990de48 <col:34, col:38> col:38 offset 'int'
| |-ParmVarDecl 0x558a9990dec8 <col:46, col:50> col:50 size 'int'
| |-ParmVarDecl 0x558a9990df70 <line:894:34, col:41> col:41 slot 'void *&'
| `-ParmVarDecl 0x558a9990e028 <col:47, col:55> col:55 pointer 'void **&'
|-CXXMethodDecl 0x558a9990e340 <line:895:5, col:46> col:11 referenced simple_slot 'void *(void *, size_t)'
| |-ParmVarDecl 0x558a9990e1f0 <col:23, col:29> col:29 data 'void *'
| `-ParmVarDecl 0x558a9990e268 <col:35, col:42> col:42 size 'size_t':'unsigned long'
`-FunctionTemplateDecl 0x558a9990e658 <line:896:5, col:53> col:29 complex_slot
  |-TemplateTypeParmDecl 0x558a9990e3f0 <col:14, col:23> col:23 referenced typename depth 0 index 0 T
  `-CXXMethodDecl 0x558a9990e5b8 <col:26, col:53> col:29 complex_slot 'T *(T &)'
    `-ParmVarDecl 0x558a9990e4c8 <col:42, col:45> col:45 variable 'T &'

Layout: <CGRecordLayout
  LLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.7*, %class.Vector.9, %"struct.Args::Slot"*, [48 x i8] }
  NonVirtualBaseLLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.7*, %class.Vector.9, %"struct.Args::Slot"*, [48 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class NumArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class SecondsArg
         0 |   class NumArg (base) (empty)
         0 |   int fraction_digits
         4 |   int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a99929d50 <../dummy_inc/click/args.hh:1013:1, line:1027:1> line:1013:7 referenced class NumArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558a99929e68 <col:1, col:7> col:7 implicit class NumArg
|-AccessSpecDecl 0x558a99929ef8 <col:16, col:22> col:16 public
|-EnumDecl 0x558a99929f20 <line:1014:5, line:1026:5> line:1014:5
| |-EnumConstantDecl 0x558a9992a020 <line:1015:9, col:21> col:9 status_ok 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x558a9992a270 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9992a000 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x558a99929fe0 <col:21> 'int' 0
| |-EnumConstantDecl 0x558a9992a0b0 <line:1016:9, col:24> col:9 referenced status_inval 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x558a9992a2a0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9992a090 <col:24> 'int' Int: 22
| |     `-IntegerLiteral 0x558a9992a070 <col:24> 'int' 22
| |-EnumConstantDecl 0x558a9992a140 <line:1017:9, col:24> col:9 referenced status_range 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x558a9992a2b8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9992a120 <col:24> 'int' Int: 34
| |     `-IntegerLiteral 0x558a9992a100 <col:24> 'int' 34
| |-EnumConstantDecl 0x558a9992a1d0 <line:1019:9, col:25> col:9 status_notsup 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x558a9992a2d0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9992a1b0 <col:25> 'int' Int: 95
| |     `-IntegerLiteral 0x558a9992a190 <col:25> 'int' 95
| `-EnumConstantDecl 0x558a9992a220 <line:1025:9> col:9 status_unitless 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|-CXXConstructorDecl 0x558a9992bc40 <line:1013:7> col:7 implicit used constexpr NumArg 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558a9992c078 <col:7>
|-CXXConstructorDecl 0x558a9992bd48 <col:7> col:7 implicit constexpr NumArg 'void (const NumArg &)' inline default trivial noexcept-unevaluated 0x558a9992bd48
| `-ParmVarDecl 0x558a9992be58 <col:7> col:7 'const NumArg &'
|-CXXConstructorDecl 0x558a9992bef8 <col:7> col:7 implicit used constexpr NumArg 'void (NumArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x558a9992c008 <col:7> col:7 'NumArg &&'
| `-CompoundStmt 0x558a9995d6f0 <col:7>
`-CXXDestructorDecl 0x558a9992e178 <col:7> col:7 implicit ~NumArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.NumArg = type { i8 }
  NonVirtualBaseLLVMType:%class.NumArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a99939ce8 <../dummy_inc/click/args.hh:1310:1, line:1321:1> line:1310:7 referenced class SecondsArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x558a99939e48 <col:1, col:7> col:7 implicit referenced class SecondsArg
|-AccessSpecDecl 0x558a99939ed8 <col:36, col:42> col:36 public
|-CXXConstructorDecl 0x558a99939fe8 <line:1311:5, line:1313:5> line:1311:5 used SecondsArg 'void (int)'
| |-ParmVarDecl 0x558a99939f18 <col:16, col:24> col:20 used d 'int' cinit
| | `-IntegerLiteral 0x558a99774518 <col:24> 'int' 0
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x558a99774618 <col:5> 'NumArg' 'void () noexcept'
| |-CXXCtorInitializer Field 0x558a99774448 'fraction_digits' 'int'
| | `-ImplicitCastExpr 0x558a997745d8 <line:1312:27> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x558a99774598 <col:27> 'int' lvalue ParmVar 0x558a99939f18 'd' 'int'
| `-CompoundStmt 0x558a99774688 <col:30, line:1313:5>
|-CXXMethodDecl 0x558a99773ec0 <line:1314:5, col:99> col:10 parse_saturating 'bool (const String &, uint32_t &, const ArgContext &)'
| |-ParmVarDecl 0x558a9993a0a8 <col:27, col:41> col:41 str 'const String &'
| |-ParmVarDecl 0x558a9993a120 <col:46, col:56> col:56 result 'uint32_t &'
| `-ParmVarDecl 0x558a9993a198 <col:64, col:89> col:82 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x558a99774538 <col:89> 'const ArgContext' lvalue Var 0x558a9991e5c8 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x558a99774118 <line:1315:5, col:88> col:10 parse 'bool (const String &, uint32_t &, const ArgContext &)'
| |-ParmVarDecl 0x558a99773f88 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x558a99774000 <col:35, col:45> col:45 result 'uint32_t &'
| `-ParmVarDecl 0x558a99774078 <col:53, col:78> col:71 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x558a99774558 <col:78> 'const ArgContext' lvalue Var 0x558a9991e5c8 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x558a99774378 <line:1317:5, col:86> col:10 parse 'bool (const String &, double &, const ArgContext &)'
| |-ParmVarDecl 0x558a997741e0 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x558a99774260 <col:35, col:43> col:43 result 'double &'
| `-ParmVarDecl 0x558a997742d8 <col:51, col:76> col:69 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x558a99774578 <col:76> 'const ArgContext' lvalue Var 0x558a9991e5c8 'blank_args' 'const ArgContext'
|-FieldDecl 0x558a99774448 <line:1319:5, col:9> col:9 referenced fraction_digits 'int'
|-FieldDecl 0x558a997744b0 <line:1320:5, col:9> col:9 referenced status 'int'
|-CXXConstructorDecl 0x558a9995cc08 <line:1310:7> col:7 implicit constexpr SecondsArg 'void (const SecondsArg &)' inline default trivial noexcept-unevaluated 0x558a9995cc08
| `-ParmVarDecl 0x558a9995cd18 <col:7> col:7 'const SecondsArg &'
|-CXXConstructorDecl 0x558a9995cdb8 <col:7> col:7 implicit used constexpr SecondsArg 'void (SecondsArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x558a9995cec8 <col:7> col:7 used 'SecondsArg &&'
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x558a9995d700 <col:7> 'NumArg' 'void (NumArg &&) noexcept'
| |   `-ImplicitCastExpr 0x558a9995d6d0 <col:7> 'NumArg' xvalue <UncheckedDerivedToBase (NumArg)>
| |     `-CXXStaticCastExpr 0x558a9995d6a0 <col:7> 'SecondsArg' xvalue static_cast<class SecondsArg &&> <NoOp>
| |       `-DeclRefExpr 0x558a9995d670 <col:7> 'SecondsArg' lvalue ParmVar 0x558a9995cec8 '' 'SecondsArg &&'
| |-CXXCtorInitializer Field 0x558a99774448 'fraction_digits' 'int'
| | `-ImplicitCastExpr 0x558a9995d7f8 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x558a9995d7c8 <col:7> 'int' xvalue .fraction_digits 0x558a99774448
| |     `-CXXStaticCastExpr 0x558a9995d798 <col:7> 'SecondsArg' xvalue static_cast<class SecondsArg &&> <NoOp>
| |       `-DeclRefExpr 0x558a9995d768 <col:7> 'SecondsArg' lvalue ParmVar 0x558a9995cec8 '' 'SecondsArg &&'
| |-CXXCtorInitializer Field 0x558a997744b0 'status' 'int'
| | `-ImplicitCastExpr 0x558a9995d8c8 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x558a9995d898 <col:7> 'int' xvalue .status 0x558a997744b0
| |     `-CXXStaticCastExpr 0x558a9995d868 <col:7> 'SecondsArg' xvalue static_cast<class SecondsArg &&> <NoOp>
| |       `-DeclRefExpr 0x558a9995d838 <col:7> 'SecondsArg' lvalue ParmVar 0x558a9995cec8 '' 'SecondsArg &&'
| `-CompoundStmt 0x558a9995d920 <col:7>
`-CXXDestructorDecl 0x558a9995cf68 <col:7> col:7 implicit referenced ~SecondsArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.SecondsArg = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.SecondsArg = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a997987c8 prev 0x558a9978d9d0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558a997988c0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x558a997989b0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x558a99798ad8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x558a99798c58 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x558a99798dd8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x558a99798f58 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x558a997a9d88 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558a997aa5f8 <col:11>
|-CXXDestructorDecl 0x558a997a9e60 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x558a997a9f98 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x558a997a9f98
| `-ParmVarDecl 0x558a997aa0a8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x558a997aa148 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x558a997aa148
| `-ParmVarDecl 0x558a997aa258 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x558a997ad018 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x558a997ad128 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x558a997ad3a8 <col:11>
|   `-ReturnStmt 0x558a997ad398 <col:11>
|     `-UnaryOperator 0x558a997ad380 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558a997ad370 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x558a997ad198 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x558a997ad198
  `-ParmVarDecl 0x558a997ad2a8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a99798fc0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558a997990d8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x558a99799178 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x558a997991e0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x558a99799248 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x558a997992b0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x558a99799310 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x558a997993d0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x558a99799430 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x558a99799490 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x558a997a9c98 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x558a99799178 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x558a997aa608 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x558a997aa660 <col:12>
|-CXXConstructorDecl 0x558a997aa2c8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x558a997aa2c8
| `-ParmVarDecl 0x558a997aa3d8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x558a997aa478 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x558a997aa478
| `-ParmVarDecl 0x558a997aa588 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x558a997ac700 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a997870e0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558a997871f8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x558a99787288 <col:16, col:22> col:16 public
|-EnumDecl 0x558a997872b0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x558a997873b0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x558a99787490 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a99787390 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x558a99787370 <col:21> 'int' 28
| `-EnumConstantDecl 0x558a99787440 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x558a997874a8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558a99787420 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x558a99787400 <col:22> 'int' 64
|-CXXMethodDecl 0x558a997877e8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x558a997874d0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558a99787550 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x558a997875c8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558a99787640 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558a997878a8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x558a99787aa8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x558a99787920 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x558a99787998 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558a99787b58 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x558a99787cb8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x558a99787bc8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558a99787d60 <col:72> warn_unused_result ""
|-TypedefDecl 0x558a997880c0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x558a99788050 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x558a99787ff0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x558a99787fb0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x558a9925b2d0 'void'
|       |-PointerType 0x558a99507480 'unsigned char *'
|       | `-BuiltinType 0x558a9925b3d0 'unsigned char'
|       |-TypedefType 0x558a993039f0 'size_t' sugar
|       | |-Typedef 0x558a992cbb20 'size_t'
|       | `-BuiltinType 0x558a9925b430 'unsigned long'
|       `-PointerType 0x558a9925bad0 'void *'
|         `-BuiltinType 0x558a9925b2d0 'void'
|-CXXMethodDecl 0x558a99788538 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x558a99788130 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x558a997881a8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558a99788240 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x558a997882c0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x558a997a2c30 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x558a997a2c18 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x558a997a2be0 <col:58> 'int' 0
| |-ParmVarDecl 0x558a99788340 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x558a997a2c58 <col:76> 'int' 0
| |-ParmVarDecl 0x558a997883c0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x558a997a2c78 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x558a99788608 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x558a99788688 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x558a99788748 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x558a997887e8 <col:20>
| `-OptimizeNoneAttr 0x558a99788840 <col:30>
|-CXXMethodDecl 0x558a997888b8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x558a99788958 <col:20>
| `-OptimizeNoneAttr 0x558a997889b0 <col:30>
|-CXXMethodDecl 0x558a99788a28 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x558a99788ac8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x558a99788b78 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x558a99788c18 <col:20>
| |-OptimizeNoneAttr 0x558a99788c70 <col:30>
| `-WarnUnusedResultAttr 0x558a99788c98 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x558a99788cf0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x558a99788d90 <col:20>
| `-OptimizeNoneAttr 0x558a99788de8 <col:30>
|-CXXMethodDecl 0x558a99788e38 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x558a99788ed8 <col:20>
| `-OptimizeNoneAttr 0x558a99788f30 <col:30>
|-CXXMethodDecl 0x558a99788f78 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x558a99789018 <col:20>
| `-OptimizeNoneAttr 0x558a99789070 <col:30>
|-CXXMethodDecl 0x558a997890b8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x558a99789178 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x558a99789240 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x558a99789308 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x558a997893c8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x558a997894e8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x558a997a2d40 <col:54, line:99:5>
|   `-ReturnStmt 0x558a997a2d30 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x558a997a2d18 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x558a997a2ce8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x558a997997c8
|         `-CXXThisExpr 0x558a997a2cd8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x558a99789688 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x558a99789598 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x558a997a2df0 <col:67, line:103:5>
|   `-BinaryOperator 0x558a997a2dd0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x558a997a2d68 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x558a997997c8
|     | `-CXXThisExpr 0x558a997a2d58 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x558a997a2db8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x558a997a2d98 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x558a99789598 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x558a99789780 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x558a997a2e70 <col:33, line:107:5>
|   `-ReturnStmt 0x558a997a2e60 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x558a997a2e48 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x558a997a2e18 <col:16> 'void *' lvalue ->_destructor_argument 0x558a99799830
|         `-CXXThisExpr 0x558a997a2e08 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x558a99789840 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x558a997a34a0 <col:25, line:113:5>
|   |-ParenExpr 0x558a997a31e8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x558a997a31b8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x558a997a2f28 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x558a997a2f00 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x558a997a2ec8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x558a997a2e98 <col:24> '<bound member function type>' ->shared 0x558a997888b8
|   |   |       `-ImplicitCastExpr 0x558a997a2ee8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x558a997a2e88 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x558a997a2f88 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558a997a2f68 <col:42> 'int' 0
|   |   `-CallExpr 0x558a997a3118 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x558a997a3100 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558a997a30e0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558a992fa800 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558a997a3158 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997a2ff8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x558a997a3170 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997a3020 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558a997a3188 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558a997a3058 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x558a997a31a0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558a997a30c8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558a997a30b0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558a997a3078 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x558a997a33e8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x558a997a3218 <col:2> 'unsigned char *' lvalue ->_head 0x558a997995d0
|   | | `-CXXThisExpr 0x558a997a3208 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x558a997a33d0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x558a997a33b0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x558a997a3258 <col:10> 'unsigned char *' lvalue ->_data 0x558a99799638
|   |     | `-CXXThisExpr 0x558a997a3248 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x558a997a3398 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x558a997a3378 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x558a997a3298 <col:18> 'unsigned char *' lvalue ->_tail 0x558a997996a0
|   |         | `-CXXThisExpr 0x558a997a3288 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x558a997a3360 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x558a997a3340 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x558a997a32d8 <col:26> 'unsigned char *' lvalue ->_end 0x558a99799708
|   |             | `-CXXThisExpr 0x558a997a32c8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x558a997a3328 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x558a997a3308 <col:33> 'int' 0
|   `-BinaryOperator 0x558a997a3480 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x558a997a3418 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x558a997997c8
|     | `-CXXThisExpr 0x558a997a3408 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x558a997a3468 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x558a997a3448 <col:16> 'int' 0
|-CXXMethodDecl 0x558a99789980 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x558a997898f0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558a99789a28 <col:20>
| |-OptimizeNoneAttr 0x558a99789a80 <col:30>
| `-WarnUnusedResultAttr 0x558a99789aa8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x558a99789b78 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x558a99789ae8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558a99789c20 <col:20>
| |-OptimizeNoneAttr 0x558a99789c78 <col:30>
| `-WarnUnusedResultAttr 0x558a99789ca0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x558a99789dd8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x558a99789ce0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558a99789e80 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x558a99789f80 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x558a99789ef0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558a9978a028 <col:20>
| `-OptimizeNoneAttr 0x558a9978a080 <col:30>
|-CXXMethodDecl 0x558a9978a148 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x558a9978a0b8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558a9978a1f0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x558a9978a2f0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x558a9978a260 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558a9978a398 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x558a9978a498 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x558a9978a408 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558a9978a540 <col:20>
| `-OptimizeNoneAttr 0x558a9978a598 <col:30>
|-CXXMethodDecl 0x558a9978a728 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x558a9978a5d8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x558a9978a650 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x558a997a2c98 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x558a9978a7d8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x558a9978a9d8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x558a9978a850 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x558a9978a8c8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558a9978abe8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x558a9978aa98 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x558a9978ab10 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558a9978adf8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x558a9978aca8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x558a9978ad28 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x558a997a2ca8 <col:39> 'int' 0
|-CXXMethodDecl 0x558a9978aec8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x558a9978af90 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x558a9978b058 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x558a9978b118 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x558a9978b1e0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x558a9978b328 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x558a9978b298 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x558a9978b4f8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x558a9978b3e8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x558a9978b460 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558a9978b5c8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x558a9978b688 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x558a9978b728 <col:20>
| `-OptimizeNoneAttr 0x558a9978b780 <col:30>
|-CXXMethodDecl 0x558a9978b7d0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x558a9978b870 <col:20>
| `-OptimizeNoneAttr 0x558a9978b8c8 <col:30>
|-CXXMethodDecl 0x558a9978b918 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x558a9978b9d8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x558a9978baa0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x558a9978bb40 <col:20>
| `-OptimizeNoneAttr 0x558a9978bb98 <col:30>
|-CXXMethodDecl 0x558a9978bce8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x558a9978bbd8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x558a9978bc50 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558a9978be38 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x558a9978bda8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558a9978bf10 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x558a9978bfd0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x558a9978c070 <col:20>
| `-OptimizeNoneAttr 0x558a9978c0c8 <col:30>
|-CXXMethodDecl 0x558a9978c118 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x558a9978c1b8 <col:20>
| `-OptimizeNoneAttr 0x558a9978c210 <col:30>
|-CXXMethodDecl 0x558a9978c260 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x558a9978c328 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x558a9978c3c8 <col:20>
| `-OptimizeNoneAttr 0x558a9978c420 <col:30>
|-CXXMethodDecl 0x558a9978c468 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x558a9978c588 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x558a9978c6f8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x558a9978c638 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x558a9978c7e8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x558a9978c888 <col:20>
| `-OptimizeNoneAttr 0x558a9978c8e0 <col:30>
|-CXXMethodDecl 0x558a9978c930 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x558a9978c9f0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x558a9978cc28 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x558a9978caa0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x558a9978cb18 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558a9978ccd8 <col:20>
| `-OptimizeNoneAttr 0x558a9978cd30 <col:30>
|-CXXMethodDecl 0x558a9978cdd8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x558a9978ce78 <col:20>
| `-OptimizeNoneAttr 0x558a9978ced0 <col:30>
|-CXXMethodDecl 0x558a9978cf20 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x558a9978cfc0 <col:20>
| `-OptimizeNoneAttr 0x558a9978d018 <col:30>
|-CXXMethodDecl 0x558a9978d060 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x558a9978d100 <col:20>
| `-OptimizeNoneAttr 0x558a9978d158 <col:30>
|-CXXMethodDecl 0x558a9978d258 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x558a9978d190 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x558a9978d300 <col:20>
| `-OptimizeNoneAttr 0x558a9978d358 <col:30>
|-CXXMethodDecl 0x558a9978d518 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x558a9978d390 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x558a9978d408 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558a9978d5c8 <col:20>
| `-OptimizeNoneAttr 0x558a9978d620 <col:30>
|-CXXMethodDecl 0x558a9978d6c8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x558a9978d7e8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x558a9978d908 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x558a9978d9a8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x558a9978d9d0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x558a9978daf8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x558a9978db98 <col:20>
| `-OptimizeNoneAttr 0x558a9978dbf0 <col:30>
|-CXXMethodDecl 0x558a9978dc98 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x558a9978dd38 <col:20>
| `-OptimizeNoneAttr 0x558a9978dd90 <col:30>
|-AccessSpecDecl 0x558a9978ddb8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x558a9978dde0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x558a9978dee0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x558a9978df30 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558a9978dec0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x558a9978dea0 <col:14> 'int' 48
|-CXXMethodDecl 0x558a9978df98 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x558a9978e038 <col:20>
| `-OptimizeNoneAttr 0x558a9978e090 <col:30>
|-CXXMethodDecl 0x558a9978e108 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x558a9978e1a8 <col:20>
| `-OptimizeNoneAttr 0x558a9978e200 <col:30>
|-CXXMethodDecl 0x558a9978e2c8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x558a9978e238 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x558a9978e468 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x558a9978e608 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x558a9978e518 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x558a9978e6b0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x558a9978e7b0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558a9978eb60 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9978e790 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x558a9978e770 <col:9> 'int' 0
| |-EnumConstantDecl 0x558a9978e840 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558a9978eb78 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9978e820 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x558a9978e800 <col:14> 'int' 1
| |-EnumConstantDecl 0x558a9978e8d0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558a9978eb90 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9978e8b0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x558a9978e890 <col:14> 'int' 2
| |-EnumConstantDecl 0x558a9978e960 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558a9978eba8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9978e940 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x558a9978e920 <col:14> 'int' 3
| |-EnumConstantDecl 0x558a9978e9f0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558a9978ebc0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9978e9d0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x558a9978e9b0 <col:13> 'int' 4
| |-EnumConstantDecl 0x558a9978ea80 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558a9978ebd8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9978ea60 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x558a9978ea40 <col:13> 'int' 5
| `-EnumConstantDecl 0x558a9978eb10 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x558a9978ebf0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558a9978eaf0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x558a9978ead0 <col:14> 'int' 6
|-CXXMethodDecl 0x558a9978ec58 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x558a9978ecf8 <col:20>
| `-OptimizeNoneAttr 0x558a9978ed50 <col:30>
|-CXXMethodDecl 0x558a9978ee48 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x558a9978ed88 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x558a9978eef0 <col:20>
| `-OptimizeNoneAttr 0x558a9978ef48 <col:30>
|-CXXMethodDecl 0x558a9978efb8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x558a9978f0e0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x558a9978f258 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x558a9978f190 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x558a9978f320 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x558a9978f3e8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x558a9978f528 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x558a9978f498 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x558a9978f5d0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x558a9978f6d0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x558a9978f8d0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9978f6b0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x558a9978f690 <col:23> 'int' 0
| |-EnumConstantDecl 0x558a9978f760 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x558a9978f8e8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9978f740 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x558a9978f720 <col:45> 'int' 4
| |-EnumConstantDecl 0x558a9978f7f0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x558a9978f900 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9978f7d0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x558a9978f7b0 <col:24> 'int' 0
| `-EnumConstantDecl 0x558a9978f880 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x558a9978f918 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558a9978f860 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x558a9978f840 <col:47> 'int' 16
|-CXXMethodDecl 0x558a9978f978 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x558a9978fae8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x558a9978fa28 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x558a9978fb90 <col:20>
| `-OptimizeNoneAttr 0x558a9978fbe8 <col:30>
|-CXXMethodDecl 0x558a9978fc38 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x558a997a35c0 <col:18, col:36>
|   `-ReturnStmt 0x558a997a35b0 <col:20, col:33>
|     `-ImplicitCastExpr 0x558a997a3598 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x558a997a3578 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x558a997a3548 <col:27> '<bound member function type>' ->xanno 0x558a9978dc98
|           `-CXXThisExpr 0x558a997a3538 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x558a9978fd30 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x558a997a36d0 <col:30, col:48>
|   `-ReturnStmt 0x558a997a36c0 <col:32, col:45>
|     `-ImplicitCastExpr 0x558a997a36a8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x558a997a3688 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x558a997a3658 <col:39> '<bound member function type>' ->xanno 0x558a9978daf8
|           `-CXXThisExpr 0x558a997a3648 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x558a9978fe18 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x558a997a3868 <col:24, col:50>
|   `-ReturnStmt 0x558a997a3858 <col:26, col:47>
|     `-UnaryOperator 0x558a997a3840 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x558a997a3820 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x558a997a3808 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558a997a37b8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x558a99798ad8
|         |   `-CXXMemberCallExpr 0x558a997a3798 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x558a997a3768 <col:34> '<bound member function type>' ->xanno 0x558a9978dc98
|         |       `-CXXThisExpr 0x558a997a3758 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x558a997a37e8 <col:46> 'int' 0
|-CXXMethodDecl 0x558a9978ff20 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x558a997a3a38 <col:36, col:62>
|   `-ReturnStmt 0x558a997a3a28 <col:38, col:59>
|     `-UnaryOperator 0x558a997a3a10 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x558a997a39f0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x558a997a39d8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558a997a3950 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x558a99798ad8
|         |   `-CXXMemberCallExpr 0x558a997a3930 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x558a997a3900 <col:46> '<bound member function type>' ->xanno 0x558a9978daf8
|         |       `-CXXThisExpr 0x558a997a38f0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x558a997a3980 <col:58> 'int' 0
|-CXXMethodDecl 0x558a99790038 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x558a997a3bd0 <col:26, col:53>
|   `-ReturnStmt 0x558a997a3bc0 <col:28, col:50>
|     `-UnaryOperator 0x558a997a3ba8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x558a997a3b88 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x558a997a3b70 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558a997a3b20 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x558a99798dd8
|         |   `-CXXMemberCallExpr 0x558a997a3b00 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x558a997a3ad0 <col:36> '<bound member function type>' ->xanno 0x558a9978dc98
|         |       `-CXXThisExpr 0x558a997a3ac0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x558a997a3b50 <col:49> 'int' 0
|-CXXMethodDecl 0x558a99790158 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x558a997a3da8 <col:38, col:65>
|   `-ReturnStmt 0x558a997a3d98 <col:40, col:62>
|     `-UnaryOperator 0x558a997a3d80 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x558a997a3d60 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x558a997a3d48 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558a997a3cb8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x558a99798dd8
|         |   `-CXXMemberCallExpr 0x558a997a3c98 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x558a997a3c68 <col:48> '<bound member function type>' ->xanno 0x558a9978daf8
|         |       `-CXXThisExpr 0x558a997a3c58 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x558a997a3ce8 <col:61> 'int' 0
|-CXXMethodDecl 0x558a99790308 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x558a99790210 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x558a997a4478 <col:34, line:463:5>
|   |-ParenExpr 0x558a997a42c0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x558a997a4290 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x558a997a3ef8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558a997a3ec8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558a997a3e18 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558a997a3e00 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558a997a3dc0 <col:23> 'int' lvalue ParmVar 0x558a99790210 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558a997a3de0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558a997a3ea8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558a997a3e78 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558a997a3e38 <col:33> 'int' lvalue ParmVar 0x558a99790210 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x558a997a3e90 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x558a997a3e58 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558a9978dee0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x558a997a3f58 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558a997a3f38 <col:56> 'int' 0
|   |   `-CallExpr 0x558a997a41f0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x558a997a41d8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558a997a41b8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558a992fa800 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558a997a4230 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997a4048 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x558a997a4248 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997a4078 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558a997a4260 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558a997a40b0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x558a997a4278 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558a997a41a0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558a997a4188 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558a997a4148 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x558a997a4468 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x558a997a4450 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x558a997a4430 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x558a997a4400 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558a997a43b0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x558a99798ad8
|         |   `-CXXMemberCallExpr 0x558a997a4390 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x558a997a4360 <col:9> '<bound member function type>' ->xanno 0x558a9978daf8
|         |       `-CXXThisExpr 0x558a997a4350 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x558a997a4418 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x558a997a43e0 <col:21> 'int' lvalue ParmVar 0x558a99790210 'i' 'int'
|-CXXMethodDecl 0x558a99790558 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x558a997903c8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x558a99790440 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x558a997a4b08 <col:40, line:472:5>
|   |-ParenExpr 0x558a997a4920 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x558a997a48f0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x558a997a45d0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558a997a45a0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558a997a44f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558a997a44d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558a997a4498 <col:23> 'int' lvalue ParmVar 0x558a997903c8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558a997a44b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558a997a4580 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558a997a4550 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558a997a4510 <col:33> 'int' lvalue ParmVar 0x558a997903c8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x558a997a4568 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x558a997a4530 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558a9978dee0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x558a997a4630 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558a997a4610 <col:56> 'int' 0
|   |   `-CallExpr 0x558a997a4850 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x558a997a4838 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558a997a4818 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558a992fa800 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558a997a4890 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997a46a0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x558a997a48a8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997a46d0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558a997a48c0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558a997a4708 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x558a997a48d8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558a997a4800 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558a997a47e8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558a997a47a8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x558a997a4ae8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x558a997a4a90 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x558a997a4a60 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x558a997a4a10 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x558a99798ad8
|     | |   `-CXXMemberCallExpr 0x558a997a49f0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x558a997a49c0 <col:2> '<bound member function type>' ->xanno 0x558a9978dc98
|     | |       `-CXXThisExpr 0x558a997a49b0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x558a997a4a78 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x558a997a4a40 <col:14> 'int' lvalue ParmVar 0x558a997903c8 'i' 'int'
|     `-ImplicitCastExpr 0x558a997a4ad0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x558a997a4ab0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x558a99790440 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x558a99790718 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x558a99790620 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x558a997a5288 <col:36, line:485:5>
|   |-ParenExpr 0x558a997a4ff0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x558a997a4fc0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558a997a4ca0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558a997a4c70 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558a997a4b80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558a997a4b68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558a997a4b28 <col:23> 'int' lvalue ParmVar 0x558a99790620 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558a997a4b48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558a997a4c50 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558a997a4c38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558a997a4ba0 <col:33> 'int' lvalue ParmVar 0x558a99790620 'i' 'int'
|   |   |     `-BinaryOperator 0x558a997a4c18 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558a997a4c00 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558a997a4bc0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558a9978dee0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558a997a4be0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x558a997a4d00 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558a997a4ce0 <col:60> 'int' 0
|   |   `-CallExpr 0x558a997a4f20 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558a997a4f08 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558a997a4ee8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558a992fa800 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558a997a4f60 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997a4d70 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x558a997a4f78 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997a4da8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558a997a4f90 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558a997a4de0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x558a997a4fa8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558a997a4ed0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558a997a4eb8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558a997a4e78 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x558a997a5278 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x558a997a5260 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x558a997a5248 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558a997a5218 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x558a997a51b8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x558a997a5188 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558a997a5100 <col:61, col:70> 'char const[48]' lvalue ->c 0x558a997989b0
|             |   `-CXXMemberCallExpr 0x558a997a50e0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558a997a50b0 <col:61> '<bound member function type>' ->xanno 0x558a9978daf8
|             |       `-CXXThisExpr 0x558a997a50a0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558a997a51a0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558a997a5130 <col:74> 'int' lvalue ParmVar 0x558a99790620 'i' 'int'
|-CXXMethodDecl 0x558a99790968 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x558a997907d8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558a99790850 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x558a997a59d8 <col:42, line:500:5>
|   |-ParenExpr 0x558a997a5770 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x558a997a5740 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558a997a5420 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558a997a53f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558a997a5300 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558a997a52e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558a997a52a8 <col:23> 'int' lvalue ParmVar 0x558a997907d8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558a997a52c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558a997a53d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558a997a53b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558a997a5320 <col:33> 'int' lvalue ParmVar 0x558a997907d8 'i' 'int'
|   |   |     `-BinaryOperator 0x558a997a5398 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558a997a5380 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558a997a5340 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558a9978dee0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558a997a5360 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x558a997a5480 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558a997a5460 <col:60> 'int' 0
|   |   `-CallExpr 0x558a997a56a0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558a997a5688 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558a997a5668 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558a992fa800 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558a997a56e0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997a54f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x558a997a56f8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997a5528 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558a997a5710 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558a997a5560 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x558a997a5728 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558a997a5650 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558a997a5638 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558a997a55f8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x558a997a59b8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x558a997a5968 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558a997a5938 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x558a997a58e0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558a997a58b0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558a997a5860 <col:48, col:57> 'char [48]' lvalue ->c 0x558a997989b0
|     |     |   `-CXXMemberCallExpr 0x558a997a5840 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558a997a5810 <col:48> '<bound member function type>' ->xanno 0x558a9978dc98
|     |     |       `-CXXThisExpr 0x558a997a5800 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558a997a58c8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558a997a5890 <col:61> 'int' lvalue ParmVar 0x558a997907d8 'i' 'int'
|     `-ImplicitCastExpr 0x558a997a59a0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x558a997a5980 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x558a99790850 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x558a99790b28 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x558a99790a30 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x558a997a6138 <col:35, line:513:5>
|   |-ParenExpr 0x558a997a5e48 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x558a997a5e18 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558a997a5b70 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558a997a5b40 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558a997a5a50 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558a997a5a38 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558a997a59f8 <col:23> 'int' lvalue ParmVar 0x558a99790a30 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558a997a5a18 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558a997a5b20 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558a997a5b08 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558a997a5a70 <col:33> 'int' lvalue ParmVar 0x558a99790a30 'i' 'int'
|   |   |     `-BinaryOperator 0x558a997a5ae8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558a997a5ad0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558a997a5a90 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558a9978dee0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558a997a5ab0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x558a997a5bd0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558a997a5bb0 <col:60> 'int' 0
|   |   `-CallExpr 0x558a997a5d78 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558a997a5d60 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558a997a5d40 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558a992fa800 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558a997a5db8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997a5c40 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x558a997a5dd0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997a5c78 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558a997a5de8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558a997a5cb0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x558a997a5e00 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558a997a5d28 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558a997a5d10 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558a997a5cd0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x558a997a6128 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x558a997a6110 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x558a997a60f8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558a997a60c8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x558a997a6040 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x558a997a6010 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558a997a5fc0 <col:60, col:69> 'char const[48]' lvalue ->c 0x558a997989b0
|             |   `-CXXMemberCallExpr 0x558a997a5fa0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558a997a5f70 <col:60> '<bound member function type>' ->xanno 0x558a9978daf8
|             |       `-CXXThisExpr 0x558a997a5f60 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558a997a6028 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558a997a5ff0 <col:73> 'int' lvalue ParmVar 0x558a99790a30 'i' 'int'
|-CXXMethodDecl 0x558a99790d78 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x558a99790be8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558a99790c60 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x558a997a6858 <col:41, line:528:5>
|   |-ParenExpr 0x558a997a65e0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x558a997a65b0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558a997a62d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558a997a62a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558a997a61b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558a997a6198 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558a997a6158 <col:23> 'int' lvalue ParmVar 0x558a99790be8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558a997a6178 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558a997a6280 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558a997a6268 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558a997a61d0 <col:33> 'int' lvalue ParmVar 0x558a99790be8 'i' 'int'
|   |   |     `-BinaryOperator 0x558a997a6248 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558a997a6230 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558a997a61f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558a9978dee0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558a997a6210 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x558a997a6330 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558a997a6310 <col:60> 'int' 0
|   |   `-CallExpr 0x558a997a6510 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558a997a64f8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558a997a64d8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558a992fa800 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558a997a6550 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997a63a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x558a997a6568 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997a63d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558a997a6580 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558a997a6410 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x558a997a6598 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558a997a64c0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558a997a64a8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558a997a6468 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x558a997a6838 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x558a997a67e8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558a997a67b8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x558a997a6760 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558a997a6720 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558a997a66d0 <col:47, col:56> 'char [48]' lvalue ->c 0x558a997989b0
|     |     |   `-CXXMemberCallExpr 0x558a997a66b0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558a997a6680 <col:47> '<bound member function type>' ->xanno 0x558a9978dc98
|     |     |       `-CXXThisExpr 0x558a997a6670 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558a997a6738 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558a997a6700 <col:60> 'int' lvalue ParmVar 0x558a99790be8 'i' 'int'
|     `-ImplicitCastExpr 0x558a997a6820 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x558a997a6800 <col:65> 'int16_t':'short' lvalue ParmVar 0x558a99790c60 'x' 'int16_t':'short'
|-CXXMethodDecl 0x558a99790f38 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x558a99790e40 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x558a997a6f28 <col:36, line:541:5>
|   |-ParenExpr 0x558a997a6cc8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x558a997a6c98 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558a997a69f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558a997a69c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558a997a68d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558a997a68b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558a997a6878 <col:23> 'int' lvalue ParmVar 0x558a99790e40 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558a997a6898 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558a997a69a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558a997a6988 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558a997a68f0 <col:33> 'int' lvalue ParmVar 0x558a99790e40 'i' 'int'
|   |   |     `-BinaryOperator 0x558a997a6968 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558a997a6950 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558a997a6910 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558a9978dee0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558a997a6930 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x558a997a6a50 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558a997a6a30 <col:60> 'int' 0
|   |   `-CallExpr 0x558a997a6bf8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558a997a6be0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558a997a6bc0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558a992fa800 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558a997a6c38 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997a6ac0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x558a997a6c50 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997a6af8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558a997a6c68 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558a997a6b30 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x558a997a6c80 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558a997a6ba8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558a997a6b90 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558a997a6b50 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x558a997a6f18 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x558a997a6f00 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x558a997a6ee8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558a997a6eb8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x558a997a6e60 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x558a997a6e30 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558a997a6de0 <col:61, col:70> 'char const[48]' lvalue ->c 0x558a997989b0
|             |   `-CXXMemberCallExpr 0x558a997a6dc0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558a997a6d90 <col:61> '<bound member function type>' ->xanno 0x558a9978daf8
|             |       `-CXXThisExpr 0x558a997a6d80 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558a997a6e48 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558a997a6e10 <col:74> 'int' lvalue ParmVar 0x558a99790e40 'i' 'int'
|-CXXMethodDecl 0x558a99791108 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x558a99790ff8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x558a99791070 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558a997911b8 <col:20>
| `-OptimizeNoneAttr 0x558a99791210 <col:30>
|-CXXMethodDecl 0x558a99791348 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x558a99791250 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x558a997a75f8 <col:35, line:562:5>
|   |-ParenExpr 0x558a997a7398 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x558a997a7368 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558a997a70c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558a997a7090 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558a997a6fa0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558a997a6f88 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558a997a6f48 <col:23> 'int' lvalue ParmVar 0x558a99791250 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558a997a6f68 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558a997a7070 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558a997a7058 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558a997a6fc0 <col:33> 'int' lvalue ParmVar 0x558a99791250 'i' 'int'
|   |   |     `-BinaryOperator 0x558a997a7038 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558a997a7020 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558a997a6fe0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558a9978dee0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558a997a7000 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x558a997a7120 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558a997a7100 <col:60> 'int' 0
|   |   `-CallExpr 0x558a997a72c8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558a997a72b0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558a997a7290 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558a992fa800 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558a997a7308 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997a7190 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x558a997a7320 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997a71c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558a997a7338 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558a997a7200 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x558a997a7350 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558a997a7278 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558a997a7260 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558a997a7220 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x558a997a75e8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x558a997a75d0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x558a997a75b8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558a997a7588 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x558a997a7530 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x558a997a7500 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558a997a74b0 <col:60, col:69> 'char const[48]' lvalue ->c 0x558a997989b0
|             |   `-CXXMemberCallExpr 0x558a997a7490 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558a997a7460 <col:60> '<bound member function type>' ->xanno 0x558a9978daf8
|             |       `-CXXThisExpr 0x558a997a7450 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558a997a7518 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558a997a74e0 <col:73> 'int' lvalue ParmVar 0x558a99791250 'i' 'int'
|-CXXMethodDecl 0x558a99791558 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x558a99791408 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558a99791480 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x558a997a7cd8 <col:41, line:577:5>
|   |-ParenExpr 0x558a997a7a68 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x558a997a7a38 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558a997a7790 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558a997a7760 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558a997a7670 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558a997a7658 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558a997a7618 <col:23> 'int' lvalue ParmVar 0x558a99791408 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558a997a7638 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558a997a7740 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558a997a7728 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558a997a7690 <col:33> 'int' lvalue ParmVar 0x558a99791408 'i' 'int'
|   |   |     `-BinaryOperator 0x558a997a7708 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558a997a76f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558a997a76b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558a9978dee0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558a997a76d0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x558a997a77f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558a997a77d0 <col:60> 'int' 0
|   |   `-CallExpr 0x558a997a7998 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558a997a7980 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558a997a7960 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558a992fa800 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558a997a79d8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997a7860 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x558a997a79f0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997a7898 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558a997a7a08 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558a997a78d0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x558a997a7a20 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558a997a7948 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558a997a7930 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558a997a78f0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x558a997a7cb8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x558a997a7c68 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558a997a7c38 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x558a997a7bd8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558a997a7ba8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558a997a7b58 <col:47, col:56> 'char [48]' lvalue ->c 0x558a997989b0
|     |     |   `-CXXMemberCallExpr 0x558a997a7b38 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558a997a7b08 <col:47> '<bound member function type>' ->xanno 0x558a9978dc98
|     |     |       `-CXXThisExpr 0x558a997a7af8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558a997a7bc0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558a997a7b88 <col:60> 'int' lvalue ParmVar 0x558a99791408 'i' 'int'
|     `-ImplicitCastExpr 0x558a997a7ca0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x558a997a7c80 <col:65> 'int32_t':'int' lvalue ParmVar 0x558a99791480 'x' 'int32_t':'int'
|-CXXMethodDecl 0x558a99791718 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x558a99791620 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x558a997a8408 <col:36, line:591:5>
|   |-ParenExpr 0x558a997a8148 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x558a997a8118 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558a997a7e70 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558a997a7e40 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558a997a7d50 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558a997a7d38 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558a997a7cf8 <col:23> 'int' lvalue ParmVar 0x558a99791620 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558a997a7d18 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558a997a7e20 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558a997a7e08 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558a997a7d70 <col:33> 'int' lvalue ParmVar 0x558a99791620 'i' 'int'
|   |   |     `-BinaryOperator 0x558a997a7de8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558a997a7dd0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558a997a7d90 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558a9978dee0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558a997a7db0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x558a997a7ed0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558a997a7eb0 <col:60> 'int' 0
|   |   `-CallExpr 0x558a997a8078 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558a997a8060 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558a997a8040 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558a992fa800 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558a997a80b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997a7f40 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x558a997a80d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997a7f78 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558a997a80e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558a997a7fb0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x558a997a8100 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558a997a8028 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558a997a8010 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558a997a7fd0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x558a997a83f8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x558a997a83e0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x558a997a83c8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558a997a8398 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x558a997a8310 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x558a997a82e0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558a997a8290 <col:61, col:70> 'char const[48]' lvalue ->c 0x558a997989b0
|             |   `-CXXMemberCallExpr 0x558a997a8270 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558a997a8240 <col:61> '<bound member function type>' ->xanno 0x558a9978daf8
|             |       `-CXXThisExpr 0x558a997a8230 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558a997a82f8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558a997a82c0 <col:74> 'int' lvalue ParmVar 0x558a99791620 'i' 'int'
|-CXXMethodDecl 0x558a99791968 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x558a997917d8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558a99791850 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x558a997a8ae8 <col:42, line:606:5>
|   |-ParenExpr 0x558a997a8878 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x558a997a8848 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558a997a85a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558a997a8570 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558a997a8480 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558a997a8468 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558a997a8428 <col:23> 'int' lvalue ParmVar 0x558a997917d8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558a997a8448 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558a997a8550 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558a997a8538 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558a997a84a0 <col:33> 'int' lvalue ParmVar 0x558a997917d8 'i' 'int'
|   |   |     `-BinaryOperator 0x558a997a8518 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558a997a8500 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558a997a84c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558a9978dee0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558a997a84e0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x558a997a8600 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558a997a85e0 <col:60> 'int' 0
|   |   `-CallExpr 0x558a997a87a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558a997a8790 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558a997a8770 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558a992fa800 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558a997a87e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997a8670 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x558a997a8800 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997a86a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558a997a8818 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558a997a86e0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x558a997a8830 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558a997a8758 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558a997a8740 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558a997a8700 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x558a997a8ac8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x558a997a8a78 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558a997a8a48 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x558a997a89e8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558a997a89b8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558a997a8968 <col:48, col:57> 'char [48]' lvalue ->c 0x558a997989b0
|     |     |   `-CXXMemberCallExpr 0x558a997a8948 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558a997a8918 <col:48> '<bound member function type>' ->xanno 0x558a9978dc98
|     |     |       `-CXXThisExpr 0x558a997a8908 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558a997a89d0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558a997a8998 <col:61> 'int' lvalue ParmVar 0x558a997917d8 'i' 'int'
|     `-ImplicitCastExpr 0x558a997a8ab0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x558a997a8a90 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x558a99791850 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x558a99791b00 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x558a99791a30 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x558a997a9358 <col:33, line:620:5>
|   |-ParenExpr 0x558a997a90d0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x558a997a90a0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x558a997a8cf0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558a997a8cc0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558a997a8b60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558a997a8b48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558a997a8b08 <col:23> 'int' lvalue ParmVar 0x558a99791a30 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558a997a8b28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558a997a8ca0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x558a997a8c88 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558a997a8b80 <col:33> 'int' lvalue ParmVar 0x558a99791a30 'i' 'int'
|   |   |     `-BinaryOperator 0x558a997a8c68 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558a997a8c50 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558a997a8ba0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558a9978dee0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x558a997a8c28 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x558a997a8c10 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x558a997a8bd8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x558a997a8d50 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558a997a8d30 <col:79> 'int' 0
|   |   `-CallExpr 0x558a997a9000 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x558a997a8fe8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558a997a8fc8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558a992fa800 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558a997a9040 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997a8e38 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x558a997a9058 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997a8e80 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558a997a9070 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558a997a8eb8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x558a997a9088 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558a997a8fb0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558a997a8f98 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558a997a8f58 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x558a997a9348 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x558a997a9330 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x558a997a9318 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558a997a92e8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x558a997a9260 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x558a997a9230 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558a997a91e0 <col:67, col:76> 'char const[48]' lvalue ->c 0x558a997989b0
|             |   `-CXXMemberCallExpr 0x558a997a91c0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558a997a9190 <col:67> '<bound member function type>' ->xanno 0x558a9978daf8
|             |       `-CXXThisExpr 0x558a997a9180 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558a997a9248 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558a997a9210 <col:80> 'int' lvalue ParmVar 0x558a99791a30 'i' 'int'
|-CXXMethodDecl 0x558a99791d18 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x558a99791bc0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558a99791c40 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x558a997a9b80 <col:45, line:635:5>
|   |-ParenExpr 0x558a997a98c8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x558a997a9898 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x558a997a9560 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558a997a9530 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558a997a93d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558a997a93b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558a997a9378 <col:23> 'int' lvalue ParmVar 0x558a99791bc0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558a997a9398 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558a997a9510 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x558a997a94f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558a997a93f0 <col:33> 'int' lvalue ParmVar 0x558a99791bc0 'i' 'int'
|   |   |     `-BinaryOperator 0x558a997a94d8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558a997a94c0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558a997a9410 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558a9978dee0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x558a997a9498 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x558a997a9480 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x558a997a9448 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x558a997a95c0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558a997a95a0 <col:79> 'int' 0
|   |   `-CallExpr 0x558a997a97f8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x558a997a97e0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558a997a97c0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558a992fa800 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558a997a9838 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997a9630 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x558a997a9850 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558a997a9678 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558a997a9868 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558a997a96b0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x558a997a9880 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558a997a97a8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558a997a9790 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558a997a9748 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x558a997a9b60 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x558a997a9ac8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558a997a9a98 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x558a997a9a38 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558a997a9a08 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558a997a99b8 <col:54, col:63> 'char [48]' lvalue ->c 0x558a997989b0
|     |     |   `-CXXMemberCallExpr 0x558a997a9998 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558a997a9968 <col:54> '<bound member function type>' ->xanno 0x558a9978dc98
|     |     |       `-CXXThisExpr 0x558a997a9958 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558a997a9a20 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558a997a99e8 <col:67> 'int' lvalue ParmVar 0x558a99791bc0 'i' 'int'
|     `-CXXConstCastExpr 0x558a997a9b30 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x558a997a9b18 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x558a997a9ae0 <col:91> 'const void *' lvalue ParmVar 0x558a99791c40 'x' 'const void *'
|-CXXMethodDecl 0x558a99791de8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x558a997a9c08 <col:34, line:640:5>
|   `-ReturnStmt 0x558a997a9bf8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x558a997a9be0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x558a997a9bb0 <col:16> 'Packet *' lvalue ->_data_packet 0x558a99799568
|         `-CXXThisExpr 0x558a997a9ba0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x558a99791f28 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x558a99791e98 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558a997a2cc8 <col:46> 'bool' true
|-CXXMethodDecl 0x558a997920a8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x558a99791fe0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x558a99792150 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x558a99792900 <line:660:22> "" ""
| |-EnumConstantDecl 0x558a99792250 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558a99792970 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a99792230 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x558a99792210 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x558a997873b0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x558a997922e0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558a99792988 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a997922c0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x558a997922a0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x558a99787440 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x558a99792370 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558a997929a0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a99792350 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x558a99792330 <col:21> 'int' 0
| |-EnumConstantDecl 0x558a99792400 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558a997929b8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a997923e0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x558a997923c0 <col:19> 'int' 16
| |-EnumConstantDecl 0x558a99792490 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558a997929d0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a99792470 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x558a99792450 <col:21> 'int' 16
| |-EnumConstantDecl 0x558a99792520 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558a997929e8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a99792500 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x558a997924e0 <col:19> 'int' 32
| |-EnumConstantDecl 0x558a997925b0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558a99792a00 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a99792590 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x558a99792570 <col:19> 'int' EnumConstant 0x558a99792400 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x558a99792640 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558a99792a18 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a99792620 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x558a99792600 <col:19> 'int' EnumConstant 0x558a99792520 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x558a99792710 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558a99792a30 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a997926f0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x558a997926d0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x558a99792690 <col:23> 'int' EnumConstant 0x558a99792640 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x558a997926b0 <col:40> 'int' 2
| |-EnumConstantDecl 0x558a997927e0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558a99792a48 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a997927c0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x558a997927a0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x558a99792760 <col:23> 'int' EnumConstant 0x558a99792640 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x558a99792780 <col:40> 'int' 4
| `-EnumConstantDecl 0x558a997928b0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x558a99792a60 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558a99792890 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x558a99792870 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x558a99792830 <col:23> 'int' EnumConstant 0x558a99792640 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x558a99792850 <col:40> 'int' 8
|-CXXMethodDecl 0x558a99792aa0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x558a99792b40 <col:68> "" ""
|-CXXMethodDecl 0x558a99792bd8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x558a99792c78 <col:45> "" ""
|-CXXMethodDecl 0x558a99792d10 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x558a99792db0 <col:57> "" ""
|-CXXMethodDecl 0x558a99792e48 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x558a99792ee8 <col:45> "" ""
|-CXXMethodDecl 0x558a99792f80 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x558a99793020 <col:57> "" ""
|-CXXMethodDecl 0x558a997930b0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x558a99793150 <col:51> "" ""
|-CXXMethodDecl 0x558a997931e0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x558a99793280 <col:63> "" ""
|-CXXMethodDecl 0x558a99793310 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x558a997933b0 <col:53> "" ""
|-CXXMethodDecl 0x558a99793440 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x558a997934e0 <col:65> "" ""
|-CXXMethodDecl 0x558a997935f8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x558a99793568 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x558a997936a0 <col:61> "" ""
|-CXXMethodDecl 0x558a99793838 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x558a99793728 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x558a997937a0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x558a997938e8 <col:67> "" ""
|-CXXMethodDecl 0x558a99793a00 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x558a99793970 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x558a99793aa8 <col:63> "" ""
|-CXXMethodDecl 0x558a99793c40 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x558a99793b30 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x558a99793ba8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x558a99793cf0 <col:69> "" ""
|-CXXMethodDecl 0x558a99793e08 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x558a99793d78 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x558a99793eb0 <col:63> "" ""
|-CXXMethodDecl 0x558a99796588 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x558a99796478 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x558a997964f0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558a99796638 <col:69> "" ""
|-CXXMethodDecl 0x558a99796750 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x558a997966c0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x558a997967f8 <col:62> "" ""
|-CXXMethodDecl 0x558a99796990 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x558a99796880 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x558a997968f8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x558a99796a40 <col:68> "" ""
|-CXXMethodDecl 0x558a99796b58 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x558a99796ac8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x558a99796c00 <col:63> "" ""
|-CXXMethodDecl 0x558a99796d98 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x558a99796c88 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x558a99796d00 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x558a99796e48 <col:69> "" ""
|-CXXMethodDecl 0x558a99796ed8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x558a99796f78 <col:64> "" ""
|-CXXMethodDecl 0x558a99797008 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x558a997970a8 <col:52> "" ""
|-CXXMethodDecl 0x558a99797138 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x558a997971d8 <col:67> "" ""
|-CXXMethodDecl 0x558a99797268 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x558a99797308 <col:55> "" ""
|-CXXMethodDecl 0x558a99797420 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x558a99797390 <col:32> col:35 'int'
| `-DeprecatedAttr 0x558a997974c8 <col:58> "" ""
|-CXXMethodDecl 0x558a99797660 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x558a99797550 <col:33> col:36 'int'
| |-ParmVarDecl 0x558a997975c8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x558a99797710 <col:62> "" ""
|-CXXMethodDecl 0x558a99797828 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x558a99797798 <col:32> col:35 'int'
| `-DeprecatedAttr 0x558a997978d0 <col:58> "" ""
|-CXXMethodDecl 0x558a99797a68 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x558a99797958 <col:33> col:36 'int'
| |-ParmVarDecl 0x558a997979d0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x558a99797b18 <col:62> "" ""
|-CXXMethodDecl 0x558a99797c30 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x558a99797ba0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x558a99797cd8 <col:60> "" ""
|-CXXMethodDecl 0x558a99797e70 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x558a99797d60 <col:34> col:37 'int'
| |-ParmVarDecl 0x558a99797dd8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x558a99797f20 <col:64> "" ""
|-CXXMethodDecl 0x558a99798038 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x558a99797fa8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x558a997980e0 <col:58> "" ""
|-CXXMethodDecl 0x558a99798278 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x558a99798168 <col:33> col:36 'int'
| |-ParmVarDecl 0x558a997981e0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x558a99798328 <col:62> "" ""
|-CXXMethodDecl 0x558a99798440 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x558a997983b0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x558a997984e8 <col:59> "" ""
|-CXXMethodDecl 0x558a99798680 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x558a99798570 <col:33> col:36 'int'
| |-ParmVarDecl 0x558a997985e8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558a99798730 <col:63> "" ""
|-AccessSpecDecl 0x558a997987a0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x558a997987c8 prev 0x558a9978d9d0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558a997988c0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x558a997989b0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x558a99798ad8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x558a99798c58 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x558a99798dd8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x558a99798f58 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x558a997a9d88 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x558a997aa5f8 <col:11>
| |-CXXDestructorDecl 0x558a997a9e60 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x558a997a9f98 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x558a997a9f98
| | `-ParmVarDecl 0x558a997aa0a8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x558a997aa148 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x558a997aa148
| | `-ParmVarDecl 0x558a997aa258 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x558a997ad018 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x558a997ad128 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x558a997ad3a8 <col:11>
| |   `-ReturnStmt 0x558a997ad398 <col:11>
| |     `-UnaryOperator 0x558a997ad380 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x558a997ad370 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x558a997ad198 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x558a997ad198
|   `-ParmVarDecl 0x558a997ad2a8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x558a99798fc0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558a997990d8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x558a99799178 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x558a997991e0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x558a99799248 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x558a997992b0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x558a99799310 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x558a997993d0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x558a99799430 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x558a99799490 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x558a997a9c98 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x558a99799178 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x558a997aa608 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x558a997aa660 <col:12>
| |-CXXConstructorDecl 0x558a997aa2c8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x558a997aa2c8
| | `-ParmVarDecl 0x558a997aa3d8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x558a997aa478 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x558a997aa478
| | `-ParmVarDecl 0x558a997aa588 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x558a997ac700 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x558a99799508 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x558a99799568 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x558a997995d0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x558a99799638 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x558a997996a0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x558a99799708 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x558a99799768 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x558a997997c8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x558a99799830 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x558a997998b8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x558a99799508 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x558a997a9c30 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x558a99799768 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x558a997aa670 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x558a997aa6d0 <col:21, line:755:5>
|-CXXConstructorDecl 0x558a99799a58 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x558a99799998 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x558a99799b50 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x558a99799d38 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x558a99799c40 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x558a9979a008 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x558a99799df0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558a99799e68 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x558a99799ee0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558a9979a228 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x558a9979a0d8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x558a9979a150 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x558a997a2808 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x558a9979a2e8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x558a9979a360 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x558a9979a3d8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x558a997a2960 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x558a997a28d0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558a997a2aa8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x558a997a2a18 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x558a997a2ba0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558a997ff6c0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x558a9999d9d8 <line:167:18>
|-CXXRecordDecl 0x558a9999da98 prev 0x558a997ff6c0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x558a9999dba8 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::SlotT<unsigned int>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   unsigned int * _ptr
        24 |   unsigned int _slot
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<int>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   int * _ptr
        24 |   int _slot
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | class Notifier
         0 |   (Notifier vtable pointer)
         8 |   class NotifierSignal _signal
         8 |     union NotifierSignal::vmvalue _v
         8 |       class atomic_uint32_t * v1
         8 |       struct NotifierSignal::vmpair * vm
        16 |     uint32_t _mask
        24 |   enum Notifier::SearchOp _search_op
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a9987a748 <../dummy_inc/click/notifier.hh:73:1, line:130:1> line:73:7 referenced class Notifier definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x558a9987a868 <col:1, col:7> col:7 implicit referenced class Notifier
|-AccessSpecDecl 0x558a9987a8f8 <col:18, col:24> col:18 public
|-EnumDecl 0x558a9987a920 <line:75:5, col:76> col:10 referenced SearchOp
| |-EnumConstantDecl 0x558a9987aa20 <col:21, col:35> col:21 referenced SEARCH_STOP 'Notifier::SearchOp'
| | `-ImplicitCastExpr 0x558a9987ab10 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558a9987aa00 <col:35> 'int' Int: 0
| |     `-IntegerLiteral 0x558a9987a9e0 <col:35> 'int' 0
| |-EnumConstantDecl 0x558a9987aa70 <col:38> col:38 SEARCH_CONTINUE 'Notifier::SearchOp'
| `-EnumConstantDecl 0x558a9987aac0 <col:55> col:55 SEARCH_CONTINUE_WAKE 'Notifier::SearchOp'
|-TypedefDecl 0x558a9987ad58 <line:76:5, col:53> col:20 referenced callback_type 'void (*)(void *, Notifier *)'
| `-PointerType 0x558a9987acf0 'void (*)(void *, Notifier *)'
|   `-ParenType 0x558a9987ac90 'void (void *, Notifier *)' sugar
|     `-FunctionProtoType 0x558a9987ac50 'void (void *, Notifier *)' cdecl
|       |-BuiltinType 0x558a9925b2d0 'void'
|       |-PointerType 0x558a9925bad0 'void *'
|       | `-BuiltinType 0x558a9925b2d0 'void'
|       `-PointerType 0x558a9987abb0 'Notifier *'
|         `-RecordType 0x558a9987a7e0 'Notifier'
|           `-CXXRecord 0x558a9987a748 'Notifier'
|-CXXConstructorDecl 0x558a9987ae98 <line:78:5, col:46> col:12 Notifier 'void (Notifier::SearchOp)' inline
| `-ParmVarDecl 0x558a9987adc0 <col:21, col:35> col:30 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x558a9987fc38 <col:35> 'Notifier::SearchOp' EnumConstant 0x558a9987aa20 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXConstructorDecl 0x558a9987b0a8 <line:79:5, col:76> col:12 Notifier 'void (const NotifierSignal &, Notifier::SearchOp)' inline
| |-ParmVarDecl 0x558a9987af58 <col:21, col:43> col:43 signal 'const NotifierSignal &'
| `-ParmVarDecl 0x558a9987afd0 <col:51, col:65> col:60 op 'Notifier::SearchOp' cinit
|   `-DeclRefExpr 0x558a9987fc58 <col:65> 'Notifier::SearchOp' EnumConstant 0x558a9987aa20 'SEARCH_STOP' 'Notifier::SearchOp'
|-CXXDestructorDecl 0x558a9987b1a8 <line:80:5, col:23> col:13 ~Notifier 'void () noexcept' virtual
|-CXXMethodDecl 0x558a9987b2d8 <line:83:5, line:85:5> line:83:17 initialized 'bool () const' inline
| `-CompoundStmt 0x558a9987fd18 <col:37, line:85:5>
|   `-ReturnStmt 0x558a9987fd08 <line:84:2, col:29>
|     `-CXXMemberCallExpr 0x558a9987fce8 <col:9, col:29> 'bool'
|       `-MemberExpr 0x558a9987fcb8 <col:9, col:17> '<bound member function type>' .initialized 0x558a998789e0
|         `-MemberExpr 0x558a9987fc88 <col:9> 'const NotifierSignal' lvalue ->_signal 0x558a9987f658
|           `-CXXThisExpr 0x558a9987fc78 <col:9> 'const Notifier *' implicit this
|-CXXMethodDecl 0x558a9987b4e0 <line:87:5, col:52> col:9 initialize 'int (const char *, Router *)'
| |-ParmVarDecl 0x558a9987b390 <col:20, col:32> col:32 name 'const char *'
| `-ParmVarDecl 0x558a9987b408 <col:38, col:46> col:46 router 'Router *'
|-CXXMethodDecl 0x558a9987b5d8 <line:89:5, col:43> col:34 signal 'const NotifierSignal &() const' inline
|-CXXMethodDecl 0x558a9987b6c8 <line:90:5, col:33> col:21 search_op 'Notifier::SearchOp () const' inline
|-CXXMethodDecl 0x558a9987b788 <line:92:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x558a9987b8c8 <line:94:5, col:39> col:17 used set_active 'bool (bool)' inline
| `-ParmVarDecl 0x558a9987b838 <col:28, col:33> col:33 active 'bool'
|-CXXMethodDecl 0x558a9987b990 <line:95:5, col:22> col:17 wake 'void ()' inline
|-CXXMethodDecl 0x558a9987c860 <line:96:5, col:23> col:17 sleep 'void ()' inline
|-CXXMethodDecl 0x558a9987cad0 <line:98:5, col:71> col:17 used add_activate_callback 'int (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x558a9987c930 <col:39, col:53> col:53 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x558a9987c9b0 <col:56, col:62> col:62 user_data 'void *'
|-CXXMethodDecl 0x558a9987cd28 <line:99:5, col:75> col:18 used remove_activate_callback 'void (Notifier::callback_type, void *)' virtual
| |-ParmVarDecl 0x558a9987cb90 <col:43, col:57> col:57 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x558a9987cc10 <col:60, col:66> col:66 user_data 'void *'
|-CXXMethodDecl 0x558a9987ceb0 <line:100:5, col:39> col:16 add_listener 'int (Task *)' inline
| `-ParmVarDecl 0x558a9987cde8 <col:29, col:35> col:35 task 'Task *'
|-CXXMethodDecl 0x558a9987cff8 <line:101:5, col:43> col:17 remove_listener 'void (Task *)' inline
| `-ParmVarDecl 0x558a9987cf68 <col:33, col:39> col:39 task 'Task *'
|-CXXMethodDecl 0x558a9987d180 <line:102:5, col:59> col:16 add_dependent_signal 'int (NotifierSignal *)' inline
| `-ParmVarDecl 0x558a9987d0b0 <col:37, col:53> col:53 signal 'NotifierSignal *'
|-CXXMethodDecl 0x558a9987d2f8 <line:103:5, col:63> col:17 remove_dependent_signal 'void (NotifierSignal *)' inline
| `-ParmVarDecl 0x558a9987d238 <col:41, col:57> col:57 signal 'NotifierSignal *'
|-VarDecl 0x558a9987d3c0 <line:105:5, col:38> col:23 EMPTY_NOTIFIER 'const char []' static
|-VarDecl 0x558a9987d448 <line:106:5, col:37> col:23 FULL_NOTIFIER 'const char []' static
|-CXXMethodDecl 0x558a9987d618 <line:108:5, col:76> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x558a9987d4c0 <col:56, col:65> col:65 e 'Element *'
| `-ParmVarDecl 0x558a9987d540 <col:68, col:72> col:72 port 'int'
|-CXXMethodDecl 0x558a9987d8b8 <line:109:5, col:88> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x558a9987d6d8 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x558a9987d758 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x558a9987d7d0 <col:78, col:84> col:84 task 'Task *'
|-CXXMethodDecl 0x558a9987db58 <line:110:5, col:106> col:34 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x558a9987d980 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x558a9987da00 <col:68, col:72> col:72 port 'int'
| `-ParmVarDecl 0x558a9987da78 <col:78, col:88> col:88 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x558a9987ded8 <line:111:5, col:103> col:27 used upstream_empty_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x558a9987dc20 <col:49, col:58> col:58 e 'Element *'
| |-ParmVarDecl 0x558a9987dca0 <col:61, col:65> col:65 port 'int'
| |-ParmVarDecl 0x558a9987dd18 <col:71, col:85> col:85 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x558a9987dd98 <col:88, col:94> col:94 user_data 'void *'
|-CXXMethodDecl 0x558a9987e0c0 <line:113:5, col:77> col:34 used downstream_full_signal 'NotifierSignal (Element *, int)' static inline
| |-ParmVarDecl 0x558a9987dfa8 <col:57, col:66> col:66 e 'Element *'
| `-ParmVarDecl 0x558a9987e028 <col:69, col:73> col:73 port 'int'
|-CXXMethodDecl 0x558a9987e318 <line:114:5, col:89> col:34 downstream_full_signal 'NotifierSignal (Element *, int, Task *)' static inline
| |-ParmVarDecl 0x558a9987e180 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x558a9987e200 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x558a9987e278 <col:79, col:85> col:85 task 'Task *'
|-CXXMethodDecl 0x558a9987e578 <line:115:5, col:107> col:34 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier *)' static inline
| |-ParmVarDecl 0x558a9987e3e0 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x558a9987e460 <col:69, col:73> col:73 port 'int'
| `-ParmVarDecl 0x558a9987e4d8 <col:79, col:89> col:89 dependent_notifier 'Notifier *'
|-CXXMethodDecl 0x558a9987e860 <line:116:5, col:104> col:27 used downstream_full_signal 'NotifierSignal (Element *, int, Notifier::callback_type, void *)' static
| |-ParmVarDecl 0x558a9987e640 <col:50, col:59> col:59 e 'Element *'
| |-ParmVarDecl 0x558a9987e6c0 <col:62, col:66> col:66 port 'int'
| |-ParmVarDecl 0x558a9987e738 <col:72, col:86> col:86 f 'Notifier::callback_type':'void (*)(void *, Notifier *)'
| `-ParmVarDecl 0x558a9987e7b8 <col:89, col:95> col:95 user_data 'void *'
|-CXXMethodDecl 0x558a9987eb18 <line:118:5, col:109> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x558a9987e930 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x558a9987e9b0 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x558a9987ea30 <col:78> col:81 'int'
| `-DeprecatedAttr 0x558a9987ebd0 <col:98> "" ""
|-CXXMethodDecl 0x558a9987eeb8 <line:119:5, col:121> col:34 upstream_empty_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x558a9987ec50 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x558a9987ecd0 <col:68, col:72> col:72 port 'int'
| |-ParmVarDecl 0x558a9987ed50 <col:78> col:81 'int'
| |-ParmVarDecl 0x558a9987edc8 <col:83, col:92> col:93 'Notifier *'
| `-DeprecatedAttr 0x558a9987ef78 <col:110> "" ""
|-CXXMethodDecl 0x558a9987f198 <line:120:5, col:110> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int)' static inline
| |-ParmVarDecl 0x558a9987eff8 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x558a9987f078 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x558a9987f0f8 <col:79> col:82 'int'
| `-DeprecatedAttr 0x558a9987f250 <col:99> "" ""
|-CXXMethodDecl 0x558a9987f4f0 <line:121:5, col:122> col:34 downstream_full_signal 'NotifierSignal (Element *, int, int, Notifier *)' static inline
| |-ParmVarDecl 0x558a9987f2d0 <col:57, col:66> col:66 e 'Element *'
| |-ParmVarDecl 0x558a9987f350 <col:69, col:73> col:73 port 'int'
| |-ParmVarDecl 0x558a9987f3d0 <col:79> col:82 'int'
| |-ParmVarDecl 0x558a9987f448 <col:84, col:93> col:94 'Notifier *'
| `-DeprecatedAttr 0x558a9987f5b0 <col:111> "" ""
|-AccessSpecDecl 0x558a9987f620 <line:123:3, col:10> col:3 private
|-FieldDecl 0x558a9987f658 <line:125:5, col:20> col:20 referenced _signal 'NotifierSignal'
|-FieldDecl 0x558a9987f6b8 <line:126:5, col:14> col:14 referenced _search_op 'Notifier::SearchOp'
|-CXXMethodDecl 0x558a9987f830 <line:128:5, col:61> col:17 used dependent_signal_callback 'void (void *, Notifier *)' static
| |-ParmVarDecl 0x558a9987f720 <col:43, col:48> col:49 'void *'
| `-ParmVarDecl 0x558a9987f798 <col:51, col:60> col:61 'Notifier *'
|-CXXConstructorDecl 0x558a9987f908 <line:73:7> col:7 implicit Notifier 'void (const Notifier &)' inline default noexcept-unevaluated 0x558a9987f908
| `-ParmVarDecl 0x558a9987fa18 <col:7> col:7 'const Notifier &'
`-CXXMethodDecl 0x558a9987fab8 <col:7> col:7 implicit operator= 'Notifier &(const Notifier &)' inline default noexcept-unevaluated 0x558a9987fab8
  `-ParmVarDecl 0x558a9987fbc8 <col:7> col:7 'const Notifier &'

Layout: <CGRecordLayout
  LLVMType:%class.Notifier = type <{ i32 (...)**, %class.NotifierSignal, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Notifier.base = type <{ i32 (...)**, %class.NotifierSignal, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct uninitialized_type (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a993b3978 <../dummy_inc/click/config.h:317:1, line:318:1> line:317:8 referenced struct uninitialized_type definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558a993b3a98 <col:1, col:8> col:8 implicit struct uninitialized_type
|-CXXConstructorDecl 0x558a995c5910 <col:8> col:8 implicit referenced constexpr uninitialized_type 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x558a995c59f0 <col:8> col:8 implicit constexpr uninitialized_type 'void (const uninitialized_type &)' inline default trivial noexcept-unevaluated 0x558a995c59f0
| `-ParmVarDecl 0x558a995c5ad8 <col:8> col:8 'const uninitialized_type &'
|-CXXConstructorDecl 0x558a995c5b78 <col:8> col:8 implicit constexpr uninitialized_type 'void (uninitialized_type &&)' inline default trivial noexcept-unevaluated 0x558a995c5b78
| `-ParmVarDecl 0x558a995c5c88 <col:8> col:8 'uninitialized_type &&'
`-CXXDestructorDecl 0x558a99762970 <col:8> col:8 implicit referenced ~uninitialized_type 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.uninitialized_type = type { i8 }
  NonVirtualBaseLLVMType:%struct.uninitialized_type = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IntArg
         0 |   class NumArg (base) (empty)
         0 |   int base
         4 |   int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct DefaultArg<int>
         0 |   class IntArg (base)
         0 |     class NumArg (base) (empty)
         0 |     int base
         4 |     int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558a9992a300 <../dummy_inc/click/args.hh:1040:1, line:1095:1> line:1040:7 referenced class IntArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x558a9992a458 <col:1, col:7> col:7 implicit referenced class IntArg
|-AccessSpecDecl 0x558a9992a4e8 <col:32, col:38> col:32 public
|-TypedefDecl 0x558a9992a520 <line:1042:5, col:22> col:22 referenced limb_type 'uint32_t':'unsigned int'
| `-TypedefType 0x558a993b3d00 'uint32_t' sugar
|   |-Typedef 0x558a992c4408 'uint32_t'
|   `-TypedefType 0x558a9929d440 '__uint32_t' sugar
|     |-Typedef 0x558a9929d038 '__uint32_t'
|     `-BuiltinType 0x558a9925b410 'unsigned int'
|-CXXConstructorDecl 0x558a9992a668 <line:1044:5, line:1046:5> line:1044:5 used IntArg 'void (int)'
| |-ParmVarDecl 0x558a9992a590 <col:12, col:20> col:16 used b 'int' cinit
| | `-IntegerLiteral 0x558a9992bb48 <col:20> 'int' 0
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x558a9992c088 <col:5> 'NumArg' 'void () noexcept'
| |-CXXCtorInitializer Field 0x558a9992b400 'base' 'int'
| | `-ImplicitCastExpr 0x558a9992bbe8 <line:1045:16> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x558a9992bba8 <col:16> 'int' lvalue ParmVar 0x558a9992a590 'b' 'int'
| `-CompoundStmt 0x558a9992c0f8 <col:19, line:1046:5>
|-CXXMethodDecl 0x558a9992ab60 <line:1048:5, line:1050:50> line:1048:17 used parse 'const char *(const char *, const char *, bool, int, IntArg::limb_type *, int)'
| |-ParmVarDecl 0x558a9992a730 <col:23, col:35> col:35 begin 'const char *'
| |-ParmVarDecl 0x558a9992a7b0 <col:42, col:54> col:54 end 'const char *'
| |-ParmVarDecl 0x558a9992a828 <line:1049:23, col:28> col:28 is_signed 'bool'
| |-ParmVarDecl 0x558a9992a8a8 <col:39, col:43> col:43 size 'int'
| |-ParmVarDecl 0x558a9992a968 <line:1050:23, col:34> col:34 value 'IntArg::limb_type *'
| `-ParmVarDecl 0x558a9992a9e8 <col:41, col:45> col:45 nlimb 'int'
|-FunctionTemplateDecl 0x558a9992afb8 <line:1052:5, line:1067:5> line:1053:10 parse_saturating
| |-TemplateTypeParmDecl 0x558a9992ac30 <line:1052:14, col:23> col:23 referenced typename depth 0 index 0 V
| |-CXXMethodDecl 0x558a9992af18 <line:1053:5, line:1067:5> line:1053:10 parse_saturating 'bool (const String &, V &, const ArgContext &)'
| | |-ParmVarDecl 0x558a9992acd8 <col:27, col:41> col:41 referenced str 'const String &'
| | |-ParmVarDecl 0x558a9992ad78 <col:46, col:49> col:49 referenced result 'V &'
| | |-ParmVarDecl 0x558a9992adf0 <col:57, col:82> col:75 referenced args 'const ArgContext &' cinit
| | | `-DeclRefExpr 0x558a9992bb68 <col:82> 'const ArgContext' lvalue Var 0x558a9991e5c8 'blank_args' 'const ArgContext'
| | `-CompoundStmt 0x558a9992d028 <col:94, line:1067:5>
| |   |-DeclStmt 0x558a9992c288 <line:1054:9, col:64>
| |   | `-VarDecl 0x558a9992c118 <col:9, col:55> col:24 referenced is_signed 'const bool' constexpr cinit
| |   |   `-CXXDependentScopeMemberExpr 0x558a9992c240 <col:36, col:55> '<dependent type>' lvalue ->is_signed
| |   |-DeclStmt 0x558a9992c4a8 <line:1055:9, col:91>
| |   | `-VarDecl 0x558a9992c2b8 <col:9, col:90> col:23 referenced nlimb 'const int' constexpr cinit
| |   |   `-CXXFunctionalCastExpr 0x558a9992c480 <col:31, col:90> 'int' functional cast to int <Dependent>
| |   |     `-BinaryOperator 0x558a9992c460 <col:35, col:89> 'unsigned long' '/'
| |   |       |-ParenExpr 0x558a9992c410 <col:35, col:69> 'unsigned long'
| |   |       | `-BinaryOperator 0x558a9992c3f0 <col:36, col:68> 'unsigned long' '-'
| |   |       |   |-BinaryOperator 0x558a9992c398 <col:36, col:64> 'unsigned long' '+'
| |   |       |   | |-UnaryExprOrTypeTraitExpr 0x558a9992c348 <col:36, col:44> 'unsigned long' sizeof 'V'
| |   |       |   | `-UnaryExprOrTypeTraitExpr 0x558a9992c378 <col:48, col:64> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
| |   |       |   `-ImplicitCastExpr 0x558a9992c3d8 <col:68> 'unsigned long' <IntegralCast>
| |   |       |     `-IntegerLiteral 0x558a9992c3b8 <col:68> 'int' 1
| |   |       `-UnaryExprOrTypeTraitExpr 0x558a9992c440 <col:73, col:89> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
| |   |-DeclStmt 0x558a9992c608 <line:1056:9, col:27>
| |   | `-VarDecl 0x558a9992c5a0 <col:9, col:26> col:19 referenced x 'IntArg::limb_type [nlimb]'
| |   |-IfStmt 0x558a9992ca58 <line:1057:9, line:1059:22>
| |   | |-CXXOperatorCallExpr 0x558a9992c988 <line:1057:13, line:1058:24> '<dependent type>'
| |   | | |-UnresolvedLookupExpr 0x558a9992c900 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x558a9988ba60 0x558a9977dce8 0x558a995c72c8 0x558a995c6fa0 0x558a995b8780 0x558a995b8430 0x558a995b7d20 0x558a9958a690 0x558a99516b50
| |   | | |-CallExpr 0x558a9992c840 <line:1057:13, col:78> '<dependent type>'
| |   | | | |-UnresolvedMemberExpr 0x558a9992c630 <col:13> '<bound member function type>' lvalue
| |   | | | |-CXXMemberCallExpr 0x558a9992c6e0 <col:19, col:29> 'String::const_iterator':'const char *'
| |   | | | | `-MemberExpr 0x558a9992c6b0 <col:19, col:23> '<bound member function type>' .begin 0x558a995a7988
| |   | | | |   `-DeclRefExpr 0x558a9992c690 <col:19> 'const String' lvalue ParmVar 0x558a9992acd8 'str' 'const String &'
| |   | | | |-CXXMemberCallExpr 0x558a9992c750 <col:32, col:40> 'String::const_iterator':'const char *'
| |   | | | | `-MemberExpr 0x558a9992c720 <col:32, col:36> '<bound member function type>' .end 0x558a995a7ba0
| |   | | | |   `-DeclRefExpr 0x558a9992c700 <col:32> 'const String' lvalue ParmVar 0x558a9992acd8 'str' 'const String &'
| |   | | | |-DeclRefExpr 0x558a9992c770 <col:43> 'const bool' lvalue Var 0x558a9992c118 'is_signed' 'const bool'
| |   | | | |-CXXFunctionalCastExpr 0x558a9992c7d8 <col:54, col:67> 'int' functional cast to int <Dependent>
| |   | | | | `-UnaryExprOrTypeTraitExpr 0x558a9992c7b8 <col:58, col:66> 'unsigned long' sizeof 'V'
| |   | | | |-DeclRefExpr 0x558a9992c800 <col:70> 'IntArg::limb_type [nlimb]' lvalue Var 0x558a9992c5a0 'x' 'IntArg::limb_type [nlimb]'
| |   | | | `-DeclRefExpr 0x558a9992c820 <col:73> 'const int' lvalue Var 0x558a9992c2b8 'nlimb' 'const int'
| |   | | `-CXXMemberCallExpr 0x558a9992c8e0 <line:1058:16, col:24> 'String::const_iterator':'const char *'
| |   | |   `-MemberExpr 0x558a9992c8b0 <col:16, col:20> '<bound member function type>' .end 0x558a995a7ba0
| |   | |     `-DeclRefExpr 0x558a9992c890 <col:16> 'const String' lvalue ParmVar 0x558a9992acd8 'str' 'const String &'
| |   | `-BinaryOperator 0x558a9992ca38 <line:1059:13, col:22> 'int' lvalue '='
| |   |   |-MemberExpr 0x558a9992c9d0 <col:13> 'int' lvalue ->status 0x558a9992b468
| |   |   | `-CXXThisExpr 0x558a9992c9c0 <col:13> 'IntArg *' implicit this
| |   |   `-ImplicitCastExpr 0x558a9992ca20 <col:22> 'int' <IntegralCast>
| |   |     `-DeclRefExpr 0x558a9992ca00 <col:22> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x558a9992a0b0 'status_inval' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |   |-IfStmt 0x558a9992cca8 <line:1060:9, line:1063:9>
| |   | |-BinaryOperator 0x558a9992cb90 <line:1060:13, col:33> 'bool' '&&'
| |   | | |-ImplicitCastExpr 0x558a9992cb78 <col:13> 'bool' <IntegralToBoolean>
| |   | | | `-ImplicitCastExpr 0x558a9992cb60 <col:13> 'int' <LValueToRValue>
| |   | | |   `-MemberExpr 0x558a9992ca80 <col:13> 'int' lvalue ->status 0x558a9992b468
| |   | | |     `-CXXThisExpr 0x558a9992ca70 <col:13> 'IntArg *' implicit this
| |   | | `-BinaryOperator 0x558a9992cb40 <col:23, col:33> 'bool' '!='
| |   | |   |-ImplicitCastExpr 0x558a9992cb10 <col:23> 'int' <LValueToRValue>
| |   | |   | `-MemberExpr 0x558a9992cac0 <col:23> 'int' lvalue ->status 0x558a9992b468
| |   | |   |   `-CXXThisExpr 0x558a9992cab0 <col:23> 'IntArg *' implicit this
| |   | |   `-ImplicitCastExpr 0x558a9992cb28 <col:33> 'int' <IntegralCast>
| |   | |     `-DeclRefExpr 0x558a9992caf0 <col:33> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x558a9992a140 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |   | `-CompoundStmt 0x558a9992cc88 <col:47, line:1063:9>
| |   |   |-CXXMemberCallExpr 0x558a9992cc28 <line:1061:13, col:40> 'void'
| |   |   | |-MemberExpr 0x558a9992cbd0 <col:13, col:18> '<bound member function type>' .error 0x558a998cf7f0
| |   |   | | `-DeclRefExpr 0x558a9992cbb0 <col:13> 'const ArgContext' lvalue ParmVar 0x558a9992adf0 'args' 'const ArgContext &'
| |   |   | `-ImplicitCastExpr 0x558a9992cc50 <col:24> 'const char *' <ArrayToPointerDecay>
| |   |   |   `-StringLiteral 0x558a9992cc00 <col:24> 'const char [15]' lvalue "invalid number"
| |   |   `-ReturnStmt 0x558a9992cc78 <line:1062:13, col:20>
| |   |     `-CXXBoolLiteralExpr 0x558a9992cc68 <col:20> 'bool' false
| |   |-DeclStmt 0x558a9992ce78 <line:1064:9, col:64>
| |   | `-TypedefDecl 0x558a9992ce20 <col:9, col:49> col:49 referenced unsigned_v_type 'typename make_unsigned<V>::type'
| |   |   `-DependentNameType 0x558a9992cdb0 'typename make_unsigned<V>::type' dependent
| |   |-CallExpr 0x558a9992cfd8 <line:1065:9, col:71> '<dependent type>'
| |   | |-UnresolvedLookupExpr 0x558a9992ce90 <col:9> '<overloaded function type>' lvalue (ADL) = 'extract_integer' 0x558a9954ab18
| |   | |-DeclRefExpr 0x558a9992ced8 <col:25> 'IntArg::limb_type [nlimb]' lvalue Var 0x558a9992c5a0 'x' 'IntArg::limb_type [nlimb]'
| |   | `-CXXReinterpretCastExpr 0x558a9992cfa8 <col:28, col:70> 'unsigned_v_type':'typename make_unsigned<V>::type' lvalue reinterpret_cast<unsigned_v_type &> <Dependent>
| |   |   `-DeclRefExpr 0x558a9992cf20 <col:64> 'V' lvalue ParmVar 0x558a9992ad78 'result' 'V &'
| |   `-ReturnStmt 0x558a9992d018 <line:1066:9, col:16>
| |     `-CXXBoolLiteralExpr 0x558a9992d008 <col:16> 'bool' true
| `-CXXMethodDecl 0x558a999bbc38 <line:1053:5, line:1067:5> line:1053:10 used parse_saturating 'bool (const String &, int &, const ArgContext &)'
|   |-TemplateArgument type 'int'
|   |-ParmVarDecl 0x558a999bba10 <col:27, col:41> col:41 used str 'const String &'
|   |-ParmVarDecl 0x558a999bbae8 <col:46, col:49> col:49 used result 'int &'
|   |-ParmVarDecl 0x558a999bbb50 <col:57, col:82> col:75 used args 'const ArgContext &'
|   `-CompoundStmt 0x558a999bd9d0 <col:94, line:1067:5>
|     |-DeclStmt 0x558a999bc448 <line:1054:9, col:64>
|     | `-VarDecl 0x558a999bc268 <col:9, col:55> col:24 referenced is_signed 'const bool' constexpr cinit
|     |   `-ImplicitCastExpr 0x558a999bc3d8 <col:36, col:55> 'bool' <LValueToRValue>
|     |     `-DeclRefExpr 0x558a999bc3a8 <col:36, col:55> 'const bool' lvalue Var 0x558a9953aa88 'is_signed' 'const bool' non_odr_use_constant
|     |-DeclStmt 0x558a999bc628 <line:1055:9, col:91>
|     | `-VarDecl 0x558a999bc460 <col:9, col:90> col:23 referenced nlimb 'const int' constexpr cinit
|     |   `-CXXFunctionalCastExpr 0x558a999bc5a8 <col:31, col:90> 'int' functional cast to int <NoOp>
|     |     `-ImplicitCastExpr 0x558a999bc590 <col:35, col:89> 'int' <IntegralCast> part_of_explicit_cast
|     |       `-BinaryOperator 0x558a999bc570 <col:35, col:89> 'unsigned long' '/'
|     |         |-ParenExpr 0x558a999bc550 <col:35, col:69> 'unsigned long'
|     |         | `-BinaryOperator 0x558a999bc530 <col:36, col:68> 'unsigned long' '-'
|     |         |   |-BinaryOperator 0x558a999bc4f8 <col:36, col:64> 'unsigned long' '+'
|     |         |   | |-UnaryExprOrTypeTraitExpr 0x558a999bc4d8 <col:36, col:44> 'unsigned long' sizeof 'int':'int'
|     |         |   | `-UnaryExprOrTypeTraitExpr 0x558a9992c378 <col:48, col:64> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |         |   `-ImplicitCastExpr 0x558a999bc518 <col:68> 'unsigned long' <IntegralCast>
|     |         |     `-IntegerLiteral 0x558a9992c3b8 <col:68> 'int' 1
|     |         `-UnaryExprOrTypeTraitExpr 0x558a9992c440 <col:73, col:89> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |-DeclStmt 0x558a999bc7c0 <line:1056:9, col:27>
|     | `-VarDecl 0x558a999bc758 <col:9, col:26> col:19 used x 'IntArg::limb_type [1]'
|     |-IfStmt 0x558a999bcc50 <line:1057:9, line:1059:22>
|     | |-BinaryOperator 0x558a999bcbf8 <line:1057:13, line:1058:24> 'bool' '!='
|     | | |-CXXMemberCallExpr 0x558a999bcab0 <line:1057:13, col:78> 'const char *'
|     | | | |-MemberExpr 0x558a999bca80 <col:13> '<bound member function type>' ->parse 0x558a9992ab60
|     | | | | `-CXXThisExpr 0x558a999bca70 <col:13> 'IntArg *' implicit this
|     | | | |-CXXMemberCallExpr 0x558a999bc910 <col:19, col:29> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x558a999bc8e0 <col:19, col:23> '<bound member function type>' .begin 0x558a995a7988
|     | | | |   `-DeclRefExpr 0x558a999bc8c0 <col:19> 'const String' lvalue ParmVar 0x558a999bba10 'str' 'const String &'
|     | | | |-CXXMemberCallExpr 0x558a999bc980 <col:32, col:40> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x558a999bc950 <col:32, col:36> '<bound member function type>' .end 0x558a995a7ba0
|     | | | |   `-DeclRefExpr 0x558a999bc930 <col:32> 'const String' lvalue ParmVar 0x558a999bba10 'str' 'const String &'
|     | | | |-ImplicitCastExpr 0x558a999bcb20 <col:43> 'bool' <LValueToRValue>
|     | | | | `-DeclRefExpr 0x558a999bcb00 <col:43> 'const bool' lvalue Var 0x558a999bc268 'is_signed' 'const bool' non_odr_use_constant
|     | | | |-CXXFunctionalCastExpr 0x558a999bca08 <col:54, col:67> 'int' functional cast to int <NoOp>
|     | | | | `-ImplicitCastExpr 0x558a999bc9f0 <col:58, col:66> 'int' <IntegralCast> part_of_explicit_cast
|     | | | |   `-UnaryExprOrTypeTraitExpr 0x558a999bc9d0 <col:58, col:66> 'unsigned long' sizeof 'int':'int'
|     | | | |-ImplicitCastExpr 0x558a999bcb38 <col:70> 'IntArg::limb_type *' <ArrayToPointerDecay>
|     | | | | `-DeclRefExpr 0x558a999bca30 <col:70> 'IntArg::limb_type [1]' lvalue Var 0x558a999bc758 'x' 'IntArg::limb_type [1]'
|     | | | `-ImplicitCastExpr 0x558a999bcb70 <col:73> 'int' <LValueToRValue>
|     | | |   `-DeclRefExpr 0x558a999bcb50 <col:73> 'const int' lvalue Var 0x558a999bc460 'nlimb' 'const int' non_odr_use_constant
|     | | `-CXXMemberCallExpr 0x558a999bcbd8 <line:1058:16, col:24> 'String::const_iterator':'const char *'
|     | |   `-MemberExpr 0x558a999bcba8 <col:16, col:20> '<bound member function type>' .end 0x558a995a7ba0
|     | |     `-DeclRefExpr 0x558a999bcb88 <col:16> 'const String' lvalue ParmVar 0x558a999bba10 'str' 'const String &'
|     | `-BinaryOperator 0x558a999bcc30 <line:1059:13, col:22> 'int' lvalue '='
|     |   |-MemberExpr 0x558a9992c9d0 <col:13> 'int' lvalue ->status 0x558a9992b468
|     |   | `-CXXThisExpr 0x558a9992c9c0 <col:13> 'IntArg *' implicit this
|     |   `-ImplicitCastExpr 0x558a999bcc18 <col:22> 'int' <IntegralCast>
|     |     `-DeclRefExpr 0x558a9992ca00 <col:22> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x558a9992a0b0 'status_inval' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     |-IfStmt 0x558a999bcdc8 <line:1060:9, line:1063:9>
|     | |-BinaryOperator 0x558a999bcce8 <line:1060:13, col:33> 'bool' '&&'
|     | | |-ImplicitCastExpr 0x558a999bccd0 <col:13> 'bool' <IntegralToBoolean>
|     | | | `-ImplicitCastExpr 0x558a999bccb8 <col:13> 'int' <LValueToRValue>
|     | | |   `-MemberExpr 0x558a9992ca80 <col:13> 'int' lvalue ->status 0x558a9992b468
|     | | |     `-CXXThisExpr 0x558a9992ca70 <col:13> 'IntArg *' implicit this
|     | | `-BinaryOperator 0x558a999bcc98 <col:23, col:33> 'bool' '!='
|     | |   |-ImplicitCastExpr 0x558a999bcc68 <col:23> 'int' <LValueToRValue>
|     | |   | `-MemberExpr 0x558a9992cac0 <col:23> 'int' lvalue ->status 0x558a9992b468
|     | |   |   `-CXXThisExpr 0x558a9992cab0 <col:23> 'IntArg *' implicit this
|     | |   `-ImplicitCastExpr 0x558a999bcc80 <col:33> 'int' <IntegralCast>
|     | |     `-DeclRefExpr 0x558a9992caf0 <col:33> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x558a9992a140 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     | `-CompoundStmt 0x558a999bcda8 <col:47, line:1063:9>
|     |   |-CXXMemberCallExpr 0x558a999bcd58 <line:1061:13, col:40> 'void'
|     |   | |-MemberExpr 0x558a999bcd28 <col:13, col:18> '<bound member function type>' .error 0x558a998cf7f0
|     |   | | `-DeclRefExpr 0x558a999bcd08 <col:13> 'const ArgContext' lvalue ParmVar 0x558a999bbb50 'args' 'const ArgContext &'
|     |   | `-ImplicitCastExpr 0x558a999bcd80 <col:24> 'const char *' <ArrayToPointerDecay>
|     |   |   `-StringLiteral 0x558a9992cc00 <col:24> 'const char [15]' lvalue "invalid number"
|     |   `-ReturnStmt 0x558a999bcd98 <line:1062:13, col:20>
|     |     `-CXXBoolLiteralExpr 0x558a9992cc68 <col:20> 'bool' false
|     |-DeclStmt 0x558a999bd308 <line:1064:9, col:64>
|     | `-TypedefDecl 0x558a999bd2b0 <col:9, col:49> col:49 unsigned_v_type 'typename make_unsigned<int>::type':'unsigned int'
|     |   `-ElaboratedType 0x558a999bd260 'typename make_unsigned<int>::type' sugar
|     |     `-TypedefType 0x558a999bd240 'make_unsigned<int>::type' sugar
|     |       |-Typedef 0x558a999bd1d0 'type'
|     |       `-ElaboratedType 0x558a999bd180 'typename integer_traits<int>::unsigned_type' sugar
|     |         `-TypedefType 0x558a999bd160 'integer_traits<int>::unsigned_type' sugar
|     |           |-Typedef 0x558a9953abe0 'unsigned_type'
|     |           `-BuiltinType 0x558a9925b410 'unsigned int'
|     |-CallExpr 0x558a999bd960 <line:1065:9, col:71> 'void'
|     | |-ImplicitCastExpr 0x558a999bd948 <col:9> 'void (*)(const unsigned int *, unsigned int &)' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x558a999bd8c8 <col:9> 'void (const unsigned int *, unsigned int &)' lvalue Function 0x558a999bd7a8 'extract_integer' 'void (const unsigned int *, unsigned int &)' (FunctionTemplate 0x558a9954ab18 'extract_integer')
|     | |-ImplicitCastExpr 0x558a999bd9a8 <col:25> 'const unsigned int *' <NoOp>
|     | | `-ImplicitCastExpr 0x558a999bd990 <col:25> 'IntArg::limb_type *' <ArrayToPointerDecay>
|     | |   `-DeclRefExpr 0x558a999bd368 <col:25> 'IntArg::limb_type [1]' lvalue Var 0x558a999bc758 'x' 'IntArg::limb_type [1]'
|     | `-CXXReinterpretCastExpr 0x558a999bd438 <col:28, col:70> 'unsigned_v_type':'unsigned int' lvalue reinterpret_cast<unsigned_v_type &> <LValueBitCast>
|     |   `-DeclRefExpr 0x558a999bd3e8 <col:64> 'int':'int' lvalue ParmVar 0x558a999bbae8 'result' 'int &'
|     `-ReturnStmt 0x558a999bd9c0 <line:1066:9, col:16>
|       `-CXXBoolLiteralExpr 0x558a9992d008 <col:16> 'bool' true
|-FunctionTemplateDecl 0x558a9992b378 <line:1069:5, line:1083:5> line:1070:10 parse
| |-TemplateTypeParmDecl 0x558a9992b028 <line:1069:14, col:23> col:23 referenced typename depth 0 index 0 V
| |-CXXMethodDecl 0x558a9992b2d8 <line:1070:5, line:1083:5> line:1070:10 parse 'bool (const String &, V &, const ArgContext &)'
| | |-ParmVarDecl 0x558a9992b0d8 <col:16, col:30> col:30 referenced str 'const String &'
| | |-ParmVarDecl 0x558a9992b178 <col:35, col:38> col:38 referenced result 'V &'
| | |-ParmVarDecl 0x558a9992b1f0 <col:46, col:71> col:64 referenced args 'const ArgContext &' cinit
| | | `-DeclRefExpr 0x558a9992bb88 <col:71> 'const ArgContext' lvalue Var 0x558a9991e5c8 'blank_args' 'const ArgContext'
| | `-CompoundStmt 0x558a9992d798 <col:83, line:1083:5>
| |   |-DeclStmt 0x558a9992d0f0 <line:1071:9, col:12>
| |   | `-VarDecl 0x558a9992d088 <col:9, col:11> col:11 referenced x 'V'
| |   `-IfStmt 0x558a9992d770 <line:1072:9, line:1082:9> has_else
| |     |-BinaryOperator 0x558a9992d380 <line:1072:13, line:1073:49> '<dependent type>' '||'
| |     | |-UnaryOperator 0x558a9992d208 <line:1072:13, col:43> '<dependent type>' prefix '!' cannot overflow
| |     | | `-CallExpr 0x558a9992d1d0 <col:14, col:43> '<dependent type>'
| |     | |   |-UnresolvedMemberExpr 0x558a9992d118 <col:14> '<bound member function type>' lvalue
| |     | |   |-DeclRefExpr 0x558a9992d170 <col:31> 'const String' lvalue ParmVar 0x558a9992b0d8 'str' 'const String &'
| |     | |   |-DeclRefExpr 0x558a9992d190 <col:36> 'V' lvalue Var 0x558a9992d088 'x' 'V'
| |     | |   `-DeclRefExpr 0x558a9992d1b0 <col:39> 'const ArgContext' lvalue ParmVar 0x558a9992b1f0 'args' 'const ArgContext &'
| |     | `-ParenExpr 0x558a9992d360 <line:1073:16, col:49> 'bool'
| |     |   `-BinaryOperator 0x558a9992d340 <col:17, col:37> 'bool' '&&'
| |     |     |-ImplicitCastExpr 0x558a9992d328 <col:17> 'bool' <IntegralToBoolean>
| |     |     | `-ImplicitCastExpr 0x558a9992d310 <col:17> 'int' <LValueToRValue>
| |     |     |   `-MemberExpr 0x558a9992d230 <col:17> 'int' lvalue ->status 0x558a9992b468
| |     |     |     `-CXXThisExpr 0x558a9992d220 <col:17> 'IntArg *' implicit this
| |     |     `-BinaryOperator 0x558a9992d2f0 <col:27, col:37> 'bool' '!='
| |     |       |-ImplicitCastExpr 0x558a9992d2c0 <col:27> 'int' <LValueToRValue>
| |     |       | `-MemberExpr 0x558a9992d270 <col:27> 'int' lvalue ->status 0x558a9992b468
| |     |       |   `-CXXThisExpr 0x558a9992d260 <col:27> 'IntArg *' implicit this
| |     |       `-ImplicitCastExpr 0x558a9992d2d8 <col:37> 'int' <IntegralCast>
| |     |         `-DeclRefExpr 0x558a9992d2a0 <col:37> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x558a9992a140 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |     |-ReturnStmt 0x558a9992d3b0 <line:1074:13, col:20>
| |     | `-CXXBoolLiteralExpr 0x558a9992d3a0 <col:20> 'bool' false
| |     `-IfStmt 0x558a9992d748 <line:1075:14, line:1082:9> has_else
| |       |-BinaryOperator 0x558a9992d450 <line:1075:18, col:28> 'bool' '=='
| |       | |-ImplicitCastExpr 0x558a9992d420 <col:18> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x558a9992d3d0 <col:18> 'int' lvalue ->status 0x558a9992b468
| |       | |   `-CXXThisExpr 0x558a9992d3c0 <col:18> 'IntArg *' implicit this
| |       | `-ImplicitCastExpr 0x558a9992d438 <col:28> 'int' <IntegralCast>
| |       |   `-DeclRefExpr 0x558a9992d400 <col:28> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x558a9992a140 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |       |-CompoundStmt 0x558a9992d688 <col:42, line:1079:9>
| |       | |-CallExpr 0x558a9992d630 <line:1076:13, line:1077:45> '<dependent type>'
| |       | | |-MemberExpr 0x558a9992d480 <line:1076:13> '<bound member function type>' ->range_error 0x558a9992ba78
| |       | | | `-CXXThisExpr 0x558a9992d470 <col:13> 'IntArg *' implicit this
| |       | | |-DeclRefExpr 0x558a9992d4b0 <col:25> 'const ArgContext' lvalue ParmVar 0x558a9992b1f0 'args' 'const ArgContext &'
| |       | | |-CXXDependentScopeMemberExpr 0x558a9992d590 <col:31, col:50> '<dependent type>' lvalue ->is_signed
| |       | | `-CXXUnresolvedConstructExpr 0x558a9992d608 <line:1077:25, col:44> 'click_int_large_t':'long long' 'click_int_large_t':'long long'
| |       | |   `-DeclRefExpr 0x558a9992d5e8 <col:43> 'V' lvalue Var 0x558a9992d088 'x' 'V'
| |       | `-ReturnStmt 0x558a9992d678 <line:1078:13, col:20>
| |       |   `-CXXBoolLiteralExpr 0x558a9992d668 <col:20> 'bool' false
| |       `-CompoundStmt 0x558a9992d728 <line:1079:16, line:1082:9>
| |         |-BinaryOperator 0x558a9992d6e8 <line:1080:13, col:22> '<dependent type>' '='
| |         | |-DeclRefExpr 0x558a9992d6a8 <col:13> 'V' lvalue ParmVar 0x558a9992b178 'result' 'V &'
| |         | `-DeclRefExpr 0x558a9992d6c8 <col:22> 'V' lvalue Var 0x558a9992d088 'x' 'V'
| |         `-ReturnStmt 0x558a9992d718 <line:1081:13, col:20>
| |           `-CXXBoolLiteralExpr 0x558a9992d708 <col:20> 'bool' true
| `-CXXMethodDecl 0x558a999bb5f8 <line:1070:5, line:1083:5> line:1070:10 used parse 'bool (const String &, int &, const ArgContext &)'
|   |-TemplateArgument type 'int'
|   |-ParmVarDecl 0x558a999b8050 <col:16, col:30> col:30 used str 'const String &'
|   |-ParmVarDecl 0x558a999bb4a8 <col:35, col:38> col:38 used result 'int &'
|   |-ParmVarDecl 0x558a999bb510 <col:46, col:71> col:64 used args 'const ArgContext &'
|   `-CompoundStmt 0x558a999bc248 <col:83, line:1083:5>
|     |-DeclStmt 0x558a999bb880 <line:1071:9, col:12>
|     | `-VarDecl 0x558a999bb818 <col:9, col:11> col:11 used x 'int':'int'
|     `-IfStmt 0x558a999bc220 <line:1072:9, line:1082:9> has_else
|       |-BinaryOperator 0x558a999bbeb0 <line:1072:13, line:1073:49> 'bool' '||'
|       | |-UnaryOperator 0x558a999bbdd8 <line:1072:13, col:43> 'bool' prefix '!' cannot overflow
|       | | `-CXXMemberCallExpr 0x558a999bbda0 <col:14, col:43> 'bool'
|       | |   |-MemberExpr 0x558a999bbd58 <col:14> '<bound member function type>' ->parse_saturating 0x558a999bbc38
|       | |   | `-CXXThisExpr 0x558a999bbd48 <col:14> 'IntArg *' implicit this
|       | |   |-DeclRefExpr 0x558a999bb8f0 <col:31> 'const String' lvalue ParmVar 0x558a999b8050 'str' 'const String &'
|       | |   |-DeclRefExpr 0x558a999bb910 <col:36> 'int':'int' lvalue Var 0x558a999bb818 'x' 'int':'int'
|       | |   `-DeclRefExpr 0x558a999bb930 <col:39> 'const ArgContext' lvalue ParmVar 0x558a999bb510 'args' 'const ArgContext &'
|       | `-ParenExpr 0x558a999bbe90 <line:1073:16, col:49> 'bool'
|       |   `-BinaryOperator 0x558a999bbe70 <col:17, col:37> 'bool' '&&'
|       |     |-ImplicitCastExpr 0x558a999bbe58 <col:17> 'bool' <IntegralToBoolean>
|       |     | `-ImplicitCastExpr 0x558a999bbe40 <col:17> 'int' <LValueToRValue>
|       |     |   `-MemberExpr 0x558a9992d230 <col:17> 'int' lvalue ->status 0x558a9992b468
|       |     |     `-CXXThisExpr 0x558a9992d220 <col:17> 'IntArg *' implicit this
|       |     `-BinaryOperator 0x558a999bbe20 <col:27, col:37> 'bool' '!='
|       |       |-ImplicitCastExpr 0x558a999bbdf0 <col:27> 'int' <LValueToRValue>
|       |       | `-MemberExpr 0x558a9992d270 <col:27> 'int' lvalue ->status 0x558a9992b468
|       |       |   `-CXXThisExpr 0x558a9992d260 <col:27> 'IntArg *' implicit this
|       |       `-ImplicitCastExpr 0x558a999bbe08 <col:37> 'int' <IntegralCast>
|       |         `-DeclRefExpr 0x558a9992d2a0 <col:37> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x558a9992a140 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|       |-ReturnStmt 0x558a999bbed0 <line:1074:13, col:20>
|       | `-CXXBoolLiteralExpr 0x558a9992d3a0 <col:20> 'bool' false
|       `-IfStmt 0x558a999bc1f8 <line:1075:14, line:1082:9> has_else
|         |-BinaryOperator 0x558a999bbf10 <line:1075:18, col:28> 'bool' '=='
|         | |-ImplicitCastExpr 0x558a999bbee0 <col:18> 'int' <LValueToRValue>
|         | | `-MemberExpr 0x558a9992d3d0 <col:18> 'int' lvalue ->status 0x558a9992b468
|         | |   `-CXXThisExpr 0x558a9992d3c0 <col:18> 'IntArg *' implicit this
|         | `-ImplicitCastExpr 0x558a999bbef8 <col:28> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x558a9992d400 <col:28> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x558a9992a140 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|         |-CompoundStmt 0x558a999bc130 <col:42, line:1079:9>
|         | |-CXXMemberCallExpr 0x558a999bc0a0 <line:1076:13, line:1077:45> 'void'
|         | | |-MemberExpr 0x558a9992d480 <line:1076:13> '<bound member function type>' ->range_error 0x558a9992ba78
|         | | | `-CXXThisExpr 0x558a9992d470 <col:13> 'IntArg *' implicit this
|         | | |-DeclRefExpr 0x558a999bbf30 <col:25> 'const ArgContext' lvalue ParmVar 0x558a999bb510 'args' 'const ArgContext &'
|         | | |-ImplicitCastExpr 0x558a999bc108 <col:31, col:50> 'bool' <LValueToRValue>
|         | | | `-DeclRefExpr 0x558a999bc0d8 <col:31, col:50> 'const bool' lvalue Var 0x558a9953aa88 'is_signed' 'const bool' non_odr_use_constant
|         | | `-CXXFunctionalCastExpr 0x558a999bc078 <line:1077:25, col:44> 'click_int_large_t':'long long' functional cast to click_int_large_t <NoOp>
|         | |   `-ImplicitCastExpr 0x558a999bc060 <col:43> 'click_int_large_t':'long long' <IntegralCast> part_of_explicit_cast
|         | |     `-ImplicitCastExpr 0x558a999bc048 <col:43> 'int':'int' <LValueToRValue> part_of_explicit_cast
|         | |       `-DeclRefExpr 0x558a999bc028 <col:43> 'int':'int' lvalue Var 0x558a999bb818 'x' 'int':'int'
|         | `-ReturnStmt 0x558a999bc120 <line:1078:13, col:20>
|         |   `-CXXBoolLiteralExpr 0x558a9992d668 <col:20> 'bool' false
|         `-CompoundStmt 0x558a999bc1d8 <line:1079:16, line:1082:9>
|           |-BinaryOperator 0x558a999bc1a8 <line:1080:13, col:22> 'int':'int' lvalue '='
|           | |-DeclRefExpr 0x558a999bc150 <col:13> 'int':'int' lvalue ParmVar 0x558a999bb4a8 'result' 'int &'
|           | `-ImplicitCastExpr 0x558a999bc190 <col:22> 'int':'int' <LValueToRValue>
|           |   `-DeclRefExpr 0x558a999bc170 <col:22> 'int':'int' lvalue Var 0x558a999bb818 'x' 'int':'int'
|           `-ReturnStmt 0x558a999bc1c8 <line:1081:13, col:20>
|             `-CXXBoolLiteralExpr 0x558a9992d708 <col:20> 'bool' true
|-FieldDecl 0x558a9992b400 <line:1085:5, col:9> col:9 referenced base 'int'
|-FieldDecl 0x558a9992b468 <line:1086:5, col:9> col:9 referenced status 'int'
|-AccessSpecDecl 0x558a9992b4b8 <line:1088:3, col:12> col:3 protected
|-CXXMethodDecl 0x558a9992b770 <line:1090:5, line:1091:51> line:1090:24 span 'const char *(const char *, const char *, bool, int &)' static
| |-ParmVarDecl 0x558a9992b4f8 <col:29, col:41> col:41 begin 'const char *'
| |-ParmVarDecl 0x558a9992b578 <col:48, col:60> col:60 end 'const char *'
| |-ParmVarDecl 0x558a9992b5f0 <line:1091:29, col:34> col:34 is_signed 'bool'
| `-ParmVarDecl 0x558a9992b670 <col:45, col:50> col:50 b 'int &'
|-CXXMethodDecl 0x558a9992ba78 <line:1092:5, line:1093:45> line:1092:10 used range_error 'void (const ArgContext &, bool, click_int_large_t)'
| |-ParmVarDecl 0x558a9992b840 <col:22, col:40> col:40 args 'const ArgContext &'
| |-ParmVarDecl 0x558a9992b8b8 <col:46, col:51> col:51 is_signed 'bool'
| `-ParmVarDecl 0x558a9992b950 <line:1093:22, col:40> col:40 value 'click_int_large_t':'long long'
|-CXXConstructorDecl 0x558a9992dff8 <line:1040:7> col:7 implicit constexpr IntArg 'void (const IntArg &)' inline default trivial noexcept-unevaluated 0x558a9992dff8
| `-ParmVarDecl 0x558a9992e108 <col:7> col:7 'const IntArg &'
|-CXXConstructorDecl 0x558a9992e288 <col:7> col:7 implicit used constexpr IntArg 'void (IntArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x558a9992e398 <col:7> col:7 used 'IntArg &&'
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x558a999b52c0 <col:7> 'NumArg' 'void (NumArg &&) noexcept'
| |   `-ImplicitCastExpr 0x558a999b52a0 <col:7> 'NumArg' xvalue <UncheckedDerivedToBase (NumArg)>
| |     `-CXXStaticCastExpr 0x558a999b5270 <col:7> 'IntArg' xvalue static_cast<class IntArg &&> <NoOp>
| |       `-DeclRefExpr 0x558a999b5240 <col:7> 'IntArg' lvalue ParmVar 0x558a9992e398 '' 'IntArg &&'
| |-CXXCtorInitializer Field 0x558a9992b400 'base' 'int'
| | `-ImplicitCastExpr 0x558a999b53b8 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x558a999b5388 <col:7> 'int' xvalue .base 0x558a9992b400
| |     `-CXXStaticCastExpr 0x558a999b5358 <col:7> 'IntArg' xvalue static_cast<class IntArg &&> <NoOp>
| |       `-DeclRefExpr 0x558a999b5328 <col:7> 'IntArg' lvalue ParmVar 0x558a9992e398 '' 'IntArg &&'
| |-CXXCtorInitializer Field 0x558a9992b468 'status' 'int'
| | `-ImplicitCastExpr 0x558a999b5488 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x558a999b5458 <col:7> 'int' xvalue .status 0x558a9992b468
| |     `-CXXStaticCastExpr 0x558a999b5428 <col:7> 'IntArg' xvalue static_cast<class IntArg &&> <NoOp>
| |       `-DeclRefExpr 0x558a999b53f8 <col:7> 'IntArg' lvalue ParmVar 0x558a9992e398 '' 'IntArg &&'
| `-CompoundStmt 0x558a999b54e0 <col:7>
`-CXXDestructorDecl 0x558a999b4460 <col:7> col:7 implicit ~IntArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IntArg = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.IntArg = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558a99932910 <../dummy_inc/click/args.hh:1183:1, col:52> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable can_const_default_init
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'IntArg'
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x558a99932b68 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x558a999b4388 <col:19> col:19 implicit used DefaultArg 'void () noexcept(false)' inline default
| |-CXXCtorInitializer 'IntArg'
| | `-CXXConstructExpr 0x558a999b4900 <col:19> 'IntArg' 'void (int)'
| |   `-CXXDefaultArgExpr 0x558a999b48e0 <<invalid sloc>> 'int'
| `-CompoundStmt 0x558a999b4970 <col:19>
|-CXXConstructorDecl 0x558a999b4568 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<int> &)' inline default trivial noexcept-unevaluated 0x558a999b4568
| `-ParmVarDecl 0x558a999b4678 <col:19> col:19 'const DefaultArg<int> &'
|-CXXConstructorDecl 0x558a999b4718 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<int> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x558a999b4828 <col:19> col:19 used 'DefaultArg<int> &&'
| |-CXXCtorInitializer 'IntArg'
| | `-CXXConstructExpr 0x558a999b54f0 <col:19> 'IntArg' 'void (IntArg &&) noexcept'
| |   `-ImplicitCastExpr 0x558a999b5220 <col:19> 'IntArg' xvalue <UncheckedDerivedToBase (IntArg)>
| |     `-CXXStaticCastExpr 0x558a999b51f0 <col:19> 'DefaultArg<int>' xvalue static_cast<struct DefaultArg<int> &&> <NoOp>
| |       `-DeclRefExpr 0x558a999b51c0 <col:19> 'DefaultArg<int>' lvalue ParmVar 0x558a999b4828 '' 'DefaultArg<int> &&'
| `-CompoundStmt 0x558a999b5560 <col:19>
`-CXXDestructorDecl 0x558a999b49b0 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg = type { %class.IntArg }
  NonVirtualBaseLLVMType:%struct.DefaultArg = type { %class.IntArg }
  IsZeroInitializable:1
  BitFields:[
]>
