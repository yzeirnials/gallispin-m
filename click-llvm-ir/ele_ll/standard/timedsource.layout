
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c6a1478 prev 0x55db2c698c18 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55db2c6a1570 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55db2c6a1600 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55db2c6a1678 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55db2c6a1738 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55db2c6a1800 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55db2c6a1978 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55db2c6a18b0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55db2c6a1a20 <col:24>
| `-OptimizeNoneAttr 0x55db2c6a1a78 <col:34>
|-CXXMethodDecl 0x55db2c6a1ac0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55db2c6a1d78 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55db2c6a1b70 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55db2c6a1be8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55db2c6a1c68 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55db2c6a1e30 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55db2c6a1e68 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55db2c6a1ed0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55db2c6a1f58 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55db2c6a2278 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55db2c6a2010 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55db2c6a2088 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55db2c6a2100 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55db2c6a2180 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55db2c6a2390 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55db2c6a9d08 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55db2c6a9d08
| `-ParmVarDecl 0x55db2c6a9e18 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55db2c6a9eb8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55db2c6a9eb8
| `-ParmVarDecl 0x55db2c6a9fc8 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55db2c858018 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c452f40 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55db2c453058 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55db2c4530e8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55db2c4531b8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55db2c4532a0 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55db2c4534b8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55db2c453360 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55db2c453668 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55db2c453570 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55db2c4537b0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55db2c453720 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55db2c4538f8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55db2c453868 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55db2c453a40 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55db2c4539b0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55db2c453b08 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x55db2c453c50 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x55db2c453bc0 <col:28> col:31 'int'
|-CXXMethodDecl 0x55db2c453d18 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x55db2c453e60 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55db2c453dd0 <col:28> col:31 'int'
|-CXXMethodDecl 0x55db2c453fd8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55db2c453f18 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55db2c454120 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55db2c454090 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55db2c4541e8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55db2c4543a8 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55db2c454298 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55db2c454310 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55db2c4545f8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55db2c454468 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55db2c4544e0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55db2c4546a8 <col:86> "" ""
|-CXXMethodDecl 0x55db2c454918 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55db2c454788 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55db2c454800 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55db2c454ac8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55db2c4549d8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55db2c454c78 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55db2c454b80 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55db2c454f48 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55db2c454d30 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55db2c454da8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55db2c454e20 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55db2c455228 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55db2c455010 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55db2c455088 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55db2c455100 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55db2c4552e0 <col:115> "" ""
|-AccessSpecDecl 0x55db2c455350 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55db2c455388 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55db2c4568a0 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55db2c4568a0
| `-ParmVarDecl 0x55db2c4569a8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55db2c456a48 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55db2c456a48
| `-ParmVarDecl 0x55db2c456b58 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55db2c48c188 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55db2c67df80 <col:7>
|-CXXConstructorDecl 0x55db2c48c260 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55db2c48c260
| `-ParmVarDecl 0x55db2c48c378 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55db2c48c3e8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55db2c48c3e8
| `-ParmVarDecl 0x55db2c48c4f8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55db2c680980 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55db2c7a6ad0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x55db2c7a6ca8 prev 0x55db2c7a6ad0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55db2c7a6d38 <col:46, col:52> col:46 public
|-TypedefDecl 0x55db2c7a6d60 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55db2c12f370 'int'
|-TypedefDecl 0x55db2c7a8930 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x55db2c7a88e0 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x55db2c7a7210 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x55db2c7a7110 'type'
|     `-TemplateSpecializationType 0x55db2c7a70a0 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55db2c7a6f80 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x55db2c7a6f60 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55db2c7a6f40 <col:24> 'unsigned long' 8
|       `-RecordType 0x55db2c7a7080 'char_array<8>'
|         `-ClassTemplateSpecialization 0x55db2c7a6fa0 'char_array'
|-TypedefDecl 0x55db2c7a89e8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x55db2c7a89b0 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x55db2c7a8990 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x55db2c7a8930 'type'
|     `-ElaboratedType 0x55db2c7a88e0 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x55db2c7a7210 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x55db2c7a7110 'type'
|         `-TemplateSpecializationType 0x55db2c7a70a0 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55db2c7a6f80 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x55db2c7a6f60 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55db2c7a6f40 <col:24> 'unsigned long' 8
|           `-RecordType 0x55db2c7a7080 'char_array<8>'
|             `-ClassTemplateSpecialization 0x55db2c7a6fa0 'char_array'
|-CXXMethodDecl 0x55db2c7a8b68 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x55db2c7a8a78 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x55db2c7a8c58 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55db2c7a8d38 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55db2c7a8d38
|-CXXMethodDecl 0x55db2c7a9008 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55db2c7a8f10 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x55db2c7a9248 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55db2c7a90c0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55db2c7a9138 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55db2c7a9418 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55db2c7a9308 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55db2c7a9380 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55db2c7a9578 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55db2c7a9648 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x55db2c7a9898 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55db2c7a9708 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55db2c7a9780 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55db2c7a9af8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x55db2c7a9968 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x55db2c7a99e0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55db2c7a9cb8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55db2c7a9bc8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55db2c7a9e78 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x55db2c7a9d80 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55db2c7a9f30 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55db2c7a9fe0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55db2c7aa218 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x55db2c7aa090 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55db2c7aa108 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x55db2c7aa4b8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x55db2c7aa3c0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x55db2c7aa580 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x55db2c7aa5d0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55db2c7aa620 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55db2c803f28 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x55db2c812a68 prev 0x55db2c803f28 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55db2c813a80 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55db2c813a30 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x55db2c813a10 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x55db2c8138c0 'type'
|     `-SubstTemplateTypeParmType 0x55db2c7a66a0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55db2c3f8550 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c3f84f8 'T'
|       `-RecordType 0x55db2c7a61f0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55db2c7a6108 'sized_array_memory'
|-FieldDecl 0x55db2c813b80 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55db2c813bd0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55db2c813c08 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x55db2c812b00 'Element *' sugar
|   |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55db2c430408 'T'
|   `-PointerType 0x55db2c68a9c0 'Element *'
|     `-RecordType 0x55db2c68a740 'Element'
|       `-CXXRecord 0x55db2c694490 'Element'
|-TypedefDecl 0x55db2c813c98 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x55db2c813c60 'Element *&'
|   `-SubstTemplateTypeParmType 0x55db2c812b00 'Element *' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-PointerType 0x55db2c68a9c0 'Element *'
|       `-RecordType 0x55db2c68a740 'Element'
|         `-CXXRecord 0x55db2c694490 'Element'
|-TypedefDecl 0x55db2c813d58 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x55db2c813d20 'Element *const &'
|   `-QualType 0x55db2c812b01 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55db2c812b00 'Element *' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-PointerType 0x55db2c68a9c0 'Element *'
|         `-RecordType 0x55db2c68a740 'Element'
|           `-CXXRecord 0x55db2c694490 'Element'
|-TypedefDecl 0x55db2c813de8 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x55db2c813db0 'Element **'
|   `-SubstTemplateTypeParmType 0x55db2c812b00 'Element *' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-PointerType 0x55db2c68a9c0 'Element *'
|       `-RecordType 0x55db2c68a740 'Element'
|         `-CXXRecord 0x55db2c694490 'Element'
|-TypedefDecl 0x55db2c813ea8 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x55db2c813e70 'Element *const *'
|   `-QualType 0x55db2c812b01 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55db2c812b00 'Element *' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-PointerType 0x55db2c68a9c0 'Element *'
|         `-RecordType 0x55db2c68a740 'Element'
|           `-CXXRecord 0x55db2c694490 'Element'
|-TypedefDecl 0x55db2c814a80 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x55db2c814a30 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x55db2c814a10 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x55db2c8149a0 'type'
|     `-SubstTemplateTypeParmType 0x55db2c814760 'Element *' sugar
|       |-TemplateTypeParmType 0x55db2c403570 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c403520 'T'
|       `-PointerType 0x55db2c68a9c0 'Element *'
|         `-RecordType 0x55db2c68a740 'Element'
|           `-CXXRecord 0x55db2c694490 'Element'
|-TypedefDecl 0x55db2c814ae8 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x55db2c813d20 'Element *const &'
|   `-QualType 0x55db2c812b01 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55db2c812b00 'Element *' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-PointerType 0x55db2c68a9c0 'Element *'
|         `-RecordType 0x55db2c68a740 'Element'
|           `-CXXRecord 0x55db2c694490 'Element'
|-TypedefDecl 0x55db2c814b40 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55db2c12f370 'int'
|-TypedefDecl 0x55db2c814ba8 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x55db2c813db0 'Element **'
|   `-SubstTemplateTypeParmType 0x55db2c812b00 'Element *' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-PointerType 0x55db2c68a9c0 'Element *'
|       `-RecordType 0x55db2c68a740 'Element'
|         `-CXXRecord 0x55db2c694490 'Element'
|-TypedefDecl 0x55db2c814c10 <line:131:5, col:22> col:22 const_iterator 'Element *const *'
| `-PointerType 0x55db2c813e70 'Element *const *'
|   `-QualType 0x55db2c812b01 'Element *const' const
|     `-SubstTemplateTypeParmType 0x55db2c812b00 'Element *' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-PointerType 0x55db2c68a9c0 'Element *'
|         `-RecordType 0x55db2c68a740 'Element'
|           `-CXXRecord 0x55db2c694490 'Element'
|-EnumDecl 0x55db2c814c68 <line:134:5> col:5
| `-EnumConstantDecl 0x55db2c814d60 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55db2c814d40 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55db2c431ae8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55db2c431ac0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55db2c431aa0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55db2c814de8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55db2c815078 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c814ea0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c814f40 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x55db2c815308 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x55db2c8151f0 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x55db2c8155c8 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x55db2c8154b0 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x55db2c8158e0 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x55db2c8157c0 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x55db2c815bf0 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x55db2c815ad0 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x55db2c815ee0 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c815d28 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c815da0 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55db2c816038 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x55db2c816118 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c816170 <col:30> Inherited
|-CXXMethodDecl 0x55db2c8161b8 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x55db2c816268 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c8162c0 <col:30> Inherited
|-CXXMethodDecl 0x55db2c816388 <line:152:5, col:63> col:55 begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55db2c816438 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c816490 <col:30> Inherited
|-CXXMethodDecl 0x55db2c8164d8 <line:153:5, col:61> col:55 end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55db2c816588 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c8165e0 <col:30> Inherited
|-CXXMethodDecl 0x55db2c816628 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55db2c8166d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c816730 <col:30> Inherited
|-CXXMethodDecl 0x55db2c816778 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x55db2c816828 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c816880 <col:30> Inherited
|-CXXMethodDecl 0x55db2c8168a8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55db2c816958 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55db2c816a08 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55db2c816bc8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c816ab8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c816b30 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55db2c816d18 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c816c88 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c816ec8 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x55db2c816dd0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55db2c816f80 <col:20>
| `-OptimizeNoneAttr 0x55db2c816fd8 <col:30>
|-CXXMethodDecl 0x55db2c8170f8 <line:164:5, col:73> col:49 operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55db2c817000 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55db2c8171b0 <col:20>
| `-OptimizeNoneAttr 0x55db2c817208 <col:30>
|-CXXMethodDecl 0x55db2c8172c0 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c817230 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c817408 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55db2c817378 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c817538 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x55db2c817668 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x55db2c817738 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x55db2c817808 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x55db2c817948 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c8178b8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c817a90 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55db2c817a00 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c817bd8 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55db2c817b48 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55db2c817c90 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55db2c817d90 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55db2c817d00 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55db2c817e48 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55db2c817f08 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x55db2c818008 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x55db2c818188 <line:180:5, col:48> col:17 push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x55db2c8180c8 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x55db2c818948 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55db2c818240 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x55db2c8188a8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x55db2c8187a8 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x55db2c818a28 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55db2c818b78 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x55db2c818ae8 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55db2c818c30 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55db2c81ca40 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c818cf0 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x55db2c818d68 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x55db2c81cc08 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x55db2c81cb10 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x55db2c81ce58 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x55db2c81ccd0 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x55db2c81cd48 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x55db2c81cf18 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55db2c81d178 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x55db2c81d080 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x55db2c81d248 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55db2c81d248

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c468330 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55db2c468448 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55db2c4684e8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55db2c468548 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55db2c4685a8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55db2c468658 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c468960 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55db2c468a78 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55db2c468b20 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55db2c468b88 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55db2c468c18 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55db2c46ecb0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55db2c46f0e8 <col:12>
|-CXXConstructorDecl 0x55db2c46edb8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55db2c46eec8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55db2c468b20 'data' 'const char *'
| | `-ImplicitCastExpr 0x55db2c471670 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55db2c471640 <col:12> 'const char *const' lvalue .data 0x55db2c468b20
| |     `-DeclRefExpr 0x55db2c471620 <col:12> 'const String::rep_t' lvalue ParmVar 0x55db2c46eec8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55db2c468b88 'length' 'int'
| | `-ImplicitCastExpr 0x55db2c471700 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55db2c4716d0 <col:12> 'const int' lvalue .length 0x55db2c468b88
| |     `-DeclRefExpr 0x55db2c4716b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55db2c46eec8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55db2c468c18 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55db2c471790 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55db2c471760 <col:12> 'String::memo_t *const' lvalue .memo 0x55db2c468c18
| |     `-DeclRefExpr 0x55db2c471740 <col:12> 'const String::rep_t' lvalue ParmVar 0x55db2c46eec8 '' 'const String::rep_t &'
| `-CompoundStmt 0x55db2c4717e8 <col:12>
|-CXXConstructorDecl 0x55db2c46ef68 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55db2c46ef68
| `-ParmVarDecl 0x55db2c46f078 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55db2c4745d0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55db2c47ffe8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55db2c4800f8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55db2c480610 <col:12>
|   |-BinaryOperator 0x55db2c480428 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55db2c4803e0 <col:12> 'const char *' lvalue ->data 0x55db2c468b20
|   | | `-CXXThisExpr 0x55db2c4803d0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55db2c480410 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55db2c4803a0 <col:12> 'const char *const' lvalue .data 0x55db2c468b20
|   |     `-DeclRefExpr 0x55db2c480380 <col:12> 'const String::rep_t' lvalue ParmVar 0x55db2c4800f8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55db2c4804f0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55db2c4804a8 <col:12> 'int' lvalue ->length 0x55db2c468b88
|   | | `-CXXThisExpr 0x55db2c480498 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55db2c4804d8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55db2c480468 <col:12> 'const int' lvalue .length 0x55db2c468b88
|   |     `-DeclRefExpr 0x55db2c480448 <col:12> 'const String::rep_t' lvalue ParmVar 0x55db2c4800f8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55db2c4805b8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55db2c480570 <col:12> 'String::memo_t *' lvalue ->memo 0x55db2c468c18
|   | | `-CXXThisExpr 0x55db2c480560 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55db2c4805a0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55db2c480530 <col:12> 'String::memo_t *const' lvalue .memo 0x55db2c468c18
|   |     `-DeclRefExpr 0x55db2c480510 <col:12> 'const String::rep_t' lvalue ParmVar 0x55db2c4800f8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55db2c480600 <col:12>
|     `-UnaryOperator 0x55db2c4805e8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55db2c4805d8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55db2c480168 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55db2c480168
  `-ParmVarDecl 0x55db2c480278 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c45f8a0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55db2c45f9b8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55db2c45fa48 <col:16, col:22> col:16 public
|-TypedefDecl 0x55db2c45fa88 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55db2c12fdc0 'const char *'
|   `-QualType 0x55db2c12f311 'const char' const
|     `-BuiltinType 0x55db2c12f310 'char'
|-TypedefDecl 0x55db2c45fb10 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55db2c45fae0 'String::const_iterator' sugar
|   |-Typedef 0x55db2c45fa88 'const_iterator'
|   `-PointerType 0x55db2c12fdc0 'const char *'
|     `-QualType 0x55db2c12f311 'const char' const
|       `-BuiltinType 0x55db2c12f310 'char'
|-TypedefDecl 0x55db2c45fc80 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55db2c45fbf0 'int (String::*)() const'
|   |-RecordType 0x55db2c45f930 'String'
|   | `-CXXRecord 0x55db2c45f8a0 'String'
|   `-ParenType 0x55db2c45fb90 'int () const' sugar
|     `-FunctionProtoType 0x55db2c433720 'int () const' const cdecl
|       `-BuiltinType 0x55db2c12f370 'int'
|-TypedefDecl 0x55db2c45fce8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55db2c2880e0 'int64_t' sugar
|   |-Typedef 0x55db2c1982d0 'int64_t'
|   `-TypedefType 0x55db2c1714d0 '__int64_t' sugar
|     |-Typedef 0x55db2c1710a8 '__int64_t'
|     `-BuiltinType 0x55db2c12f390 'long'
|-TypedefDecl 0x55db2c45fd50 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55db2c288000 'uint64_t' sugar
|   |-Typedef 0x55db2c198470 'uint64_t'
|   `-TypedefType 0x55db2c171560 '__uint64_t' sugar
|     |-Typedef 0x55db2c171118 '__uint64_t'
|     `-BuiltinType 0x55db2c12f430 'unsigned long'
|-TypedefDecl 0x55db2c45fde0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55db2c45fdb0 'String::intmax_t' sugar
|   |-Typedef 0x55db2c45fce8 'intmax_t'
|   `-TypedefType 0x55db2c2880e0 'int64_t' sugar
|     |-Typedef 0x55db2c1982d0 'int64_t'
|     `-TypedefType 0x55db2c1714d0 '__int64_t' sugar
|       |-Typedef 0x55db2c1710a8 '__int64_t'
|       `-BuiltinType 0x55db2c12f390 'long'
|-TypedefDecl 0x55db2c45fe70 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55db2c45fe40 'String::uintmax_t' sugar
|   |-Typedef 0x55db2c45fd50 'uintmax_t'
|   `-TypedefType 0x55db2c288000 'uint64_t' sugar
|     |-Typedef 0x55db2c198470 'uint64_t'
|     `-TypedefType 0x55db2c171560 '__uint64_t' sugar
|       |-Typedef 0x55db2c171118 '__uint64_t'
|       `-BuiltinType 0x55db2c12f430 'unsigned long'
|-CXXConstructorDecl 0x55db2c45ff30 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55db2c4600d8 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55db2c460018 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55db2c460288 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55db2c4601c8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55db2c4603e0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55db2c460350 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55db2c4605f8 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55db2c4604a8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55db2c460528 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55db2c460818 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55db2c4606c8 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55db2c460748 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55db2c460a38 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55db2c4608e8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55db2c460968 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55db2c460c58 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55db2c460b08 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55db2c460b88 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55db2c460de8 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x55db2c460d20 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55db2c460f68 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55db2c460ea8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55db2c4610f8 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55db2c461030 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55db2c461250 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55db2c4611c0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55db2c4613a8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55db2c461318 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55db2c461500 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55db2c461470 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55db2c461688 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55db2c4615c8 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55db2c461818 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55db2c461750 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55db2c4619a8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55db2c4618e0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55db2c461b38 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55db2c461a70 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55db2c461c30 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55db2c461d58 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55db2c461ed8 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55db2c461e10 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55db2c462028 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55db2c461f98 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55db2c4620e0 <col:63> "" ""
|-CXXMethodDecl 0x55db2c462228 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55db2c462168 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55db2c462438 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55db2c4622e8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55db2c462368 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55db2c462658 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55db2c462500 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55db2c462580 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55db2c462938 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55db2c462718 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55db2c462798 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55db2c46e780 <col:55> 'int' 10
| `-ParmVarDecl 0x55db2c462810 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55db2c46e7a0 <col:76> 'bool' true
|-CXXMethodDecl 0x55db2c462c18 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55db2c462a00 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55db2c462a80 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55db2c46e7b0 <col:56> 'int' 10
| `-ParmVarDecl 0x55db2c462af8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55db2c46e7d0 <col:77> 'bool' true
|-CXXMethodDecl 0x55db2c462d20 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55db2c462de8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55db2c462eb0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55db2c462f50 <col:20>
| `-OptimizeNoneAttr 0x55db2c462fa8 <col:30>
|-CXXConversionDecl 0x55db2c463098 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55db2c463168 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55db2c463228 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55db2c463318 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55db2c4633d8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55db2c463558 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55db2c463490 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55db2c4636a8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55db2c463618 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55db2c463798 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55db2c463858 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55db2c463aa8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55db2c463910 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55db2c463990 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55db2c463d08 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55db2c463b70 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55db2c463bf0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55db2c463dd8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55db2c463fe8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55db2c463e90 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55db2c463f10 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55db2c464208 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55db2c4640b0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55db2c464130 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55db2c464398 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55db2c4642d0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55db2c464488 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55db2c4645f8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55db2c464538 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55db2c464808 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55db2c4646b8 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55db2c464738 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55db2c464a20 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55db2c4648c8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55db2c464940 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55db2c464bb0 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55db2c464ae0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55db2c464dd0 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55db2c464c70 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55db2c464cf0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55db2c464f20 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55db2c464e90 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55db2c4650f8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55db2c464fe0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55db2c465060 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55db2c465248 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55db2c4651b8 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55db2c465460 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55db2c465300 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55db2c465380 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55db2c46e7e0 <col:39> 'int' 0
|-CXXMethodDecl 0x55db2c465680 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55db2c465520 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55db2c4655a0 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55db2c46e800 <col:48> 'int' 0
|-CXXMethodDecl 0x55db2c465860 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55db2c465740 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55db2c4657c0 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55db2c46e820 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55db2c465930 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55db2c4659f0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55db2c465ab0 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55db2c465b70 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55db2c465c30 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55db2c465dd8 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55db2c465ce0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55db2c465f58 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55db2c465e90 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55db2c466130 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55db2c466018 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55db2c4662a8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55db2c4661e8 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55db2c4663f0 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55db2c466360 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55db2c466540 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55db2c4664b0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55db2c466718 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55db2c466600 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55db2c466680 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55db2c4668f8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55db2c4667e0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55db2c466860 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55db2c466a48 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55db2c4669b8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55db2c466c58 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55db2c466b08 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55db2c466b88 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55db2c466db8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55db2c466d20 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55db2c466f10 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55db2c466e78 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55db2c466fb8 <col:57> "" ""
|-CXXMethodDecl 0x55db2c4670c8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55db2c467038 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55db2c467218 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55db2c467188 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55db2c467398 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55db2c4672d0 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55db2c467460 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55db2c467520 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55db2c4675e0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55db2c467680 <col:49> "" ""
|-CXXMethodDecl 0x55db2c467710 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55db2c4677d0 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55db2c4678c0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55db2c467988 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55db2c467a48 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55db2c467b08 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55db2c467c00 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55db2c467cc8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55db2c467d90 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55db2c467f68 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55db2c467e48 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55db2c467ec8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55db2c468190 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55db2c468030 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55db2c4680b0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55db2c4682a0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55db2c468308 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55db2c468330 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55db2c468448 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55db2c4684e8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55db2c468548 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55db2c4685a8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55db2c468658 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55db2c4686c0 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55db2c4688f8 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55db2c468948 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55db2c4688d8 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55db2c4687e8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55db2c468790 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55db2c4687d0 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55db2c4687b0 <col:32> 'int' 8
|-CXXRecordDecl 0x55db2c468960 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55db2c468a78 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55db2c468b20 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55db2c468b88 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55db2c468c18 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55db2c46ecb0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55db2c46f0e8 <col:12>
| |-CXXConstructorDecl 0x55db2c46edb8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55db2c46eec8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55db2c468b20 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55db2c471670 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55db2c471640 <col:12> 'const char *const' lvalue .data 0x55db2c468b20
| | |     `-DeclRefExpr 0x55db2c471620 <col:12> 'const String::rep_t' lvalue ParmVar 0x55db2c46eec8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55db2c468b88 'length' 'int'
| | | `-ImplicitCastExpr 0x55db2c471700 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55db2c4716d0 <col:12> 'const int' lvalue .length 0x55db2c468b88
| | |     `-DeclRefExpr 0x55db2c4716b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55db2c46eec8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55db2c468c18 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55db2c471790 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55db2c471760 <col:12> 'String::memo_t *const' lvalue .memo 0x55db2c468c18
| | |     `-DeclRefExpr 0x55db2c471740 <col:12> 'const String::rep_t' lvalue ParmVar 0x55db2c46eec8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55db2c4717e8 <col:12>
| |-CXXConstructorDecl 0x55db2c46ef68 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55db2c46ef68
| | `-ParmVarDecl 0x55db2c46f078 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55db2c4745d0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55db2c47ffe8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55db2c4800f8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55db2c480610 <col:12>
| |   |-BinaryOperator 0x55db2c480428 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55db2c4803e0 <col:12> 'const char *' lvalue ->data 0x55db2c468b20
| |   | | `-CXXThisExpr 0x55db2c4803d0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55db2c480410 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55db2c4803a0 <col:12> 'const char *const' lvalue .data 0x55db2c468b20
| |   |     `-DeclRefExpr 0x55db2c480380 <col:12> 'const String::rep_t' lvalue ParmVar 0x55db2c4800f8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55db2c4804f0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55db2c4804a8 <col:12> 'int' lvalue ->length 0x55db2c468b88
| |   | | `-CXXThisExpr 0x55db2c480498 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55db2c4804d8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55db2c480468 <col:12> 'const int' lvalue .length 0x55db2c468b88
| |   |     `-DeclRefExpr 0x55db2c480448 <col:12> 'const String::rep_t' lvalue ParmVar 0x55db2c4800f8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55db2c4805b8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55db2c480570 <col:12> 'String::memo_t *' lvalue ->memo 0x55db2c468c18
| |   | | `-CXXThisExpr 0x55db2c480560 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55db2c4805a0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55db2c480530 <col:12> 'String::memo_t *const' lvalue .memo 0x55db2c468c18
| |   |     `-DeclRefExpr 0x55db2c480510 <col:12> 'const String::rep_t' lvalue ParmVar 0x55db2c4800f8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55db2c480600 <col:12>
| |     `-UnaryOperator 0x55db2c4805e8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55db2c4805d8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55db2c480168 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55db2c480168
|   `-ParmVarDecl 0x55db2c480278 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55db2c468c90 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55db2c468ed8 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55db2c468cf8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55db2c468d78 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55db2c468df0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55db2c46ec70 <col:79, line:261:5>
|   |-BinaryOperator 0x55db2c46e8e8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55db2c46e880 <col:2, col:5> 'const char *' lvalue .data 0x55db2c468b20
|   | | `-MemberExpr 0x55db2c46e850 <col:2> 'String::rep_t' lvalue ->_r 0x55db2c468c90
|   | |   `-CXXThisExpr 0x55db2c46e840 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55db2c46e8d0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55db2c46e8b0 <col:12> 'const char *' lvalue ParmVar 0x55db2c468cf8 'data' 'const char *'
|   |-BinaryOperator 0x55db2c46e9b0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55db2c46e948 <col:2, col:5> 'int' lvalue .length 0x55db2c468b88
|   | | `-MemberExpr 0x55db2c46e918 <col:2> 'String::rep_t' lvalue ->_r 0x55db2c468c90
|   | |   `-CXXThisExpr 0x55db2c46e908 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55db2c46e998 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55db2c46e978 <col:14> 'int' lvalue ParmVar 0x55db2c468d78 'length' 'int'
|   `-IfStmt 0x55db2c46ec58 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55db2c46ead0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55db2c46eab8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55db2c46ea98 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55db2c46ea78 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55db2c46ea10 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55db2c468c18
|     |       | `-MemberExpr 0x55db2c46e9e0 <col:7> 'String::rep_t' lvalue ->_r 0x55db2c468c90
|     |       |   `-CXXThisExpr 0x55db2c46e9d0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55db2c46ea60 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55db2c46ea40 <col:17> 'String::memo_t *' lvalue ParmVar 0x55db2c468df0 'memo' 'String::memo_t *'
|     `-CallExpr 0x55db2c46ec30 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55db2c46ec18 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55db2c46eb20 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55db2c457908 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55db2c46eb88 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55db2c4684e8
|         `-ImplicitCastExpr 0x55db2c46eb70 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55db2c46eb50 <col:27> 'String::memo_t *' lvalue ParmVar 0x55db2c468df0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55db2c469188 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55db2c468fa8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55db2c469028 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55db2c4690a0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55db2c468c90 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55db2c46f0f8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55db2c46f288 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55db2c46f1f0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55db2c46f160 <col:2> '<bound member function type>' ->assign_memo 0x55db2c468ed8
|     | `-ImplicitCastExpr 0x55db2c46f228 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55db2c46f150 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55db2c46f240 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55db2c46f190 <col:14> 'const char *' lvalue ParmVar 0x55db2c468fa8 'data' 'const char *'
|     |-ImplicitCastExpr 0x55db2c46f258 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55db2c46f1b0 <col:20> 'int' lvalue ParmVar 0x55db2c469028 'length' 'int'
|     `-ImplicitCastExpr 0x55db2c46f270 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55db2c46f1d0 <col:28> 'String::memo_t *' lvalue ParmVar 0x55db2c4690a0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55db2c469318 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55db2c469258 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55db2c46f4e0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55db2c46f460 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55db2c46f2b0 <col:2> '<bound member function type>' ->assign_memo 0x55db2c468ed8
|     | `-CXXThisExpr 0x55db2c46f2a0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55db2c46f498 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55db2c46f330 <col:14, col:19> 'const char *' lvalue .data 0x55db2c468b20
|     |   `-MemberExpr 0x55db2c46f300 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55db2c468c90
|     |     `-DeclRefExpr 0x55db2c46f2e0 <col:14> 'const String' lvalue ParmVar 0x55db2c469258 'x' 'const String &'
|     |-ImplicitCastExpr 0x55db2c46f4b0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55db2c46f3b0 <col:25, col:30> 'int' lvalue .length 0x55db2c468b88
|     |   `-MemberExpr 0x55db2c46f380 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55db2c468c90
|     |     `-DeclRefExpr 0x55db2c46f360 <col:25> 'const String' lvalue ParmVar 0x55db2c469258 'x' 'const String &'
|     `-ImplicitCastExpr 0x55db2c46f4c8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55db2c46f430 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55db2c468c18
|         `-MemberExpr 0x55db2c46f400 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55db2c468c90
|           `-DeclRefExpr 0x55db2c46f3e0 <col:38> 'const String' lvalue ParmVar 0x55db2c469258 'x' 'const String &'
|-CXXMethodDecl 0x55db2c4693e0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55db2c46fea0 <col:31, line:278:5>
|   `-IfStmt 0x55db2c46fe88 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55db2c46f580 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55db2c46f568 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55db2c46f538 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55db2c468c18
|     |     `-MemberExpr 0x55db2c46f508 <col:6> 'String::rep_t' lvalue ->_r 0x55db2c468c90
|     |       `-CXXThisExpr 0x55db2c46f4f8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55db2c46fe60 <col:15, line:277:2>
|       |-ParenExpr 0x55db2c46fa30 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55db2c46fa00 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55db2c46f690 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55db2c46f678 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55db2c46f660 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55db2c46f620 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55db2c4684e8
|       |   |       `-ImplicitCastExpr 0x55db2c46f608 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55db2c46f5d8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55db2c468c18
|       |   |           `-MemberExpr 0x55db2c46f5a8 <col:27> 'String::rep_t' lvalue ->_r 0x55db2c468c90
|       |   |             `-CXXThisExpr 0x55db2c46f598 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55db2c46f6f0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55db2c46f6d0 <col:54> 'int' 0
|       |   `-CallExpr 0x55db2c46f960 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55db2c46f948 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55db2c46f8c8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55db2c1ce940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55db2c46f9a0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55db2c46f7d8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55db2c46f9b8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55db2c46f808 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55db2c46f9d0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55db2c46f840 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55db2c46f9e8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55db2c46f8b0 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55db2c46f898 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55db2c46f860 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55db2c46fd80 <line:274:6, line:275:22>
|       | |-CallExpr 0x55db2c46fc40 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55db2c46fc28 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55db2c46fba0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55db2c458d50 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55db2c46fb70 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55db2c4684e8
|       | |   `-ImplicitCastExpr 0x55db2c46fb58 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55db2c46fb28 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55db2c468c18
|       | |       `-MemberExpr 0x55db2c46faf8 <col:40> 'String::rep_t' lvalue ->_r 0x55db2c468c90
|       | |         `-CXXThisExpr 0x55db2c46fae8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55db2c46fd40 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55db2c46fd28 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55db2c46fc68 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55db2c46dbc0 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55db2c46fd68 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55db2c46fcc8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55db2c468c18
|       |       `-MemberExpr 0x55db2c46fc98 <col:15> 'String::rep_t' lvalue ->_r 0x55db2c468c90
|       |         `-CXXThisExpr 0x55db2c46fc88 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55db2c46fe40 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55db2c46fdd8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55db2c468c18
|         | `-MemberExpr 0x55db2c46fda8 <col:6> 'String::rep_t' lvalue ->_r 0x55db2c468c90
|         |   `-CXXThisExpr 0x55db2c46fd98 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55db2c46fe28 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55db2c46fe08 <col:16> 'int' 0
|-CXXMethodDecl 0x55db2c469678 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55db2c469498 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55db2c469518 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55db2c469590 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55db2c469750 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55db2c4699a0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55db2c469808 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55db2c469888 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55db2c469900 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55db2c469b88 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55db2c469a70 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55db2c469af0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55db2c469c88 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55db2c46ff78 <col:41, line:286:5>
|   `-ReturnStmt 0x55db2c46ff68 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55db2c46ff38 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55db2c46ff00 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55db2c46fee8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55db2c46fec8 <col:46> 'int' 1
|-CXXMethodDecl 0x55db2c469f28 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55db2c469d40 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55db2c469dc0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55db2c469e40 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55db2c46dbc0 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55db2c469ff0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55db2c46dc90 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55db2c46de60 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55db2c46dd48 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55db2c46ddc8 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55db2c46df20 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55db2c46dfe8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55db2c46e0e8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55db2c46e160 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55db2c46e1d8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55db2c46e240 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55db2c46e340 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55db2c46e390 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55db2c46e320 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55db2c46e300 <col:22> 'int' 14
|-CXXMethodDecl 0x55db2c46e5a8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55db2c46e3c0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55db2c46e440 <col:38> col:41 'int'
| `-ParmVarDecl 0x55db2c46e4c0 <col:43> col:46 'int'
|-FriendDecl 0x55db2c46e6b0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55db2c46e740 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55db2c6f9420 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x55db2c6f95f8 prev 0x55db2c6f9420 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55db2c6f9688 <col:46, col:52> col:46 public
|-TypedefDecl 0x55db2c6f96b0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55db2c12f370 'int'
|-TypedefDecl 0x55db2c6fb010 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x55db2c6fafc0 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x55db2c6fafa0 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x55db2c6f98c8 'type'
|     `-SubstTemplateTypeParmType 0x55db2c6f9890 'String' sugar
|       |-TemplateTypeParmType 0x55db2c423140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c4230f0 'T'
|       `-RecordType 0x55db2c45f930 'String'
|         `-CXXRecord 0x55db2c45f8a0 'String'
|-TypedefDecl 0x55db2c6fb0c8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x55db2c6fb090 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x55db2c6fb070 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55db2c6fb010 'type'
|     `-ElaboratedType 0x55db2c6fafc0 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x55db2c6fafa0 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x55db2c6f98c8 'type'
|         `-SubstTemplateTypeParmType 0x55db2c6f9890 'String' sugar
|           |-TemplateTypeParmType 0x55db2c423140 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55db2c4230f0 'T'
|           `-RecordType 0x55db2c45f930 'String'
|             `-CXXRecord 0x55db2c45f8a0 'String'
|-CXXMethodDecl 0x55db2c6fb248 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x55db2c6fb158 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x55db2c6fb338 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55db2c6fb418 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55db2c6fb418
|-CXXMethodDecl 0x55db2c6fb6e8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55db2c6fb5f0 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x55db2c6fb928 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55db2c6fb7a0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55db2c6fb818 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55db2c6fbaf8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55db2c6fb9e8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55db2c6fba60 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55db2c6fbc58 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55db2c6fbd28 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x55db2c6fbf78 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55db2c6fbde8 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55db2c6fbe60 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55db2c6fc1d8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x55db2c6fc048 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x55db2c6fc0c0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55db2c6fc398 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55db2c6fc2a8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55db2c6fc558 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x55db2c6fc460 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55db2c6fc610 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55db2c6fc6c0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55db2c6fc8f8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x55db2c6fc770 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55db2c6fc7e8 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x55db2c6fcb98 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x55db2c6fcaa0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x55db2c6fcc60 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x55db2c6fccb0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55db2c6fcd00 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55db2c6970d0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55db2c6f7e88 prev 0x55db2c6970d0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55db2c6f9390 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x55db2c6f9340 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x55db2c6f9320 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x55db2c6f91d0 'type'
|     `-SubstTemplateTypeParmType 0x55db2c6f9060 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x55db2c3f8cd0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55db2c3f8c78 'F'
|       `-RecordType 0x55db2c6f8cc0 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x55db2c6f8be0 'typed_array_memory'
|-FieldDecl 0x55db2c6fcd50 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x55db2c6fcda0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55db2c6fcdd8 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x55db2c6f7f20 'String' sugar
|   |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55db2c430408 'T'
|   `-RecordType 0x55db2c45f930 'String'
|     `-CXXRecord 0x55db2c45f8a0 'String'
|-TypedefDecl 0x55db2c6fce68 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x55db2c6fce30 'String &'
|   `-SubstTemplateTypeParmType 0x55db2c6f7f20 'String' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-RecordType 0x55db2c45f930 'String'
|       `-CXXRecord 0x55db2c45f8a0 'String'
|-TypedefDecl 0x55db2c6fcef8 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x55db2c6fcec0 'const String &'
|   `-QualType 0x55db2c6f7f21 'const String' const
|     `-SubstTemplateTypeParmType 0x55db2c6f7f20 'String' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-RecordType 0x55db2c45f930 'String'
|         `-CXXRecord 0x55db2c45f8a0 'String'
|-TypedefDecl 0x55db2c6fcf88 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x55db2c6fcf50 'String *'
|   `-SubstTemplateTypeParmType 0x55db2c6f7f20 'String' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-RecordType 0x55db2c45f930 'String'
|       `-CXXRecord 0x55db2c45f8a0 'String'
|-TypedefDecl 0x55db2c6fd018 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x55db2c6fcfe0 'const String *'
|   `-QualType 0x55db2c6f7f21 'const String' const
|     `-SubstTemplateTypeParmType 0x55db2c6f7f20 'String' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-RecordType 0x55db2c45f930 'String'
|         `-CXXRecord 0x55db2c45f8a0 'String'
|-TypedefDecl 0x55db2c6fdc70 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x55db2c6fdc20 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x55db2c6fdc00 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x55db2c6fdb38 'type'
|     `-LValueReferenceType 0x55db2c6fdb00 'const String &'
|       `-QualType 0x55db2c6fd8a1 'const String' const
|         `-SubstTemplateTypeParmType 0x55db2c6fd8a0 'String' sugar
|           |-TemplateTypeParmType 0x55db2c402e40 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55db2c402de8 'T'
|           `-RecordType 0x55db2c45f930 'String'
|             `-CXXRecord 0x55db2c45f8a0 'String'
|-TypedefDecl 0x55db2c6fdcd8 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x55db2c6fcec0 'const String &'
|   `-QualType 0x55db2c6f7f21 'const String' const
|     `-SubstTemplateTypeParmType 0x55db2c6f7f20 'String' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-RecordType 0x55db2c45f930 'String'
|         `-CXXRecord 0x55db2c45f8a0 'String'
|-TypedefDecl 0x55db2c6fdd30 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55db2c12f370 'int'
|-TypedefDecl 0x55db2c6fdd98 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x55db2c6fcf50 'String *'
|   `-SubstTemplateTypeParmType 0x55db2c6f7f20 'String' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-RecordType 0x55db2c45f930 'String'
|       `-CXXRecord 0x55db2c45f8a0 'String'
|-TypedefDecl 0x55db2c6fde00 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x55db2c6fcfe0 'const String *'
|   `-QualType 0x55db2c6f7f21 'const String' const
|     `-SubstTemplateTypeParmType 0x55db2c6f7f20 'String' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-RecordType 0x55db2c45f930 'String'
|         `-CXXRecord 0x55db2c45f8a0 'String'
|-EnumDecl 0x55db2c6fde58 <line:134:5> col:5
| `-EnumConstantDecl 0x55db2c6fdf50 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55db2c6fdf30 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55db2c431ae8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55db2c431ac0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55db2c431aa0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55db2c6fdfd8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55db2c6fe280 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c6fe090 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c6fe130 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x55db2c6fe518 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x55db2c6fe400 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x55db2c6fe7d8 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x55db2c6fe6c0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x55db2c6feaf0 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x55db2c6fe9d0 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x55db2c6fee00 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x55db2c6fece0 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x55db2c6ff0f0 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c6fef38 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c6fefb0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55db2c6ff218 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55db2c6ff2c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c6ff320 <col:30> Inherited
|-CXXMethodDecl 0x55db2c6ff368 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x55db2c6ff418 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c6ff470 <col:30> Inherited
|-CXXMethodDecl 0x55db2c6ff538 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55db2c6ff5e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c6ff640 <col:30> Inherited
|-CXXMethodDecl 0x55db2c6ff688 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55db2c6ff738 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c6ff790 <col:30> Inherited
|-CXXMethodDecl 0x55db2c6ff7d8 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55db2c6ff888 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c6ff8e0 <col:30> Inherited
|-CXXMethodDecl 0x55db2c6ff928 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x55db2c6ff9d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c6ffa30 <col:30> Inherited
|-CXXMethodDecl 0x55db2c6ffa58 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55db2c6ffb08 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55db2c6ffbb8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55db2c6ffd78 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c6ffc68 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c6ffce0 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55db2c6ffec8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c6ffe38 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c700078 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x55db2c6fff80 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55db2c700130 <col:20>
| `-OptimizeNoneAttr 0x55db2c700188 <col:30>
|-CXXMethodDecl 0x55db2c7002a8 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x55db2c7001b0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55db2c700360 <col:20>
| `-OptimizeNoneAttr 0x55db2c7003b8 <col:30>
|-CXXMethodDecl 0x55db2c700470 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c7003e0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c7005b8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55db2c700528 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c7006e8 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x55db2c7007e8 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x55db2c7008b8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x55db2c700988 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x55db2c700ac8 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c700a38 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c700c10 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55db2c700b80 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c700d58 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x55db2c700cc8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55db2c700e10 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55db2c700f10 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55db2c700e80 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55db2c700fc8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55db2c701088 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x55db2c701188 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x55db2c701308 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55db2c701248 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x55db2c701ac8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55db2c7013c0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x55db2c701a28 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x55db2c701928 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x55db2c701ba8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55db2c701cf8 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x55db2c701c68 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55db2c701db0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55db2c701ff8 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c701e70 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55db2c701ee8 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x55db2c702188 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x55db2c7020c8 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55db2c702398 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x55db2c702250 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x55db2c7022c8 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x55db2c702458 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55db2c7026b8 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x55db2c7025c0 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x55db2c702788 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55db2c702788

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55db2c73a250 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x55db2c73a428 prev 0x55db2c73a250 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55db2c73a4b8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55db2c73a4e0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55db2c12f370 'int'
|-TypedefDecl 0x55db2c73c0b0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x55db2c73c060 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x55db2c73a990 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x55db2c73a890 'type'
|     `-TemplateSpecializationType 0x55db2c73a820 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55db2c73a700 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x55db2c73a6e0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55db2c73a6c0 <col:24> 'unsigned long' 4
|       `-RecordType 0x55db2c73a800 'char_array<4>'
|         `-ClassTemplateSpecialization 0x55db2c73a720 'char_array'
|-TypedefDecl 0x55db2c73c168 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x55db2c73c130 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x55db2c73c110 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x55db2c73c0b0 'type'
|     `-ElaboratedType 0x55db2c73c060 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x55db2c73a990 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x55db2c73a890 'type'
|         `-TemplateSpecializationType 0x55db2c73a820 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55db2c73a700 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x55db2c73a6e0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55db2c73a6c0 <col:24> 'unsigned long' 4
|           `-RecordType 0x55db2c73a800 'char_array<4>'
|             `-ClassTemplateSpecialization 0x55db2c73a720 'char_array'
|-CXXMethodDecl 0x55db2c73c2e8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x55db2c73c1f8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x55db2c73c3d8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55db2c73c4b8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55db2c73c4b8
|-CXXMethodDecl 0x55db2c73c788 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55db2c73c690 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x55db2c73c9c8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55db2c73c840 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55db2c73c8b8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55db2c73cb98 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55db2c73ca88 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55db2c73cb00 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55db2c73ccf8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55db2c73cdc8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x55db2c73d018 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55db2c73ce88 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55db2c73cf00 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55db2c73d278 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x55db2c73d0e8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x55db2c73d160 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55db2c73d438 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55db2c73d348 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55db2c73d5f8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x55db2c73d500 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55db2c73d6b0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55db2c73d760 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55db2c73d998 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x55db2c73d810 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55db2c73d888 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x55db2c73dc38 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x55db2c73db40 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x55db2c73dd00 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x55db2c73dd50 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55db2c73dda0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55db2c81d590 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x55db2c81d798 prev 0x55db2c81d590 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55db2c81e7b0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55db2c81e760 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x55db2c81e740 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x55db2c81e5f0 'type'
|     `-SubstTemplateTypeParmType 0x55db2c739e20 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55db2c3f8550 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c3f84f8 'T'
|       `-RecordType 0x55db2c739970 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55db2c739888 'sized_array_memory'
|-FieldDecl 0x55db2c81e8b0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55db2c81e900 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55db2c81e938 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x55db2c81d830 'unsigned int' sugar
|   |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55db2c430408 'T'
|   `-BuiltinType 0x55db2c12f410 'unsigned int'
|-TypedefDecl 0x55db2c81e9c8 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x55db2c81e990 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x55db2c81d830 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-BuiltinType 0x55db2c12f410 'unsigned int'
|-TypedefDecl 0x55db2c81ea88 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x55db2c81ea50 'const unsigned int &'
|   `-QualType 0x55db2c81d831 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55db2c81d830 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-BuiltinType 0x55db2c12f410 'unsigned int'
|-TypedefDecl 0x55db2c81eb18 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x55db2c81eae0 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55db2c81d830 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-BuiltinType 0x55db2c12f410 'unsigned int'
|-TypedefDecl 0x55db2c81eba8 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x55db2c81eb70 'const unsigned int *'
|   `-QualType 0x55db2c81d831 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55db2c81d830 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-BuiltinType 0x55db2c12f410 'unsigned int'
|-TypedefDecl 0x55db2c81f790 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x55db2c81f740 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x55db2c81f720 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x55db2c81f6b0 'type'
|     `-SubstTemplateTypeParmType 0x55db2c81f470 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55db2c403570 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c403520 'T'
|       `-BuiltinType 0x55db2c12f410 'unsigned int'
|-TypedefDecl 0x55db2c81f7f8 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x55db2c81ea50 'const unsigned int &'
|   `-QualType 0x55db2c81d831 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55db2c81d830 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-BuiltinType 0x55db2c12f410 'unsigned int'
|-TypedefDecl 0x55db2c81f850 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55db2c12f370 'int'
|-TypedefDecl 0x55db2c81f8b8 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x55db2c81eae0 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x55db2c81d830 'unsigned int' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-BuiltinType 0x55db2c12f410 'unsigned int'
|-TypedefDecl 0x55db2c81f920 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x55db2c81eb70 'const unsigned int *'
|   `-QualType 0x55db2c81d831 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x55db2c81d830 'unsigned int' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-BuiltinType 0x55db2c12f410 'unsigned int'
|-EnumDecl 0x55db2c81f978 <line:134:5> col:5
| `-EnumConstantDecl 0x55db2c81fa70 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55db2c81fa50 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55db2c431ae8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55db2c431ac0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55db2c431aa0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55db2c81faf8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55db2c81fd48 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c81fbb0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c81fc50 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x55db2c820008 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55db2c81fef0 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x55db2c8202c8 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55db2c8201b0 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55db2c820610 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55db2c8204f0 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x55db2c820920 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x55db2c820800 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x55db2c820c10 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c820a58 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c820ad0 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55db2c820d38 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55db2c820e18 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c820e70 <col:30> Inherited
|-CXXMethodDecl 0x55db2c820eb8 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x55db2c820f68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c820fc0 <col:30> Inherited
|-CXXMethodDecl 0x55db2c821058 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55db2c821108 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c821160 <col:30> Inherited
|-CXXMethodDecl 0x55db2c8211a8 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55db2c821258 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c8212b0 <col:30> Inherited
|-CXXMethodDecl 0x55db2c8212f8 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55db2c8213a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c821400 <col:30> Inherited
|-CXXMethodDecl 0x55db2c821448 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x55db2c8214f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c821550 <col:30> Inherited
|-CXXMethodDecl 0x55db2c821578 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55db2c821628 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55db2c8216d8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55db2c821898 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c821788 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c821800 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55db2c8219e8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c821958 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c821b98 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x55db2c821aa0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55db2c821c50 <col:20>
| `-OptimizeNoneAttr 0x55db2c821ca8 <col:30>
|-CXXMethodDecl 0x55db2c821dc8 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x55db2c821cd0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55db2c821e80 <col:20>
| `-OptimizeNoneAttr 0x55db2c821ed8 <col:30>
|-CXXMethodDecl 0x55db2c821f90 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c821f00 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c8220d8 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55db2c822048 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c822208 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x55db2c822338 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55db2c822408 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x55db2c8224d8 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x55db2c822618 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c822588 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c822760 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55db2c8226d0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c8228a8 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55db2c822818 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55db2c822960 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55db2c822a60 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55db2c8229d0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55db2c822b18 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55db2c822bd8 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x55db2c822cd8 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x55db2c822e58 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55db2c822d98 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x55db2c823618 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55db2c822f10 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x55db2c823578 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x55db2c823478 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x55db2c8236f8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55db2c823848 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x55db2c8237b8 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55db2c823900 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55db2c823b48 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c8239c0 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55db2c823a38 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x55db2c823d08 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x55db2c823c18 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55db2c823f58 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x55db2c823dd0 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x55db2c823e48 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x55db2c824018 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55db2c824278 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x55db2c824180 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x55db2c824348 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55db2c824348

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55db2c738c58 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x55db2c738e68 prev 0x55db2c738c58 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55db2c73a1c0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x55db2c73a170 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x55db2c73a150 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x55db2c73a000 'type'
|     `-SubstTemplateTypeParmType 0x55db2c739e20 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x55db2c3f8550 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c3f84f8 'T'
|       `-RecordType 0x55db2c739970 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x55db2c739888 'sized_array_memory'
|-FieldDecl 0x55db2c73ddf0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x55db2c73de40 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55db2c73de78 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x55db2c738f00 'int' sugar
|   |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55db2c430408 'T'
|   `-BuiltinType 0x55db2c12f370 'int'
|-TypedefDecl 0x55db2c73df08 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x55db2c73ded0 'int &'
|   `-SubstTemplateTypeParmType 0x55db2c738f00 'int' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-BuiltinType 0x55db2c12f370 'int'
|-TypedefDecl 0x55db2c73dfc8 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x55db2c73df90 'const int &'
|   `-QualType 0x55db2c738f01 'const int' const
|     `-SubstTemplateTypeParmType 0x55db2c738f00 'int' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-BuiltinType 0x55db2c12f370 'int'
|-TypedefDecl 0x55db2c73e058 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x55db2c73e020 'int *'
|   `-SubstTemplateTypeParmType 0x55db2c738f00 'int' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-BuiltinType 0x55db2c12f370 'int'
|-TypedefDecl 0x55db2c73e0e8 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x55db2c73e0b0 'const int *'
|   `-QualType 0x55db2c738f01 'const int' const
|     `-SubstTemplateTypeParmType 0x55db2c738f00 'int' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-BuiltinType 0x55db2c12f370 'int'
|-TypedefDecl 0x55db2c73ecd0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x55db2c73ec80 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x55db2c73ec60 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x55db2c73ebf0 'type'
|     `-SubstTemplateTypeParmType 0x55db2c73e9b0 'int' sugar
|       |-TemplateTypeParmType 0x55db2c403570 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c403520 'T'
|       `-BuiltinType 0x55db2c12f370 'int'
|-TypedefDecl 0x55db2c73ed38 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x55db2c73df90 'const int &'
|   `-QualType 0x55db2c738f01 'const int' const
|     `-SubstTemplateTypeParmType 0x55db2c738f00 'int' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-BuiltinType 0x55db2c12f370 'int'
|-TypedefDecl 0x55db2c73ed90 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55db2c12f370 'int'
|-TypedefDecl 0x55db2c73edf8 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x55db2c73e020 'int *'
|   `-SubstTemplateTypeParmType 0x55db2c738f00 'int' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-BuiltinType 0x55db2c12f370 'int'
|-TypedefDecl 0x55db2c73ee60 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x55db2c73e0b0 'const int *'
|   `-QualType 0x55db2c738f01 'const int' const
|     `-SubstTemplateTypeParmType 0x55db2c738f00 'int' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-BuiltinType 0x55db2c12f370 'int'
|-EnumDecl 0x55db2c73eeb8 <line:134:5> col:5
| `-EnumConstantDecl 0x55db2c73efb0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55db2c73ef90 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55db2c431ae8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55db2c431ac0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55db2c431aa0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55db2c73f038 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55db2c73f288 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c73f0f0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c73f190 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x55db2c73f548 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x55db2c73f430 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x55db2c73f808 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x55db2c73f6f0 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x55db2c73fb50 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x55db2c73fa30 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x55db2c742e20 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x55db2c73fd40 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x55db2c743110 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c742f58 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c742fd0 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55db2c743238 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55db2c743318 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c743370 <col:30> Inherited
|-CXXMethodDecl 0x55db2c7433b8 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x55db2c743468 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c7434c0 <col:30> Inherited
|-CXXMethodDecl 0x55db2c743588 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55db2c743638 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c743690 <col:30> Inherited
|-CXXMethodDecl 0x55db2c7436d8 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55db2c743788 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c7437e0 <col:30> Inherited
|-CXXMethodDecl 0x55db2c743828 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55db2c7438d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c743930 <col:30> Inherited
|-CXXMethodDecl 0x55db2c743978 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x55db2c743a28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c743a80 <col:30> Inherited
|-CXXMethodDecl 0x55db2c743aa8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55db2c743b58 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55db2c743c08 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55db2c743dc8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c743cb8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c743d30 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55db2c743f18 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c743e88 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c7440c8 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x55db2c743fd0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55db2c744180 <col:20>
| `-OptimizeNoneAttr 0x55db2c7441d8 <col:30>
|-CXXMethodDecl 0x55db2c7442f8 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x55db2c744200 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55db2c7443b0 <col:20>
| `-OptimizeNoneAttr 0x55db2c744408 <col:30>
|-CXXMethodDecl 0x55db2c7444c0 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c744430 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c744608 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55db2c744578 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c744738 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x55db2c744868 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x55db2c744938 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x55db2c744a08 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x55db2c744b48 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c744ab8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c744c90 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55db2c744c00 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c744dd8 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x55db2c744d48 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55db2c744e90 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55db2c744f90 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55db2c744f00 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55db2c745048 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55db2c745108 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x55db2c745208 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x55db2c745388 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55db2c7452c8 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x55db2c745b48 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55db2c745440 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x55db2c745aa8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x55db2c7459a8 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x55db2c745c28 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55db2c745d78 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x55db2c745ce8 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55db2c745e30 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55db2c746078 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c745ef0 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55db2c745f68 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x55db2c746238 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x55db2c746148 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55db2c746488 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x55db2c746300 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x55db2c746378 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x55db2c746548 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x55db2c7467a8 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x55db2c7466b0 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x55db2c746878 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55db2c746878

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c824590 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55db2c8246a8 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x55db2c824748 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x55db2c8247a8 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x55db2c824840 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55db2c824840
| `-ParmVarDecl 0x55db2c824958 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x55db2c826f40 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55db2c826f40
| `-ParmVarDecl 0x55db2c827058 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x55db2c8270f8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55db2c8270f8
| `-ParmVarDecl 0x55db2c827208 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55db2c827278 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55db2c827278
| `-ParmVarDecl 0x55db2c827388 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x55db2c827410 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x55db2c827410

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55db2c8289a0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x55db2c828b78 prev 0x55db2c8289a0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55db2c828c08 <col:46, col:52> col:46 public
|-TypedefDecl 0x55db2c828c30 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55db2c12f370 'int'
|-TypedefDecl 0x55db2c82a5f0 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x55db2c82a5a0 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x55db2c82a580 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x55db2c828e48 'type'
|     `-SubstTemplateTypeParmType 0x55db2c828e10 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55db2c423140 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c4230f0 'T'
|       `-RecordType 0x55db2c824620 'Router::element_landmark_t'
|         `-CXXRecord 0x55db2c824590 'element_landmark_t'
|-TypedefDecl 0x55db2c82a6a8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x55db2c82a670 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x55db2c82a650 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x55db2c82a5f0 'type'
|     `-ElaboratedType 0x55db2c82a5a0 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x55db2c82a580 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x55db2c828e48 'type'
|         `-SubstTemplateTypeParmType 0x55db2c828e10 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x55db2c423140 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55db2c4230f0 'T'
|           `-RecordType 0x55db2c824620 'Router::element_landmark_t'
|             `-CXXRecord 0x55db2c824590 'element_landmark_t'
|-CXXMethodDecl 0x55db2c82a828 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x55db2c82a738 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x55db2c82a918 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55db2c82a9f8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55db2c82a9f8
|-CXXMethodDecl 0x55db2c82acc8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x55db2c82abd0 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x55db2c82af08 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55db2c82ad80 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55db2c82adf8 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55db2c82b0d8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55db2c82afc8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55db2c82b040 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55db2c82b238 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x55db2c82b308 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x55db2c82b558 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55db2c82b3c8 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x55db2c82b440 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55db2c82b7b8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x55db2c82b628 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x55db2c82b6a0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55db2c82b978 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x55db2c82b888 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55db2c82bb38 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x55db2c82ba40 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55db2c82bbf0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55db2c82bca0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55db2c82bed8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x55db2c82bd50 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55db2c82bdc8 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x55db2c82c178 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x55db2c82c080 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x55db2c82c240 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x55db2c82c290 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55db2c82c2e0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55db2c827500 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x55db2c827708 prev 0x55db2c827500 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55db2c828910 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x55db2c8288c0 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x55db2c8288a0 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x55db2c828750 'type'
|     `-SubstTemplateTypeParmType 0x55db2c8285e0 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x55db2c3f8cd0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x55db2c3f8c78 'F'
|       `-RecordType 0x55db2c828240 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x55db2c828160 'typed_array_memory'
|-FieldDecl 0x55db2c82c330 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x55db2c82c380 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55db2c82c3b8 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x55db2c8277a0 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55db2c430408 'T'
|   `-RecordType 0x55db2c824620 'Router::element_landmark_t'
|     `-CXXRecord 0x55db2c824590 'element_landmark_t'
|-TypedefDecl 0x55db2c82c448 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x55db2c82c410 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x55db2c8277a0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-RecordType 0x55db2c824620 'Router::element_landmark_t'
|       `-CXXRecord 0x55db2c824590 'element_landmark_t'
|-TypedefDecl 0x55db2c82c4d8 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x55db2c82c4a0 'const Router::element_landmark_t &'
|   `-QualType 0x55db2c8277a1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55db2c8277a0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-RecordType 0x55db2c824620 'Router::element_landmark_t'
|         `-CXXRecord 0x55db2c824590 'element_landmark_t'
|-TypedefDecl 0x55db2c82c568 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x55db2c82c530 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x55db2c8277a0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-RecordType 0x55db2c824620 'Router::element_landmark_t'
|       `-CXXRecord 0x55db2c824590 'element_landmark_t'
|-TypedefDecl 0x55db2c82c5f8 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x55db2c82c5c0 'const Router::element_landmark_t *'
|   `-QualType 0x55db2c8277a1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55db2c8277a0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-RecordType 0x55db2c824620 'Router::element_landmark_t'
|         `-CXXRecord 0x55db2c824590 'element_landmark_t'
|-TypedefDecl 0x55db2c82d250 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x55db2c82d200 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x55db2c82d1e0 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x55db2c82d118 'type'
|     `-LValueReferenceType 0x55db2c82d0e0 'const Router::element_landmark_t &'
|       `-QualType 0x55db2c82ce81 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x55db2c82ce80 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x55db2c402e40 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55db2c402de8 'T'
|           `-RecordType 0x55db2c824620 'Router::element_landmark_t'
|             `-CXXRecord 0x55db2c824590 'element_landmark_t'
|-TypedefDecl 0x55db2c82d2b8 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x55db2c82c4a0 'const Router::element_landmark_t &'
|   `-QualType 0x55db2c8277a1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55db2c8277a0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-RecordType 0x55db2c824620 'Router::element_landmark_t'
|         `-CXXRecord 0x55db2c824590 'element_landmark_t'
|-TypedefDecl 0x55db2c82d310 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55db2c12f370 'int'
|-TypedefDecl 0x55db2c82d378 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x55db2c82c530 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x55db2c8277a0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-RecordType 0x55db2c824620 'Router::element_landmark_t'
|       `-CXXRecord 0x55db2c824590 'element_landmark_t'
|-TypedefDecl 0x55db2c82d3e0 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x55db2c82c5c0 'const Router::element_landmark_t *'
|   `-QualType 0x55db2c8277a1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x55db2c8277a0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-RecordType 0x55db2c824620 'Router::element_landmark_t'
|         `-CXXRecord 0x55db2c824590 'element_landmark_t'
|-EnumDecl 0x55db2c82d438 <line:134:5> col:5
| `-EnumConstantDecl 0x55db2c82d530 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55db2c82d510 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55db2c431ae8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55db2c431ac0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55db2c431aa0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55db2c82d5b8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55db2c82d848 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c82d670 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c82d710 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x55db2c82db08 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55db2c82d9f0 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x55db2c82ddc8 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x55db2c82dcb0 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x55db2c82e110 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55db2c82dff0 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x55db2c82e420 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x55db2c82e300 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x55db2c82e710 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c82e558 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c82e5d0 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55db2c82e838 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x55db2c82e918 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c82e970 <col:30> Inherited
|-CXXMethodDecl 0x55db2c82e9b8 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x55db2c82ea68 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c82eac0 <col:30> Inherited
|-CXXMethodDecl 0x55db2c82eb88 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55db2c82ec38 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c82ec90 <col:30> Inherited
|-CXXMethodDecl 0x55db2c82ecd8 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55db2c82ed88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c82ede0 <col:30> Inherited
|-CXXMethodDecl 0x55db2c82ee28 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55db2c82eed8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c8303f0 <col:30> Inherited
|-CXXMethodDecl 0x55db2c830438 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x55db2c8304e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c830540 <col:30> Inherited
|-CXXMethodDecl 0x55db2c830568 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55db2c830618 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55db2c8306c8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55db2c830888 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c830778 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c8307f0 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55db2c8309d8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c830948 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c830b88 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x55db2c830a90 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55db2c830c40 <col:20>
| `-OptimizeNoneAttr 0x55db2c830c98 <col:30>
|-CXXMethodDecl 0x55db2c830db8 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x55db2c830cc0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55db2c830e70 <col:20>
| `-OptimizeNoneAttr 0x55db2c830ec8 <col:30>
|-CXXMethodDecl 0x55db2c830f80 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c830ef0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c8310c8 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55db2c831038 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c8311f8 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x55db2c831328 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x55db2c8313f8 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x55db2c8314c8 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x55db2c831608 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c831578 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c831750 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55db2c8316c0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c831898 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x55db2c831808 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55db2c831950 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55db2c831a50 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55db2c8319c0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55db2c831b08 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55db2c831bc8 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x55db2c831cc8 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x55db2c831e48 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x55db2c831d88 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x55db2c8325d8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55db2c831f00 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x55db2c832538 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x55db2c832438 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x55db2c8326b8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55db2c832808 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x55db2c832778 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55db2c8328c0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55db2c832b08 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c832980 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x55db2c8329f8 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x55db2c832c98 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x55db2c832bd8 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x55db2c832ea8 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x55db2c832d60 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x55db2c832dd8 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x55db2c832f68 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55db2c8331c8 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x55db2c8330d0 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x55db2c833298 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55db2c833298

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55db2c79bdf0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x55db2c79bfc8 prev 0x55db2c79bdf0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55db2c79c058 <col:46, col:52> col:46 public
|-TypedefDecl 0x55db2c79c080 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55db2c12f370 'int'
|-TypedefDecl 0x55db2c79dc50 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x55db2c79dc00 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x55db2c79c530 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x55db2c79c430 'type'
|     `-TemplateSpecializationType 0x55db2c79c3c0 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55db2c79c2a0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x55db2c79c280 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55db2c79c260 <col:24> 'unsigned long' 16
|       `-RecordType 0x55db2c79c3a0 'char_array<16>'
|         `-ClassTemplateSpecialization 0x55db2c79c2c0 'char_array'
|-TypedefDecl 0x55db2c79dd08 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x55db2c79dcd0 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x55db2c79dcb0 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x55db2c79dc50 'type'
|     `-ElaboratedType 0x55db2c79dc00 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x55db2c79c530 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x55db2c79c430 'type'
|         `-TemplateSpecializationType 0x55db2c79c3c0 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55db2c79c2a0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x55db2c79c280 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55db2c79c260 <col:24> 'unsigned long' 16
|           `-RecordType 0x55db2c79c3a0 'char_array<16>'
|             `-ClassTemplateSpecialization 0x55db2c79c2c0 'char_array'
|-CXXMethodDecl 0x55db2c79de88 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x55db2c79dd98 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x55db2c79df78 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55db2c79e058 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55db2c79e058
|-CXXMethodDecl 0x55db2c79e328 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55db2c79e230 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x55db2c79e568 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55db2c79e3e0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55db2c79e458 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55db2c79e738 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55db2c79e628 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55db2c79e6a0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55db2c79e898 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55db2c79e968 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x55db2c79ebb8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55db2c79ea28 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55db2c79eaa0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55db2c79ee18 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x55db2c79ec88 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x55db2c79ed00 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55db2c79efd8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55db2c79eee8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55db2c79f198 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x55db2c79f0a0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55db2c79f250 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55db2c79f300 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55db2c79f538 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x55db2c79f3b0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55db2c79f428 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x55db2c79f7d8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x55db2c79f6e0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x55db2c79f8a0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x55db2c79f8f0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55db2c79f940 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55db2c8339b0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x55db2c833bb8 prev 0x55db2c8339b0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55db2c834c80 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55db2c834c30 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x55db2c834c10 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x55db2c834ac0 'type'
|     `-SubstTemplateTypeParmType 0x55db2c79b9c0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55db2c3f8550 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c3f84f8 'T'
|       `-RecordType 0x55db2c79b510 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55db2c79b428 'sized_array_memory'
|-FieldDecl 0x55db2c834d80 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55db2c834dd0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55db2c834e08 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x55db2c833c50 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55db2c430408 'T'
|   `-RecordType 0x55db2c811100 'Router::Connection'
|     `-CXXRecord 0x55db2c811068 'Connection'
|-TypedefDecl 0x55db2c834ec8 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x55db2c834e90 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x55db2c833c50 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-RecordType 0x55db2c811100 'Router::Connection'
|       `-CXXRecord 0x55db2c811068 'Connection'
|-TypedefDecl 0x55db2c834f58 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x55db2c834f20 'const Router::Connection &'
|   `-QualType 0x55db2c833c51 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55db2c833c50 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-RecordType 0x55db2c811100 'Router::Connection'
|         `-CXXRecord 0x55db2c811068 'Connection'
|-TypedefDecl 0x55db2c834fe8 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x55db2c834fb0 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x55db2c833c50 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-RecordType 0x55db2c811100 'Router::Connection'
|       `-CXXRecord 0x55db2c811068 'Connection'
|-TypedefDecl 0x55db2c835078 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x55db2c835040 'const Router::Connection *'
|   `-QualType 0x55db2c833c51 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55db2c833c50 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-RecordType 0x55db2c811100 'Router::Connection'
|         `-CXXRecord 0x55db2c811068 'Connection'
|-TypedefDecl 0x55db2c835cd0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x55db2c835c80 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x55db2c835c60 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x55db2c835b98 'type'
|     `-LValueReferenceType 0x55db2c835b60 'const Router::Connection &'
|       `-QualType 0x55db2c835901 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x55db2c835900 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x55db2c402e40 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55db2c402de8 'T'
|           `-RecordType 0x55db2c811100 'Router::Connection'
|             `-CXXRecord 0x55db2c811068 'Connection'
|-TypedefDecl 0x55db2c835d38 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x55db2c834f20 'const Router::Connection &'
|   `-QualType 0x55db2c833c51 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55db2c833c50 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-RecordType 0x55db2c811100 'Router::Connection'
|         `-CXXRecord 0x55db2c811068 'Connection'
|-TypedefDecl 0x55db2c835d90 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55db2c12f370 'int'
|-TypedefDecl 0x55db2c835df8 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x55db2c834fb0 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x55db2c833c50 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-RecordType 0x55db2c811100 'Router::Connection'
|       `-CXXRecord 0x55db2c811068 'Connection'
|-TypedefDecl 0x55db2c835e60 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x55db2c835040 'const Router::Connection *'
|   `-QualType 0x55db2c833c51 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x55db2c833c50 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-RecordType 0x55db2c811100 'Router::Connection'
|         `-CXXRecord 0x55db2c811068 'Connection'
|-EnumDecl 0x55db2c835eb8 <line:134:5> col:5
| `-EnumConstantDecl 0x55db2c835fb0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55db2c835f90 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55db2c431ae8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55db2c431ac0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55db2c431aa0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55db2c836038 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55db2c8362c8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c8360f0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c836190 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x55db2c836588 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55db2c836470 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x55db2c836848 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x55db2c836730 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x55db2c836b90 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55db2c836a70 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x55db2c836ea0 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x55db2c836d80 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x55db2c837190 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c836fd8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c837050 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55db2c8372e8 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x55db2c8373c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c837420 <col:30> Inherited
|-CXXMethodDecl 0x55db2c837468 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x55db2c837518 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c837570 <col:30> Inherited
|-CXXMethodDecl 0x55db2c837638 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55db2c8376e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c837740 <col:30> Inherited
|-CXXMethodDecl 0x55db2c837788 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55db2c837838 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c837890 <col:30> Inherited
|-CXXMethodDecl 0x55db2c8378d8 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55db2c837988 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c8379e0 <col:30> Inherited
|-CXXMethodDecl 0x55db2c837a28 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x55db2c837ad8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c837b30 <col:30> Inherited
|-CXXMethodDecl 0x55db2c837b58 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55db2c837c08 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55db2c837cb8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55db2c837e78 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c837d68 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c837de0 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55db2c837fc8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c837f38 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c838178 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x55db2c838080 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55db2c838230 <col:20>
| `-OptimizeNoneAttr 0x55db2c838288 <col:30>
|-CXXMethodDecl 0x55db2c83a990 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x55db2c8382b0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55db2c83aa48 <col:20>
| `-OptimizeNoneAttr 0x55db2c83aaa0 <col:30>
|-CXXMethodDecl 0x55db2c83ab58 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c83aac8 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c83aca0 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55db2c83ac10 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c83add8 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x55db2c83af08 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x55db2c83afd8 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x55db2c83b0a8 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x55db2c83b1e8 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c83b158 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c83b330 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55db2c83b2a0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c83b478 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x55db2c83b3e8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55db2c83b530 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55db2c83b630 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55db2c83b5a0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55db2c83b6e8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55db2c83b7a8 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x55db2c83b8a8 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x55db2c83ba58 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x55db2c83b968 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x55db2c83c218 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55db2c83bb10 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x55db2c83c178 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x55db2c83c078 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x55db2c83c2f8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55db2c83c448 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x55db2c83c3b8 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55db2c83c500 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55db2c83c748 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c83c5c0 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x55db2c83c638 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x55db2c83c908 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x55db2c83c818 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x55db2c83cb58 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x55db2c83c9d0 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x55db2c83ca48 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x55db2c83cc18 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55db2c83ce78 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x55db2c83cd80 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x55db2c83cf48 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55db2c83cf48

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c778bd8 prev 0x55db2c70d2f8 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55db2c778cd0 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55db2c778d60 <col:22, col:28> col:22 public
|-EnumDecl 0x55db2c778d88 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55db2c778ea8 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55db2c778e88 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55db2c778e70 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55db2c778e50 <col:14> 'int' 999
| |-EnumConstantDecl 0x55db2c778f50 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55db2c778f30 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55db2c778f18 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55db2c778ef8 <col:14> 'int' 1
| |-EnumConstantDecl 0x55db2c778fe0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55db2c778fc0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55db2c778fa0 <col:17> 'int' 0
| |-EnumConstantDecl 0x55db2c779070 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55db2c779050 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55db2c779030 <col:13> 'int' 1
| |-EnumConstantDecl 0x55db2c779100 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55db2c7790e0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55db2c7790c0 <col:16> 'int' 2
| |-EnumConstantDecl 0x55db2c779190 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55db2c779170 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55db2c779150 <col:13> 'int' 3
| |-EnumConstantDecl 0x55db2c779220 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55db2c779200 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55db2c7791e0 <col:15> 'int' 4
| |-EnumConstantDecl 0x55db2c7792b0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55db2c779290 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55db2c779270 <col:14> 'int' 5
| |-EnumConstantDecl 0x55db2c779340 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55db2c779320 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55db2c779300 <col:12> 'int' 6
| `-EnumConstantDecl 0x55db2c7793d0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55db2c7793b0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55db2c779390 <col:13> 'int' 7
|-VarDecl 0x55db2c779440 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55db2c7794c8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55db2c779550 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55db2c7795d8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55db2c779660 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55db2c7796e8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55db2c779770 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55db2c7797f8 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55db2c779880 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55db2c779908 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55db2c779990 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55db2c779a90 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55db2c77ed78 '_nerrors' 'int'
| | `-IntegerLiteral 0x55db2c77f508 <line:128:13> 'int' 0
| `-CompoundStmt 0x55db2c77f578 <col:16, line:129:5>
|-CXXDestructorDecl 0x55db2c779b80 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55db2c77f588 <col:29, line:132:5>
|-CXXMethodDecl 0x55db2c779d38 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55db2c779c70 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55db2c779e00 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55db2c779ee8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55db2c77f5e0 <col:44, line:161:5>
|   `-ReturnStmt 0x55db2c77f5d0 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55db2c77f5b8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55db2c77f598 <col:9> 'ErrorHandler *' lvalue Var 0x55db2c77edd8 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55db2c77a028 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55db2c779f98 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55db2c77a0f0 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55db2c77f640 <col:43, line:173:5>
|   `-ReturnStmt 0x55db2c77f630 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55db2c77f618 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55db2c77f5f8 <col:9> 'ErrorHandler *' lvalue Var 0x55db2c77ee50 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55db2c77a1a8 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55db2c77a228 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55db2c77a338 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55db2c77a2a8 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55db2c77a488 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55db2c77a3f8 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55db2c77a5e0 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55db2c77a548 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55db2c77a738 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x55db2c77a6a0 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55db2c77a890 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55db2c77a7f8 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55db2c77aaa0 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55db2c77a948 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55db2c77a9c8 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55db2c77ac78 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55db2c77ab60 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55db2c77abe0 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55db2c77ae98 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55db2c77ad38 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55db2c77adb8 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55db2c77b078 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55db2c77af58 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55db2c77afd8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55db2c77b258 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55db2c77b138 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55db2c77b1b8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55db2c77b3e0 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55db2c77b318 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55db2c77b5b0 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55db2c77b498 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55db2c77b510 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55db2c77f898 <col:57, line:234:5>
|   `-ReturnStmt 0x55db2c77f888 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55db2c77f870 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55db2c77f818 <col:9, col:41> 'int'
|         |-MemberExpr 0x55db2c77f7e8 <col:9> '<bound member function type>' ->xmessage 0x55db2c77b3e0
|         | `-CXXThisExpr 0x55db2c77f7d8 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55db2c77f858 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55db2c77f840 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55db2c77f7b8 <col:18, col:40> 'String' (CXXTemporary 0x55db2c77f7b8)
|               `-CallExpr 0x55db2c77f780 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55db2c77f768 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55db2c77f6e0 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55db2c77d5a8 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55db2c77f700 <col:31> 'const String' lvalue ParmVar 0x55db2c77b510 'str' 'const String &'
|                 `-DeclRefExpr 0x55db2c77f720 <col:36> 'const String' lvalue ParmVar 0x55db2c77b498 'anno' 'const String &'
|-CXXMethodDecl 0x55db2c77b890 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55db2c77b670 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55db2c77b6f0 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55db2c77b768 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55db2c77fb28 <col:68, line:243:5>
|   `-ReturnStmt 0x55db2c77fb18 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55db2c77fb00 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55db2c77faa0 <col:9, col:41> 'int'
|         |-MemberExpr 0x55db2c77fa70 <col:9> '<bound member function type>' ->xmessage 0x55db2c77b5b0
|         | `-CXXThisExpr 0x55db2c77fa60 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55db2c77f938 <col:18> 'const String' lvalue ParmVar 0x55db2c77b670 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55db2c77fae8 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55db2c77fad0 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55db2c77fa40 <col:24, col:40> 'String' (CXXTemporary 0x55db2c77fa40)
|               `-CXXMemberCallExpr 0x55db2c77f9d8 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55db2c77f968 <col:24> '<bound member function type>' ->vformat 0x55db2c77ca70
|                 | `-CXXThisExpr 0x55db2c77f958 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55db2c77fa08 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55db2c77f998 <col:32> 'const char *' lvalue ParmVar 0x55db2c77b6f0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55db2c77fa20 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55db2c77f9b8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55db2c77b768 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55db2c77bb30 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55db2c77b958 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55db2c77b9d0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55db2c77ba48 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55db2c77fe68 <col:23, line:254:5>
|   `-ReturnStmt 0x55db2c77fe58 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55db2c77fe40 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55db2c77fde0 <col:9, col:71> 'int'
|         |-MemberExpr 0x55db2c77fdb0 <col:9> '<bound member function type>' ->xmessage 0x55db2c77b5b0
|         | `-CXXThisExpr 0x55db2c77fda0 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55db2c77fe28 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55db2c77fe10 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55db2c77fd60 <col:18, col:65> 'String' (CXXTemporary 0x55db2c77fd60)
|         |     `-CallExpr 0x55db2c77fcf8 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55db2c77fce0 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55db2c77fbc8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55db2c77d5a8 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55db2c77fbe8 <col:31> 'const String' lvalue ParmVar 0x55db2c77b9d0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55db2c77fd40 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55db2c77fd28 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55db2c77fcc0 <col:37, col:64> 'String' (CXXTemporary 0x55db2c77fcc0)
|         |             `-CallExpr 0x55db2c77fc90 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55db2c77fc78 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55db2c77fc08 <col:37> 'String (const String &)' lvalue CXXMethod 0x55db2c77dbf8 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55db2c77fc28 <col:56> 'const String' lvalue ParmVar 0x55db2c77b958 'landmark' 'const String &'
|         `-DeclRefExpr 0x55db2c77fd80 <col:68> 'const String' lvalue ParmVar 0x55db2c77ba48 'str' 'const String &'
|-CXXMethodDecl 0x55db2c77beb0 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55db2c77bbf8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55db2c77bc70 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55db2c77bcf0 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55db2c77bd68 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55db2c780120 <col:34, line:267:5>
|   `-ReturnStmt 0x55db2c780110 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55db2c7800f8 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55db2c780090 <col:9, col:51> 'int'
|         |-MemberExpr 0x55db2c780060 <col:9> '<bound member function type>' ->xmessage 0x55db2c77bb30
|         | `-CXXThisExpr 0x55db2c780050 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55db2c77ff08 <col:18> 'const String' lvalue ParmVar 0x55db2c77bbf8 'landmark' 'const String &'
|         |-DeclRefExpr 0x55db2c77ff28 <col:28> 'const String' lvalue ParmVar 0x55db2c77bc70 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55db2c7800e0 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55db2c7800c8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55db2c780030 <col:34, col:50> 'String' (CXXTemporary 0x55db2c780030)
|               `-CXXMemberCallExpr 0x55db2c77ffc8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55db2c77ff58 <col:34> '<bound member function type>' ->vformat 0x55db2c77ca70
|                 | `-CXXThisExpr 0x55db2c77ff48 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55db2c77fff8 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55db2c77ff88 <col:42> 'const char *' lvalue ParmVar 0x55db2c77bcf0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55db2c780010 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55db2c77ffa8 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55db2c77bd68 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55db2c77bfc0 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x55db2c7801a0 <col:25, line:288:5>
|   `-ReturnStmt 0x55db2c780190 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55db2c780178 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55db2c780148 <col:9> 'const int' lvalue ->_nerrors 0x55db2c77ed78
|         `-CXXThisExpr 0x55db2c780138 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55db2c77c1d0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55db2c77c078 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55db2c77c0f8 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55db2c77c4b8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55db2c77c298 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55db2c77c318 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55db2c77c390 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55db2c77c650 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55db2c77c588 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55db2c77c898 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55db2c77c710 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55db2c77c788 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55db2c780400 <col:58, line:357:5>
|   `-ReturnStmt 0x55db2c7803f0 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55db2c7803d8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55db2c7803a8 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55db2c780390 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55db2c780370 <col:9, col:29> 'String' (CXXTemporary 0x55db2c780370)
|             `-CallExpr 0x55db2c780300 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55db2c7802e8 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55db2c780268 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55db2c77c4b8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55db2c780208 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55db2c780338 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55db2c780228 <col:21> 'const char *' lvalue ParmVar 0x55db2c77c710 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55db2c780350 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55db2c780248 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55db2c77c788 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55db2c77ca70 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55db2c77c960 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55db2c77c9d8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55db2c77cbc8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55db2c77cb38 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55db2c77cd10 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55db2c77cc80 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55db2c77cfb0 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55db2c77cdc8 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55db2c77ce48 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55db2c77cec0 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55db2c77d110 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x55db2c77d080 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55db2c780518 <col:37, line:441:5>
|   `-IfStmt 0x55db2c780500 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55db2c780488 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55db2c780458 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55db2c780418 <col:6> 'int' lvalue ParmVar 0x55db2c77d080 'level' 'int'
|     | `-ImplicitCastExpr 0x55db2c780470 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55db2c780438 <col:15> 'ErrorHandler::Level' EnumConstant 0x55db2c779190 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55db2c7804e8 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55db2c7804b8 <col:8> 'int' lvalue ->_nerrors 0x55db2c77ed78
|         `-CXXThisExpr 0x55db2c7804a8 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55db2c77d1d8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x55db2c7805b0 <col:26, line:448:5>
|   `-BinaryOperator 0x55db2c780590 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55db2c780540 <col:2> 'int' lvalue ->_nerrors 0x55db2c77ed78
|     | `-CXXThisExpr 0x55db2c780530 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55db2c780570 <col:13> 'int' 0
|-CXXMethodDecl 0x55db2c77d3a0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55db2c77d290 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55db2c77d308 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55db2c77d5a8 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55db2c77d460 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55db2c77d4d8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55db2c77d858 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55db2c77d668 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55db2c77d6e8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55db2c77d768 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55db2c77d910 <col:59> 0 0
|-CXXMethodDecl 0x55db2c77daa8 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55db2c77d988 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55db2c77da08 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55db2c780c30 <col:70, line:534:5>
|   |-DeclStmt 0x55db2c780720 <line:528:2, col:20>
|   | |-VarDecl 0x55db2c7805d8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55db2c780640 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55db2c780678 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55db2c7806e0 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55db2c7807f0 <line:529:2, col:23>
|   | `-VarDecl 0x55db2c780750 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55db2c7807d8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55db2c7807b8 <col:18> 'const char *' lvalue ParmVar 0x55db2c77d988 'begin' 'const char *'
|   |-DoStmt 0x55db2c780bc8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55db2c780ae8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55db2c780ad0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55db2c780ab0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55db2c780808 <col:6> 'const char *' lvalue Var 0x55db2c780750 'x' 'const char *'
|   | |     `-CallExpr 0x55db2c780a00 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55db2c7809e8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55db2c7809a0 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55db2c77f250 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55db2c780a68 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55db2c780a50 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55db2c7808c0 <col:20, col:27> 'String' (CXXTemporary 0x55db2c7808c0)
|   | |       |     `-CXXTemporaryObjectExpr 0x55db2c780888 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55db2c780a80 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55db2c7808e0 <col:30> 'const char *' lvalue Var 0x55db2c780750 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55db2c780a98 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55db2c780900 <col:33> 'const char *' lvalue ParmVar 0x55db2c77da08 'end' 'const char *'
|   | |       |-UnaryOperator 0x55db2c780940 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55db2c780920 <col:39> 'String' lvalue Var 0x55db2c7805d8 'name' 'String'
|   | |       |-UnaryOperator 0x55db2c780978 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55db2c780958 <col:46> 'String' lvalue Var 0x55db2c780678 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55db2c780990 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55db2c780bb0 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55db2c780b98 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55db2c780b78 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55db2c780b48 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55db2c463098
|   |         `-ImplicitCastExpr 0x55db2c780b30 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55db2c780b00 <col:11> 'String' lvalue Var 0x55db2c7805d8 'name' 'String'
|   `-ReturnStmt 0x55db2c780c20 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55db2c780c08 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55db2c780be8 <col:9> 'const char *' lvalue Var 0x55db2c780750 'x' 'const char *'
|-CXXMethodDecl 0x55db2c77dbf8 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55db2c77db68 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55db2c781238 <col:55, line:550:5>
|   `-IfStmt 0x55db2c781210 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55db2c780e70 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55db2c780e58 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55db2c780e40 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55db2c780e20 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55db2c780df0 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55db2c463098
|     | |       `-DeclRefExpr 0x55db2c780c90 <col:6> 'const String' lvalue ParmVar 0x55db2c77db68 'x' 'const String &'
|     | `-BinaryOperator 0x55db2c780dd0 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55db2c780da0 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55db2c780d50 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55db2c780d38 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55db2c780cf0 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55db2c47c8d0 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55db2c780cb0 <col:11> 'const String' lvalue ParmVar 0x55db2c77db68 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55db2c780cd0 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55db2c780db8 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55db2c780d88 <col:19> 'char' 123
|     |-ReturnStmt 0x55db2c780ee0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55db2c780eb0 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55db2c780e90 <col:13> 'const String' lvalue ParmVar 0x55db2c77db68 'x' 'const String &'
|     `-IfStmt 0x55db2c7811e8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55db2c780f78 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55db2c780f60 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55db2c780f40 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55db2c780f10 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55db2c463098
|       |       `-DeclRefExpr 0x55db2c780ef0 <col:11> 'const String' lvalue ParmVar 0x55db2c77db68 'x' 'const String &'
|       |-ReturnStmt 0x55db2c781100 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55db2c7810e8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55db2c7810b8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55db2c7810a0 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55db2c781080 <col:13, col:29> 'String' (CXXTemporary 0x55db2c781080)
|       |         `-CallExpr 0x55db2c781030 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55db2c781018 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55db2c780f90 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55db2c77d3a0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55db2c781060 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55db2c780fb0 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55db2c780fd0 <col:28> 'const String' lvalue ParmVar 0x55db2c77db68 'x' 'const String &'
|       `-ReturnStmt 0x55db2c7811d8 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55db2c7811c0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55db2c781190 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55db2c781178 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55db2c781158 <col:13, col:20> 'String' (CXXTemporary 0x55db2c781158)
|                 `-CXXTemporaryObjectExpr 0x55db2c781120 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55db2c77ddc0 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55db2c77dcb0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55db2c77dd28 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55db2c77f4f8 <col:71> 'bool' false
|-CXXRecordDecl 0x55db2c77de70 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55db2c77e168 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55db2c77e100 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55db2c77e0a0 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55db2c77e060 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55db2c45f930 'String'
|       | `-CXXRecord 0x55db2c45f8a0 'String'
|       |-BuiltinType 0x55db2c12f370 'int'
|       `-DecayedType 0x55db2c711dc0 '__va_list_tag *' sugar
|         |-TypedefType 0x55db2c711d90 'va_list' sugar
|         | |-Typedef 0x55db2c3507c0 'va_list'
|         | `-TypedefType 0x55db2c350770 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55db2c288398 '__gnuc_va_list'
|         |   `-TypedefType 0x55db2c288300 '__builtin_va_list' sugar
|         |     |-Typedef 0x55db2c170bd8 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55db2c170b80 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55db2c1300c0 '__va_list_tag'
|         |         `-CXXRecord 0x55db2c130028 '__va_list_tag'
|         `-PointerType 0x55db2c356060 '__va_list_tag *'
|           `-RecordType 0x55db2c1300c0 '__va_list_tag'
|             `-CXXRecord 0x55db2c130028 '__va_list_tag'
|-EnumDecl 0x55db2c77e1c0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55db2c77e2c0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55db2c77e820 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c77e2a0 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55db2c77e280 <col:16> 'int' 1
| |-EnumConstantDecl 0x55db2c77e350 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55db2c77e838 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c77e330 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55db2c77e310 <col:21> 'int' 2
| |-EnumConstantDecl 0x55db2c77e3e0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55db2c77e850 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c77e3c0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55db2c77e3a0 <col:22> 'int' 4
| |-EnumConstantDecl 0x55db2c77e470 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55db2c77e868 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c77e450 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55db2c77e430 <col:17> 'int' 8
| |-EnumConstantDecl 0x55db2c77e500 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55db2c77e880 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c77e4e0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55db2c77e4c0 <col:22> 'int' 16
| |-EnumConstantDecl 0x55db2c77e590 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55db2c77e898 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c77e570 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55db2c77e550 <col:19> 'int' 32
| |-EnumConstantDecl 0x55db2c77e620 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55db2c77e8b0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c77e600 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55db2c77e5e0 <col:17> 'int' 64
| |-EnumConstantDecl 0x55db2c77e6b0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55db2c77e8c8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c77e690 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55db2c77e670 <col:14> 'int' 128
| |-EnumConstantDecl 0x55db2c77e740 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55db2c77e8e0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c77e720 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55db2c77e700 <col:16> 'int' 256
| `-EnumConstantDecl 0x55db2c77e7d0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55db2c77e8f8 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55db2c77e7b0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55db2c77e790 <col:12> 'int' 1024
|-CXXMethodDecl 0x55db2c77eb08 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55db2c77e920 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55db2c77e9c0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55db2c77ec90 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55db2c77ebc8 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55db2c77ed38 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55db2c77ed78 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55db2c77edd8 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55db2c77ee50 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55db2c77f250 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55db2c77eec8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55db2c77ef48 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55db2c77efc8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55db2c77f040 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55db2c77f0b8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55db2c77f130 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55db2c77f378 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55db2c77f378
| `-ParmVarDecl 0x55db2c77f488 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55db2c781598 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55db2c781598
  `-ParmVarDecl 0x55db2c7816a8 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c68f9f0 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55db2c68fb40 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55db2c68fbc0 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x55db2c6909b8 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55db2c6909b8
| `-ParmVarDecl 0x55db2c690ac8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x55db2c690b68 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55db2c690b68
| `-ParmVarDecl 0x55db2c690c78 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x55db2c690ce8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55db2c690ce8
|-CXXMethodDecl 0x55db2c6915b8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55db2c6915b8
| `-ParmVarDecl 0x55db2c6916c8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x55db2c691738 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55db2c691738
| `-ParmVarDecl 0x55db2c691848 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x55db2c857060 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x55db2c857140 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c68fcf0 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55db2c68fe18 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x55db2c68fea0 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x55db2c690e18 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55db2c690e18
| `-ParmVarDecl 0x55db2c690f28 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x55db2c690fc8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55db2c690fc8
| `-ParmVarDecl 0x55db2c6910d8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x55db2c691148 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55db2c691148
|-CXXMethodDecl 0x55db2c6918e8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55db2c6918e8
| `-ParmVarDecl 0x55db2c6919f8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x55db2c691a68 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55db2c691a68
| `-ParmVarDecl 0x55db2c691b78 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x55db2c8571a0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x55db2c857280 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c68b378 prev 0x55db2c68a810 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55db2c68b470 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x55db2c68b500 <col:17, col:23> col:17 public
|-EnumDecl 0x55db2c68b528 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x55db2c68b630 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x55db2c68c380 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68b610 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x55db2c68b5f0 <col:11> 'int' 1
| |-EnumConstantDecl 0x55db2c68b6c0 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x55db2c68c398 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68b6a0 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x55db2c68b680 <col:12> 'int' 2
| |-EnumConstantDecl 0x55db2c68b750 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x55db2c68c3b0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68b730 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x55db2c68b710 <col:17> 'int' 4
| |-EnumConstantDecl 0x55db2c68b7e0 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55db2c68c3c8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68b7c0 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x55db2c68b7a0 <col:16> 'int' 0
| |-EnumConstantDecl 0x55db2c68b870 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55db2c68c3e0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68b850 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55db2c68b830 <col:19> 'int' 32
| |-EnumConstantDecl 0x55db2c68b900 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x55db2c68c3f8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68b8e0 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x55db2c68b8c0 <col:10> 'int' 64
| |-EnumConstantDecl 0x55db2c68b990 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55db2c68c410 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68b970 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x55db2c68b950 <col:19> 'int' 128
| |-EnumConstantDecl 0x55db2c68ba20 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x55db2c68c428 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68ba00 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x55db2c68b9e0 <col:20> 'int' 256
| |-EnumConstantDecl 0x55db2c68bab0 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x55db2c68c440 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68ba90 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x55db2c68ba70 <col:17> 'int' 512
| |-EnumConstantDecl 0x55db2c68bb40 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x55db2c68c458 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68bb20 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x55db2c68bb00 <col:15> 'int' 1024
| |-EnumConstantDecl 0x55db2c68bbd0 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x55db2c68c470 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68bbb0 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x55db2c68bb90 <col:11> 'int' 2048
| |-EnumConstantDecl 0x55db2c68bc60 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55db2c68c488 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68bc40 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x55db2c68bc20 <col:16> 'int' 4096
| |-EnumConstantDecl 0x55db2c68bcf0 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x55db2c68c4a0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68bcd0 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x55db2c68bcb0 <col:13> 'int' 8192
| |-EnumConstantDecl 0x55db2c68bd80 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x55db2c68c4b8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68bd60 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x55db2c68bd40 <col:15> 'int' 16384
| |-EnumConstantDecl 0x55db2c68be50 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x55db2c68be30 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x55db2c68be10 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55db2c68bdd0 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x55db2c68bdf0 <col:20> 'int' 26
| |-EnumConstantDecl 0x55db2c68bf20 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x55db2c68bf00 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x55db2c68bee0 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55db2c68bea0 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x55db2c68bec0 <col:27> 'int' 27
| |-EnumConstantDecl 0x55db2c68bfb0 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x55db2c68c4d0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68bf90 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x55db2c68bf70 <col:17> 'int' 28
| |-EnumConstantDecl 0x55db2c68c080 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x55db2c68c060 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x55db2c68c040 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55db2c68c000 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x55db2c68c020 <col:18> 'int' EnumConstant 0x55db2c68bfb0 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55db2c68c110 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55db2c68c4e8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68c0f0 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x55db2c68c0d0 <col:25> 'int' 8
| |-EnumConstantDecl 0x55db2c68c1a0 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x55db2c68c500 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68c180 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x55db2c68c160 <col:26> 'int' 16
| `-EnumConstantDecl 0x55db2c68c330 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x55db2c68c518 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55db2c68c310 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x55db2c68c2f0 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x55db2c68c2b0 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x55db2c68c270 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x55db2c68c230 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x55db2c68c1f0 <col:14> 'int' EnumConstant 0x55db2c68b630 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x55db2c68c210 <col:23> 'int' EnumConstant 0x55db2c68b6c0 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x55db2c68c250 <col:33> 'int' EnumConstant 0x55db2c68b750 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x55db2c68c290 <col:48> 'int' EnumConstant 0x55db2c68c110 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x55db2c68c2d0 <col:71> 'int' EnumConstant 0x55db2c68c1a0 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x55db2c68c578 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x55db2c691f98 <col:39, line:64:5>
|   `-ReturnStmt 0x55db2c691f88 <line:63:2, col:9>
|     `-MemberExpr 0x55db2c691f58 <col:9> 'const String' lvalue ->_name 0x55db2c68f9a0
|       `-CXXThisExpr 0x55db2c691f48 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55db2c68c638 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x55db2c692018 <col:35, line:71:5>
|   `-ReturnStmt 0x55db2c692008 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x55db2c691ff0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55db2c691fc0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55db2c6900b0
|         `-CXXThisExpr 0x55db2c691fb0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55db2c68c788 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x55db2c68c6f0 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x55db2c692198 <col:42, line:77:5>
|   `-ReturnStmt 0x55db2c692188 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x55db2c692170 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x55db2c692140 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x55db2c6920a0 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x55db2c692070 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55db2c692030 <col:9> 'int' lvalue ParmVar 0x55db2c68c6f0 'op' 'int'
|         | `-ImplicitCastExpr 0x55db2c692088 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x55db2c692050 <col:15> 'Handler::Flags' EnumConstant 0x55db2c68b6c0 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x55db2c6920d0 <col:25> 'void *const' lvalue ->_write_user_data 0x55db2c690050
|         | `-CXXThisExpr 0x55db2c6920c0 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x55db2c692110 <col:44> 'void *const' lvalue ->_read_user_data 0x55db2c68ffe8
|           `-CXXThisExpr 0x55db2c692100 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x55db2c68c858 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x55db2c692218 <col:41, line:82:5>
|   `-ReturnStmt 0x55db2c692208 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x55db2c6921f0 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55db2c6921c0 <col:9> 'void *const' lvalue ->_read_user_data 0x55db2c68ffe8
|         `-CXXThisExpr 0x55db2c6921b0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55db2c68c920 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x55db2c692298 <col:42, line:87:5>
|   `-ReturnStmt 0x55db2c692288 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x55db2c692270 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55db2c692240 <col:9> 'void *const' lvalue ->_write_user_data 0x55db2c690050
|         `-CXXThisExpr 0x55db2c692230 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x55db2c68c9e8 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x55db2c68ca88 <col:52> "" ""
|-CXXMethodDecl 0x55db2c68cb20 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x55db2c68cbc0 <col:52> "" ""
|-CXXMethodDecl 0x55db2c68cc50 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x55db2c692388 <col:34, line:98:5>
|   `-ReturnStmt 0x55db2c692378 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x55db2c692360 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55db2c692340 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55db2c692310 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55db2c6922c0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55db2c6900b0
|         |   `-CXXThisExpr 0x55db2c6922b0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55db2c692328 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55db2c6922f0 <col:18> 'Handler::Flags' EnumConstant 0x55db2c68b630 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55db2c68cd10 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x55db2c692478 <col:36, line:104:5>
|   `-ReturnStmt 0x55db2c692468 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x55db2c692450 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55db2c692430 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55db2c692400 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55db2c6923b0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55db2c6900b0
|         |   `-CXXThisExpr 0x55db2c6923a0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55db2c692418 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55db2c6923e0 <col:18> 'Handler::Flags' EnumConstant 0x55db2c68b750 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x55db2c68cdd0 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x55db2c692658 <col:38, line:113:5>
|   `-ReturnStmt 0x55db2c692648 <line:112:2, col:49>
|     `-BinaryOperator 0x55db2c692628 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x55db2c6925d0 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x55db2c6925b0 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55db2c692580 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55db2c6924a0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55db2c6900b0
|       |   |   `-CXXThisExpr 0x55db2c692490 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55db2c692598 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55db2c692560 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x55db2c692540 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x55db2c692510 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55db2c6924d0 <col:20> 'Handler::Flags' EnumConstant 0x55db2c68b630 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55db2c692528 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55db2c6924f0 <col:29> 'Handler::Flags' EnumConstant 0x55db2c68b990 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55db2c692610 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55db2c6925f0 <col:49> 'Handler::Flags' EnumConstant 0x55db2c68b630 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x55db2c68ce90 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x55db2c692748 <col:34, line:118:5>
|   `-ReturnStmt 0x55db2c692738 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x55db2c692720 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55db2c692700 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55db2c6926d0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55db2c692680 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55db2c6900b0
|         |   `-CXXThisExpr 0x55db2c692670 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55db2c6926e8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55db2c6926b0 <col:18> 'Handler::Flags' EnumConstant 0x55db2c68b6c0 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55db2c68cf50 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x55db2c692928 <col:39, line:127:5>
|   `-ReturnStmt 0x55db2c692918 <line:126:2, col:51>
|     `-BinaryOperator 0x55db2c6928f8 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x55db2c6928a0 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x55db2c692880 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55db2c692850 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55db2c692770 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55db2c6900b0
|       |   |   `-CXXThisExpr 0x55db2c692760 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x55db2c692868 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x55db2c692830 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x55db2c692810 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x55db2c6927e0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x55db2c6927a0 <col:20> 'Handler::Flags' EnumConstant 0x55db2c68b6c0 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x55db2c6927f8 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x55db2c6927c0 <col:30> 'Handler::Flags' EnumConstant 0x55db2c68ba20 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x55db2c6928e0 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x55db2c6928c0 <col:51> 'Handler::Flags' EnumConstant 0x55db2c68b6c0 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x55db2c68d010 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x55db2c692a30 <col:33, line:132:5>
|   `-ReturnStmt 0x55db2c692a20 <line:131:2, col:41>
|     `-BinaryOperator 0x55db2c692a00 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x55db2c692980 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x55db2c692950 <col:9> '<bound member function type>' ->read_visible 0x55db2c68cdd0
|       |   `-CXXThisExpr 0x55db2c692940 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x55db2c6929e0 <col:27, col:41> 'bool'
|         `-MemberExpr 0x55db2c6929b0 <col:27> '<bound member function type>' ->write_visible 0x55db2c68cf50
|           `-CXXThisExpr 0x55db2c6929a0 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x55db2c68d0d0 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x55db2c692b68 <col:51, line:138:5>
|   `-ReturnStmt 0x55db2c692b58 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x55db2c692b40 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55db2c692b20 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55db2c692ad8 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55db2c692aa8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55db2c692a58 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55db2c6900b0
|           |   `-CXXThisExpr 0x55db2c692a48 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55db2c692ac0 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55db2c692a88 <col:26> 'Handler::Flags' EnumConstant 0x55db2c68b870 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55db2c68d190 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x55db2c692c78 <col:50, line:144:5>
|   `-ReturnStmt 0x55db2c692c68 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x55db2c692c50 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x55db2c692c30 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x55db2c692c10 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x55db2c692be0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x55db2c692b90 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55db2c6900b0
|           |   `-CXXThisExpr 0x55db2c692b80 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x55db2c692bf8 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x55db2c692bc0 <col:26> 'Handler::Flags' EnumConstant 0x55db2c68b870 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55db2c68d250 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x55db2c692d68 <col:29, line:166:5>
|   `-ReturnStmt 0x55db2c692d58 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x55db2c692d40 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x55db2c692d20 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x55db2c692cf0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x55db2c692ca0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55db2c6900b0
|         |   `-CXXThisExpr 0x55db2c692c90 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x55db2c692d08 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x55db2c692cd0 <col:18> 'Handler::Flags' EnumConstant 0x55db2c68b900 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x55db2c68d4d8 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55db2c68d300 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x55db2c68d378 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x55db2c68d3f0 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55db2c68d6e8 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x55db2c68d5a0 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x55db2c68d618 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55db2c691e80 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55db2c691e60 <col:62> 'int' 0
| `-CompoundStmt 0x55db2c693008 <col:71, line:188:5>
|   `-ReturnStmt 0x55db2c692ff8 <line:187:2, col:36>
|     `-ExprWithCleanups 0x55db2c692fe0 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x55db2c692fb0 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55db2c692f98 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55db2c692f78 <col:9, col:36> 'String' (CXXTemporary 0x55db2c692f78)
|             `-CXXMemberCallExpr 0x55db2c692ed8 <col:9, col:36> 'String'
|               |-MemberExpr 0x55db2c692ea8 <col:9> '<bound member function type>' ->call_read 0x55db2c68d4d8
|               | `-CXXThisExpr 0x55db2c692e98 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55db2c692f10 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55db2c692df0 <col:19> 'Element *' lvalue ParmVar 0x55db2c68d5a0 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x55db2c692f40 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x55db2c692f28 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x55db2c692e58 <col:22, col:29> 'String' (CXXTemporary 0x55db2c692e58)
|               |     `-CXXTemporaryObjectExpr 0x55db2c692e20 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x55db2c692f58 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x55db2c692e78 <col:32> 'ErrorHandler *' lvalue ParmVar 0x55db2c68d618 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x55db2c68d980 <line:198:5, col:73> col:9 call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55db2c68d7a8 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x55db2c68d820 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55db2c68d898 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55db2c68db08 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x55db2c68da48 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x55db2c68dd38 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x55db2c68dbc0 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x55db2c68dc38 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x55db2c68de38 <line:223:5, line:225:5> line:223:34 blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x55db2c693068 <col:50, line:225:5>
|   `-ReturnStmt 0x55db2c693058 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x55db2c693040 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x55db2c693020 <col:9> 'const Handler *' lvalue Var 0x55db2c6901e0 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x55db2c68ded8 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x55db2c68dfe0 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55db2c68eb80 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68dfc0 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55db2c68dfa0 <col:11> 'Handler::Flags' EnumConstant 0x55db2c68b630 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55db2c68e070 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55db2c68eb98 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68e050 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55db2c68e030 <col:12> 'Handler::Flags' EnumConstant 0x55db2c68b6c0 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55db2c68e100 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55db2c68ebb0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68e0e0 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55db2c68e0c0 <col:17> 'Handler::Flags' EnumConstant 0x55db2c68b750 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55db2c68e190 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55db2c68ebc8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68e170 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55db2c68e150 <col:16> 'Handler::Flags' EnumConstant 0x55db2c68b7e0 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55db2c68e220 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55db2c68ebe0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68e200 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x55db2c68e1e0 <col:19> 'Handler::Flags' EnumConstant 0x55db2c68b870 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x55db2c68e2b0 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55db2c68ebf8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68e290 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55db2c68e270 <col:10> 'Handler::Flags' EnumConstant 0x55db2c68b900 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55db2c68e340 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55db2c68ec10 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68e320 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x55db2c68e300 <col:19> 'Handler::Flags' EnumConstant 0x55db2c68b990 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55db2c68e3d0 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55db2c68ec28 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68e3b0 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x55db2c68e390 <col:20> 'Handler::Flags' EnumConstant 0x55db2c68ba20 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x55db2c68e460 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55db2c68ec40 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68e440 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x55db2c68e420 <col:17> 'Handler::Flags' EnumConstant 0x55db2c68bab0 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x55db2c68e4f0 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55db2c68ec58 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68e4d0 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x55db2c68e4b0 <col:15> 'Handler::Flags' EnumConstant 0x55db2c68bb40 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x55db2c68e580 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55db2c68ec70 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68e560 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55db2c68e540 <col:11> 'Handler::Flags' EnumConstant 0x55db2c68bbd0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55db2c68e610 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55db2c68ec88 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68e5f0 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55db2c68e5d0 <col:16> 'Handler::Flags' EnumConstant 0x55db2c68bc60 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55db2c68e6a0 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55db2c68eca0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68e680 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55db2c68e660 <col:13> 'Handler::Flags' EnumConstant 0x55db2c68bcf0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55db2c68e730 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55db2c68ecb8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68e710 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55db2c68e6f0 <col:15> 'Handler::Flags' EnumConstant 0x55db2c68bd80 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55db2c68e7c0 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55db2c68ecd0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68e7a0 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x55db2c68e780 <col:20> 'Handler::Flags' EnumConstant 0x55db2c68be50 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x55db2c68e850 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55db2c68ece8 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68e830 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x55db2c68e810 <col:27> 'Handler::Flags' EnumConstant 0x55db2c68bf20 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x55db2c68e8e0 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55db2c68ed00 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68e8c0 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55db2c68e8a0 <col:22> 'Handler::Flags' EnumConstant 0x55db2c68bfb0 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x55db2c68e970 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55db2c68ed18 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68e950 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x55db2c68e930 <col:18> 'Handler::Flags' EnumConstant 0x55db2c68c080 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x55db2c68ea00 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55db2c68ed30 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68e9e0 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x55db2c68e9c0 <col:25> 'Handler::Flags' EnumConstant 0x55db2c68c110 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55db2c68ea90 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x55db2c68ed48 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68ea70 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x55db2c68ea50 <col:26> 'Handler::Flags' EnumConstant 0x55db2c68c1a0 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x55db2c68eb30 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x55db2c68ed60 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55db2c68eb10 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x55db2c68eae0 <col:20> 'Handler::Flags' EnumConstant 0x55db2c68c330 'f_special' 'Handler::Flags'
|-EnumDecl 0x55db2c68ed78 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x55db2c68ee80 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55db2c68f3e0 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68ee60 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x55db2c68ee40 <col:12> 'Handler::Flags' EnumConstant 0x55db2c68b630 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x55db2c68ef10 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55db2c68f3f8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68eef0 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x55db2c68eed0 <col:13> 'Handler::Flags' EnumConstant 0x55db2c68b6c0 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x55db2c68efa0 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55db2c68f410 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68ef80 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x55db2c68ef60 <col:15> 'Handler::Flags' EnumConstant 0x55db2c68b750 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x55db2c68f030 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55db2c68f428 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68f010 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x55db2c68eff0 <col:8> 'Handler::Flags' EnumConstant 0x55db2c68b900 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x55db2c68f0c0 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55db2c68f440 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68f0a0 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x55db2c68f080 <col:9> 'Handler::Flags' EnumConstant 0x55db2c68bbd0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x55db2c68f150 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55db2c68f458 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68f130 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x55db2c68f110 <col:14> 'Handler::Flags' EnumConstant 0x55db2c68bc60 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x55db2c68f1e0 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55db2c68f470 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68f1c0 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x55db2c68f1a0 <col:11> 'Handler::Flags' EnumConstant 0x55db2c68bcf0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x55db2c68f270 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55db2c68f488 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68f250 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x55db2c68f230 <col:13> 'Handler::Flags' EnumConstant 0x55db2c68bd80 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x55db2c68f300 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x55db2c68f4a0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68f2e0 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x55db2c68f2c0 <col:20> 'Handler::Flags' EnumConstant 0x55db2c68bfb0 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x55db2c68f390 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x55db2c68f4b8 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55db2c68f370 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x55db2c68f350 <col:16> 'Handler::Flags' EnumConstant 0x55db2c68c080 'f_user0' 'Handler::Flags'
|-EnumDecl 0x55db2c68f4d0 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x55db2c68f590 <col:25> "" ""
| |-EnumConstantDecl 0x55db2c68f640 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x55db2c68f720 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c68f620 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x55db2c68f600 <col:14> 'Handler::Flags' EnumConstant 0x55db2c68b7e0 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x55db2c68f6d0 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x55db2c68f738 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55db2c68f6b0 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x55db2c68f690 <col:17> 'Handler::Flags' EnumConstant 0x55db2c68b870 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x55db2c68f8b8 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x55db2c68f760 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x55db2c68f7e0 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x55db2c693728 <col:70, line:284:5>
|   |-ParenExpr 0x55db2c693548 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x55db2c693518 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x55db2c693248 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55db2c693218 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x55db2c6931c0 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x55db2c6931a0 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x55db2c693170 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x55db2c693090 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x55db2c6900b0
|   |   |   |   |   `-CXXThisExpr 0x55db2c693080 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x55db2c693188 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x55db2c693150 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x55db2c693130 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x55db2c693100 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x55db2c6930c0 <col:34> 'Handler::Flags' EnumConstant 0x55db2c68b630 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x55db2c693118 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x55db2c6930e0 <col:43> 'Handler::Flags' EnumConstant 0x55db2c68c110 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x55db2c693200 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x55db2c6931e0 <col:69> 'Handler::Flags' EnumConstant 0x55db2c68b630 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x55db2c6932a8 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55db2c693288 <col:85> 'int' 0
|   |   `-CallExpr 0x55db2c693478 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x55db2c693460 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55db2c693440 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55db2c1ce940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55db2c6934b8 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c693318 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x55db2c6934d0 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c693368 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x55db2c6934e8 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55db2c6933a0 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x55db2c693500 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55db2c693428 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55db2c693410 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55db2c6933c0 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x55db2c693718 <line:283:2, col:38>
|     `-ExprWithCleanups 0x55db2c693700 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x55db2c6936d0 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55db2c6936b8 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55db2c693698 <col:9, col:38> 'String' (CXXTemporary 0x55db2c693698)
|             `-CallExpr 0x55db2c693630 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x55db2c693618 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x55db2c6935a8 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x55db2c68fbc0
|               |   `-MemberExpr 0x55db2c693578 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x55db2c68fc88
|               |     `-CXXThisExpr 0x55db2c693568 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x55db2c693660 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x55db2c6935d8 <col:22> 'Element *' lvalue ParmVar 0x55db2c68f760 'e' 'Element *'
|               `-ImplicitCastExpr 0x55db2c693678 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x55db2c6935f8 <col:25> 'void *' lvalue ParmVar 0x55db2c68f7e0 'new_user_data' 'void *'
|-AccessSpecDecl 0x55db2c68f968 <line:287:3, col:10> col:3 private
|-FieldDecl 0x55db2c68f9a0 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x55db2c68f9f0 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55db2c68fb40 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55db2c68fbc0 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x55db2c6909b8 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55db2c6909b8
| | `-ParmVarDecl 0x55db2c690ac8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x55db2c690b68 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55db2c690b68
| | `-ParmVarDecl 0x55db2c690c78 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x55db2c690ce8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55db2c690ce8
| |-CXXMethodDecl 0x55db2c6915b8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x55db2c6915b8
| | `-ParmVarDecl 0x55db2c6916c8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x55db2c691738 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x55db2c691738
| | `-ParmVarDecl 0x55db2c691848 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x55db2c857060 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55db2c857140 <col:5>
|-FieldDecl 0x55db2c68fc88 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x55db2c68fcf0 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55db2c68fe18 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x55db2c68fea0 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x55db2c690e18 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55db2c690e18
| | `-ParmVarDecl 0x55db2c690f28 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x55db2c690fc8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55db2c690fc8
| | `-ParmVarDecl 0x55db2c6910d8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x55db2c691148 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55db2c691148
| |-CXXMethodDecl 0x55db2c6918e8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x55db2c6918e8
| | `-ParmVarDecl 0x55db2c6919f8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x55db2c691a68 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x55db2c691a68
| | `-ParmVarDecl 0x55db2c691b78 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x55db2c8571a0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55db2c857280 <col:5>
|-FieldDecl 0x55db2c68ff68 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x55db2c68ffe8 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x55db2c690050 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x55db2c6900b0 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x55db2c690118 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x55db2c690180 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x55db2c6901e0 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x55db2c690300 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x55db2c690258 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x55db2c691f30 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55db2c691f18 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x55db2c691f00 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55db2c691ee0 <col:30, col:37> 'String' (CXXTemporary 0x55db2c691ee0)
|           `-CXXTemporaryObjectExpr 0x55db2c691ea8 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x55db2c6904a8 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x55db2c6903e8 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x55db2c690628 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x55db2c690560 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x55db2c6907e8 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x55db2c690828 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x55db2c690828
| `-ParmVarDecl 0x55db2c690908 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x55db2c691258 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x55db2c691258
| `-ParmVarDecl 0x55db2c691368 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x55db2c691408 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x55db2c691408
| `-ParmVarDecl 0x55db2c691518 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x55db2c691be8 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x55db2c691be8
| `-ParmVarDecl 0x55db2c691cf8 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x55db2c691d80 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x55db2c691d80

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55db2c83dab8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x55db2c83dcc8 prev 0x55db2c83dab8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55db2c83ece0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55db2c83ec90 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x55db2c83ec70 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x55db2c83eb20 'type'
|     `-SubstTemplateTypeParmType 0x55db2c7a66a0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55db2c3f8550 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c3f84f8 'T'
|       `-RecordType 0x55db2c7a61f0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55db2c7a6108 'sized_array_memory'
|-FieldDecl 0x55db2c83ede0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55db2c83ee30 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55db2c83ee68 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x55db2c83dd60 'void *' sugar
|   |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55db2c430408 'T'
|   `-PointerType 0x55db2c12fad0 'void *'
|     `-BuiltinType 0x55db2c12f2d0 'void'
|-TypedefDecl 0x55db2c83eef8 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x55db2c83eec0 'void *&'
|   `-SubstTemplateTypeParmType 0x55db2c83dd60 'void *' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-PointerType 0x55db2c12fad0 'void *'
|       `-BuiltinType 0x55db2c12f2d0 'void'
|-TypedefDecl 0x55db2c83efb8 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x55db2c83ef80 'void *const &'
|   `-QualType 0x55db2c83dd61 'void *const' const
|     `-SubstTemplateTypeParmType 0x55db2c83dd60 'void *' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-PointerType 0x55db2c12fad0 'void *'
|         `-BuiltinType 0x55db2c12f2d0 'void'
|-TypedefDecl 0x55db2c83f048 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x55db2c83f010 'void **'
|   `-SubstTemplateTypeParmType 0x55db2c83dd60 'void *' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-PointerType 0x55db2c12fad0 'void *'
|       `-BuiltinType 0x55db2c12f2d0 'void'
|-TypedefDecl 0x55db2c83f0d8 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x55db2c83f0a0 'void *const *'
|   `-QualType 0x55db2c83dd61 'void *const' const
|     `-SubstTemplateTypeParmType 0x55db2c83dd60 'void *' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-PointerType 0x55db2c12fad0 'void *'
|         `-BuiltinType 0x55db2c12f2d0 'void'
|-TypedefDecl 0x55db2c83fcc0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x55db2c83fc70 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x55db2c83fc50 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x55db2c83fbe0 'type'
|     `-SubstTemplateTypeParmType 0x55db2c83f9a0 'void *' sugar
|       |-TemplateTypeParmType 0x55db2c403570 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c403520 'T'
|       `-PointerType 0x55db2c12fad0 'void *'
|         `-BuiltinType 0x55db2c12f2d0 'void'
|-TypedefDecl 0x55db2c83fd28 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x55db2c83ef80 'void *const &'
|   `-QualType 0x55db2c83dd61 'void *const' const
|     `-SubstTemplateTypeParmType 0x55db2c83dd60 'void *' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-PointerType 0x55db2c12fad0 'void *'
|         `-BuiltinType 0x55db2c12f2d0 'void'
|-TypedefDecl 0x55db2c83fd80 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55db2c12f370 'int'
|-TypedefDecl 0x55db2c83fde8 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x55db2c83f010 'void **'
|   `-SubstTemplateTypeParmType 0x55db2c83dd60 'void *' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-PointerType 0x55db2c12fad0 'void *'
|       `-BuiltinType 0x55db2c12f2d0 'void'
|-TypedefDecl 0x55db2c83fe50 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x55db2c83f0a0 'void *const *'
|   `-QualType 0x55db2c83dd61 'void *const' const
|     `-SubstTemplateTypeParmType 0x55db2c83dd60 'void *' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-PointerType 0x55db2c12fad0 'void *'
|         `-BuiltinType 0x55db2c12f2d0 'void'
|-EnumDecl 0x55db2c83fea8 <line:134:5> col:5
| `-EnumConstantDecl 0x55db2c83ffa0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55db2c83ff80 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55db2c431ae8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55db2c431ac0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55db2c431aa0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55db2c840028 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55db2c840278 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c8400e0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c840180 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x55db2c840538 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x55db2c840420 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x55db2c8407f8 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x55db2c8406e0 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x55db2c840b40 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x55db2c840a20 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x55db2c840e50 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x55db2c840d30 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x55db2c841140 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c840f88 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c841000 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55db2c841298 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x55db2c841378 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c8413d0 <col:30> Inherited
|-CXXMethodDecl 0x55db2c841418 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x55db2c8414c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c841520 <col:30> Inherited
|-CXXMethodDecl 0x55db2c8415e8 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55db2c841698 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c8416f0 <col:30> Inherited
|-CXXMethodDecl 0x55db2c841738 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55db2c8417e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c841840 <col:30> Inherited
|-CXXMethodDecl 0x55db2c841888 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55db2c841938 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c841990 <col:30> Inherited
|-CXXMethodDecl 0x55db2c8419d8 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x55db2c841a88 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c841ae0 <col:30> Inherited
|-CXXMethodDecl 0x55db2c841b08 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55db2c841bb8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55db2c841c68 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55db2c841e28 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c841d18 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c841d90 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55db2c841f78 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c841ee8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c842128 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x55db2c842030 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55db2c8421e0 <col:20>
| `-OptimizeNoneAttr 0x55db2c842238 <col:30>
|-CXXMethodDecl 0x55db2c842358 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55db2c842260 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55db2c842410 <col:20>
| `-OptimizeNoneAttr 0x55db2c842468 <col:30>
|-CXXMethodDecl 0x55db2c842520 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c842490 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c842668 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55db2c8425d8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c842798 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x55db2c8428c8 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x55db2c844dc0 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x55db2c844e90 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x55db2c844fd0 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c844f40 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c845118 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55db2c845088 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c845260 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55db2c8451d0 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55db2c845318 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55db2c845418 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55db2c845388 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55db2c8454d0 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55db2c845588 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x55db2c845688 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x55db2c845808 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x55db2c845748 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x55db2c845fc8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55db2c8458c0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x55db2c845f28 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x55db2c845e28 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x55db2c8460a8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55db2c8461f8 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x55db2c846168 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55db2c8462b0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55db2c8464f8 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c846370 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x55db2c8463e8 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x55db2c8466b8 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x55db2c8465c8 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x55db2c846908 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x55db2c846780 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x55db2c8467f8 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x55db2c8469c8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55db2c846c28 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x55db2c846b30 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x55db2c846cf8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55db2c846cf8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.12 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.12 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c846ef0 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55db2c847008 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x55db2c847098 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x55db2c8471a0 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x55db2c8471f0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55db2c847180 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x55db2c847160 <col:27> 'int' 4096
|-FieldDecl 0x55db2c847218 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x55db2c847280 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x55db2c847478 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x55db2c847508 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x55db2c8476c8 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x55db2c847568 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x55db2c8475e0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x55db2c847218 'name' 'String'
| | `-CXXConstructExpr 0x55db2c852048 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x55db2c852008 <col:20> 'const String' lvalue ParmVar 0x55db2c847568 'n' 'const String &'
| |-CXXCtorInitializer Field 0x55db2c847280 'nsig' 'int'
| | `-IntegerLiteral 0x55db2c8520a0 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x55db2c847478 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x55db2c852188 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55db2c847508 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x55db2c852148 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x55db2c852108 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x55db2c8475e0 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x55db2c852418 <col:42, line:289:9>
|   `-CallExpr 0x55db2c8523c8 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x55db2c8523b0 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55db2c852390 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x55db2c392c08 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x55db2c852400 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x55db2c8522d8 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x55db2c8522b8 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x55db2c8522a0 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55db2c852250 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x55db2c847478
|     |     |   `-CXXThisExpr 0x55db2c852240 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x55db2c852280 <col:25> 'int' 0
|     |-IntegerLiteral 0x55db2c8522f0 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x55db2c852370 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x55db2c852350 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x55db2c852320 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x55db2c847478 non_odr_use_unevaluated
|           `-CXXThisExpr 0x55db2c852310 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x55db2c8477a8 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55db2c8477a8
| `-ParmVarDecl 0x55db2c8478b8 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x55db2c847958 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55db2c847958
| `-ParmVarDecl 0x55db2c847a68 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x55db2c847b08 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55db2c847b08
| `-ParmVarDecl 0x55db2c847c18 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x55db2c847c88 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55db2c847c88
| `-ParmVarDecl 0x55db2c847d98 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x55db2c847e20 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x55db2c847e20

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c802430 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55db2c802548 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x55db2c8025d8 <col:21, col:27> col:21 public
|-EnumDecl 0x55db2c802600 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x55db2c802718 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x55db2c8026f8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55db2c8026e0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55db2c8026c0 <col:32> 'int' 1
| `-EnumConstantDecl 0x55db2c8027c0 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x55db2c8027a0 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55db2c802788 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55db2c802768 <col:53> 'int' 1000
|-CXXConstructorDecl 0x55db2c802870 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x55db2c802da8 <col:19, col:21>
|-CXXDestructorDecl 0x55db2c802960 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x55db2c802db8 <col:28, col:30>
|-CXXMethodDecl 0x55db2c802b20 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x55db2c802a50 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x55db2c802c28 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x55db2c802c28
  `-ParmVarDecl 0x55db2c802d38 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c803360 prev 0x55db2c7d7510 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55db2c803458 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x55db2c8034e8 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x55db2c803558 <line:28:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55db2c803618 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x55db2c8036d8 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x55db2c803798 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x55db2c803858 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x55db2c8038f8 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x55db2c803a58 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x55db2c803a38 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x55db2c803a18 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x55db2c8039e0 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x55db2c8039c0 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x55db2c8039f8 <col:42> 'int' 1
|-CXXMethodDecl 0x55db2c803af8 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x55db2c803c68 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x55db2c803ba8 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x55db2c803db0 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x55db2c803d20 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x55db2c803e78 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x55db2c8041a0 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x55db2c804268 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x55db2c8043e8 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x55db2c804320 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x55db2c8060f0 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x55db2c8062f8 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x55db2c8061a0 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x55db2c806220 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x55db2c806450 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x55db2c8063c0 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x55db2c8065a0 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x55db2c806510 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x55db2c8066f0 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x55db2c806660 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x55db2c806840 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x55db2c8067b0 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x55db2c806a10 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x55db2c806900 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x55db2c806978 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x55db2c806c18 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x55db2c806ad0 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x55db2c806b48 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55db2c84b6c0 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55db2c84b6a0 <col:60> 'int' 0
|-CXXMethodDecl 0x55db2c806ea8 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x55db2c806cd8 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x55db2c806d50 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x55db2c806dc8 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55db2c84b6f8 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55db2c84b6d8 <col:76> 'int' 0
|-CXXMethodDecl 0x55db2c807148 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x55db2c806f70 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x55db2c806fe8 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x55db2c807060 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55db2c84b730 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55db2c84b710 <col:84> 'int' 0
|-CXXMethodDecl 0x55db2c8074a0 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55db2c807210 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x55db2c807288 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x55db2c807308 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x55db2c8073a8 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55db2c807750 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55db2c807570 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x55db2c8075f0 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x55db2c807668 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55db2c8079b8 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x55db2c807818 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x55db2c807898 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x55db2c807910 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x55db2c807e70 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x55db2c807a80 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x55db2c807b00 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x55db2c807ba8 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x55db2c807d20 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x55db2c807f30 <col:115> "" ""
|-CXXMethodDecl 0x55db2c8082f0 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x55db2c807fb0 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x55db2c808030 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x55db2c8080a8 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x55db2c8081f0 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x55db2c8083b0 <col:113> "" ""
|-CXXMethodDecl 0x55db2c808500 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x55db2c808438 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x55db2c8086d0 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x55db2c8085c0 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x55db2c808638 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x55db2c8088d8 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x55db2c808790 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x55db2c808808 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x55db2c808cd8 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x55db2c808998 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x55db2c808a10 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x55db2c808a88 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55db2c808b08 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x55db2c808b80 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55db2c84b768 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55db2c84b748 <col:137> 'int' 0
|-CXXMethodDecl 0x55db2c8090e8 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x55db2c808db0 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x55db2c808e28 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x55db2c808ea0 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55db2c808f20 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x55db2c808f98 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55db2c84b7a0 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55db2c84b780 <col:139> 'int' 0
|-CXXMethodDecl 0x55db2c809598 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x55db2c8091c0 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x55db2c809238 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x55db2c8092b0 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55db2c809328 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55db2c8093a8 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x55db2c84b7d8 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x55db2c84b7b8 <col:133> 'int' 0
| `-ParmVarDecl 0x55db2c809428 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x55db2c84b810 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x55db2c84b7f0 <col:160> 'int' 0
|-CXXMethodDecl 0x55db2c809930 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55db2c809678 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x55db2c8096f0 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x55db2c809768 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55db2c8097e0 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55db2c84b848 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55db2c84b828 <col:116> 'int' 0
|-EnumDecl 0x55db2c8099f0 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x55db2c809af0 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x55db2c809b40 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55db2c809ad0 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x55db2c809ab0 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x55db2c809cc0 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x55db2c809b68 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x55db2c809be0 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x55db2c809ed8 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x55db2c809d80 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x55db2c809e00 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x55db2c80a208 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x55db2c809f98 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x55db2c80a0f0 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x55db2c80a390 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x55db2c80a2c8 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x55db2c80a510 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x55db2c80a448 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x55db2c80a720 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x55db2c80a5c8 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x55db2c80a648 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x55db2c80a8a8 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x55db2c80a7e0 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x55db2c80a9c8 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x55db2c80aab8 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x55db2c80ac28 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x55db2c80ab68 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x55db2c80adb0 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x55db2c80ace0 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x55db2c80afb8 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x55db2c80ae68 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x55db2c80aee8 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x55db2c80b0e8 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x55db2c80b1d8 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x55db2c80b298 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x55db2c80b498 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55db2c80b348 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x55db2c80b3c0 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55db2c84b8f8 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55db2c84b8e0 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x55db2c84b8c8 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55db2c84b8a8 <col:58, col:65> 'String' (CXXTemporary 0x55db2c84b8a8)
|           `-CXXTemporaryObjectExpr 0x55db2c84b870 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x55db2c80b668 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55db2c80b558 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x55db2c80b5d0 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55db2c84b9a8 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55db2c84b990 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x55db2c84b978 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55db2c84b958 <col:71, col:78> 'String' (CXXTemporary 0x55db2c84b958)
|           `-CXXTemporaryObjectExpr 0x55db2c84b920 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x55db2c80b838 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55db2c80b728 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x55db2c80b7a0 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55db2c84ba58 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55db2c84ba40 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x55db2c84ba28 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55db2c84ba08 <col:71, col:78> 'String' (CXXTemporary 0x55db2c84ba08)
|           `-CXXTemporaryObjectExpr 0x55db2c84b9d0 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x55db2c80ba08 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x55db2c80b8f8 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x55db2c80b970 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x55db2c84bb08 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55db2c84baf0 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x55db2c84bad8 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55db2c84bab8 <col:70, col:77> 'String' (CXXTemporary 0x55db2c84bab8)
|           `-CXXTemporaryObjectExpr 0x55db2c84ba80 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x55db2c80bb88 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x55db2c80bac8 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x55db2c80bda8 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x55db2c80bc40 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x55db2c80bcb8 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x55db2c80bea8 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x55db2c80bea8
|-CXXMethodDecl 0x55db2c80bfb0 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x55db2c80c070 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55db2c80c130 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x55db2c80c1f0 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x55db2c80c3e8 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x55db2c80c2a0 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x55db2c80c318 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x55db2c80c7a0 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x55db2c80c4a8 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x55db2c80c520 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x55db2c80c598 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x55db2c80c610 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x55db2c80c690 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x55db2c80cb00 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x55db2c80c880 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x55db2c80c900 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x55db2c80c980 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x55db2c80ca00 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x55db2c80cbe0 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x55db2c80cd20 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x55db2c80cc90 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x55db2c80ce70 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55db2c80cdd8 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55db2c80d078 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x55db2c80cf28 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x55db2c80cfa0 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55db2c80d1c8 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x55db2c80d138 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55db2c80d310 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x55db2c80d280 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x55db2c80d550 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x55db2c80d3d0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55db2c80d478 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x55db2c80d6d8 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x55db2c80d610 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x55db2c80d780 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55db2c80d898 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x55db2c80d940 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x55db2c80d9a8 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x55db2c80da60 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x55db2c84bb30 <col:16, line:150:9>
| |-CXXConstructorDecl 0x55db2c80dc38 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x55db2c80db20 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x55db2c80dba0 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x55db2c80d940 'idx' 'int'
| | | `-ImplicitCastExpr 0x55db2c84bb80 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x55db2c84bb40 <col:19> 'int' lvalue ParmVar 0x55db2c80db20 'i' 'int'
| | |-CXXCtorInitializer Field 0x55db2c80d9a8 'port' 'int'
| | | `-ImplicitCastExpr 0x55db2c84bc00 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x55db2c84bbc0 <col:28> 'int' lvalue ParmVar 0x55db2c80dba0 'p' 'int'
| | `-CompoundStmt 0x55db2c84bc50 <col:31, line:153:9>
| |-CXXMethodDecl 0x55db2c80de18 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55db2c80dd28 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55db2c84be50 <col:46, line:157:9>
| |   `-ReturnStmt 0x55db2c84be40 <line:156:13, col:46>
| |     `-BinaryOperator 0x55db2c84be20 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x55db2c84bd20 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x55db2c84bcf0 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55db2c84bc70 <col:20> 'const int' lvalue ->idx 0x55db2c80d940
| |       | |   `-CXXThisExpr 0x55db2c84bc60 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55db2c84bd08 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55db2c84bcc0 <col:27, col:29> 'const int' lvalue .idx 0x55db2c80d940
| |       |     `-DeclRefExpr 0x55db2c84bca0 <col:27> 'const Router::Port' lvalue ParmVar 0x55db2c80dd28 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x55db2c84be00 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x55db2c84bdd0 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x55db2c84bd50 <col:36> 'const int' lvalue ->port 0x55db2c80d9a8
| |         |   `-CXXThisExpr 0x55db2c84bd40 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x55db2c84bde8 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x55db2c84bda0 <col:44, col:46> 'const int' lvalue .port 0x55db2c80d9a8
| |             `-DeclRefExpr 0x55db2c84bd80 <col:44> 'const Router::Port' lvalue ParmVar 0x55db2c80dd28 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55db2c80df60 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55db2c80ded0 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55db2c84c058 <col:46, line:160:9>
| |   `-ReturnStmt 0x55db2c84c048 <line:159:13, col:46>
| |     `-BinaryOperator 0x55db2c84c028 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x55db2c84bf28 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x55db2c84bef8 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55db2c84be78 <col:20> 'const int' lvalue ->idx 0x55db2c80d940
| |       | |   `-CXXThisExpr 0x55db2c84be68 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55db2c84bf10 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55db2c84bec8 <col:27, col:29> 'const int' lvalue .idx 0x55db2c80d940
| |       |     `-DeclRefExpr 0x55db2c84bea8 <col:27> 'const Router::Port' lvalue ParmVar 0x55db2c80ded0 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x55db2c84c008 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x55db2c84bfd8 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x55db2c84bf58 <col:36> 'const int' lvalue ->port 0x55db2c80d9a8
| |         |   `-CXXThisExpr 0x55db2c84bf48 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x55db2c84bff0 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x55db2c84bfa8 <col:44, col:46> 'const int' lvalue .port 0x55db2c80d9a8
| |             `-DeclRefExpr 0x55db2c84bf88 <col:44> 'const Router::Port' lvalue ParmVar 0x55db2c80ded0 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55db2c810e60 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55db2c80e018 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x55db2c84c380 <col:45, line:163:9>
| |   `-ReturnStmt 0x55db2c84c370 <line:162:13, col:65>
| |     `-BinaryOperator 0x55db2c84c350 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x55db2c84c130 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x55db2c84c100 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55db2c84c080 <col:20> 'const int' lvalue ->idx 0x55db2c80d940
| |       | |   `-CXXThisExpr 0x55db2c84c070 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55db2c84c118 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55db2c84c0d0 <col:26, col:28> 'const int' lvalue .idx 0x55db2c80d940
| |       |     `-DeclRefExpr 0x55db2c84c0b0 <col:26> 'const Router::Port' lvalue ParmVar 0x55db2c80e018 'x' 'const Router::Port &'
| |       `-ParenExpr 0x55db2c84c330 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x55db2c84c310 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x55db2c84c210 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x55db2c84c1e0 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x55db2c84c160 <col:36> 'const int' lvalue ->idx 0x55db2c80d940
| |           | |   `-CXXThisExpr 0x55db2c84c150 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x55db2c84c1f8 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x55db2c84c1b0 <col:43, col:45> 'const int' lvalue .idx 0x55db2c80d940
| |           |     `-DeclRefExpr 0x55db2c84c190 <col:43> 'const Router::Port' lvalue ParmVar 0x55db2c80e018 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x55db2c84c2f0 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x55db2c84c2c0 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x55db2c84c240 <col:52> 'const int' lvalue ->port 0x55db2c80d9a8
| |             |   `-CXXThisExpr 0x55db2c84c230 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x55db2c84c2d8 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x55db2c84c290 <col:59, col:61> 'const int' lvalue .port 0x55db2c80d9a8
| |                 `-DeclRefExpr 0x55db2c84c270 <col:59> 'const Router::Port' lvalue ParmVar 0x55db2c80e018 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x55db2c810fa8 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x55db2c810f18 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x55db2c84c6a8 <col:46, line:166:9>
| |   `-ReturnStmt 0x55db2c84c698 <line:165:13, col:66>
| |     `-BinaryOperator 0x55db2c84c678 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x55db2c84c458 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x55db2c84c428 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55db2c84c3a8 <col:20> 'const int' lvalue ->idx 0x55db2c80d940
| |       | |   `-CXXThisExpr 0x55db2c84c398 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x55db2c84c440 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x55db2c84c3f8 <col:26, col:28> 'const int' lvalue .idx 0x55db2c80d940
| |       |     `-DeclRefExpr 0x55db2c84c3d8 <col:26> 'const Router::Port' lvalue ParmVar 0x55db2c810f18 'x' 'const Router::Port &'
| |       `-ParenExpr 0x55db2c84c658 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x55db2c84c638 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x55db2c84c538 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x55db2c84c508 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x55db2c84c488 <col:36> 'const int' lvalue ->idx 0x55db2c80d940
| |           | |   `-CXXThisExpr 0x55db2c84c478 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x55db2c84c520 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x55db2c84c4d8 <col:43, col:45> 'const int' lvalue .idx 0x55db2c80d940
| |           |     `-DeclRefExpr 0x55db2c84c4b8 <col:43> 'const Router::Port' lvalue ParmVar 0x55db2c810f18 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x55db2c84c618 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x55db2c84c5e8 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x55db2c84c568 <col:52> 'const int' lvalue ->port 0x55db2c80d9a8
| |             |   `-CXXThisExpr 0x55db2c84c558 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x55db2c84c600 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x55db2c84c5b8 <col:60, col:62> 'const int' lvalue .port 0x55db2c80d9a8
| |                 `-DeclRefExpr 0x55db2c84c598 <col:60> 'const Router::Port' lvalue ParmVar 0x55db2c810f18 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x55db2c84c6c0 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x55db2c84c6c0
| | `-ParmVarDecl 0x55db2c84c7d8 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x55db2c84c878 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x55db2c84c878
| | `-ParmVarDecl 0x55db2c84c988 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x55db2c84ca20 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55db2c84ccf0 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x55db2c84ccf0
| | `-ParmVarDecl 0x55db2c8503c8 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x55db2c850438 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55db2c850548 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x55db2c850868 <col:12>
|     |-BinaryOperator 0x55db2c850708 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x55db2c8506c0 <col:12> 'int' lvalue ->idx 0x55db2c80d940
|     | | `-CXXThisExpr 0x55db2c8506b0 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x55db2c8506f0 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x55db2c850680 <col:12> 'int' xvalue .idx 0x55db2c80d940
|     |     `-CXXStaticCastExpr 0x55db2c850650 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x55db2c850620 <col:12> 'Router::Port' lvalue ParmVar 0x55db2c850548 '' 'Router::Port &&'
|     |-BinaryOperator 0x55db2c850810 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x55db2c8507c8 <col:12> 'int' lvalue ->port 0x55db2c80d9a8
|     | | `-CXXThisExpr 0x55db2c8507b8 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x55db2c8507f8 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x55db2c850788 <col:12> 'int' xvalue .port 0x55db2c80d9a8
|     |     `-CXXStaticCastExpr 0x55db2c850758 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x55db2c850728 <col:12> 'Router::Port' lvalue ParmVar 0x55db2c850548 '' 'Router::Port &&'
|     `-ReturnStmt 0x55db2c850858 <col:12>
|       `-UnaryOperator 0x55db2c850840 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55db2c850830 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x55db2c811068 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55db2c811188 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x55db2c811378 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x55db2c811430 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x55db2c811378 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x55db2c84c9f8 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x55db2c84cb30 <col:22, line:173:9>
| |-CXXConstructorDecl 0x55db2c811768 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x55db2c8114f0 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x55db2c811570 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x55db2c8115f0 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x55db2c811670 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x55db2c811378 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x55db2c84cb40 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x55db2c850b48 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x55db2c850938 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x55db2c850900 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x55db2c8508e8 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x55db2c8505d0 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x55db2c850438 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x55db2c84cc10 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x55db2c84cbf8 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x55db2c84cba8 <col:13> 'Router::Port [2]' lvalue ->p 0x55db2c811378
| |   |   | |   `-CXXThisExpr 0x55db2c84cb98 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x55db2c84cbd8 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x55db2c8505b8 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x55db2c84ccb0 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x55db2c84cc80 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x55db2c84cc40 <col:25> 'int' lvalue ParmVar 0x55db2c8115f0 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x55db2c84cc98 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x55db2c84cc60 <col:33> 'int' lvalue ParmVar 0x55db2c811670 'to_port' 'int'
| |   `-ExprWithCleanups 0x55db2c850b30 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x55db2c850af8 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55db2c850ae0 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x55db2c850ac0 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x55db2c850438 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x55db2c8509c8 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x55db2c8509b0 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x55db2c850960 <col:13> 'Router::Port [2]' lvalue ->p 0x55db2c811378
| |       | |   `-CXXThisExpr 0x55db2c850950 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x55db2c850990 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x55db2c850aa8 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x55db2c850a68 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x55db2c850a38 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x55db2c8509f8 <col:25> 'int' lvalue ParmVar 0x55db2c8114f0 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x55db2c850a50 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x55db2c850a18 <col:35> 'int' lvalue ParmVar 0x55db2c811570 'from_port' 'int'
| |-CXXMethodDecl 0x55db2c811938 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x55db2c811848 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x55db2c851108 <col:45, line:182:9>
| |   |-ParenExpr 0x55db2c850fe8 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x55db2c850fb8 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x55db2c850c88 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x55db2c850c58 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x55db2c850bc0 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x55db2c850ba8 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x55db2c850b68 <col:34> 'int' lvalue ParmVar 0x55db2c811848 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x55db2c850b88 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x55db2c850c38 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x55db2c850c20 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x55db2c850be0 <col:44> 'int' lvalue ParmVar 0x55db2c811848 'i' 'int'
| |   |   |     `-IntegerLiteral 0x55db2c850c00 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x55db2c850ce8 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x55db2c850cc8 <col:59> 'int' 0
| |   |   `-CallExpr 0x55db2c850f18 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x55db2c850f00 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x55db2c850ee0 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55db2c1ce940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x55db2c850f58 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55db2c850d58 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x55db2c850f70 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55db2c850d80 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x55db2c850f88 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x55db2c850db8 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x55db2c850fa0 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x55db2c850ec8 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x55db2c850eb0 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x55db2c850e58 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x55db2c8510f8 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x55db2c8510d8 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55db2c8510a8 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x55db2c851018 <col:20> 'Router::Port const[2]' lvalue ->p 0x55db2c811378
| |       |   `-CXXThisExpr 0x55db2c851008 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x55db2c8510c0 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x55db2c851048 <col:22> 'int' lvalue ParmVar 0x55db2c811848 'i' 'int'
| |-CXXMethodDecl 0x55db2c811ae8 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x55db2c8119f8 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x55db2c851680 <col:33, line:186:9>
| |   |-ParenExpr 0x55db2c8515a0 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x55db2c851570 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x55db2c851248 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x55db2c851218 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x55db2c851180 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x55db2c851168 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x55db2c851128 <col:34> 'int' lvalue ParmVar 0x55db2c8119f8 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x55db2c851148 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x55db2c8511f8 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x55db2c8511e0 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x55db2c8511a0 <col:44> 'int' lvalue ParmVar 0x55db2c8119f8 'i' 'int'
| |   |   |     `-IntegerLiteral 0x55db2c8511c0 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x55db2c8512a8 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x55db2c851288 <col:59> 'int' 0
| |   |   `-CallExpr 0x55db2c8514d0 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x55db2c8514b8 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x55db2c851498 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55db2c1ce940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x55db2c851510 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55db2c851318 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x55db2c851528 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x55db2c851340 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x55db2c851540 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x55db2c851378 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x55db2c851558 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x55db2c851480 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x55db2c851468 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x55db2c851418 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x55db2c851670 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x55db2c851650 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x55db2c851620 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x55db2c8515d0 <col:20> 'Router::Port [2]' lvalue ->p 0x55db2c811378
| |       |   `-CXXThisExpr 0x55db2c8515c0 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x55db2c851638 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x55db2c851600 <col:22> 'int' lvalue ParmVar 0x55db2c8119f8 'i' 'int'
| |-CXXMethodDecl 0x55db2c811c88 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x55db2c811bc8 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x55db2c851a58 <col:52, line:190:9>
| |   `-ReturnStmt 0x55db2c851a48 <line:189:13, col:51>
| |     `-BinaryOperator 0x55db2c851a28 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x55db2c851840 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x55db2c851828 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x55db2c8517e0 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55db2c80de18 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x55db2c851718 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x55db2c851700 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x55db2c8516b0 <col:20> 'Router::Port const[2]' lvalue ->p 0x55db2c811378
| |       | | |   `-CXXThisExpr 0x55db2c8516a0 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x55db2c8516e0 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x55db2c8517c0 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x55db2c8517a8 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x55db2c851758 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x55db2c811378
| |       |   |   `-DeclRefExpr 0x55db2c851738 <col:28> 'const Router::Connection' lvalue ParmVar 0x55db2c811bc8 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x55db2c851788 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x55db2c8519f0 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x55db2c8519d8 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x55db2c8519b8 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55db2c80de18 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x55db2c8518f0 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x55db2c8518d8 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x55db2c851888 <col:38> 'Router::Port const[2]' lvalue ->p 0x55db2c811378
| |         | |   `-CXXThisExpr 0x55db2c851878 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x55db2c8518b8 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x55db2c851998 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x55db2c851980 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x55db2c851930 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x55db2c811378
| |           |   `-DeclRefExpr 0x55db2c851910 <col:46> 'const Router::Connection' lvalue ParmVar 0x55db2c811bc8 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x55db2c851960 <col:50> 'int' 1
| `-CXXMethodDecl 0x55db2c811dd0 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x55db2c811d40 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x55db2c851ff0 <col:51, line:193:9>
|     `-ReturnStmt 0x55db2c851fe0 <line:192:13, col:69>
|       `-BinaryOperator 0x55db2c851fc0 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x55db2c851be8 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x55db2c851bd0 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x55db2c851bb0 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55db2c810e60 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x55db2c851ae8 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x55db2c851ad0 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x55db2c851a80 <col:20> 'Router::Port const[2]' lvalue ->p 0x55db2c811378
|         | | |   `-CXXThisExpr 0x55db2c851a70 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x55db2c851ab0 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x55db2c851b90 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x55db2c851b78 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x55db2c851b28 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x55db2c811378
|         |   |   `-DeclRefExpr 0x55db2c851b08 <col:27> 'const Router::Connection' lvalue ParmVar 0x55db2c811d40 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x55db2c851b58 <col:31> 'int' 0
|         `-ParenExpr 0x55db2c851fa0 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x55db2c851f80 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x55db2c851d98 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x55db2c851d80 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x55db2c851d60 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55db2c80de18 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x55db2c851c98 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x55db2c851c80 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x55db2c851c30 <col:38> 'Router::Port const[2]' lvalue ->p 0x55db2c811378
|             | | |   `-CXXThisExpr 0x55db2c851c20 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x55db2c851c60 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x55db2c851d40 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x55db2c851d28 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x55db2c851cd8 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x55db2c811378
|             |   |   `-DeclRefExpr 0x55db2c851cb8 <col:46> 'const Router::Connection' lvalue ParmVar 0x55db2c811d40 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x55db2c851d08 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x55db2c851f48 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x55db2c851f30 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55db2c851f10 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x55db2c810e60 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x55db2c851e48 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x55db2c851e30 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x55db2c851de0 <col:56> 'Router::Port const[2]' lvalue ->p 0x55db2c811378
|               | |   `-CXXThisExpr 0x55db2c851dd0 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x55db2c851e10 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x55db2c851ef0 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x55db2c851ed8 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x55db2c851e88 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x55db2c811378
|                 |   `-DeclRefExpr 0x55db2c851e68 <col:63> 'const Router::Connection' lvalue ParmVar 0x55db2c811d40 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x55db2c851eb8 <col:67> 'int' 1
|-AccessSpecDecl 0x55db2c811e90 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x55db2c811eb8 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x55db2c811f70 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x55db2c812030 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55db2c812080 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55db2c8120d0 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x55db2c812120 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x55db2c812170 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x55db2c8121c0 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x55db2c8122d8 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55db2c8122b8 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x55db2c8122a0 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x55db2c812280 <col:25> 'int' 2
| |-EnumConstantDecl 0x55db2c812380 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55db2c812360 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x55db2c812348 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x55db2c812328 <col:48> 'int' 1
| |-EnumConstantDecl 0x55db2c812410 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55db2c8123f0 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x55db2c8123d0 <col:71> 'int' 0
| |-EnumConstantDecl 0x55db2c8124a0 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x55db2c812480 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x55db2c812460 <col:30> 'int' 1
| `-EnumConstantDecl 0x55db2c812530 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x55db2c812510 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x55db2c8124f0 <col:50> 'int' 2
|-FieldDecl 0x55db2c812590 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x55db2c8125f0 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x55db2c812658 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x55db2c8126f8 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x55db2c8126d8 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x55db2c8126a8 <col:30> 'int' 1
|-FieldDecl 0x55db2c812798 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x55db2c812778 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x55db2c812748 <col:33> 'int' 1
|-FieldDecl 0x55db2c812838 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x55db2c812818 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x55db2c8127e8 <col:32> 'int' 1
|-FieldDecl 0x55db2c8128a0 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x55db2c812900 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x55db2c81d330 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x55db2c81d430 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55db2c81d530 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55db2c824430 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x55db2c824540 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x55db2c824590 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55db2c8246a8 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x55db2c824748 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x55db2c8247a8 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x55db2c824840 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55db2c824840
| | `-ParmVarDecl 0x55db2c824958 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x55db2c826f40 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55db2c826f40
| | `-ParmVarDecl 0x55db2c827058 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x55db2c8270f8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x55db2c8270f8
| | `-ParmVarDecl 0x55db2c827208 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x55db2c827278 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x55db2c827278
| | `-ParmVarDecl 0x55db2c827388 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x55db2c827410 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x55db2c827410
|-FieldDecl 0x55db2c833380 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x55db2c8333e0 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x55db2c8334f0 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x55db2c833848 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x55db2c833950 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55db2c83d030 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x55db2c83d140 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x55db2c83d240 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55db2c83d350 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55db2c83d460 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55db2c83d570 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55db2c83d680 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x55db2c83d6d0 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x55db2c83d7d0 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x55db2c83d820 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55db2c83d7b0 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x55db2c83d790 <col:29> 'int' 256
|-FieldDecl 0x55db2c83d880 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x55db2c83d8e8 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x55db2c83d950 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x55db2c83da50 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55db2c846de0 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x55db2c846e40 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x55db2c846ea0 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x55db2c846ef0 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x55db2c847008 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x55db2c847098 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x55db2c8471a0 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x55db2c8471f0 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x55db2c847180 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x55db2c847160 <col:27> 'int' 4096
| |-FieldDecl 0x55db2c847218 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x55db2c847280 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x55db2c847478 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x55db2c847508 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x55db2c8476c8 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x55db2c847568 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x55db2c8475e0 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x55db2c847218 'name' 'String'
| | | `-CXXConstructExpr 0x55db2c852048 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x55db2c852008 <col:20> 'const String' lvalue ParmVar 0x55db2c847568 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x55db2c847280 'nsig' 'int'
| | | `-IntegerLiteral 0x55db2c8520a0 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x55db2c847478 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x55db2c852188 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x55db2c847508 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x55db2c852148 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x55db2c852108 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x55db2c8475e0 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x55db2c852418 <col:42, line:289:9>
| |   `-CallExpr 0x55db2c8523c8 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x55db2c8523b0 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55db2c852390 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x55db2c392c08 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x55db2c852400 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x55db2c8522d8 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x55db2c8522b8 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x55db2c8522a0 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x55db2c852250 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x55db2c847478
| |     |     |   `-CXXThisExpr 0x55db2c852240 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x55db2c852280 <col:25> 'int' 0
| |     |-IntegerLiteral 0x55db2c8522f0 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x55db2c852370 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x55db2c852350 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x55db2c852320 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x55db2c847478 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x55db2c852310 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x55db2c8477a8 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55db2c8477a8
| | `-ParmVarDecl 0x55db2c8478b8 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x55db2c847958 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55db2c847958
| | `-ParmVarDecl 0x55db2c847a68 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x55db2c847b08 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x55db2c847b08
| | `-ParmVarDecl 0x55db2c847c18 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x55db2c847c88 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x55db2c847c88
| | `-ParmVarDecl 0x55db2c847d98 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x55db2c847e20 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x55db2c847e20
|-FieldDecl 0x55db2c847f10 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x55db2c847f70 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x55db2c847fd0 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x55db2c848030 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x55db2c848090 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x55db2c8481a0 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55db2c8482a0 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x55db2c848300 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x55db2c848448 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x55db2c848388 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x55db2c8485f8 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x55db2c848508 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x55db2c848740 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x55db2c8486b0 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x55db2c848ae8 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x55db2c8487f8 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x55db2c848870 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x55db2c8488f0 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x55db2c848968 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x55db2c8489e0 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55db2c84bb20 <col:57> 'bool' false
|-CXXMethodDecl 0x55db2c848c58 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55db2c848bc0 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x55db2c848da8 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55db2c848d10 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x55db2c848ef8 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55db2c848e60 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x55db2c849050 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x55db2c848fb8 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x55db2c849370 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x55db2c849108 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x55db2c849180 <col:50> col:54 'bool'
| |-ParmVarDecl 0x55db2c849200 <col:56> col:59 'int'
| `-ParmVarDecl 0x55db2c849278 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x55db2c8494d8 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x55db2c849440 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x55db2c8495a0 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x55db2c849660 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x55db2c849860 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x55db2c849710 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x55db2c849788 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x55db2c849930 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x55db2c849a78 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x55db2c8499e0 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x55db2c852650 <col:42, line:326:5>
|   `-ReturnStmt 0x55db2c852640 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x55db2c852628 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x55db2c852608 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x55db2c8525d8 <col:16, col:45> '<bound member function type>' .back 0x55db2c744a08
|           `-ArraySubscriptExpr 0x55db2c852558 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x55db2c852528 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55db2c852440 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x55db2c833848
|             |   `-CXXThisExpr 0x55db2c852430 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x55db2c852540 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x55db2c852470 <col:38> 'bool' lvalue ParmVar 0x55db2c8499e0 'isout' 'bool'
|-CXXMethodDecl 0x55db2c849c48 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x55db2c849b30 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x55db2c849ba8 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x55db2c849da0 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x55db2c849d08 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x55db2c84a048 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x55db2c849e58 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x55db2c849ed0 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x55db2c849f50 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x55db2c84a220 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x55db2c84a110 <col:30> col:34 'bool'
| `-ParmVarDecl 0x55db2c84a188 <col:36> col:40 'bool'
|-CXXMethodDecl 0x55db2c84a3a8 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x55db2c84a2e8 <col:30> col:33 'int'
|-CXXMethodDecl 0x55db2c84a640 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x55db2c84a468 <col:23> col:26 'int'
| |-ParmVarDecl 0x55db2c84a4e0 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x55db2c84a558 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x55db2c84a858 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x55db2c84a708 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x55db2c84a780 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x55db2c84aa68 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x55db2c84a920 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x55db2c84a998 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x55db2c84abe8 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x55db2c84ab28 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x55db2c84ade8 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x55db2c84aca0 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x55db2c84ad18 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x55db2c84afc0 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55db2c84aea8 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x55db2c84af28 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x55db2c84b2a0 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55db2c84b080 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x55db2c84b0f8 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x55db2c84b178 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x55db2c84b1f0 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x55db2c84b380 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55db2c84b3e0 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x55db2c84b660 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x55db2c84b560 parent 0x55db2c694490 prev 0x55db2c6a40b8 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x55db2c84b440 <col:36> col:39 'int'
    `-ParmVarDecl 0x55db2c84b4c0 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c694490 prev 0x55db2c694210 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55db2c694588 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55db2c694618 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55db2c694678 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55db2c694768 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55db2c694868 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55db2c694a38 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55db2c6948e8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55db2c694960 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55db2c694bc8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55db2c694b00 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55db2c694c70 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55db2c694da8 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55db2c694ce0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55db2c694f48 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55db2c694e88 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55db2c6950e8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55db2c695028 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55db2c695190 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55db2c695290 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55db2c695370 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c695270 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55db2c695250 <col:26> 'int' 1
| `-EnumConstantDecl 0x55db2c695320 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55db2c695388 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55db2c695300 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55db2c6952e0 <col:44> 'int' 2
|-CXXMethodDecl 0x55db2c6954d0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55db2c6953b8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55db2c695438 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55db2c695628 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55db2c695598 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55db2c695868 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55db2c6956e8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55db2c695760 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55db2c695918 <col:20>
| `-OptimizeNoneAttr 0x55db2c695970 <col:30>
|-CXXMethodDecl 0x55db2c695a78 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55db2c6959b0 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55db2c695b20 <col:20>
| `-OptimizeNoneAttr 0x55db2c695b78 <col:30>
|-CXXMethodDecl 0x55db2c695bc8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55db2c695c90 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55db2c695da8 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55db2c695e30 <line:56:5, col:33> col:23 used PORTS_0_1 'const char []' static
|-VarDecl 0x55db2c695eb8 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55db2c695f40 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55db2c695fc8 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55db2c696058 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55db2c696118 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55db2c6961a0 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x55db2c696228 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55db2c6962b0 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55db2c696338 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55db2c6963c0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55db2c696450 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55db2c696510 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55db2c6965a0 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55db2c6966f0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55db2c696658 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55db2c696880 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55db2c6967b0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55db2c696b30 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55db2c696938 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55db2c6969b8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55db2c696a38 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55db2c696be8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55db2c696cf0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55db2c696f80 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c696cd0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55db2c696cb0 <col:33> 'int' 0
| |-EnumConstantDecl 0x55db2c696d80 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55db2c696f98 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c696d60 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55db2c696d40 <col:32> 'int' 20
| |-EnumConstantDecl 0x55db2c696e10 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55db2c696fb0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c696df0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55db2c696dd0 <col:38> 'int' 90
| |-EnumConstantDecl 0x55db2c696ea0 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55db2c696fc8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c696e80 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55db2c696e60 <col:35> 'int' 100
| `-EnumConstantDecl 0x55db2c696f30 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55db2c696fe0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55db2c696f10 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55db2c696ef0 <col:32> 'int' 2000
|-CXXMethodDecl 0x55db2c697020 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55db2c697460 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55db2c6972d0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55db2c697348 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55db2c697530 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55db2c6976b0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55db2c6975e0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55db2c6978b8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55db2c697768 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55db2c6977e0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55db2c6979b8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55db2c697a58 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55db2c697b20 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55db2c697bb0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55db2c697de0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c697b90 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55db2c697b70 <col:36> 'int' EnumConstant 0x55db2c697b20 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55db2c697c00 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55db2c697c50 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55db2c697ca0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55db2c697cf0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55db2c697d40 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55db2c697d90 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55db2c697ec8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55db2c697e08 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55db2c697f90 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55db2c698050 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55db2c698110 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55db2c6981d0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55db2c6982e8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55db2c6983b0 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x55db2c698530 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55db2c698460 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55db2c698658 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55db2c698858 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55db2c698708 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55db2c698788 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55db2c6a61a8 <col:54, line:127:5>
|   |-ParenExpr 0x55db2c6a6058 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55db2c6a6028 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55db2c6a5d18 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55db2c6a5cf0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55db2c6a5cd8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55db2c6a5cc0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55db2c6a5c90 <col:31> 'Router *' lvalue ->_router 0x55db2c6a3b70
|   |   |         `-CXXThisExpr 0x55db2c6a5c80 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55db2c6a5d78 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55db2c6a5d58 <col:48> 'int' 0
|   |   `-CallExpr 0x55db2c6a5f88 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55db2c6a5f70 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55db2c6a5f50 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55db2c1ce940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55db2c6a5fc8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c6a5de8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55db2c6a5fe0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c6a5e08 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55db2c6a5ff8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55db2c6a5e40 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55db2c6a6010 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55db2c6a5f38 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55db2c6a5f20 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55db2c6a5ed8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55db2c6a60f0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55db2c6a6088 <col:9> 'Router *' lvalue ->_router 0x55db2c6a3b70
|   | | `-CXXThisExpr 0x55db2c6a6078 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55db2c6a60d8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55db2c6a60b8 <col:19> 'Router *' lvalue ParmVar 0x55db2c698708 'r' 'Router *'
|   `-BinaryOperator 0x55db2c6a6188 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55db2c6a6120 <col:9> 'int' lvalue ->_eindex 0x55db2c6a3bd8
|     | `-CXXThisExpr 0x55db2c6a6110 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55db2c6a6170 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55db2c6a6150 <col:19> 'int' lvalue ParmVar 0x55db2c698788 'eindex' 'int'
|-CXXMethodDecl 0x55db2c6989e0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55db2c698918 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55db2c698ab0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55db2c698b78 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55db2c698c18 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55db2c698e68 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55db2c698ce0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55db2c698d60 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55db2c698f18 <col:20>
| `-OptimizeNoneAttr 0x55db2c698f70 <col:30>
|-CXXMethodDecl 0x55db2c699078 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55db2c698fb0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55db2c699120 <col:20>
| `-OptimizeNoneAttr 0x55db2c699178 <col:30>
|-CXXMethodDecl 0x55db2c699248 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55db2c6991b8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55db2c6992f0 <col:20>
| `-OptimizeNoneAttr 0x55db2c699348 <col:30>
|-CXXMethodDecl 0x55db2c6994d8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55db2c699380 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55db2c699400 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55db2c699668 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55db2c6995a0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55db2c6997b8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55db2c699728 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55db2c699908 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55db2c699878 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55db2c699a58 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55db2c6999c8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55db2c699d18 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55db2c699b10 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55db2c699b90 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55db2c699c38 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55db2c699df0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55db2c699eb0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55db2c69a180 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55db2c69a030 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55db2c69a0a8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55db2c69a2a8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55db2c69a480 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55db2c69a360 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55db2c69a3e0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55db2c69a668 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55db2c69a548 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55db2c69a5c8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55db2c69a9d8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55db2c69a728 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55db2c69a7a0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55db2c69a820 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55db2c6a5790 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55db2c6a5770 <col:106> 'int' 0
| `-ParmVarDecl 0x55db2c69a898 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55db2c6a57c8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55db2c6a57a8 <col:126> 'int' 0
|-CXXMethodDecl 0x55db2c69ad78 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55db2c69aaa8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55db2c69ab40 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55db2c69abc0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55db2c69ac38 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55db2c6a5800 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55db2c6a57e0 <col:114> 'int' 0
|-CXXMethodDecl 0x55db2c69b108 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55db2c69ae50 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55db2c69aec8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55db2c69af48 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55db2c6a5818 <col:96> 'int' 0
| `-ParmVarDecl 0x55db2c69afc0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55db2c6a5858 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55db2c6a5838 <col:116> 'int' 0
|-CXXMethodDecl 0x55db2c69b488 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55db2c69b1d8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55db2c69b250 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55db2c69b2d0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55db2c6a5890 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55db2c6a5870 <col:109> 'int' 0
| `-ParmVarDecl 0x55db2c69b348 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55db2c6a58c8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55db2c6a58a8 <col:129> 'int' 0
|-CXXMethodDecl 0x55db2c69b808 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55db2c69b558 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55db2c69b5d0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55db2c69b650 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55db2c69b6c8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55db2c6a5900 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55db2c6a58e0 <col:117> 'int' 0
|-CXXMethodDecl 0x55db2c69bb98 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55db2c69b8e0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55db2c69b958 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55db2c69b9d8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55db2c6a5918 <col:99> 'int' 0
| `-ParmVarDecl 0x55db2c69ba50 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55db2c6a5958 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55db2c6a5938 <col:119> 'int' 0
|-CXXMethodDecl 0x55db2c69bfb8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55db2c69bc68 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55db2c69bce8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55db2c69bd60 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55db2c69bde0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55db2c6a5990 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55db2c6a5970 <col:108> 'int' 0
| `-ParmVarDecl 0x55db2c69be60 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55db2c6a59c8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55db2c6a59a8 <col:141> 'int' 0
|-CXXMethodDecl 0x55db2c69c3d8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55db2c69c090 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55db2c69c110 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55db2c69c188 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55db2c69c208 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55db2c69c288 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55db2c6a59e0 <col:121> 'int' 0
|-CXXMethodDecl 0x55db2c69c808 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55db2c69c4b8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55db2c69c538 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55db2c69c5b0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55db2c69c630 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55db2c6a5a00 <col:98> 'int' 0
| `-ParmVarDecl 0x55db2c69c6b0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55db2c6a5a20 <col:123> 'int' 0
|-CXXMethodDecl 0x55db2c69cad0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55db2c69c8e0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55db2c69c960 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55db2c69c9e0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55db2c6a5a40 <col:80> 'int' 0
|-EnumDecl 0x55db2c69cb88 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55db2c69cc90 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55db2c69cf20 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c69cc70 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55db2c69cc50 <col:42> 'int' 1
| |-EnumConstantDecl 0x55db2c69cd20 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55db2c69cf38 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c69cd00 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55db2c69cce0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55db2c69cdb0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55db2c69cf50 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c69cd90 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55db2c69cd70 <col:44> 'int' 4
| |-EnumConstantDecl 0x55db2c69ce40 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55db2c69cf68 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c69ce20 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55db2c69ce00 <col:36> 'int' 7
| `-EnumConstantDecl 0x55db2c69ced0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55db2c69cf80 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55db2c69ceb0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55db2c69ce90 <col:34> 'int' 6
|-CXXMethodDecl 0x55db2c69d238 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55db2c69cfa8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55db2c69d048 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55db2c69d0c8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55db2c69d140 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55db2c6a5af8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55db2c6a5ae0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55db2c6a5ac8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55db2c6a5aa8 <col:98, col:105> 'String' (CXXTemporary 0x55db2c6a5aa8)
|           `-CXXTemporaryObjectExpr 0x55db2c6a5a70 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55db2c69d4d8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55db2c69d308 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55db2c69d380 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55db2c69d3f8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55db2c6a5ba8 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55db2c6a5b90 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55db2c6a5b78 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55db2c6a5b58 <col:94, col:101> 'String' (CXXTemporary 0x55db2c6a5b58)
| |         `-CXXTemporaryObjectExpr 0x55db2c6a5b20 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55db2c6a6390 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55db2c6a6308 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55db2c6a62d8 <col:9> '<bound member function type>' ->add_task_handlers 0x55db2c69d238
|     | `-CXXThisExpr 0x55db2c6a62c8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55db2c6a6348 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55db2c6a6248 <col:27> 'Task *' lvalue ParmVar 0x55db2c69d308 'task' 'Task *'
|     |-ImplicitCastExpr 0x55db2c6a6360 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55db2c6a6268 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55db2c69d380 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55db2c6a6378 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55db2c6a6288 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55db2c69ced0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55db2c6a62a8 <col:62> 'const String' lvalue ParmVar 0x55db2c69d3f8 'prefix' 'const String &'
|-CXXMethodDecl 0x55db2c69d6e8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55db2c69d5a0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55db2c69d618 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55db2c6a5c58 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55db2c6a5c40 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55db2c6a5c28 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55db2c6a5c08 <col:70, col:77> 'String' (CXXTemporary 0x55db2c6a5c08)
| |         `-CXXTemporaryObjectExpr 0x55db2c6a5bd0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55db2c6a6568 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55db2c6a64e0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55db2c6a64b0 <col:9> '<bound member function type>' ->add_task_handlers 0x55db2c69d238
|     | `-CXXThisExpr 0x55db2c6a64a0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55db2c6a6520 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55db2c6a6420 <col:27> 'Task *' lvalue ParmVar 0x55db2c69d5a0 'task' 'Task *'
|     |-ImplicitCastExpr 0x55db2c6a6538 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55db2c6a6440 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55db2c6a6550 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55db2c6a6460 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55db2c69ced0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55db2c6a6480 <col:57> 'const String' lvalue ParmVar 0x55db2c69d618 'prefix' 'const String &'
|-CXXMethodDecl 0x55db2c69d9c8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55db2c69d7b0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55db2c69d830 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55db2c69d8a8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55db2c69dc78 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55db2c69da98 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55db2c69db18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55db2c69db98 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55db2c69df68 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55db2c69dd48 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55db2c69ddc8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55db2c69de40 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55db2c69e218 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55db2c69e038 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55db2c69e0b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55db2c69e138 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55db2c69e4c8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55db2c69e2e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55db2c69e368 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55db2c69e3e8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55db2c69e778 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55db2c69e598 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55db2c69e618 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55db2c69e690 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55db2c69ea28 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55db2c69e848 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55db2c69e8c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55db2c69e948 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55db2c69ed38 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55db2c69eb50 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55db2c69ebd0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55db2c69ec50 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55db2c69f018 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55db2c69ee08 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55db2c69ee88 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55db2c69ef30 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55db2c69f2f8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55db2c69f0e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55db2c69f168 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55db2c69f210 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55db2c69f560 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55db2c69f3c8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55db2c69f448 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55db2c69f4c0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55db2c69f808 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55db2c69f630 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55db2c69f6b0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55db2c69f728 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55db2c69fab8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55db2c69f8d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55db2c69f958 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55db2c69f9d8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55db2c69fd68 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55db2c69fb88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55db2c69fc08 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55db2c69fc80 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55db2c6a0018 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55db2c69fe38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55db2c69feb8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55db2c69ff30 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55db2c6a02e8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55db2c6a00e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55db2c6a0168 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55db2c6a0208 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55db2c6a0618 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55db2c6a03b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55db2c6a0438 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55db2c6a04b0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55db2c6a0528 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55db2c6a5c70 <col:93> 'bool' false
|-CXXMethodDecl 0x55db2c6a0800 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55db2c6a06e8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55db2c6a0768 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55db2c6a09d8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55db2c6a08c0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55db2c6a0940 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55db2c6a0cb8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55db2c6a0a98 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55db2c6a0b10 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55db2c6a0b90 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55db2c6a0c08 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55db2c6a0fa8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55db2c6a0d88 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55db2c6a0e00 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55db2c6a0e80 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55db2c6a0ef8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55db2c6a11e0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55db2c6a1080 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55db2c6a1100 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55db2c6a13c8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55db2c6a12a8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55db2c6a1328 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55db2c6a1478 prev 0x55db2c698c18 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55db2c6a1570 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55db2c6a1600 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55db2c6a1678 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55db2c6a1738 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55db2c6a1800 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55db2c6a1978 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55db2c6a18b0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55db2c6a1a20 <col:24>
| | `-OptimizeNoneAttr 0x55db2c6a1a78 <col:34>
| |-CXXMethodDecl 0x55db2c6a1ac0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55db2c6a1d78 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55db2c6a1b70 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55db2c6a1be8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55db2c6a1c68 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55db2c6a1e30 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55db2c6a1e68 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55db2c6a1ed0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55db2c6a1f58 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55db2c6a2278 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55db2c6a2010 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55db2c6a2088 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55db2c6a2100 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55db2c6a2180 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55db2c6a2390 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55db2c6a9d08 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55db2c6a9d08
| | `-ParmVarDecl 0x55db2c6a9e18 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55db2c6a9eb8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55db2c6a9eb8
| | `-ParmVarDecl 0x55db2c6a9fc8 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55db2c858018 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55db2c6a2408 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55db2c6a24a8 <col:38> "" ""
|-CXXMethodDecl 0x55db2c6a2538 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55db2c6a25d8 <col:44> "" ""
|-AccessSpecDecl 0x55db2c6a2648 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55db2c6a2670 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55db2c6a2770 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55db2c6a27c0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55db2c6a2750 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55db2c6a2730 <col:27> 'int' 4
|-FieldDecl 0x55db2c6a2878 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55db2c6a2a28 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55db2c6a2ae0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55db2c6a3b70 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55db2c6a3bd8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55db2c6a3d28 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55db2c6a3c68 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55db2c6a3ed8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55db2c6a3de8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55db2c6a40b8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55db2c6a3f98 <col:20> col:23 'int'
| `-ParmVarDecl 0x55db2c6a4018 <col:25> col:28 'int'
|-CXXMethodDecl 0x55db2c6a4360 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55db2c6a4180 <col:23> col:26 'int'
| |-ParmVarDecl 0x55db2c6a4200 <col:28> col:31 'int'
| `-ParmVarDecl 0x55db2c6a4278 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55db2c6a4418 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55db2c6a44e0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55db2c6a4530 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55db2c6a4580 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55db2c6a4760 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55db2c6a4610 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55db2c6a4688 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55db2c6a4a08 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55db2c6a4828 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55db2c6a48a8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55db2c6a4920 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55db2c6a4c28 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55db2c6a4ad8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55db2c6a4b58 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55db2c6a4f60 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55db2c6a4ce8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55db2c6a4d68 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55db2c6a4de0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55db2c6a4e60 <col:57> col:60 'int'
|-CXXMethodDecl 0x55db2c6a5148 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55db2c6a5030 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55db2c6a50b0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55db2c6a5298 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55db2c6a5208 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55db2c6a5618 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55db2c6a5358 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55db2c6a53d8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55db2c6a5450 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55db2c6a54d0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55db2c6a5730 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class TimedSource
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class Packet * _packet
       120 |   class Timestamp _interval
       120 |     union Timestamp::rep_t _t
       120 |       int64_t x
       128 |   int _limit
       132 |   int _count
       136 |   _Bool _active
       137 |   _Bool _stop
       144 |   class Timer _timer
       144 |     int _schedpos1
       152 |     class Timestamp _expiry_s
       152 |       union Timestamp::rep_t _t
       152 |         int64_t x
       160 |     union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       160 |       TimerCallback callback
       168 |     void * _thunk
       176 |     class Element * _owner
       184 |     class RouterThread * _thread
       192 |   class String _data
       192 |     struct String::rep_t _r
       192 |       const char * data
       200 |       int length
       208 |       struct String::memo_t * memo
       216 |   uint32_t _headroom
           | [sizeof=224, dsize=220, align=8,
           |  nvsize=220, nvalign=8]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c66cb28 prev 0x55db2c661d30 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55db2c66cc20 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55db2c66cd10 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55db2c66ce38 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55db2c66cfb8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55db2c66d138 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55db2c66d2b8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55db2c67e0e8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55db2c67e958 <col:11>
|-CXXDestructorDecl 0x55db2c67e1c0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55db2c67e2f8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55db2c67e2f8
| `-ParmVarDecl 0x55db2c67e408 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55db2c67e4a8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55db2c67e4a8
| `-ParmVarDecl 0x55db2c67e5b8 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55db2c681378 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55db2c681488 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55db2c681708 <col:11>
|   `-ReturnStmt 0x55db2c6816f8 <col:11>
|     `-UnaryOperator 0x55db2c6816e0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55db2c6816d0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55db2c6814f8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55db2c6814f8
  `-ParmVarDecl 0x55db2c681608 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c66d320 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55db2c66d438 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55db2c66d4d8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55db2c66d540 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55db2c66d5a8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55db2c66d610 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55db2c66d670 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55db2c66d730 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55db2c66d790 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55db2c66d7f0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55db2c67dff8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55db2c66d4d8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55db2c67e968 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55db2c67e9c0 <col:12>
|-CXXConstructorDecl 0x55db2c67e628 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55db2c67e628
| `-ParmVarDecl 0x55db2c67e738 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55db2c67e7d8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55db2c67e7d8
| `-ParmVarDecl 0x55db2c67e8e8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55db2c680a60 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c65b440 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55db2c65b558 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55db2c65b5e8 <col:16, col:22> col:16 public
|-EnumDecl 0x55db2c65b610 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55db2c65b710 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55db2c65b7f0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c65b6f0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55db2c65b6d0 <col:21> 'int' 28
| `-EnumConstantDecl 0x55db2c65b7a0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55db2c65b808 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55db2c65b780 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55db2c65b760 <col:22> 'int' 64
|-CXXMethodDecl 0x55db2c65bb48 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55db2c65b830 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55db2c65b8b0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55db2c65b928 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55db2c65b9a0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55db2c65bc08 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55db2c65be08 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55db2c65bc80 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55db2c65bcf8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55db2c65beb8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55db2c65c018 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55db2c65bf28 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55db2c65c0c0 <col:72> warn_unused_result ""
|-TypedefDecl 0x55db2c65c420 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55db2c65c3b0 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55db2c65c350 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55db2c65c310 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55db2c12f2d0 'void'
|       |-PointerType 0x55db2c3db5c0 'unsigned char *'
|       | `-BuiltinType 0x55db2c12f3d0 'unsigned char'
|       |-TypedefType 0x55db2c1d7b30 'size_t' sugar
|       | |-Typedef 0x55db2c19fb20 'size_t'
|       | `-BuiltinType 0x55db2c12f430 'unsigned long'
|       `-PointerType 0x55db2c12fad0 'void *'
|         `-BuiltinType 0x55db2c12f2d0 'void'
|-CXXMethodDecl 0x55db2c65c898 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55db2c65c490 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55db2c65c508 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55db2c65c5a0 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55db2c65c620 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55db2c676f90 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55db2c676f78 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55db2c676f40 <col:58> 'int' 0
| |-ParmVarDecl 0x55db2c65c6a0 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55db2c676fb8 <col:76> 'int' 0
| |-ParmVarDecl 0x55db2c65c720 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55db2c676fd8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55db2c65c968 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55db2c65c9e8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55db2c65caa8 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55db2c65cb48 <col:20>
| `-OptimizeNoneAttr 0x55db2c65cba0 <col:30>
|-CXXMethodDecl 0x55db2c65cc18 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55db2c65ccb8 <col:20>
| `-OptimizeNoneAttr 0x55db2c65cd10 <col:30>
|-CXXMethodDecl 0x55db2c65cd88 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55db2c65ce28 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55db2c65ced8 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55db2c65cf78 <col:20>
| |-OptimizeNoneAttr 0x55db2c65cfd0 <col:30>
| `-WarnUnusedResultAttr 0x55db2c65cff8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55db2c65d050 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55db2c65d0f0 <col:20>
| `-OptimizeNoneAttr 0x55db2c65d148 <col:30>
|-CXXMethodDecl 0x55db2c65d198 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55db2c65d238 <col:20>
| `-OptimizeNoneAttr 0x55db2c65d290 <col:30>
|-CXXMethodDecl 0x55db2c65d2d8 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55db2c65d378 <col:20>
| `-OptimizeNoneAttr 0x55db2c65d3d0 <col:30>
|-CXXMethodDecl 0x55db2c65d418 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55db2c65d4d8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55db2c65d5a0 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55db2c65d668 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55db2c65d728 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55db2c65d848 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55db2c6770a0 <col:54, line:99:5>
|   `-ReturnStmt 0x55db2c677090 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55db2c677078 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55db2c677048 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55db2c66db28
|         `-CXXThisExpr 0x55db2c677038 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55db2c65d9e8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55db2c65d8f8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55db2c677150 <col:67, line:103:5>
|   `-BinaryOperator 0x55db2c677130 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55db2c6770c8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55db2c66db28
|     | `-CXXThisExpr 0x55db2c6770b8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55db2c677118 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55db2c6770f8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55db2c65d8f8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55db2c65dae0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55db2c6771d0 <col:33, line:107:5>
|   `-ReturnStmt 0x55db2c6771c0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55db2c6771a8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55db2c677178 <col:16> 'void *' lvalue ->_destructor_argument 0x55db2c66db90
|         `-CXXThisExpr 0x55db2c677168 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55db2c65dba0 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55db2c677800 <col:25, line:113:5>
|   |-ParenExpr 0x55db2c677548 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55db2c677518 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55db2c677288 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55db2c677260 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55db2c677228 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55db2c6771f8 <col:24> '<bound member function type>' ->shared 0x55db2c65cc18
|   |   |       `-ImplicitCastExpr 0x55db2c677248 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55db2c6771e8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55db2c6772e8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55db2c6772c8 <col:42> 'int' 0
|   |   `-CallExpr 0x55db2c677478 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55db2c677460 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55db2c677440 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55db2c1ce940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55db2c6774b8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c677358 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55db2c6774d0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c677380 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55db2c6774e8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55db2c6773b8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55db2c677500 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55db2c677428 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55db2c677410 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55db2c6773d8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55db2c677748 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55db2c677578 <col:2> 'unsigned char *' lvalue ->_head 0x55db2c66d930
|   | | `-CXXThisExpr 0x55db2c677568 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55db2c677730 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55db2c677710 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55db2c6775b8 <col:10> 'unsigned char *' lvalue ->_data 0x55db2c66d998
|   |     | `-CXXThisExpr 0x55db2c6775a8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55db2c6776f8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55db2c6776d8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55db2c6775f8 <col:18> 'unsigned char *' lvalue ->_tail 0x55db2c66da00
|   |         | `-CXXThisExpr 0x55db2c6775e8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55db2c6776c0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55db2c6776a0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55db2c677638 <col:26> 'unsigned char *' lvalue ->_end 0x55db2c66da68
|   |             | `-CXXThisExpr 0x55db2c677628 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55db2c677688 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55db2c677668 <col:33> 'int' 0
|   `-BinaryOperator 0x55db2c6777e0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55db2c677778 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55db2c66db28
|     | `-CXXThisExpr 0x55db2c677768 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55db2c6777c8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55db2c6777a8 <col:16> 'int' 0
|-CXXMethodDecl 0x55db2c65dce0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55db2c65dc50 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55db2c65dd88 <col:20>
| |-OptimizeNoneAttr 0x55db2c65dde0 <col:30>
| `-WarnUnusedResultAttr 0x55db2c65de08 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55db2c65ded8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55db2c65de48 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55db2c65df80 <col:20>
| |-OptimizeNoneAttr 0x55db2c65dfd8 <col:30>
| `-WarnUnusedResultAttr 0x55db2c65e000 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55db2c65e138 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55db2c65e040 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55db2c65e1e0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55db2c65e2e0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55db2c65e250 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55db2c65e388 <col:20>
| `-OptimizeNoneAttr 0x55db2c65e3e0 <col:30>
|-CXXMethodDecl 0x55db2c65e4a8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55db2c65e418 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55db2c65e550 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55db2c65e650 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55db2c65e5c0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55db2c65e6f8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55db2c65e7f8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55db2c65e768 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55db2c65e8a0 <col:20>
| `-OptimizeNoneAttr 0x55db2c65e8f8 <col:30>
|-CXXMethodDecl 0x55db2c65ea88 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55db2c65e938 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55db2c65e9b0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55db2c676ff8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55db2c65eb38 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55db2c65ed38 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55db2c65ebb0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55db2c65ec28 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55db2c65ef48 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55db2c65edf8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55db2c65ee70 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55db2c65f158 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55db2c65f008 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55db2c65f088 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55db2c677008 <col:39> 'int' 0
|-CXXMethodDecl 0x55db2c65f228 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55db2c65f2f0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55db2c65f3b8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55db2c65f478 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55db2c65f540 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55db2c65f688 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55db2c65f5f8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55db2c65f858 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55db2c65f748 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55db2c65f7c0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55db2c65f928 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55db2c65f9e8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55db2c65fa88 <col:20>
| `-OptimizeNoneAttr 0x55db2c65fae0 <col:30>
|-CXXMethodDecl 0x55db2c65fb30 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55db2c65fbd0 <col:20>
| `-OptimizeNoneAttr 0x55db2c65fc28 <col:30>
|-CXXMethodDecl 0x55db2c65fc78 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55db2c65fd38 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55db2c65fe00 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55db2c65fea0 <col:20>
| `-OptimizeNoneAttr 0x55db2c65fef8 <col:30>
|-CXXMethodDecl 0x55db2c660048 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55db2c65ff38 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55db2c65ffb0 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55db2c660198 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55db2c660108 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55db2c660270 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55db2c660330 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55db2c6603d0 <col:20>
| `-OptimizeNoneAttr 0x55db2c660428 <col:30>
|-CXXMethodDecl 0x55db2c660478 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55db2c660518 <col:20>
| `-OptimizeNoneAttr 0x55db2c660570 <col:30>
|-CXXMethodDecl 0x55db2c6605c0 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55db2c660688 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55db2c660728 <col:20>
| `-OptimizeNoneAttr 0x55db2c660780 <col:30>
|-CXXMethodDecl 0x55db2c6607c8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55db2c6608e8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55db2c660a58 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55db2c660998 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55db2c660b48 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55db2c660be8 <col:20>
| `-OptimizeNoneAttr 0x55db2c660c40 <col:30>
|-CXXMethodDecl 0x55db2c660c90 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55db2c660d50 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55db2c660f88 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55db2c660e00 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55db2c660e78 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55db2c661038 <col:20>
| `-OptimizeNoneAttr 0x55db2c661090 <col:30>
|-CXXMethodDecl 0x55db2c661138 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55db2c6611d8 <col:20>
| `-OptimizeNoneAttr 0x55db2c661230 <col:30>
|-CXXMethodDecl 0x55db2c661280 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55db2c661320 <col:20>
| `-OptimizeNoneAttr 0x55db2c661378 <col:30>
|-CXXMethodDecl 0x55db2c6613c0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55db2c661460 <col:20>
| `-OptimizeNoneAttr 0x55db2c6614b8 <col:30>
|-CXXMethodDecl 0x55db2c6615b8 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55db2c6614f0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55db2c661660 <col:20>
| `-OptimizeNoneAttr 0x55db2c6616b8 <col:30>
|-CXXMethodDecl 0x55db2c661878 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55db2c6616f0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55db2c661768 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55db2c661928 <col:20>
| `-OptimizeNoneAttr 0x55db2c661980 <col:30>
|-CXXMethodDecl 0x55db2c661a28 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55db2c661b48 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55db2c661c68 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55db2c661d08 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55db2c661d30 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55db2c661e58 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55db2c661ef8 <col:20>
| `-OptimizeNoneAttr 0x55db2c661f50 <col:30>
|-CXXMethodDecl 0x55db2c661ff8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55db2c662098 <col:20>
| `-OptimizeNoneAttr 0x55db2c6620f0 <col:30>
|-AccessSpecDecl 0x55db2c662118 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55db2c662140 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55db2c662240 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55db2c662290 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55db2c662220 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55db2c662200 <col:14> 'int' 48
|-CXXMethodDecl 0x55db2c6622f8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55db2c662398 <col:20>
| `-OptimizeNoneAttr 0x55db2c6623f0 <col:30>
|-CXXMethodDecl 0x55db2c662468 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55db2c662508 <col:20>
| `-OptimizeNoneAttr 0x55db2c662560 <col:30>
|-CXXMethodDecl 0x55db2c662628 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55db2c662598 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55db2c6627c8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55db2c662968 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55db2c662878 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55db2c662a10 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55db2c662b10 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55db2c662ec0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c662af0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55db2c662ad0 <col:9> 'int' 0
| |-EnumConstantDecl 0x55db2c662ba0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55db2c662ed8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c662b80 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55db2c662b60 <col:14> 'int' 1
| |-EnumConstantDecl 0x55db2c662c30 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55db2c662ef0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c662c10 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55db2c662bf0 <col:14> 'int' 2
| |-EnumConstantDecl 0x55db2c662cc0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55db2c662f08 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c662ca0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55db2c662c80 <col:14> 'int' 3
| |-EnumConstantDecl 0x55db2c662d50 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55db2c662f20 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c662d30 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55db2c662d10 <col:13> 'int' 4
| |-EnumConstantDecl 0x55db2c662de0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55db2c662f38 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c662dc0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55db2c662da0 <col:13> 'int' 5
| `-EnumConstantDecl 0x55db2c662e70 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55db2c662f50 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55db2c662e50 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55db2c662e30 <col:14> 'int' 6
|-CXXMethodDecl 0x55db2c662fb8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55db2c663058 <col:20>
| `-OptimizeNoneAttr 0x55db2c6630b0 <col:30>
|-CXXMethodDecl 0x55db2c6631a8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55db2c6630e8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55db2c663250 <col:20>
| `-OptimizeNoneAttr 0x55db2c6632a8 <col:30>
|-CXXMethodDecl 0x55db2c663318 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55db2c663440 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55db2c6635b8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55db2c6634f0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55db2c663680 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55db2c663748 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55db2c663888 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55db2c6637f8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55db2c663930 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55db2c663a30 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55db2c663c30 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c663a10 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55db2c6639f0 <col:23> 'int' 0
| |-EnumConstantDecl 0x55db2c663ac0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55db2c663c48 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c663aa0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55db2c663a80 <col:45> 'int' 4
| |-EnumConstantDecl 0x55db2c663b50 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55db2c663c60 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c663b30 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55db2c663b10 <col:24> 'int' 0
| `-EnumConstantDecl 0x55db2c663be0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55db2c663c78 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55db2c663bc0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55db2c663ba0 <col:47> 'int' 16
|-CXXMethodDecl 0x55db2c663cd8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55db2c663e48 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55db2c663d88 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55db2c663ef0 <col:20>
| `-OptimizeNoneAttr 0x55db2c663f48 <col:30>
|-CXXMethodDecl 0x55db2c663f98 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55db2c677920 <col:18, col:36>
|   `-ReturnStmt 0x55db2c677910 <col:20, col:33>
|     `-ImplicitCastExpr 0x55db2c6778f8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55db2c6778d8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55db2c6778a8 <col:27> '<bound member function type>' ->xanno 0x55db2c661ff8
|           `-CXXThisExpr 0x55db2c677898 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55db2c664090 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55db2c677a30 <col:30, col:48>
|   `-ReturnStmt 0x55db2c677a20 <col:32, col:45>
|     `-ImplicitCastExpr 0x55db2c677a08 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55db2c6779e8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55db2c6779b8 <col:39> '<bound member function type>' ->xanno 0x55db2c661e58
|           `-CXXThisExpr 0x55db2c6779a8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55db2c664178 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55db2c677bc8 <col:24, col:50>
|   `-ReturnStmt 0x55db2c677bb8 <col:26, col:47>
|     `-UnaryOperator 0x55db2c677ba0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55db2c677b80 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55db2c677b68 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55db2c677b18 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55db2c66ce38
|         |   `-CXXMemberCallExpr 0x55db2c677af8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55db2c677ac8 <col:34> '<bound member function type>' ->xanno 0x55db2c661ff8
|         |       `-CXXThisExpr 0x55db2c677ab8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55db2c677b48 <col:46> 'int' 0
|-CXXMethodDecl 0x55db2c664280 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55db2c677d98 <col:36, col:62>
|   `-ReturnStmt 0x55db2c677d88 <col:38, col:59>
|     `-UnaryOperator 0x55db2c677d70 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55db2c677d50 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55db2c677d38 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55db2c677cb0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55db2c66ce38
|         |   `-CXXMemberCallExpr 0x55db2c677c90 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55db2c677c60 <col:46> '<bound member function type>' ->xanno 0x55db2c661e58
|         |       `-CXXThisExpr 0x55db2c677c50 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55db2c677ce0 <col:58> 'int' 0
|-CXXMethodDecl 0x55db2c664398 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55db2c677f30 <col:26, col:53>
|   `-ReturnStmt 0x55db2c677f20 <col:28, col:50>
|     `-UnaryOperator 0x55db2c677f08 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55db2c677ee8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55db2c677ed0 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55db2c677e80 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55db2c66d138
|         |   `-CXXMemberCallExpr 0x55db2c677e60 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55db2c677e30 <col:36> '<bound member function type>' ->xanno 0x55db2c661ff8
|         |       `-CXXThisExpr 0x55db2c677e20 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55db2c677eb0 <col:49> 'int' 0
|-CXXMethodDecl 0x55db2c6644b8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55db2c678108 <col:38, col:65>
|   `-ReturnStmt 0x55db2c6780f8 <col:40, col:62>
|     `-UnaryOperator 0x55db2c6780e0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55db2c6780c0 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55db2c6780a8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55db2c678018 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55db2c66d138
|         |   `-CXXMemberCallExpr 0x55db2c677ff8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55db2c677fc8 <col:48> '<bound member function type>' ->xanno 0x55db2c661e58
|         |       `-CXXThisExpr 0x55db2c677fb8 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55db2c678048 <col:61> 'int' 0
|-CXXMethodDecl 0x55db2c664668 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55db2c664570 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55db2c6787d8 <col:34, line:463:5>
|   |-ParenExpr 0x55db2c678620 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55db2c6785f0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55db2c678258 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55db2c678228 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55db2c678178 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55db2c678160 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55db2c678120 <col:23> 'int' lvalue ParmVar 0x55db2c664570 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55db2c678140 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55db2c678208 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55db2c6781d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55db2c678198 <col:33> 'int' lvalue ParmVar 0x55db2c664570 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55db2c6781f0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55db2c6781b8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55db2c662240 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55db2c6782b8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55db2c678298 <col:56> 'int' 0
|   |   `-CallExpr 0x55db2c678550 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55db2c678538 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55db2c678518 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55db2c1ce940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55db2c678590 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c6783a8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55db2c6785a8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c6783d8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55db2c6785c0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55db2c678410 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55db2c6785d8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55db2c678500 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55db2c6784e8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55db2c6784a8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55db2c6787c8 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55db2c6787b0 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55db2c678790 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55db2c678760 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55db2c678710 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55db2c66ce38
|         |   `-CXXMemberCallExpr 0x55db2c6786f0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55db2c6786c0 <col:9> '<bound member function type>' ->xanno 0x55db2c661e58
|         |       `-CXXThisExpr 0x55db2c6786b0 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55db2c678778 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55db2c678740 <col:21> 'int' lvalue ParmVar 0x55db2c664570 'i' 'int'
|-CXXMethodDecl 0x55db2c6648b8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55db2c664728 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55db2c6647a0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55db2c678e68 <col:40, line:472:5>
|   |-ParenExpr 0x55db2c678c80 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55db2c678c50 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55db2c678930 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55db2c678900 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55db2c678850 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55db2c678838 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55db2c6787f8 <col:23> 'int' lvalue ParmVar 0x55db2c664728 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55db2c678818 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55db2c6788e0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55db2c6788b0 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55db2c678870 <col:33> 'int' lvalue ParmVar 0x55db2c664728 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55db2c6788c8 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55db2c678890 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55db2c662240 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55db2c678990 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55db2c678970 <col:56> 'int' 0
|   |   `-CallExpr 0x55db2c678bb0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55db2c678b98 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55db2c678b78 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55db2c1ce940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55db2c678bf0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c678a00 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55db2c678c08 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c678a30 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55db2c678c20 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55db2c678a68 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55db2c678c38 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55db2c678b60 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55db2c678b48 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55db2c678b08 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55db2c678e48 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55db2c678df0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55db2c678dc0 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55db2c678d70 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55db2c66ce38
|     | |   `-CXXMemberCallExpr 0x55db2c678d50 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55db2c678d20 <col:2> '<bound member function type>' ->xanno 0x55db2c661ff8
|     | |       `-CXXThisExpr 0x55db2c678d10 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55db2c678dd8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55db2c678da0 <col:14> 'int' lvalue ParmVar 0x55db2c664728 'i' 'int'
|     `-ImplicitCastExpr 0x55db2c678e30 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55db2c678e10 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55db2c6647a0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55db2c664a78 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55db2c664980 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55db2c6795e8 <col:36, line:485:5>
|   |-ParenExpr 0x55db2c679350 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55db2c679320 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55db2c679000 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55db2c678fd0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55db2c678ee0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55db2c678ec8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55db2c678e88 <col:23> 'int' lvalue ParmVar 0x55db2c664980 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55db2c678ea8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55db2c678fb0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55db2c678f98 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55db2c678f00 <col:33> 'int' lvalue ParmVar 0x55db2c664980 'i' 'int'
|   |   |     `-BinaryOperator 0x55db2c678f78 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55db2c678f60 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55db2c678f20 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55db2c662240 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55db2c678f40 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55db2c679060 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55db2c679040 <col:60> 'int' 0
|   |   `-CallExpr 0x55db2c679280 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55db2c679268 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55db2c679248 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55db2c1ce940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55db2c6792c0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c6790d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55db2c6792d8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c679108 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55db2c6792f0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55db2c679140 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55db2c679308 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55db2c679230 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55db2c679218 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55db2c6791d8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55db2c6795d8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55db2c6795c0 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55db2c6795a8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55db2c679578 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55db2c679518 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55db2c6794e8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55db2c679460 <col:61, col:70> 'char const[48]' lvalue ->c 0x55db2c66cd10
|             |   `-CXXMemberCallExpr 0x55db2c679440 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55db2c679410 <col:61> '<bound member function type>' ->xanno 0x55db2c661e58
|             |       `-CXXThisExpr 0x55db2c679400 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55db2c679500 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55db2c679490 <col:74> 'int' lvalue ParmVar 0x55db2c664980 'i' 'int'
|-CXXMethodDecl 0x55db2c664cc8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55db2c664b38 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55db2c664bb0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55db2c679d38 <col:42, line:500:5>
|   |-ParenExpr 0x55db2c679ad0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55db2c679aa0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55db2c679780 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55db2c679750 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55db2c679660 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55db2c679648 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55db2c679608 <col:23> 'int' lvalue ParmVar 0x55db2c664b38 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55db2c679628 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55db2c679730 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55db2c679718 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55db2c679680 <col:33> 'int' lvalue ParmVar 0x55db2c664b38 'i' 'int'
|   |   |     `-BinaryOperator 0x55db2c6796f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55db2c6796e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55db2c6796a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55db2c662240 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55db2c6796c0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55db2c6797e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55db2c6797c0 <col:60> 'int' 0
|   |   `-CallExpr 0x55db2c679a00 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55db2c6799e8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55db2c6799c8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55db2c1ce940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55db2c679a40 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c679850 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55db2c679a58 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c679888 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55db2c679a70 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55db2c6798c0 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55db2c679a88 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55db2c6799b0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55db2c679998 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55db2c679958 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55db2c679d18 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55db2c679cc8 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55db2c679c98 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55db2c679c40 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55db2c679c10 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55db2c679bc0 <col:48, col:57> 'char [48]' lvalue ->c 0x55db2c66cd10
|     |     |   `-CXXMemberCallExpr 0x55db2c679ba0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55db2c679b70 <col:48> '<bound member function type>' ->xanno 0x55db2c661ff8
|     |     |       `-CXXThisExpr 0x55db2c679b60 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55db2c679c28 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55db2c679bf0 <col:61> 'int' lvalue ParmVar 0x55db2c664b38 'i' 'int'
|     `-ImplicitCastExpr 0x55db2c679d00 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55db2c679ce0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55db2c664bb0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55db2c664e88 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55db2c664d90 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55db2c67a498 <col:35, line:513:5>
|   |-ParenExpr 0x55db2c67a1a8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55db2c67a178 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55db2c679ed0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55db2c679ea0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55db2c679db0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55db2c679d98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55db2c679d58 <col:23> 'int' lvalue ParmVar 0x55db2c664d90 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55db2c679d78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55db2c679e80 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55db2c679e68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55db2c679dd0 <col:33> 'int' lvalue ParmVar 0x55db2c664d90 'i' 'int'
|   |   |     `-BinaryOperator 0x55db2c679e48 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55db2c679e30 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55db2c679df0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55db2c662240 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55db2c679e10 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55db2c679f30 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55db2c679f10 <col:60> 'int' 0
|   |   `-CallExpr 0x55db2c67a0d8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55db2c67a0c0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55db2c67a0a0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55db2c1ce940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55db2c67a118 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c679fa0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55db2c67a130 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c679fd8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55db2c67a148 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55db2c67a010 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55db2c67a160 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55db2c67a088 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55db2c67a070 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55db2c67a030 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55db2c67a488 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55db2c67a470 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55db2c67a458 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55db2c67a428 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55db2c67a3a0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55db2c67a370 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55db2c67a320 <col:60, col:69> 'char const[48]' lvalue ->c 0x55db2c66cd10
|             |   `-CXXMemberCallExpr 0x55db2c67a300 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55db2c67a2d0 <col:60> '<bound member function type>' ->xanno 0x55db2c661e58
|             |       `-CXXThisExpr 0x55db2c67a2c0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55db2c67a388 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55db2c67a350 <col:73> 'int' lvalue ParmVar 0x55db2c664d90 'i' 'int'
|-CXXMethodDecl 0x55db2c6650d8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55db2c664f48 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55db2c664fc0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55db2c67abb8 <col:41, line:528:5>
|   |-ParenExpr 0x55db2c67a940 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55db2c67a910 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55db2c67a630 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55db2c67a600 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55db2c67a510 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55db2c67a4f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55db2c67a4b8 <col:23> 'int' lvalue ParmVar 0x55db2c664f48 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55db2c67a4d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55db2c67a5e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55db2c67a5c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55db2c67a530 <col:33> 'int' lvalue ParmVar 0x55db2c664f48 'i' 'int'
|   |   |     `-BinaryOperator 0x55db2c67a5a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55db2c67a590 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55db2c67a550 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55db2c662240 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55db2c67a570 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55db2c67a690 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55db2c67a670 <col:60> 'int' 0
|   |   `-CallExpr 0x55db2c67a870 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55db2c67a858 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55db2c67a838 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55db2c1ce940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55db2c67a8b0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c67a700 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55db2c67a8c8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c67a738 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55db2c67a8e0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55db2c67a770 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55db2c67a8f8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55db2c67a820 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55db2c67a808 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55db2c67a7c8 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55db2c67ab98 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55db2c67ab48 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55db2c67ab18 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55db2c67aac0 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55db2c67aa80 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55db2c67aa30 <col:47, col:56> 'char [48]' lvalue ->c 0x55db2c66cd10
|     |     |   `-CXXMemberCallExpr 0x55db2c67aa10 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55db2c67a9e0 <col:47> '<bound member function type>' ->xanno 0x55db2c661ff8
|     |     |       `-CXXThisExpr 0x55db2c67a9d0 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55db2c67aa98 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55db2c67aa60 <col:60> 'int' lvalue ParmVar 0x55db2c664f48 'i' 'int'
|     `-ImplicitCastExpr 0x55db2c67ab80 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55db2c67ab60 <col:65> 'int16_t':'short' lvalue ParmVar 0x55db2c664fc0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55db2c665298 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55db2c6651a0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55db2c67b288 <col:36, line:541:5>
|   |-ParenExpr 0x55db2c67b028 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55db2c67aff8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55db2c67ad50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55db2c67ad20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55db2c67ac30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55db2c67ac18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55db2c67abd8 <col:23> 'int' lvalue ParmVar 0x55db2c6651a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55db2c67abf8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55db2c67ad00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55db2c67ace8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55db2c67ac50 <col:33> 'int' lvalue ParmVar 0x55db2c6651a0 'i' 'int'
|   |   |     `-BinaryOperator 0x55db2c67acc8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55db2c67acb0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55db2c67ac70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55db2c662240 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55db2c67ac90 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55db2c67adb0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55db2c67ad90 <col:60> 'int' 0
|   |   `-CallExpr 0x55db2c67af58 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55db2c67af40 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55db2c67af20 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55db2c1ce940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55db2c67af98 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c67ae20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55db2c67afb0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c67ae58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55db2c67afc8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55db2c67ae90 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55db2c67afe0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55db2c67af08 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55db2c67aef0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55db2c67aeb0 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55db2c67b278 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55db2c67b260 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55db2c67b248 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55db2c67b218 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55db2c67b1c0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55db2c67b190 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55db2c67b140 <col:61, col:70> 'char const[48]' lvalue ->c 0x55db2c66cd10
|             |   `-CXXMemberCallExpr 0x55db2c67b120 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55db2c67b0f0 <col:61> '<bound member function type>' ->xanno 0x55db2c661e58
|             |       `-CXXThisExpr 0x55db2c67b0e0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55db2c67b1a8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55db2c67b170 <col:74> 'int' lvalue ParmVar 0x55db2c6651a0 'i' 'int'
|-CXXMethodDecl 0x55db2c665468 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55db2c665358 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55db2c6653d0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55db2c665518 <col:20>
| `-OptimizeNoneAttr 0x55db2c665570 <col:30>
|-CXXMethodDecl 0x55db2c6656a8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55db2c6655b0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55db2c67b958 <col:35, line:562:5>
|   |-ParenExpr 0x55db2c67b6f8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55db2c67b6c8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55db2c67b420 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55db2c67b3f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55db2c67b300 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55db2c67b2e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55db2c67b2a8 <col:23> 'int' lvalue ParmVar 0x55db2c6655b0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55db2c67b2c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55db2c67b3d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55db2c67b3b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55db2c67b320 <col:33> 'int' lvalue ParmVar 0x55db2c6655b0 'i' 'int'
|   |   |     `-BinaryOperator 0x55db2c67b398 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55db2c67b380 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55db2c67b340 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55db2c662240 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55db2c67b360 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55db2c67b480 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55db2c67b460 <col:60> 'int' 0
|   |   `-CallExpr 0x55db2c67b628 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55db2c67b610 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55db2c67b5f0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55db2c1ce940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55db2c67b668 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c67b4f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55db2c67b680 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c67b528 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55db2c67b698 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55db2c67b560 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55db2c67b6b0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55db2c67b5d8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55db2c67b5c0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55db2c67b580 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55db2c67b948 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55db2c67b930 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55db2c67b918 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55db2c67b8e8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55db2c67b890 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55db2c67b860 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55db2c67b810 <col:60, col:69> 'char const[48]' lvalue ->c 0x55db2c66cd10
|             |   `-CXXMemberCallExpr 0x55db2c67b7f0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55db2c67b7c0 <col:60> '<bound member function type>' ->xanno 0x55db2c661e58
|             |       `-CXXThisExpr 0x55db2c67b7b0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55db2c67b878 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55db2c67b840 <col:73> 'int' lvalue ParmVar 0x55db2c6655b0 'i' 'int'
|-CXXMethodDecl 0x55db2c6658b8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55db2c665768 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55db2c6657e0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55db2c67c038 <col:41, line:577:5>
|   |-ParenExpr 0x55db2c67bdc8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55db2c67bd98 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55db2c67baf0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55db2c67bac0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55db2c67b9d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55db2c67b9b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55db2c67b978 <col:23> 'int' lvalue ParmVar 0x55db2c665768 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55db2c67b998 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55db2c67baa0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55db2c67ba88 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55db2c67b9f0 <col:33> 'int' lvalue ParmVar 0x55db2c665768 'i' 'int'
|   |   |     `-BinaryOperator 0x55db2c67ba68 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55db2c67ba50 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55db2c67ba10 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55db2c662240 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55db2c67ba30 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55db2c67bb50 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55db2c67bb30 <col:60> 'int' 0
|   |   `-CallExpr 0x55db2c67bcf8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55db2c67bce0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55db2c67bcc0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55db2c1ce940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55db2c67bd38 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c67bbc0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55db2c67bd50 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c67bbf8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55db2c67bd68 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55db2c67bc30 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55db2c67bd80 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55db2c67bca8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55db2c67bc90 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55db2c67bc50 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55db2c67c018 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55db2c67bfc8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55db2c67bf98 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55db2c67bf38 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55db2c67bf08 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55db2c67beb8 <col:47, col:56> 'char [48]' lvalue ->c 0x55db2c66cd10
|     |     |   `-CXXMemberCallExpr 0x55db2c67be98 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55db2c67be68 <col:47> '<bound member function type>' ->xanno 0x55db2c661ff8
|     |     |       `-CXXThisExpr 0x55db2c67be58 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55db2c67bf20 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55db2c67bee8 <col:60> 'int' lvalue ParmVar 0x55db2c665768 'i' 'int'
|     `-ImplicitCastExpr 0x55db2c67c000 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55db2c67bfe0 <col:65> 'int32_t':'int' lvalue ParmVar 0x55db2c6657e0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55db2c665a78 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55db2c665980 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55db2c67c768 <col:36, line:591:5>
|   |-ParenExpr 0x55db2c67c4a8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55db2c67c478 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55db2c67c1d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55db2c67c1a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55db2c67c0b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55db2c67c098 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55db2c67c058 <col:23> 'int' lvalue ParmVar 0x55db2c665980 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55db2c67c078 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55db2c67c180 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55db2c67c168 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55db2c67c0d0 <col:33> 'int' lvalue ParmVar 0x55db2c665980 'i' 'int'
|   |   |     `-BinaryOperator 0x55db2c67c148 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55db2c67c130 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55db2c67c0f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55db2c662240 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55db2c67c110 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55db2c67c230 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55db2c67c210 <col:60> 'int' 0
|   |   `-CallExpr 0x55db2c67c3d8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55db2c67c3c0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55db2c67c3a0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55db2c1ce940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55db2c67c418 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c67c2a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55db2c67c430 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c67c2d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55db2c67c448 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55db2c67c310 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55db2c67c460 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55db2c67c388 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55db2c67c370 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55db2c67c330 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55db2c67c758 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55db2c67c740 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55db2c67c728 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55db2c67c6f8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55db2c67c670 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55db2c67c640 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55db2c67c5f0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55db2c66cd10
|             |   `-CXXMemberCallExpr 0x55db2c67c5d0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55db2c67c5a0 <col:61> '<bound member function type>' ->xanno 0x55db2c661e58
|             |       `-CXXThisExpr 0x55db2c67c590 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55db2c67c658 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55db2c67c620 <col:74> 'int' lvalue ParmVar 0x55db2c665980 'i' 'int'
|-CXXMethodDecl 0x55db2c665cc8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55db2c665b38 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55db2c665bb0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55db2c67ce48 <col:42, line:606:5>
|   |-ParenExpr 0x55db2c67cbd8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55db2c67cba8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55db2c67c900 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55db2c67c8d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55db2c67c7e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55db2c67c7c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55db2c67c788 <col:23> 'int' lvalue ParmVar 0x55db2c665b38 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55db2c67c7a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55db2c67c8b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55db2c67c898 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55db2c67c800 <col:33> 'int' lvalue ParmVar 0x55db2c665b38 'i' 'int'
|   |   |     `-BinaryOperator 0x55db2c67c878 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55db2c67c860 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55db2c67c820 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55db2c662240 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55db2c67c840 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55db2c67c960 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55db2c67c940 <col:60> 'int' 0
|   |   `-CallExpr 0x55db2c67cb08 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55db2c67caf0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55db2c67cad0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55db2c1ce940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55db2c67cb48 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c67c9d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55db2c67cb60 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c67ca08 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55db2c67cb78 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55db2c67ca40 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55db2c67cb90 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55db2c67cab8 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55db2c67caa0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55db2c67ca60 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55db2c67ce28 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55db2c67cdd8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55db2c67cda8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55db2c67cd48 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55db2c67cd18 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55db2c67ccc8 <col:48, col:57> 'char [48]' lvalue ->c 0x55db2c66cd10
|     |     |   `-CXXMemberCallExpr 0x55db2c67cca8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55db2c67cc78 <col:48> '<bound member function type>' ->xanno 0x55db2c661ff8
|     |     |       `-CXXThisExpr 0x55db2c67cc68 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55db2c67cd30 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55db2c67ccf8 <col:61> 'int' lvalue ParmVar 0x55db2c665b38 'i' 'int'
|     `-ImplicitCastExpr 0x55db2c67ce10 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55db2c67cdf0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55db2c665bb0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55db2c665e60 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55db2c665d90 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55db2c67d6b8 <col:33, line:620:5>
|   |-ParenExpr 0x55db2c67d430 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55db2c67d400 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55db2c67d050 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55db2c67d020 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55db2c67cec0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55db2c67cea8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55db2c67ce68 <col:23> 'int' lvalue ParmVar 0x55db2c665d90 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55db2c67ce88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55db2c67d000 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55db2c67cfe8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55db2c67cee0 <col:33> 'int' lvalue ParmVar 0x55db2c665d90 'i' 'int'
|   |   |     `-BinaryOperator 0x55db2c67cfc8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55db2c67cfb0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55db2c67cf00 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55db2c662240 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55db2c67cf88 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55db2c67cf70 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55db2c67cf38 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55db2c67d0b0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55db2c67d090 <col:79> 'int' 0
|   |   `-CallExpr 0x55db2c67d360 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55db2c67d348 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55db2c67d328 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55db2c1ce940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55db2c67d3a0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c67d198 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55db2c67d3b8 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c67d1e0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55db2c67d3d0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55db2c67d218 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55db2c67d3e8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55db2c67d310 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55db2c67d2f8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55db2c67d2b8 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55db2c67d6a8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55db2c67d690 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55db2c67d678 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55db2c67d648 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55db2c67d5c0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55db2c67d590 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55db2c67d540 <col:67, col:76> 'char const[48]' lvalue ->c 0x55db2c66cd10
|             |   `-CXXMemberCallExpr 0x55db2c67d520 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55db2c67d4f0 <col:67> '<bound member function type>' ->xanno 0x55db2c661e58
|             |       `-CXXThisExpr 0x55db2c67d4e0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55db2c67d5a8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55db2c67d570 <col:80> 'int' lvalue ParmVar 0x55db2c665d90 'i' 'int'
|-CXXMethodDecl 0x55db2c666078 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55db2c665f20 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55db2c665fa0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55db2c67dee0 <col:45, line:635:5>
|   |-ParenExpr 0x55db2c67dc28 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55db2c67dbf8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55db2c67d8c0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55db2c67d890 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55db2c67d730 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55db2c67d718 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55db2c67d6d8 <col:23> 'int' lvalue ParmVar 0x55db2c665f20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55db2c67d6f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55db2c67d870 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55db2c67d858 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55db2c67d750 <col:33> 'int' lvalue ParmVar 0x55db2c665f20 'i' 'int'
|   |   |     `-BinaryOperator 0x55db2c67d838 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55db2c67d820 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55db2c67d770 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55db2c662240 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55db2c67d7f8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55db2c67d7e0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55db2c67d7a8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55db2c67d920 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55db2c67d900 <col:79> 'int' 0
|   |   `-CallExpr 0x55db2c67db58 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55db2c67db40 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55db2c67db20 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55db2c1ce940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55db2c67db98 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c67d990 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55db2c67dbb0 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55db2c67d9d8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55db2c67dbc8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55db2c67da10 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55db2c67dbe0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55db2c67db08 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55db2c67daf0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55db2c67daa8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55db2c67dec0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55db2c67de28 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55db2c67ddf8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55db2c67dd98 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55db2c67dd68 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55db2c67dd18 <col:54, col:63> 'char [48]' lvalue ->c 0x55db2c66cd10
|     |     |   `-CXXMemberCallExpr 0x55db2c67dcf8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55db2c67dcc8 <col:54> '<bound member function type>' ->xanno 0x55db2c661ff8
|     |     |       `-CXXThisExpr 0x55db2c67dcb8 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55db2c67dd80 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55db2c67dd48 <col:67> 'int' lvalue ParmVar 0x55db2c665f20 'i' 'int'
|     `-CXXConstCastExpr 0x55db2c67de90 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55db2c67de78 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55db2c67de40 <col:91> 'const void *' lvalue ParmVar 0x55db2c665fa0 'x' 'const void *'
|-CXXMethodDecl 0x55db2c666148 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55db2c67df68 <col:34, line:640:5>
|   `-ReturnStmt 0x55db2c67df58 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55db2c67df40 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55db2c67df10 <col:16> 'Packet *' lvalue ->_data_packet 0x55db2c66d8c8
|         `-CXXThisExpr 0x55db2c67df00 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55db2c666288 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55db2c6661f8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55db2c677028 <col:46> 'bool' true
|-CXXMethodDecl 0x55db2c666408 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55db2c666340 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55db2c6664b0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55db2c666c60 <line:660:22> "" ""
| |-EnumConstantDecl 0x55db2c6665b0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55db2c666cd0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c666590 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55db2c666570 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55db2c65b710 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55db2c666640 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55db2c666ce8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c666620 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55db2c666600 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55db2c65b7a0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55db2c6666d0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55db2c666d00 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c6666b0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55db2c666690 <col:21> 'int' 0
| |-EnumConstantDecl 0x55db2c666760 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55db2c666d18 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c666740 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55db2c666720 <col:19> 'int' 16
| |-EnumConstantDecl 0x55db2c6667f0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55db2c666d30 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c6667d0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55db2c6667b0 <col:21> 'int' 16
| |-EnumConstantDecl 0x55db2c666880 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55db2c666d48 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c666860 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55db2c666840 <col:19> 'int' 32
| |-EnumConstantDecl 0x55db2c666910 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55db2c666d60 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c6668f0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55db2c6668d0 <col:19> 'int' EnumConstant 0x55db2c666760 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55db2c6669a0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55db2c666d78 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c666980 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55db2c666960 <col:19> 'int' EnumConstant 0x55db2c666880 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55db2c666a70 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55db2c666d90 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c666a50 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55db2c666a30 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55db2c6669f0 <col:23> 'int' EnumConstant 0x55db2c6669a0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55db2c666a10 <col:40> 'int' 2
| |-EnumConstantDecl 0x55db2c666b40 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55db2c666da8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c666b20 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55db2c666b00 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55db2c666ac0 <col:23> 'int' EnumConstant 0x55db2c6669a0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55db2c666ae0 <col:40> 'int' 4
| `-EnumConstantDecl 0x55db2c666c10 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55db2c666dc0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55db2c666bf0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55db2c666bd0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55db2c666b90 <col:23> 'int' EnumConstant 0x55db2c6669a0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55db2c666bb0 <col:40> 'int' 8
|-CXXMethodDecl 0x55db2c666e00 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55db2c666ea0 <col:68> "" ""
|-CXXMethodDecl 0x55db2c666f38 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55db2c666fd8 <col:45> "" ""
|-CXXMethodDecl 0x55db2c667070 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55db2c667110 <col:57> "" ""
|-CXXMethodDecl 0x55db2c6671a8 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55db2c667248 <col:45> "" ""
|-CXXMethodDecl 0x55db2c6672e0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55db2c667380 <col:57> "" ""
|-CXXMethodDecl 0x55db2c667410 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55db2c6674b0 <col:51> "" ""
|-CXXMethodDecl 0x55db2c667540 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55db2c6675e0 <col:63> "" ""
|-CXXMethodDecl 0x55db2c667670 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55db2c667710 <col:53> "" ""
|-CXXMethodDecl 0x55db2c6677a0 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55db2c667840 <col:65> "" ""
|-CXXMethodDecl 0x55db2c667958 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55db2c6678c8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55db2c667a00 <col:61> "" ""
|-CXXMethodDecl 0x55db2c667b98 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55db2c667a88 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55db2c667b00 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55db2c667c48 <col:67> "" ""
|-CXXMethodDecl 0x55db2c667d60 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55db2c667cd0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55db2c667e08 <col:63> "" ""
|-CXXMethodDecl 0x55db2c667fa0 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55db2c667e90 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55db2c667f08 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55db2c668050 <col:69> "" ""
|-CXXMethodDecl 0x55db2c668168 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55db2c6680d8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55db2c668210 <col:63> "" ""
|-CXXMethodDecl 0x55db2c66a8e8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55db2c66a7d8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55db2c66a850 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55db2c66a998 <col:69> "" ""
|-CXXMethodDecl 0x55db2c66aab0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55db2c66aa20 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55db2c66ab58 <col:62> "" ""
|-CXXMethodDecl 0x55db2c66acf0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55db2c66abe0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55db2c66ac58 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55db2c66ada0 <col:68> "" ""
|-CXXMethodDecl 0x55db2c66aeb8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55db2c66ae28 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55db2c66af60 <col:63> "" ""
|-CXXMethodDecl 0x55db2c66b0f8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55db2c66afe8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55db2c66b060 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55db2c66b1a8 <col:69> "" ""
|-CXXMethodDecl 0x55db2c66b238 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55db2c66b2d8 <col:64> "" ""
|-CXXMethodDecl 0x55db2c66b368 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55db2c66b408 <col:52> "" ""
|-CXXMethodDecl 0x55db2c66b498 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55db2c66b538 <col:67> "" ""
|-CXXMethodDecl 0x55db2c66b5c8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55db2c66b668 <col:55> "" ""
|-CXXMethodDecl 0x55db2c66b780 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55db2c66b6f0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55db2c66b828 <col:58> "" ""
|-CXXMethodDecl 0x55db2c66b9c0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55db2c66b8b0 <col:33> col:36 'int'
| |-ParmVarDecl 0x55db2c66b928 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55db2c66ba70 <col:62> "" ""
|-CXXMethodDecl 0x55db2c66bb88 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55db2c66baf8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55db2c66bc30 <col:58> "" ""
|-CXXMethodDecl 0x55db2c66bdc8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55db2c66bcb8 <col:33> col:36 'int'
| |-ParmVarDecl 0x55db2c66bd30 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55db2c66be78 <col:62> "" ""
|-CXXMethodDecl 0x55db2c66bf90 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55db2c66bf00 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55db2c66c038 <col:60> "" ""
|-CXXMethodDecl 0x55db2c66c1d0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55db2c66c0c0 <col:34> col:37 'int'
| |-ParmVarDecl 0x55db2c66c138 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55db2c66c280 <col:64> "" ""
|-CXXMethodDecl 0x55db2c66c398 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55db2c66c308 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55db2c66c440 <col:58> "" ""
|-CXXMethodDecl 0x55db2c66c5d8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55db2c66c4c8 <col:33> col:36 'int'
| |-ParmVarDecl 0x55db2c66c540 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55db2c66c688 <col:62> "" ""
|-CXXMethodDecl 0x55db2c66c7a0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55db2c66c710 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55db2c66c848 <col:59> "" ""
|-CXXMethodDecl 0x55db2c66c9e0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55db2c66c8d0 <col:33> col:36 'int'
| |-ParmVarDecl 0x55db2c66c948 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55db2c66ca90 <col:63> "" ""
|-AccessSpecDecl 0x55db2c66cb00 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55db2c66cb28 prev 0x55db2c661d30 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55db2c66cc20 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55db2c66cd10 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55db2c66ce38 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55db2c66cfb8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55db2c66d138 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55db2c66d2b8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55db2c67e0e8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55db2c67e958 <col:11>
| |-CXXDestructorDecl 0x55db2c67e1c0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55db2c67e2f8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55db2c67e2f8
| | `-ParmVarDecl 0x55db2c67e408 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55db2c67e4a8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55db2c67e4a8
| | `-ParmVarDecl 0x55db2c67e5b8 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55db2c681378 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55db2c681488 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55db2c681708 <col:11>
| |   `-ReturnStmt 0x55db2c6816f8 <col:11>
| |     `-UnaryOperator 0x55db2c6816e0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55db2c6816d0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55db2c6814f8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55db2c6814f8
|   `-ParmVarDecl 0x55db2c681608 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55db2c66d320 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55db2c66d438 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55db2c66d4d8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55db2c66d540 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55db2c66d5a8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55db2c66d610 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55db2c66d670 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55db2c66d730 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55db2c66d790 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55db2c66d7f0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55db2c67dff8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55db2c66d4d8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55db2c67e968 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55db2c67e9c0 <col:12>
| |-CXXConstructorDecl 0x55db2c67e628 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55db2c67e628
| | `-ParmVarDecl 0x55db2c67e738 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55db2c67e7d8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55db2c67e7d8
| | `-ParmVarDecl 0x55db2c67e8e8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55db2c680a60 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55db2c66d868 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55db2c66d8c8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55db2c66d930 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55db2c66d998 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55db2c66da00 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55db2c66da68 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55db2c66dac8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55db2c66db28 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55db2c66db90 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55db2c66dc18 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55db2c66d868 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55db2c67df90 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55db2c66dac8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55db2c67e9d0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55db2c67ea30 <col:21, line:755:5>
|-CXXConstructorDecl 0x55db2c66ddb8 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55db2c66dcf8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55db2c66deb0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55db2c66e098 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55db2c66dfa0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55db2c66e368 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55db2c66e150 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55db2c66e1c8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55db2c66e240 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55db2c66e588 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55db2c66e438 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55db2c66e4b0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55db2c676b68 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55db2c66e648 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55db2c66e6c0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55db2c66e738 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55db2c676cc0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55db2c676c30 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55db2c676e08 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55db2c676d78 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55db2c676f00 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c62cdc0 prev 0x55db2c623c00 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55db2c62ceb8 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x55db2c62cf58 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x55db2c633d20 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55db2c634108 <col:11>
|-CXXConstructorDecl 0x55db2c633e00 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55db2c633ee8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55db2c634850 <col:11>
|-CXXConstructorDecl 0x55db2c633f88 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55db2c634098 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x55db2c6360a8 <col:11>
|-CXXDestructorDecl 0x55db2c6353b8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55db2c33bd48 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55db2c33be58 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55db2c33c720 <col:11>
|   `-ReturnStmt 0x55db2c33c710 <col:11>
|     `-UnaryOperator 0x55db2c33c6f8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55db2c33c6e8 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x55db2c33bec8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55db2c33bfd8 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x55db2c6ca3e0 <col:11>
    `-ReturnStmt 0x55db2c6ca3d0 <col:11>
      `-UnaryOperator 0x55db2c6ca3b8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55db2c6ca3a8 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c622db8 prev 0x55db2c622ac8 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55db2c622eb0 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x55db2c622f40 <col:19, col:25> col:19 public
|-TypedefDecl 0x55db2c622f78 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x55db2c287f20 'int32_t' sugar
|   |-Typedef 0x55db2c198268 'int32_t'
|   `-TypedefType 0x55db2c1713b0 '__int32_t' sugar
|     |-Typedef 0x55db2c170fc8 '__int32_t'
|     `-BuiltinType 0x55db2c12f370 'int'
|-TypedefDecl 0x55db2c622fe0 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x55db2c2880e0 'int64_t' sugar
|   |-Typedef 0x55db2c1982d0 'int64_t'
|   `-TypedefType 0x55db2c1714d0 '__int64_t' sugar
|     |-Typedef 0x55db2c1710a8 '__int64_t'
|     `-BuiltinType 0x55db2c12f390 'long'
|-EnumDecl 0x55db2c623038 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x55db2c6231b0 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x55db2c623190 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x55db2c623168 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x55db2c623150 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x55db2c623120 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x55db2c6232a8 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x55db2c623288 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x55db2c623260 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x55db2c623248 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x55db2c623220 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x55db2c623200 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x55db2c6232f8 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x55db2c623400 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55db2c623950 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c6233e0 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x55db2c6233c0 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x55db2c623490 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55db2c623968 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c623470 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55db2c623450 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x55db2c623520 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55db2c623980 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c623500 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55db2c6234e0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55db2c6235b0 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55db2c623998 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c623590 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55db2c623570 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x55db2c623640 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55db2c6239b0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c623620 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55db2c623600 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55db2c6236d0 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55db2c6239c8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c6236b0 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x55db2c623690 <col:24> 'int' 1000
| |-EnumConstantDecl 0x55db2c623760 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55db2c6239e0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c623740 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x55db2c623720 <col:26> 'int' EnumConstant 0x55db2c623400 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x55db2c623830 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55db2c6239f8 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c623810 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x55db2c6237f0 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x55db2c6237b0 <col:27> 'int' EnumConstant 0x55db2c623760 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x55db2c6237d0 <col:44> 'int' EnumConstant 0x55db2c6236d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x55db2c623900 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x55db2c623a10 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55db2c6238e0 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x55db2c6238c0 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x55db2c623880 <col:27> 'int' EnumConstant 0x55db2c623760 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x55db2c6238a0 <col:44> 'int' EnumConstant 0x55db2c6235b0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x55db2c623a28 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x55db2c623b30 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x55db2c623b80 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55db2c623b10 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x55db2c623af0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c623760 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x55db2c623ba8 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x55db2c287b50 'uninitialized_type'
|   `-CXXRecord 0x55db2c287ab8 'uninitialized_type'
|-CXXRecordDecl 0x55db2c623c00 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x55db2c623d10 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x55db2c62df08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55db2c634118 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55db2c634238 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x55db2c6341f0 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x55db2c634180 <col:9> '<bound member function type>' ->assign 0x55db2c628958
|     | `-CXXThisExpr 0x55db2c634170 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55db2c6341b0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55db2c634220 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55db2c6341d0 <col:19> 'int' 0
|-CXXConstructorDecl 0x55db2c623f58 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x55db2c623dd0 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x55db2c623e48 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55db2c62fa50 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55db2c62fa30 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x55db2c62df08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55db2c634250 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55db2c6343a0 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x55db2c634328 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x55db2c6342b8 <col:9> '<bound member function type>' ->assign 0x55db2c628958
|     | `-CXXThisExpr 0x55db2c6342a8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55db2c634370 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55db2c634358 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55db2c6342e8 <col:16> 'long' lvalue ParmVar 0x55db2c623dd0 'sec' 'long'
|     `-ImplicitCastExpr 0x55db2c634388 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55db2c634308 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55db2c623e48 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55db2c6241b8 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55db2c624028 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x55db2c6240a0 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55db2c62fa88 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55db2c62fa68 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x55db2c62df08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55db2c6343b8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55db2c6344f0 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x55db2c634490 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x55db2c634420 <col:9> '<bound member function type>' ->assign 0x55db2c628958
|     | `-CXXThisExpr 0x55db2c634410 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55db2c6344c0 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55db2c634450 <col:16> 'int' lvalue ParmVar 0x55db2c624028 'sec' 'int'
|     `-ImplicitCastExpr 0x55db2c6344d8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55db2c634470 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55db2c6240a0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55db2c624418 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x55db2c624288 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x55db2c624300 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55db2c62fac0 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55db2c62faa0 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x55db2c62df08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55db2c634508 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55db2c634658 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x55db2c6345e0 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x55db2c634570 <col:9> '<bound member function type>' ->assign 0x55db2c628958
|     | `-CXXThisExpr 0x55db2c634560 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55db2c634628 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55db2c634610 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55db2c6345a0 <col:16> 'unsigned long' lvalue ParmVar 0x55db2c624288 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x55db2c634640 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55db2c6345c0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55db2c624300 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55db2c6255b0 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x55db2c6244e8 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x55db2c624560 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55db2c62faf8 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55db2c62fad8 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55db2c62df08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55db2c634670 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55db2c6347c0 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x55db2c634748 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x55db2c6346d8 <col:9> '<bound member function type>' ->assign 0x55db2c628958
|     | `-CXXThisExpr 0x55db2c6346c8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55db2c634790 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55db2c634778 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55db2c634708 <col:16> 'unsigned int' lvalue ParmVar 0x55db2c6244e8 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x55db2c6347a8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55db2c634728 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55db2c624560 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55db2c625710 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x55db2c625680 <col:31> col:37 'double'
|-CXXConstructorDecl 0x55db2c6258a8 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x55db2c6257e8 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x55db2c625ad8 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x55db2c6259e0 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x55db2c625c88 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x55db2c625bc8 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x55db2c62df08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55db2c634860 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x55db2c6347d8 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x55db2c625bc8 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55db2c6348c0 <col:19, line:214:5>
|-CXXConstructorDecl 0x55db2c625e58 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x55db2c625d98 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x55db2c62df08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55db2c6348d0 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55db2c634980 <col:53, line:219:5>
|   `-CStyleCastExpr 0x55db2c634958 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x55db2c634928 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x55db2c625d98 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x55db2c626048 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x55db2c625fc0 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x55db2c622b60 'Timestamp'
|   | `-CXXRecord 0x55db2c622db8 'Timestamp'
|   `-ParenType 0x55db2c625f60 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x55db2c625f30 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x55db2c623100 'Timestamp::seconds_type' sugar
|         |-Typedef 0x55db2c622f78 'seconds_type'
|         `-TypedefType 0x55db2c287f20 'int32_t' sugar
|           |-Typedef 0x55db2c198268 'int32_t'
|           `-TypedefType 0x55db2c1713b0 '__int32_t' sugar
|             |-Typedef 0x55db2c170fc8 '__int32_t'
|             `-BuiltinType 0x55db2c12f370 'int'
|-CXXConversionDecl 0x55db2c626188 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55db2c626258 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x55db2c634a88 <col:37, line:231:5>
|   `-ReturnStmt 0x55db2c634a78 <line:227:9, col:23>
|     `-BinaryOperator 0x55db2c634a58 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x55db2c634a28 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55db2c6349d8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55db2c62cf58
|       |   `-MemberExpr 0x55db2c6349a8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55db2c62df08
|       |     `-CXXThisExpr 0x55db2c634998 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55db2c634a40 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x55db2c634a08 <col:23> 'int' 0
|-CXXMethodDecl 0x55db2c626318 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x55db2c6263d8 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55db2c626498 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x55db2c626558 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x55db2c626618 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55db2c626788 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x55db2c6266c8 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x55db2c6268d0 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x55db2c626840 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55db2c626998 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55db2c626a38 <col:54> "" ""
|-CXXMethodDecl 0x55db2c626ac8 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55db2c626b68 <col:54> "" ""
|-CXXMethodDecl 0x55db2c626bf8 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55db2c626c98 <col:54> "" ""
|-CXXMethodDecl 0x55db2c626d98 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x55db2c626e68 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x55db2c626f98 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x55db2c627090 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x55db2c6271c8 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55db2c634ca0 <col:39, line:271:5>
|   `-ReturnStmt 0x55db2c634c90 <line:267:9, col:61>
|     `-CallExpr 0x55db2c634c30 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55db2c634c18 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55db2c634aa0 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55db2c62e238 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55db2c634c60 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55db2c634b00 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55db2c62cf58
|       |   `-MemberExpr 0x55db2c634ad0 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55db2c62df08
|       |     `-CXXThisExpr 0x55db2c634ac0 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55db2c634c78 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55db2c634ba0 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55db2c634b70 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55db2c634b30 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c623760 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55db2c634b88 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55db2c634b50 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c6236d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55db2c627288 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55db2c634e60 <col:39, line:279:5>
|   `-ReturnStmt 0x55db2c634e50 <line:275:9, col:61>
|     `-CallExpr 0x55db2c634df0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55db2c634dd8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55db2c634cb8 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55db2c62e238 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55db2c634e20 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55db2c634d18 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55db2c62cf58
|       |   `-MemberExpr 0x55db2c634ce8 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55db2c62df08
|       |     `-CXXThisExpr 0x55db2c634cd8 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55db2c634e38 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55db2c634db8 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55db2c634d88 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55db2c634d48 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c623760 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55db2c634da0 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55db2c634d68 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c6235b0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55db2c627348 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55db2c634ff8 <col:39, line:287:5>
|   `-ReturnStmt 0x55db2c634fe8 <line:283:9, col:53>
|     `-BinaryOperator 0x55db2c634fc8 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x55db2c634f98 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55db2c634eb8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55db2c62cf58
|       |   `-MemberExpr 0x55db2c634e88 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55db2c62df08
|       |     `-CXXThisExpr 0x55db2c634e78 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55db2c634fb0 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x55db2c634f78 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55db2c634f58 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55db2c634f28 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55db2c634ee8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c623400 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55db2c634f40 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55db2c634f08 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c623760 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55db2c627438 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55db2c636290 <col:40, line:293:5>
|   |-DeclStmt 0x55db2c635140 <line:291:9, col:48>
|   | `-VarDecl 0x55db2c635020 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55db2c635120 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55db2c6350c8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55db2c635098 <col:22> '<bound member function type>' ->subsec 0x55db2c6263d8
|   |     |   `-CXXThisExpr 0x55db2c635088 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55db2c635108 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55db2c6350e8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c623830 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55db2c636280 <line:292:9, col:70>
|     `-ExprWithCleanups 0x55db2c636268 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55db2c636238 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55db2c636220 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55db2c636200 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55db2c6361d0 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55db2c635f68 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55db2c635f50 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55db2c635158 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55db2c635020 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55db2c636170 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55db2c636158 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55db2c636128 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55db2c635f80 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55db2c635ef0 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55db2c635ed8 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55db2c635e88 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55db2c622d08 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55db2c635e28 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55db2c635188 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55db2c635178 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55db2c635e70 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55db2c635e58 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55db2c635648 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55db2c6351b0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55db2c635240 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55db2c635210 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55db2c6351d0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c623830 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55db2c635228 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55db2c6351f0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55db2c635020 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55db2c6361a0 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55db2c635f38 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55db2c635f28 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55db2c6274f8 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55db2c6367e8 <col:40, line:302:5>
|   |-DeclStmt 0x55db2c6363e0 <line:297:9, col:48>
|   | `-VarDecl 0x55db2c6362c0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55db2c6363c0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55db2c636368 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55db2c636338 <col:22> '<bound member function type>' ->subsec 0x55db2c6263d8
|   |     |   `-CXXThisExpr 0x55db2c636328 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55db2c6363a8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55db2c636388 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c623900 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55db2c6367d8 <line:298:9, col:70>
|     `-ExprWithCleanups 0x55db2c6367c0 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55db2c636790 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55db2c636778 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55db2c636758 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55db2c636728 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55db2c636650 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55db2c636638 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55db2c6363f8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55db2c6362c0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55db2c6366c8 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55db2c6366b0 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55db2c636680 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55db2c636668 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55db2c6365d8 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55db2c6365c0 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55db2c6365a0 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55db2c622d08 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55db2c636540 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55db2c636428 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55db2c636418 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55db2c636588 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55db2c636570 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55db2c636500 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55db2c636450 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55db2c6364e0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55db2c6364b0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55db2c636470 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c623900 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55db2c6364c8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55db2c636490 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55db2c6362c0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55db2c6366f8 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55db2c636620 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55db2c636610 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55db2c6275b8 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55db2c636870 <col:40, line:306:5>
|   `-ReturnStmt 0x55db2c636860 <line:305:9, col:17>
|     `-CXXConstructExpr 0x55db2c636830 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x55db2c636818 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55db2c636808 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x55db2c627758 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x55db2c627668 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55db2c627928 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x55db2c627830 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x55db2c627a18 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x55db2c627b88 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x55db2c627ac8 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x55db2c6369b8 <col:56, line:320:5>
|   `-ReturnStmt 0x55db2c6369a8 <line:319:9, col:32>
|     `-ExprWithCleanups 0x55db2c636990 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x55db2c636960 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55db2c636948 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55db2c636908 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55db2c6368d8 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55db2c636898 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55db2c627ac8 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x55db2c6368f0 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55db2c6368b8 <col:31> 'int' 0
|-CXXMethodDecl 0x55db2c627dc8 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55db2c627c40 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55db2c627cb8 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55db2c636b88 <col:72, line:326:5>
|   `-ReturnStmt 0x55db2c636b78 <line:325:9, col:51>
|     `-ExprWithCleanups 0x55db2c636b60 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55db2c636b30 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55db2c636b18 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55db2c636ad8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55db2c636ac0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55db2c6369e0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55db2c627c40 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55db2c636a80 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55db2c636a68 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55db2c636a00 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55db2c62c6b0 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55db2c636aa8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55db2c636a20 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55db2c627cb8 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55db2c627f78 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55db2c627e88 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55db2c637250 <col:56, line:337:5>
|   |-DeclStmt 0x55db2c636e88 <line:329:9, col:51>
|   | `-VarDecl 0x55db2c636bb0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55db2c636e70 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55db2c636e40 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55db2c636e28 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55db2c636e10 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55db2c636de0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55db2c636dc8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55db2c636db0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55db2c636ca0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55db2c637040 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55db2c636ef0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55db2c62cf58
|   | | `-MemberExpr 0x55db2c636ec0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55db2c62df08
|   | |   `-DeclRefExpr 0x55db2c636ea0 <col:9> 'Timestamp' lvalue Var 0x55db2c636bb0 't' 'Timestamp'
|   | `-BinaryOperator 0x55db2c637020 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55db2c636ff0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55db2c636f20 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55db2c627e88 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55db2c637008 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55db2c636fd0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55db2c636fb0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55db2c636f80 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55db2c636f40 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c623760 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55db2c636f98 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55db2c636f60 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c6236d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55db2c637238 <line:336:9, col:16>
|     `-CXXConstructExpr 0x55db2c637208 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55db2c6371f0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55db2c6371d0 <col:16> 'Timestamp' lvalue Var 0x55db2c636bb0 't' 'Timestamp'
|-CXXMethodDecl 0x55db2c628140 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55db2c628030 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55db2c6280a8 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55db2c637408 <col:72, line:343:5>
|   `-ReturnStmt 0x55db2c6373f8 <line:342:9, col:51>
|     `-ExprWithCleanups 0x55db2c6373e0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55db2c6373b0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55db2c637398 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55db2c637358 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55db2c637340 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55db2c637288 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55db2c628030 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55db2c637300 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55db2c6372e8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55db2c6372a8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55db2c62c7f8 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55db2c637328 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55db2c6372c8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55db2c6280a8 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55db2c628290 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55db2c628200 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55db2c637850 <col:56, line:354:5>
|   |-DeclStmt 0x55db2c6375f8 <line:346:9, col:51>
|   | `-VarDecl 0x55db2c637430 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55db2c6375e0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55db2c6375b0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55db2c637598 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55db2c637580 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55db2c637550 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55db2c637538 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55db2c637520 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55db2c6374f0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55db2c6377b0 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55db2c637660 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55db2c62cf58
|   | | `-MemberExpr 0x55db2c637630 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55db2c62df08
|   | |   `-DeclRefExpr 0x55db2c637610 <col:9> 'Timestamp' lvalue Var 0x55db2c637430 't' 'Timestamp'
|   | `-BinaryOperator 0x55db2c637790 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55db2c637760 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55db2c637690 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55db2c628200 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55db2c637778 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55db2c637740 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55db2c637720 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55db2c6376f0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55db2c6376b0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c623760 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55db2c637708 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55db2c6376d0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c6235b0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55db2c637838 <line:353:9, col:16>
|     `-CXXConstructExpr 0x55db2c637808 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55db2c6377f0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55db2c6377d0 <col:16> 'Timestamp' lvalue Var 0x55db2c637430 't' 'Timestamp'
|-CXXMethodDecl 0x55db2c628458 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55db2c628348 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55db2c6283c0 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55db2c637a08 <col:72, line:360:5>
|   `-ReturnStmt 0x55db2c6379f8 <line:359:9, col:51>
|     `-ExprWithCleanups 0x55db2c6379e0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55db2c6379b0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55db2c637998 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55db2c637958 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55db2c637940 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55db2c637888 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55db2c628348 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55db2c637900 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55db2c6378e8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55db2c6378a8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55db2c62c940 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55db2c637928 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55db2c6378c8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55db2c6283c0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55db2c6285a8 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55db2c628518 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55db2c644378 <col:56, line:371:5>
|   |-DeclStmt 0x55db2c637bf8 <line:363:9, col:51>
|   | `-VarDecl 0x55db2c637a30 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55db2c637be0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55db2c637bb0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55db2c637b98 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55db2c637b80 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55db2c637b50 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55db2c637b38 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55db2c637b20 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55db2c637af0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55db2c6442d8 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55db2c637c60 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55db2c62cf58
|   | | `-MemberExpr 0x55db2c637c30 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55db2c62df08
|   | |   `-DeclRefExpr 0x55db2c637c10 <col:9> 'Timestamp' lvalue Var 0x55db2c637a30 't' 'Timestamp'
|   | `-CallExpr 0x55db2c644278 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x55db2c644260 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x55db2c637c90 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55db2c62e238 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x55db2c6442a8 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55db2c637cb0 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x55db2c628518 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55db2c6442c0 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x55db2c644240 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x55db2c644210 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x55db2c637cd0 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c623400 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x55db2c644228 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x55db2c637cf0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c623760 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55db2c644360 <line:370:9, col:16>
|     `-CXXConstructExpr 0x55db2c644330 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55db2c644318 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55db2c6442f8 <col:16> 'Timestamp' lvalue Var 0x55db2c637a30 't' 'Timestamp'
|-CXXMethodDecl 0x55db2c628698 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x55db2c6444b8 <col:39, line:377:5>
|   `-ReturnStmt 0x55db2c6444a8 <line:376:9, col:30>
|     `-ExprWithCleanups 0x55db2c644490 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x55db2c644460 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55db2c644448 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55db2c644408 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x55db2c6443b0 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x55db2c6443f0 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55db2c6443d0 <col:29> 'int' 1
|-CXXMethodDecl 0x55db2c628758 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x55db2c644598 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x55db2c644550 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x55db2c6444e0 <col:9> '<bound member function type>' ->assign 0x55db2c628958
|     | `-CXXThisExpr 0x55db2c6444d0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55db2c644510 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55db2c644580 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55db2c644530 <col:19> 'int' 0
|-CXXMethodDecl 0x55db2c628958 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55db2c628808 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55db2c628880 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55db2c62fb30 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55db2c62fb10 <col:60> 'int' 0
| `-CompoundStmt 0x55db2c644790 <col:63, line:395:5>
|   `-BinaryOperator 0x55db2c644770 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x55db2c6445f0 <col:9, col:12> 'int64_t':'long' lvalue .x 0x55db2c62cf58
|     | `-MemberExpr 0x55db2c6445c0 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x55db2c62df08
|     |   `-CXXThisExpr 0x55db2c6445b0 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x55db2c644750 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x55db2c6446e0 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x55db2c644680 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x55db2c644668 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x55db2c644650 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x55db2c644620 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55db2c628808 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x55db2c6446c8 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x55db2c6446a8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c623760 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x55db2c644738 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x55db2c644720 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x55db2c644700 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55db2c628880 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55db2c628b28 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55db2c628a18 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55db2c628a90 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55db2c6448e8 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x55db2c6448a0 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x55db2c6447b8 <col:9> '<bound member function type>' ->assign 0x55db2c628958
|     | `-CXXThisExpr 0x55db2c6447a8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55db2c6448d0 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55db2c6447e8 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55db2c628a18 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55db2c644860 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55db2c644848 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55db2c644808 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55db2c62c7f8 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55db2c644888 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55db2c644828 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55db2c628a90 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55db2c628cf8 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55db2c628be8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55db2c628c60 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55db2c644a40 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x55db2c6449f8 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x55db2c644910 <col:9> '<bound member function type>' ->assign 0x55db2c628958
|     | `-CXXThisExpr 0x55db2c644900 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55db2c644a28 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55db2c644940 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55db2c628be8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55db2c6449b8 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55db2c6449a0 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55db2c644960 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55db2c62c940 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55db2c6449e0 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55db2c644980 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55db2c628c60 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55db2c628ec8 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55db2c628db8 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55db2c628e30 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55db2c62fb68 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55db2c62fb48 <col:57> 'int' 0
| `-DeprecatedAttr 0x55db2c628f78 <col:75> "" ""
|-CXXMethodDecl 0x55db2c629108 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55db2c628ff8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55db2c629070 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55db2c6291b8 <col:74> "" ""
|-CXXMethodDecl 0x55db2c629348 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55db2c629238 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55db2c6292b0 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55db2c6293f8 <col:74> "" ""
|-CXXMethodDecl 0x55db2c629488 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x55db2c629528 <col:42> "" ""
|-CXXMethodDecl 0x55db2c62bd60 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x55db2c62bc40 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55db2c62bcc0 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x55db2c62be30 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x55db2c62bef0 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x55db2c62bf90 <col:20>
| `-OptimizeNoneAttr 0x55db2c62bfe8 <col:30>
|-CXXMethodDecl 0x55db2c62c030 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x55db2c62c0f0 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x55db2c62c1b0 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55db2c62c270 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x55db2c62c330 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55db2c62c3f0 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x55db2c62c4b0 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55db2c62c570 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x55db2c62c6b0 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55db2c62c620 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55db2c644b88 <col:58, line:512:5>
|   `-ReturnStmt 0x55db2c644b78 <line:511:9, col:53>
|     `-BinaryOperator 0x55db2c644b58 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55db2c644b28 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55db2c644a58 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55db2c62c620 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55db2c644b40 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55db2c644b08 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55db2c644ae8 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55db2c644ab8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55db2c644a78 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c623760 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55db2c644ad0 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55db2c644a98 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c6236d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55db2c62c7f8 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55db2c62c768 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55db2c644cd0 <col:58, line:516:5>
|   `-ReturnStmt 0x55db2c644cc0 <line:515:9, col:53>
|     `-BinaryOperator 0x55db2c644ca0 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55db2c644c70 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55db2c644ba0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55db2c62c768 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55db2c644c88 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55db2c644c50 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55db2c644c30 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55db2c644c00 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55db2c644bc0 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c623760 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55db2c644c18 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55db2c644be0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c6235b0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55db2c62c940 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55db2c62c8b0 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55db2c644e18 <col:58, line:520:5>
|   `-ReturnStmt 0x55db2c644e08 <line:519:9, col:53>
|     `-BinaryOperator 0x55db2c644de8 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55db2c644db8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55db2c644ce8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55db2c62c8b0 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55db2c644dd0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55db2c644d98 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55db2c644d78 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55db2c644d48 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55db2c644d08 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c623400 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55db2c644d60 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55db2c644d28 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c623760 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55db2c62ca88 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55db2c62c9f8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55db2c644f60 <col:60, line:524:5>
|   `-ReturnStmt 0x55db2c644f50 <line:523:9, col:55>
|     `-BinaryOperator 0x55db2c644f30 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55db2c644f00 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55db2c644e30 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55db2c62c9f8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55db2c644f18 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55db2c644ee0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55db2c644ec0 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55db2c644e90 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55db2c644e50 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c623760 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55db2c644ea8 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55db2c644e70 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c6236d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55db2c62cbd0 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55db2c62cb40 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55db2c6450a8 <col:60, line:528:5>
|   `-ReturnStmt 0x55db2c645098 <line:527:9, col:55>
|     `-BinaryOperator 0x55db2c645078 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55db2c645048 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55db2c644f78 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55db2c62cb40 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55db2c645060 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55db2c645028 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55db2c645008 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55db2c644fd8 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55db2c644f98 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c623760 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55db2c644ff0 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55db2c644fb8 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c6235b0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55db2c62cd18 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55db2c62cc88 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55db2c6451f0 <col:60, line:532:5>
|   `-ReturnStmt 0x55db2c6451e0 <line:531:9, col:55>
|     `-BinaryOperator 0x55db2c6451c0 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55db2c645190 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55db2c6450c0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55db2c62cc88 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55db2c6451a8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55db2c645170 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55db2c645150 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55db2c645120 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55db2c6450e0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c623400 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55db2c645138 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55db2c645100 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55db2c623760 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x55db2c62cdc0 prev 0x55db2c623c00 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55db2c62ceb8 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x55db2c62cf58 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x55db2c633d20 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55db2c634108 <col:11>
| |-CXXConstructorDecl 0x55db2c633e00 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55db2c633ee8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55db2c634850 <col:11>
| |-CXXConstructorDecl 0x55db2c633f88 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x55db2c634098 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x55db2c6360a8 <col:11>
| |-CXXDestructorDecl 0x55db2c6353b8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55db2c33bd48 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55db2c33be58 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55db2c33c720 <col:11>
| |   `-ReturnStmt 0x55db2c33c710 <col:11>
| |     `-UnaryOperator 0x55db2c33c6f8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55db2c33c6e8 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x55db2c33bec8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55db2c33bfd8 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x55db2c6ca3e0 <col:11>
|     `-ReturnStmt 0x55db2c6ca3d0 <col:11>
|       `-UnaryOperator 0x55db2c6ca3b8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55db2c6ca3a8 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x55db2c62cfc0 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x55db2c62d0c0 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55db2c62d2c0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c62d0a0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55db2c62d080 <col:21> 'int' 0
| |-EnumConstantDecl 0x55db2c62d150 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55db2c62d2d8 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c62d130 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55db2c62d110 <col:23> 'int' 1
| |-EnumConstantDecl 0x55db2c62d1e0 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55db2c62d2f0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c62d1c0 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x55db2c62d1a0 <col:23> 'int' 2
| `-EnumConstantDecl 0x55db2c62d270 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x55db2c62d308 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55db2c62d250 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x55db2c62d230 <col:27> 'int' 3
|-CXXMethodDecl 0x55db2c62d348 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x55db2c62d410 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x55db2c62d618 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x55db2c62d4c0 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x55db2c62d540 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x55db2c62fb80 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x55db2c62d828 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x55db2c62d6d8 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x55db2c62d750 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x55db2c62d8f8 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x55db2c62d9b8 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x55db2c62db28 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x55db2c62da68 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x55db2c62dbf0 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55db2c62dcb0 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x55db2c62dd70 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55db2c62de30 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x55db2c62ded0 <line:670:3, col:10> col:3 private
|-FieldDecl 0x55db2c62df08 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x55db2c62df78 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x55db2c645208 <col:27, line:684:5>
|-CXXMethodDecl 0x55db2c62e038 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x55db2c645218 <col:27, line:696:5>
|-CXXMethodDecl 0x55db2c62e238 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55db2c62e0e8 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55db2c62e160 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55db2c6453a0 <col:66, line:700:5>
|   `-ReturnStmt 0x55db2c645390 <line:699:9, col:31>
|     `-CallExpr 0x55db2c645330 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x55db2c645318 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55db2c6452c8 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x55db2c4b05e8 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x55db2c645360 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x55db2c645288 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x55db2c62e0e8 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x55db2c645378 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55db2c6452a8 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x55db2c62e160 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55db2c62e5a8 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55db2c62e2f8 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x55db2c62e370 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x55db2c62e3e8 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55db2c62e460 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55db2c6456f0 <col:64, line:707:5>
|   |-DeclStmt 0x55db2c645430 <line:704:9, col:24>
|   | `-VarDecl 0x55db2c6453c8 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x55db2c645640 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x55db2c645448 <col:9> 'int32_t':'int' lvalue ParmVar 0x55db2c62e370 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x55db2c645628 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x55db2c6455c0 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x55db2c6455a8 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55db2c645528 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x55db2c4b58b8 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x55db2c6455f8 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55db2c6454c8 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x55db2c62e3e8 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x55db2c645610 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55db2c6454e8 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x55db2c62e460 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x55db2c645508 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x55db2c6453c8 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x55db2c6456d0 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x55db2c645660 <col:9> 'int32_t':'int' lvalue ParmVar 0x55db2c62e2f8 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x55db2c6456b8 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55db2c6456a0 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x55db2c645680 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x55db2c6453c8 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x55db2c62e848 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x55db2c62e678 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x55db2c62e6f0 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x55db2c62e768 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x55db2c62eae8 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x55db2c62e910 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x55db2c62e988 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x55db2c62ea00 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x55db2c62ec78 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x55db2c62ebb0 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x55db2c62ee78 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x55db2c62ed30 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x55db2c62eda8 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x55db2c62f148 <line:717:5, col:73> col:24
| `-FunctionDecl 0x55db2c62f088 parent 0x55db2c12f278 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55db2c62ef38 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x55db2c62efb0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55db2c62f368 <line:718:5, col:72> col:24
| `-FunctionDecl 0x55db2c62f2a8 parent 0x55db2c12f278 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55db2c62f198 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x55db2c62f210 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x55db2c62f530 <line:719:5, col:57> col:29
| `-FunctionDecl 0x55db2c62f478 parent 0x55db2c12f278 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x55db2c62f3b8 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x55db2c62f7b8 <line:720:5, col:73> col:30
| `-FunctionDecl 0x55db2c62f6f8 parent 0x55db2c12f278 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55db2c62f5a8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55db2c62f620 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55db2c62f9d8 <line:721:5, col:73> col:30
| `-FunctionDecl 0x55db2c62f918 parent 0x55db2c12f278 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55db2c62f808 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55db2c62f880 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x55db2c635260 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55db2c635348 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x55db2c62df08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55db2c635db8 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x55db2c635d70 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55db2c62df08
| |     `-DeclRefExpr 0x55db2c635d50 <col:7> 'const Timestamp' lvalue ParmVar 0x55db2c635348 '' 'const Timestamp &'
| `-CompoundStmt 0x55db2c635e18 <col:7>
|-CXXConstructorDecl 0x55db2c6354c8 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55db2c6355d8 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x55db2c62df08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55db2c6360b8 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x55db2c636060 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55db2c62df08
| |     `-CXXStaticCastExpr 0x55db2c636030 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x55db2c636000 <col:7> 'Timestamp' lvalue ParmVar 0x55db2c6355d8 '' 'Timestamp &&'
| `-CompoundStmt 0x55db2c636118 <col:7>
|-CXXDestructorDecl 0x55db2c635688 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55db2c33bb98 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55db2c33bca8 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x55db2c33c798 <col:7>
|   |-CXXMemberCallExpr 0x55db2c33c738 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x55db2c33c678 <col:7> '<bound member function type>' .operator= 0x55db2c33bd48
|   | | `-MemberExpr 0x55db2c33c588 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55db2c62df08
|   | |   `-CXXThisExpr 0x55db2c33c578 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x55db2c33c648 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55db2c62df08
|   |   `-DeclRefExpr 0x55db2c33c628 <col:7> 'const Timestamp' lvalue ParmVar 0x55db2c33bca8 '' 'const Timestamp &'
|   `-ReturnStmt 0x55db2c33c788 <col:7>
|     `-UnaryOperator 0x55db2c33c770 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55db2c33c760 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x55db2c33c048 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55db2c33c158 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x55db2c6ca458 <col:7>
    |-CXXMemberCallExpr 0x55db2c6ca3f8 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x55db2c6ca360 <col:7> '<bound member function type>' .operator= 0x55db2c33bec8
    | | `-MemberExpr 0x55db2c6ca230 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55db2c62df08
    | |   `-CXXThisExpr 0x55db2c6ca220 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x55db2c6ca330 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55db2c62df08
    |   `-CXXStaticCastExpr 0x55db2c6ca300 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x55db2c6ca2d0 <col:7> 'Timestamp' lvalue ParmVar 0x55db2c33c158 '' 'Timestamp &&'
    `-ReturnStmt 0x55db2c6ca448 <col:7>
      `-UnaryOperator 0x55db2c6ca430 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55db2c6ca420 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c6c7438 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55db2c6c7568 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x55db2c6c8058 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.13 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c789980 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55db2c789a98 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x55db2c789b68 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x55db2c789bc8 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x55db2c789c30 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x55db2c789cb8 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x55db2c789f20 <col:16, line:46:5>
|   |-BinaryOperator 0x55db2c789e68 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x55db2c789d88 <col:9> 'TaskLink *' lvalue ->_prev 0x55db2c789b68
|   | | `-CXXThisExpr 0x55db2c789d78 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x55db2c789e50 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x55db2c789e30 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x55db2c789dc8 <col:17> 'TaskLink *' lvalue ->_next 0x55db2c789bc8
|   |     | `-CXXThisExpr 0x55db2c789db8 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x55db2c789e18 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x55db2c789df8 <col:25> 'int' 0
|   `-BinaryOperator 0x55db2c789f00 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x55db2c789e98 <col:9> 'unsigned int' lvalue ->_pass 0x55db2c789c30
|     | `-CXXThisExpr 0x55db2c789e88 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x55db2c789ee8 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55db2c789ec8 <col:17> 'int' 0
|-CXXConstructorDecl 0x55db2c7f33e8 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x55db2c7f33e8
| `-ParmVarDecl 0x55db2c7f34f8 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x55db2c7f3598 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x55db2c7f3598
| `-ParmVarDecl 0x55db2c7f36a8 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x55db2c7f3898 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x55db2c7f3898
|-CXXMethodDecl 0x55db2c7f4098 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x55db2c7f4098
| `-ParmVarDecl 0x55db2c7f41a8 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x55db2c7f4218 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x55db2c7f4218
  `-ParmVarDecl 0x55db2c7f4328 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55db2c7908b8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x55db2c79ab60 prev 0x55db2c7908b8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55db2c79bd60 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x55db2c79bd10 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x55db2c79bcf0 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x55db2c79bba0 'type'
|     `-SubstTemplateTypeParmType 0x55db2c79b9c0 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x55db2c3f8550 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c3f84f8 'T'
|       `-RecordType 0x55db2c79b510 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x55db2c79b428 'sized_array_memory'
|-FieldDecl 0x55db2c79f990 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x55db2c79f9e0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55db2c79fa18 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x55db2c79abf0 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55db2c430408 'T'
|   `-RecordType 0x55db2c78fac0 'TimerSet::heap_element'
|     `-CXXRecord 0x55db2c78fa30 'heap_element'
|-TypedefDecl 0x55db2c79fad8 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x55db2c79faa0 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x55db2c79abf0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-RecordType 0x55db2c78fac0 'TimerSet::heap_element'
|       `-CXXRecord 0x55db2c78fa30 'heap_element'
|-TypedefDecl 0x55db2c79fb68 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55db2c79fb30 'const TimerSet::heap_element &'
|   `-QualType 0x55db2c79abf1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55db2c79abf0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-RecordType 0x55db2c78fac0 'TimerSet::heap_element'
|         `-CXXRecord 0x55db2c78fa30 'heap_element'
|-TypedefDecl 0x55db2c79fbf8 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x55db2c79fbc0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55db2c79abf0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-RecordType 0x55db2c78fac0 'TimerSet::heap_element'
|       `-CXXRecord 0x55db2c78fa30 'heap_element'
|-TypedefDecl 0x55db2c79fcb8 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x55db2c79fc80 'const TimerSet::heap_element *'
|   `-QualType 0x55db2c79abf1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55db2c79abf0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-RecordType 0x55db2c78fac0 'TimerSet::heap_element'
|         `-CXXRecord 0x55db2c78fa30 'heap_element'
|-TypedefDecl 0x55db2c7a0910 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x55db2c7a08c0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x55db2c7a08a0 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x55db2c7a07d8 'type'
|     `-LValueReferenceType 0x55db2c7a07a0 'const TimerSet::heap_element &'
|       `-QualType 0x55db2c7a0541 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x55db2c7a0540 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x55db2c402e40 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55db2c402de8 'T'
|           `-RecordType 0x55db2c78fac0 'TimerSet::heap_element'
|             `-CXXRecord 0x55db2c78fa30 'heap_element'
|-TypedefDecl 0x55db2c7a0978 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x55db2c79fb30 'const TimerSet::heap_element &'
|   `-QualType 0x55db2c79abf1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55db2c79abf0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-RecordType 0x55db2c78fac0 'TimerSet::heap_element'
|         `-CXXRecord 0x55db2c78fa30 'heap_element'
|-TypedefDecl 0x55db2c7a09d0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55db2c12f370 'int'
|-TypedefDecl 0x55db2c7a0a38 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x55db2c79fbc0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x55db2c79abf0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-RecordType 0x55db2c78fac0 'TimerSet::heap_element'
|       `-CXXRecord 0x55db2c78fa30 'heap_element'
|-TypedefDecl 0x55db2c7a0aa0 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x55db2c79fc80 'const TimerSet::heap_element *'
|   `-QualType 0x55db2c79abf1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x55db2c79abf0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-RecordType 0x55db2c78fac0 'TimerSet::heap_element'
|         `-CXXRecord 0x55db2c78fa30 'heap_element'
|-EnumDecl 0x55db2c7a0af8 <line:134:5> col:5
| `-EnumConstantDecl 0x55db2c7a0bf0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55db2c7a0bd0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55db2c431ae8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55db2c431ac0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55db2c431aa0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55db2c7a0c78 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55db2c7a0f08 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c7a0d30 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c7a0dd0 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x55db2c7a11c8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55db2c7a10b0 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x55db2c7a1488 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55db2c7a1370 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55db2c7a17d0 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55db2c7a16b0 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x55db2c7a1ae0 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x55db2c7a19c0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x55db2c7a1dd0 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c7a1c18 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c7a1c90 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55db2c7a1f28 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55db2c7a2008 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c7a2060 <col:30> Inherited
|-CXXMethodDecl 0x55db2c7a20a8 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x55db2c7a2158 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c7a21b0 <col:30> Inherited
|-CXXMethodDecl 0x55db2c7a2278 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55db2c7a2328 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c7a2380 <col:30> Inherited
|-CXXMethodDecl 0x55db2c7a23c8 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55db2c7a2478 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c7a24d0 <col:30> Inherited
|-CXXMethodDecl 0x55db2c7a2518 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55db2c7a25c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c7a2620 <col:30> Inherited
|-CXXMethodDecl 0x55db2c7a2668 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x55db2c7a2718 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c7a2770 <col:30> Inherited
|-CXXMethodDecl 0x55db2c7a2798 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55db2c7a2848 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55db2c7a28f8 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55db2c7a2ab8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c7a29a8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c7a2a20 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55db2c7a2c20 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c7a2b90 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c7a2dc8 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x55db2c7a2cd8 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55db2c7a2e80 <col:20>
| `-OptimizeNoneAttr 0x55db2c7a2ed8 <col:30>
|-CXXMethodDecl 0x55db2c7a2ff8 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x55db2c7a2f00 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55db2c7a30b0 <col:20>
| `-OptimizeNoneAttr 0x55db2c7a3108 <col:30>
|-CXXMethodDecl 0x55db2c7a31c0 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c7a3130 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c7a3308 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55db2c7a3278 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c7a3438 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55db2c7a3568 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55db2c7a3638 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x55db2c7a3708 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x55db2c7a3848 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c7a37b8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c7a3990 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55db2c7a3900 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c7a3ad8 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x55db2c7a3a48 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55db2c7a3b90 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55db2c7a3c90 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55db2c7a3c00 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55db2c7a3d48 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55db2c7a3e08 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x55db2c7a3f08 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x55db2c7a40b8 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55db2c7a3fc8 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x55db2c7a4878 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55db2c7a4170 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x55db2c7a47d8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x55db2c7a46d8 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x55db2c7a4958 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55db2c7a4aa8 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x55db2c7a4a18 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55db2c7a4b60 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55db2c7a4da8 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c7a4c20 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55db2c7a4c98 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x55db2c7a4f68 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x55db2c7a4e78 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55db2c7a51b8 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x55db2c7a5030 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x55db2c7a50a8 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x55db2c7a5278 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55db2c7a54d8 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x55db2c7a53e0 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x55db2c7a55a8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55db2c7a55a8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.14 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.14 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55db2c7a56f0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x55db2c7a58f8 prev 0x55db2c7a56f0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55db2c7a6a40 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55db2c7a69f0 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x55db2c7a69d0 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x55db2c7a6880 'type'
|     `-SubstTemplateTypeParmType 0x55db2c7a66a0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55db2c3f8550 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c3f84f8 'T'
|       `-RecordType 0x55db2c7a61f0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55db2c7a6108 'sized_array_memory'
|-FieldDecl 0x55db2c7aa670 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55db2c7aa6c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55db2c7aa6f8 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x55db2c7a5990 'Timer *' sugar
|   |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55db2c430408 'T'
|   `-PointerType 0x55db2c694ff0 'Timer *'
|     `-RecordType 0x55db2c694140 'Timer'
|       `-CXXRecord 0x55db2c6b1c68 'Timer'
|-TypedefDecl 0x55db2c7aa7b8 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x55db2c7aa780 'Timer *&'
|   `-SubstTemplateTypeParmType 0x55db2c7a5990 'Timer *' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-PointerType 0x55db2c694ff0 'Timer *'
|       `-RecordType 0x55db2c694140 'Timer'
|         `-CXXRecord 0x55db2c6b1c68 'Timer'
|-TypedefDecl 0x55db2c7aa878 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x55db2c7aa840 'Timer *const &'
|   `-QualType 0x55db2c7a5991 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55db2c7a5990 'Timer *' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-PointerType 0x55db2c694ff0 'Timer *'
|         `-RecordType 0x55db2c694140 'Timer'
|           `-CXXRecord 0x55db2c6b1c68 'Timer'
|-TypedefDecl 0x55db2c7aa938 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x55db2c7aa900 'Timer **'
|   `-SubstTemplateTypeParmType 0x55db2c7a5990 'Timer *' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-PointerType 0x55db2c694ff0 'Timer *'
|       `-RecordType 0x55db2c694140 'Timer'
|         `-CXXRecord 0x55db2c6b1c68 'Timer'
|-TypedefDecl 0x55db2c7aa9f8 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x55db2c7aa9c0 'Timer *const *'
|   `-QualType 0x55db2c7a5991 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55db2c7a5990 'Timer *' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-PointerType 0x55db2c694ff0 'Timer *'
|         `-RecordType 0x55db2c694140 'Timer'
|           `-CXXRecord 0x55db2c6b1c68 'Timer'
|-TypedefDecl 0x55db2c7ab600 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x55db2c7ab5b0 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x55db2c7ab590 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x55db2c7ab520 'type'
|     `-SubstTemplateTypeParmType 0x55db2c7ab2e0 'Timer *' sugar
|       |-TemplateTypeParmType 0x55db2c403570 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c403520 'T'
|       `-PointerType 0x55db2c694ff0 'Timer *'
|         `-RecordType 0x55db2c694140 'Timer'
|           `-CXXRecord 0x55db2c6b1c68 'Timer'
|-TypedefDecl 0x55db2c7ab668 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x55db2c7aa840 'Timer *const &'
|   `-QualType 0x55db2c7a5991 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55db2c7a5990 'Timer *' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-PointerType 0x55db2c694ff0 'Timer *'
|         `-RecordType 0x55db2c694140 'Timer'
|           `-CXXRecord 0x55db2c6b1c68 'Timer'
|-TypedefDecl 0x55db2c7ab6c0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55db2c12f370 'int'
|-TypedefDecl 0x55db2c7ab728 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x55db2c7aa900 'Timer **'
|   `-SubstTemplateTypeParmType 0x55db2c7a5990 'Timer *' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-PointerType 0x55db2c694ff0 'Timer *'
|       `-RecordType 0x55db2c694140 'Timer'
|         `-CXXRecord 0x55db2c6b1c68 'Timer'
|-TypedefDecl 0x55db2c7ab790 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x55db2c7aa9c0 'Timer *const *'
|   `-QualType 0x55db2c7a5991 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x55db2c7a5990 'Timer *' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-PointerType 0x55db2c694ff0 'Timer *'
|         `-RecordType 0x55db2c694140 'Timer'
|           `-CXXRecord 0x55db2c6b1c68 'Timer'
|-EnumDecl 0x55db2c7ab7e8 <line:134:5> col:5
| `-EnumConstantDecl 0x55db2c7ab8e0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55db2c7ab8c0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55db2c431ae8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55db2c431ac0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55db2c431aa0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55db2c7ab968 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55db2c7abbf8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c7aba20 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c7abac0 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x55db2c7abeb8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55db2c7abda0 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x55db2c7ac178 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55db2c7ac060 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55db2c7ac4c0 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55db2c7ac3a0 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x55db2c7ac7d0 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x55db2c7ac6b0 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x55db2c7acac0 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c7ac908 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c7ac980 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55db2c7acc18 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55db2c7accf8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c7acd50 <col:30> Inherited
|-CXXMethodDecl 0x55db2c7acd98 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x55db2c7ace48 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c7acea0 <col:30> Inherited
|-CXXMethodDecl 0x55db2c7acf68 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55db2c7ad018 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c7ad070 <col:30> Inherited
|-CXXMethodDecl 0x55db2c7ad0b8 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55db2c7ad168 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c7ad1c0 <col:30> Inherited
|-CXXMethodDecl 0x55db2c7ad208 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55db2c7ad2b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c7ad310 <col:30> Inherited
|-CXXMethodDecl 0x55db2c7ad358 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x55db2c7ad408 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c7ad460 <col:30> Inherited
|-CXXMethodDecl 0x55db2c7ad488 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55db2c7ad538 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55db2c7ad5e8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55db2c7ad7a8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c7ad698 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c7ad710 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55db2c7ad8f8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c7ad868 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c7adaa8 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x55db2c7ad9b0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55db2c7adb60 <col:20>
| `-OptimizeNoneAttr 0x55db2c7adbb8 <col:30>
|-CXXMethodDecl 0x55db2c7adcd8 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x55db2c7adbe0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55db2c7add90 <col:20>
| `-OptimizeNoneAttr 0x55db2c7adde8 <col:30>
|-CXXMethodDecl 0x55db2c7adea0 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c7ade10 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c7adfe8 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55db2c7adf58 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c7ae118 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x55db2c7ae248 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x55db2c7ae318 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x55db2c7ae3e8 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x55db2c7ae528 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c7ae498 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c7ae670 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55db2c7ae5e0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c7ae7b8 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x55db2c7ae728 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55db2c7ae870 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55db2c7ae970 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55db2c7ae8e0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55db2c7aea28 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55db2c7aeae8 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x55db2c7aebe8 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x55db2c7aed68 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55db2c7aeca8 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x55db2c7af528 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55db2c7aee20 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x55db2c7af488 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x55db2c7af388 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x55db2c7af608 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55db2c7af758 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x55db2c7af6c8 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55db2c7af810 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55db2c7afa58 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c7af8d0 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55db2c7af948 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x55db2c7afc18 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x55db2c7afb28 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55db2c7afe68 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x55db2c7afce0 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x55db2c7afd58 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x55db2c7aff28 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55db2c7b0188 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x55db2c7b0090 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x55db2c7b0258 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55db2c7b0258

Layout: <CGRecordLayout
  LLVMType:%class.Vector.15 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.15 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c6ae6a0 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55db2c6ae7b8 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x55db2c6ae848 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x55db2c6ae8d0 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x55db2c6ae9c0 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55db2c6aeac0 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x55db2c6aeb80 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x55db2c6aec40 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x55db2c6aed68 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55db2c6aed68
| `-ParmVarDecl 0x55db2c6aee78 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x55db2c7b1008 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x55db2c7b1008
  `-ParmVarDecl 0x55db2c7b1118 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c78ebb0 prev 0x55db2c6c7ee8 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x55db2c78eca8 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x55db2c78ed38 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55db2c78edc0 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x55db2c78eeb8 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x55db2c7b1480 <col:43, col:67>
|   `-ReturnStmt 0x55db2c7b1470 <col:45, col:52>
|     `-CXXConstructExpr 0x55db2c7b1440 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x55db2c7b1410 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x55db2c7906a0
|         `-CXXThisExpr 0x55db2c7b1400 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55db2c78ef78 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x55db2c78f180 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x55db2c78f028 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x55db2c78f0a0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x55db2c78f278 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x55db2c78f340 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55db2c7b1500 <col:39, col:67>
|   `-ReturnStmt 0x55db2c7b14f0 <col:41, col:48>
|     `-ImplicitCastExpr 0x55db2c7b14d8 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55db2c7b14a8 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x55db2c790788
|         `-CXXThisExpr 0x55db2c7b1498 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55db2c78f408 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x55db2c7b1580 <col:35, col:59>
|   `-ReturnStmt 0x55db2c7b1570 <col:37, col:44>
|     `-ImplicitCastExpr 0x55db2c7b1558 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55db2c7b1528 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x55db2c7907f0
|         `-CXXThisExpr 0x55db2c7b1518 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x55db2c78f550 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x55db2c78f4c0 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x55db2c78f698 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55db2c78f608 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55db2c78f898 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x55db2c78f750 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x55db2c78f7c8 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x55db2c78f968 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55db2c78fa08 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x55db2c78fa30 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55db2c78fb48 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x55db2c78fbe8 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x55db2c78fc48 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x55db2c78fd78 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x55db2c78fca8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x55db2c78fbe8 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x55db2c7b1658 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x55db2c7b1600 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x55db2c7b15d0 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x55db2c6b32d8
|   |       `-ImplicitCastExpr 0x55db2c7b1620 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x55db2c7b15b8 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x55db2c7b1598 <col:17> 'Timer *' lvalue ParmVar 0x55db2c78fca8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x55db2c78fc48 't' 'Timer *'
|   | `-ImplicitCastExpr 0x55db2c7b16f0 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55db2c7b16b0 <col:41> 'Timer *' lvalue ParmVar 0x55db2c78fca8 't_' 'Timer *'
|   `-CompoundStmt 0x55db2c7b1740 <col:45, line:44:2>
|-CXXRecordDecl 0x55db2c78fe40 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55db2c78ff58 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x55db2c7901a8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x55db2c790028 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x55db2c7900a0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x55db2c7b1870 <col:71, line:49:2>
|     `-ReturnStmt 0x55db2c7b1860 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x55db2c7b1828 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x55db2c7b1810 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55db2c7b17f0 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x55db2c652358 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x55db2c7b1770 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x55db2c78fbe8
|         | `-DeclRefExpr 0x55db2c7b1750 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x55db2c790028 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x55db2c7b17c0 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x55db2c78fbe8
|           `-DeclRefExpr 0x55db2c7b17a0 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x55db2c7900a0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x55db2c790270 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55db2c790388 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x55db2c7905a8 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x55db2c790428 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x55db2c7904a0 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x55db2c7b1a78 <col:63, line:54:2>
|     `-BinaryOperator 0x55db2c7b1a58 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x55db2c7b1908 <col:6, col:12> 'int' lvalue ->_schedpos1 0x55db2c6c7388
|       | `-ImplicitCastExpr 0x55db2c7b18f0 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x55db2c7b18c0 <col:6, col:9> 'Timer *' lvalue ->t 0x55db2c78fc48
|       |     `-ImplicitCastExpr 0x55db2c7b18a8 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x55db2c7b1888 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x55db2c7904a0 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x55db2c7b1a40 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x55db2c7b1a20 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x55db2c7b19c8 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x55db2c7b19a8 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x55db2c7b1978 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x55db2c7b1938 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x55db2c7904a0 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x55db2c7b1990 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x55db2c7b1958 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x55db2c790428 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x55db2c7b1a08 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x55db2c7b19e8 <col:39> 'int' 1
|-FieldDecl 0x55db2c7906a0 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x55db2c790710 <col:44, col:53> aligned
|   `-ConstantExpr 0x55db2c7906f0 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x55db2c790670 <col:52> 'int' 8
|-FieldDecl 0x55db2c790788 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x55db2c7907f0 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x55db2c790858 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x55db2c7a5690 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x55db2c7b0340 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x55db2c7b03a0 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x55db2c7b0400 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x55db2c7b0460 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55db2c7b0550 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x55db2c7b04c0 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x55db2c7b0618 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x55db2c7b1ed0 <col:29, line:81:5>
|   `-IfStmt 0x55db2c7b1ea8 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x55db2c7b1b60 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x55db2c7b1b00 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x55db2c7b1ad0 <col:6, col:18> '<bound member function type>' .size 0x55db2c7a2798
|     |     `-ImplicitCastExpr 0x55db2c7b1b48 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x55db2c7b1aa0 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55db2c7a5690
|     |         `-CXXThisExpr 0x55db2c7b1a90 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x55db2c7b1d50 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x55db2c7b1d38 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x55db2c7b1d18 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x55db2c33bb98 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x55db2c7b1b88 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55db2c7906a0
|     | | `-CXXThisExpr 0x55db2c7b1b78 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x55db2c7b1d00 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x55db2c7b1cd0 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x55db2c78fbe8
|     |     `-CXXMemberCallExpr 0x55db2c7b1ca8 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x55db2c7b1c78 <col:22, col:34> '<bound member function type>' .unchecked_at 0x55db2c7a3848
|     |       | `-MemberExpr 0x55db2c7b1bc8 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x55db2c7a5690
|     |       |   `-CXXThisExpr 0x55db2c7b1bb8 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x55db2c7b1c58 <col:47> 'int' 0
|     `-ExprWithCleanups 0x55db2c7b1e90 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x55db2c7b1e58 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x55db2c7b1e40 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55db2c7b1e20 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55db2c33c048 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x55db2c7b1d98 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x55db2c7906a0
|         | `-CXXThisExpr 0x55db2c7b1d88 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x55db2c7b1e08 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55db2c7b1dd8 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55db2c7b0758 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x55db2c7b06c8 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x55db2c7b0820 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x55db2c7b08e0 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x55db2c7b09a0 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x55db2c7b0a90 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x55db2c7b0af8 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x55db2c7b0af8
| `-ParmVarDecl 0x55db2c7b0c08 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x55db2c7b0ca8 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x55db2c7b0ca8
| `-ParmVarDecl 0x55db2c7b0db8 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x55db2c7b0e58 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x55db2c7b0e58
| `-ParmVarDecl 0x55db2c7b0f68 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x55db2c7b1188 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x55db2c7b1188
| `-ParmVarDecl 0x55db2c7b1298 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x55db2c7b1320 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x55db2c7b1320

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.14, %class.Vector.15, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.14, %class.Vector.15, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55db2c7d8978 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x55db2c7d8b88 prev 0x55db2c7d8978 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55db2c7d9c60 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x55db2c7d9c10 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x55db2c7d9bf0 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x55db2c7d9aa0 'type'
|     `-SubstTemplateTypeParmType 0x55db2c7a66a0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x55db2c3f8550 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c3f84f8 'T'
|       `-RecordType 0x55db2c7a61f0 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x55db2c7a6108 'sized_array_memory'
|-FieldDecl 0x55db2c7d9d60 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x55db2c7d9db0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55db2c7d9de8 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x55db2c7d8c20 'pollfd' sugar
|   |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55db2c430408 'T'
|   `-RecordType 0x55db2c7d6a30 'pollfd'
|     `-CXXRecord 0x55db2c7d69a0 'pollfd'
|-TypedefDecl 0x55db2c7d9ea8 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x55db2c7d9e70 'pollfd &'
|   `-SubstTemplateTypeParmType 0x55db2c7d8c20 'pollfd' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-RecordType 0x55db2c7d6a30 'pollfd'
|       `-CXXRecord 0x55db2c7d69a0 'pollfd'
|-TypedefDecl 0x55db2c7d9f68 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x55db2c7d9f30 'const pollfd &'
|   `-QualType 0x55db2c7d8c21 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55db2c7d8c20 'pollfd' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-RecordType 0x55db2c7d6a30 'pollfd'
|         `-CXXRecord 0x55db2c7d69a0 'pollfd'
|-TypedefDecl 0x55db2c7d9ff8 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x55db2c7d9fc0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55db2c7d8c20 'pollfd' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-RecordType 0x55db2c7d6a30 'pollfd'
|       `-CXXRecord 0x55db2c7d69a0 'pollfd'
|-TypedefDecl 0x55db2c7da0b8 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x55db2c7da080 'const pollfd *'
|   `-QualType 0x55db2c7d8c21 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55db2c7d8c20 'pollfd' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-RecordType 0x55db2c7d6a30 'pollfd'
|         `-CXXRecord 0x55db2c7d69a0 'pollfd'
|-TypedefDecl 0x55db2c7dac90 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x55db2c7dac40 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x55db2c7dac20 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x55db2c7dabb0 'type'
|     `-SubstTemplateTypeParmType 0x55db2c7da970 'pollfd' sugar
|       |-TemplateTypeParmType 0x55db2c403570 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c403520 'T'
|       `-RecordType 0x55db2c7d6a30 'pollfd'
|         `-CXXRecord 0x55db2c7d69a0 'pollfd'
|-TypedefDecl 0x55db2c7dacf8 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x55db2c7d9f30 'const pollfd &'
|   `-QualType 0x55db2c7d8c21 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55db2c7d8c20 'pollfd' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-RecordType 0x55db2c7d6a30 'pollfd'
|         `-CXXRecord 0x55db2c7d69a0 'pollfd'
|-TypedefDecl 0x55db2c7dad50 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55db2c12f370 'int'
|-TypedefDecl 0x55db2c7dadb8 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x55db2c7d9fc0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x55db2c7d8c20 'pollfd' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-RecordType 0x55db2c7d6a30 'pollfd'
|       `-CXXRecord 0x55db2c7d69a0 'pollfd'
|-TypedefDecl 0x55db2c7dae20 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x55db2c7da080 'const pollfd *'
|   `-QualType 0x55db2c7d8c21 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x55db2c7d8c20 'pollfd' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-RecordType 0x55db2c7d6a30 'pollfd'
|         `-CXXRecord 0x55db2c7d69a0 'pollfd'
|-EnumDecl 0x55db2c7dae78 <line:134:5> col:5
| `-EnumConstantDecl 0x55db2c7daf70 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55db2c7daf50 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55db2c431ae8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55db2c431ac0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55db2c431aa0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55db2c7daff8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55db2c7db288 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c7db0b0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c7db150 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x55db2c7db548 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55db2c7db430 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x55db2c7db808 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55db2c7db6f0 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55db2c7dbb50 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55db2c7dba30 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x55db2c7dbe60 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x55db2c7dbd40 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x55db2c7dc150 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c7dbf98 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c7dc010 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55db2c7dc2a8 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55db2c7dc388 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c7dc3e0 <col:30> Inherited
|-CXXMethodDecl 0x55db2c7dc428 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x55db2c7dc4d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c7dc530 <col:30> Inherited
|-CXXMethodDecl 0x55db2c7dc5f8 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55db2c7dc6a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c7dc700 <col:30> Inherited
|-CXXMethodDecl 0x55db2c7dc748 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55db2c7dc7f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c7dc850 <col:30> Inherited
|-CXXMethodDecl 0x55db2c7dc898 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55db2c7dc948 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c7dc9a0 <col:30> Inherited
|-CXXMethodDecl 0x55db2c7dc9e8 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x55db2c7dca98 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c7dcaf0 <col:30> Inherited
|-CXXMethodDecl 0x55db2c7dcb18 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55db2c7dcbc8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55db2c7dcc78 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55db2c7dce38 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c7dcd28 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c7dcda0 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55db2c7dcf88 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c7dcef8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c7dd138 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x55db2c7dd040 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55db2c7dd1f0 <col:20>
| `-OptimizeNoneAttr 0x55db2c7dd248 <col:30>
|-CXXMethodDecl 0x55db2c7dd3f0 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x55db2c7dd270 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55db2c7dd4a8 <col:20>
| `-OptimizeNoneAttr 0x55db2c7dd500 <col:30>
|-CXXMethodDecl 0x55db2c7dd5b8 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c7dd528 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c7dd700 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55db2c7dd670 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c7dd838 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x55db2c7dd968 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x55db2c7dda38 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x55db2c7ddb08 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x55db2c7ddc48 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c7ddbb8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c7ddd90 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55db2c7ddd00 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c7dded8 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x55db2c7dde48 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55db2c7ddf90 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55db2c7de090 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55db2c7de000 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55db2c7de148 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55db2c7de208 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x55db2c7de308 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x55db2c7de4b8 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55db2c7de3c8 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x55db2c7dec78 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55db2c7de570 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x55db2c7debd8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x55db2c7dead8 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x55db2c7ded58 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55db2c7deea8 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x55db2c7dee18 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55db2c7def60 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55db2c7df1a8 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c7df020 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55db2c7df098 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x55db2c7df368 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x55db2c7df278 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55db2c7df5b8 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x55db2c7df430 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x55db2c7df4a8 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x55db2c7df678 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55db2c7df8d8 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x55db2c7df7e0 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x55db2c7df9a8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55db2c7df9a8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.16 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.16 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55db2c7e0e90 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x55db2c7e1068 prev 0x55db2c7e0e90 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x55db2c7e10f8 <col:46, col:52> col:46 public
|-TypedefDecl 0x55db2c7e1120 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55db2c12f370 'int'
|-TypedefDecl 0x55db2c7e2cf0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x55db2c7e2ca0 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x55db2c7e15d0 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x55db2c7e14d0 'type'
|     `-TemplateSpecializationType 0x55db2c7e1460 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x55db2c7e1340 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x55db2c7e1320 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x55db2c7e1300 <col:24> 'unsigned long' 24
|       `-RecordType 0x55db2c7e1440 'char_array<24>'
|         `-ClassTemplateSpecialization 0x55db2c7e1360 'char_array'
|-TypedefDecl 0x55db2c7e2da8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x55db2c7e2d70 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x55db2c7e2d50 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x55db2c7e2cf0 'type'
|     `-ElaboratedType 0x55db2c7e2ca0 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x55db2c7e15d0 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x55db2c7e14d0 'type'
|         `-TemplateSpecializationType 0x55db2c7e1460 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x55db2c7e1340 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x55db2c7e1320 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x55db2c7e1300 <col:24> 'unsigned long' 24
|           `-RecordType 0x55db2c7e1440 'char_array<24>'
|             `-ClassTemplateSpecialization 0x55db2c7e1360 'char_array'
|-CXXMethodDecl 0x55db2c7e2f28 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x55db2c7e2e38 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x55db2c7e3018 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x55db2c7e30f8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x55db2c7e30f8
|-CXXMethodDecl 0x55db2c7e33c8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55db2c7e32d0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x55db2c7e3608 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55db2c7e3480 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55db2c7e34f8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55db2c7e37d8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55db2c7e36c8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55db2c7e3740 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55db2c7e3938 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55db2c7e3a08 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x55db2c7e3c58 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55db2c7e3ac8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55db2c7e3b40 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55db2c7e3eb8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x55db2c7e3d28 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x55db2c7e3da0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55db2c7e4078 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55db2c7e3f88 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55db2c7e4238 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x55db2c7e4140 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55db2c7e42f0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55db2c7e43a0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x55db2c7e45d8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x55db2c7e4450 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x55db2c7e44c8 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x55db2c7e4878 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x55db2c7e4780 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x55db2c7e4940 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x55db2c7e4990 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x55db2c7e49e0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.18 = type { %struct.char_array.19*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.18 = type { %struct.char_array.19*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55db2c7dfaf0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x55db2c7dfcf8 prev 0x55db2c7dfaf0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x55db2c7e0e00 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x55db2c7e0db0 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x55db2c7e0d90 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x55db2c7e0c40 'type'
|     `-SubstTemplateTypeParmType 0x55db2c7e0a60 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x55db2c3f8550 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c3f84f8 'T'
|       `-RecordType 0x55db2c6f8b40 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x55db2c6f8a58 'sized_array_memory'
|-FieldDecl 0x55db2c7e4a30 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x55db2c7e4a80 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x55db2c7e4ab8 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x55db2c7dfd90 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x55db2c430408 'T'
|   `-RecordType 0x55db2c7d84e0 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x55db2c7d8450 'SelectorInfo'
|-TypedefDecl 0x55db2c7e4b78 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55db2c7e4b40 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x55db2c7dfd90 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-RecordType 0x55db2c7d84e0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55db2c7d8450 'SelectorInfo'
|-TypedefDecl 0x55db2c7e4c38 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55db2c7e4c00 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55db2c7dfd91 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55db2c7dfd90 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-RecordType 0x55db2c7d84e0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55db2c7d8450 'SelectorInfo'
|-TypedefDecl 0x55db2c7e4cc8 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x55db2c7e4c90 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55db2c7dfd90 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-RecordType 0x55db2c7d84e0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55db2c7d8450 'SelectorInfo'
|-TypedefDecl 0x55db2c7e4d88 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55db2c7e4d50 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55db2c7dfd91 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55db2c7dfd90 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-RecordType 0x55db2c7d84e0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55db2c7d8450 'SelectorInfo'
|-TypedefDecl 0x55db2c7e6e20 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x55db2c7e6dd0 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x55db2c7e6db0 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x55db2c7e6ce8 'type'
|     `-LValueReferenceType 0x55db2c7e6cb0 'const SelectSet::SelectorInfo &'
|       `-QualType 0x55db2c7e6a51 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x55db2c7e6a50 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x55db2c402e40 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x55db2c402de8 'T'
|           `-RecordType 0x55db2c7d84e0 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x55db2c7d8450 'SelectorInfo'
|-TypedefDecl 0x55db2c7e6e88 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x55db2c7e4c00 'const SelectSet::SelectorInfo &'
|   `-QualType 0x55db2c7dfd91 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55db2c7dfd90 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-RecordType 0x55db2c7d84e0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55db2c7d8450 'SelectorInfo'
|-TypedefDecl 0x55db2c7e6ee0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x55db2c12f370 'int'
|-TypedefDecl 0x55db2c7e6f48 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x55db2c7e4c90 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x55db2c7dfd90 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x55db2c430408 'T'
|     `-RecordType 0x55db2c7d84e0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x55db2c7d8450 'SelectorInfo'
|-TypedefDecl 0x55db2c7e6fb0 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x55db2c7e4d50 'const SelectSet::SelectorInfo *'
|   `-QualType 0x55db2c7dfd91 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x55db2c7dfd90 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x55db2c430460 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x55db2c430408 'T'
|       `-RecordType 0x55db2c7d84e0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x55db2c7d8450 'SelectorInfo'
|-EnumDecl 0x55db2c7e7008 <line:134:5> col:5
| `-EnumConstantDecl 0x55db2c7e7100 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x55db2c7e70e0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x55db2c431ae8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x55db2c431ac0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x55db2c431aa0 <col:40> 'int' 1
|-CXXConstructorDecl 0x55db2c7e7188 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x55db2c7e7418 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c7e7240 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c7e72e0 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x55db2c7e76d8 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55db2c7e75c0 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x55db2c7e7998 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55db2c7e7880 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55db2c7e7ce0 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55db2c7e7bc0 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x55db2c7e7ff0 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x55db2c7e7ed0 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x55db2c7e82e0 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c7e8128 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c7e81a0 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55db2c7e8438 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55db2c7e8518 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c7e8570 <col:30> Inherited
|-CXXMethodDecl 0x55db2c7e85b8 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x55db2c7e8668 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c7e86c0 <col:30> Inherited
|-CXXMethodDecl 0x55db2c7e8788 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55db2c7e8838 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c7e8890 <col:30> Inherited
|-CXXMethodDecl 0x55db2c7e88d8 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55db2c7e8988 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c7e89e0 <col:30> Inherited
|-CXXMethodDecl 0x55db2c7e8a28 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55db2c7e8ad8 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c7e8b30 <col:30> Inherited
|-CXXMethodDecl 0x55db2c7e8b78 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x55db2c7e8c28 <col:20> Inherited
| `-OptimizeNoneAttr 0x55db2c7e8c80 <col:30> Inherited
|-CXXMethodDecl 0x55db2c7e8ca8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55db2c7e8d58 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x55db2c7e8e08 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x55db2c7e8fc8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c7e8eb8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x55db2c7e8f30 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55db2c7e9118 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c7e9088 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c7e92c8 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x55db2c7e91d0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55db2c7e9380 <col:20>
| `-OptimizeNoneAttr 0x55db2c7e93d8 <col:30>
|-CXXMethodDecl 0x55db2c7e94f8 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x55db2c7e9400 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x55db2c7e95b0 <col:20>
| `-OptimizeNoneAttr 0x55db2c7e9608 <col:30>
|-CXXMethodDecl 0x55db2c7e96c0 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c7e9630 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c7e9808 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55db2c7e9778 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c7e9938 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55db2c7e9a68 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55db2c7e9b38 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x55db2c7e9c08 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x55db2c7e9d48 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x55db2c7e9cb8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c7e9e90 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x55db2c7e9e00 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x55db2c7e9fd8 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x55db2c7e9f48 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55db2c7ea090 <col:48> Inherited "" ""
|-CXXMethodDecl 0x55db2c7ea190 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x55db2c7ea100 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x55db2c7ea248 <col:60> Inherited "" ""
|-CXXMethodDecl 0x55db2c7ea308 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x55db2c7ea408 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x55db2c7ea5b8 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55db2c7ea4c8 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x55db2c7ead78 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x55db2c7ea670 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x55db2c7eacd8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x55db2c7eabd8 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x55db2c7eae58 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x55db2c7eafa8 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x55db2c7eaf18 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55db2c7eb060 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x55db2c7eb2a8 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x55db2c7eb120 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55db2c7eb198 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x55db2c7eb468 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x55db2c7eb378 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55db2c7eb6b8 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x55db2c7eb530 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x55db2c7eb5a8 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x55db2c7eb778 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x55db2c7eb9d8 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x55db2c7eb8e0 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x55db2c7ebaa8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x55db2c7ebaa8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.17 = type { %class.vector_memory.18 }
  NonVirtualBaseLLVMType:%class.Vector.17 = type { %class.vector_memory.18 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c7d7630 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55db2c7d7748 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x55db2c7d77d8 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x55db2c7d7860 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x55db2c7d7950 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x55db2c7d7950
|-CXXMethodDecl 0x55db2c7d7a50 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x55db2c7d7cf0 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55db2c7d7b08 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x55db2c7d7b80 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x55db2c7d7c00 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x55db2c7d7f60 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x55db2c7d7dc0 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x55db2c7d7e38 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x55db2c7d7eb8 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x55db2c7d80b8 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x55db2c7d8028 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x55db2c7d8180 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x55db2c7ed158 <col:34, line:50:5>
|   |-BinaryOperator 0x55db2c7ecb28 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x55db2c7ecae8 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x55db2c7d8908
|   | | `-CXXThisExpr 0x55db2c7ecad8 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x55db2c7ecb18 <col:23> 'bool' true
|   `-CallExpr 0x55db2c7ed130 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x55db2c7ed118 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55db2c7ed098 <col:2> 'void (long)' lvalue Function 0x55db2c7ecf98 'ignore_result' 'void (long)' (FunctionTemplate 0x55db2c3f34f8 'ignore_result')
|     `-CallExpr 0x55db2c7ecd40 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x55db2c7ecd28 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55db2c7ecca8 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x55db2c7b6b58 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x55db2c7ecd78 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x55db2c7ecc50 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x55db2c7ecc38 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x55db2c7ecbe8 <col:22> 'int [2]' lvalue ->_wake_pipe 0x55db2c7d88a8
|       |   |   `-CXXThisExpr 0x55db2c7ecbd8 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x55db2c7ecc18 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x55db2c7ecda8 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x55db2c7ecd90 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x55db2c7ecc70 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x55db2c7ecdc0 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55db2c7ecc88 <col:41> 'int' 1
|-CXXMethodDecl 0x55db2c7d82c0 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55db2c7d8230 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55db2c7d8388 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x55db2c7d8428 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x55db2c7d8450 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55db2c7d8568 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x55db2c7d8608 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x55db2c7d8668 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x55db2c7d86d0 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x55db2c7d8780 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x55db2c7d8608 'read' 'Element *'
|   | `-ImplicitCastExpr 0x55db2c7ed1b8 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55db2c7ed178 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x55db2c7d8668 'write' 'Element *'
|   | `-ImplicitCastExpr 0x55db2c7ed238 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x55db2c7ed1f8 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x55db2c7d86d0 'pollfd' 'int'
|   | `-UnaryOperator 0x55db2c7ed298 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x55db2c7ed278 <col:35> 'int' 1
|   `-CompoundStmt 0x55db2c7ed310 <line:64:2, line:65:2>
|-FieldDecl 0x55db2c7d88a8 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x55db2c7d8908 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x55db2c7dfa90 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x55db2c7ebb90 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x55db2c7ebdc8 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x55db2c7ebbf8 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x55db2c7ebc70 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x55db2c7ebce8 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x55db2c7ebfb0 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x55db2c7ebe98 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x55db2c7ebf18 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x55db2c7ec1f8 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x55db2c7ec078 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x55db2c7ec0f8 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x55db2c7ec408 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x55db2c7ec2b8 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x55db2c7ec330 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x55db2c7ec558 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x55db2c7ec4c8 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x55db2c7ec620 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x55db2c7ec6e0 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x55db2c7ec7a8 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x55db2c7ec7a8
| `-ParmVarDecl 0x55db2c7ec8b8 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x55db2c7ec958 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x55db2c7ec958
  `-ParmVarDecl 0x55db2c7eca68 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.16, %class.Vector.17 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.16, %class.Vector.17 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c6ad608 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55db2c6ad728 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x55db2c6ad7b8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x55db2c6ad840 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x55db2c6ad930 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x55db2c6ada30 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x55db2c6adaf0 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x55db2c6adbb0 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x55db2c6adc98 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x55db2c6addb8 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x55db2c6addb8
| `-ParmVarDecl 0x55db2c6adec8 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x55db2c7f43c8 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x55db2c7f43c8
  `-ParmVarDecl 0x55db2c7f44d8 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c78cb58 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55db2c78cc78 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x55db2c78cd18 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x55db2c78cd78 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x55db2c7f39c8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55db2c7f39c8
| `-ParmVarDecl 0x55db2c7f3ad8 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x55db2c7f3b78 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55db2c7f3b78
| `-ParmVarDecl 0x55db2c7f3c88 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x55db2c7f3cf8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55db2c7f3cf8
|-CXXMethodDecl 0x55db2c7f4578 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55db2c7f4578
| `-ParmVarDecl 0x55db2c7f4688 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x55db2c7f46f8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55db2c7f46f8
| `-ParmVarDecl 0x55db2c7f4808 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x55db2c7fe658 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x55db2c7fe730 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c6af500 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55db2c6af618 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x55db2c6af6a8 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x55db2c6af730 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x55db2c6af7f0 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x55db2c12f370 'int'
|-CXXMethodDecl 0x55db2c6af8b8 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x55db2c6af958 <col:45> always_inline
|-CXXMethodDecl 0x55db2c6afa88 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x55db2c6af9c0 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x55db2c6afb30 <col:49> always_inline
|-CXXConstructorDecl 0x55db2c6afc28 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55db2c6afc28
| `-ParmVarDecl 0x55db2c6afd38 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x55db2c6afdd8 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55db2c6afdd8
| `-ParmVarDecl 0x55db2c6afee8 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x55db2c7f3de0 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x55db2c7f3de0
|-CXXMethodDecl 0x55db2c7f48a8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x55db2c7f48a8
| `-ParmVarDecl 0x55db2c7f49b8 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x55db2c7f4a28 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x55db2c7f4a28
  `-ParmVarDecl 0x55db2c7f4b38 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c7ed780 prev 0x55db2c7d75a0 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x55db2c7ed878 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x55db2c7ed908 <col:22, col:28> col:22 public
|-EnumDecl 0x55db2c7ed930 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x55db2c7eda48 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x55db2c7eda28 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x55db2c7eda10 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x55db2c7ed9f0 <col:32> 'int' 1
| `-EnumConstantDecl 0x55db2c7edaf0 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x55db2c7edad0 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x55db2c7edab8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x55db2c7eda98 <col:53> 'int' 1000
|-CXXMethodDecl 0x55db2c7edb90 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x55db2c7edc50 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55db2c7edd38 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x55db2c7f4bf8 <col:34, col:52>
|   `-ReturnStmt 0x55db2c7f4be8 <col:36, col:43>
|     `-MemberExpr 0x55db2c7f4bb8 <col:43> 'TimerSet' lvalue ->_timers 0x55db2c7f1ec8
|       `-CXXThisExpr 0x55db2c7f4ba8 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55db2c7ede28 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x55db2c7f4c60 <col:46, col:64>
|   `-ReturnStmt 0x55db2c7f4c50 <col:48, col:55>
|     `-MemberExpr 0x55db2c7f4c20 <col:55> 'const TimerSet' lvalue ->_timers 0x55db2c7f1ec8
|       `-CXXThisExpr 0x55db2c7f4c10 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55db2c7edf18 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x55db2c7f4cc8 <col:36, col:55>
|   `-ReturnStmt 0x55db2c7f4cb8 <col:38, col:45>
|     `-MemberExpr 0x55db2c7f4c88 <col:45> 'SelectSet' lvalue ->_selects 0x55db2c7f1f28
|       `-CXXThisExpr 0x55db2c7f4c78 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x55db2c7ee008 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x55db2c7f4d30 <col:48, col:67>
|   `-ReturnStmt 0x55db2c7f4d20 <col:50, col:57>
|     `-MemberExpr 0x55db2c7f4cf0 <col:57> 'const SelectSet' lvalue ->_selects 0x55db2c7f1f28
|       `-CXXThisExpr 0x55db2c7f4ce0 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55db2c7ee0c8 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x55db2c7ee1b8 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x55db2c7ee328 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x55db2c7ee268 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x55db2c7ee3f0 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x55db2c7f0d00 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x55db2c7ee4a0 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x55db2c7ee720 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x55db2c7f0dd0 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x55db2c7f0e90 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x55db2c7f0f50 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x55db2c7f1090 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x55db2c7f1000 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x55db2c7f1158 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x55db2c7f1218 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x55db2c7f12d8 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x55db2c7f1398 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x55db2c7f14d8 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x55db2c7f1448 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x55db2c7f15a0 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x55db2c7f1660 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x55db2c7f1700 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x55db2c7f17c0 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55db2c7f1810 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55db2c7f1860 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55db2c7f18b0 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55db2c7f1900 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55db2c7f1950 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55db2c7f19a0 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55db2c7f19f0 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55db2c7f1a40 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x55db2c7f1a90 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x55db2c7f1ae0 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x55db2c7f1bd8 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x55db2c7f1b48 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x55db2c7f1d28 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x55db2c7f1c98 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x55db2c7f1dd0 <line:104:3, col:10> col:3 private
|-FieldDecl 0x55db2c7f1e08 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x55db2c7f1e68 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x55db2c7f1ec8 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x55db2c7f1f28 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x55db2c7f1fa8 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x55db2c7f2018 <col:40, col:50> aligned
|   `-ConstantExpr 0x55db2c7f1ff8 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x55db2c7f1f78 <col:48> 'int' 64
|-FieldDecl 0x55db2c7f2088 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x55db2c7f20e8 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x55db2c7f21e0 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x55db2c7f22f0 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x55db2c7f2350 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x55db2c7f23d0 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x55db2c7f2440 <col:36, col:46> aligned
|   `-ConstantExpr 0x55db2c7f2420 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x55db2c7f23a0 <col:44> 'int' 64
|-FieldDecl 0x55db2c7f24b8 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x55db2c7f2518 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x55db2c7f2568 <line:170:3, col:9> col:3 public
|-FieldDecl 0x55db2c7f25a8 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x55db2c7f2610 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x55db2c7f2660 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x55db2c7f2808 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x55db2c7f2698 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x55db2c7f2718 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x55db2c7f2908 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x55db2c7f2908
|-CXXMethodDecl 0x55db2c7f2a10 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x55db2c7f2ad8 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x55db2c7f4e28 <col:34, line:217:5>
|   `-ReturnStmt 0x55db2c7f4e18 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x55db2c7f4e00 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55db2c7f4dd0 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x55db2c789c30
|         `-ImplicitCastExpr 0x55db2c7f4db8 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x55db2c7f4d88 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x55db2c789bc8
|             `-MemberExpr 0x55db2c7f4d58 <col:16> 'const TaskLink' lvalue ->_task_link 0x55db2c7f1e08
|               `-CXXThisExpr 0x55db2c7f4d48 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x55db2c7f2b98 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x55db2c7f2c58 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x55db2c7f5550 <col:39, line:226:5>
|   |-DeclStmt 0x55db2c7f5078 <line:223:9, col:68>
|   | `-VarDecl 0x55db2c7f4e50 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x55db2c7f5030 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x55db2c7f5000 <col:24, col:38> '<bound member function type>' .compare_swap 0x55db2c459d60
|   |     | `-MemberExpr 0x55db2c7f4ec8 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x55db2c7f2088
|   |     |   `-CXXThisExpr 0x55db2c7f4eb8 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x55db2c7f4fb8 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x55db2c7f4fa0 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x55db2c7f4f78 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x55db2c7f4f58 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x55db2c7f5060 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x55db2c7f4fe0 <col:66> 'int' 0
|   |-CStyleCastExpr 0x55db2c7f50c0 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55db2c7f5090 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x55db2c7f4e50 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x55db2c7f5530 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x55db2c7f5500 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x55db2c7f51d8 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x55db2c7f51a8 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x55db2c7f5190 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x55db2c7f50e8 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x55db2c7f4e50 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x55db2c7f5168 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x55db2c7f5150 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x55db2c7f5128 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x55db2c7f5108 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x55db2c7f5238 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x55db2c7f5218 <col:60> 'int' 0
|       `-CallExpr 0x55db2c7f5460 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x55db2c7f5448 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55db2c7f5428 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55db2c1ce940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x55db2c7f54a0 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55db2c7f5328 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x55db2c7f54b8 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x55db2c7f5358 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x55db2c7f54d0 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x55db2c7f5398 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x55db2c7f54e8 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x55db2c7f5410 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x55db2c7f53f8 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x55db2c7f53b8 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x55db2c7f2da0 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x55db2c7f2d10 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x55db2c7f2e68 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x55db2c7f2f28 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x55db2c7f2fe8 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x55db2c7f30a8 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x55db2c7f3168 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x55db2c7f3260 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x55db2c7f32c0 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x55db2c7f3350 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x55db2c7f3718 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x55db2c7f3718
| `-ParmVarDecl 0x55db2c7f3828 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x55db2c7f3ee8 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x55db2c7f3ee8
  `-ParmVarDecl 0x55db2c7f3ff8 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c6b1c68 prev 0x55db2c6940b0 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 referenced class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55db2c6b1d60 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x55db2c6b1df0 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x55db2c6b1e50 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x55db2c6b1ef8 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55db2c6b2018 <col:5, col:12> col:12 implicit struct do_nothing_t
| |-CXXConstructorDecl 0x55db2c8579f0 <col:12> col:12 implicit constexpr do_nothing_t 'void ()' inline default trivial noexcept-unevaluated 0x55db2c8579f0
| |-CXXConstructorDecl 0x55db2c857ad0 <col:12> col:12 implicit constexpr do_nothing_t 'void (const Timer::do_nothing_t &)' inline default trivial noexcept-unevaluated 0x55db2c857ad0
| | `-ParmVarDecl 0x55db2c857bb8 <col:12> col:12 'const Timer::do_nothing_t &'
| `-CXXConstructorDecl 0x55db2c857c58 <col:12> col:12 implicit constexpr do_nothing_t 'void (Timer::do_nothing_t &&)' inline default trivial noexcept-unevaluated 0x55db2c857c58
|   `-ParmVarDecl 0x55db2c857d68 <col:12> col:12 'Timer::do_nothing_t &&'
|-CXXConstructorDecl 0x55db2c6b21b8 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x55db2c6b20f8 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x55db2c6b2408 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x55db2c6b2278 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x55db2c6b22f8 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x55db2c6b2598 <line:43:5, col:27> col:5 used Timer 'void (Element *)'
| `-ParmVarDecl 0x55db2c6b24d0 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x55db2c6b2718 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x55db2c6b2658 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x55db2c6b28c8 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x55db2c6b2808 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x55db2c6b29c0 <line:55:5, line:58:5> line:55:12 used ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x55db2c6c8230 <col:21, line:58:5>
|   `-IfStmt 0x55db2c6c8218 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x55db2c6c8180 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x55db2c6c8150 <col:6> '<bound member function type>' ->scheduled 0x55db2c6b3218
|     |   `-ImplicitCastExpr 0x55db2c6c81a0 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x55db2c6c8140 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x55db2c6c81f8 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x55db2c6c81c8 <col:6> '<bound member function type>' ->unschedule 0x55db2c6c68e0
|         `-CXXThisExpr 0x55db2c6c81b8 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x55db2c6b2ac0 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x55db2c6c83d0 <col:26, line:65:5>
|   |-BinaryOperator 0x55db2c6c82f0 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55db2c6c8288 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55db2c6c7568
|   | | `-MemberExpr 0x55db2c6c8258 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55db2c6c7628
|   | |   `-CXXThisExpr 0x55db2c6c8248 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55db2c6c82d8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55db2c6c82b8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55db2c6c7a88 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55db2c6c83b0 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x55db2c6c8320 <col:2> 'void *' lvalue ->_thunk 0x55db2c6c76a8
|     | `-CXXThisExpr 0x55db2c6c8310 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x55db2c6c8388 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x55db2c6c8350 <col:20> 'int' 1
|-CXXMethodDecl 0x55db2c6b2c00 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x55db2c6b2b70 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x55db2c6c8530 <col:52, line:71:5>
|   |-CStyleCastExpr 0x55db2c6c8420 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55db2c6c83f0 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x55db2c6b2b70 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x55db2c6c8510 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x55db2c6c84e0 <col:2> '<bound member function type>' ->assign 0x55db2c6b2ac0
|       `-CXXThisExpr 0x55db2c6c84d0 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x55db2c6b2dd0 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x55db2c6b2cb8 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x55db2c6b2d38 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x55db2c6c86b0 <col:58, line:79:5>
|   |-BinaryOperator 0x55db2c6c85f8 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55db2c6c8590 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55db2c6c7568
|   | | `-MemberExpr 0x55db2c6c8560 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55db2c6c7628
|   | |   `-CXXThisExpr 0x55db2c6c8550 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55db2c6c85e0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x55db2c6c85c0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x55db2c6b2cb8 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x55db2c6c8690 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55db2c6c8628 <col:2> 'void *' lvalue ->_thunk 0x55db2c6c76a8
|     | `-CXXThisExpr 0x55db2c6c8618 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55db2c6c8678 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x55db2c6c8658 <col:11> 'void *' lvalue ParmVar 0x55db2c6b2d38 'user_data' 'void *'
|-CXXMethodDecl 0x55db2c6b2f20 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x55db2c6b2e90 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x55db2c6c8848 <col:35, line:87:5>
|   |-BinaryOperator 0x55db2c6c8778 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55db2c6c8710 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55db2c6c7568
|   | | `-MemberExpr 0x55db2c6c86e0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55db2c6c7628
|   | |   `-CXXThisExpr 0x55db2c6c86d0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55db2c6c8760 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55db2c6c8740 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55db2c6c7c60 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55db2c6c8828 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55db2c6c87a8 <col:2> 'void *' lvalue ->_thunk 0x55db2c6c76a8
|     | `-CXXThisExpr 0x55db2c6c8798 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55db2c6c8810 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55db2c6c87f8 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x55db2c6c87d8 <col:11> 'Element *' lvalue ParmVar 0x55db2c6b2e90 'element' 'Element *'
|-CXXMethodDecl 0x55db2c6b3068 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x55db2c6b2fd8 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x55db2c6c89e0 <col:29, line:94:5>
|   |-BinaryOperator 0x55db2c6c8910 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55db2c6c88a8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55db2c6c7568
|   | | `-MemberExpr 0x55db2c6c8878 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55db2c6c7628
|   | |   `-CXXThisExpr 0x55db2c6c8868 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55db2c6c88f8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55db2c6c88d8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55db2c6c7e38 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55db2c6c89c0 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55db2c6c8940 <col:2> 'void *' lvalue ->_thunk 0x55db2c6c76a8
|     | `-CXXThisExpr 0x55db2c6c8930 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55db2c6c89a8 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55db2c6c8990 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x55db2c6c8970 <col:11> 'Task *' lvalue ParmVar 0x55db2c6b2fd8 'task' 'Task *'
|-CXXMethodDecl 0x55db2c6b3158 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55db2c6c8ac0 <col:37, line:100:5>
|   `-ReturnStmt 0x55db2c6c8ab0 <line:99:2, col:19>
|     `-BinaryOperator 0x55db2c6c8a90 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x55db2c6c8a60 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x55db2c6c8a10 <col:9> 'Element *const' lvalue ->_owner 0x55db2c6c7708
|       |   `-CXXThisExpr 0x55db2c6c8a00 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x55db2c6c8a78 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x55db2c6c8a40 <col:19> 'int' 0
|-CXXMethodDecl 0x55db2c6b3218 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x55db2c6c8b80 <col:35, line:105:5>
|   `-ReturnStmt 0x55db2c6c8b70 <line:104:2, col:23>
|     `-BinaryOperator 0x55db2c6c8b50 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x55db2c6c8b38 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x55db2c6c8ae8 <col:9> 'const int' lvalue ->_schedpos1 0x55db2c6c7388
|       |   `-CXXThisExpr 0x55db2c6c8ad8 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x55db2c6c8b18 <col:23> 'int' 0
|-CXXMethodDecl 0x55db2c6b32d8 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x55db2c6c8be8 <col:51, line:118:5>
|   `-ReturnStmt 0x55db2c6c8bd8 <line:117:2, col:9>
|     `-MemberExpr 0x55db2c6c8ba8 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x55db2c6c73e8
|       `-CXXThisExpr 0x55db2c6c8b98 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55db2c6b3398 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x55db2c6c9140 <col:37, line:136:5>
|   `-IfStmt 0x55db2c6c9118 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x55db2c6c8ca8 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x55db2c6c8c90 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x55db2c6c8c70 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x55db2c6c8c40 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x55db2c626188
|     |       `-MemberExpr 0x55db2c6c8c10 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x55db2c6c73e8
|     |         `-CXXThisExpr 0x55db2c6c8c00 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x55db2c6c9088 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x55db2c6c9070 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x55db2c6c9040 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x55db2c6c9028 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x55db2c6c8ff0 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x55db2c6c8fd8 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x55db2c6c8fb8 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55db2c654960 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x55db2c6c8f58 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x55db2c6c8f40 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x55db2c6c8e68 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x55db2c6c8e50 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x55db2c6c8e30 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55db2c654620 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x55db2c6c8dd0 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x55db2c6c8cd0 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55db2c6c73e8
|     |         |     |   `-CXXThisExpr 0x55db2c6c8cc0 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x55db2c6c8e18 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x55db2c6c8e00 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x55db2c6c8db0 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x55db2c6c8d98 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x55db2c6c8d38 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x55db2c647c80 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x55db2c6c8fa0 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x55db2c6c8f88 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x55db2c6c8f20 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x55db2c6c8f08 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x55db2c6c8ed8 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x55db2c4a31d0 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x55db2c6c9108 <line:135:6, col:13>
|       `-CXXConstructExpr 0x55db2c6c90d8 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x55db2c6c90a8 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55db2c6c73e8
|           `-CXXThisExpr 0x55db2c6c9098 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x55db2c6b3458 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x55db2c6c9228 <col:35, line:141:5>
|   `-ReturnStmt 0x55db2c6c9218 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x55db2c6c91e0 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x55db2c6c91b0 <col:9, col:17> '<bound member function type>' ->router 0x55db2c6a6810
|         `-ImplicitCastExpr 0x55db2c6c9200 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55db2c6c9198 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55db2c6c9168 <col:9> 'Element *const' lvalue ->_owner 0x55db2c6c7708
|               `-CXXThisExpr 0x55db2c6c9158 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55db2c6b3518 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x55db2c6c92a8 <col:37, line:146:5>
|   `-ReturnStmt 0x55db2c6c9298 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x55db2c6c9280 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55db2c6c9250 <col:9> 'Element *const' lvalue ->_owner 0x55db2c6c7708
|         `-CXXThisExpr 0x55db2c6c9240 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55db2c6b35d8 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x55db2c6c9328 <col:41, line:151:5>
|   `-ReturnStmt 0x55db2c6c9318 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x55db2c6c9300 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x55db2c6c92d0 <col:9> 'RouterThread *const' lvalue ->_thread 0x55db2c6c7768
|         `-CXXThisExpr 0x55db2c6c92c0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55db2c6b36a0 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x55db2c6b3898 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55db2c6b3750 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55db2c6b37c8 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55db2c6c8048 <col:50> 'bool' false
|-CXXMethodDecl 0x55db2c6b3a18 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x55db2c6b3958 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x55db2c6c5bd0 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55db2c6b3ad0 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55db2c6c5d18 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55db2c6c5c88 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55db2c6c5e60 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55db2c6c5dd0 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x55db2c6c5fa8 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55db2c6c5f18 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x55db2c6c6070 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x55db2c6c9490 <col:32, line:223:5>
|   `-ExprWithCleanups 0x55db2c6c9478 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x55db2c6c9420 <col:2, col:47> 'void'
|       |-MemberExpr 0x55db2c6c9350 <col:2> '<bound member function type>' ->schedule_at_steady 0x55db2c6c5bd0
|       | `-CXXThisExpr 0x55db2c6c9340 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55db2c6c9460 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55db2c6c9448 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55db2c6c9400 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x55db2c6c93e8 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x55db2c6c93b8 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x55db2c4a31d0 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x55db2c6c61b0 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x55db2c6c6120 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x55db2c6c62f8 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55db2c6c6268 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55db2c6c9618 <col:56, line:241:5>
|   `-ExprWithCleanups 0x55db2c6c9600 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x55db2c6c95a8 <col:2, col:40> 'void'
|       |-MemberExpr 0x55db2c6c94b8 <col:2> '<bound member function type>' ->schedule_after 0x55db2c6c61b0
|       | `-CXXThisExpr 0x55db2c6c94a8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55db2c6c95e8 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55db2c6c95d0 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55db2c6c9568 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x55db2c6c9538 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x55db2c6c94f8 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x55db2c6c6268 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x55db2c6c9550 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55db2c6c9518 <col:38> 'int' 0
|-CXXMethodDecl 0x55db2c6c6440 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55db2c6c63b0 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55db2c6c9888 <col:58, line:249:5>
|   `-ExprWithCleanups 0x55db2c6c9870 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x55db2c6c9818 <col:2, col:49> 'void'
|       |-MemberExpr 0x55db2c6c9640 <col:2> '<bound member function type>' ->schedule_after 0x55db2c6c61b0
|       | `-CXXThisExpr 0x55db2c6c9630 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55db2c6c9858 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55db2c6c9840 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55db2c6c97c0 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x55db2c6c97a8 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55db2c6c9718 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55db2c627f78 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55db2c6c9800 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x55db2c6c97e8 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55db2c6c96f8 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x55db2c6c63b0 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55db2c6c6588 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x55db2c6c64f8 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x55db2c6c9a68 <col:58, line:261:5>
|   `-ExprWithCleanups 0x55db2c6c9a50 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x55db2c6c99f8 <col:2, col:38> 'void'
|       |-MemberExpr 0x55db2c6c98b0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55db2c6c5bd0
|       | `-CXXThisExpr 0x55db2c6c98a0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55db2c6c9a38 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55db2c6c9a20 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55db2c6c99c0 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55db2c6c99a8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55db2c6c9988 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55db2c654620 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55db2c6c9958 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55db2c6c9940 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55db2c6c98f0 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55db2c6c73e8
|             |     `-CXXThisExpr 0x55db2c6c98e0 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x55db2c6c9920 <col:33> 'const Timestamp' lvalue ParmVar 0x55db2c6c64f8 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x55db2c6c66d0 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55db2c6c6640 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55db2c6c9d40 <col:58, line:270:5>
|   `-ExprWithCleanups 0x55db2c6c9d28 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x55db2c6c9cd0 <col:2, col:79> 'void'
|       |-MemberExpr 0x55db2c6c9a90 <col:2> '<bound member function type>' ->schedule_at_steady 0x55db2c6c5bd0
|       | `-CXXThisExpr 0x55db2c6c9a80 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55db2c6c9d10 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55db2c6c9cf8 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55db2c6c9c90 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x55db2c6c9bc8 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x55db2c6c9bb0 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x55db2c6c9b40 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x55db2c6c9b10 <col:31, col:41> '<bound member function type>' .sec 0x55db2c4a4cc8
|             | |     `-ImplicitCastExpr 0x55db2c6c9b60 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x55db2c6c9ae0 <col:31> 'Timestamp' lvalue ->_expiry_s 0x55db2c6c73e8
|             | |         `-CXXThisExpr 0x55db2c6c9ad0 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x55db2c6c9b98 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x55db2c6c9b78 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55db2c6c6640 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x55db2c6c9c58 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x55db2c6c9c28 <col:60, col:70> '<bound member function type>' .subsec 0x55db2c4a53c0
|                 `-ImplicitCastExpr 0x55db2c6c9c78 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x55db2c6c9bf8 <col:60> 'Timestamp' lvalue ->_expiry_s 0x55db2c6c73e8
|                     `-CXXThisExpr 0x55db2c6c9be8 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x55db2c6c6818 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55db2c6c6788 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55db2c6ca078 <col:60, line:279:5>
|   `-ExprWithCleanups 0x55db2c6ca060 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x55db2c6ca008 <col:2, col:65> 'void'
|       |-MemberExpr 0x55db2c6c9d68 <col:2> '<bound member function type>' ->schedule_at_steady 0x55db2c6c5bd0
|       | `-CXXThisExpr 0x55db2c6c9d58 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55db2c6ca048 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55db2c6ca030 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55db2c6c9fd0 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x55db2c6c9fb8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55db2c6c9f98 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55db2c654620 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55db2c6c9f38 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55db2c6c9f20 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55db2c6c9da8 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55db2c6c73e8
|             |     `-CXXThisExpr 0x55db2c6c9d98 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x55db2c6c9f80 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x55db2c6c9f68 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x55db2c6c9ec8 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x55db2c6c9eb0 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x55db2c6c9e80 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55db2c627f78 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x55db2c6c9f08 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x55db2c6c9ef0 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x55db2c6c9e60 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x55db2c6c6788 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55db2c6c68e0 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x55db2c6c69a0 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x55db2c6ca540 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x55db2c6ca0d0 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x55db2c6ca0a0 <col:2> '<bound member function type>' ->unschedule 0x55db2c6c68e0
|   |   `-CXXThisExpr 0x55db2c6ca090 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x55db2c6ca528 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x55db2c6ca4f0 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x55db2c6ca4d8 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55db2c6ca188 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55db2c33c048 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x55db2c6ca100 <col:2> 'Timestamp' lvalue ->_expiry_s 0x55db2c6c73e8
|       | `-CXXThisExpr 0x55db2c6ca0f0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55db2c6ca170 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x55db2c6ca140 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55db2c6c6a60 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x55db2c6ca898 <col:42, line:310:5>
|   |-IfStmt 0x55db2c6ca6e0 <line:306:2, line:307:23>
|   | |-CallExpr 0x55db2c6ca610 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x55db2c6ca5f8 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x55db2c6ca598 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x55db2c6460f0 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x55db2c6ca6d0 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x55db2c6ca6b8 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x55db2c6ca688 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55db2c6ca670 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x55db2c6ca640 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x55db2c6ca888 <line:309:2, col:33>
|     `-ExprWithCleanups 0x55db2c6ca870 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x55db2c6ca840 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55db2c6ca828 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x55db2c6ca7e8 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55db2c6ca7d0 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55db2c6ca7a0 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55db2c628290 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55db2c6ca810 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x55db2c6ca780 <col:30> 'int' 500
|-CXXMethodDecl 0x55db2c6c6ba0 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55db2c6c6b10 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55db2c6c6c48 <col:69> "" ""
|-CXXMethodDecl 0x55db2c6c6d58 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55db2c6c6cc8 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55db2c6c6e00 <col:70> "" ""
|-CXXMethodDecl 0x55db2c6c6f10 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55db2c6c6e80 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55db2c6c6fb8 <col:71> "" ""
|-CXXMethodDecl 0x55db2c6c70c8 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55db2c6c7038 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55db2c6c7170 <col:72> "" ""
|-EnumDecl 0x55db2c6c71e0 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x55db2c6c72e0 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x55db2c6c7330 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55db2c6c72c0 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x55db2c6c72a0 <col:25> 'int' 1
|-AccessSpecDecl 0x55db2c6c7348 <line:339:3, col:10> col:3 private
|-FieldDecl 0x55db2c6c7388 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x55db2c6c73e8 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x55db2c6c7438 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55db2c6c7568 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x55db2c6c8058 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x55db2c6c7628 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x55db2c6c76a8 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55db2c6c7708 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x55db2c6c7768 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x55db2c6c78b8 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x55db2c6c77c8 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x55db2c6c7a88 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55db2c6c7970 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x55db2c6c79f0 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x55db2c6c7c60 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55db2c6c7b48 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x55db2c6c7bc8 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x55db2c6c7e38 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55db2c6c7d20 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x55db2c6c7da0 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x55db2c6c8008 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.13, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.13, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c6cbbb0 <../elements/standard/timedsource.hh:65:1, line:96:1> line:65:7 class TimedSource definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55db2c6cbd08 <col:1, col:7> col:7 implicit referenced class TimedSource
|-AccessSpecDecl 0x55db2c6cbd98 <col:38, col:44> col:38 public
|-CXXConstructorDecl 0x55db2c6cbe20 <line:67:3, col:15> col:3 TimedSource 'void ()'
|-CXXMethodDecl 0x55db2c6cbf20 <line:69:3, col:58> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x55db2c695bc8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55db2c6cdb60 <col:34, col:58>
|   `-ReturnStmt 0x55db2c6cdb50 <col:36, col:43>
|     `-ImplicitCastExpr 0x55db2c6cdb38 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55db2c6cdb10 <col:43> 'const char [12]' lvalue "TimedSource"
|-CXXMethodDecl 0x55db2c6cbfe8 <line:70:3, col:54> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x55db2c695c90 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55db2c6ce210 <col:34, col:54>
|   `-ReturnStmt 0x55db2c6cdbb0 <col:36, col:43>
|     `-ImplicitCastExpr 0x55db2c6cdb98 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55db2c6cdb78 <col:43> 'const char []' lvalue Var 0x55db2c695e30 'PORTS_0_1' 'const char []'
|-CXXMethodDecl 0x55db2c6cc0b0 <line:71:3, col:49> col:15 processing 'const char *() const'
| |-Overrides: [ 0x55db2c696058 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x55db2c6ce270 <col:34, col:49>
|   `-ReturnStmt 0x55db2c6ce260 <col:36, col:43>
|     `-ImplicitCastExpr 0x55db2c6ce248 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55db2c6ce228 <col:43> 'const char []' lvalue Var 0x55db2c6961a0 'PUSH' 'const char []'
|-CXXMethodDecl 0x55db2c6cc380 <line:73:3, col:49> col:7 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x55db2c697460 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x55db2c6cc230 <col:17, col:32> col:33 'Vector<String> &'
| `-ParmVarDecl 0x55db2c6cc2a8 <col:35, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x55db2c6cc4d8 <line:74:3, col:32> col:7 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x55db2c6976b0 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x55db2c6cc440 <col:18, col:31> col:32 'ErrorHandler *'
|-CXXMethodDecl 0x55db2c6cc620 <line:75:3, col:28> col:8 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x55db2c697ec8 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x55db2c6cc590 <col:16> col:28 'Element::CleanupStage'
|-CXXMethodDecl 0x55db2c6cc6e8 <line:76:3, col:21> col:8 add_handlers 'void ()'
| `-Overrides: [ 0x55db2c697530 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x55db2c6cc828 <line:78:3, col:25> col:8 run_timer 'void (Timer *)'
| |-Overrides: [ 0x55db2c6950e8 Element::run_timer 'void (Timer *)' ]
| `-ParmVarDecl 0x55db2c6cc798 <col:18, col:24> col:25 'Timer *'
|-AccessSpecDecl 0x55db2c6cc8d0 <line:80:2, col:9> col:2 private
|-FieldDecl 0x55db2c6cc908 <line:82:5, col:13> col:13 _packet 'Packet *'
|-FieldDecl 0x55db2c6cc968 <line:83:5, col:15> col:15 _interval 'Timestamp'
|-FieldDecl 0x55db2c6cc9d0 <line:84:5, col:9> col:9 _limit 'int'
|-FieldDecl 0x55db2c6cca38 <line:85:5, col:9> col:9 _count 'int'
|-FieldDecl 0x55db2c6cca98 <line:86:5, col:10> col:10 _active 'bool'
|-FieldDecl 0x55db2c6ccaf8 <line:87:5, col:10> col:10 _stop 'bool'
|-FieldDecl 0x55db2c6ccb58 <line:88:5, col:11> col:11 _timer 'Timer'
|-FieldDecl 0x55db2c6ccbb8 <line:89:5, col:12> col:12 _data 'String'
|-FieldDecl 0x55db2c6ccc18 <line:90:5, col:14> col:14 _headroom 'uint32_t':'unsigned int'
|-EnumDecl 0x55db2c6ccc68 <line:92:5, col:62> col:5
| |-EnumConstantDecl 0x55db2c6ccd30 <col:12> col:12 h_data 'TimedSource::(anonymous enum at ../elements/standard/timedsource.hh:92:5)'
| |-EnumConstantDecl 0x55db2c6ccd80 <col:20> col:20 h_interval 'TimedSource::(anonymous enum at ../elements/standard/timedsource.hh:92:5)'
| |-EnumConstantDecl 0x55db2c6ccdd0 <col:32> col:32 h_active 'TimedSource::(anonymous enum at ../elements/standard/timedsource.hh:92:5)'
| |-EnumConstantDecl 0x55db2c6cce20 <col:42> col:42 h_reset 'TimedSource::(anonymous enum at ../elements/standard/timedsource.hh:92:5)'
| `-EnumConstantDecl 0x55db2c6cce70 <col:51> col:51 h_headroom 'TimedSource::(anonymous enum at ../elements/standard/timedsource.hh:92:5)'
|-CXXMethodDecl 0x55db2c6ccfe8 <line:93:5, col:47> col:19 read_param 'String (Element *, void *)' static
| |-ParmVarDecl 0x55db2c6cced0 <col:30, col:38> col:39 'Element *'
| `-ParmVarDecl 0x55db2c6ccf50 <col:41, col:46> col:47 'void *'
|-CXXMethodDecl 0x55db2c6cd2c8 <line:94:5, col:78> col:16 change_param 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55db2c6cd0a8 <col:29, col:42> col:43 'const String &'
| |-ParmVarDecl 0x55db2c6cd120 <col:45, col:53> col:54 'Element *'
| |-ParmVarDecl 0x55db2c6cd1a0 <col:56, col:61> col:62 'void *'
| `-ParmVarDecl 0x55db2c6cd218 <col:64, col:77> col:78 'ErrorHandler *'
|-CXXConstructorDecl 0x55db2c6cd3b8 <line:65:7> col:7 implicit TimedSource 'void (const TimedSource &)' inline default_delete noexcept-unevaluated 0x55db2c6cd3b8
| `-ParmVarDecl 0x55db2c6cd4c8 <col:7> col:7 'const TimedSource &'
|-CXXConstructorDecl 0x55db2c6cd568 <col:7> col:7 implicit TimedSource 'void (TimedSource &&)' inline default_delete noexcept-unevaluated 0x55db2c6cd568
| `-ParmVarDecl 0x55db2c6cd678 <col:7> col:7 'TimedSource &&'
|-CXXMethodDecl 0x55db2c6cd718 <col:7> col:7 implicit operator= 'TimedSource &(const TimedSource &)' inline default_delete noexcept-unevaluated 0x55db2c6cd718
| `-ParmVarDecl 0x55db2c6cd828 <col:7> col:7 'const TimedSource &'
|-CXXMethodDecl 0x55db2c6cd898 <col:7> col:7 implicit operator= 'TimedSource &(TimedSource &&)' inline default_delete noexcept-unevaluated 0x55db2c6cd898
| `-ParmVarDecl 0x55db2c6cd9a8 <col:7> col:7 'TimedSource &&'
`-CXXDestructorDecl 0x55db2c6cda30 <col:7> col:7 implicit ~TimedSource 'void ()' inline default noexcept-unevaluated 0x55db2c6cda30
  `-Overrides: [ 0x55db2c694768 Element::~Element 'void () noexcept' ]

Layout: <CGRecordLayout
  LLVMType:%class.TimedSource = type <{ %class.Element.base, [4 x i8], %class.Packet*, %class.Timestamp, i32, i32, i8, i8, [6 x i8], %class.Timer, %class.String, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimedSource.base = type <{ %class.Element.base, [4 x i8], %class.Packet*, %class.Timestamp, i32, i32, i8, i8, [6 x i8], %class.Timer, %class.String, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c78c488 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55db2c78c5b8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x55db2c78c618 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x55db2c78c678 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x55db2c7fdd88 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55db2c7fde60 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55db2c7fde60
|-CXXConstructorDecl 0x55db2c7fe118 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55db2c7fe118
| `-ParmVarDecl 0x55db2c7fe228 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x55db2c7fe2c8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55db2c7fe2c8
  `-ParmVarDecl 0x55db2c7fe3d8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c78c2e0 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55db2c78c3f8 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x55db2c78c488 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55db2c78c5b8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x55db2c78c618 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x55db2c78c678 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x55db2c7fdd88 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x55db2c7fde60 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55db2c7fde60
| |-CXXConstructorDecl 0x55db2c7fe118 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55db2c7fe118
| | `-ParmVarDecl 0x55db2c7fe228 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x55db2c7fe2c8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55db2c7fe2c8
|   `-ParmVarDecl 0x55db2c7fe3d8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x55db2c78c738 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x55db2c78c798 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x55db2c78c738 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55db2c78c5b8 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x55db2c78c7f0 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x55db2c78c738 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55db2c78c618 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x55db2c78c848 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x55db2c78c738 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x55db2c78c678 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x55db2c78c8a0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55db2c7fdc90 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55db2c7fe5f8 <col:11>
|-CXXConstructorDecl 0x55db2c7fdf68 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55db2c7fdf68
| `-ParmVarDecl 0x55db2c7fe078 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x55db2c7fe478 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55db2c7fe478
  `-ParmVarDecl 0x55db2c7fe588 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c789f40 prev 0x55db2c694000 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x55db2c78a078 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x55db2c78a108 <col:33, col:39> col:33 public
|-EnumDecl 0x55db2c78a130 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x55db2c78a270 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x55db2c78a250 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x55db2c78a230 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x55db2c78a1f0 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x55db2c78a210 <col:26> 'int' 16
| `-EnumConstantDecl 0x55db2c78a340 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x55db2c78a320 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x55db2c78a300 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x55db2c78a2c0 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x55db2c78a2e0 <col:47> 'int' 31
|-EnumDecl 0x55db2c78a390 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x55db2c78a4d0 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x55db2c78a5f0 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c78a4b0 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x55db2c78a490 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x55db2c78a450 <col:26> 'int' 1
| |       `-IntegerLiteral 0x55db2c78a470 <col:29> 'int' 15
| `-EnumConstantDecl 0x55db2c78a5a0 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x55db2c78a608 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55db2c78a580 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x55db2c78a560 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x55db2c78a520 <col:51> 'int' 1
|         `-IntegerLiteral 0x55db2c78a540 <col:54> 'int' 10
|-CXXConstructorDecl 0x55db2c78a7d8 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x55db2c78a630 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x55db2c78a6b0 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x55db2c78a930 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x55db2c78a8a0 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x55db2c78aa28 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x55db2c78aa28
|-CXXMethodDecl 0x55db2c78abb8 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x55db2c78dcb8 <col:42, line:100:5>
|   `-ReturnStmt 0x55db2c78dca8 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x55db2c78dc90 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x55db2c78dc60 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x55db2c78c9e0
|         `-CXXThisExpr 0x55db2c78dc50 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55db2c78ac80 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x55db2c78dd38 <col:36, line:105:5>
|   `-ReturnStmt 0x55db2c78dd28 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x55db2c78dd10 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55db2c78dce0 <col:16> 'void *const' lvalue ->_thunk 0x55db2c78ca48
|         `-CXXThisExpr 0x55db2c78dcd0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55db2c78ad40 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x55db2c78ddb8 <col:37, line:110:5>
|   `-ReturnStmt 0x55db2c78dda8 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x55db2c78dd90 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55db2c78dd60 <col:16> 'Element *const' lvalue ->_owner 0x55db2c78cb08
|         `-CXXThisExpr 0x55db2c78dd50 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55db2c78ae00 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x55db2c78aec8 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x55db2c78af88 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x55db2c78b048 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x55db2c78dea0 <col:35, line:137:5>
|   `-ReturnStmt 0x55db2c78de90 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x55db2c78de58 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x55db2c78de28 <col:16, col:24> '<bound member function type>' ->router 0x55db2c6a6810
|         `-ImplicitCastExpr 0x55db2c78de78 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55db2c78de10 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55db2c78dde0 <col:16> 'Element *const' lvalue ->_owner 0x55db2c78cb08
|               `-CXXThisExpr 0x55db2c78ddd0 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55db2c78b108 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x55db2c78b2c8 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55db2c78b1b8 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55db2c78b230 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55db2c78b4d8 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x55db2c78b388 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x55db2c78b400 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x55db2c78b5a8 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x55db2c78dfb0 <col:35, line:181:5>
|   `-ReturnStmt 0x55db2c78dfa0 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x55db2c78df88 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x55db2c78df70 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x55db2c78df40 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x55db2c78c618
|           `-MemberExpr 0x55db2c78def8 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55db2c78c738
|             `-MemberExpr 0x55db2c78dec8 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x55db2c78c968
|               `-CXXThisExpr 0x55db2c78deb8 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x55db2c78b668 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x55db2c78e0c8 <col:30, line:192:5>
|   `-BinaryOperator 0x55db2c78e0a8 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55db2c78e050 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55db2c78c618
|     | `-MemberExpr 0x55db2c78e008 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55db2c78c738
|     |   `-MemberExpr 0x55db2c78dfd8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55db2c78c968
|     |     `-CXXThisExpr 0x55db2c78dfc8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55db2c78e090 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55db2c78e080 <col:32> 'bool' false
|-CXXMethodDecl 0x55db2c78b728 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x55db2c78e418 <col:30, line:206:5>
|   |-BinaryOperator 0x55db2c78e1c0 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55db2c78e168 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55db2c78c618
|   | | `-MemberExpr 0x55db2c78e120 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55db2c78c738
|   | |   `-MemberExpr 0x55db2c78e0f0 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55db2c78c968
|   | |     `-CXXThisExpr 0x55db2c78e0e0 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55db2c78e1a8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55db2c78e198 <col:32> 'bool' true
|   |-CallExpr 0x55db2c78e260 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x55db2c78e248 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55db2c78e228 <col:9> 'void ()' lvalue Function 0x55db2c6ad1c0 'click_fence' 'void ()'
|   `-IfStmt 0x55db2c78e400 <line:204:9, line:205:32>
|     |-BinaryOperator 0x55db2c78e340 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x55db2c78e310 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x55db2c78e2c0 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x55db2c78cd78
|     | |   `-MemberExpr 0x55db2c78e290 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x55db2c78cdf0
|     | |     `-CXXThisExpr 0x55db2c78e280 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x55db2c78e328 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x55db2c78e2f0 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x55db2c78e3c0 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x55db2c78e370 <col:13> '<bound member function type>' ->complete_schedule 0x55db2c78d7f0
|       | `-CXXThisExpr 0x55db2c78e360 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x55db2c78e3e8 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x55db2c78e3a0 <col:31> 'int' 0
|-CXXMethodDecl 0x55db2c78b7e8 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x55db2c78e540 <col:35, line:240:5>
|   `-BinaryOperator 0x55db2c78e520 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55db2c78e4c8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55db2c78c618
|     | `-MemberExpr 0x55db2c78e480 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55db2c78c738
|     |   `-MemberExpr 0x55db2c78e450 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55db2c78c968
|     |     `-CXXThisExpr 0x55db2c78e440 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55db2c78e508 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55db2c78e4f8 <col:32> 'bool' true
|-CXXMethodDecl 0x55db2c78b8a8 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x55db2c78e758 <col:37, line:253:5>
|   |-BinaryOperator 0x55db2c78e638 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55db2c78e5e0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x55db2c78c618
|   | | `-MemberExpr 0x55db2c78e598 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55db2c78c738
|   | |   `-MemberExpr 0x55db2c78e568 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55db2c78c968
|   | |     `-CXXThisExpr 0x55db2c78e558 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55db2c78e620 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55db2c78e610 <col:32> 'bool' false
|   `-BinaryOperator 0x55db2c78e738 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x55db2c78e6e0 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55db2c78c678
|     | `-MemberExpr 0x55db2c78e698 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55db2c78c738
|     |   `-MemberExpr 0x55db2c78e668 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55db2c78c968
|     |     `-CXXThisExpr 0x55db2c78e658 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x55db2c78e720 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x55db2c78e710 <col:41> 'bool' true
|-CXXMethodDecl 0x55db2c78b968 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x55db2c78e8d8 <col:37, line:264:5>
|   |-BinaryOperator 0x55db2c78e858 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x55db2c78e800 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x55db2c78c678
|   | | `-MemberExpr 0x55db2c78e7b8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x55db2c78c738
|   | |   `-MemberExpr 0x55db2c78e788 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x55db2c78c968
|   | |     `-CXXThisExpr 0x55db2c78e778 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x55db2c78e840 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x55db2c78e830 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x55db2c78e8b8 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x55db2c78e888 <col:9> '<bound member function type>' ->reschedule 0x55db2c78b728
|       `-CXXThisExpr 0x55db2c78e878 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x55db2c78bab0 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x55db2c78ba20 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x55db2c78bb80 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x55db2c78bcc8 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x55db2c78bc38 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x55db2c78be18 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x55db2c78bd88 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x55db2c78bee0 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x55db2c78bfa0 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x55db2c78c040 <col:53> "" ""
|-CXXMethodDecl 0x55db2c78c0d8 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x55db2c78c178 <col:47> "" ""
|-AccessSpecDecl 0x55db2c78c1e8 <line:303:3, col:10> col:3 private
|-FieldDecl 0x55db2c78c228 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x55db2c78c290 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x55db2c78c2e0 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55db2c78c3f8 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x55db2c78c488 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x55db2c78c5b8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x55db2c78c618 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x55db2c78c678 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x55db2c7fdd88 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x55db2c7fde60 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x55db2c7fde60
| | |-CXXConstructorDecl 0x55db2c7fe118 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x55db2c7fe118
| | | `-ParmVarDecl 0x55db2c7fe228 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x55db2c7fe2c8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x55db2c7fe2c8
| |   `-ParmVarDecl 0x55db2c7fe3d8 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x55db2c78c738 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x55db2c78c798 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x55db2c78c738 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55db2c78c5b8 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x55db2c78c7f0 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x55db2c78c738 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55db2c78c618 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x55db2c78c848 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x55db2c78c738 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x55db2c78c678 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x55db2c78c8a0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x55db2c7fdc90 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55db2c7fe5f8 <col:11>
| |-CXXConstructorDecl 0x55db2c7fdf68 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x55db2c7fdf68
| | `-ParmVarDecl 0x55db2c7fe078 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x55db2c7fe478 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x55db2c7fe478
|   `-ParmVarDecl 0x55db2c7fe588 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x55db2c78c968 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x55db2c78c9e0 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x55db2c78ca48 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55db2c78caa8 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x55db2c78cb08 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x55db2c78cb58 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55db2c78cc78 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x55db2c78cd18 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x55db2c78cd78 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x55db2c7f39c8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55db2c7f39c8
| | `-ParmVarDecl 0x55db2c7f3ad8 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x55db2c7f3b78 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55db2c7f3b78
| | `-ParmVarDecl 0x55db2c7f3c88 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x55db2c7f3cf8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x55db2c7f3cf8
| |-CXXMethodDecl 0x55db2c7f4578 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x55db2c7f4578
| | `-ParmVarDecl 0x55db2c7f4688 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x55db2c7f46f8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x55db2c7f46f8
| | `-ParmVarDecl 0x55db2c7f4808 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x55db2c7fe658 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x55db2c7fe730 <col:11>
|-FieldDecl 0x55db2c78cdf0 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x55db2c78cf38 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x55db2c78ce78 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x55db2c78d0e8 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x55db2c78cff8 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x55db2c78d1b0 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x55db2c78d270 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x55db2c78d330 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x55db2c78e9e8 <col:41, line:355:5>
|   `-ReturnStmt 0x55db2c78e9d8 <line:354:9, col:38>
|     `-BinaryOperator 0x55db2c78e9b8 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x55db2c78e988 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x55db2c78e938 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x55db2c78cd78
|       |   `-MemberExpr 0x55db2c78e908 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x55db2c78cdf0
|       |     `-CXXThisExpr 0x55db2c78e8f8 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x55db2c78e9a0 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x55db2c78e968 <col:38> 'int' 0
|-CXXMethodDecl 0x55db2c78d3f0 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x55db2c78d530 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x55db2c78d4a0 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x55db2c78d6a8 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x55db2c78d5e8 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x55db2c78d7f0 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x55db2c78d760 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x55db2c78d8b8 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x55db2c78da80 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x55db2c78d968 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x55db2c78d9e8 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x55db2c78db80 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x55db2c78dc10 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | class Args
         0 |   class ArgContext (base)
         0 |     const class Element * _context
         8 |     class ErrorHandler * _errh
        16 |     const char * _arg_keyword
        24 |     _Bool _read_status
        25 |   _Bool _my_conf
        26 |   _Bool _status
        27 |   uint8_t _simple_slotpos
        32 |   Vector<class String> * _conf
        40 |   class Vector<int> _kwpos
        40 |     class vector_memory<class sized_array_memory<4> > vm_
        40 |       vector_memory<class sized_array_memory<4> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   struct Args::Slot * _slots
        64 |   uint8_t [48] _simple_slotbuf
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c70d388 prev 0x55db2c659b78 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55db2c70d480 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x55db2c70d510 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x55db2c70d648 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x55db2c70d548 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55db2c7124f0 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55db2c7124d0 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55db2c712068 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55db2c712580 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55db2c712540 <col:17> 'ErrorHandler *' lvalue ParmVar 0x55db2c70d548 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55db2c7120d0 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55db2c712600 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55db2c7125c0 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x55db2c712130 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55db2c712640 <col:54> 'bool' false
| `-CompoundStmt 0x55db2c712748 <col:61, line:38:5>
|   `-BinaryOperator 0x55db2c712728 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x55db2c7126c0 <col:9> 'const Element *' lvalue ->_context 0x55db2c712008
|     | `-CXXThisExpr 0x55db2c7126b0 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x55db2c712710 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x55db2c7126f0 <col:20> 'int' 0
|-CXXConstructorDecl 0x55db2c70d858 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55db2c70d708 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x55db2c70d780 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x55db2c712528 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x55db2c712508 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x55db2c712008 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x55db2c7127a0 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x55db2c712760 <col:20> 'const Element *' lvalue ParmVar 0x55db2c70d708 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x55db2c712068 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x55db2c712820 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x55db2c7127e0 <col:36> 'ErrorHandler *' lvalue ParmVar 0x55db2c70d780 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x55db2c7120d0 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x55db2c7128a0 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x55db2c712860 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x55db2c712130 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x55db2c7128e0 <col:73> 'bool' false
| `-CompoundStmt 0x55db2c712958 <col:80, line:46:5>
|-CXXMethodDecl 0x55db2c70d988 <line:49:5, line:51:5> line:49:20 context 'const Element *() const'
| `-CompoundStmt 0x55db2c7129d0 <col:36, line:51:5>
|   `-ReturnStmt 0x55db2c7129c0 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x55db2c7129a8 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x55db2c712978 <col:16> 'const Element *const' lvalue ->_context 0x55db2c712008
|         `-CXXThisExpr 0x55db2c712968 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55db2c70da78 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x55db2c712a50 <col:32, line:57:5>
|   `-ReturnStmt 0x55db2c712a40 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x55db2c712a28 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x55db2c7129f8 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x55db2c712068
|         `-CXXThisExpr 0x55db2c7129e8 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x55db2c70db38 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x55db2c70dcc0 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x55db2c70dbf0 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55db2c70de10 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x55db2c70dd80 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55db2c70df60 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x55db2c70ded0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55db2c70e168 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x55db2c70e018 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x55db2c70e090 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x55db2c711f18 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x55db2c711ca0 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x55db2c711d20 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x55db2c711df0 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x55db2c711fd0 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x55db2c712008 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x55db2c712068 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x55db2c7120d0 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x55db2c712130 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x55db2c712180 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x55db2c712180
| `-ParmVarDecl 0x55db2c712298 <col:7> col:7 'const ArgContext &'
|-CXXMethodDecl 0x55db2c712338 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x55db2c712338
| `-ParmVarDecl 0x55db2c712448 <col:7> col:7 'const ArgContext &'
`-CXXDestructorDecl 0x55db2c64a810 <col:7> col:7 implicit ~ArgContext 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::Slot
         0 |   (Slot vtable pointer)
         8 |   struct Args::Slot * _next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c72bf38 prev 0x55db2c717968 <../dummy_inc/click/args.hh:826:5, line:833:5> line:826:12 referenced struct Slot definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55db2c72c030 <col:5, col:12> col:12 implicit referenced struct Slot
|-CXXConstructorDecl 0x55db2c72c120 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| `-CompoundStmt 0x55db2c75a660 <col:16, line:828:9>
|-CXXDestructorDecl 0x55db2c72c210 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| `-CompoundStmt 0x55db2c75a670 <col:25, line:830:9>
|-CXXMethodDecl 0x55db2c72c310 <line:831:9, col:32> col:22 store 'void ()' virtual pure
|-FieldDecl 0x55db2c72c3c0 <line:832:9, col:15> col:15 _next 'Args::Slot *'
|-CXXMethodDecl 0x55db2c72c468 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x55db2c72c468
| `-ParmVarDecl 0x55db2c72c578 <col:12> col:12 'const Args::Slot &'
`-CXXConstructorDecl 0x55db2c72cd38 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x55db2c72cd38
  `-ParmVarDecl 0x55db2c72ce48 <col:12> col:12 'const Args::Slot &'

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  NonVirtualBaseLLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c717778 <../dummy_inc/click/args.hh:247:1, line:898:1> line:247:7 referenced class Args definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-public 'ArgContext'
|-CXXRecordDecl 0x55db2c7178d8 <col:1, col:7> col:7 implicit referenced class Args
|-CXXRecordDecl 0x55db2c717968 <line:248:5, col:12> col:12 struct Slot
|-AccessSpecDecl 0x55db2c717a20 <line:250:3, col:9> col:3 public
|-CXXConstructorDecl 0x55db2c717b28 <line:254:5, col:32> col:5 Args 'void (ErrorHandler *)'
| `-ParmVarDecl 0x55db2c717a58 <col:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55db2c747e38 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55db2c747e18 <col:31> 'int' 0
|-CXXConstructorDecl 0x55db2c717e48 <line:259:5, col:60> col:5 Args 'void (const Vector<String> &, ErrorHandler *)'
| |-ParmVarDecl 0x55db2c717cc0 <col:10, col:32> col:32 conf 'const Vector<String> &'
| `-ParmVarDecl 0x55db2c717d38 <col:38, col:59> col:52 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55db2c747e70 <col:59> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55db2c747e50 <col:59> 'int' 0
|-CXXConstructorDecl 0x55db2c718020 <line:265:5, col:56> col:5 Args 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55db2c717f10 <col:10, col:25> col:25 context 'const Element *'
| `-ParmVarDecl 0x55db2c717f88 <col:34, col:55> col:48 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55db2c747ea8 <col:55> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55db2c747e88 <col:55> 'int' 0
|-CXXConstructorDecl 0x55db2c7183d8 <line:271:5, line:272:32> line:271:5 used Args 'void (const Vector<String> &, const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x55db2c7181c0 <col:10, col:32> col:32 conf 'const Vector<String> &'
| |-ParmVarDecl 0x55db2c718238 <col:38, col:53> col:53 context 'const Element *'
| `-ParmVarDecl 0x55db2c7182b0 <line:272:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x55db2c747ee0 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x55db2c747ec0 <col:31> 'int' 0
|-CXXConstructorDecl 0x55db2c718598 <line:279:5, col:23> col:5 Args 'void (const Args &)'
| `-ParmVarDecl 0x55db2c7184d8 <col:10, col:22> col:22 x 'const Args &'
|-CXXDestructorDecl 0x55db2c718690 <line:281:5, col:11> col:5 used ~Args 'void () noexcept'
|-CXXMethodDecl 0x55db2c718878 <line:285:5, col:34> col:11 operator= 'Args &(const Args &)'
| `-ParmVarDecl 0x55db2c718780 <col:21, col:33> col:33 x 'const Args &'
|-CXXMethodDecl 0x55db2c718968 <line:289:5, line:291:5> line:289:10 empty 'bool () const'
| `-CompoundStmt 0x55db2c748290 <col:24, line:291:5>
|   `-ReturnStmt 0x55db2c748280 <line:290:9, col:79>
|     `-BinaryOperator 0x55db2c748260 <col:16, col:79> 'bool' '&&'
|       |-BinaryOperator 0x55db2c748138 <col:16, col:47> 'bool' '&&'
|       | |-ParenExpr 0x55db2c748090 <col:16, col:41> 'bool'
|       | | `-BinaryOperator 0x55db2c748070 <col:17, col:40> 'bool' '||'
|       | |   |-UnaryOperator 0x55db2c747f68 <col:17, col:18> 'bool' prefix '!' cannot overflow
|       | |   | `-ImplicitCastExpr 0x55db2c747f50 <col:18> 'bool' <PointerToBoolean>
|       | |   |   `-ImplicitCastExpr 0x55db2c747f38 <col:18> 'Vector<String> *' <LValueToRValue>
|       | |   |     `-MemberExpr 0x55db2c747f08 <col:18> 'Vector<String> *const' lvalue ->_conf 0x55db2c738bf0
|       | |   |       `-CXXThisExpr 0x55db2c747ef8 <col:18> 'const Args *' implicit this
|       | |   `-UnaryOperator 0x55db2c748058 <col:27, col:40> 'bool' prefix '!' cannot overflow
|       | |     `-ImplicitCastExpr 0x55db2c748040 <col:28, col:40> 'bool' <IntegralToBoolean>
|       | |       `-CXXMemberCallExpr 0x55db2c748008 <col:28, col:40> 'Vector::size_type':'int'
|       | |         `-MemberExpr 0x55db2c747fd8 <col:28, col:35> '<bound member function type>' ->size 0x55db2c6ffa58
|       | |           `-ImplicitCastExpr 0x55db2c748028 <col:28> 'const Vector<String> *' <NoOp>
|       | |             `-ImplicitCastExpr 0x55db2c747fc0 <col:28> 'Vector<String> *' <LValueToRValue>
|       | |               `-MemberExpr 0x55db2c747f90 <col:28> 'Vector<String> *const' lvalue ->_conf 0x55db2c738bf0
|       | |                 `-CXXThisExpr 0x55db2c747f80 <col:28> 'const Args *' implicit this
|       | `-UnaryOperator 0x55db2c748120 <col:46, col:47> 'bool' prefix '!' cannot overflow
|       |   `-ImplicitCastExpr 0x55db2c748108 <col:47> 'bool' <PointerToBoolean>
|       |     `-ImplicitCastExpr 0x55db2c7480f0 <col:47> 'Args::Slot *' <LValueToRValue>
|       |       `-MemberExpr 0x55db2c7480c0 <col:47> 'Args::Slot *const' lvalue ->_slots 0x55db2c7469c0
|       |         `-CXXThisExpr 0x55db2c7480b0 <col:47> 'const Args *' implicit this
|       `-BinaryOperator 0x55db2c748240 <col:57, col:79> 'bool' '=='
|         |-ImplicitCastExpr 0x55db2c748228 <col:57, col:74> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55db2c748210 <col:57, col:74> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55db2c7481d0 <col:57, col:74> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55db2c7481b8 <col:57> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55db2c748168 <col:57> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x55db2c746a70
|         |     |   `-CXXThisExpr 0x55db2c748158 <col:57> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x55db2c748198 <col:73> 'int' 0
|         `-IntegerLiteral 0x55db2c7481f0 <col:79> 'int' 0
|-CXXMethodDecl 0x55db2c718a28 <line:294:5, line:296:5> line:294:10 results_empty 'bool () const'
| `-CompoundStmt 0x55db2c748468 <col:32, line:296:5>
|   `-ReturnStmt 0x55db2c748458 <line:295:9, col:49>
|     `-BinaryOperator 0x55db2c748438 <col:16, col:49> 'bool' '&&'
|       |-UnaryOperator 0x55db2c748318 <col:16, col:17> 'bool' prefix '!' cannot overflow
|       | `-ImplicitCastExpr 0x55db2c748300 <col:17> 'bool' <PointerToBoolean>
|       |   `-ImplicitCastExpr 0x55db2c7482e8 <col:17> 'Args::Slot *' <LValueToRValue>
|       |     `-MemberExpr 0x55db2c7482b8 <col:17> 'Args::Slot *const' lvalue ->_slots 0x55db2c7469c0
|       |       `-CXXThisExpr 0x55db2c7482a8 <col:17> 'const Args *' implicit this
|       `-BinaryOperator 0x55db2c748418 <col:27, col:49> 'bool' '=='
|         |-ImplicitCastExpr 0x55db2c748400 <col:27, col:44> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x55db2c7483e8 <col:27, col:44> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x55db2c7483a8 <col:27, col:44> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x55db2c748390 <col:27> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x55db2c748340 <col:27> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x55db2c746a70
|         |     |   `-CXXThisExpr 0x55db2c748330 <col:27> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x55db2c748370 <col:43> 'int' 0
|         `-IntegerLiteral 0x55db2c7483c8 <col:49> 'int' 0
|-CXXMethodDecl 0x55db2c718b18 <line:301:5, line:306:5> line:301:11 clear 'Args &()'
| `-CompoundStmt 0x55db2c748678 <col:19, line:306:5>
|   |-IfStmt 0x55db2c748598 <line:302:9, line:303:26>
|   | |-ImplicitCastExpr 0x55db2c7484d8 <line:302:13> 'bool' <PointerToBoolean>
|   | | `-ImplicitCastExpr 0x55db2c7484c0 <col:13> 'Vector<String> *' <LValueToRValue>
|   | |   `-MemberExpr 0x55db2c748490 <col:13> 'Vector<String> *' lvalue ->_conf 0x55db2c738bf0
|   | |     `-CXXThisExpr 0x55db2c748480 <col:13> 'Args *' implicit this
|   | `-CXXMemberCallExpr 0x55db2c748578 <line:303:13, col:26> 'void'
|   |   `-MemberExpr 0x55db2c748548 <col:13, col:20> '<bound member function type>' ->clear 0x55db2c702458
|   |     `-ImplicitCastExpr 0x55db2c748530 <col:13> 'Vector<String> *' <LValueToRValue>
|   |       `-MemberExpr 0x55db2c748500 <col:13> 'Vector<String> *' lvalue ->_conf 0x55db2c738bf0
|   |         `-CXXThisExpr 0x55db2c7484f0 <col:13> 'Args *' implicit this
|   |-CXXMemberCallExpr 0x55db2c748620 <line:304:9, col:22> 'void'
|   | `-MemberExpr 0x55db2c7485f0 <col:9, col:16> '<bound member function type>' .clear 0x55db2c746548
|   |   `-MemberExpr 0x55db2c7485c0 <col:9> 'Vector<int>':'Vector<int>' lvalue ->_kwpos 0x55db2c746960
|   |     `-CXXThisExpr 0x55db2c7485b0 <col:9> 'Args *' implicit this
|   `-ReturnStmt 0x55db2c748668 <line:305:9, col:17>
|     `-UnaryOperator 0x55db2c748650 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55db2c748640 <col:17> 'Args *' this
|-CXXMethodDecl 0x55db2c718d98 <line:313:5, col:36> col:11 bind 'Args &(Vector<String> &)'
| `-ParmVarDecl 0x55db2c718ca0 <col:16, col:32> col:32 conf 'Vector<String> &'
|-CXXMethodDecl 0x55db2c718f18 <line:317:5, col:38> col:11 push_back 'Args &(const String &)'
| `-ParmVarDecl 0x55db2c718e50 <col:21, col:35> col:35 arg 'const String &'
|-FunctionTemplateDecl 0x55db2c719298 <line:321:5, line:327:5> line:321:35 push_back
| |-TemplateTypeParmDecl 0x55db2c718fc0 <col:14, col:23> col:23 referenced typename depth 0 index 0 Iter
| `-CXXMethodDecl 0x55db2c7191f8 <col:29, line:327:5> line:321:35 push_back 'Args &(Iter, Iter)'
|   |-ParmVarDecl 0x55db2c719068 <col:45, col:50> col:50 referenced begin 'Iter'
|   |-ParmVarDecl 0x55db2c7190e0 <col:57, col:62> col:62 referenced end 'Iter'
|   `-CompoundStmt 0x55db2c748998 <col:67, line:327:5>
|     |-WhileStmt 0x55db2c748948 <line:322:9, line:325:9>
|     | |-CXXOperatorCallExpr 0x55db2c748760 <line:322:16, col:25> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x55db2c7486e0 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x55db2c652048 0x55db2c49b628 0x55db2c49b300 0x55db2c48cae0 0x55db2c48c790 0x55db2c48c080 0x55db2c45e9f0 0x55db2c3eac90
|     | | |-DeclRefExpr 0x55db2c7486a0 <col:16> 'Iter' lvalue ParmVar 0x55db2c719068 'begin' 'Iter'
|     | | `-DeclRefExpr 0x55db2c7486c0 <col:25> 'Iter' lvalue ParmVar 0x55db2c7190e0 'end' 'Iter'
|     | `-CompoundStmt 0x55db2c748928 <col:30, line:325:9>
|     |   |-CallExpr 0x55db2c7488c8 <line:323:13, col:29> '<dependent type>'
|     |   | |-UnresolvedMemberExpr 0x55db2c7487a8 <col:13> '<bound member function type>' lvalue
|     |   | `-CXXOperatorCallExpr 0x55db2c748898 <col:23, col:24> '<dependent type>'
|     |   |   |-UnresolvedLookupExpr 0x55db2c748828 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55db2c6571c8 0x55db2c656de8 0x55db2c656a18 0x55db2c656638 0x55db2c656258 0x55db2c655e88
|     |   |   `-DeclRefExpr 0x55db2c748808 <col:24> 'Iter' lvalue ParmVar 0x55db2c719068 'begin' 'Iter'
|     |   `-UnaryOperator 0x55db2c748910 <line:324:13, col:15> '<dependent type>' prefix '++' cannot overflow
|     |     `-DeclRefExpr 0x55db2c7488f0 <col:15> 'Iter' lvalue ParmVar 0x55db2c719068 'begin' 'Iter'
|     `-ReturnStmt 0x55db2c748988 <line:326:9, col:17>
|       `-UnaryOperator 0x55db2c748970 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55db2c748960 <col:17> 'Args *' this
|-CXXMethodDecl 0x55db2c7193a0 <line:331:5, col:44> col:11 push_back_words 'Args &(const String &)'
| `-ParmVarDecl 0x55db2c719310 <col:27, col:41> col:41 str 'const String &'
|-CXXMethodDecl 0x55db2c7194e8 <line:335:5, col:43> col:11 push_back_args 'Args &(const String &)'
| `-ParmVarDecl 0x55db2c719458 <col:26, col:40> col:40 str 'const String &'
|-CXXMethodDecl 0x55db2c7195b0 <line:350:5, line:353:5> line:350:11 reset 'Args &()'
| `-CompoundStmt 0x55db2c748a78 <col:19, line:353:5>
|   |-CXXMemberCallExpr 0x55db2c748a18 <line:351:9, col:21> 'void'
|   | |-MemberExpr 0x55db2c7489c8 <col:9> '<bound member function type>' ->reset_from 0x55db2c746de8
|   | | `-CXXThisExpr 0x55db2c7489b8 <col:9> 'Args *' implicit this
|   | `-IntegerLiteral 0x55db2c7489f8 <col:20> 'int' 0
|   `-ReturnStmt 0x55db2c748a68 <line:352:9, col:17>
|     `-UnaryOperator 0x55db2c748a50 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55db2c748a40 <col:17> 'Args *' this
|-VarDecl 0x55db2c719668 <line:356:5, col:38> col:26 referenced mandatory 'const int' static constexpr cinit
| `-IntegerLiteral 0x55db2c7196d0 <col:38> 'int' 1
|-VarDecl 0x55db2c719760 <line:357:5, col:39> col:26 referenced positional 'const int' static constexpr cinit
| `-IntegerLiteral 0x55db2c7197c8 <col:39> 'int' 2
|-VarDecl 0x55db2c719858 <line:358:5, col:39> col:26 deprecated 'const int' static constexpr cinit
| `-IntegerLiteral 0x55db2c7198c0 <col:39> 'int' 4
|-VarDecl 0x55db2c719950 <line:359:5, col:39> col:26 referenced firstmatch 'const int' static constexpr cinit
| `-IntegerLiteral 0x55db2c7199b8 <col:39> 'int' 8
|-FunctionTemplateDecl 0x55db2c719d50 <line:368:5, line:371:5> line:369:11 read
| |-TemplateTypeParmDecl 0x55db2c719a30 <line:368:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-CXXMethodDecl 0x55db2c719cb0 <line:369:5, line:371:5> line:369:11 read 'Args &(const char *, T &)'
| | |-ParmVarDecl 0x55db2c719ae0 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x55db2c719b88 <col:37, col:40> col:40 referenced x 'T &'
| | `-CompoundStmt 0x55db2c748bd0 <col:43, line:371:5>
| |   `-ReturnStmt 0x55db2c748bc0 <line:370:9, col:34>
| |     `-CallExpr 0x55db2c748b88 <col:16, col:34> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x55db2c748aa8 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x55db2c748b28 <col:21> 'const char *' lvalue ParmVar 0x55db2c719ae0 'keyword' 'const char *'
| |       |-IntegerLiteral 0x55db2c748b48 <col:30> 'int' 0
| |       `-DeclRefExpr 0x55db2c748b68 <col:33> 'T' lvalue ParmVar 0x55db2c719b88 'x' 'T &'
| |-CXXMethodDecl 0x55db2c64b698 <line:369:5, line:371:5> line:369:11 used read 'Args &(const char *, int &)'
| | |-TemplateArgument type 'int'
| | |-ParmVarDecl 0x55db2c64b4b0 <col:16, col:28> col:28 keyword 'const char *'
| | `-ParmVarDecl 0x55db2c64b588 <col:37, col:40> col:40 x 'int &'
| |-CXXMethodDecl 0x55db2c64bb28 <col:5, line:371:5> line:369:11 used read 'Args &(const char *, bool &)'
| | |-TemplateArgument type 'bool'
| | |-ParmVarDecl 0x55db2c64b948 <col:16, col:28> col:28 keyword 'const char *'
| | `-ParmVarDecl 0x55db2c64ba18 <col:37, col:40> col:40 x 'bool &'
| `-CXXMethodDecl 0x55db2c64c168 <col:5, line:371:5> line:369:11 used read 'Args &(const char *, unsigned int &)'
|   |-TemplateArgument type 'unsigned int'
|   |-ParmVarDecl 0x55db2c64bf88 <col:16, col:28> col:28 keyword 'const char *'
|   `-ParmVarDecl 0x55db2c64c058 <col:37, col:40> col:40 x 'unsigned int &'
|-FunctionTemplateDecl 0x55db2c71a088 <line:372:5, line:375:5> line:373:11 read_m
| |-TemplateTypeParmDecl 0x55db2c719db8 <line:372:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55db2c719fe8 <line:373:5, line:375:5> line:373:11 read_m 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55db2c719e70 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c719f18 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x55db2c748d20 <col:45, line:375:5>
|     `-ReturnStmt 0x55db2c748d10 <line:374:9, col:42>
|       `-CallExpr 0x55db2c748cd8 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55db2c748bf8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55db2c748c78 <col:21> 'const char *' lvalue ParmVar 0x55db2c719e70 'keyword' 'const char *'
|         |-DeclRefExpr 0x55db2c748c98 <col:30> 'const int' lvalue Var 0x55db2c719668 'mandatory' 'const int'
|         `-DeclRefExpr 0x55db2c748cb8 <col:41> 'T' lvalue ParmVar 0x55db2c719f18 'x' 'T &'
|-FunctionTemplateDecl 0x55db2c71a3b8 <line:376:5, line:379:5> line:377:11 read_p
| |-TemplateTypeParmDecl 0x55db2c71a0f0 <line:376:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-CXXMethodDecl 0x55db2c71a318 <line:377:5, line:379:5> line:377:11 read_p 'Args &(const char *, T &)'
| | |-ParmVarDecl 0x55db2c71a1a0 <col:18, col:30> col:30 referenced keyword 'const char *'
| | |-ParmVarDecl 0x55db2c71a248 <col:39, col:42> col:42 referenced x 'T &'
| | `-CompoundStmt 0x55db2c748e70 <col:45, line:379:5>
| |   `-ReturnStmt 0x55db2c748e60 <line:378:9, col:43>
| |     `-CallExpr 0x55db2c748e28 <col:16, col:43> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x55db2c748d48 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x55db2c748dc8 <col:21> 'const char *' lvalue ParmVar 0x55db2c71a1a0 'keyword' 'const char *'
| |       |-DeclRefExpr 0x55db2c748de8 <col:30> 'const int' lvalue Var 0x55db2c719760 'positional' 'const int'
| |       `-DeclRefExpr 0x55db2c748e08 <col:42> 'T' lvalue ParmVar 0x55db2c71a248 'x' 'T &'
| |-CXXMethodDecl 0x55db2c64ac98 <line:377:5, line:379:5> line:377:11 used read_p 'Args &(const char *, Timestamp &)'
| | |-TemplateArgument type 'Timestamp'
| | |-ParmVarDecl 0x55db2c64aab0 <col:18, col:30> col:30 keyword 'const char *'
| | `-ParmVarDecl 0x55db2c64ab88 <col:39, col:42> col:42 x 'Timestamp &'
| `-CXXMethodDecl 0x55db2c64b178 <col:5, line:379:5> line:377:11 used read_p 'Args &(const char *, String &)'
|   |-TemplateArgument type 'String'
|   |-ParmVarDecl 0x55db2c64af90 <col:18, col:30> col:30 keyword 'const char *'
|   `-ParmVarDecl 0x55db2c64b068 <col:39, col:42> col:42 x 'String &'
|-FunctionTemplateDecl 0x55db2c71a6e8 <line:380:5, line:383:5> line:381:11 read_mp
| |-TemplateTypeParmDecl 0x55db2c71a420 <line:380:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55db2c71a648 <line:381:5, line:383:5> line:381:11 read_mp 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x55db2c71a4d0 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c71a578 <col:40, col:43> col:43 referenced x 'T &'
|   `-CompoundStmt 0x55db2c749070 <col:46, line:383:5>
|     `-ReturnStmt 0x55db2c749060 <line:382:9, col:55>
|       `-CallExpr 0x55db2c749028 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55db2c748e98 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55db2c748f18 <col:21> 'const char *' lvalue ParmVar 0x55db2c71a4d0 'keyword' 'const char *'
|         |-BinaryOperator 0x55db2c748fe8 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55db2c748f98 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55db2c748f78 <col:30> 'const int' lvalue Var 0x55db2c719668 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55db2c748fd0 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55db2c748fb0 <col:42> 'const int' lvalue Var 0x55db2c719760 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x55db2c749008 <col:54> 'T' lvalue ParmVar 0x55db2c71a578 'x' 'T &'
|-FunctionTemplateDecl 0x55db2c71aae8 <line:384:5, line:388:5> line:385:11 read
| |-TemplateTypeParmDecl 0x55db2c71a750 <line:384:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55db2c71aa48 <line:385:5, line:388:5> line:385:11 read 'Args &(const char *, int, T &)'
|   |-ParmVarDecl 0x55db2c71a800 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c71a880 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55db2c71a928 <col:48, col:51> col:51 referenced x 'T &'
|   `-CompoundStmt 0x55db2c7491b0 <col:54, line:388:5>
|     |-CallExpr 0x55db2c749138 <line:386:9, col:47> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55db2c749088 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55db2c7490c8 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55db2c7490d8 <col:30> 'const char *' lvalue ParmVar 0x55db2c71a800 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55db2c7490f8 <col:39> 'int' lvalue ParmVar 0x55db2c71a880 'flags' 'int'
|     | `-DeclRefExpr 0x55db2c749118 <col:46> 'T' lvalue ParmVar 0x55db2c71a928 'x' 'T &'
|     `-ReturnStmt 0x55db2c7491a0 <line:387:9, col:17>
|       `-UnaryOperator 0x55db2c749188 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55db2c749178 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55db2c71af98 <line:400:5, line:403:5> line:401:11 read_or_set
| |-TemplateTypeParmDecl 0x55db2c71ab58 <line:400:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55db2c71abd8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55db2c71aef8 <line:401:5, line:403:5> line:401:11 read_or_set 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x55db2c71ac98 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c71ad38 <col:44, col:47> col:47 referenced x 'T &'
|   |-ParmVarDecl 0x55db2c71add8 <col:50, col:59> col:59 referenced default_value 'const V &'
|   `-CompoundStmt 0x55db2c749320 <col:74, line:403:5>
|     `-ReturnStmt 0x55db2c749310 <line:402:9, col:56>
|       `-CallExpr 0x55db2c7492d0 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55db2c7491e0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55db2c749250 <col:28> 'const char *' lvalue ParmVar 0x55db2c71ac98 'keyword' 'const char *'
|         |-IntegerLiteral 0x55db2c749270 <col:37> 'int' 0
|         |-DeclRefExpr 0x55db2c749290 <col:40> 'T' lvalue ParmVar 0x55db2c71ad38 'x' 'T &'
|         `-DeclRefExpr 0x55db2c7492b0 <col:43> 'const V' lvalue ParmVar 0x55db2c71add8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55db2c71b408 <line:404:5, line:407:5> line:405:11 read_or_set_p
| |-TemplateTypeParmDecl 0x55db2c71b008 <line:404:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55db2c71b088 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55db2c71b368 <line:405:5, line:407:5> line:405:11 read_or_set_p 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x55db2c71b148 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c71b1e8 <col:46, col:49> col:49 referenced x 'T &'
|   |-ParmVarDecl 0x55db2c71b288 <col:52, col:61> col:61 referenced default_value 'const V &'
|   `-CompoundStmt 0x55db2c749488 <col:76, line:407:5>
|     `-ReturnStmt 0x55db2c749478 <line:406:9, col:65>
|       `-CallExpr 0x55db2c749438 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55db2c749348 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55db2c7493b8 <col:28> 'const char *' lvalue ParmVar 0x55db2c71b148 'keyword' 'const char *'
|         |-DeclRefExpr 0x55db2c7493d8 <col:37> 'const int' lvalue Var 0x55db2c719760 'positional' 'const int'
|         |-DeclRefExpr 0x55db2c7493f8 <col:49> 'T' lvalue ParmVar 0x55db2c71b1e8 'x' 'T &'
|         `-DeclRefExpr 0x55db2c749418 <col:52> 'const V' lvalue ParmVar 0x55db2c71b288 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55db2c71b958 <line:408:5, line:412:5> line:409:11 read_or_set
| |-TemplateTypeParmDecl 0x55db2c71b478 <line:408:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55db2c71b4f8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55db2c71b8b8 <line:409:5, line:412:5> line:409:11 read_or_set 'Args &(const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x55db2c71b5b8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c71b638 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x55db2c71b6d8 <col:55, col:58> col:58 referenced x 'T &'
|   |-ParmVarDecl 0x55db2c71b778 <col:61, col:70> col:70 referenced default_value 'const V &'
|   `-CompoundStmt 0x55db2c7495f0 <col:85, line:412:5>
|     |-CallExpr 0x55db2c749570 <line:410:9, col:69> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55db2c7494a0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x55db2c7494e0 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x55db2c7494f0 <col:37> 'const char *' lvalue ParmVar 0x55db2c71b5b8 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55db2c749510 <col:46> 'int' lvalue ParmVar 0x55db2c71b638 'flags' 'int'
|     | |-DeclRefExpr 0x55db2c749530 <col:53> 'T' lvalue ParmVar 0x55db2c71b6d8 'x' 'T &'
|     | `-DeclRefExpr 0x55db2c749550 <col:56> 'const V' lvalue ParmVar 0x55db2c71b778 'default_value' 'const V &'
|     `-ReturnStmt 0x55db2c7495e0 <line:411:9, col:17>
|       `-UnaryOperator 0x55db2c7495c8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55db2c7495b8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55db2c71bde8 <line:422:5, line:425:5> line:423:11 read
| |-TemplateTypeParmDecl 0x55db2c71b9d0 <line:422:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55db2c71ba48 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55db2c71bd48 <line:423:5, line:425:5> line:423:11 read 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55db2c71bb08 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c71bb80 <col:37, col:39> col:39 referenced parser 'P'
|   |-ParmVarDecl 0x55db2c71bc28 <col:47, col:50> col:50 referenced x 'T &'
|   `-CompoundStmt 0x55db2c749770 <col:53, line:425:5>
|     `-ReturnStmt 0x55db2c749760 <line:424:9, col:42>
|       `-CallExpr 0x55db2c749720 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55db2c749620 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55db2c7496a0 <col:21> 'const char *' lvalue ParmVar 0x55db2c71bb08 'keyword' 'const char *'
|         |-IntegerLiteral 0x55db2c7496c0 <col:30> 'int' 0
|         |-DeclRefExpr 0x55db2c7496e0 <col:33> 'P' lvalue ParmVar 0x55db2c71bb80 'parser' 'P'
|         `-DeclRefExpr 0x55db2c749700 <col:41> 'T' lvalue ParmVar 0x55db2c71bc28 'x' 'T &'
|-FunctionTemplateDecl 0x55db2c71c238 <line:426:5, line:429:5> line:427:11 read_m
| |-TemplateTypeParmDecl 0x55db2c71be58 <line:426:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55db2c71bed8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55db2c71c198 <line:427:5, line:429:5> line:427:11 read_m 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55db2c71bf98 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c71c010 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55db2c71c0b8 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x55db2c7498e8 <col:55, line:429:5>
|     `-ReturnStmt 0x55db2c7498d8 <line:428:9, col:50>
|       `-CallExpr 0x55db2c749898 <col:16, col:50> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55db2c749798 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55db2c749818 <col:21> 'const char *' lvalue ParmVar 0x55db2c71bf98 'keyword' 'const char *'
|         |-DeclRefExpr 0x55db2c749838 <col:30> 'const int' lvalue Var 0x55db2c719668 'mandatory' 'const int'
|         |-DeclRefExpr 0x55db2c749858 <col:41> 'P' lvalue ParmVar 0x55db2c71c010 'parser' 'P'
|         `-DeclRefExpr 0x55db2c749878 <col:49> 'T' lvalue ParmVar 0x55db2c71c0b8 'x' 'T &'
|-FunctionTemplateDecl 0x55db2c71c688 <line:430:5, line:433:5> line:431:11 read_p
| |-TemplateTypeParmDecl 0x55db2c71c2a8 <line:430:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55db2c71c328 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55db2c71c5e8 <line:431:5, line:433:5> line:431:11 read_p 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55db2c71c3e8 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c71c460 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55db2c71c508 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x55db2c749a60 <col:55, line:433:5>
|     `-ReturnStmt 0x55db2c749a50 <line:432:9, col:51>
|       `-CallExpr 0x55db2c749a10 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55db2c749910 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55db2c749990 <col:21> 'const char *' lvalue ParmVar 0x55db2c71c3e8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55db2c7499b0 <col:30> 'const int' lvalue Var 0x55db2c719760 'positional' 'const int'
|         |-DeclRefExpr 0x55db2c7499d0 <col:42> 'P' lvalue ParmVar 0x55db2c71c460 'parser' 'P'
|         `-DeclRefExpr 0x55db2c7499f0 <col:50> 'T' lvalue ParmVar 0x55db2c71c508 'x' 'T &'
|-FunctionTemplateDecl 0x55db2c71cad8 <line:434:5, line:437:5> line:435:11 read_mp
| |-TemplateTypeParmDecl 0x55db2c71c6f8 <line:434:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55db2c71c778 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55db2c71ca38 <line:435:5, line:437:5> line:435:11 read_mp 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55db2c71c838 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c71c8b0 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x55db2c71c958 <col:50, col:53> col:53 referenced x 'T &'
|   `-CompoundStmt 0x55db2c749c88 <col:56, line:437:5>
|     `-ReturnStmt 0x55db2c749c78 <line:436:9, col:63>
|       `-CallExpr 0x55db2c749c38 <col:16, col:63> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55db2c749a88 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55db2c749b08 <col:21> 'const char *' lvalue ParmVar 0x55db2c71c838 'keyword' 'const char *'
|         |-BinaryOperator 0x55db2c749bd8 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55db2c749b88 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55db2c749b68 <col:30> 'const int' lvalue Var 0x55db2c719668 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55db2c749bc0 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55db2c749ba0 <col:42> 'const int' lvalue Var 0x55db2c719760 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x55db2c749bf8 <col:54> 'P' lvalue ParmVar 0x55db2c71c8b0 'parser' 'P'
|         `-DeclRefExpr 0x55db2c749c18 <col:62> 'T' lvalue ParmVar 0x55db2c71c958 'x' 'T &'
|-FunctionTemplateDecl 0x55db2c71d008 <line:438:5, line:442:5> line:439:11 read
| |-TemplateTypeParmDecl 0x55db2c71cb48 <line:438:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55db2c71cbc8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55db2c71cf68 <line:439:5, line:442:5> line:439:11 read 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55db2c71cc88 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c71cd08 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55db2c71cd80 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x55db2c71ce28 <col:58, col:61> col:61 referenced x 'T &'
|   `-CompoundStmt 0x55db2c749df0 <col:64, line:442:5>
|     |-CallExpr 0x55db2c749d70 <line:440:9, col:55> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55db2c749ca0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55db2c749ce0 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55db2c749cf0 <col:30> 'const char *' lvalue ParmVar 0x55db2c71cc88 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55db2c749d10 <col:39> 'int' lvalue ParmVar 0x55db2c71cd08 'flags' 'int'
|     | |-DeclRefExpr 0x55db2c749d30 <col:46> 'P' lvalue ParmVar 0x55db2c71cd80 'parser' 'P'
|     | `-DeclRefExpr 0x55db2c749d50 <col:54> 'T' lvalue ParmVar 0x55db2c71ce28 'x' 'T &'
|     `-ReturnStmt 0x55db2c749de0 <line:441:9, col:17>
|       `-UnaryOperator 0x55db2c749dc8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55db2c749db8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55db2c71d608 <line:455:5, line:458:5> line:456:11 read_or_set
| |-TemplateTypeParmDecl 0x55db2c71d080 <line:455:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55db2c71d0f8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55db2c71d178 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55db2c71d568 <line:456:5, line:458:5> line:456:11 read_or_set 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x55db2c71d240 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c71d2b8 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55db2c71d358 <col:54, col:57> col:57 referenced x 'T &'
|   |-ParmVarDecl 0x55db2c71d428 <col:60, col:69> col:69 referenced default_value 'const V &'
|   `-CompoundStmt 0x55db2c749f88 <col:84, line:458:5>
|     `-ReturnStmt 0x55db2c749f78 <line:457:9, col:64>
|       `-CallExpr 0x55db2c749f30 <col:16, col:64> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55db2c749e20 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55db2c749e90 <col:28> 'const char *' lvalue ParmVar 0x55db2c71d240 'keyword' 'const char *'
|         |-IntegerLiteral 0x55db2c749eb0 <col:37> 'int' 0
|         |-DeclRefExpr 0x55db2c749ed0 <col:40> 'P' lvalue ParmVar 0x55db2c71d2b8 'parser' 'P'
|         |-DeclRefExpr 0x55db2c749ef0 <col:48> 'T' lvalue ParmVar 0x55db2c71d358 'x' 'T &'
|         `-DeclRefExpr 0x55db2c749f10 <col:51> 'const V' lvalue ParmVar 0x55db2c71d428 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55db2c71db88 <line:459:5, line:462:5> line:460:11 read_or_set_p
| |-TemplateTypeParmDecl 0x55db2c71d680 <line:459:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55db2c71d6f8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55db2c71d778 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55db2c71dae8 <line:460:5, line:462:5> line:460:11 read_or_set_p 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x55db2c71d840 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c71d8b8 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x55db2c71d958 <col:56, col:59> col:59 referenced x 'T &'
|   |-ParmVarDecl 0x55db2c71d9f8 <col:62, col:71> col:71 referenced default_value 'const V &'
|   `-CompoundStmt 0x55db2c74a118 <col:86, line:462:5>
|     `-ReturnStmt 0x55db2c74a108 <line:461:9, col:73>
|       `-CallExpr 0x55db2c74a0c0 <col:16, col:73> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55db2c749fb0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55db2c74a020 <col:28> 'const char *' lvalue ParmVar 0x55db2c71d840 'keyword' 'const char *'
|         |-DeclRefExpr 0x55db2c74a040 <col:37> 'const int' lvalue Var 0x55db2c719760 'positional' 'const int'
|         |-DeclRefExpr 0x55db2c74a060 <col:49> 'P' lvalue ParmVar 0x55db2c71d8b8 'parser' 'P'
|         |-DeclRefExpr 0x55db2c74a080 <col:57> 'T' lvalue ParmVar 0x55db2c71d958 'x' 'T &'
|         `-DeclRefExpr 0x55db2c74a0a0 <col:60> 'const V' lvalue ParmVar 0x55db2c71d9f8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x55db2c71e1e8 <line:463:5, line:467:5> line:464:11 read_or_set
| |-TemplateTypeParmDecl 0x55db2c71dc00 <line:463:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55db2c71dc78 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x55db2c71dcf8 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55db2c71e148 <line:464:5, line:467:5> line:464:11 read_or_set 'Args &(const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x55db2c71ddc0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c71de40 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x55db2c71deb8 <col:55, col:57> col:57 referenced parser 'P'
|   |-ParmVarDecl 0x55db2c71df58 <col:65, col:68> col:68 referenced x 'T &'
|   |-ParmVarDecl 0x55db2c71dff8 <col:71, col:80> col:80 referenced default_value 'const V &'
|   `-CompoundStmt 0x55db2c74a2a8 <col:95, line:467:5>
|     |-CallExpr 0x55db2c74a220 <line:465:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55db2c74a130 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x55db2c74a170 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x55db2c74a180 <col:37> 'const char *' lvalue ParmVar 0x55db2c71ddc0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55db2c74a1a0 <col:46> 'int' lvalue ParmVar 0x55db2c71de40 'flags' 'int'
|     | |-DeclRefExpr 0x55db2c74a1c0 <col:53> 'P' lvalue ParmVar 0x55db2c71deb8 'parser' 'P'
|     | |-DeclRefExpr 0x55db2c74a1e0 <col:61> 'T' lvalue ParmVar 0x55db2c71df58 'x' 'T &'
|     | `-DeclRefExpr 0x55db2c74a200 <col:64> 'const V' lvalue ParmVar 0x55db2c71dff8 'default_value' 'const V &'
|     `-ReturnStmt 0x55db2c74a298 <line:466:9, col:17>
|       `-UnaryOperator 0x55db2c74a280 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55db2c74a270 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55db2c71e7c8 <line:478:5, line:481:5> line:479:11 read
| |-TemplateTypeParmDecl 0x55db2c71e268 <line:478:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55db2c71e2e8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55db2c71e368 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55db2c71e728 <line:479:5, line:481:5> line:479:11 read 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55db2c71e430 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c71e4a8 <col:37, col:39> col:39 referenced parser 'P'
|   |-ParmVarDecl 0x55db2c71e548 <col:47, col:51> col:51 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55db2c71e5e8 <col:55, col:59> col:59 referenced x2 'T2 &'
|   `-CompoundStmt 0x55db2c74a450 <col:63, line:481:5>
|     `-ReturnStmt 0x55db2c74a440 <line:480:9, col:47>
|       `-CallExpr 0x55db2c74a3f8 <col:16, col:47> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55db2c74a2d8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55db2c74a358 <col:21> 'const char *' lvalue ParmVar 0x55db2c71e430 'keyword' 'const char *'
|         |-IntegerLiteral 0x55db2c74a378 <col:30> 'int' 0
|         |-DeclRefExpr 0x55db2c74a398 <col:33> 'P' lvalue ParmVar 0x55db2c71e4a8 'parser' 'P'
|         |-DeclRefExpr 0x55db2c74a3b8 <col:41> 'T1' lvalue ParmVar 0x55db2c71e548 'x1' 'T1 &'
|         `-DeclRefExpr 0x55db2c74a3d8 <col:45> 'T2' lvalue ParmVar 0x55db2c71e5e8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55db2c71ed48 <line:482:5, line:485:5> line:483:11 read_m
| |-TemplateTypeParmDecl 0x55db2c71e840 <line:482:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55db2c71e8b8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55db2c71e938 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55db2c71eca8 <line:483:5, line:485:5> line:483:11 read_m 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55db2c71ea00 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c71ea78 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55db2c71eb18 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55db2c71ebb8 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x55db2c74a5f0 <col:65, line:485:5>
|     `-ReturnStmt 0x55db2c74a5e0 <line:484:9, col:55>
|       `-CallExpr 0x55db2c74a598 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55db2c74a478 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55db2c74a4f8 <col:21> 'const char *' lvalue ParmVar 0x55db2c71ea00 'keyword' 'const char *'
|         |-DeclRefExpr 0x55db2c74a518 <col:30> 'const int' lvalue Var 0x55db2c719668 'mandatory' 'const int'
|         |-DeclRefExpr 0x55db2c74a538 <col:41> 'P' lvalue ParmVar 0x55db2c71ea78 'parser' 'P'
|         |-DeclRefExpr 0x55db2c74a558 <col:49> 'T1' lvalue ParmVar 0x55db2c71eb18 'x1' 'T1 &'
|         `-DeclRefExpr 0x55db2c74a578 <col:53> 'T2' lvalue ParmVar 0x55db2c71ebb8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55db2c71f2c8 <line:486:5, line:489:5> line:487:11 read_p
| |-TemplateTypeParmDecl 0x55db2c71edc0 <line:486:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55db2c71ee38 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55db2c71eeb8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55db2c71f228 <line:487:5, line:489:5> line:487:11 read_p 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55db2c71ef80 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c71eff8 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x55db2c71f098 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55db2c71f138 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x55db2c74a790 <col:65, line:489:5>
|     `-ReturnStmt 0x55db2c74a780 <line:488:9, col:56>
|       `-CallExpr 0x55db2c74a738 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55db2c74a618 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55db2c74a698 <col:21> 'const char *' lvalue ParmVar 0x55db2c71ef80 'keyword' 'const char *'
|         |-DeclRefExpr 0x55db2c74a6b8 <col:30> 'const int' lvalue Var 0x55db2c719760 'positional' 'const int'
|         |-DeclRefExpr 0x55db2c74a6d8 <col:42> 'P' lvalue ParmVar 0x55db2c71eff8 'parser' 'P'
|         |-DeclRefExpr 0x55db2c74a6f8 <col:50> 'T1' lvalue ParmVar 0x55db2c71f098 'x1' 'T1 &'
|         `-DeclRefExpr 0x55db2c74a718 <col:54> 'T2' lvalue ParmVar 0x55db2c71f138 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55db2c71f848 <line:490:5, line:493:5> line:491:11 read_mp
| |-TemplateTypeParmDecl 0x55db2c71f340 <line:490:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55db2c71f3b8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55db2c71f438 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55db2c71f7a8 <line:491:5, line:493:5> line:491:11 read_mp 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55db2c71f500 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c71f578 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x55db2c71f618 <col:50, col:54> col:54 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55db2c71f6b8 <col:58, col:62> col:62 referenced x2 'T2 &'
|   `-CompoundStmt 0x55db2c74a9e0 <col:66, line:493:5>
|     `-ReturnStmt 0x55db2c74a9d0 <line:492:9, col:68>
|       `-CallExpr 0x55db2c74a988 <col:16, col:68> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55db2c74a7b8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55db2c74a838 <col:21> 'const char *' lvalue ParmVar 0x55db2c71f500 'keyword' 'const char *'
|         |-BinaryOperator 0x55db2c74a908 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x55db2c74a8b8 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55db2c74a898 <col:30> 'const int' lvalue Var 0x55db2c719668 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55db2c74a8f0 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55db2c74a8d0 <col:42> 'const int' lvalue Var 0x55db2c719760 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x55db2c74a928 <col:54> 'P' lvalue ParmVar 0x55db2c71f578 'parser' 'P'
|         |-DeclRefExpr 0x55db2c74a948 <col:62> 'T1' lvalue ParmVar 0x55db2c71f618 'x1' 'T1 &'
|         `-DeclRefExpr 0x55db2c74a968 <col:66> 'T2' lvalue ParmVar 0x55db2c71f6b8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x55db2c71fea8 <line:494:5, line:498:5> line:495:11 read
| |-TemplateTypeParmDecl 0x55db2c71f8c0 <line:494:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55db2c71f938 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55db2c71f9b8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55db2c71fe08 <line:495:5, line:498:5> line:495:11 read 'Args &(const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55db2c71fa80 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c71fb00 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x55db2c71fb78 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x55db2c71fc18 <col:58, col:62> col:62 referenced x1 'T1 &'
|   |-ParmVarDecl 0x55db2c71fcb8 <col:66, col:70> col:70 referenced x2 'T2 &'
|   `-CompoundStmt 0x55db2c74ab70 <col:74, line:498:5>
|     |-CallExpr 0x55db2c74aae8 <line:496:9, col:60> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55db2c74a9f8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x55db2c74aa38 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x55db2c74aa48 <col:30> 'const char *' lvalue ParmVar 0x55db2c71fa80 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55db2c74aa68 <col:39> 'int' lvalue ParmVar 0x55db2c71fb00 'flags' 'int'
|     | |-DeclRefExpr 0x55db2c74aa88 <col:46> 'P' lvalue ParmVar 0x55db2c71fb78 'parser' 'P'
|     | |-DeclRefExpr 0x55db2c74aaa8 <col:54> 'T1' lvalue ParmVar 0x55db2c71fc18 'x1' 'T1 &'
|     | `-DeclRefExpr 0x55db2c74aac8 <col:58> 'T2' lvalue ParmVar 0x55db2c71fcb8 'x2' 'T2 &'
|     `-ReturnStmt 0x55db2c74ab60 <line:497:9, col:17>
|       `-UnaryOperator 0x55db2c74ab48 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55db2c74ab38 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55db2c720208 <line:506:5, line:509:5> line:507:11 read_with
| |-TemplateTypeParmDecl 0x55db2c71ff28 <line:506:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55db2c720168 <line:507:5, line:509:5> line:507:11 read_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55db2c71ffe0 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c720058 <col:42, col:44> col:44 referenced parser 'P'
|   `-CompoundStmt 0x55db2c74acb8 <col:52, line:509:5>
|     `-ReturnStmt 0x55db2c74aca8 <line:508:9, col:44>
|       `-CallExpr 0x55db2c74ac70 <col:16, col:44> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55db2c74aba0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55db2c74ac10 <col:26> 'const char *' lvalue ParmVar 0x55db2c71ffe0 'keyword' 'const char *'
|         |-IntegerLiteral 0x55db2c74ac30 <col:35> 'int' 0
|         `-DeclRefExpr 0x55db2c74ac50 <col:38> 'P' lvalue ParmVar 0x55db2c720058 'parser' 'P'
|-FunctionTemplateDecl 0x55db2c720508 <line:510:5, line:513:5> line:511:11 read_m_with
| |-TemplateTypeParmDecl 0x55db2c720270 <line:510:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55db2c720468 <line:511:5, line:513:5> line:511:11 read_m_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55db2c720320 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c720398 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x55db2c74adf8 <col:54, line:513:5>
|     `-ReturnStmt 0x55db2c74ade8 <line:512:9, col:52>
|       `-CallExpr 0x55db2c74adb0 <col:16, col:52> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55db2c74ace0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55db2c74ad50 <col:26> 'const char *' lvalue ParmVar 0x55db2c720320 'keyword' 'const char *'
|         |-DeclRefExpr 0x55db2c74ad70 <col:35> 'const int' lvalue Var 0x55db2c719668 'mandatory' 'const int'
|         `-DeclRefExpr 0x55db2c74ad90 <col:46> 'P' lvalue ParmVar 0x55db2c720398 'parser' 'P'
|-FunctionTemplateDecl 0x55db2c720808 <line:514:5, line:517:5> line:515:11 read_p_with
| |-TemplateTypeParmDecl 0x55db2c720570 <line:514:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55db2c720768 <line:515:5, line:517:5> line:515:11 read_p_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55db2c720620 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c720698 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x55db2c74cb38 <col:54, line:517:5>
|     `-ReturnStmt 0x55db2c74cb28 <line:516:9, col:53>
|       `-CallExpr 0x55db2c74caf0 <col:16, col:53> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55db2c74ca20 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55db2c74ca90 <col:26> 'const char *' lvalue ParmVar 0x55db2c720620 'keyword' 'const char *'
|         |-DeclRefExpr 0x55db2c74cab0 <col:35> 'const int' lvalue Var 0x55db2c719760 'positional' 'const int'
|         `-DeclRefExpr 0x55db2c74cad0 <col:47> 'P' lvalue ParmVar 0x55db2c720698 'parser' 'P'
|-FunctionTemplateDecl 0x55db2c720b08 <line:518:5, line:521:5> line:519:11 read_mp_with
| |-TemplateTypeParmDecl 0x55db2c720870 <line:518:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55db2c720a68 <line:519:5, line:521:5> line:519:11 read_mp_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55db2c720920 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c720998 <col:45, col:47> col:47 referenced parser 'P'
|   `-CompoundStmt 0x55db2c74cd28 <col:55, line:521:5>
|     `-ReturnStmt 0x55db2c74cd18 <line:520:9, col:65>
|       `-CallExpr 0x55db2c74cce0 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55db2c74cb60 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55db2c74cbd0 <col:26> 'const char *' lvalue ParmVar 0x55db2c720920 'keyword' 'const char *'
|         |-BinaryOperator 0x55db2c74cca0 <col:35, col:47> 'int' '|'
|         | |-ImplicitCastExpr 0x55db2c74cc50 <col:35> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55db2c74cc30 <col:35> 'const int' lvalue Var 0x55db2c719668 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x55db2c74cc88 <col:47> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x55db2c74cc68 <col:47> 'const int' lvalue Var 0x55db2c719760 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x55db2c74ccc0 <col:59> 'P' lvalue ParmVar 0x55db2c720998 'parser' 'P'
|-FunctionTemplateDecl 0x55db2c720ed8 <line:522:5, line:526:5> line:523:11 read_with
| |-TemplateTypeParmDecl 0x55db2c720b70 <line:522:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55db2c720e38 <line:523:5, line:526:5> line:523:11 read_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x55db2c720c20 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c720ca0 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x55db2c720d18 <col:53, col:55> col:55 referenced parser 'P'
|   `-CompoundStmt 0x55db2c74ce68 <col:63, line:526:5>
|     |-CallExpr 0x55db2c74cdf0 <line:524:9, col:57> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55db2c74cd40 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_with' empty
|     | |-CXXThisExpr 0x55db2c74cd80 <col:29> 'Args *' this
|     | |-DeclRefExpr 0x55db2c74cd90 <col:35> 'const char *' lvalue ParmVar 0x55db2c720c20 'keyword' 'const char *'
|     | |-DeclRefExpr 0x55db2c74cdb0 <col:44> 'int' lvalue ParmVar 0x55db2c720ca0 'flags' 'int'
|     | `-DeclRefExpr 0x55db2c74cdd0 <col:51> 'P' lvalue ParmVar 0x55db2c720d18 'parser' 'P'
|     `-ReturnStmt 0x55db2c74ce58 <line:525:9, col:17>
|       `-UnaryOperator 0x55db2c74ce40 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55db2c74ce30 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55db2c721328 <line:538:5, line:541:5> line:539:11 read_with
| |-TemplateTypeParmDecl 0x55db2c720f48 <line:538:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55db2c720fc8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55db2c721288 <line:539:5, line:541:5> line:539:11 read_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55db2c721088 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c721100 <col:42, col:44> col:44 referenced parser 'P'
|   |-ParmVarDecl 0x55db2c7211a8 <col:52, col:55> col:55 referenced x 'T &'
|   `-CompoundStmt 0x55db2c74cfc0 <col:58, line:541:5>
|     `-ReturnStmt 0x55db2c74cfb0 <line:540:9, col:39>
|       `-CallExpr 0x55db2c74cf78 <col:16, col:39> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55db2c74ce98 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55db2c74cf18 <col:21> 'const char *' lvalue ParmVar 0x55db2c721088 'keyword' 'const char *'
|         |-DeclRefExpr 0x55db2c74cf38 <col:30> 'P' lvalue ParmVar 0x55db2c721100 'parser' 'P'
|         `-DeclRefExpr 0x55db2c74cf58 <col:38> 'T' lvalue ParmVar 0x55db2c7211a8 'x' 'T &'
|-FunctionTemplateDecl 0x55db2c721778 <line:542:5, line:545:5> line:543:11 read_m_with
| |-TemplateTypeParmDecl 0x55db2c721398 <line:542:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55db2c721418 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55db2c7216d8 <line:543:5, line:545:5> line:543:11 read_m_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55db2c7214d8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c721550 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55db2c7215f8 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x55db2c74d0f8 <col:60, line:545:5>
|     `-ReturnStmt 0x55db2c74d0e8 <line:544:9, col:41>
|       `-CallExpr 0x55db2c74d0b0 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55db2c74cfe8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55db2c74d050 <col:23> 'const char *' lvalue ParmVar 0x55db2c7214d8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55db2c74d070 <col:32> 'P' lvalue ParmVar 0x55db2c721550 'parser' 'P'
|         `-DeclRefExpr 0x55db2c74d090 <col:40> 'T' lvalue ParmVar 0x55db2c7215f8 'x' 'T &'
|-FunctionTemplateDecl 0x55db2c721bc8 <line:546:5, line:549:5> line:547:11 read_p_with
| |-TemplateTypeParmDecl 0x55db2c7217e8 <line:546:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55db2c721868 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55db2c721b28 <line:547:5, line:549:5> line:547:11 read_p_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55db2c721928 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c7219a0 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x55db2c721a48 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x55db2c74d230 <col:60, line:549:5>
|     `-ReturnStmt 0x55db2c74d220 <line:548:9, col:41>
|       `-CallExpr 0x55db2c74d1e8 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55db2c74d120 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55db2c74d188 <col:23> 'const char *' lvalue ParmVar 0x55db2c721928 'keyword' 'const char *'
|         |-DeclRefExpr 0x55db2c74d1a8 <col:32> 'P' lvalue ParmVar 0x55db2c7219a0 'parser' 'P'
|         `-DeclRefExpr 0x55db2c74d1c8 <col:40> 'T' lvalue ParmVar 0x55db2c721a48 'x' 'T &'
|-FunctionTemplateDecl 0x55db2c725358 <line:550:5, line:553:5> line:551:11 read_mp_with
| |-TemplateTypeParmDecl 0x55db2c721c38 <line:550:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55db2c724ff8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55db2c7252b8 <line:551:5, line:553:5> line:551:11 read_mp_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55db2c7250b8 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c725130 <col:45, col:47> col:47 referenced parser 'P'
|   |-ParmVarDecl 0x55db2c7251d8 <col:55, col:58> col:58 referenced x 'T &'
|   `-CompoundStmt 0x55db2c74d368 <col:61, line:553:5>
|     `-ReturnStmt 0x55db2c74d358 <line:552:9, col:42>
|       `-CallExpr 0x55db2c74d320 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55db2c74d258 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55db2c74d2c0 <col:24> 'const char *' lvalue ParmVar 0x55db2c7250b8 'keyword' 'const char *'
|         |-DeclRefExpr 0x55db2c74d2e0 <col:33> 'P' lvalue ParmVar 0x55db2c725130 'parser' 'P'
|         `-DeclRefExpr 0x55db2c74d300 <col:41> 'T' lvalue ParmVar 0x55db2c7251d8 'x' 'T &'
|-FunctionTemplateDecl 0x55db2c725838 <line:554:5, line:557:5> line:555:11 read_with
| |-TemplateTypeParmDecl 0x55db2c7253c8 <line:554:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55db2c725448 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55db2c725798 <line:555:5, line:557:5> line:555:11 read_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55db2c725508 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c725588 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x55db2c725600 <col:53, col:55> col:55 referenced parser 'P'
|   |-ParmVarDecl 0x55db2c7256a8 <col:63, col:66> col:66 referenced x 'T &'
|   `-CompoundStmt 0x55db2c74d4e0 <col:69, line:557:5>
|     `-ReturnStmt 0x55db2c74d4d0 <line:556:9, col:46>
|       `-CallExpr 0x55db2c74d490 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55db2c74d390 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55db2c74d410 <col:21> 'const char *' lvalue ParmVar 0x55db2c725508 'keyword' 'const char *'
|         |-DeclRefExpr 0x55db2c74d430 <col:30> 'int' lvalue ParmVar 0x55db2c725588 'flags' 'int'
|         |-DeclRefExpr 0x55db2c74d450 <col:37> 'P' lvalue ParmVar 0x55db2c725600 'parser' 'P'
|         `-DeclRefExpr 0x55db2c74d470 <col:45> 'T' lvalue ParmVar 0x55db2c7256a8 'x' 'T &'
|-FunctionTemplateDecl 0x55db2c725b48 <line:568:5, line:571:5> line:569:11 read_all_with
| |-TemplateTypeParmDecl 0x55db2c7258b0 <line:568:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55db2c725aa8 <line:569:5, line:571:5> line:569:11 read_all_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x55db2c725960 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c7259d8 <col:46, col:48> col:48 referenced parser 'P'
|   `-CompoundStmt 0x55db2c74d620 <col:56, line:571:5>
|     `-ReturnStmt 0x55db2c74d610 <line:570:9, col:48>
|       `-CallExpr 0x55db2c74d5d8 <col:16, col:48> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55db2c74d508 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55db2c74d578 <col:30> 'const char *' lvalue ParmVar 0x55db2c725960 'keyword' 'const char *'
|         |-IntegerLiteral 0x55db2c74d598 <col:39> 'int' 0
|         `-DeclRefExpr 0x55db2c74d5b8 <col:42> 'P' lvalue ParmVar 0x55db2c7259d8 'parser' 'P'
|-FunctionTemplateDecl 0x55db2c725ed8 <line:572:5, line:576:5> line:573:11 read_all_with
| |-TemplateTypeParmDecl 0x55db2c725bb0 <line:572:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55db2c725e38 <line:573:5, line:576:5> line:573:11 read_all_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x55db2c725c60 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c725ce0 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55db2c725d58 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x55db2c74d7f0 <col:67, line:576:5>
|     |-CallExpr 0x55db2c74d778 <line:574:9, col:74> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55db2c74d638 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x55db2c74d678 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x55db2c74d688 <col:39> 'const char *' lvalue ParmVar 0x55db2c725c60 'keyword' 'const char *'
|     | |-BinaryOperator 0x55db2c74d738 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x55db2c74d6e8 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55db2c74d6a8 <col:48> 'int' lvalue ParmVar 0x55db2c725ce0 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55db2c74d720 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55db2c74d700 <col:56> 'const int' lvalue Var 0x55db2c719950 'firstmatch' 'const int' non_odr_use_constant
|     | `-DeclRefExpr 0x55db2c74d758 <col:68> 'P' lvalue ParmVar 0x55db2c725d58 'parser' 'P'
|     `-ReturnStmt 0x55db2c74d7e0 <line:575:9, col:17>
|       `-UnaryOperator 0x55db2c74d7c8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55db2c74d7b8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55db2c726328 <line:589:5, line:592:5> line:590:11 read_all_with
| |-TemplateTypeParmDecl 0x55db2c725f48 <line:589:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55db2c725fc8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55db2c726288 <line:590:5, line:592:5> line:590:11 read_all_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x55db2c726088 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c726100 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x55db2c7261a8 <col:56, col:59> col:59 referenced x 'T &'
|   `-CompoundStmt 0x55db2c74d960 <col:62, line:592:5>
|     `-ReturnStmt 0x55db2c74d950 <line:591:9, col:51>
|       `-CallExpr 0x55db2c74d910 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55db2c74d820 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55db2c74d890 <col:30> 'const char *' lvalue ParmVar 0x55db2c726088 'keyword' 'const char *'
|         |-IntegerLiteral 0x55db2c74d8b0 <col:39> 'int' 0
|         |-DeclRefExpr 0x55db2c74d8d0 <col:42> 'P' lvalue ParmVar 0x55db2c726100 'parser' 'P'
|         `-DeclRefExpr 0x55db2c74d8f0 <col:50> 'T' lvalue ParmVar 0x55db2c7261a8 'x' 'T &'
|-FunctionTemplateDecl 0x55db2c726808 <line:593:5, line:597:5> line:594:11 read_all_with
| |-TemplateTypeParmDecl 0x55db2c726398 <line:593:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55db2c726418 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55db2c726768 <line:594:5, line:597:5> line:594:11 read_all_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x55db2c7264d8 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c726558 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55db2c7265d0 <col:57, col:59> col:59 referenced parser 'P'
|   |-ParmVarDecl 0x55db2c726678 <col:67, col:70> col:70 referenced x 'T &'
|   `-CompoundStmt 0x55db2c74db58 <col:73, line:597:5>
|     |-CallExpr 0x55db2c74dad8 <line:595:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55db2c74d978 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x55db2c74d9b8 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x55db2c74d9c8 <col:39> 'const char *' lvalue ParmVar 0x55db2c7264d8 'keyword' 'const char *'
|     | |-BinaryOperator 0x55db2c74da78 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x55db2c74da28 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55db2c74d9e8 <col:48> 'int' lvalue ParmVar 0x55db2c726558 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55db2c74da60 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55db2c74da40 <col:56> 'const int' lvalue Var 0x55db2c719950 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x55db2c74da98 <col:68> 'P' lvalue ParmVar 0x55db2c7265d0 'parser' 'P'
|     | `-DeclRefExpr 0x55db2c74dab8 <col:76> 'T' lvalue ParmVar 0x55db2c726678 'x' 'T &'
|     `-ReturnStmt 0x55db2c74db48 <line:596:9, col:17>
|       `-UnaryOperator 0x55db2c74db30 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55db2c74db20 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55db2c726db8 <line:611:5, line:614:5> line:612:11 read_all
| |-TemplateTypeParmDecl 0x55db2c726880 <line:611:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55db2c7268f8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55db2c726d18 <line:612:5, line:614:5> line:612:11 read_all 'Args &(const char *, P, Vector<T> &)'
|   |-ParmVarDecl 0x55db2c7269b8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c726a30 <col:41, col:43> col:43 referenced parser 'P'
|   |-ParmVarDecl 0x55db2c726bf0 <col:51, col:62> col:62 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55db2c74dcc8 <col:65, line:614:5>
|     `-ReturnStmt 0x55db2c74dcb8 <line:613:9, col:46>
|       `-CallExpr 0x55db2c74dc78 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55db2c74db88 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55db2c74dbf8 <col:25> 'const char *' lvalue ParmVar 0x55db2c7269b8 'keyword' 'const char *'
|         |-IntegerLiteral 0x55db2c74dc18 <col:34> 'int' 0
|         |-DeclRefExpr 0x55db2c74dc38 <col:37> 'P' lvalue ParmVar 0x55db2c726a30 'parser' 'P'
|         `-DeclRefExpr 0x55db2c74dc58 <col:45> 'Vector<T>' lvalue ParmVar 0x55db2c726bf0 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x55db2c7271e8 <line:615:5, line:618:5> line:616:11 read_all
| |-TemplateTypeParmDecl 0x55db2c726e28 <line:615:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55db2c727148 <line:616:5, line:618:5> line:616:11 read_all 'Args &(const char *, Vector<T> &)'
|   |-ParmVarDecl 0x55db2c726ee0 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c727030 <col:41, col:52> col:52 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55db2c74dee0 <col:55, line:618:5>
|     `-ReturnStmt 0x55db2c74ded0 <line:617:9, col:55>
|       `-CallExpr 0x55db2c74de90 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55db2c74dcf0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55db2c74dd60 <col:25> 'const char *' lvalue ParmVar 0x55db2c726ee0 'keyword' 'const char *'
|         |-IntegerLiteral 0x55db2c74dd80 <col:34> 'int' 0
|         |-CXXUnresolvedConstructExpr 0x55db2c74de50 <col:37, col:51> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x55db2c74de70 <col:54> 'Vector<T>' lvalue ParmVar 0x55db2c727030 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x55db2c7277b8 <line:619:5, line:623:5> line:620:11 read_all
| |-TemplateTypeParmDecl 0x55db2c727250 <line:619:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55db2c7272c8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55db2c727718 <line:620:5, line:623:5> line:620:11 read_all 'Args &(const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x55db2c727388 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c727408 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55db2c727480 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x55db2c7275d0 <col:62, col:73> col:73 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55db2c74e0d8 <col:76, line:623:5>
|     |-CallExpr 0x55db2c74e058 <line:621:9, col:72> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55db2c74def8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all' empty
|     | |-CXXThisExpr 0x55db2c74df38 <col:28> 'Args *' this
|     | |-DeclRefExpr 0x55db2c74df48 <col:34> 'const char *' lvalue ParmVar 0x55db2c727388 'keyword' 'const char *'
|     | |-BinaryOperator 0x55db2c74dff8 <col:43, col:51> 'int' '|'
|     | | |-ImplicitCastExpr 0x55db2c74dfa8 <col:43> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x55db2c74df68 <col:43> 'int' lvalue ParmVar 0x55db2c727408 'flags' 'int'
|     | | `-ImplicitCastExpr 0x55db2c74dfe0 <col:51> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x55db2c74dfc0 <col:51> 'const int' lvalue Var 0x55db2c719950 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x55db2c74e018 <col:63> 'P' lvalue ParmVar 0x55db2c727480 'parser' 'P'
|     | `-DeclRefExpr 0x55db2c74e038 <col:71> 'Vector<T>' lvalue ParmVar 0x55db2c7275d0 'x' 'Vector<T> &'
|     `-ReturnStmt 0x55db2c74e0c8 <line:622:9, col:17>
|       `-UnaryOperator 0x55db2c74e0b0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55db2c74e0a0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55db2c727cf8 <line:624:5, line:627:5> line:625:11 read_all
| |-TemplateTypeParmDecl 0x55db2c727830 <line:624:15, col:24> col:24 typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55db2c7278a8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55db2c727c58 <line:625:5, line:627:5> line:625:11 read_all 'Args &(const char *, int, Vector<T> &)'
|   |-ParmVarDecl 0x55db2c727968 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c7279e8 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55db2c727b30 <col:52, col:63> col:63 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x55db2c74e340 <col:66, line:627:5>
|     `-ReturnStmt 0x55db2c74e330 <line:626:9, col:59>
|       `-CallExpr 0x55db2c74e2f0 <col:16, col:59> '<dependent type>'
|         |-UnresolvedMemberExpr 0x55db2c74e108 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x55db2c74e178 <col:25> 'const char *' lvalue ParmVar 0x55db2c727968 'keyword' 'const char *'
|         |-DeclRefExpr 0x55db2c74e198 <col:34> 'int' lvalue ParmVar 0x55db2c7279e8 'flags' 'int'
|         |-CXXUnresolvedConstructExpr 0x55db2c74e2b0 <col:41, col:55> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x55db2c74e2d0 <col:58> 'Vector<T>' lvalue ParmVar 0x55db2c727b30 'x' 'Vector<T> &'
|-CXXMethodDecl 0x55db2c727d88 <line:631:5, line:633:5> line:631:10 status 'bool () const'
| `-CompoundStmt 0x55db2c74e3c0 <col:25, line:633:5>
|   `-ReturnStmt 0x55db2c74e3b0 <line:632:9, col:16>
|     `-ImplicitCastExpr 0x55db2c74e398 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55db2c74e368 <col:16> 'const bool' lvalue ->_status 0x55db2c738a58
|         `-CXXThisExpr 0x55db2c74e358 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x55db2c727f08 <line:636:5, line:639:5> line:636:11 status 'Args &(bool &)'
| |-ParmVarDecl 0x55db2c727e40 <col:18, col:24> col:24 used x 'bool &'
| `-CompoundStmt 0x55db2c74e4a8 <col:27, line:639:5>
|   |-BinaryOperator 0x55db2c74e450 <line:637:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55db2c74e3d8 <col:9> 'bool' lvalue ParmVar 0x55db2c727e40 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55db2c74e438 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55db2c74e408 <col:13> 'bool' lvalue ->_status 0x55db2c738a58
|   |     `-CXXThisExpr 0x55db2c74e3f8 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x55db2c74e498 <line:638:9, col:17>
|     `-UnaryOperator 0x55db2c74e480 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55db2c74e470 <col:17> 'Args *' this
|-CXXMethodDecl 0x55db2c728088 <line:641:5, line:644:5> line:641:17 status 'const Args &(bool &) const'
| |-ParmVarDecl 0x55db2c727fc8 <col:24, col:30> col:30 used x 'bool &'
| `-CompoundStmt 0x55db2c74e598 <col:39, line:644:5>
|   |-BinaryOperator 0x55db2c74e540 <line:642:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55db2c74e4c8 <col:9> 'bool' lvalue ParmVar 0x55db2c727fc8 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55db2c74e528 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55db2c74e4f8 <col:13> 'const bool' lvalue ->_status 0x55db2c738a58
|   |     `-CXXThisExpr 0x55db2c74e4e8 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x55db2c74e588 <line:643:9, col:17>
|     `-UnaryOperator 0x55db2c74e570 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55db2c74e560 <col:17> 'const Args *' this
|-CXXMethodDecl 0x55db2c728150 <line:649:5, line:651:5> line:649:10 read_status 'bool () const'
| `-CompoundStmt 0x55db2c74e640 <col:30, line:651:5>
|   `-ReturnStmt 0x55db2c74e630 <line:650:9, col:16>
|     `-ImplicitCastExpr 0x55db2c74e618 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x55db2c74e5e8 <col:16> 'bool' lvalue ->_read_status 0x55db2c712130
|         `-ImplicitCastExpr 0x55db2c74e5c8 <col:16> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|           `-CXXThisExpr 0x55db2c74e5b8 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x55db2c728298 <line:655:5, line:658:5> line:655:11 read_status 'Args &(bool &)'
| |-ParmVarDecl 0x55db2c728208 <col:23, col:29> col:29 used x 'bool &'
| `-CompoundStmt 0x55db2c74e748 <col:32, line:658:5>
|   |-BinaryOperator 0x55db2c74e6f0 <line:656:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55db2c74e658 <col:9> 'bool' lvalue ParmVar 0x55db2c728208 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55db2c74e6d8 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55db2c74e6a8 <col:13> 'bool' lvalue ->_read_status 0x55db2c712130
|   |     `-ImplicitCastExpr 0x55db2c74e688 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x55db2c74e678 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x55db2c74e738 <line:657:9, col:17>
|     `-UnaryOperator 0x55db2c74e720 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55db2c74e710 <col:17> 'Args *' this
|-CXXMethodDecl 0x55db2c7283e8 <line:660:5, line:663:5> line:660:17 read_status 'const Args &(bool &) const'
| |-ParmVarDecl 0x55db2c728358 <col:29, col:35> col:35 used x 'bool &'
| `-CompoundStmt 0x55db2c74e858 <col:44, line:663:5>
|   |-BinaryOperator 0x55db2c74e800 <line:661:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x55db2c74e768 <col:9> 'bool' lvalue ParmVar 0x55db2c728358 'x' 'bool &'
|   | `-ImplicitCastExpr 0x55db2c74e7e8 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x55db2c74e7b8 <col:13> 'bool' lvalue ->_read_status 0x55db2c712130
|   |     `-ImplicitCastExpr 0x55db2c74e798 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x55db2c74e788 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x55db2c74e848 <line:662:9, col:17>
|     `-UnaryOperator 0x55db2c74e830 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55db2c74e820 <col:17> 'const Args *' this
|-CXXMethodDecl 0x55db2c7284b0 <line:667:5, col:17> col:11 strip 'Args &()'
|-CXXMethodDecl 0x55db2c728578 <line:675:5, col:17> col:9 execute 'int ()'
|-CXXMethodDecl 0x55db2c728640 <line:684:5, col:17> col:9 consume 'int ()'
|-CXXMethodDecl 0x55db2c728708 <line:693:5, col:18> col:9 used complete 'int ()'
|-FunctionTemplateDecl 0x55db2c728a18 <line:700:5, line:706:5> line:701:8 slot
| |-TemplateTypeParmDecl 0x55db2c7287a8 <line:700:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55db2c728978 <line:701:5, line:706:5> line:701:8 slot 'T *(T &)'
|   |-ParmVarDecl 0x55db2c728888 <col:13, col:16> col:16 referenced x 'T &'
|   `-CompoundStmt 0x55db2c74ec10 <col:19, line:706:5>
|     `-IfStmt 0x55db2c74ebe8 <line:702:9, line:705:34> has_else
|       |-CXXDependentScopeMemberExpr 0x55db2c74e958 <line:702:13, col:34> '<dependent type>' lvalue ->value
|       |-ReturnStmt 0x55db2c74eb18 <line:703:13, col:68>
|       | `-CXXReinterpretCastExpr 0x55db2c74eae8 <col:20, col:68> 'T *' reinterpret_cast<T *> <Dependent>
|       |   `-CallExpr 0x55db2c74eaa8 <col:42, col:67> '<dependent type>'
|       |     |-MemberExpr 0x55db2c74e9b0 <col:42> '<bound member function type>' ->simple_slot 0x55db2c747aa0
|       |     | `-CXXThisExpr 0x55db2c74e9a0 <col:42> 'Args *' implicit this
|       |     |-CXXOperatorCallExpr 0x55db2c74ea48 <col:54, col:55> '<dependent type>'
|       |     | |-UnresolvedLookupExpr 0x55db2c74ea00 <col:54> '<overloaded function type>' lvalue (ADL) = 'operator&' 0x55db2c4a00c8
|       |     | `-DeclRefExpr 0x55db2c74e9e0 <col:55> 'T' lvalue ParmVar 0x55db2c728888 'x' 'T &'
|       |     `-UnaryExprOrTypeTraitExpr 0x55db2c74ea88 <col:58, col:66> 'unsigned long' sizeof 'T'
|       `-ReturnStmt 0x55db2c74ebd8 <line:705:13, col:34>
|         `-CallExpr 0x55db2c74ebb0 <col:20, col:34> '<dependent type>'
|           |-UnresolvedMemberExpr 0x55db2c74eb38 <col:20> '<bound member function type>' lvalue
|           `-DeclRefExpr 0x55db2c74eb90 <col:33> 'T' lvalue ParmVar 0x55db2c728888 'x' 'T &'
|-FunctionTemplateDecl 0x55db2c728ce8 <line:711:5, line:717:5> line:712:8 initialized_slot
| |-TemplateTypeParmDecl 0x55db2c728a78 <line:711:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55db2c728c48 <line:712:5, line:717:5> line:712:8 initialized_slot 'T *(T &)'
|   |-ParmVarDecl 0x55db2c728b58 <col:25, col:28> col:28 referenced x 'T &'
|   `-CompoundStmt 0x55db2c74eff0 <col:31, line:717:5>
|     |-DeclStmt 0x55db2c74ed50 <line:713:9, col:23>
|     | `-VarDecl 0x55db2c74ec38 <col:9, col:22> col:12 referenced s 'T *' nrvo cinit
|     |   `-CallExpr 0x55db2c74ed28 <col:16, col:22> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x55db2c74ecb0 <col:16> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x55db2c74ed08 <col:21> 'T' lvalue ParmVar 0x55db2c728b58 'x' 'T &'
|     |-IfStmt 0x55db2c74efa0 <line:714:9, line:715:20>
|     | |-CXXDependentScopeMemberExpr 0x55db2c74ee48 <line:714:13, col:34> '<dependent type>' lvalue ->value
|     | `-BinaryOperator 0x55db2c74ef80 <line:715:13, col:20> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x55db2c74ef20 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x55db2c74eeb0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55db2c6571c8 0x55db2c656de8 0x55db2c656a18 0x55db2c656638 0x55db2c656258 0x55db2c655e88
|     |   | `-DeclRefExpr 0x55db2c74ee90 <col:14> 'T *' lvalue Var 0x55db2c74ec38 's' 'T *'
|     |   `-CXXUnresolvedConstructExpr 0x55db2c74ef60 <col:18, col:20> 'T' 'T'
|     `-ReturnStmt 0x55db2c74efd8 <line:716:9, col:16>
|       `-DeclRefExpr 0x55db2c74efb8 <col:16> 'T *' lvalue Var 0x55db2c74ec38 's' 'T *'
|-FunctionTemplateDecl 0x55db2c7290f8 <line:721:5, line:726:5> line:722:11 set
| |-TemplateTypeParmDecl 0x55db2c728d48 <line:721:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55db2c728dc8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55db2c729058 <line:722:5, line:726:5> line:722:11 set 'Args &(T &, const V &)'
|   |-ParmVarDecl 0x55db2c728ea8 <col:15, col:18> col:18 referenced x 'T &'
|   |-ParmVarDecl 0x55db2c728f48 <col:21, col:30> col:30 referenced value 'const V &'
|   `-CompoundStmt 0x55db2c74f300 <col:37, line:726:5>
|     |-IfStmt 0x55db2c74f290 <line:723:9, line:724:18> has_var
|     | |-DeclStmt 0x55db2c74f2b0 <line:723:13, col:26>
|     | | `-VarDecl 0x55db2c74f058 <col:13, col:26> col:16 referenced s 'T *' cinit
|     | |   `-CallExpr 0x55db2c74f148 <col:20, col:26> '<dependent type>'
|     | |     |-UnresolvedMemberExpr 0x55db2c74f0d0 <col:20> '<bound member function type>' lvalue
|     | |     `-DeclRefExpr 0x55db2c74f128 <col:25> 'T' lvalue ParmVar 0x55db2c728ea8 'x' 'T &'
|     | |-DeclRefExpr 0x55db2c74f170 <col:16> 'T *' lvalue Var 0x55db2c74f058 's' 'T *'
|     | `-BinaryOperator 0x55db2c74f270 <line:724:13, col:18> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x55db2c74f220 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x55db2c74f1b0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55db2c6571c8 0x55db2c656de8 0x55db2c656a18 0x55db2c656638 0x55db2c656258 0x55db2c655e88
|     |   | `-DeclRefExpr 0x55db2c74f190 <col:14> 'T *' lvalue Var 0x55db2c74f058 's' 'T *'
|     |   `-DeclRefExpr 0x55db2c74f250 <col:18> 'const V' lvalue ParmVar 0x55db2c728f48 'value' 'const V &'
|     `-ReturnStmt 0x55db2c74f2f0 <line:725:9, col:17>
|       `-UnaryOperator 0x55db2c74f2d8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55db2c74f2c8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x55db2c7294f8 <line:730:5, line:737:5> line:731:10 base_read
| |-TemplateTypeParmDecl 0x55db2c729160 <line:730:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x55db2c729458 <line:731:5, line:737:5> line:731:10 base_read 'void (const char *, int, T &)'
|   |-ParmVarDecl 0x55db2c729210 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c729290 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55db2c729338 <col:52, col:55> col:55 referenced variable 'T &'
|   `-CompoundStmt 0x55db2c750120 <col:65, line:737:5>
|     |-DeclStmt 0x55db2c74f398 <line:732:9, col:26>
|     | `-VarDecl 0x55db2c74f330 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55db2c7500e8 <line:733:9, line:736:9> has_var
|       |-DeclStmt 0x55db2c750108 <line:733:13, col:58>
|       | `-VarDecl 0x55db2c74f3c0 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55db2c74f5a0 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55db2c74f570 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55db2c74f558 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55db2c74f538 <col:26, col:58> 'String' (CXXTemporary 0x55db2c74f538)
|       |           `-CXXMemberCallExpr 0x55db2c74f4c8 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55db2c74f438 <col:26> '<bound member function type>' ->find 0x55db2c7470b8
|       |             | `-CXXThisExpr 0x55db2c74f428 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55db2c74f500 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55db2c74f468 <col:31> 'const char *' lvalue ParmVar 0x55db2c729210 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55db2c74f518 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55db2c74f488 <col:40> 'int' lvalue ParmVar 0x55db2c729290 'flags' 'int'
|       |             `-DeclRefExpr 0x55db2c74f4a8 <col:47> 'Args::Slot *' lvalue Var 0x55db2c74f330 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55db2c74f658 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55db2c74f640 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55db2c74f620 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55db2c74f5f0 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55db2c463098
|       |       `-ImplicitCastExpr 0x55db2c74f5d8 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55db2c74f5b8 <col:20> 'String' lvalue Var 0x55db2c74f3c0 'str' 'String'
|       `-CompoundStmt 0x55db2c7500c8 <col:61, line:736:9>
|         |-DeclStmt 0x55db2c74fb10 <line:734:13, col:76>
|         | `-VarDecl 0x55db2c74f6a8 <col:13, col:75> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x55db2c74fae0 <col:20, col:75> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55db2c74fa50 <col:20, col:55> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55db2c74fa98 <col:60> 'T' lvalue ParmVar 0x55db2c729338 'variable' 'T &'
|         |     `-UnaryOperator 0x55db2c74fac8 <col:70, col:71> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55db2c74fab8 <col:71> 'Args *' this
|         `-CallExpr 0x55db2c750098 <line:735:13, col:114> '<dependent type>'
|           |-MemberExpr 0x55db2c74fb38 <col:13> '<bound member function type>' ->postparse 0x55db2c7472c8
|           | `-CXXThisExpr 0x55db2c74fb28 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55db2c750058 <col:23, col:100> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x55db2c74fb68 <col:23> 'T *' lvalue Var 0x55db2c74f6a8 's' 'T *'
|           | `-CallExpr 0x55db2c750018 <col:28, col:100> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55db2c74fdf0 <col:28, col:63> '<dependent type>' lvalue ->parse
|           |   |-CXXUnresolvedConstructExpr 0x55db2c74fef0 <col:69, col:83> 'DefaultArg<T>' 'DefaultArg<T>'
|           |   |-DeclRefExpr 0x55db2c74ff10 <col:86> 'String' lvalue Var 0x55db2c74f3c0 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55db2c74ffc0 <col:91, col:92> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55db2c74ff50 <col:91> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55db2c6571c8 0x55db2c656de8 0x55db2c656a18 0x55db2c656638 0x55db2c656258 0x55db2c655e88
|           |   | `-DeclRefExpr 0x55db2c74ff30 <col:92> 'T *' lvalue Var 0x55db2c74f6a8 's' 'T *'
|           |   `-UnaryOperator 0x55db2c750000 <col:95, col:96> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55db2c74fff0 <col:96> 'Args *' this
|           `-DeclRefExpr 0x55db2c750078 <col:103> 'Args::Slot *' lvalue Var 0x55db2c74f330 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55db2c729a48 <line:739:5, line:745:5> line:740:10 base_read_or_set
| |-TemplateTypeParmDecl 0x55db2c729568 <line:739:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55db2c7295e8 <col:26, col:35> col:35 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x55db2c7299a8 <line:740:5, line:745:5> line:740:10 base_read_or_set 'void (const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x55db2c7296a8 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c729728 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x55db2c7297c8 <col:59, col:62> col:62 referenced variable 'T &'
|   |-ParmVarDecl 0x55db2c729868 <col:72, col:81> col:81 referenced value 'const V &'
|   `-CompoundStmt 0x55db2c750fc0 <col:88, line:745:5>
|     |-DeclStmt 0x55db2c7501b8 <line:741:9, col:26>
|     | `-VarDecl 0x55db2c750150 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55db2c7503d8 <line:742:9, col:55>
|     | `-VarDecl 0x55db2c7501e0 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x55db2c7503c0 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x55db2c750390 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x55db2c750378 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x55db2c750358 <col:22, col:54> 'String' (CXXTemporary 0x55db2c750358)
|     |           `-CXXMemberCallExpr 0x55db2c7502e8 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x55db2c750258 <col:22> '<bound member function type>' ->find 0x55db2c7470b8
|     |             | `-CXXThisExpr 0x55db2c750248 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x55db2c750320 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55db2c750288 <col:27> 'const char *' lvalue ParmVar 0x55db2c7296a8 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x55db2c750338 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55db2c7502a8 <col:36> 'int' lvalue ParmVar 0x55db2c729728 'flags' 'int'
|     |             `-DeclRefExpr 0x55db2c7502c8 <col:43> 'Args::Slot *' lvalue Var 0x55db2c750150 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x55db2c7507b0 <line:743:9, col:72>
|     | `-VarDecl 0x55db2c750428 <col:9, col:71> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55db2c750780 <col:16, col:71> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55db2c7506f0 <col:16, col:51> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x55db2c750738 <col:56> 'T' lvalue ParmVar 0x55db2c7297c8 'variable' 'T &'
|     |     `-UnaryOperator 0x55db2c750768 <col:66, col:67> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55db2c750758 <col:67> 'Args *' this
|     `-CallExpr 0x55db2c750f90 <line:744:9, col:139> '<dependent type>'
|       |-MemberExpr 0x55db2c7507d8 <col:9> '<bound member function type>' ->postparse 0x55db2c7472c8
|       | `-CXXThisExpr 0x55db2c7507c8 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x55db2c750f50 <col:19, col:125> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x55db2c750808 <col:19> 'T *' lvalue Var 0x55db2c750428 's' 'T *'
|       | `-ParenExpr 0x55db2c750f30 <col:24, col:125> '<dependent type>'
|       |   `-ConditionalOperator 0x55db2c750f00 <col:25, col:124> '<dependent type>'
|       |     |-ImplicitCastExpr 0x55db2c750ee8 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x55db2c750ed0 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x55db2c750eb0 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x55db2c750e80 <col:25> '<bound member function type>' .operator int (String::*)() const 0x55db2c463098
|       |     |       `-ImplicitCastExpr 0x55db2c750e68 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x55db2c750828 <col:25> 'String' lvalue Var 0x55db2c7501e0 'str' 'String'
|       |     |-CallExpr 0x55db2c750cd8 <col:31, col:103> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x55db2c750ab0 <col:31, col:66> '<dependent type>' lvalue ->parse
|       |     | |-CXXUnresolvedConstructExpr 0x55db2c750bb0 <col:72, col:86> 'DefaultArg<T>' 'DefaultArg<T>'
|       |     | |-DeclRefExpr 0x55db2c750bd0 <col:89> 'String' lvalue Var 0x55db2c7501e0 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x55db2c750c80 <col:94, col:95> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x55db2c750c10 <col:94> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55db2c6571c8 0x55db2c656de8 0x55db2c656a18 0x55db2c656638 0x55db2c656258 0x55db2c655e88
|       |     | | `-DeclRefExpr 0x55db2c750bf0 <col:95> 'T *' lvalue Var 0x55db2c750428 's' 'T *'
|       |     | `-UnaryOperator 0x55db2c750cc0 <col:98, col:99> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x55db2c750cb0 <col:99> 'Args *' this
|       |     `-ParenExpr 0x55db2c750e48 <col:107, col:124> '<dependent type>'
|       |       `-BinaryOperator 0x55db2c750e28 <col:108, col:120> '<dependent type>' ','
|       |         |-BinaryOperator 0x55db2c750df8 <col:108, col:113> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x55db2c750da8 <col:108, col:109> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x55db2c750d38 <col:108> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55db2c6571c8 0x55db2c656de8 0x55db2c656a18 0x55db2c656638 0x55db2c656258 0x55db2c655e88
|       |         | | `-DeclRefExpr 0x55db2c750d18 <col:109> 'T *' lvalue Var 0x55db2c750428 's' 'T *'
|       |         | `-DeclRefExpr 0x55db2c750dd8 <col:113> 'const V' lvalue ParmVar 0x55db2c729868 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x55db2c750e18 <col:120> 'bool' true
|       `-DeclRefExpr 0x55db2c750f70 <col:128> 'Args::Slot *' lvalue Var 0x55db2c750150 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55db2c729f78 <line:747:5, line:754:5> line:748:10 base_read
| |-TemplateTypeParmDecl 0x55db2c729ac0 <line:747:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55db2c729b38 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55db2c729ed8 <line:748:5, line:754:5> line:748:10 base_read 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x55db2c729bf8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c729c78 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55db2c729cf0 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x55db2c729d98 <col:62, col:65> col:65 referenced variable 'T &'
|   `-CompoundStmt 0x55db2c751bb8 <col:75, line:754:5>
|     |-DeclStmt 0x55db2c751068 <line:749:9, col:26>
|     | `-VarDecl 0x55db2c751000 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55db2c751b80 <line:750:9, line:753:9> has_var
|       |-DeclStmt 0x55db2c751ba0 <line:750:13, col:58>
|       | `-VarDecl 0x55db2c751090 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55db2c751270 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55db2c751240 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55db2c751228 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55db2c751208 <col:26, col:58> 'String' (CXXTemporary 0x55db2c751208)
|       |           `-CXXMemberCallExpr 0x55db2c751198 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55db2c751108 <col:26> '<bound member function type>' ->find 0x55db2c7470b8
|       |             | `-CXXThisExpr 0x55db2c7510f8 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55db2c7511d0 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55db2c751138 <col:31> 'const char *' lvalue ParmVar 0x55db2c729bf8 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55db2c7511e8 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55db2c751158 <col:40> 'int' lvalue ParmVar 0x55db2c729c78 'flags' 'int'
|       |             `-DeclRefExpr 0x55db2c751178 <col:47> 'Args::Slot *' lvalue Var 0x55db2c751000 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55db2c751328 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55db2c751310 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55db2c7512f0 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55db2c7512c0 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55db2c463098
|       |       `-ImplicitCastExpr 0x55db2c7512a8 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55db2c751288 <col:20> 'String' lvalue Var 0x55db2c751090 'str' 'String'
|       `-CompoundStmt 0x55db2c751b60 <col:61, line:753:9>
|         |-DeclStmt 0x55db2c751700 <line:751:13, col:63>
|         | `-VarDecl 0x55db2c751378 <col:13, col:62> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x55db2c7516d0 <col:20, col:62> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55db2c751640 <col:20, col:42> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55db2c751688 <col:47> 'T' lvalue ParmVar 0x55db2c729d98 'variable' 'T &'
|         |     `-UnaryOperator 0x55db2c7516b8 <col:57, col:58> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55db2c7516a8 <col:58> 'Args *' this
|         `-CallExpr 0x55db2c751b30 <line:752:13, col:92> '<dependent type>'
|           |-MemberExpr 0x55db2c751728 <col:13> '<bound member function type>' ->postparse 0x55db2c7472c8
|           | `-CXXThisExpr 0x55db2c751718 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55db2c751af0 <col:23, col:78> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x55db2c751758 <col:23> 'T *' lvalue Var 0x55db2c751378 's' 'T *'
|           | `-CallExpr 0x55db2c751ab0 <col:28, col:78> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55db2c751940 <col:28, col:50> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x55db2c751988 <col:56> 'P' lvalue ParmVar 0x55db2c729cf0 'parser' 'P'
|           |   |-DeclRefExpr 0x55db2c7519a8 <col:64> 'String' lvalue Var 0x55db2c751090 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55db2c751a58 <col:69, col:70> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55db2c7519e8 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55db2c6571c8 0x55db2c656de8 0x55db2c656a18 0x55db2c656638 0x55db2c656258 0x55db2c655e88
|           |   | `-DeclRefExpr 0x55db2c7519c8 <col:70> 'T *' lvalue Var 0x55db2c751378 's' 'T *'
|           |   `-UnaryOperator 0x55db2c751a98 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55db2c751a88 <col:74> 'Args *' this
|           `-DeclRefExpr 0x55db2c751b10 <col:81> 'Args::Slot *' lvalue Var 0x55db2c751000 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55db2c72a5d8 <line:756:5, line:762:5> line:757:10 base_read_or_set
| |-TemplateTypeParmDecl 0x55db2c729ff0 <line:756:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x55db2c72a068 <col:26, col:35> col:35 referenced typename depth 0 index 1 P
| |-TemplateTypeParmDecl 0x55db2c72a0e8 <col:38, col:47> col:47 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x55db2c72a538 <line:757:5, line:762:5> line:757:10 base_read_or_set 'void (const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x55db2c72a1b0 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c72a230 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x55db2c72a2a8 <col:59, col:61> col:61 referenced parser 'P'
|   |-ParmVarDecl 0x55db2c72a348 <col:69, col:72> col:72 referenced variable 'T &'
|   |-ParmVarDecl 0x55db2c72a3e8 <col:82, col:91> col:91 referenced value 'const V &'
|   `-CompoundStmt 0x55db2c752948 <col:98, line:762:5>
|     |-DeclStmt 0x55db2c751c50 <line:758:9, col:26>
|     | `-VarDecl 0x55db2c751be8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55db2c751e70 <line:759:9, col:55>
|     | `-VarDecl 0x55db2c751c78 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x55db2c751e58 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x55db2c751e28 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x55db2c751e10 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x55db2c751df0 <col:22, col:54> 'String' (CXXTemporary 0x55db2c751df0)
|     |           `-CXXMemberCallExpr 0x55db2c751d80 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x55db2c751cf0 <col:22> '<bound member function type>' ->find 0x55db2c7470b8
|     |             | `-CXXThisExpr 0x55db2c751ce0 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x55db2c751db8 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55db2c751d20 <col:27> 'const char *' lvalue ParmVar 0x55db2c72a1b0 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x55db2c751dd0 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x55db2c751d40 <col:36> 'int' lvalue ParmVar 0x55db2c72a230 'flags' 'int'
|     |             `-DeclRefExpr 0x55db2c751d60 <col:43> 'Args::Slot *' lvalue Var 0x55db2c751be8 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x55db2c752290 <line:760:9, col:59>
|     | `-VarDecl 0x55db2c751ec8 <col:9, col:58> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55db2c752260 <col:16, col:58> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55db2c7521d0 <col:16, col:38> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x55db2c752218 <col:43> 'T' lvalue ParmVar 0x55db2c72a348 'variable' 'T &'
|     |     `-UnaryOperator 0x55db2c752248 <col:53, col:54> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55db2c752238 <col:54> 'Args *' this
|     `-CallExpr 0x55db2c752918 <line:761:9, col:117> '<dependent type>'
|       |-MemberExpr 0x55db2c7522b8 <col:9> '<bound member function type>' ->postparse 0x55db2c7472c8
|       | `-CXXThisExpr 0x55db2c7522a8 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x55db2c7528d8 <col:19, col:103> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x55db2c7522e8 <col:19> 'T *' lvalue Var 0x55db2c751ec8 's' 'T *'
|       | `-ParenExpr 0x55db2c7528b8 <col:24, col:103> '<dependent type>'
|       |   `-ConditionalOperator 0x55db2c752888 <col:25, col:102> '<dependent type>'
|       |     |-ImplicitCastExpr 0x55db2c752870 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x55db2c752858 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x55db2c752838 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x55db2c752808 <col:25> '<bound member function type>' .operator int (String::*)() const 0x55db2c463098
|       |     |       `-ImplicitCastExpr 0x55db2c7527f0 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x55db2c752308 <col:25> 'String' lvalue Var 0x55db2c751c78 'str' 'String'
|       |     |-CallExpr 0x55db2c752660 <col:31, col:81> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x55db2c7524f0 <col:31, col:53> '<dependent type>' lvalue ->parse
|       |     | |-DeclRefExpr 0x55db2c752538 <col:59> 'P' lvalue ParmVar 0x55db2c72a2a8 'parser' 'P'
|       |     | |-DeclRefExpr 0x55db2c752558 <col:67> 'String' lvalue Var 0x55db2c751c78 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x55db2c752608 <col:72, col:73> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x55db2c752598 <col:72> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55db2c6571c8 0x55db2c656de8 0x55db2c656a18 0x55db2c656638 0x55db2c656258 0x55db2c655e88
|       |     | | `-DeclRefExpr 0x55db2c752578 <col:73> 'T *' lvalue Var 0x55db2c751ec8 's' 'T *'
|       |     | `-UnaryOperator 0x55db2c752648 <col:76, col:77> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x55db2c752638 <col:77> 'Args *' this
|       |     `-ParenExpr 0x55db2c7527d0 <col:85, col:102> '<dependent type>'
|       |       `-BinaryOperator 0x55db2c7527b0 <col:86, col:98> '<dependent type>' ','
|       |         |-BinaryOperator 0x55db2c752780 <col:86, col:91> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x55db2c752730 <col:86, col:87> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x55db2c7526c0 <col:86> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55db2c6571c8 0x55db2c656de8 0x55db2c656a18 0x55db2c656638 0x55db2c656258 0x55db2c655e88
|       |         | | `-DeclRefExpr 0x55db2c7526a0 <col:87> 'T *' lvalue Var 0x55db2c751ec8 's' 'T *'
|       |         | `-DeclRefExpr 0x55db2c752760 <col:91> 'const V' lvalue ParmVar 0x55db2c72a3e8 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x55db2c7527a0 <col:98> 'bool' true
|       `-DeclRefExpr 0x55db2c7528f8 <col:106> 'Args::Slot *' lvalue Var 0x55db2c751be8 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55db2c72ac48 <line:764:5, line:773:5> line:765:10 base_read
| |-TemplateTypeParmDecl 0x55db2c72a658 <line:764:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55db2c72a6d8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x55db2c72a758 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x55db2c72aba8 <line:765:5, line:773:5> line:765:10 base_read 'void (const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x55db2c72a820 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c72a8a0 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x55db2c72a918 <line:766:20, col:22> col:22 referenced parser 'P'
|   |-ParmVarDecl 0x55db2c72a9b8 <col:30, col:34> col:34 referenced variable1 'T1 &'
|   |-ParmVarDecl 0x55db2c72aa58 <col:45, col:49> col:49 referenced variable2 'T2 &'
|   `-CompoundStmt 0x55db2c753928 <col:60, line:773:5>
|     |-DeclStmt 0x55db2c7529f0 <line:767:9, col:26>
|     | `-VarDecl 0x55db2c752988 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55db2c7538f0 <line:768:9, line:772:9> has_var
|       |-DeclStmt 0x55db2c753910 <line:768:13, col:58>
|       | `-VarDecl 0x55db2c752a18 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55db2c752bf8 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55db2c752bc8 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55db2c752bb0 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55db2c752b90 <col:26, col:58> 'String' (CXXTemporary 0x55db2c752b90)
|       |           `-CXXMemberCallExpr 0x55db2c752b20 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55db2c752a90 <col:26> '<bound member function type>' ->find 0x55db2c7470b8
|       |             | `-CXXThisExpr 0x55db2c752a80 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55db2c752b58 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55db2c752ac0 <col:31> 'const char *' lvalue ParmVar 0x55db2c72a820 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55db2c752b70 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55db2c752ae0 <col:40> 'int' lvalue ParmVar 0x55db2c72a8a0 'flags' 'int'
|       |             `-DeclRefExpr 0x55db2c752b00 <col:47> 'Args::Slot *' lvalue Var 0x55db2c752988 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55db2c752cb0 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55db2c752c98 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55db2c752c78 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55db2c752c48 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55db2c463098
|       |       `-ImplicitCastExpr 0x55db2c752c30 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55db2c752c10 <col:20> 'String' lvalue Var 0x55db2c752a18 'str' 'String'
|       `-CompoundStmt 0x55db2c7538c8 <col:61, line:772:9>
|         |-DeclStmt 0x55db2c752ff0 <line:769:13, col:66>
|         | `-VarDecl 0x55db2c752d08 <col:13, col:65> col:17 referenced s1 'T1 *' cinit
|         |   `-CallExpr 0x55db2c752fc0 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55db2c752f30 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55db2c752f78 <col:49> 'T1' lvalue ParmVar 0x55db2c72a9b8 'variable1' 'T1 &'
|         |     `-UnaryOperator 0x55db2c752fa8 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55db2c752f98 <col:61> 'Args *' this
|         |-DeclStmt 0x55db2c753360 <line:770:13, col:66>
|         | `-VarDecl 0x55db2c753078 <col:13, col:65> col:17 referenced s2 'T2 *' cinit
|         |   `-CallExpr 0x55db2c753330 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x55db2c7532a0 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x55db2c7532e8 <col:49> 'T2' lvalue ParmVar 0x55db2c72aa58 'variable2' 'T2 &'
|         |     `-UnaryOperator 0x55db2c753318 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x55db2c753308 <col:61> 'Args *' this
|         `-CallExpr 0x55db2c753898 <line:771:13, col:105> '<dependent type>'
|           |-MemberExpr 0x55db2c753388 <col:13> '<bound member function type>' ->postparse 0x55db2c7472c8
|           | `-CXXThisExpr 0x55db2c753378 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x55db2c753858 <col:23, col:91> '<dependent type>' '&&'
|           | |-BinaryOperator 0x55db2c7533f8 <col:23, col:29> '<dependent type>' '&&'
|           | | |-DeclRefExpr 0x55db2c7533b8 <col:23> 'T1 *' lvalue Var 0x55db2c752d08 's1' 'T1 *'
|           | | `-DeclRefExpr 0x55db2c7533d8 <col:29> 'T2 *' lvalue Var 0x55db2c753078 's2' 'T2 *'
|           | `-CallExpr 0x55db2c753810 <col:35, col:91> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x55db2c7535e0 <col:35, col:57> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x55db2c753628 <col:63> 'P' lvalue ParmVar 0x55db2c72a918 'parser' 'P'
|           |   |-DeclRefExpr 0x55db2c753648 <col:71> 'String' lvalue Var 0x55db2c752a18 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x55db2c7536f8 <col:76, col:77> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55db2c753688 <col:76> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55db2c6571c8 0x55db2c656de8 0x55db2c656a18 0x55db2c656638 0x55db2c656258 0x55db2c655e88
|           |   | `-DeclRefExpr 0x55db2c753668 <col:77> 'T1 *' lvalue Var 0x55db2c752d08 's1' 'T1 *'
|           |   |-CXXOperatorCallExpr 0x55db2c7537b8 <col:81, col:82> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x55db2c753748 <col:81> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55db2c6571c8 0x55db2c656de8 0x55db2c656a18 0x55db2c656638 0x55db2c656258 0x55db2c655e88
|           |   | `-DeclRefExpr 0x55db2c753728 <col:82> 'T2 *' lvalue Var 0x55db2c753078 's2' 'T2 *'
|           |   `-UnaryOperator 0x55db2c7537f8 <col:86, col:87> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x55db2c7537e8 <col:87> 'Args *' this
|           `-DeclRefExpr 0x55db2c753878 <col:94> 'Args::Slot *' lvalue Var 0x55db2c752988 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55db2c72b038 <line:775:5, line:780:5> line:776:10 base_read_with
| |-TemplateTypeParmDecl 0x55db2c72acc8 <line:775:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55db2c72af98 <line:776:5, line:780:5> line:776:10 base_read_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x55db2c72ad80 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c72ae00 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x55db2c72ae78 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x55db2c753e40 <col:67, line:780:5>
|     |-DeclStmt 0x55db2c7539c0 <line:777:9, col:26>
|     | `-VarDecl 0x55db2c753958 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x55db2c753e08 <line:778:9, line:779:60> has_var
|       |-DeclStmt 0x55db2c753e28 <line:778:13, col:58>
|       | `-VarDecl 0x55db2c7539e8 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x55db2c753bc8 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x55db2c753b98 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x55db2c753b80 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x55db2c753b60 <col:26, col:58> 'String' (CXXTemporary 0x55db2c753b60)
|       |           `-CXXMemberCallExpr 0x55db2c753af0 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x55db2c753a60 <col:26> '<bound member function type>' ->find 0x55db2c7470b8
|       |             | `-CXXThisExpr 0x55db2c753a50 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x55db2c753b28 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55db2c753a90 <col:31> 'const char *' lvalue ParmVar 0x55db2c72ad80 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x55db2c753b40 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x55db2c753ab0 <col:40> 'int' lvalue ParmVar 0x55db2c72ae00 'flags' 'int'
|       |             `-DeclRefExpr 0x55db2c753ad0 <col:47> 'Args::Slot *' lvalue Var 0x55db2c753958 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x55db2c753c80 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55db2c753c68 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55db2c753c48 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55db2c753c18 <col:20> '<bound member function type>' .operator int (String::*)() const 0x55db2c463098
|       |       `-ImplicitCastExpr 0x55db2c753c00 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x55db2c753be0 <col:20> 'String' lvalue Var 0x55db2c7539e8 'str' 'String'
|       `-CallExpr 0x55db2c753dd8 <line:779:13, col:60> '<dependent type>'
|         |-MemberExpr 0x55db2c753ca8 <col:13> '<bound member function type>' ->postparse 0x55db2c7472c8
|         | `-CXXThisExpr 0x55db2c753c98 <col:13> 'Args *' implicit this
|         |-CallExpr 0x55db2c753d88 <col:23, col:46> '<dependent type>'
|         | |-CXXDependentScopeMemberExpr 0x55db2c753cf8 <col:23, col:30> '<dependent type>' lvalue .parse
|         | | `-DeclRefExpr 0x55db2c753cd8 <col:23> 'P' lvalue ParmVar 0x55db2c72ae78 'parser' 'P'
|         | |-DeclRefExpr 0x55db2c753d40 <col:36> 'String' lvalue Var 0x55db2c7539e8 'str' 'String'
|         | `-UnaryOperator 0x55db2c753d70 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|         |   `-CXXThisExpr 0x55db2c753d60 <col:42> 'Args *' this
|         `-DeclRefExpr 0x55db2c753db8 <col:49> 'Args::Slot *' lvalue Var 0x55db2c753958 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x55db2c72b3d8 <line:782:5, line:792:5> line:783:10 base_read_all_with
| |-TemplateTypeParmDecl 0x55db2c72b0a8 <line:782:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x55db2c72b338 <line:783:5, line:792:5> line:783:10 base_read_all_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x55db2c72b160 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c72b1e0 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x55db2c72b258 <col:61, col:63> col:63 referenced parser 'P'
|   `-CompoundStmt 0x55db2c7547b0 <col:71, line:792:5>
|     |-DeclStmt 0x55db2c753ed8 <line:784:9, col:26>
|     | `-VarDecl 0x55db2c753e70 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55db2c753fa8 <line:785:9, col:29>
|     | `-VarDecl 0x55db2c753f08 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55db2c753f90 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55db2c753f70 <col:28> 'int' 1
|     |-WhileStmt 0x55db2c754660 <line:786:9, line:790:9> has_var
|     | |-DeclStmt 0x55db2c754680 <line:786:16, col:61>
|     | | `-VarDecl 0x55db2c753fd0 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55db2c7541b0 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55db2c754180 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55db2c754168 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55db2c754148 <col:29, col:61> 'String' (CXXTemporary 0x55db2c754148)
|     | |           `-CXXMemberCallExpr 0x55db2c7540d8 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55db2c754048 <col:29> '<bound member function type>' ->find 0x55db2c7470b8
|     | |             | `-CXXThisExpr 0x55db2c754038 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55db2c754110 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55db2c754078 <col:34> 'const char *' lvalue ParmVar 0x55db2c72b160 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55db2c754128 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55db2c754098 <col:43> 'int' lvalue ParmVar 0x55db2c72b1e0 'flags' 'int'
|     | |             `-DeclRefExpr 0x55db2c7540b8 <col:50> 'Args::Slot *' lvalue Var 0x55db2c753e70 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55db2c754268 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55db2c754250 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55db2c754230 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55db2c754200 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55db2c463098
|     | |       `-ImplicitCastExpr 0x55db2c7541e8 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55db2c7541c8 <col:23> 'String' lvalue Var 0x55db2c753fd0 'str' 'String'
|     | `-CompoundStmt 0x55db2c754638 <col:64, line:790:9>
|     |   |-CallExpr 0x55db2c7543c0 <line:787:13, col:60> '<dependent type>'
|     |   | |-MemberExpr 0x55db2c754290 <col:13> '<bound member function type>' ->postparse 0x55db2c7472c8
|     |   | | `-CXXThisExpr 0x55db2c754280 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x55db2c754370 <col:23, col:46> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x55db2c7542e0 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x55db2c7542c0 <col:23> 'P' lvalue ParmVar 0x55db2c72b258 'parser' 'P'
|     |   | | |-DeclRefExpr 0x55db2c754328 <col:36> 'String' lvalue Var 0x55db2c753fd0 'str' 'String'
|     |   | | `-UnaryOperator 0x55db2c754358 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x55db2c754348 <col:42> 'Args *' this
|     |   | `-DeclRefExpr 0x55db2c7543a0 <col:49> 'Args::Slot *' lvalue Var 0x55db2c753e70 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x55db2c754558 <line:788:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55db2c7543f0 <col:13> 'int' lvalue Var 0x55db2c753f08 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55db2c754540 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55db2c754520 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55db2c754488 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55db2c754468 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55db2c754450 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55db2c754410 <col:28> 'int' lvalue Var 0x55db2c753f08 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55db2c754430 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55db2c754508 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55db2c7544d8 <col:49> 'bool' lvalue ->_read_status 0x55db2c712130
|     |   |         `-ImplicitCastExpr 0x55db2c7544b8 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55db2c7544a8 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55db2c754608 <line:789:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55db2c754578 <col:13> 'int' lvalue ParmVar 0x55db2c72b1e0 'flags' 'int'
|     |     `-UnaryOperator 0x55db2c7545f0 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55db2c7545d8 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55db2c7545b8 <col:23> 'const int' lvalue Var 0x55db2c719668 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55db2c754790 <line:791:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55db2c7546c8 <col:9> 'bool' lvalue ->_read_status 0x55db2c712130
|       | `-ImplicitCastExpr 0x55db2c7546a8 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55db2c754698 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55db2c754770 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55db2c754750 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55db2c754738 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55db2c7546f8 <col:25> 'int' lvalue Var 0x55db2c753f08 'read_status' 'int'
|           `-IntegerLiteral 0x55db2c754718 <col:40> 'int' 1
|-FunctionTemplateDecl 0x55db2c72b8b8 <line:794:5, line:805:5> line:795:10 base_read_all_with
| |-TemplateTypeParmDecl 0x55db2c72b448 <line:794:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55db2c72b4c8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55db2c72b818 <line:795:5, line:805:5> line:795:10 base_read_all_with 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x55db2c72b588 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c72b608 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x55db2c72b680 <col:61, col:63> col:63 referenced parser 'P'
|   |-ParmVarDecl 0x55db2c72b728 <col:71, col:74> col:74 referenced variable 'T &'
|   `-CompoundStmt 0x55db2c759820 <col:84, line:805:5>
|     |-DeclStmt 0x55db2c754858 <line:796:9, col:26>
|     | `-VarDecl 0x55db2c7547f0 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55db2c754928 <line:797:9, col:29>
|     | `-VarDecl 0x55db2c754888 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55db2c754910 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55db2c7548f0 <col:28> 'int' 1
|     |-DeclStmt 0x55db2c758d40 <line:798:9, col:71>
|     | `-VarDecl 0x55db2c754978 <col:9, col:70> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x55db2c758d10 <col:16, col:70> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x55db2c758c80 <col:16, col:38> '<dependent type>' lvalue ->initialized_slot
|     |     |-DeclRefExpr 0x55db2c758cc8 <col:55> 'T' lvalue ParmVar 0x55db2c72b728 'variable' 'T &'
|     |     `-UnaryOperator 0x55db2c758cf8 <col:65, col:66> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x55db2c758ce8 <col:66> 'Args *' this
|     |-WhileStmt 0x55db2c7596d0 <line:799:9, line:803:9> has_var
|     | |-DeclStmt 0x55db2c7596f0 <line:799:16, col:61>
|     | | `-VarDecl 0x55db2c758d68 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55db2c758f48 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55db2c758f18 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55db2c758f00 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55db2c758ee0 <col:29, col:61> 'String' (CXXTemporary 0x55db2c758ee0)
|     | |           `-CXXMemberCallExpr 0x55db2c758e70 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55db2c758de0 <col:29> '<bound member function type>' ->find 0x55db2c7470b8
|     | |             | `-CXXThisExpr 0x55db2c758dd0 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55db2c758ea8 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55db2c758e10 <col:34> 'const char *' lvalue ParmVar 0x55db2c72b588 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55db2c758ec0 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55db2c758e30 <col:43> 'int' lvalue ParmVar 0x55db2c72b608 'flags' 'int'
|     | |             `-DeclRefExpr 0x55db2c758e50 <col:50> 'Args::Slot *' lvalue Var 0x55db2c7547f0 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55db2c759000 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55db2c758fe8 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55db2c758fc8 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55db2c758f98 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55db2c463098
|     | |       `-ImplicitCastExpr 0x55db2c758f80 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55db2c758f60 <col:23> 'String' lvalue Var 0x55db2c758d68 'str' 'String'
|     | `-CompoundStmt 0x55db2c7596a8 <col:64, line:803:9>
|     |   |-CallExpr 0x55db2c759430 <line:800:13, col:92> '<dependent type>'
|     |   | |-MemberExpr 0x55db2c759028 <col:13> '<bound member function type>' ->postparse 0x55db2c7472c8
|     |   | | `-CXXThisExpr 0x55db2c759018 <col:13> 'Args *' implicit this
|     |   | |-BinaryOperator 0x55db2c7593f0 <col:23, col:78> '<dependent type>' '&&'
|     |   | | |-DeclRefExpr 0x55db2c759058 <col:23> 'T *' lvalue Var 0x55db2c754978 's' 'T *'
|     |   | | `-CallExpr 0x55db2c7593b0 <col:28, col:78> '<dependent type>'
|     |   | |   |-CXXDependentScopeMemberExpr 0x55db2c759240 <col:28, col:50> '<dependent type>' lvalue ->parse
|     |   | |   |-DeclRefExpr 0x55db2c759288 <col:56> 'P' lvalue ParmVar 0x55db2c72b680 'parser' 'P'
|     |   | |   |-DeclRefExpr 0x55db2c7592a8 <col:64> 'String' lvalue Var 0x55db2c758d68 'str' 'String'
|     |   | |   |-CXXOperatorCallExpr 0x55db2c759358 <col:69, col:70> '<dependent type>'
|     |   | |   | |-UnresolvedLookupExpr 0x55db2c7592e8 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55db2c6571c8 0x55db2c656de8 0x55db2c656a18 0x55db2c656638 0x55db2c656258 0x55db2c655e88
|     |   | |   | `-DeclRefExpr 0x55db2c7592c8 <col:70> 'T *' lvalue Var 0x55db2c754978 's' 'T *'
|     |   | |   `-UnaryOperator 0x55db2c759398 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|     |   | |     `-CXXThisExpr 0x55db2c759388 <col:74> 'Args *' this
|     |   | `-DeclRefExpr 0x55db2c759410 <col:81> 'Args::Slot *' lvalue Var 0x55db2c7547f0 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x55db2c7595c8 <line:801:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55db2c759460 <col:13> 'int' lvalue Var 0x55db2c754888 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55db2c7595b0 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55db2c759590 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55db2c7594f8 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55db2c7594d8 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55db2c7594c0 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55db2c759480 <col:28> 'int' lvalue Var 0x55db2c754888 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55db2c7594a0 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55db2c759578 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55db2c759548 <col:49> 'bool' lvalue ->_read_status 0x55db2c712130
|     |   |         `-ImplicitCastExpr 0x55db2c759528 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55db2c759518 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55db2c759678 <line:802:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55db2c7595e8 <col:13> 'int' lvalue ParmVar 0x55db2c72b608 'flags' 'int'
|     |     `-UnaryOperator 0x55db2c759660 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55db2c759648 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55db2c759628 <col:23> 'const int' lvalue Var 0x55db2c719668 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55db2c759800 <line:804:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55db2c759738 <col:9> 'bool' lvalue ->_read_status 0x55db2c712130
|       | `-ImplicitCastExpr 0x55db2c759718 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55db2c759708 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55db2c7597e0 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55db2c7597c0 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55db2c7597a8 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55db2c759768 <col:25> 'int' lvalue Var 0x55db2c754888 'read_status' 'int'
|           `-IntegerLiteral 0x55db2c759788 <col:40> 'int' 1
|-FunctionTemplateDecl 0x55db2c72be98 <line:807:5, line:821:5> line:808:10 base_read_all
| |-TemplateTypeParmDecl 0x55db2c72b930 <line:807:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x55db2c72b9a8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x55db2c72bdf8 <line:808:5, line:821:5> line:808:10 base_read_all 'void (const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x55db2c72ba68 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x55db2c72bae8 <col:45, col:49> col:49 referenced flags 'int'
|   |-ParmVarDecl 0x55db2c72bb60 <col:56, col:58> col:58 referenced parser 'P'
|   |-ParmVarDecl 0x55db2c72bcb0 <col:66, col:77> col:77 referenced variable 'Vector<T> &'
|   `-CompoundStmt 0x55db2c75a628 <col:87, line:821:5>
|     |-DeclStmt 0x55db2c7598d0 <line:809:9, col:26>
|     | `-VarDecl 0x55db2c759868 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x55db2c7599a0 <line:810:9, col:29>
|     | `-VarDecl 0x55db2c759900 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x55db2c759988 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x55db2c759968 <col:28> 'int' 1
|     |-DeclStmt 0x55db2c759be8 <line:811:9, col:38>
|     | `-VarDecl 0x55db2c759ad0 <col:9, col:37> col:20 referenced s 'Vector<T> *' cinit
|     |   `-CallExpr 0x55db2c759bc0 <col:24, col:37> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x55db2c759b48 <col:24> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x55db2c759ba0 <col:29> 'Vector<T>' lvalue ParmVar 0x55db2c72bcb0 'variable' 'Vector<T> &'
|     |-WhileStmt 0x55db2c75a4d8 <line:812:9, line:819:9> has_var
|     | |-DeclStmt 0x55db2c75a4f8 <line:812:16, col:61>
|     | | `-VarDecl 0x55db2c759c10 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x55db2c759df0 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x55db2c759dc0 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x55db2c759da8 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x55db2c759d88 <col:29, col:61> 'String' (CXXTemporary 0x55db2c759d88)
|     | |           `-CXXMemberCallExpr 0x55db2c759d18 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x55db2c759c88 <col:29> '<bound member function type>' ->find 0x55db2c7470b8
|     | |             | `-CXXThisExpr 0x55db2c759c78 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x55db2c759d50 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55db2c759cb8 <col:34> 'const char *' lvalue ParmVar 0x55db2c72ba68 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x55db2c759d68 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x55db2c759cd8 <col:43> 'int' lvalue ParmVar 0x55db2c72bae8 'flags' 'int'
|     | |             `-DeclRefExpr 0x55db2c759cf8 <col:50> 'Args::Slot *' lvalue Var 0x55db2c759868 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x55db2c759ea8 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55db2c759e90 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55db2c759e70 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55db2c759e40 <col:23> '<bound member function type>' .operator int (String::*)() const 0x55db2c463098
|     | |       `-ImplicitCastExpr 0x55db2c759e28 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x55db2c759e08 <col:23> 'String' lvalue Var 0x55db2c759c10 'str' 'String'
|     | `-CompoundStmt 0x55db2c75a4a0 <col:64, line:819:9>
|     |   |-DeclStmt 0x55db2c759f68 <line:813:13, col:23>
|     |   | `-VarDecl 0x55db2c759ed0 <col:13, col:22> col:15 referenced sx 'T' cinit
|     |   |   `-CXXUnresolvedConstructExpr 0x55db2c759f48 <col:20, col:22> 'T' 'T'
|     |   |-CallExpr 0x55db2c75a0e8 <line:814:13, col:64> '<dependent type>'
|     |   | |-MemberExpr 0x55db2c759f90 <col:13> '<bound member function type>' ->postparse 0x55db2c7472c8
|     |   | | `-CXXThisExpr 0x55db2c759f80 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x55db2c75a090 <col:23, col:50> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x55db2c759fe0 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x55db2c759fc0 <col:23> 'P' lvalue ParmVar 0x55db2c72bb60 'parser' 'P'
|     |   | | |-DeclRefExpr 0x55db2c75a028 <col:36> 'String' lvalue Var 0x55db2c759c10 'str' 'String'
|     |   | | |-DeclRefExpr 0x55db2c75a048 <col:41> 'T' lvalue Var 0x55db2c759ed0 'sx' 'T'
|     |   | | `-UnaryOperator 0x55db2c75a078 <col:45, col:46> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x55db2c75a068 <col:46> 'Args *' this
|     |   | `-DeclRefExpr 0x55db2c75a0c8 <col:53> 'Args::Slot *' lvalue Var 0x55db2c759868 'slot_status' 'Args::Slot *'
|     |   |-IfStmt 0x55db2c75a240 <line:815:13, line:816:32>
|     |   | |-ImplicitCastExpr 0x55db2c75a178 <line:815:17> 'bool' <LValueToRValue>
|     |   | | `-MemberExpr 0x55db2c75a148 <col:17> 'bool' lvalue ->_read_status 0x55db2c712130
|     |   | |   `-ImplicitCastExpr 0x55db2c75a128 <col:17> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   | |     `-CXXThisExpr 0x55db2c75a118 <col:17> 'Args *' implicit this
|     |   | `-CallExpr 0x55db2c75a218 <line:816:17, col:32> '<dependent type>'
|     |   |   |-CXXDependentScopeMemberExpr 0x55db2c75a1b0 <col:17, col:20> '<dependent type>' lvalue ->push_back
|     |   |   | `-DeclRefExpr 0x55db2c75a190 <col:17> 'Vector<T> *' lvalue Var 0x55db2c759ad0 's' 'Vector<T> *'
|     |   |   `-DeclRefExpr 0x55db2c75a1f8 <col:30> 'T' lvalue Var 0x55db2c759ed0 'sx' 'T'
|     |   |-BinaryOperator 0x55db2c75a3c0 <line:817:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x55db2c75a258 <col:13> 'int' lvalue Var 0x55db2c759900 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x55db2c75a3a8 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x55db2c75a388 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x55db2c75a2f0 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x55db2c75a2d0 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x55db2c75a2b8 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x55db2c75a278 <col:28> 'int' lvalue Var 0x55db2c759900 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x55db2c75a298 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x55db2c75a370 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x55db2c75a340 <col:49> 'bool' lvalue ->_read_status 0x55db2c712130
|     |   |         `-ImplicitCastExpr 0x55db2c75a320 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x55db2c75a310 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x55db2c75a470 <line:818:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x55db2c75a3e0 <col:13> 'int' lvalue ParmVar 0x55db2c72bae8 'flags' 'int'
|     |     `-UnaryOperator 0x55db2c75a458 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x55db2c75a440 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x55db2c75a420 <col:23> 'const int' lvalue Var 0x55db2c719668 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x55db2c75a608 <line:820:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x55db2c75a540 <col:9> 'bool' lvalue ->_read_status 0x55db2c712130
|       | `-ImplicitCastExpr 0x55db2c75a520 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x55db2c75a510 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x55db2c75a5e8 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x55db2c75a5c8 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x55db2c75a5b0 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x55db2c75a570 <col:25> 'int' lvalue Var 0x55db2c759900 'read_status' 'int'
|           `-IntegerLiteral 0x55db2c75a590 <col:40> 'int' 1
|-AccessSpecDecl 0x55db2c72bf10 <line:824:3, col:10> col:3 private
|-CXXRecordDecl 0x55db2c72bf38 prev 0x55db2c717968 <line:826:5, line:833:5> line:826:12 referenced struct Slot definition
| |-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-CXXRecordDecl 0x55db2c72c030 <col:5, col:12> col:12 implicit referenced struct Slot
| |-CXXConstructorDecl 0x55db2c72c120 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| | `-CompoundStmt 0x55db2c75a660 <col:16, line:828:9>
| |-CXXDestructorDecl 0x55db2c72c210 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| | `-CompoundStmt 0x55db2c75a670 <col:25, line:830:9>
| |-CXXMethodDecl 0x55db2c72c310 <line:831:9, col:32> col:22 store 'void ()' virtual pure
| |-FieldDecl 0x55db2c72c3c0 <line:832:9, col:15> col:15 _next 'Args::Slot *'
| |-CXXMethodDecl 0x55db2c72c468 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x55db2c72c468
| | `-ParmVarDecl 0x55db2c72c578 <col:12> col:12 'const Args::Slot &'
| `-CXXConstructorDecl 0x55db2c72cd38 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x55db2c72cd38
|   `-ParmVarDecl 0x55db2c72ce48 <col:12> col:12 'const Args::Slot &'
|-CXXRecordDecl 0x55db2c72c5e8 <line:835:5, line:848:5> line:835:12 struct BytesSlot definition
| |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment needs_overload_resolution
| | `-Destructor non_trivial user_declared needs_overload_resolution
| |-public 'Args::Slot'
| |-CXXRecordDecl 0x55db2c72c748 <col:5, col:12> col:12 implicit referenced struct BytesSlot
| |-CXXConstructorDecl 0x55db2c72c940 <line:836:9, line:838:9> line:836:9 BytesSlot 'void (void *, size_t)'
| | |-ParmVarDecl 0x55db2c72c7f0 <col:19, col:25> col:25 used ptr 'void *'
| | |-ParmVarDecl 0x55db2c72c868 <col:30, col:37> col:37 used size 'size_t':'unsigned long'
| | |-CXXCtorInitializer 'Args::Slot'
| | | `-CXXConstructExpr 0x55db2c75a850 <col:9> 'Args::Slot' 'void ()'
| | |-CXXCtorInitializer Field 0x55db2c72cbf8 '_ptr' 'void *'
| | | `-ImplicitCastExpr 0x55db2c75a6c0 <line:837:20> 'void *' <LValueToRValue>
| | |   `-DeclRefExpr 0x55db2c75a680 <col:20> 'void *' lvalue ParmVar 0x55db2c72c7f0 'ptr' 'void *'
| | |-CXXCtorInitializer Field 0x55db2c72cc60 '_slot' 'char *'
| | | `-CXXNewExpr 0x55db2c75a748 <col:32, col:45> 'char *' array Function 0x55db2c285ae8 'operator new[]' 'void *(std::size_t)'
| | |   `-ImplicitCastExpr 0x55db2c75a730 <col:41> 'size_t':'unsigned long' <LValueToRValue>
| | |     `-DeclRefExpr 0x55db2c75a700 <col:41> 'size_t':'unsigned long' lvalue ParmVar 0x55db2c72c868 'size' 'size_t':'unsigned long'
| | |-CXXCtorInitializer Field 0x55db2c72ccc0 '_size' 'size_t':'unsigned long'
| | | `-ImplicitCastExpr 0x55db2c75a810 <col:55> 'size_t':'unsigned long' <LValueToRValue>
| | |   `-DeclRefExpr 0x55db2c75a7d0 <col:55> 'size_t':'unsigned long' lvalue ParmVar 0x55db2c72c868 'size' 'size_t':'unsigned long'
| | `-CompoundStmt 0x55db2c75a8d0 <col:61, line:838:9>
| |-CXXDestructorDecl 0x55db2c72ca40 <line:839:9, line:841:9> line:839:9 ~BytesSlot 'void () noexcept'
| | |-Overrides: [ 0x55db2c72c210 Slot::~Slot 'void () noexcept' ]
| | `-CompoundStmt 0x55db2c75a958 <col:22, line:841:9>
| |   `-CXXDeleteExpr 0x55db2c75a938 <line:840:13, col:22> 'void' array Function 0x55db2c285e48 'operator delete[]' 'void (void *) noexcept'
| |     `-ImplicitCastExpr 0x55db2c75a920 <col:22> 'char *' <LValueToRValue>
| |       `-MemberExpr 0x55db2c75a8f0 <col:22> 'char *' lvalue ->_slot 0x55db2c72cc60
| |         `-CXXThisExpr 0x55db2c75a8e0 <col:22> 'Args::BytesSlot *' implicit this
| |-CXXMethodDecl 0x55db2c72cb40 <line:842:9, line:844:9> line:842:14 store 'void ()'
| | |-Overrides: [ 0x55db2c72c310 Slot::store 'void ()' ]
| | `-CompoundStmt 0x55db2c75ab48 <col:22, line:844:9>
| |   `-CallExpr 0x55db2c75aab0 <line:843:13, col:38> 'void *'
| |     |-ImplicitCastExpr 0x55db2c75aa98 <col:13> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x55db2c75aa78 <col:13> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x55db2c3918c8 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
| |     |-ImplicitCastExpr 0x55db2c75aae8 <col:20> 'void *' <LValueToRValue>
| |     | `-MemberExpr 0x55db2c75a9c8 <col:20> 'void *' lvalue ->_ptr 0x55db2c72cbf8
| |     |   `-CXXThisExpr 0x55db2c75a9b8 <col:20> 'Args::BytesSlot *' implicit this
| |     |-ImplicitCastExpr 0x55db2c75ab18 <col:26> 'const void *' <BitCast>
| |     | `-ImplicitCastExpr 0x55db2c75ab00 <col:26> 'char *' <LValueToRValue>
| |     |   `-MemberExpr 0x55db2c75aa08 <col:26> 'char *' lvalue ->_slot 0x55db2c72cc60
| |     |     `-CXXThisExpr 0x55db2c75a9f8 <col:26> 'Args::BytesSlot *' implicit this
| |     `-ImplicitCastExpr 0x55db2c75ab30 <col:33> 'size_t':'unsigned long' <LValueToRValue>
| |       `-MemberExpr 0x55db2c75aa48 <col:33> 'size_t':'unsigned long' lvalue ->_size 0x55db2c72ccc0
| |         `-CXXThisExpr 0x55db2c75aa38 <col:33> 'Args::BytesSlot *' implicit this
| |-FieldDecl 0x55db2c72cbf8 <line:845:9, col:15> col:15 referenced _ptr 'void *'
| |-FieldDecl 0x55db2c72cc60 <line:846:9, col:15> col:15 referenced _slot 'char *'
| |-FieldDecl 0x55db2c72ccc0 <line:847:9, col:16> col:16 referenced _size 'size_t':'unsigned long'
| |-CXXConstructorDecl 0x55db2c72ceb8 <line:835:12> col:12 implicit constexpr BytesSlot 'void (const Args::BytesSlot &)' inline default noexcept-unevaluated 0x55db2c72ceb8
| | `-ParmVarDecl 0x55db2c737e60 <col:12> col:12 'const Args::BytesSlot &'
| `-CXXMethodDecl 0x55db2c737ef8 <col:12> col:12 implicit operator= 'Args::BytesSlot &(const Args::BytesSlot &)' inline default noexcept-unevaluated 0x55db2c737ef8
|   `-ParmVarDecl 0x55db2c738008 <col:12> col:12 'const Args::BytesSlot &'
|-ClassTemplateDecl 0x55db2c7381a8 <line:850:5, line:860:5> line:851:12 SlotT
| |-TemplateTypeParmDecl 0x55db2c738078 <line:850:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXRecordDecl 0x55db2c738118 <line:851:5, line:860:5> line:851:12 struct SlotT definition
|   |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   | |-DefaultConstructor
|   | |-CopyConstructor simple non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
|   | |-MoveConstructor exists simple non_trivial needs_implicit needs_overload_resolution
|   | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple non_trivial needs_implicit needs_overload_resolution
|   | `-Destructor simple non_trivial needs_implicit needs_overload_resolution
|   |-public 'Args::Slot'
|   |-CXXRecordDecl 0x55db2c738440 <col:5, col:12> col:12 implicit referenced struct SlotT
|   |-CXXConstructorDecl 0x55db2c738638 <line:852:9, line:854:9> line:852:9 SlotT<T> 'void (T *)'
|   | |-ParmVarDecl 0x55db2c738508 <col:15, col:18> col:18 referenced ptr 'T *'
|   | |-CXXCtorInitializer Field 0x55db2c7387b8 '_ptr' 'T *'
|   | | `-ParenListExpr 0x55db2c75ab80 <line:853:19, col:23> 'NULL TYPE'
|   | |   `-DeclRefExpr 0x55db2c75ab60 <col:20> 'T *' lvalue ParmVar 0x55db2c738508 'ptr' 'T *'
|   | `-CompoundStmt 0x55db2c75abd0 <col:25, line:854:9>
|   |-CXXMethodDecl 0x55db2c738708 <line:855:9, line:857:9> line:855:14 store 'void ()'
|   | |-Overrides: [ 0x55db2c72c310 Slot::store 'void ()' ]
|   | `-CompoundStmt 0x55db2c75ad80 <col:22, line:857:9>
|   |   `-CallExpr 0x55db2c75ad50 <line:856:13, col:40> '<dependent type>'
|   |     |-UnresolvedLookupExpr 0x55db2c75abe0 <col:13> '<overloaded function type>' lvalue (ADL) = 'assign_consume' 0x55db2c44a218 0x55db2c3f4328
|   |     |-CXXOperatorCallExpr 0x55db2c75ace0 <col:28, col:29> '<dependent type>'
|   |     | |-UnresolvedLookupExpr 0x55db2c75ac70 <col:28> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x55db2c6571c8 0x55db2c656de8 0x55db2c656a18 0x55db2c656638 0x55db2c656258 0x55db2c655e88
|   |     | `-MemberExpr 0x55db2c75ac40 <col:29> 'T *' lvalue ->_ptr 0x55db2c7387b8
|   |     |   `-CXXThisExpr 0x55db2c75ac30 <col:29> 'SlotT<T> *' implicit this
|   |     `-MemberExpr 0x55db2c75ad20 <col:35> 'T' lvalue ->_slot 0x55db2c738818
|   |       `-CXXThisExpr 0x55db2c75ad10 <col:35> 'SlotT<T> *' implicit this
|   |-FieldDecl 0x55db2c7387b8 <line:858:9, col:12> col:12 referenced _ptr 'T *'
|   `-FieldDecl 0x55db2c738818 <line:859:9, col:11> col:11 referenced _slot 'T'
|-EnumDecl 0x55db2c738880 <line:862:5, line:868:5> line:862:5
| `-EnumConstantDecl 0x55db2c738980 <line:866:9, col:31> col:9 referenced simple_slotbuf_size 'Args::(anonymous enum at ../dummy_inc/click/args.hh:862:5)'
|   `-ImplicitCastExpr 0x55db2c7389d0 <col:31> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55db2c738960 <col:31> 'int' Int: 48
|       `-IntegerLiteral 0x55db2c738940 <col:31> 'int' 48
|-FieldDecl 0x55db2c7389f8 <line:871:5, col:10> col:10 _my_conf 'bool'
|-FieldDecl 0x55db2c738a58 <line:876:5, col:10> col:10 referenced _status 'bool'
|-FieldDecl 0x55db2c738ab8 <line:877:5, col:13> col:13 _simple_slotpos 'uint8_t':'unsigned char'
|-FieldDecl 0x55db2c738bf0 <line:879:5, col:21> col:21 referenced _conf 'Vector<String> *'
|-FieldDecl 0x55db2c746960 <line:880:5, col:17> col:17 referenced _kwpos 'Vector<int>':'Vector<int>'
|-FieldDecl 0x55db2c7469c0 <line:882:5, col:11> col:11 referenced _slots 'Args::Slot *'
|-FieldDecl 0x55db2c746a70 <line:883:5, col:48> col:13 referenced _simple_slotbuf 'uint8_t [48]'
|-CXXMethodDecl 0x55db2c746c98 <line:885:5, col:54> col:17 initialize 'void (const Vector<String> *)' inline
| `-ParmVarDecl 0x55db2c746ba0 <col:28, col:50> col:50 conf 'const Vector<String> *'
|-CXXMethodDecl 0x55db2c746de8 <line:886:5, col:26> col:10 used reset_from 'void (int)'
| `-ParmVarDecl 0x55db2c746d58 <col:21, col:25> col:25 i 'int'
|-CXXMethodDecl 0x55db2c7470b8 <line:888:5, col:67> col:12 referenced find 'String (const char *, int, Args::Slot *&)'
| |-ParmVarDecl 0x55db2c746ea8 <col:17, col:29> col:29 keyword 'const char *'
| |-ParmVarDecl 0x55db2c746f28 <col:38, col:42> col:42 flags 'int'
| `-ParmVarDecl 0x55db2c746fd0 <col:49, col:56> col:56 slot_status 'Args::Slot *&'
|-CXXMethodDecl 0x55db2c7472c8 <line:889:5, col:46> col:10 referenced postparse 'void (bool, Args::Slot *)'
| |-ParmVarDecl 0x55db2c747180 <col:20, col:25> col:25 ok 'bool'
| `-ParmVarDecl 0x55db2c7471f8 <col:29, col:35> col:35 slot_status 'Args::Slot *'
|-CXXMethodDecl 0x55db2c747398 <line:890:5, col:25> col:10 check_complete 'void ()'
|-CXXMethodDecl 0x55db2c7474e8 <line:892:5, col:48> col:23 simple_slot_size 'int (int)' static inline
| `-ParmVarDecl 0x55db2c747450 <col:40, col:44> col:44 size 'int'
|-CXXMethodDecl 0x55db2c747878 <line:893:5, line:894:62> line:893:17 simple_slot_info 'void (int, int, void *&, void **&)' inline
| |-ParmVarDecl 0x55db2c7475a8 <col:34, col:38> col:38 offset 'int'
| |-ParmVarDecl 0x55db2c747628 <col:46, col:50> col:50 size 'int'
| |-ParmVarDecl 0x55db2c7476d0 <line:894:34, col:41> col:41 slot 'void *&'
| `-ParmVarDecl 0x55db2c747788 <col:47, col:55> col:55 pointer 'void **&'
|-CXXMethodDecl 0x55db2c747aa0 <line:895:5, col:46> col:11 referenced simple_slot 'void *(void *, size_t)'
| |-ParmVarDecl 0x55db2c747950 <col:23, col:29> col:29 data 'void *'
| `-ParmVarDecl 0x55db2c7479c8 <col:35, col:42> col:42 size 'size_t':'unsigned long'
`-FunctionTemplateDecl 0x55db2c747db8 <line:896:5, col:53> col:29 complex_slot
  |-TemplateTypeParmDecl 0x55db2c747b50 <col:14, col:23> col:23 referenced typename depth 0 index 0 T
  `-CXXMethodDecl 0x55db2c747d18 <col:26, col:53> col:29 complex_slot 'T *(T &)'
    `-ParmVarDecl 0x55db2c747c28 <col:42, col:45> col:45 variable 'T &'

Layout: <CGRecordLayout
  LLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.0*, %class.Vector.5, %"struct.Args::Slot"*, [48 x i8] }
  NonVirtualBaseLLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.0*, %class.Vector.5, %"struct.Args::Slot"*, [48 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class WritablePacket
         0 |   class Packet (base)
         0 |     class atomic_uint32_t _use_count
         0 |       uint32_t _val
         8 |     class Packet * _data_packet
        16 |     unsigned char * _head
        24 |     unsigned char * _data
        32 |     unsigned char * _tail
        40 |     unsigned char * _end
        48 |     struct Packet::AllAnno _aa
        48 |       union Packet::Anno cb
        48 |         char [48] c
        48 |         uint8_t [48] u8
        48 |         uint16_t [24] u16
        48 |         uint32_t [12] u32
        48 |         uint64_t [6] u64
        96 |       unsigned char * mac
       104 |       unsigned char * nh
       112 |       unsigned char * h
       120 |       enum Packet::PacketType pkt_type
       124 |       char [8] timestamp
       136 |       class Packet * next
       144 |       class Packet * prev
       152 |     Packet::buffer_destructor_type _destructor
       160 |     void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c67ead0 prev 0x55db2c65b390 <../dummy_inc/click/packet.hh:778:1, line:816:1> line:778:7 referenced class WritablePacket definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Packet'
|-CXXRecordDecl 0x55db2c67ec08 <col:1, col:7> col:7 implicit referenced class WritablePacket
|-AccessSpecDecl 0x55db2c67ec98 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x55db2c67ed40 <line:780:5, col:62> col:55 data 'unsigned char *() const'
| |-NoInlineAttr 0x55db2c67ede0 <col:20>
| `-OptimizeNoneAttr 0x55db2c67ee38 <col:30>
|-CXXMethodDecl 0x55db2c67ee88 <line:781:5, col:66> col:55 end_data 'unsigned char *() const'
| |-NoInlineAttr 0x55db2c67ef28 <col:20>
| `-OptimizeNoneAttr 0x55db2c67ef80 <col:30>
|-CXXMethodDecl 0x55db2c67efd0 <line:782:5, col:36> col:27 buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x55db2c67f098 <line:783:5, col:40> col:27 end_buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x55db2c67f160 <line:784:5, col:40> col:27 mac_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x55db2c67f278 <line:785:5, col:40> col:25 ether_header 'click_ether *() const' inline
|-CXXMethodDecl 0x55db2c67f340 <line:786:5, col:72> col:55 network_header 'unsigned char *() const'
| |-NoInlineAttr 0x55db2c67f3e0 <col:20>
| `-OptimizeNoneAttr 0x55db2c67f438 <col:30>
|-CXXMethodDecl 0x55db2c67f4a8 <line:787:5, col:62> col:50 ip_header 'click_ip *() const'
| |-NoInlineAttr 0x55db2c67f548 <col:20>
| `-OptimizeNoneAttr 0x55db2c67f5a0 <col:30>
|-CXXMethodDecl 0x55db2c67f648 <line:788:5, col:64> col:51 ip6_header 'click_ip6 *() const'
| |-NoInlineAttr 0x55db2c67f6e8 <col:20>
| `-OptimizeNoneAttr 0x55db2c67f740 <col:30>
|-CXXMethodDecl 0x55db2c67f790 <line:789:5, col:46> col:27 transport_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x55db2c67f8a8 <line:790:5, col:38> col:24 icmp_header 'click_icmp *() const' inline
|-CXXMethodDecl 0x55db2c67f9c8 <line:791:5, col:36> col:23 tcp_header 'click_tcp *() const' inline
|-CXXMethodDecl 0x55db2c67fae8 <line:792:5, col:36> col:23 udp_header 'click_udp *() const' inline
|-CXXMethodDecl 0x55db2c67fbb0 <line:795:5, col:73> col:27 buffer_data 'unsigned char *() const' inline
| `-DeprecatedAttr 0x55db2c67fc50 <col:62> "" ""
|-AccessSpecDecl 0x55db2c67fcc0 <line:798:2, col:9> col:2 private
|-CXXConstructorDecl 0x55db2c67fd20 <line:800:5, col:31> col:12 WritablePacket 'void ()' inline
| |-CXXCtorInitializer 'Packet'
| | `-CXXConstructExpr 0x55db2c680918 <col:12> 'Packet' 'void ()'
| `-CompoundStmt 0x55db2c680b40 <col:29, col:31>
|-CXXMethodDecl 0x55db2c67fde8 <line:802:5, col:28> col:17 initialize 'void ()' inline
|-CXXConstructorDecl 0x55db2c67ff28 <line:804:5, col:35> col:5 WritablePacket 'void (const Packet &)'
| `-ParmVarDecl 0x55db2c67fe98 <col:20, col:34> col:34 x 'const Packet &'
|-CXXDestructorDecl 0x55db2c680020 <line:805:5, col:25> col:5 ~WritablePacket 'void () noexcept'
| `-CompoundStmt 0x55db2c680b50 <col:23, col:25>
|-CXXMethodDecl 0x55db2c6801d8 <line:808:5, col:56> col:28 pool_allocate 'WritablePacket *(bool)' static
| `-ParmVarDecl 0x55db2c680110 <col:42, col:47> col:47 with_data 'bool'
|-CXXMethodDecl 0x55db2c6804a8 <line:809:5, line:810:24> line:809:28 pool_allocate 'WritablePacket *(uint32_t, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55db2c680290 <col:42, col:51> col:51 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55db2c680308 <col:61, col:70> col:70 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55db2c680380 <line:810:7, col:16> col:16 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55db2c680638 <line:811:5, col:42> col:17 recycle 'void (WritablePacket *)' static
| `-ParmVarDecl 0x55db2c680570 <col:25, col:41> col:41 p 'WritablePacket *'
|-FriendDecl 0x55db2c680730 <line:814:5, col:18> col:12 'class Packet':'Packet'
`-CXXConstructorDecl 0x55db2c680798 <line:778:7> col:7 implicit WritablePacket 'void (const WritablePacket &)' inline default noexcept-unevaluated 0x55db2c680798
  `-ParmVarDecl 0x55db2c6808a8 <col:7> col:7 'const WritablePacket &'

Layout: <CGRecordLayout
  LLVMType:%class.WritablePacket = type { %class.Packet }
  NonVirtualBaseLLVMType:%class.WritablePacket = type { %class.Packet }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class BoolArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class NumArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class IntArg
         0 |   class NumArg (base) (empty)
         0 |   int base
         4 |   int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c763500 <../dummy_inc/click/args.hh:1013:1, line:1027:1> line:1013:7 referenced class NumArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55db2c763618 <col:1, col:7> col:7 implicit class NumArg
|-AccessSpecDecl 0x55db2c7636a8 <col:16, col:22> col:16 public
|-EnumDecl 0x55db2c7636d0 <line:1014:5, line:1026:5> line:1014:5
| |-EnumConstantDecl 0x55db2c7637d0 <line:1015:9, col:21> col:9 status_ok 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55db2c763a20 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c7637b0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55db2c763790 <col:21> 'int' 0
| |-EnumConstantDecl 0x55db2c763860 <line:1016:9, col:24> col:9 referenced status_inval 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55db2c763a38 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c763840 <col:24> 'int' Int: 22
| |     `-IntegerLiteral 0x55db2c763820 <col:24> 'int' 22
| |-EnumConstantDecl 0x55db2c7638f0 <line:1017:9, col:24> col:9 referenced status_range 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55db2c763a50 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c7638d0 <col:24> 'int' Int: 34
| |     `-IntegerLiteral 0x55db2c7638b0 <col:24> 'int' 34
| |-EnumConstantDecl 0x55db2c763980 <line:1019:9, col:25> col:9 status_notsup 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x55db2c763a68 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55db2c763960 <col:25> 'int' Int: 95
| |     `-IntegerLiteral 0x55db2c763940 <col:25> 'int' 95
| `-EnumConstantDecl 0x55db2c7639d0 <line:1025:9> col:9 status_unitless 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|-CXXConstructorDecl 0x55db2c7653e0 <line:1013:7> col:7 implicit used constexpr NumArg 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55db2c765818 <col:7>
|-CXXConstructorDecl 0x55db2c7654e8 <col:7> col:7 implicit constexpr NumArg 'void (const NumArg &)' inline default trivial noexcept-unevaluated 0x55db2c7654e8
| `-ParmVarDecl 0x55db2c7655f8 <col:7> col:7 'const NumArg &'
|-CXXConstructorDecl 0x55db2c765698 <col:7> col:7 implicit constexpr NumArg 'void (NumArg &&)' inline default trivial noexcept-unevaluated 0x55db2c765698
| `-ParmVarDecl 0x55db2c7657a8 <col:7> col:7 'NumArg &&'
`-CXXDestructorDecl 0x55db2c767918 <col:7> col:7 implicit ~NumArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.NumArg = type { i8 }
  NonVirtualBaseLLVMType:%class.NumArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c763a98 <../dummy_inc/click/args.hh:1040:1, line:1095:1> line:1040:7 referenced class IntArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x55db2c763bf8 <col:1, col:7> col:7 implicit referenced class IntArg
|-AccessSpecDecl 0x55db2c763c88 <col:32, col:38> col:32 public
|-TypedefDecl 0x55db2c763cc0 <line:1042:5, col:22> col:22 referenced limb_type 'uint32_t':'unsigned int'
| `-TypedefType 0x55db2c287e40 'uint32_t' sugar
|   |-Typedef 0x55db2c198408 'uint32_t'
|   `-TypedefType 0x55db2c171440 '__uint32_t' sugar
|     |-Typedef 0x55db2c171038 '__uint32_t'
|     `-BuiltinType 0x55db2c12f410 'unsigned int'
|-CXXConstructorDecl 0x55db2c763e08 <line:1044:5, line:1046:5> line:1044:5 used IntArg 'void (int)'
| |-ParmVarDecl 0x55db2c763d30 <col:12, col:20> col:16 used b 'int' cinit
| | `-IntegerLiteral 0x55db2c7652e8 <col:20> 'int' 0
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x55db2c765828 <col:5> 'NumArg' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55db2c764ba0 'base' 'int'
| | `-ImplicitCastExpr 0x55db2c765388 <line:1045:16> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x55db2c765348 <col:16> 'int' lvalue ParmVar 0x55db2c763d30 'b' 'int'
| `-CompoundStmt 0x55db2c765898 <col:19, line:1046:5>
|-CXXMethodDecl 0x55db2c764300 <line:1048:5, line:1050:50> line:1048:17 parse 'const char *(const char *, const char *, bool, int, IntArg::limb_type *, int)'
| |-ParmVarDecl 0x55db2c763ed0 <col:23, col:35> col:35 begin 'const char *'
| |-ParmVarDecl 0x55db2c763f50 <col:42, col:54> col:54 end 'const char *'
| |-ParmVarDecl 0x55db2c763fc8 <line:1049:23, col:28> col:28 is_signed 'bool'
| |-ParmVarDecl 0x55db2c764048 <col:39, col:43> col:43 size 'int'
| |-ParmVarDecl 0x55db2c764108 <line:1050:23, col:34> col:34 value 'IntArg::limb_type *'
| `-ParmVarDecl 0x55db2c764188 <col:41, col:45> col:45 nlimb 'int'
|-FunctionTemplateDecl 0x55db2c764758 <line:1052:5, line:1067:5> line:1053:10 parse_saturating
| |-TemplateTypeParmDecl 0x55db2c7643d0 <line:1052:14, col:23> col:23 referenced typename depth 0 index 0 V
| `-CXXMethodDecl 0x55db2c7646b8 <line:1053:5, line:1067:5> line:1053:10 parse_saturating 'bool (const String &, V &, const ArgContext &)'
|   |-ParmVarDecl 0x55db2c764478 <col:27, col:41> col:41 referenced str 'const String &'
|   |-ParmVarDecl 0x55db2c764518 <col:46, col:49> col:49 referenced result 'V &'
|   |-ParmVarDecl 0x55db2c764590 <col:57, col:82> col:75 referenced args 'const ArgContext &' cinit
|   | `-DeclRefExpr 0x55db2c765308 <col:82> 'const ArgContext' lvalue Var 0x55db2c75ada8 'blank_args' 'const ArgContext'
|   `-CompoundStmt 0x55db2c7667c8 <col:94, line:1067:5>
|     |-DeclStmt 0x55db2c765a28 <line:1054:9, col:64>
|     | `-VarDecl 0x55db2c7658b8 <col:9, col:55> col:24 referenced is_signed 'const bool' constexpr cinit
|     |   `-CXXDependentScopeMemberExpr 0x55db2c7659e0 <col:36, col:55> '<dependent type>' lvalue ->is_signed
|     |-DeclStmt 0x55db2c765c48 <line:1055:9, col:91>
|     | `-VarDecl 0x55db2c765a58 <col:9, col:90> col:23 referenced nlimb 'const int' constexpr cinit
|     |   `-CXXFunctionalCastExpr 0x55db2c765c20 <col:31, col:90> 'int' functional cast to int <Dependent>
|     |     `-BinaryOperator 0x55db2c765c00 <col:35, col:89> 'unsigned long' '/'
|     |       |-ParenExpr 0x55db2c765bb0 <col:35, col:69> 'unsigned long'
|     |       | `-BinaryOperator 0x55db2c765b90 <col:36, col:68> 'unsigned long' '-'
|     |       |   |-BinaryOperator 0x55db2c765b38 <col:36, col:64> 'unsigned long' '+'
|     |       |   | |-UnaryExprOrTypeTraitExpr 0x55db2c765ae8 <col:36, col:44> 'unsigned long' sizeof 'V'
|     |       |   | `-UnaryExprOrTypeTraitExpr 0x55db2c765b18 <col:48, col:64> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |       |   `-ImplicitCastExpr 0x55db2c765b78 <col:68> 'unsigned long' <IntegralCast>
|     |       |     `-IntegerLiteral 0x55db2c765b58 <col:68> 'int' 1
|     |       `-UnaryExprOrTypeTraitExpr 0x55db2c765be0 <col:73, col:89> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |-DeclStmt 0x55db2c765da8 <line:1056:9, col:27>
|     | `-VarDecl 0x55db2c765d40 <col:9, col:26> col:19 referenced x 'IntArg::limb_type [nlimb]'
|     |-IfStmt 0x55db2c7661f0 <line:1057:9, line:1059:22>
|     | |-CXXOperatorCallExpr 0x55db2c766120 <line:1057:13, line:1058:24> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x55db2c7660a0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x55db2c652048 0x55db2c49b628 0x55db2c49b300 0x55db2c48cae0 0x55db2c48c790 0x55db2c48c080 0x55db2c45e9f0 0x55db2c3eac90
|     | | |-CallExpr 0x55db2c765fe0 <line:1057:13, col:78> '<dependent type>'
|     | | | |-UnresolvedMemberExpr 0x55db2c765dd0 <col:13> '<bound member function type>' lvalue
|     | | | |-CXXMemberCallExpr 0x55db2c765e80 <col:19, col:29> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x55db2c765e50 <col:19, col:23> '<bound member function type>' .begin 0x55db2c47bce8
|     | | | |   `-DeclRefExpr 0x55db2c765e30 <col:19> 'const String' lvalue ParmVar 0x55db2c764478 'str' 'const String &'
|     | | | |-CXXMemberCallExpr 0x55db2c765ef0 <col:32, col:40> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x55db2c765ec0 <col:32, col:36> '<bound member function type>' .end 0x55db2c47bf00
|     | | | |   `-DeclRefExpr 0x55db2c765ea0 <col:32> 'const String' lvalue ParmVar 0x55db2c764478 'str' 'const String &'
|     | | | |-DeclRefExpr 0x55db2c765f10 <col:43> 'const bool' lvalue Var 0x55db2c7658b8 'is_signed' 'const bool'
|     | | | |-CXXFunctionalCastExpr 0x55db2c765f78 <col:54, col:67> 'int' functional cast to int <Dependent>
|     | | | | `-UnaryExprOrTypeTraitExpr 0x55db2c765f58 <col:58, col:66> 'unsigned long' sizeof 'V'
|     | | | |-DeclRefExpr 0x55db2c765fa0 <col:70> 'IntArg::limb_type [nlimb]' lvalue Var 0x55db2c765d40 'x' 'IntArg::limb_type [nlimb]'
|     | | | `-DeclRefExpr 0x55db2c765fc0 <col:73> 'const int' lvalue Var 0x55db2c765a58 'nlimb' 'const int'
|     | | `-CXXMemberCallExpr 0x55db2c766080 <line:1058:16, col:24> 'String::const_iterator':'const char *'
|     | |   `-MemberExpr 0x55db2c766050 <col:16, col:20> '<bound member function type>' .end 0x55db2c47bf00
|     | |     `-DeclRefExpr 0x55db2c766030 <col:16> 'const String' lvalue ParmVar 0x55db2c764478 'str' 'const String &'
|     | `-BinaryOperator 0x55db2c7661d0 <line:1059:13, col:22> 'int' lvalue '='
|     |   |-MemberExpr 0x55db2c766168 <col:13> 'int' lvalue ->status 0x55db2c764c08
|     |   | `-CXXThisExpr 0x55db2c766158 <col:13> 'IntArg *' implicit this
|     |   `-ImplicitCastExpr 0x55db2c7661b8 <col:22> 'int' <IntegralCast>
|     |     `-DeclRefExpr 0x55db2c766198 <col:22> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55db2c763860 'status_inval' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     |-IfStmt 0x55db2c766440 <line:1060:9, line:1063:9>
|     | |-BinaryOperator 0x55db2c766328 <line:1060:13, col:33> 'bool' '&&'
|     | | |-ImplicitCastExpr 0x55db2c766310 <col:13> 'bool' <IntegralToBoolean>
|     | | | `-ImplicitCastExpr 0x55db2c7662f8 <col:13> 'int' <LValueToRValue>
|     | | |   `-MemberExpr 0x55db2c766218 <col:13> 'int' lvalue ->status 0x55db2c764c08
|     | | |     `-CXXThisExpr 0x55db2c766208 <col:13> 'IntArg *' implicit this
|     | | `-BinaryOperator 0x55db2c7662d8 <col:23, col:33> 'bool' '!='
|     | |   |-ImplicitCastExpr 0x55db2c7662a8 <col:23> 'int' <LValueToRValue>
|     | |   | `-MemberExpr 0x55db2c766258 <col:23> 'int' lvalue ->status 0x55db2c764c08
|     | |   |   `-CXXThisExpr 0x55db2c766248 <col:23> 'IntArg *' implicit this
|     | |   `-ImplicitCastExpr 0x55db2c7662c0 <col:33> 'int' <IntegralCast>
|     | |     `-DeclRefExpr 0x55db2c766288 <col:33> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55db2c7638f0 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     | `-CompoundStmt 0x55db2c766420 <col:47, line:1063:9>
|     |   |-CXXMemberCallExpr 0x55db2c7663c0 <line:1061:13, col:40> 'void'
|     |   | |-MemberExpr 0x55db2c766368 <col:13, col:18> '<bound member function type>' .error 0x55db2c70dcc0
|     |   | | `-DeclRefExpr 0x55db2c766348 <col:13> 'const ArgContext' lvalue ParmVar 0x55db2c764590 'args' 'const ArgContext &'
|     |   | `-ImplicitCastExpr 0x55db2c7663e8 <col:24> 'const char *' <ArrayToPointerDecay>
|     |   |   `-StringLiteral 0x55db2c766398 <col:24> 'const char [15]' lvalue "invalid number"
|     |   `-ReturnStmt 0x55db2c766410 <line:1062:13, col:20>
|     |     `-CXXBoolLiteralExpr 0x55db2c766400 <col:20> 'bool' false
|     |-DeclStmt 0x55db2c766618 <line:1064:9, col:64>
|     | `-TypedefDecl 0x55db2c7665c0 <col:9, col:49> col:49 referenced unsigned_v_type 'typename make_unsigned<V>::type'
|     |   `-DependentNameType 0x55db2c766550 'typename make_unsigned<V>::type' dependent
|     |-CallExpr 0x55db2c766778 <line:1065:9, col:71> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x55db2c766630 <col:9> '<overloaded function type>' lvalue (ADL) = 'extract_integer' 0x55db2c41ee78
|     | |-DeclRefExpr 0x55db2c766678 <col:25> 'IntArg::limb_type [nlimb]' lvalue Var 0x55db2c765d40 'x' 'IntArg::limb_type [nlimb]'
|     | `-CXXReinterpretCastExpr 0x55db2c766748 <col:28, col:70> 'unsigned_v_type':'typename make_unsigned<V>::type' lvalue reinterpret_cast<unsigned_v_type &> <Dependent>
|     |   `-DeclRefExpr 0x55db2c7666c0 <col:64> 'V' lvalue ParmVar 0x55db2c764518 'result' 'V &'
|     `-ReturnStmt 0x55db2c7667b8 <line:1066:9, col:16>
|       `-CXXBoolLiteralExpr 0x55db2c7667a8 <col:16> 'bool' true
|-FunctionTemplateDecl 0x55db2c764b18 <line:1069:5, line:1083:5> line:1070:10 parse
| |-TemplateTypeParmDecl 0x55db2c7647c8 <line:1069:14, col:23> col:23 referenced typename depth 0 index 0 V
| |-CXXMethodDecl 0x55db2c764a78 <line:1070:5, line:1083:5> line:1070:10 parse 'bool (const String &, V &, const ArgContext &)'
| | |-ParmVarDecl 0x55db2c764878 <col:16, col:30> col:30 referenced str 'const String &'
| | |-ParmVarDecl 0x55db2c764918 <col:35, col:38> col:38 referenced result 'V &'
| | |-ParmVarDecl 0x55db2c764990 <col:46, col:71> col:64 referenced args 'const ArgContext &' cinit
| | | `-DeclRefExpr 0x55db2c765328 <col:71> 'const ArgContext' lvalue Var 0x55db2c75ada8 'blank_args' 'const ArgContext'
| | `-CompoundStmt 0x55db2c766f38 <col:83, line:1083:5>
| |   |-DeclStmt 0x55db2c766890 <line:1071:9, col:12>
| |   | `-VarDecl 0x55db2c766828 <col:9, col:11> col:11 referenced x 'V'
| |   `-IfStmt 0x55db2c766f10 <line:1072:9, line:1082:9> has_else
| |     |-BinaryOperator 0x55db2c766b20 <line:1072:13, line:1073:49> '<dependent type>' '||'
| |     | |-UnaryOperator 0x55db2c7669a8 <line:1072:13, col:43> '<dependent type>' prefix '!' cannot overflow
| |     | | `-CallExpr 0x55db2c766970 <col:14, col:43> '<dependent type>'
| |     | |   |-UnresolvedMemberExpr 0x55db2c7668b8 <col:14> '<bound member function type>' lvalue
| |     | |   |-DeclRefExpr 0x55db2c766910 <col:31> 'const String' lvalue ParmVar 0x55db2c764878 'str' 'const String &'
| |     | |   |-DeclRefExpr 0x55db2c766930 <col:36> 'V' lvalue Var 0x55db2c766828 'x' 'V'
| |     | |   `-DeclRefExpr 0x55db2c766950 <col:39> 'const ArgContext' lvalue ParmVar 0x55db2c764990 'args' 'const ArgContext &'
| |     | `-ParenExpr 0x55db2c766b00 <line:1073:16, col:49> 'bool'
| |     |   `-BinaryOperator 0x55db2c766ae0 <col:17, col:37> 'bool' '&&'
| |     |     |-ImplicitCastExpr 0x55db2c766ac8 <col:17> 'bool' <IntegralToBoolean>
| |     |     | `-ImplicitCastExpr 0x55db2c766ab0 <col:17> 'int' <LValueToRValue>
| |     |     |   `-MemberExpr 0x55db2c7669d0 <col:17> 'int' lvalue ->status 0x55db2c764c08
| |     |     |     `-CXXThisExpr 0x55db2c7669c0 <col:17> 'IntArg *' implicit this
| |     |     `-BinaryOperator 0x55db2c766a90 <col:27, col:37> 'bool' '!='
| |     |       |-ImplicitCastExpr 0x55db2c766a60 <col:27> 'int' <LValueToRValue>
| |     |       | `-MemberExpr 0x55db2c766a10 <col:27> 'int' lvalue ->status 0x55db2c764c08
| |     |       |   `-CXXThisExpr 0x55db2c766a00 <col:27> 'IntArg *' implicit this
| |     |       `-ImplicitCastExpr 0x55db2c766a78 <col:37> 'int' <IntegralCast>
| |     |         `-DeclRefExpr 0x55db2c766a40 <col:37> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55db2c7638f0 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |     |-ReturnStmt 0x55db2c766b50 <line:1074:13, col:20>
| |     | `-CXXBoolLiteralExpr 0x55db2c766b40 <col:20> 'bool' false
| |     `-IfStmt 0x55db2c766ee8 <line:1075:14, line:1082:9> has_else
| |       |-BinaryOperator 0x55db2c766bf0 <line:1075:18, col:28> 'bool' '=='
| |       | |-ImplicitCastExpr 0x55db2c766bc0 <col:18> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x55db2c766b70 <col:18> 'int' lvalue ->status 0x55db2c764c08
| |       | |   `-CXXThisExpr 0x55db2c766b60 <col:18> 'IntArg *' implicit this
| |       | `-ImplicitCastExpr 0x55db2c766bd8 <col:28> 'int' <IntegralCast>
| |       |   `-DeclRefExpr 0x55db2c766ba0 <col:28> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x55db2c7638f0 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |       |-CompoundStmt 0x55db2c766e28 <col:42, line:1079:9>
| |       | |-CallExpr 0x55db2c766dd0 <line:1076:13, line:1077:45> '<dependent type>'
| |       | | |-MemberExpr 0x55db2c766c20 <line:1076:13> '<bound member function type>' ->range_error 0x55db2c765218
| |       | | | `-CXXThisExpr 0x55db2c766c10 <col:13> 'IntArg *' implicit this
| |       | | |-DeclRefExpr 0x55db2c766c50 <col:25> 'const ArgContext' lvalue ParmVar 0x55db2c764990 'args' 'const ArgContext &'
| |       | | |-CXXDependentScopeMemberExpr 0x55db2c766d30 <col:31, col:50> '<dependent type>' lvalue ->is_signed
| |       | | `-CXXUnresolvedConstructExpr 0x55db2c766da8 <line:1077:25, col:44> 'click_int_large_t':'long long' 'click_int_large_t':'long long'
| |       | |   `-DeclRefExpr 0x55db2c766d88 <col:43> 'V' lvalue Var 0x55db2c766828 'x' 'V'
| |       | `-ReturnStmt 0x55db2c766e18 <line:1078:13, col:20>
| |       |   `-CXXBoolLiteralExpr 0x55db2c766e08 <col:20> 'bool' false
| |       `-CompoundStmt 0x55db2c766ec8 <line:1079:16, line:1082:9>
| |         |-BinaryOperator 0x55db2c766e88 <line:1080:13, col:22> '<dependent type>' '='
| |         | |-DeclRefExpr 0x55db2c766e48 <col:13> 'V' lvalue ParmVar 0x55db2c764918 'result' 'V &'
| |         | `-DeclRefExpr 0x55db2c766e68 <col:22> 'V' lvalue Var 0x55db2c766828 'x' 'V'
| |         `-ReturnStmt 0x55db2c766eb8 <line:1081:13, col:20>
| |           `-CXXBoolLiteralExpr 0x55db2c766ea8 <col:20> 'bool' true
| `-CXXMethodDecl 0x55db2c8a4d88 <line:1070:5, line:1083:5> line:1070:10 used parse 'bool (const String &, unsigned int &, const ArgContext &)'
|   |-TemplateArgument type 'unsigned int'
|   |-ParmVarDecl 0x55db2c8a4b60 <col:16, col:30> col:30 str 'const String &'
|   |-ParmVarDecl 0x55db2c8a4c38 <col:35, col:38> col:38 result 'unsigned int &'
|   `-ParmVarDecl 0x55db2c8a4ca0 <col:46, col:71> col:64 args 'const ArgContext &' cinit
|     `-DeclRefExpr 0x55db2c765328 <col:71> 'const ArgContext' lvalue Var 0x55db2c75ada8 'blank_args' 'const ArgContext'
|-FieldDecl 0x55db2c764ba0 <line:1085:5, col:9> col:9 base 'int'
|-FieldDecl 0x55db2c764c08 <line:1086:5, col:9> col:9 referenced status 'int'
|-AccessSpecDecl 0x55db2c764c58 <line:1088:3, col:12> col:3 protected
|-CXXMethodDecl 0x55db2c764f10 <line:1090:5, line:1091:51> line:1090:24 span 'const char *(const char *, const char *, bool, int &)' static
| |-ParmVarDecl 0x55db2c764c98 <col:29, col:41> col:41 begin 'const char *'
| |-ParmVarDecl 0x55db2c764d18 <col:48, col:60> col:60 end 'const char *'
| |-ParmVarDecl 0x55db2c764d90 <line:1091:29, col:34> col:34 is_signed 'bool'
| `-ParmVarDecl 0x55db2c764e10 <col:45, col:50> col:50 b 'int &'
|-CXXMethodDecl 0x55db2c765218 <line:1092:5, line:1093:45> line:1092:10 referenced range_error 'void (const ArgContext &, bool, click_int_large_t)'
| |-ParmVarDecl 0x55db2c764fe0 <col:22, col:40> col:40 args 'const ArgContext &'
| |-ParmVarDecl 0x55db2c765058 <col:46, col:51> col:51 is_signed 'bool'
| `-ParmVarDecl 0x55db2c7650f0 <line:1093:22, col:40> col:40 value 'click_int_large_t':'long long'
|-CXXConstructorDecl 0x55db2c767798 <line:1040:7> col:7 implicit constexpr IntArg 'void (const IntArg &)' inline default trivial noexcept-unevaluated 0x55db2c767798
| `-ParmVarDecl 0x55db2c7678a8 <col:7> col:7 'const IntArg &'
|-CXXConstructorDecl 0x55db2c767a28 <col:7> col:7 implicit constexpr IntArg 'void (IntArg &&)' inline default trivial noexcept-unevaluated 0x55db2c767a28
| `-ParmVarDecl 0x55db2c767b38 <col:7> col:7 'IntArg &&'
`-CXXDestructorDecl 0x55db2c8a48b8 <col:7> col:7 implicit referenced ~IntArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IntArg = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.IntArg = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c771110 <../dummy_inc/click/args.hh:1257:1, line:1262:1> line:1257:7 referenced class BoolArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55db2c771228 <col:1, col:7> col:7 implicit class BoolArg
|-AccessSpecDecl 0x55db2c7712b8 <col:17, col:23> col:17 public
|-CXXMethodDecl 0x55db2c7714f8 <line:1258:5, col:91> col:17 used parse 'bool (const String &, bool &, const ArgContext &)' static
| |-ParmVarDecl 0x55db2c7712f0 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x55db2c771370 <col:42, col:48> col:48 result 'bool &'
| `-ParmVarDecl 0x55db2c7713e8 <col:56, col:81> col:74 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x55db2c771710 <col:81> 'const ArgContext' lvalue Var 0x55db2c75ada8 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x55db2c771650 <line:1259:5, line:1261:5> line:1259:19 unparse 'String (bool)' static
| |-ParmVarDecl 0x55db2c7715c0 <col:27, col:32> col:32 used x 'bool'
| `-CompoundStmt 0x55db2c771868 <col:35, line:1261:5>
|   `-ReturnStmt 0x55db2c771858 <line:1260:9, col:24>
|     `-ExprWithCleanups 0x55db2c771840 <col:16, col:24> 'String'
|       `-CXXConstructExpr 0x55db2c771810 <col:16, col:24> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55db2c7717f8 <col:16, col:24> 'String' xvalue
|           `-CXXFunctionalCastExpr 0x55db2c7717d0 <col:16, col:24> 'String' functional cast to class String <ConstructorConversion>
|             `-CXXBindTemporaryExpr 0x55db2c7717b0 <col:16, col:24> 'String' (CXXTemporary 0x55db2c7717b0)
|               `-CXXConstructExpr 0x55db2c771778 <col:16, col:24> 'String' 'void (bool)'
|                 `-ImplicitCastExpr 0x55db2c771760 <col:23> 'bool' <LValueToRValue>
|                   `-DeclRefExpr 0x55db2c771740 <col:23> 'bool' lvalue ParmVar 0x55db2c7715c0 'x' 'bool'
|-CXXConstructorDecl 0x55db2c8a5f80 <line:1257:7> col:7 implicit referenced constexpr BoolArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55db2c8a6088 <col:7> col:7 implicit constexpr BoolArg 'void (const BoolArg &)' inline default trivial noexcept-unevaluated 0x55db2c8a6088
| `-ParmVarDecl 0x55db2c8a6198 <col:7> col:7 'const BoolArg &'
|-CXXConstructorDecl 0x55db2c8a6238 <col:7> col:7 implicit constexpr BoolArg 'void (BoolArg &&)' inline default trivial noexcept-unevaluated 0x55db2c8a6238
| `-ParmVarDecl 0x55db2c8a6348 <col:7> col:7 'BoolArg &&'
`-CXXDestructorDecl 0x55db2c8a63e8 <col:7> col:7 implicit referenced ~BoolArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.BoolArg = type { i8 }
  NonVirtualBaseLLVMType:%class.BoolArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55db2c79c2c0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x55db2c8ca548 <line:167:18>
|-CXXRecordDecl 0x55db2c8ca608 prev 0x55db2c79c2c0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x55db2c8ca718 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.10 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.10 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::SlotT<class Timestamp>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   class Timestamp * _ptr
        24 |   class Timestamp _slot
        24 |     union Timestamp::rep_t _t
        24 |       int64_t x
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<class String>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   class String * _ptr
        24 |   class String _slot
        24 |     struct String::rep_t _r
        24 |       const char * data
        32 |       int length
        40 |       struct String::memo_t * memo
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<int>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   int * _ptr
        24 |   int _slot
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<_Bool>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   _Bool * _ptr
        24 |   _Bool _slot
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Args::SlotT<unsigned int>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   unsigned int * _ptr
        24 |   unsigned int _slot
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | struct uninitialized_type (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c287ab8 <../dummy_inc/click/config.h:317:1, line:318:1> line:317:8 referenced struct uninitialized_type definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55db2c287bd8 <col:1, col:8> col:8 implicit struct uninitialized_type
|-CXXConstructorDecl 0x55db2c499c70 <col:8> col:8 implicit referenced constexpr uninitialized_type 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55db2c499d50 <col:8> col:8 implicit constexpr uninitialized_type 'void (const uninitialized_type &)' inline default trivial noexcept-unevaluated 0x55db2c499d50
| `-ParmVarDecl 0x55db2c499e38 <col:8> col:8 'const uninitialized_type &'
|-CXXConstructorDecl 0x55db2c499ed8 <col:8> col:8 implicit constexpr uninitialized_type 'void (uninitialized_type &&)' inline default trivial noexcept-unevaluated 0x55db2c499ed8
| `-ParmVarDecl 0x55db2c499fe8 <col:8> col:8 'uninitialized_type &&'
`-CXXDestructorDecl 0x55db2c636cd0 <col:8> col:8 implicit referenced ~uninitialized_type 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.uninitialized_type = type { i8 }
  NonVirtualBaseLLVMType:%struct.uninitialized_type = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class TimestampArg
         0 |   _Bool is_signed
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | struct DefaultArg<class Timestamp>
         0 |   class TimestampArg (base)
         0 |     _Bool is_signed
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c659f20 <../dummy_inc/click/timestamp.hh:1525:1, line:1534:1> line:1525:7 referenced class TimestampArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55db2c65a038 <col:1, col:7> col:7 implicit referenced class TimestampArg
|-AccessSpecDecl 0x55db2c65a0c8 <col:22, col:28> col:22 public
|-CXXConstructorDecl 0x55db2c65a1d8 <line:1526:5, line:1528:5> line:1526:5 used TimestampArg 'void (bool)'
| |-ParmVarDecl 0x55db2c65a100 <col:18, col:35> col:23 used is_signed 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55db2c65a598 <col:35> 'bool' false
| |-CXXCtorInitializer Field 0x55db2c65a530 'is_signed' 'bool'
| | `-ImplicitCastExpr 0x55db2c65a608 <line:1527:21> 'bool' <LValueToRValue>
| |   `-DeclRefExpr 0x55db2c65a5c8 <col:21> 'bool' lvalue ParmVar 0x55db2c65a100 'is_signed' 'bool'
| `-CompoundStmt 0x55db2c65a650 <col:32, line:1528:5>
|-CXXMethodDecl 0x55db2c65a468 <line:1529:5, line:1532:5> line:1529:10 used parse 'bool (const String &, Timestamp &, const ArgContext &)'
| |-ParmVarDecl 0x55db2c65a298 <col:16, col:30> col:30 used str 'const String &'
| |-ParmVarDecl 0x55db2c65a310 <col:35, col:46> col:46 used value 'Timestamp &'
| |-ParmVarDecl 0x55db2c65a388 <col:53, col:78> col:71 used args 'const ArgContext &' cinit
| | `-DeclRefExpr 0x55db2c65a5a8 <col:78> 'const ArgContext' lvalue Var 0x55db2c659c18 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x55db2c65a860 <col:90, line:1532:5>
|   |-CStyleCastExpr 0x55db2c65a690 <line:1530:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55db2c65a660 <col:16> 'const ArgContext' lvalue ParmVar 0x55db2c65a388 'args' 'const ArgContext &'
|   `-ReturnStmt 0x55db2c65a850 <line:1531:9, col:46>
|     `-CallExpr 0x55db2c65a800 <col:16, col:46> 'bool'
|       |-ImplicitCastExpr 0x55db2c65a7e8 <col:16> 'bool (*)(const String &, Timestamp *, bool)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55db2c65a798 <col:16> 'bool (const String &, Timestamp *, bool)' lvalue Function 0x55db2c659e68 'cp_time' 'bool (const String &, Timestamp *, bool)'
|       |-DeclRefExpr 0x55db2c65a700 <col:24> 'const String' lvalue ParmVar 0x55db2c65a298 'str' 'const String &'
|       |-UnaryOperator 0x55db2c65a740 <col:29, col:30> 'Timestamp *' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x55db2c65a720 <col:30> 'Timestamp' lvalue ParmVar 0x55db2c65a310 'value' 'Timestamp &'
|       `-ImplicitCastExpr 0x55db2c65a838 <col:37> 'bool' <LValueToRValue>
|         `-MemberExpr 0x55db2c65a768 <col:37> 'bool' lvalue ->is_signed 0x55db2c65a530
|           `-CXXThisExpr 0x55db2c65a758 <col:37> 'TimestampArg *' implicit this
|-FieldDecl 0x55db2c65a530 <line:1533:5, col:10> col:10 referenced is_signed 'bool'
|-CXXDestructorDecl 0x55db2c8cfd00 <line:1525:7> col:7 implicit ~TimestampArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55db2c8cfe38 <col:7> col:7 implicit constexpr TimestampArg 'void (const TimestampArg &)' inline default trivial noexcept-unevaluated 0x55db2c8cfe38
| `-ParmVarDecl 0x55db2c8cff48 <col:7> col:7 'const TimestampArg &'
`-CXXConstructorDecl 0x55db2c8cffe8 <col:7> col:7 implicit used constexpr TimestampArg 'void (TimestampArg &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55db2c8d00f8 <col:7> col:7 used 'TimestampArg &&'
  |-CXXCtorInitializer Field 0x55db2c65a530 'is_signed' 'bool'
  | `-ImplicitCastExpr 0x55db2c8d0ec0 <col:7> 'bool' <LValueToRValue>
  |   `-MemberExpr 0x55db2c8d0e90 <col:7> 'bool' xvalue .is_signed 0x55db2c65a530
  |     `-CXXStaticCastExpr 0x55db2c8d0e60 <col:7> 'TimestampArg' xvalue static_cast<class TimestampArg &&> <NoOp>
  |       `-DeclRefExpr 0x55db2c8d0e30 <col:7> 'TimestampArg' lvalue ParmVar 0x55db2c8d00f8 '' 'TimestampArg &&'
  `-CompoundStmt 0x55db2c8d0f08 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.TimestampArg = type { i8 }
  NonVirtualBaseLLVMType:%class.TimestampArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55db2c65a8a8 <../dummy_inc/click/timestamp.hh:1536:1, col:64> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable can_const_default_init
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'TimestampArg'
|-TemplateArgument type 'Timestamp'
|-CXXRecordDecl 0x55db2c65ab08 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x55db2c8cfc28 <col:19> col:19 implicit used DefaultArg 'void () noexcept(false)' inline default
| |-CXXCtorInitializer 'TimestampArg'
| | `-CXXConstructExpr 0x55db2c8d0500 <col:19> 'TimestampArg' 'void (bool)'
| |   `-CXXDefaultArgExpr 0x55db2c8d04e0 <<invalid sloc>> 'bool'
| `-CompoundStmt 0x55db2c8d0570 <col:19>
|-CXXConstructorDecl 0x55db2c8d0168 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<Timestamp> &)' inline default trivial noexcept-unevaluated 0x55db2c8d0168
| `-ParmVarDecl 0x55db2c8d0278 <col:19> col:19 'const DefaultArg<Timestamp> &'
|-CXXConstructorDecl 0x55db2c8d0318 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<Timestamp> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55db2c8d0428 <col:19> col:19 used 'DefaultArg<Timestamp> &&'
| |-CXXCtorInitializer 'TimestampArg'
| | `-CXXConstructExpr 0x55db2c8d0f18 <col:19> 'TimestampArg' 'void (TimestampArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55db2c8d0e10 <col:19> 'TimestampArg' xvalue <UncheckedDerivedToBase (TimestampArg)>
| |     `-CXXStaticCastExpr 0x55db2c8d0de0 <col:19> 'DefaultArg<Timestamp>' xvalue static_cast<struct DefaultArg<class Timestamp> &&> <NoOp>
| |       `-DeclRefExpr 0x55db2c8d0db0 <col:19> 'DefaultArg<Timestamp>' lvalue ParmVar 0x55db2c8d0428 '' 'DefaultArg<Timestamp> &&'
| `-CompoundStmt 0x55db2c8d0f88 <col:19>
`-CXXDestructorDecl 0x55db2c8d05b0 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg = type { %class.TimestampArg }
  NonVirtualBaseLLVMType:%struct.DefaultArg = type { %class.TimestampArg }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class StringArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | struct DefaultArg<class String> (empty)
         0 |   class StringArg (base) (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55db2c7753f8 <../dummy_inc/click/args.hh:1345:1, line:1349:1> line:1345:7 referenced class StringArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55db2c775518 <col:1, col:7> col:7 implicit class StringArg
|-AccessSpecDecl 0x55db2c7755a8 <col:19, col:25> col:19 public
|-CXXMethodDecl 0x55db2c7757a0 <line:1346:5, line:1348:5> line:1346:17 used parse 'bool (const String &, String &, const ArgContext &)' static
| |-ParmVarDecl 0x55db2c7755e0 <col:23, col:37> col:37 used str 'const String &'
| |-ParmVarDecl 0x55db2c775658 <col:42, col:50> col:50 used result 'String &'
| |-ParmVarDecl 0x55db2c7756d0 <col:58, col:79> col:77 'const ArgContext &' cinit
| | `-DeclRefExpr 0x55db2c775870 <col:79> 'const ArgContext' lvalue Var 0x55db2c75ada8 'blank_args' 'const ArgContext'
| `-CompoundStmt 0x55db2c775a10 <col:91, line:1348:5>
|   `-ReturnStmt 0x55db2c775a00 <line:1347:9, col:41>
|     `-CallExpr 0x55db2c7759b0 <col:16, col:41> 'bool'
|       |-ImplicitCastExpr 0x55db2c775998 <col:16> 'bool (*)(const String &, String *, String *)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55db2c775950 <col:16> 'bool (const String &, String *, String *)' lvalue Function 0x55db2c775340 'cp_string' 'bool (const String &, String *, String *)'
|       |-DeclRefExpr 0x55db2c7758d8 <col:26> 'const String' lvalue ParmVar 0x55db2c7755e0 'str' 'const String &'
|       |-UnaryOperator 0x55db2c775918 <col:31, col:32> 'String *' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x55db2c7758f8 <col:32> 'String' lvalue ParmVar 0x55db2c775658 'result' 'String &'
|       `-ImplicitCastExpr 0x55db2c7759e8 <col:40> 'String *' <NullToPointer>
|         `-IntegerLiteral 0x55db2c775930 <col:40> 'int' 0
|-CXXConstructorDecl 0x55db2c8dc5e8 <line:1345:7> col:7 implicit constexpr StringArg 'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x55db2c8dc6c0 <col:7> col:7 implicit ~StringArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55db2c8dc7f8 <col:7> col:7 implicit constexpr StringArg 'void (const StringArg &)' inline default trivial noexcept-unevaluated 0x55db2c8dc7f8
| `-ParmVarDecl 0x55db2c8dc908 <col:7> col:7 'const StringArg &'
`-CXXConstructorDecl 0x55db2c8dc9a8 <col:7> col:7 implicit used constexpr StringArg 'void (StringArg &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55db2c8dcab8 <col:7> col:7 'StringArg &&'
  `-CompoundStmt 0x55db2c8dd710 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.StringArg = type { i8 }
  NonVirtualBaseLLVMType:%class.StringArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55db2c775a50 <../dummy_inc/click/args.hh:1351:1, col:58> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'StringArg'
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55db2c775ca8 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x55db2c8dc4f8 <col:19> col:19 implicit referenced constexpr DefaultArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55db2c8dcb28 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<String> &)' inline default trivial noexcept-unevaluated 0x55db2c8dcb28
| `-ParmVarDecl 0x55db2c8dcc38 <col:19> col:19 'const DefaultArg<String> &'
|-CXXConstructorDecl 0x55db2c8dccd8 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<String> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55db2c8dcde8 <col:19> col:19 used 'DefaultArg<String> &&'
| |-CXXCtorInitializer 'StringArg'
| | `-CXXConstructExpr 0x55db2c8dd720 <col:19> 'StringArg' 'void (StringArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55db2c8dd6f0 <col:19> 'StringArg' xvalue <UncheckedDerivedToBase (StringArg)>
| |     `-CXXStaticCastExpr 0x55db2c8dd6c0 <col:19> 'DefaultArg<String>' xvalue static_cast<struct DefaultArg<class String> &&> <NoOp>
| |       `-DeclRefExpr 0x55db2c8dd690 <col:19> 'DefaultArg<String>' lvalue ParmVar 0x55db2c8dcde8 '' 'DefaultArg<String> &&'
| `-CompoundStmt 0x55db2c8dd790 <col:19>
`-CXXDestructorDecl 0x55db2c8dce88 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg.20 = type { i8 }
  NonVirtualBaseLLVMType:%struct.DefaultArg.20 = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55db2c8de3d8 <../dummy_inc/click/args.hh:850:5, line:860:5> line:851:12 struct SlotT definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Args::Slot'
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x55db2c8de7d8 prev 0x55db2c8de3d8 <col:5, col:12> col:12 implicit struct SlotT
|-CXXConstructorDecl 0x55db2c8de9d0 <line:852:9, line:854:9> line:852:9 used SlotT 'void (String *)'
| |-ParmVarDecl 0x55db2c8de8d8 <col:15, col:18> col:18 used ptr 'String *'
| |-CXXCtorInitializer 'Args::Slot'
| | `-CXXConstructExpr 0x55db2c8df918 <col:9> 'Args::Slot' 'void ()'
| |-CXXCtorInitializer Field 0x55db2c8deb50 '_ptr' 'String *'
| | `-ImplicitCastExpr 0x55db2c8df8d8 <line:853:20> 'String *' <LValueToRValue>
| |   `-DeclRefExpr 0x55db2c8df898 <col:20> 'String *' lvalue ParmVar 0x55db2c8de8d8 'ptr' 'String *'
| |-CXXCtorInitializer Field 0x55db2c8debb0 '_slot' 'String':'String'
| | `-CXXConstructExpr 0x55db2c8df978 <line:852:9> 'String':'String' 'void ()'
| `-CompoundStmt 0x55db2c75abd0 <line:853:25, line:854:9>
|-CXXMethodDecl 0x55db2c8dea90 <line:855:9, line:857:9> line:855:14 used store 'void ()'
| |-Overrides: [ 0x55db2c72c310 Slot::store 'void ()' ]
| `-CompoundStmt 0x55db2c8e0038 <col:22, line:857:9>
|   `-CallExpr 0x55db2c8dfff0 <line:856:13, col:40> 'void'
|     |-ImplicitCastExpr 0x55db2c8dffd8 <col:13> 'void (*)(String &, const String &)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x55db2c8dff58 <col:13> 'void (String &, const String &)' lvalue Function 0x55db2c8dfe38 'assign_consume' 'void (String &, const String &)' (FunctionTemplate 0x55db2c3f4328 'assign_consume')
|     |-UnaryOperator 0x55db2c8dfb08 <col:28, col:29> 'String':'String' lvalue prefix '*' cannot overflow
|     | `-ImplicitCastExpr 0x55db2c8dfaf0 <col:29> 'String *' <LValueToRValue>
|     |   `-MemberExpr 0x55db2c8dfac0 <col:29> 'String *' lvalue ->_ptr 0x55db2c8deb50
|     |     `-CXXThisExpr 0x55db2c8dfab0 <col:29> 'Args::SlotT<String> *' implicit this
|     `-ImplicitCastExpr 0x55db2c8e0020 <col:35> 'const String':'const String' lvalue <NoOp>
|       `-MemberExpr 0x55db2c8dfb30 <col:35> 'String':'String' lvalue ->_slot 0x55db2c8debb0
|         `-CXXThisExpr 0x55db2c8dfb20 <col:35> 'Args::SlotT<String> *' implicit this
|-FieldDecl 0x55db2c8deb50 <line:858:9, col:12> col:12 referenced _ptr 'String *'
|-FieldDecl 0x55db2c8debb0 <line:859:9, col:11> col:11 referenced _slot 'String':'String'
|-CXXConstructorDecl 0x55db2c8dec28 <line:851:12> col:12 implicit SlotT 'void (const Args::SlotT<String> &)' inline default noexcept-unevaluated 0x55db2c8dec28
| `-ParmVarDecl 0x55db2c8ded38 <col:12> col:12 'const Args::SlotT<String> &'
|-CXXConstructorDecl 0x55db2c8dedd8 <col:12> col:12 implicit SlotT 'void (Args::SlotT<String> &&)' inline default noexcept-unevaluated 0x55db2c8dedd8
| `-ParmVarDecl 0x55db2c8deee8 <col:12> col:12 'Args::SlotT<String> &&'
|-CXXMethodDecl 0x55db2c8def88 <col:12> col:12 implicit operator= 'Args::SlotT<String> &(const Args::SlotT<String> &)' inline default noexcept-unevaluated 0x55db2c8def88
| `-ParmVarDecl 0x55db2c8df098 <col:12> col:12 'const Args::SlotT<String> &'
|-CXXMethodDecl 0x55db2c8df108 <col:12> col:12 implicit operator= 'Args::SlotT<String> &(Args::SlotT<String> &&)' inline default noexcept-unevaluated 0x55db2c8df108
| `-ParmVarDecl 0x55db2c8df218 <col:12> col:12 'Args::SlotT<String> &&'
`-CXXDestructorDecl 0x55db2c8df2a0 <col:12> col:12 implicit used ~SlotT 'void () noexcept' inline default
  |-Overrides: [ 0x55db2c72c210 Slot::~Slot 'void () noexcept' ]
  `-CompoundStmt 0x55db2c8df9e0 <col:12>

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::SlotT" = type { %"struct.Args::Slot", %class.String*, %class.String }
  NonVirtualBaseLLVMType:%"struct.Args::SlotT" = type { %"struct.Args::Slot", %class.String*, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct DefaultArg<int>
         0 |   class IntArg (base)
         0 |     class NumArg (base) (empty)
         0 |     int base
         4 |     int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55db2c76c070 <../dummy_inc/click/args.hh:1183:1, col:52> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable can_const_default_init
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'IntArg'
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x55db2c76c2c8 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x55db2c8e7888 <col:19> col:19 implicit used DefaultArg 'void () noexcept(false)' inline default
| |-CXXCtorInitializer 'IntArg'
| | `-CXXConstructExpr 0x55db2c8e7d20 <col:19> 'IntArg' 'void (int)'
| |   `-CXXDefaultArgExpr 0x55db2c8e7d00 <<invalid sloc>> 'int'
| `-CompoundStmt 0x55db2c8e7d90 <col:19>
|-CXXConstructorDecl 0x55db2c8e7988 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<int> &)' inline default trivial noexcept-unevaluated 0x55db2c8e7988
| `-ParmVarDecl 0x55db2c8e7a98 <col:19> col:19 'const DefaultArg<int> &'
|-CXXConstructorDecl 0x55db2c8e7b38 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<int> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55db2c8e7c48 <col:19> col:19 used 'DefaultArg<int> &&'
| |-CXXCtorInitializer 'IntArg'
| | `-CXXConstructExpr 0x55db2c8e8950 <col:19> 'IntArg' 'void (IntArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55db2c8e8670 <col:19> 'IntArg' xvalue <UncheckedDerivedToBase (IntArg)>
| |     `-CXXStaticCastExpr 0x55db2c8e8640 <col:19> 'DefaultArg<int>' xvalue static_cast<struct DefaultArg<int> &&> <NoOp>
| |       `-DeclRefExpr 0x55db2c8e8610 <col:19> 'DefaultArg<int>' lvalue ParmVar 0x55db2c8e7c48 '' 'DefaultArg<int> &&'
| `-CompoundStmt 0x55db2c8e89c0 <col:19>
`-CXXDestructorDecl 0x55db2c8e7dd0 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg.21 = type { %class.IntArg }
  NonVirtualBaseLLVMType:%struct.DefaultArg.21 = type { %class.IntArg }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct DefaultArg<_Bool> (empty)
         0 |   class BoolArg (base) (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55db2c7718a8 <../dummy_inc/click/args.hh:1264:1, col:54> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'BoolArg'
|-TemplateArgument type 'bool'
|-CXXRecordDecl 0x55db2c771b08 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x55db2c8f59a8 <col:19> col:19 implicit referenced constexpr DefaultArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55db2c8f5aa8 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<bool> &)' inline default trivial noexcept-unevaluated 0x55db2c8f5aa8
| `-ParmVarDecl 0x55db2c8f5bb8 <col:19> col:19 'const DefaultArg<bool> &'
|-CXXConstructorDecl 0x55db2c8f5c58 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<bool> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55db2c8f5d68 <col:19> col:19 used 'DefaultArg<bool> &&'
| |-CXXCtorInitializer 'BoolArg'
| | `-CXXConstructExpr 0x55db2c8f66a0 <col:19> 'BoolArg' 'void (BoolArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55db2c8f6670 <col:19> 'BoolArg' xvalue <UncheckedDerivedToBase (BoolArg)>
| |     `-CXXStaticCastExpr 0x55db2c8f6640 <col:19> 'DefaultArg<bool>' xvalue static_cast<struct DefaultArg<_Bool> &&> <NoOp>
| |       `-DeclRefExpr 0x55db2c8f6610 <col:19> 'DefaultArg<bool>' lvalue ParmVar 0x55db2c8f5d68 '' 'DefaultArg<bool> &&'
| `-CompoundStmt 0x55db2c8f6710 <col:19>
`-CXXDestructorDecl 0x55db2c8f5e08 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg.22 = type { i8 }
  NonVirtualBaseLLVMType:%struct.DefaultArg.22 = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct DefaultArg<unsigned int>
         0 |   class IntArg (base)
         0 |     class NumArg (base) (empty)
         0 |     int base
         4 |     int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x55db2c76bd40 <../dummy_inc/click/args.hh:1182:1, col:61> col:19 struct DefaultArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable can_const_default_init
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'IntArg'
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x55db2c76bf98 <col:12, col:19> col:19 implicit struct DefaultArg
|-CXXConstructorDecl 0x55db2c900f88 <col:19> col:19 implicit used DefaultArg 'void () noexcept(false)' inline default
| |-CXXCtorInitializer 'IntArg'
| | `-CXXConstructExpr 0x55db2c901420 <col:19> 'IntArg' 'void (int)'
| |   `-CXXDefaultArgExpr 0x55db2c901400 <<invalid sloc>> 'int'
| `-CompoundStmt 0x55db2c901490 <col:19>
|-CXXConstructorDecl 0x55db2c901088 <col:19> col:19 implicit constexpr DefaultArg 'void (const DefaultArg<unsigned int> &)' inline default trivial noexcept-unevaluated 0x55db2c901088
| `-ParmVarDecl 0x55db2c901198 <col:19> col:19 'const DefaultArg<unsigned int> &'
|-CXXConstructorDecl 0x55db2c901238 <col:19> col:19 implicit used constexpr DefaultArg 'void (DefaultArg<unsigned int> &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55db2c901348 <col:19> col:19 used 'DefaultArg<unsigned int> &&'
| |-CXXCtorInitializer 'IntArg'
| | `-CXXConstructExpr 0x55db2c901d30 <col:19> 'IntArg' 'void (IntArg &&) noexcept'
| |   `-ImplicitCastExpr 0x55db2c901d10 <col:19> 'IntArg' xvalue <UncheckedDerivedToBase (IntArg)>
| |     `-CXXStaticCastExpr 0x55db2c901ce0 <col:19> 'DefaultArg<unsigned int>' xvalue static_cast<struct DefaultArg<unsigned int> &&> <NoOp>
| |       `-DeclRefExpr 0x55db2c901cb0 <col:19> 'DefaultArg<unsigned int>' lvalue ParmVar 0x55db2c901348 '' 'DefaultArg<unsigned int> &&'
| `-CompoundStmt 0x55db2c901da0 <col:19>
`-CXXDestructorDecl 0x55db2c9014d0 <col:19> col:19 implicit referenced ~DefaultArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.DefaultArg.23 = type { %class.IntArg }
  NonVirtualBaseLLVMType:%struct.DefaultArg.23 = type { %class.IntArg }
  IsZeroInitializable:1
  BitFields:[
]>
