
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b961aa4378 prev 0x55b961a9bb18 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b961aa4470 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55b961aa4500 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55b961aa4578 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55b961aa4638 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55b961aa4700 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55b961aa4878 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55b961aa47b0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55b961aa4920 <col:24>
| `-OptimizeNoneAttr 0x55b961aa4978 <col:34>
|-CXXMethodDecl 0x55b961aa49c0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55b961aa4c78 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55b961aa4a70 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55b961aa4ae8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55b961aa4b68 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55b961aa4d30 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55b961aa4d68 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55b961aa4dd0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55b961aa4e58 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55b961aa5178 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55b961aa4f10 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55b961aa4f88 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55b961aa5000 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55b961aa5080 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55b961aa5290 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55b961aacc08 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55b961aacc08
| `-ParmVarDecl 0x55b961aacd18 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55b961aacdb8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55b961aacdb8
| `-ParmVarDecl 0x55b961aacec8 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55b961acff80 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b961a97390 prev 0x55b961a97110 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b961a97488 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55b961a97518 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55b961a97578 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55b961a97668 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55b961a97768 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55b961a97938 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55b961a977e8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55b961a97860 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55b961a97ac8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55b961a97a00 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55b961a97b70 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55b961a97ca8 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55b961a97be0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55b961a97e48 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55b961a97d88 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55b961a97fe8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55b961a97f28 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55b961a98090 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55b961a98190 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55b961a98270 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a98170 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55b961a98150 <col:26> 'int' 1
| `-EnumConstantDecl 0x55b961a98220 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55b961a98288 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b961a98200 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55b961a981e0 <col:44> 'int' 2
|-CXXMethodDecl 0x55b961a983d0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55b961a982b8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55b961a98338 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55b961a98528 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55b961a98498 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55b961a98768 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55b961a985e8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55b961a98660 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55b961a98818 <col:20>
| `-OptimizeNoneAttr 0x55b961a98870 <col:30>
|-CXXMethodDecl 0x55b961a98978 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55b961a988b0 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55b961a98a20 <col:20>
| `-OptimizeNoneAttr 0x55b961a98a78 <col:30>
|-CXXMethodDecl 0x55b961a98ac8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55b961a98b90 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55b961a98ca8 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55b961a98d30 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55b961a98db8 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55b961a98e40 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x55b961a98ec8 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55b961a98f58 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55b961a99018 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55b961a990a0 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55b961a99128 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55b961a991b0 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55b961a99238 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55b961a992c0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55b961a99350 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55b961a99410 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55b961a994a0 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55b961a995f0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55b961a99558 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55b961a99780 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55b961a996b0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55b961a99a30 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55b961a99838 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55b961a998b8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55b961a99938 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55b961a99ae8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55b961a99bf0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55b961a99e80 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a99bd0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55b961a99bb0 <col:33> 'int' 0
| |-EnumConstantDecl 0x55b961a99c80 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55b961a99e98 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a99c60 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55b961a99c40 <col:32> 'int' 20
| |-EnumConstantDecl 0x55b961a99d10 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55b961a99eb0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a99cf0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55b961a99cd0 <col:38> 'int' 90
| |-EnumConstantDecl 0x55b961a99da0 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55b961a99ec8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a99d80 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55b961a99d60 <col:35> 'int' 100
| `-EnumConstantDecl 0x55b961a99e30 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55b961a99ee0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b961a99e10 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55b961a99df0 <col:32> 'int' 2000
|-CXXMethodDecl 0x55b961a99f20 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55b961a9a360 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55b961a9a1d0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55b961a9a248 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b961a9a430 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55b961a9a5b0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55b961a9a4e0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b961a9a7b8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55b961a9a668 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55b961a9a6e0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b961a9a8b8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55b961a9a958 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55b961a9aa20 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55b961a9aab0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55b961a9ace0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a9aa90 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55b961a9aa70 <col:36> 'int' EnumConstant 0x55b961a9aa20 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55b961a9ab00 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55b961a9ab50 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55b961a9aba0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55b961a9abf0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55b961a9ac40 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55b961a9ac90 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55b961a9adc8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55b961a9ad08 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55b961a9ae90 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55b961a9af50 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55b961a9b010 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55b961a9b0d0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55b961a9b1e8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55b961a9b2b0 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x55b961a9b430 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55b961a9b360 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55b961a9b558 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55b961a9b758 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55b961a9b608 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55b961a9b688 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55b961aa90a8 <col:54, line:127:5>
|   |-ParenExpr 0x55b961aa8f58 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55b961aa8f28 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55b961aa8c18 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55b961aa8bf0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55b961aa8bd8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55b961aa8bc0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55b961aa8b90 <col:31> 'Router *' lvalue ->_router 0x55b961aa6a70
|   |   |         `-CXXThisExpr 0x55b961aa8b80 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55b961aa8c78 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b961aa8c58 <col:48> 'int' 0
|   |   `-CallExpr 0x55b961aa8e88 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55b961aa8e70 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b961aa8e50 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9615d1a80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b961aa8ec8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961aa8ce8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55b961aa8ee0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961aa8d08 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55b961aa8ef8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b961aa8d40 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55b961aa8f10 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b961aa8e38 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b961aa8e20 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b961aa8dd8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55b961aa8ff0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55b961aa8f88 <col:9> 'Router *' lvalue ->_router 0x55b961aa6a70
|   | | `-CXXThisExpr 0x55b961aa8f78 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55b961aa8fd8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b961aa8fb8 <col:19> 'Router *' lvalue ParmVar 0x55b961a9b608 'r' 'Router *'
|   `-BinaryOperator 0x55b961aa9088 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55b961aa9020 <col:9> 'int' lvalue ->_eindex 0x55b961aa6ad8
|     | `-CXXThisExpr 0x55b961aa9010 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55b961aa9070 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55b961aa9050 <col:19> 'int' lvalue ParmVar 0x55b961a9b688 'eindex' 'int'
|-CXXMethodDecl 0x55b961a9b8e0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55b961a9b818 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55b961a9b9b0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55b961a9ba78 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55b961a9bb18 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55b961a9bd68 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55b961a9bbe0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55b961a9bc60 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55b961a9be18 <col:20>
| `-OptimizeNoneAttr 0x55b961a9be70 <col:30>
|-CXXMethodDecl 0x55b961a9bf78 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55b961a9beb0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55b961a9c020 <col:20>
| `-OptimizeNoneAttr 0x55b961a9c078 <col:30>
|-CXXMethodDecl 0x55b961a9c148 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55b961a9c0b8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55b961a9c1f0 <col:20>
| `-OptimizeNoneAttr 0x55b961a9c248 <col:30>
|-CXXMethodDecl 0x55b961a9c3d8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55b961a9c280 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55b961a9c300 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55b961a9c568 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55b961a9c4a0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55b961a9c6b8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55b961a9c628 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55b961a9c808 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55b961a9c778 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55b961a9c958 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55b961a9c8c8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55b961a9cc18 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55b961a9ca10 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55b961a9ca90 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55b961a9cb38 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55b961a9ccf0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55b961a9cdb0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55b961a9d080 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55b961a9cf30 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55b961a9cfa8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55b961a9d1a8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55b961a9d380 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55b961a9d260 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55b961a9d2e0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55b961a9d568 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55b961a9d448 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55b961a9d4c8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55b961a9d8d8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55b961a9d628 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55b961a9d6a0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55b961a9d720 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55b961aa8690 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55b961aa8670 <col:106> 'int' 0
| `-ParmVarDecl 0x55b961a9d798 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b961aa86c8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b961aa86a8 <col:126> 'int' 0
|-CXXMethodDecl 0x55b961a9dc78 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55b961a9d9a8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55b961a9da40 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55b961a9dac0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55b961a9db38 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b961aa8700 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b961aa86e0 <col:114> 'int' 0
|-CXXMethodDecl 0x55b961a9e008 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55b961a9dd50 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55b961a9ddc8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55b961a9de48 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55b961aa8718 <col:96> 'int' 0
| `-ParmVarDecl 0x55b961a9dec0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b961aa8758 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b961aa8738 <col:116> 'int' 0
|-CXXMethodDecl 0x55b961a9e388 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55b961a9e0d8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55b961a9e150 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55b961a9e1d0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55b961aa8790 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55b961aa8770 <col:109> 'int' 0
| `-ParmVarDecl 0x55b961a9e248 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b961aa87c8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b961aa87a8 <col:129> 'int' 0
|-CXXMethodDecl 0x55b961a9e708 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55b961a9e458 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55b961a9e4d0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55b961a9e550 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55b961a9e5c8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b961aa8800 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b961aa87e0 <col:117> 'int' 0
|-CXXMethodDecl 0x55b961a9ea98 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55b961a9e7e0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b961a9e858 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55b961a9e8d8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55b961aa8818 <col:99> 'int' 0
| `-ParmVarDecl 0x55b961a9e950 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55b961aa8858 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55b961aa8838 <col:119> 'int' 0
|-CXXMethodDecl 0x55b961a9eeb8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55b961a9eb68 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55b961a9ebe8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55b961a9ec60 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55b961a9ece0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55b961aa8890 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55b961aa8870 <col:108> 'int' 0
| `-ParmVarDecl 0x55b961a9ed60 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55b961aa88c8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55b961aa88a8 <col:141> 'int' 0
|-CXXMethodDecl 0x55b961a9f2d8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55b961a9ef90 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55b961a9f010 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55b961a9f088 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55b961a9f108 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55b961a9f188 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55b961aa88e0 <col:121> 'int' 0
|-CXXMethodDecl 0x55b961a9f708 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55b961a9f3b8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55b961a9f438 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55b961a9f4b0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55b961a9f530 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55b961aa8900 <col:98> 'int' 0
| `-ParmVarDecl 0x55b961a9f5b0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55b961aa8920 <col:123> 'int' 0
|-CXXMethodDecl 0x55b961a9f9d0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55b961a9f7e0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55b961a9f860 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55b961a9f8e0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55b961aa8940 <col:80> 'int' 0
|-EnumDecl 0x55b961a9fa88 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55b961a9fb90 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55b961a9fe20 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a9fb70 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55b961a9fb50 <col:42> 'int' 1
| |-EnumConstantDecl 0x55b961a9fc20 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55b961a9fe38 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a9fc00 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55b961a9fbe0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55b961a9fcb0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55b961a9fe50 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a9fc90 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55b961a9fc70 <col:44> 'int' 4
| |-EnumConstantDecl 0x55b961a9fd40 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55b961a9fe68 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a9fd20 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55b961a9fd00 <col:36> 'int' 7
| `-EnumConstantDecl 0x55b961a9fdd0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55b961a9fe80 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b961a9fdb0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55b961a9fd90 <col:34> 'int' 6
|-CXXMethodDecl 0x55b961aa0138 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55b961a9fea8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55b961a9ff48 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55b961a9ffc8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55b961aa0040 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55b961aa89f8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55b961aa89e0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55b961aa89c8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55b961aa89a8 <col:98, col:105> 'String' (CXXTemporary 0x55b961aa89a8)
|           `-CXXTemporaryObjectExpr 0x55b961aa8970 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55b961aa03d8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55b961aa0208 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55b961aa0280 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55b961aa02f8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55b961aa8aa8 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55b961aa8a90 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55b961aa8a78 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55b961aa8a58 <col:94, col:101> 'String' (CXXTemporary 0x55b961aa8a58)
| |         `-CXXTemporaryObjectExpr 0x55b961aa8a20 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55b961aa9290 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55b961aa9208 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55b961aa91d8 <col:9> '<bound member function type>' ->add_task_handlers 0x55b961aa0138
|     | `-CXXThisExpr 0x55b961aa91c8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55b961aa9248 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55b961aa9148 <col:27> 'Task *' lvalue ParmVar 0x55b961aa0208 'task' 'Task *'
|     |-ImplicitCastExpr 0x55b961aa9260 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55b961aa9168 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55b961aa0280 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55b961aa9278 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55b961aa9188 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55b961a9fdd0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55b961aa91a8 <col:62> 'const String' lvalue ParmVar 0x55b961aa02f8 'prefix' 'const String &'
|-CXXMethodDecl 0x55b961aa05e8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55b961aa04a0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55b961aa0518 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55b961aa8b58 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55b961aa8b40 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55b961aa8b28 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55b961aa8b08 <col:70, col:77> 'String' (CXXTemporary 0x55b961aa8b08)
| |         `-CXXTemporaryObjectExpr 0x55b961aa8ad0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55b961aa9468 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55b961aa93e0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55b961aa93b0 <col:9> '<bound member function type>' ->add_task_handlers 0x55b961aa0138
|     | `-CXXThisExpr 0x55b961aa93a0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55b961aa9420 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55b961aa9320 <col:27> 'Task *' lvalue ParmVar 0x55b961aa04a0 'task' 'Task *'
|     |-ImplicitCastExpr 0x55b961aa9438 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55b961aa9340 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55b961aa9450 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55b961aa9360 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55b961a9fdd0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55b961aa9380 <col:57> 'const String' lvalue ParmVar 0x55b961aa0518 'prefix' 'const String &'
|-CXXMethodDecl 0x55b961aa08c8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55b961aa06b0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b961aa0730 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b961aa07a8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55b961aa0b78 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55b961aa0998 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b961aa0a18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b961aa0a98 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55b961aa0e68 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55b961aa0c48 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b961aa0cc8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b961aa0d40 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55b961aa1118 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55b961aa0f38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b961aa0fb8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b961aa1038 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55b961aa13c8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55b961aa11e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b961aa1268 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b961aa12e8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55b961aa1678 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55b961aa1498 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b961aa1518 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b961aa1590 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55b961aa1928 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55b961aa1748 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b961aa17c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b961aa1848 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55b961aa1c38 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55b961aa1a50 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b961aa1ad0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b961aa1b50 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55b961aa1f18 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55b961aa1d08 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b961aa1d88 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b961aa1e30 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55b961aa21f8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55b961aa1fe8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b961aa2068 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b961aa2110 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55b961aa2460 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55b961aa22c8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55b961aa2348 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55b961aa23c0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55b961aa2708 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55b961aa2530 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55b961aa25b0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55b961aa2628 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55b961aa29b8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55b961aa27d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b961aa2858 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b961aa28d8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55b961aa2c68 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55b961aa2a88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b961aa2b08 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b961aa2b80 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55b961aa2f18 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55b961aa2d38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b961aa2db8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b961aa2e30 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55b961aa31e8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55b961aa2fe8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b961aa3068 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55b961aa3108 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55b961aa3518 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55b961aa32b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55b961aa3338 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55b961aa33b0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55b961aa3428 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55b961aa8b70 <col:93> 'bool' false
|-CXXMethodDecl 0x55b961aa3700 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55b961aa35e8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55b961aa3668 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55b961aa38d8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55b961aa37c0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55b961aa3840 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55b961aa3bb8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55b961aa3998 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55b961aa3a10 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55b961aa3a90 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55b961aa3b08 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55b961aa3ea8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55b961aa3c88 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55b961aa3d00 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55b961aa3d80 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55b961aa3df8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55b961aa40e0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55b961aa3f80 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55b961aa4000 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55b961aa42c8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55b961aa41a8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55b961aa4228 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55b961aa4378 prev 0x55b961a9bb18 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55b961aa4470 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55b961aa4500 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55b961aa4578 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55b961aa4638 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55b961aa4700 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55b961aa4878 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55b961aa47b0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55b961aa4920 <col:24>
| | `-OptimizeNoneAttr 0x55b961aa4978 <col:34>
| |-CXXMethodDecl 0x55b961aa49c0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55b961aa4c78 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55b961aa4a70 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55b961aa4ae8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55b961aa4b68 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55b961aa4d30 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55b961aa4d68 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55b961aa4dd0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55b961aa4e58 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55b961aa5178 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55b961aa4f10 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55b961aa4f88 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55b961aa5000 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55b961aa5080 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55b961aa5290 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55b961aacc08 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55b961aacc08
| | `-ParmVarDecl 0x55b961aacd18 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55b961aacdb8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55b961aacdb8
| | `-ParmVarDecl 0x55b961aacec8 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55b961acff80 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55b961aa5308 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55b961aa53a8 <col:38> "" ""
|-CXXMethodDecl 0x55b961aa5438 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55b961aa54d8 <col:44> "" ""
|-AccessSpecDecl 0x55b961aa5548 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55b961aa5570 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55b961aa5670 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55b961aa56c0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b961aa5650 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55b961aa5630 <col:27> 'int' 4
|-FieldDecl 0x55b961aa5778 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55b961aa5928 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55b961aa59e0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55b961aa6a70 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55b961aa6ad8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55b961aa6c28 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55b961aa6b68 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55b961aa6dd8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55b961aa6ce8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55b961aa6fb8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55b961aa6e98 <col:20> col:23 'int'
| `-ParmVarDecl 0x55b961aa6f18 <col:25> col:28 'int'
|-CXXMethodDecl 0x55b961aa7260 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55b961aa7080 <col:23> col:26 'int'
| |-ParmVarDecl 0x55b961aa7100 <col:28> col:31 'int'
| `-ParmVarDecl 0x55b961aa7178 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55b961aa7318 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55b961aa73e0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55b961aa7430 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55b961aa7480 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55b961aa7660 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55b961aa7510 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55b961aa7588 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55b961aa7908 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55b961aa7728 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55b961aa77a8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55b961aa7820 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55b961aa7b28 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55b961aa79d8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55b961aa7a58 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55b961aa7e60 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55b961aa7be8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55b961aa7c68 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55b961aa7ce0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55b961aa7d60 <col:57> col:60 'int'
|-CXXMethodDecl 0x55b961aa8048 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55b961aa7f30 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55b961aa7fb0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55b961aa8198 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55b961aa8108 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55b961aa8518 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55b961aa8258 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55b961aa82d8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55b961aa8350 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55b961aa83d0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55b961aa8630 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class TCPReflector
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b961aceab0 <../elements/local/tcpreflector.hh:30:1, line:41:1> line:30:7 class TCPReflector definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55b961acec08 <col:1, col:7> col:7 implicit referenced class TCPReflector
|-AccessSpecDecl 0x55b961acec98 <line:31:2, col:8> col:2 public
|-CXXConstructorDecl 0x55b961aced20 <line:33:3, col:16> col:3 TCPReflector 'void ()'
|-CXXDestructorDecl 0x55b961acee10 <line:34:3, col:17> col:3 ~TCPReflector 'void ()' noexcept-unevaluated 0x55b961acee10
| `-Overrides: [ 0x55b961a97668 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x55b961acef40 <line:36:3, col:59> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x55b961a98ac8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55b961acf6e8 <col:34, col:59>
|   `-ReturnStmt 0x55b961acf6d8 <col:36, col:43>
|     `-ImplicitCastExpr 0x55b961acf6c0 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55b961acf698 <col:43> 'const char [13]' lvalue "TCPReflector"
|-CXXMethodDecl 0x55b961acf008 <line:37:3, col:54> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x55b961a98b90 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55b961acf748 <col:34, col:54>
|   `-ReturnStmt 0x55b961acf738 <col:36, col:43>
|     `-ImplicitCastExpr 0x55b961acf720 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55b961acf700 <col:43> 'const char []' lvalue Var 0x55b961a98e40 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x55b961acf148 <line:39:3, col:33> col:11 simple_action 'Packet *(Packet *)'
| |-Overrides: [ 0x55b961a97ca8 Element::simple_action 'Packet *(Packet *)' ]
| `-ParmVarDecl 0x55b961acf0b8 <col:25, col:32> col:33 'Packet *'
|-CXXMethodDecl 0x55b961acf290 <line:40:3, col:31> col:11 tcp_input 'Packet *(Packet *)'
| `-ParmVarDecl 0x55b961acf200 <col:21, col:29> col:29 xp 'Packet *'
|-CXXConstructorDecl 0x55b961acf368 <line:30:7> col:7 implicit TCPReflector 'void (const TCPReflector &)' inline default_delete noexcept-unevaluated 0x55b961acf368
| `-ParmVarDecl 0x55b961acf478 <col:7> col:7 'const TCPReflector &'
`-CXXMethodDecl 0x55b961acf518 <col:7> col:7 implicit operator= 'TCPReflector &(const TCPReflector &)' inline default_delete noexcept-unevaluated 0x55b961acf518
  `-ParmVarDecl 0x55b961acf628 <col:7> col:7 'const TCPReflector &'

Layout: <CGRecordLayout
  LLVMType:%class.TCPReflector = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.TCPReflector.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_ip
     0:0-3 |   unsigned int ip_hl
     0:4-7 |   unsigned int ip_v
         1 |   uint8_t ip_tos
         2 |   uint16_t ip_len
         4 |   uint16_t ip_id
         6 |   uint16_t ip_off
         8 |   uint8_t ip_ttl
         9 |   uint8_t ip_p
        10 |   uint16_t ip_sum
        12 |   struct in_addr ip_src
        12 |     in_addr_t s_addr
        16 |   struct in_addr ip_dst
        16 |     in_addr_t s_addr
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | struct click_tcp
         0 |   uint16_t th_sport
         2 |   uint16_t th_dport
         4 |   tcp_seq_t th_seq
         8 |   tcp_seq_t th_ack
    12:0-3 |   unsigned int th_flags2
    12:4-7 |   unsigned int th_off
        13 |   uint8_t th_flags
        14 |   uint16_t th_win
        16 |   uint16_t th_sum
        18 |   uint16_t th_urp
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b961855e40 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b961855f58 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55b961855fe8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55b9618560b8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55b9618561a0 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55b9618563b8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55b961856260 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b961856568 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55b961856470 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55b9618566b0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55b961856620 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55b9618567f8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55b961856768 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b961856940 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55b9618568b0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b961856a08 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x55b961856b50 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x55b961856ac0 <col:28> col:31 'int'
|-CXXMethodDecl 0x55b961856c18 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x55b961856d60 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55b961856cd0 <col:28> col:31 'int'
|-CXXMethodDecl 0x55b961856ed8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55b961856e18 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b961857020 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55b961856f90 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9618570e8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55b9618572a8 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55b961857198 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55b961857210 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9618574f8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55b961857368 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b9618573e0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b9618575a8 <col:86> "" ""
|-CXXMethodDecl 0x55b961857818 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55b961857688 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55b961857700 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9618579c8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55b9618578d8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55b961857b78 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55b961857a80 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55b961857e48 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55b961857c30 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55b961857ca8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55b961857d20 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b961858128 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55b961857f10 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55b961857f88 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b961858000 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b9618581e0 <col:115> "" ""
|-AccessSpecDecl 0x55b961858250 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55b961858288 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b9618597a0 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55b9618597a0
| `-ParmVarDecl 0x55b9618598a8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55b961859948 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55b961859948
| `-ParmVarDecl 0x55b961859a58 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55b96188f088 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55b961a80e80 <col:7>
|-CXXConstructorDecl 0x55b96188f160 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55b96188f160
| `-ParmVarDecl 0x55b96188f278 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55b96188f2e8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55b96188f2e8
| `-ParmVarDecl 0x55b96188f3f8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55b961a83880 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b961a6fa28 prev 0x55b961a64c30 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b961a6fb20 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55b961a6fc10 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55b961a6fd38 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55b961a6feb8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55b961a70038 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55b961a701b8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55b961a80fe8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55b961a81858 <col:11>
|-CXXDestructorDecl 0x55b961a810c0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55b961a811f8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55b961a811f8
| `-ParmVarDecl 0x55b961a81308 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55b961a813a8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55b961a813a8
| `-ParmVarDecl 0x55b961a814b8 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55b961a84278 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b961a84388 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55b961a84608 <col:11>
|   `-ReturnStmt 0x55b961a845f8 <col:11>
|     `-UnaryOperator 0x55b961a845e0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b961a845d0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55b961a843f8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55b961a843f8
  `-ParmVarDecl 0x55b961a84508 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b961a70220 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b961a70338 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55b961a703d8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55b961a70440 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55b961a704a8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55b961a70510 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55b961a70570 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55b961a70630 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55b961a70690 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55b961a706f0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55b961a80ef8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55b961a703d8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55b961a81868 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55b961a818c0 <col:12>
|-CXXConstructorDecl 0x55b961a81528 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55b961a81528
| `-ParmVarDecl 0x55b961a81638 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55b961a816d8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55b961a816d8
| `-ParmVarDecl 0x55b961a817e8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55b961a83960 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b961a5e340 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b961a5e458 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55b961a5e4e8 <col:16, col:22> col:16 public
|-EnumDecl 0x55b961a5e510 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55b961a5e610 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55b961a5e6f0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a5e5f0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55b961a5e5d0 <col:21> 'int' 28
| `-EnumConstantDecl 0x55b961a5e6a0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55b961a5e708 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b961a5e680 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55b961a5e660 <col:22> 'int' 64
|-CXXMethodDecl 0x55b961a5ea48 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55b961a5e730 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b961a5e7b0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55b961a5e828 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b961a5e8a0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55b961a5eb08 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55b961a5ed08 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55b961a5eb80 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55b961a5ebf8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55b961a5edb8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55b961a5ef18 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55b961a5ee28 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55b961a5efc0 <col:72> warn_unused_result ""
|-TypedefDecl 0x55b961a5f320 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55b961a5f2b0 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55b961a5f250 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55b961a5f210 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55b9615372d0 'void'
|       |-PointerType 0x55b9617de6e0 'unsigned char *'
|       | `-BuiltinType 0x55b9615373d0 'unsigned char'
|       |-TypedefType 0x55b9615dac70 'size_t' sugar
|       | |-Typedef 0x55b9615a7b20 'size_t'
|       | `-BuiltinType 0x55b961537430 'unsigned long'
|       `-PointerType 0x55b961537ad0 'void *'
|         `-BuiltinType 0x55b9615372d0 'void'
|-CXXMethodDecl 0x55b961a5f798 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55b961a5f390 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55b961a5f408 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b961a5f4a0 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55b961a5f520 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55b961a79e90 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55b961a79e78 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55b961a79e40 <col:58> 'int' 0
| |-ParmVarDecl 0x55b961a5f5a0 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55b961a79eb8 <col:76> 'int' 0
| |-ParmVarDecl 0x55b961a5f620 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55b961a79ed8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55b961a5f868 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55b961a5f8e8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55b961a5f9a8 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55b961a5fa48 <col:20>
| `-OptimizeNoneAttr 0x55b961a5faa0 <col:30>
|-CXXMethodDecl 0x55b961a5fb18 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55b961a5fbb8 <col:20>
| `-OptimizeNoneAttr 0x55b961a5fc10 <col:30>
|-CXXMethodDecl 0x55b961a5fc88 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55b961a5fd28 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55b961a5fdd8 <line:77:5, col:102> col:56 used uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55b961a5fe78 <col:20>
| |-OptimizeNoneAttr 0x55b961a5fed0 <col:30>
| `-WarnUnusedResultAttr 0x55b961a5fef8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55b961a5ff50 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55b961a5fff0 <col:20>
| `-OptimizeNoneAttr 0x55b961a60048 <col:30>
|-CXXMethodDecl 0x55b961a60098 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55b961a60138 <col:20>
| `-OptimizeNoneAttr 0x55b961a60190 <col:30>
|-CXXMethodDecl 0x55b961a601d8 <line:81:5, col:58> col:49 used length 'uint32_t () const'
| |-NoInlineAttr 0x55b961a60278 <col:20>
| `-OptimizeNoneAttr 0x55b961a602d0 <col:30>
|-CXXMethodDecl 0x55b961a60318 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55b961a603d8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55b961a604a0 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55b961a60568 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55b961a60628 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55b961a60748 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55b961a79fa0 <col:54, line:99:5>
|   `-ReturnStmt 0x55b961a79f90 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55b961a79f78 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55b961a79f48 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55b961a70a28
|         `-CXXThisExpr 0x55b961a79f38 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55b961a608e8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55b961a607f8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55b961a7a050 <col:67, line:103:5>
|   `-BinaryOperator 0x55b961a7a030 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55b961a79fc8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55b961a70a28
|     | `-CXXThisExpr 0x55b961a79fb8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55b961a7a018 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55b961a79ff8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55b961a607f8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55b961a609e0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55b961a7a0d0 <col:33, line:107:5>
|   `-ReturnStmt 0x55b961a7a0c0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55b961a7a0a8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55b961a7a078 <col:16> 'void *' lvalue ->_destructor_argument 0x55b961a70a90
|         `-CXXThisExpr 0x55b961a7a068 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55b961a60aa0 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55b961a7a700 <col:25, line:113:5>
|   |-ParenExpr 0x55b961a7a448 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55b961a7a418 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55b961a7a188 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55b961a7a160 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55b961a7a128 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55b961a7a0f8 <col:24> '<bound member function type>' ->shared 0x55b961a5fb18
|   |   |       `-ImplicitCastExpr 0x55b961a7a148 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55b961a7a0e8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55b961a7a1e8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b961a7a1c8 <col:42> 'int' 0
|   |   `-CallExpr 0x55b961a7a378 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55b961a7a360 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b961a7a340 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9615d1a80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b961a7a3b8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961a7a258 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55b961a7a3d0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961a7a280 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b961a7a3e8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b961a7a2b8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55b961a7a400 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b961a7a328 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b961a7a310 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b961a7a2d8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55b961a7a648 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55b961a7a478 <col:2> 'unsigned char *' lvalue ->_head 0x55b961a70830
|   | | `-CXXThisExpr 0x55b961a7a468 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55b961a7a630 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55b961a7a610 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55b961a7a4b8 <col:10> 'unsigned char *' lvalue ->_data 0x55b961a70898
|   |     | `-CXXThisExpr 0x55b961a7a4a8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55b961a7a5f8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55b961a7a5d8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55b961a7a4f8 <col:18> 'unsigned char *' lvalue ->_tail 0x55b961a70900
|   |         | `-CXXThisExpr 0x55b961a7a4e8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55b961a7a5c0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55b961a7a5a0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55b961a7a538 <col:26> 'unsigned char *' lvalue ->_end 0x55b961a70968
|   |             | `-CXXThisExpr 0x55b961a7a528 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55b961a7a588 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55b961a7a568 <col:33> 'int' 0
|   `-BinaryOperator 0x55b961a7a6e0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55b961a7a678 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55b961a70a28
|     | `-CXXThisExpr 0x55b961a7a668 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55b961a7a6c8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55b961a7a6a8 <col:16> 'int' 0
|-CXXMethodDecl 0x55b961a60be0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55b961a60b50 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55b961a60c88 <col:20>
| |-OptimizeNoneAttr 0x55b961a60ce0 <col:30>
| `-WarnUnusedResultAttr 0x55b961a60d08 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55b961a60dd8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55b961a60d48 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55b961a60e80 <col:20>
| |-OptimizeNoneAttr 0x55b961a60ed8 <col:30>
| `-WarnUnusedResultAttr 0x55b961a60f00 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55b961a61038 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55b961a60f40 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55b961a610e0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55b961a611e0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55b961a61150 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55b961a61288 <col:20>
| `-OptimizeNoneAttr 0x55b961a612e0 <col:30>
|-CXXMethodDecl 0x55b961a613a8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55b961a61318 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55b961a61450 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55b961a61550 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55b961a614c0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55b961a615f8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55b961a616f8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55b961a61668 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55b961a617a0 <col:20>
| `-OptimizeNoneAttr 0x55b961a617f8 <col:30>
|-CXXMethodDecl 0x55b961a61988 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55b961a61838 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55b961a618b0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55b961a79ef8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55b961a61a38 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55b961a61c38 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55b961a61ab0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55b961a61b28 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b961a61e48 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55b961a61cf8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55b961a61d70 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b961a62058 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55b961a61f08 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55b961a61f88 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55b961a79f08 <col:39> 'int' 0
|-CXXMethodDecl 0x55b961a62128 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55b961a621f0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55b961a622b8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55b961a62378 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55b961a62440 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55b961a62588 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55b961a624f8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55b961a62758 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55b961a62648 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55b961a626c0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b961a62828 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55b961a628e8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55b961a62988 <col:20>
| `-OptimizeNoneAttr 0x55b961a629e0 <col:30>
|-CXXMethodDecl 0x55b961a62a30 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55b961a62ad0 <col:20>
| `-OptimizeNoneAttr 0x55b961a62b28 <col:30>
|-CXXMethodDecl 0x55b961a62b78 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55b961a62c38 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55b961a62d00 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55b961a62da0 <col:20>
| `-OptimizeNoneAttr 0x55b961a62df8 <col:30>
|-CXXMethodDecl 0x55b961a62f48 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55b961a62e38 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55b961a62eb0 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b961a63098 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55b961a63008 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b961a63170 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55b961a63230 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55b961a632d0 <col:20>
| `-OptimizeNoneAttr 0x55b961a63328 <col:30>
|-CXXMethodDecl 0x55b961a63378 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55b961a63418 <col:20>
| `-OptimizeNoneAttr 0x55b961a63470 <col:30>
|-CXXMethodDecl 0x55b961a634c0 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55b961a63588 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55b961a63628 <col:20>
| `-OptimizeNoneAttr 0x55b961a63680 <col:30>
|-CXXMethodDecl 0x55b961a636c8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55b961a637e8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55b961a63958 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55b961a63898 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55b961a63a48 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55b961a63ae8 <col:20>
| `-OptimizeNoneAttr 0x55b961a63b40 <col:30>
|-CXXMethodDecl 0x55b961a63b90 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55b961a63c50 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55b961a63e88 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55b961a63d00 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55b961a63d78 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55b961a63f38 <col:20>
| `-OptimizeNoneAttr 0x55b961a63f90 <col:30>
|-CXXMethodDecl 0x55b961a64038 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55b961a640d8 <col:20>
| `-OptimizeNoneAttr 0x55b961a64130 <col:30>
|-CXXMethodDecl 0x55b961a64180 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55b961a64220 <col:20>
| `-OptimizeNoneAttr 0x55b961a64278 <col:30>
|-CXXMethodDecl 0x55b961a642c0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55b961a64360 <col:20>
| `-OptimizeNoneAttr 0x55b961a643b8 <col:30>
|-CXXMethodDecl 0x55b961a644b8 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55b961a643f0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55b961a64560 <col:20>
| `-OptimizeNoneAttr 0x55b961a645b8 <col:30>
|-CXXMethodDecl 0x55b961a64778 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55b961a645f0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55b961a64668 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55b961a64828 <col:20>
| `-OptimizeNoneAttr 0x55b961a64880 <col:30>
|-CXXMethodDecl 0x55b961a64928 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55b961a64a48 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55b961a64b68 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55b961a64c08 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55b961a64c30 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55b961a64d58 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55b961a64df8 <col:20>
| `-OptimizeNoneAttr 0x55b961a64e50 <col:30>
|-CXXMethodDecl 0x55b961a64ef8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55b961a64f98 <col:20>
| `-OptimizeNoneAttr 0x55b961a64ff0 <col:30>
|-AccessSpecDecl 0x55b961a65018 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55b961a65040 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55b961a65140 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55b961a65190 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b961a65120 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55b961a65100 <col:14> 'int' 48
|-CXXMethodDecl 0x55b961a651f8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55b961a65298 <col:20>
| `-OptimizeNoneAttr 0x55b961a652f0 <col:30>
|-CXXMethodDecl 0x55b961a65368 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55b961a65408 <col:20>
| `-OptimizeNoneAttr 0x55b961a65460 <col:30>
|-CXXMethodDecl 0x55b961a65528 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55b961a65498 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55b961a656c8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55b961a65868 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55b961a65778 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55b961a65910 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55b961a65a10 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55b961a65dc0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a659f0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55b961a659d0 <col:9> 'int' 0
| |-EnumConstantDecl 0x55b961a65aa0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55b961a65dd8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a65a80 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55b961a65a60 <col:14> 'int' 1
| |-EnumConstantDecl 0x55b961a65b30 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55b961a65df0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a65b10 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55b961a65af0 <col:14> 'int' 2
| |-EnumConstantDecl 0x55b961a65bc0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55b961a65e08 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a65ba0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55b961a65b80 <col:14> 'int' 3
| |-EnumConstantDecl 0x55b961a65c50 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55b961a65e20 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a65c30 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55b961a65c10 <col:13> 'int' 4
| |-EnumConstantDecl 0x55b961a65ce0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55b961a65e38 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a65cc0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55b961a65ca0 <col:13> 'int' 5
| `-EnumConstantDecl 0x55b961a65d70 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55b961a65e50 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b961a65d50 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55b961a65d30 <col:14> 'int' 6
|-CXXMethodDecl 0x55b961a65eb8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55b961a65f58 <col:20>
| `-OptimizeNoneAttr 0x55b961a65fb0 <col:30>
|-CXXMethodDecl 0x55b961a660a8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55b961a65fe8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55b961a66150 <col:20>
| `-OptimizeNoneAttr 0x55b961a661a8 <col:30>
|-CXXMethodDecl 0x55b961a66218 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55b961a66340 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55b961a664b8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55b961a663f0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55b961a66580 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55b961a66648 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55b961a66788 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55b961a666f8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55b961a66830 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55b961a66930 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55b961a66b30 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a66910 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55b961a668f0 <col:23> 'int' 0
| |-EnumConstantDecl 0x55b961a669c0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55b961a66b48 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a669a0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55b961a66980 <col:45> 'int' 4
| |-EnumConstantDecl 0x55b961a66a50 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55b961a66b60 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a66a30 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55b961a66a10 <col:24> 'int' 0
| `-EnumConstantDecl 0x55b961a66ae0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55b961a66b78 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b961a66ac0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55b961a66aa0 <col:47> 'int' 16
|-CXXMethodDecl 0x55b961a66bd8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55b961a66d48 <line:436:5, col:75> col:45 used set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55b961a66c88 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55b961a66df0 <col:20>
| `-OptimizeNoneAttr 0x55b961a66e48 <col:30>
|-CXXMethodDecl 0x55b961a66e98 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55b961a7a820 <col:18, col:36>
|   `-ReturnStmt 0x55b961a7a810 <col:20, col:33>
|     `-ImplicitCastExpr 0x55b961a7a7f8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55b961a7a7d8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55b961a7a7a8 <col:27> '<bound member function type>' ->xanno 0x55b961a64ef8
|           `-CXXThisExpr 0x55b961a7a798 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55b961a66f90 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55b961a7a930 <col:30, col:48>
|   `-ReturnStmt 0x55b961a7a920 <col:32, col:45>
|     `-ImplicitCastExpr 0x55b961a7a908 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55b961a7a8e8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55b961a7a8b8 <col:39> '<bound member function type>' ->xanno 0x55b961a64d58
|           `-CXXThisExpr 0x55b961a7a8a8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55b961a67078 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55b961a7aac8 <col:24, col:50>
|   `-ReturnStmt 0x55b961a7aab8 <col:26, col:47>
|     `-UnaryOperator 0x55b961a7aaa0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55b961a7aa80 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55b961a7aa68 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55b961a7aa18 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55b961a6fd38
|         |   `-CXXMemberCallExpr 0x55b961a7a9f8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55b961a7a9c8 <col:34> '<bound member function type>' ->xanno 0x55b961a64ef8
|         |       `-CXXThisExpr 0x55b961a7a9b8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55b961a7aa48 <col:46> 'int' 0
|-CXXMethodDecl 0x55b961a67180 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55b961a7ac98 <col:36, col:62>
|   `-ReturnStmt 0x55b961a7ac88 <col:38, col:59>
|     `-UnaryOperator 0x55b961a7ac70 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55b961a7ac50 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55b961a7ac38 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55b961a7abb0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55b961a6fd38
|         |   `-CXXMemberCallExpr 0x55b961a7ab90 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55b961a7ab60 <col:46> '<bound member function type>' ->xanno 0x55b961a64d58
|         |       `-CXXThisExpr 0x55b961a7ab50 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55b961a7abe0 <col:58> 'int' 0
|-CXXMethodDecl 0x55b961a67298 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55b961a7ae30 <col:26, col:53>
|   `-ReturnStmt 0x55b961a7ae20 <col:28, col:50>
|     `-UnaryOperator 0x55b961a7ae08 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55b961a7ade8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55b961a7add0 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55b961a7ad80 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55b961a70038
|         |   `-CXXMemberCallExpr 0x55b961a7ad60 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55b961a7ad30 <col:36> '<bound member function type>' ->xanno 0x55b961a64ef8
|         |       `-CXXThisExpr 0x55b961a7ad20 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55b961a7adb0 <col:49> 'int' 0
|-CXXMethodDecl 0x55b961a673b8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55b961a7b008 <col:38, col:65>
|   `-ReturnStmt 0x55b961a7aff8 <col:40, col:62>
|     `-UnaryOperator 0x55b961a7afe0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55b961a7afc0 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55b961a7afa8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55b961a7af18 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55b961a70038
|         |   `-CXXMemberCallExpr 0x55b961a7aef8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55b961a7aec8 <col:48> '<bound member function type>' ->xanno 0x55b961a64d58
|         |       `-CXXThisExpr 0x55b961a7aeb8 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55b961a7af48 <col:61> 'int' 0
|-CXXMethodDecl 0x55b961a67568 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55b961a67470 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55b961a7b6d8 <col:34, line:463:5>
|   |-ParenExpr 0x55b961a7b520 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55b961a7b4f0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55b961a7b158 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b961a7b128 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b961a7b078 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b961a7b060 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b961a7b020 <col:23> 'int' lvalue ParmVar 0x55b961a67470 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b961a7b040 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b961a7b108 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b961a7b0d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b961a7b098 <col:33> 'int' lvalue ParmVar 0x55b961a67470 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55b961a7b0f0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55b961a7b0b8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b961a65140 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55b961a7b1b8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b961a7b198 <col:56> 'int' 0
|   |   `-CallExpr 0x55b961a7b450 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55b961a7b438 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b961a7b418 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9615d1a80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b961a7b490 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961a7b2a8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55b961a7b4a8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961a7b2d8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b961a7b4c0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b961a7b310 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55b961a7b4d8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b961a7b400 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b961a7b3e8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b961a7b3a8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55b961a7b6c8 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55b961a7b6b0 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55b961a7b690 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55b961a7b660 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55b961a7b610 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55b961a6fd38
|         |   `-CXXMemberCallExpr 0x55b961a7b5f0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55b961a7b5c0 <col:9> '<bound member function type>' ->xanno 0x55b961a64d58
|         |       `-CXXThisExpr 0x55b961a7b5b0 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55b961a7b678 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55b961a7b640 <col:21> 'int' lvalue ParmVar 0x55b961a67470 'i' 'int'
|-CXXMethodDecl 0x55b961a677b8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55b961a67628 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55b961a676a0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55b961a7bd68 <col:40, line:472:5>
|   |-ParenExpr 0x55b961a7bb80 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55b961a7bb50 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55b961a7b830 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b961a7b800 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b961a7b750 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b961a7b738 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b961a7b6f8 <col:23> 'int' lvalue ParmVar 0x55b961a67628 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b961a7b718 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b961a7b7e0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b961a7b7b0 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b961a7b770 <col:33> 'int' lvalue ParmVar 0x55b961a67628 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55b961a7b7c8 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55b961a7b790 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b961a65140 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55b961a7b890 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b961a7b870 <col:56> 'int' 0
|   |   `-CallExpr 0x55b961a7bab0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55b961a7ba98 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b961a7ba78 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9615d1a80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b961a7baf0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961a7b900 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55b961a7bb08 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961a7b930 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b961a7bb20 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b961a7b968 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55b961a7bb38 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b961a7ba60 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b961a7ba48 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b961a7ba08 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55b961a7bd48 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55b961a7bcf0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55b961a7bcc0 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55b961a7bc70 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55b961a6fd38
|     | |   `-CXXMemberCallExpr 0x55b961a7bc50 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55b961a7bc20 <col:2> '<bound member function type>' ->xanno 0x55b961a64ef8
|     | |       `-CXXThisExpr 0x55b961a7bc10 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55b961a7bcd8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55b961a7bca0 <col:14> 'int' lvalue ParmVar 0x55b961a67628 'i' 'int'
|     `-ImplicitCastExpr 0x55b961a7bd30 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55b961a7bd10 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55b961a676a0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55b961a67978 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55b961a67880 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55b961a7c4e8 <col:36, line:485:5>
|   |-ParenExpr 0x55b961a7c250 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b961a7c220 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b961a7bf00 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b961a7bed0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b961a7bde0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b961a7bdc8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b961a7bd88 <col:23> 'int' lvalue ParmVar 0x55b961a67880 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b961a7bda8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b961a7beb0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b961a7be98 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b961a7be00 <col:33> 'int' lvalue ParmVar 0x55b961a67880 'i' 'int'
|   |   |     `-BinaryOperator 0x55b961a7be78 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b961a7be60 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b961a7be20 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b961a65140 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b961a7be40 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55b961a7bf60 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b961a7bf40 <col:60> 'int' 0
|   |   `-CallExpr 0x55b961a7c180 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b961a7c168 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b961a7c148 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9615d1a80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b961a7c1c0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961a7bfd0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55b961a7c1d8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961a7c008 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b961a7c1f0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b961a7c040 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55b961a7c208 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b961a7c130 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b961a7c118 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b961a7c0d8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55b961a7c4d8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55b961a7c4c0 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55b961a7c4a8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55b961a7c478 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55b961a7c418 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55b961a7c3e8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b961a7c360 <col:61, col:70> 'char const[48]' lvalue ->c 0x55b961a6fc10
|             |   `-CXXMemberCallExpr 0x55b961a7c340 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55b961a7c310 <col:61> '<bound member function type>' ->xanno 0x55b961a64d58
|             |       `-CXXThisExpr 0x55b961a7c300 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55b961a7c400 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55b961a7c390 <col:74> 'int' lvalue ParmVar 0x55b961a67880 'i' 'int'
|-CXXMethodDecl 0x55b961a67bc8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55b961a67a38 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55b961a67ab0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55b961a7cc38 <col:42, line:500:5>
|   |-ParenExpr 0x55b961a7c9d0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b961a7c9a0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b961a7c680 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b961a7c650 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b961a7c560 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b961a7c548 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b961a7c508 <col:23> 'int' lvalue ParmVar 0x55b961a67a38 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b961a7c528 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b961a7c630 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b961a7c618 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b961a7c580 <col:33> 'int' lvalue ParmVar 0x55b961a67a38 'i' 'int'
|   |   |     `-BinaryOperator 0x55b961a7c5f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b961a7c5e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b961a7c5a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b961a65140 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b961a7c5c0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55b961a7c6e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b961a7c6c0 <col:60> 'int' 0
|   |   `-CallExpr 0x55b961a7c900 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b961a7c8e8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b961a7c8c8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9615d1a80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b961a7c940 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961a7c750 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55b961a7c958 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961a7c788 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b961a7c970 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b961a7c7c0 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55b961a7c988 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b961a7c8b0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b961a7c898 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b961a7c858 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55b961a7cc18 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55b961a7cbc8 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55b961a7cb98 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55b961a7cb40 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55b961a7cb10 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55b961a7cac0 <col:48, col:57> 'char [48]' lvalue ->c 0x55b961a6fc10
|     |     |   `-CXXMemberCallExpr 0x55b961a7caa0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55b961a7ca70 <col:48> '<bound member function type>' ->xanno 0x55b961a64ef8
|     |     |       `-CXXThisExpr 0x55b961a7ca60 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55b961a7cb28 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55b961a7caf0 <col:61> 'int' lvalue ParmVar 0x55b961a67a38 'i' 'int'
|     `-ImplicitCastExpr 0x55b961a7cc00 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55b961a7cbe0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55b961a67ab0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55b961a67d88 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55b961a67c90 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55b961a7d398 <col:35, line:513:5>
|   |-ParenExpr 0x55b961a7d0a8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b961a7d078 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b961a7cdd0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b961a7cda0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b961a7ccb0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b961a7cc98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b961a7cc58 <col:23> 'int' lvalue ParmVar 0x55b961a67c90 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b961a7cc78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b961a7cd80 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b961a7cd68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b961a7ccd0 <col:33> 'int' lvalue ParmVar 0x55b961a67c90 'i' 'int'
|   |   |     `-BinaryOperator 0x55b961a7cd48 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b961a7cd30 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b961a7ccf0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b961a65140 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b961a7cd10 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55b961a7ce30 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b961a7ce10 <col:60> 'int' 0
|   |   `-CallExpr 0x55b961a7cfd8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b961a7cfc0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b961a7cfa0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9615d1a80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b961a7d018 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961a7cea0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55b961a7d030 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961a7ced8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b961a7d048 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b961a7cf10 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55b961a7d060 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b961a7cf88 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b961a7cf70 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b961a7cf30 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55b961a7d388 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55b961a7d370 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55b961a7d358 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55b961a7d328 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55b961a7d2a0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55b961a7d270 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b961a7d220 <col:60, col:69> 'char const[48]' lvalue ->c 0x55b961a6fc10
|             |   `-CXXMemberCallExpr 0x55b961a7d200 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55b961a7d1d0 <col:60> '<bound member function type>' ->xanno 0x55b961a64d58
|             |       `-CXXThisExpr 0x55b961a7d1c0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55b961a7d288 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55b961a7d250 <col:73> 'int' lvalue ParmVar 0x55b961a67c90 'i' 'int'
|-CXXMethodDecl 0x55b961a67fd8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55b961a67e48 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55b961a67ec0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55b961a7dab8 <col:41, line:528:5>
|   |-ParenExpr 0x55b961a7d840 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b961a7d810 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b961a7d530 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b961a7d500 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b961a7d410 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b961a7d3f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b961a7d3b8 <col:23> 'int' lvalue ParmVar 0x55b961a67e48 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b961a7d3d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b961a7d4e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b961a7d4c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b961a7d430 <col:33> 'int' lvalue ParmVar 0x55b961a67e48 'i' 'int'
|   |   |     `-BinaryOperator 0x55b961a7d4a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b961a7d490 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b961a7d450 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b961a65140 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b961a7d470 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55b961a7d590 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b961a7d570 <col:60> 'int' 0
|   |   `-CallExpr 0x55b961a7d770 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b961a7d758 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b961a7d738 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9615d1a80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b961a7d7b0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961a7d600 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55b961a7d7c8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961a7d638 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b961a7d7e0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b961a7d670 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55b961a7d7f8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b961a7d720 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b961a7d708 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b961a7d6c8 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55b961a7da98 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55b961a7da48 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55b961a7da18 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55b961a7d9c0 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55b961a7d980 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55b961a7d930 <col:47, col:56> 'char [48]' lvalue ->c 0x55b961a6fc10
|     |     |   `-CXXMemberCallExpr 0x55b961a7d910 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55b961a7d8e0 <col:47> '<bound member function type>' ->xanno 0x55b961a64ef8
|     |     |       `-CXXThisExpr 0x55b961a7d8d0 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55b961a7d998 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55b961a7d960 <col:60> 'int' lvalue ParmVar 0x55b961a67e48 'i' 'int'
|     `-ImplicitCastExpr 0x55b961a7da80 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55b961a7da60 <col:65> 'int16_t':'short' lvalue ParmVar 0x55b961a67ec0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55b961a68198 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55b961a680a0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55b961a7e188 <col:36, line:541:5>
|   |-ParenExpr 0x55b961a7df28 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b961a7def8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b961a7dc50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b961a7dc20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b961a7db30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b961a7db18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b961a7dad8 <col:23> 'int' lvalue ParmVar 0x55b961a680a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b961a7daf8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b961a7dc00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b961a7dbe8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b961a7db50 <col:33> 'int' lvalue ParmVar 0x55b961a680a0 'i' 'int'
|   |   |     `-BinaryOperator 0x55b961a7dbc8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b961a7dbb0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b961a7db70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b961a65140 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b961a7db90 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55b961a7dcb0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b961a7dc90 <col:60> 'int' 0
|   |   `-CallExpr 0x55b961a7de58 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b961a7de40 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b961a7de20 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9615d1a80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b961a7de98 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961a7dd20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55b961a7deb0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961a7dd58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b961a7dec8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b961a7dd90 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55b961a7dee0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b961a7de08 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b961a7ddf0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b961a7ddb0 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55b961a7e178 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55b961a7e160 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55b961a7e148 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55b961a7e118 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55b961a7e0c0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55b961a7e090 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b961a7e040 <col:61, col:70> 'char const[48]' lvalue ->c 0x55b961a6fc10
|             |   `-CXXMemberCallExpr 0x55b961a7e020 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55b961a7dff0 <col:61> '<bound member function type>' ->xanno 0x55b961a64d58
|             |       `-CXXThisExpr 0x55b961a7dfe0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55b961a7e0a8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55b961a7e070 <col:74> 'int' lvalue ParmVar 0x55b961a680a0 'i' 'int'
|-CXXMethodDecl 0x55b961a68368 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55b961a68258 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55b961a682d0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55b961a68418 <col:20>
| `-OptimizeNoneAttr 0x55b961a68470 <col:30>
|-CXXMethodDecl 0x55b961a685a8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55b961a684b0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55b961a7e858 <col:35, line:562:5>
|   |-ParenExpr 0x55b961a7e5f8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b961a7e5c8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b961a7e320 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b961a7e2f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b961a7e200 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b961a7e1e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b961a7e1a8 <col:23> 'int' lvalue ParmVar 0x55b961a684b0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b961a7e1c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b961a7e2d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b961a7e2b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b961a7e220 <col:33> 'int' lvalue ParmVar 0x55b961a684b0 'i' 'int'
|   |   |     `-BinaryOperator 0x55b961a7e298 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b961a7e280 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b961a7e240 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b961a65140 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b961a7e260 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55b961a7e380 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b961a7e360 <col:60> 'int' 0
|   |   `-CallExpr 0x55b961a7e528 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b961a7e510 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b961a7e4f0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9615d1a80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b961a7e568 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961a7e3f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55b961a7e580 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961a7e428 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b961a7e598 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b961a7e460 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55b961a7e5b0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b961a7e4d8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b961a7e4c0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b961a7e480 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55b961a7e848 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55b961a7e830 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55b961a7e818 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55b961a7e7e8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55b961a7e790 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55b961a7e760 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b961a7e710 <col:60, col:69> 'char const[48]' lvalue ->c 0x55b961a6fc10
|             |   `-CXXMemberCallExpr 0x55b961a7e6f0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55b961a7e6c0 <col:60> '<bound member function type>' ->xanno 0x55b961a64d58
|             |       `-CXXThisExpr 0x55b961a7e6b0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55b961a7e778 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55b961a7e740 <col:73> 'int' lvalue ParmVar 0x55b961a684b0 'i' 'int'
|-CXXMethodDecl 0x55b961a687b8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55b961a68668 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55b961a686e0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55b961a7ef38 <col:41, line:577:5>
|   |-ParenExpr 0x55b961a7ecc8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b961a7ec98 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b961a7e9f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b961a7e9c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b961a7e8d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b961a7e8b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b961a7e878 <col:23> 'int' lvalue ParmVar 0x55b961a68668 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b961a7e898 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b961a7e9a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b961a7e988 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b961a7e8f0 <col:33> 'int' lvalue ParmVar 0x55b961a68668 'i' 'int'
|   |   |     `-BinaryOperator 0x55b961a7e968 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b961a7e950 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b961a7e910 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b961a65140 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b961a7e930 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55b961a7ea50 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b961a7ea30 <col:60> 'int' 0
|   |   `-CallExpr 0x55b961a7ebf8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b961a7ebe0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b961a7ebc0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9615d1a80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b961a7ec38 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961a7eac0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55b961a7ec50 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961a7eaf8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b961a7ec68 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b961a7eb30 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55b961a7ec80 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b961a7eba8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b961a7eb90 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b961a7eb50 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55b961a7ef18 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55b961a7eec8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55b961a7ee98 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55b961a7ee38 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55b961a7ee08 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55b961a7edb8 <col:47, col:56> 'char [48]' lvalue ->c 0x55b961a6fc10
|     |     |   `-CXXMemberCallExpr 0x55b961a7ed98 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55b961a7ed68 <col:47> '<bound member function type>' ->xanno 0x55b961a64ef8
|     |     |       `-CXXThisExpr 0x55b961a7ed58 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55b961a7ee20 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55b961a7ede8 <col:60> 'int' lvalue ParmVar 0x55b961a68668 'i' 'int'
|     `-ImplicitCastExpr 0x55b961a7ef00 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55b961a7eee0 <col:65> 'int32_t':'int' lvalue ParmVar 0x55b961a686e0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55b961a68978 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55b961a68880 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55b961a7f668 <col:36, line:591:5>
|   |-ParenExpr 0x55b961a7f3a8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b961a7f378 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b961a7f0d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b961a7f0a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b961a7efb0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b961a7ef98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b961a7ef58 <col:23> 'int' lvalue ParmVar 0x55b961a68880 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b961a7ef78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b961a7f080 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b961a7f068 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b961a7efd0 <col:33> 'int' lvalue ParmVar 0x55b961a68880 'i' 'int'
|   |   |     `-BinaryOperator 0x55b961a7f048 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b961a7f030 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b961a7eff0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b961a65140 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b961a7f010 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55b961a7f130 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b961a7f110 <col:60> 'int' 0
|   |   `-CallExpr 0x55b961a7f2d8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b961a7f2c0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b961a7f2a0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9615d1a80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b961a7f318 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961a7f1a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55b961a7f330 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961a7f1d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b961a7f348 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b961a7f210 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55b961a7f360 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b961a7f288 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b961a7f270 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b961a7f230 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55b961a7f658 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55b961a7f640 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55b961a7f628 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55b961a7f5f8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55b961a7f570 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55b961a7f540 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b961a7f4f0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55b961a6fc10
|             |   `-CXXMemberCallExpr 0x55b961a7f4d0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55b961a7f4a0 <col:61> '<bound member function type>' ->xanno 0x55b961a64d58
|             |       `-CXXThisExpr 0x55b961a7f490 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55b961a7f558 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55b961a7f520 <col:74> 'int' lvalue ParmVar 0x55b961a68880 'i' 'int'
|-CXXMethodDecl 0x55b961a68bc8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55b961a68a38 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55b961a68ab0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55b961a7fd48 <col:42, line:606:5>
|   |-ParenExpr 0x55b961a7fad8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55b961a7faa8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55b961a7f800 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b961a7f7d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b961a7f6e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b961a7f6c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b961a7f688 <col:23> 'int' lvalue ParmVar 0x55b961a68a38 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b961a7f6a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b961a7f7b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55b961a7f798 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b961a7f700 <col:33> 'int' lvalue ParmVar 0x55b961a68a38 'i' 'int'
|   |   |     `-BinaryOperator 0x55b961a7f778 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b961a7f760 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b961a7f720 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b961a65140 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55b961a7f740 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55b961a7f860 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b961a7f840 <col:60> 'int' 0
|   |   `-CallExpr 0x55b961a7fa08 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55b961a7f9f0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b961a7f9d0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9615d1a80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b961a7fa48 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961a7f8d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55b961a7fa60 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961a7f908 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b961a7fa78 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b961a7f940 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55b961a7fa90 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b961a7f9b8 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b961a7f9a0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b961a7f960 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55b961a7fd28 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55b961a7fcd8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55b961a7fca8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55b961a7fc48 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55b961a7fc18 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55b961a7fbc8 <col:48, col:57> 'char [48]' lvalue ->c 0x55b961a6fc10
|     |     |   `-CXXMemberCallExpr 0x55b961a7fba8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55b961a7fb78 <col:48> '<bound member function type>' ->xanno 0x55b961a64ef8
|     |     |       `-CXXThisExpr 0x55b961a7fb68 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55b961a7fc30 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55b961a7fbf8 <col:61> 'int' lvalue ParmVar 0x55b961a68a38 'i' 'int'
|     `-ImplicitCastExpr 0x55b961a7fd10 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55b961a7fcf0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55b961a68ab0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55b961a68d60 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55b961a68c90 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55b961a805b8 <col:33, line:620:5>
|   |-ParenExpr 0x55b961a80330 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55b961a80300 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55b961a7ff50 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b961a7ff20 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b961a7fdc0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b961a7fda8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b961a7fd68 <col:23> 'int' lvalue ParmVar 0x55b961a68c90 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b961a7fd88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b961a7ff00 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55b961a7fee8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b961a7fde0 <col:33> 'int' lvalue ParmVar 0x55b961a68c90 'i' 'int'
|   |   |     `-BinaryOperator 0x55b961a7fec8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b961a7feb0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b961a7fe00 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b961a65140 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55b961a7fe88 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55b961a7fe70 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55b961a7fe38 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55b961a7ffb0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b961a7ff90 <col:79> 'int' 0
|   |   `-CallExpr 0x55b961a80260 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55b961a80248 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b961a80228 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9615d1a80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b961a802a0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961a80098 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55b961a802b8 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961a800e0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b961a802d0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b961a80118 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55b961a802e8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b961a80210 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b961a801f8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b961a801b8 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55b961a805a8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55b961a80590 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55b961a80578 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55b961a80548 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55b961a804c0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55b961a80490 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55b961a80440 <col:67, col:76> 'char const[48]' lvalue ->c 0x55b961a6fc10
|             |   `-CXXMemberCallExpr 0x55b961a80420 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55b961a803f0 <col:67> '<bound member function type>' ->xanno 0x55b961a64d58
|             |       `-CXXThisExpr 0x55b961a803e0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55b961a804a8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55b961a80470 <col:80> 'int' lvalue ParmVar 0x55b961a68c90 'i' 'int'
|-CXXMethodDecl 0x55b961a68f78 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55b961a68e20 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55b961a68ea0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55b961a80de0 <col:45, line:635:5>
|   |-ParenExpr 0x55b961a80b28 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55b961a80af8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55b961a807c0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55b961a80790 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55b961a80630 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55b961a80618 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55b961a805d8 <col:23> 'int' lvalue ParmVar 0x55b961a68e20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55b961a805f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55b961a80770 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55b961a80758 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55b961a80650 <col:33> 'int' lvalue ParmVar 0x55b961a68e20 'i' 'int'
|   |   |     `-BinaryOperator 0x55b961a80738 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55b961a80720 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55b961a80670 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55b961a65140 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55b961a806f8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55b961a806e0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55b961a806a8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55b961a80820 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55b961a80800 <col:79> 'int' 0
|   |   `-CallExpr 0x55b961a80a58 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55b961a80a40 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b961a80a20 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9615d1a80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55b961a80a98 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961a80890 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55b961a80ab0 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55b961a808d8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55b961a80ac8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55b961a80910 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55b961a80ae0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55b961a80a08 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55b961a809f0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55b961a809a8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55b961a80dc0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55b961a80d28 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55b961a80cf8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55b961a80c98 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55b961a80c68 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55b961a80c18 <col:54, col:63> 'char [48]' lvalue ->c 0x55b961a6fc10
|     |     |   `-CXXMemberCallExpr 0x55b961a80bf8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55b961a80bc8 <col:54> '<bound member function type>' ->xanno 0x55b961a64ef8
|     |     |       `-CXXThisExpr 0x55b961a80bb8 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55b961a80c80 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55b961a80c48 <col:67> 'int' lvalue ParmVar 0x55b961a68e20 'i' 'int'
|     `-CXXConstCastExpr 0x55b961a80d90 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55b961a80d78 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55b961a80d40 <col:91> 'const void *' lvalue ParmVar 0x55b961a68ea0 'x' 'const void *'
|-CXXMethodDecl 0x55b961a69048 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55b961a80e68 <col:34, line:640:5>
|   `-ReturnStmt 0x55b961a80e58 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55b961a80e40 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55b961a80e10 <col:16> 'Packet *' lvalue ->_data_packet 0x55b961a707c8
|         `-CXXThisExpr 0x55b961a80e00 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55b961a69188 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55b961a690f8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55b961a79f28 <col:46> 'bool' true
|-CXXMethodDecl 0x55b961a69308 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55b961a69240 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55b961a693b0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55b961a69b60 <line:660:22> "" ""
| |-EnumConstantDecl 0x55b961a694b0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b961a69bd0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a69490 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55b961a69470 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55b961a5e610 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55b961a69540 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b961a69be8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a69520 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55b961a69500 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55b961a5e6a0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55b961a695d0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b961a69c00 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a695b0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55b961a69590 <col:21> 'int' 0
| |-EnumConstantDecl 0x55b961a69660 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b961a69c18 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a69640 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55b961a69620 <col:19> 'int' 16
| |-EnumConstantDecl 0x55b961a696f0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b961a69c30 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a696d0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55b961a696b0 <col:21> 'int' 16
| |-EnumConstantDecl 0x55b961a69780 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b961a69c48 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a69760 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55b961a69740 <col:19> 'int' 32
| |-EnumConstantDecl 0x55b961a69810 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b961a69c60 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a697f0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55b961a697d0 <col:19> 'int' EnumConstant 0x55b961a69660 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55b961a698a0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b961a69c78 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a69880 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55b961a69860 <col:19> 'int' EnumConstant 0x55b961a69780 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55b961a69970 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b961a69c90 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a69950 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55b961a69930 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55b961a698f0 <col:23> 'int' EnumConstant 0x55b961a698a0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55b961a69910 <col:40> 'int' 2
| |-EnumConstantDecl 0x55b961a69a40 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55b961a69ca8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a69a20 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55b961a69a00 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55b961a699c0 <col:23> 'int' EnumConstant 0x55b961a698a0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55b961a699e0 <col:40> 'int' 4
| `-EnumConstantDecl 0x55b961a69b10 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55b961a69cc0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b961a69af0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55b961a69ad0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55b961a69a90 <col:23> 'int' EnumConstant 0x55b961a698a0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55b961a69ab0 <col:40> 'int' 8
|-CXXMethodDecl 0x55b961a69d00 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55b961a69da0 <col:68> "" ""
|-CXXMethodDecl 0x55b961a69e38 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55b961a69ed8 <col:45> "" ""
|-CXXMethodDecl 0x55b961a69f70 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55b961a6a010 <col:57> "" ""
|-CXXMethodDecl 0x55b961a6a0a8 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55b961a6a148 <col:45> "" ""
|-CXXMethodDecl 0x55b961a6a1e0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55b961a6a280 <col:57> "" ""
|-CXXMethodDecl 0x55b961a6a310 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55b961a6a3b0 <col:51> "" ""
|-CXXMethodDecl 0x55b961a6a440 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55b961a6a4e0 <col:63> "" ""
|-CXXMethodDecl 0x55b961a6a570 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55b961a6a610 <col:53> "" ""
|-CXXMethodDecl 0x55b961a6a6a0 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55b961a6a740 <col:65> "" ""
|-CXXMethodDecl 0x55b961a6a858 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55b961a6a7c8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55b961a6a900 <col:61> "" ""
|-CXXMethodDecl 0x55b961a6aa98 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55b961a6a988 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55b961a6aa00 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55b961a6ab48 <col:67> "" ""
|-CXXMethodDecl 0x55b961a6ac60 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55b961a6abd0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55b961a6ad08 <col:63> "" ""
|-CXXMethodDecl 0x55b961a6aea0 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55b961a6ad90 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55b961a6ae08 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55b961a6af50 <col:69> "" ""
|-CXXMethodDecl 0x55b961a6b068 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55b961a6afd8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55b961a6b110 <col:63> "" ""
|-CXXMethodDecl 0x55b961a6d7e8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55b961a6d6d8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55b961a6d750 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b961a6d898 <col:69> "" ""
|-CXXMethodDecl 0x55b961a6d9b0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55b961a6d920 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55b961a6da58 <col:62> "" ""
|-CXXMethodDecl 0x55b961a6dbf0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55b961a6dae0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55b961a6db58 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55b961a6dca0 <col:68> "" ""
|-CXXMethodDecl 0x55b961a6ddb8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55b961a6dd28 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55b961a6de60 <col:63> "" ""
|-CXXMethodDecl 0x55b961a6dff8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55b961a6dee8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55b961a6df60 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55b961a6e0a8 <col:69> "" ""
|-CXXMethodDecl 0x55b961a6e138 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55b961a6e1d8 <col:64> "" ""
|-CXXMethodDecl 0x55b961a6e268 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55b961a6e308 <col:52> "" ""
|-CXXMethodDecl 0x55b961a6e398 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55b961a6e438 <col:67> "" ""
|-CXXMethodDecl 0x55b961a6e4c8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55b961a6e568 <col:55> "" ""
|-CXXMethodDecl 0x55b961a6e680 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55b961a6e5f0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55b961a6e728 <col:58> "" ""
|-CXXMethodDecl 0x55b961a6e8c0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55b961a6e7b0 <col:33> col:36 'int'
| |-ParmVarDecl 0x55b961a6e828 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55b961a6e970 <col:62> "" ""
|-CXXMethodDecl 0x55b961a6ea88 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55b961a6e9f8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55b961a6eb30 <col:58> "" ""
|-CXXMethodDecl 0x55b961a6ecc8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55b961a6ebb8 <col:33> col:36 'int'
| |-ParmVarDecl 0x55b961a6ec30 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55b961a6ed78 <col:62> "" ""
|-CXXMethodDecl 0x55b961a6ee90 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55b961a6ee00 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55b961a6ef38 <col:60> "" ""
|-CXXMethodDecl 0x55b961a6f0d0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55b961a6efc0 <col:34> col:37 'int'
| |-ParmVarDecl 0x55b961a6f038 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55b961a6f180 <col:64> "" ""
|-CXXMethodDecl 0x55b961a6f298 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55b961a6f208 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55b961a6f340 <col:58> "" ""
|-CXXMethodDecl 0x55b961a6f4d8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55b961a6f3c8 <col:33> col:36 'int'
| |-ParmVarDecl 0x55b961a6f440 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55b961a6f588 <col:62> "" ""
|-CXXMethodDecl 0x55b961a6f6a0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55b961a6f610 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55b961a6f748 <col:59> "" ""
|-CXXMethodDecl 0x55b961a6f8e0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55b961a6f7d0 <col:33> col:36 'int'
| |-ParmVarDecl 0x55b961a6f848 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b961a6f990 <col:63> "" ""
|-AccessSpecDecl 0x55b961a6fa00 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55b961a6fa28 prev 0x55b961a64c30 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55b961a6fb20 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55b961a6fc10 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55b961a6fd38 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55b961a6feb8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55b961a70038 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55b961a701b8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55b961a80fe8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55b961a81858 <col:11>
| |-CXXDestructorDecl 0x55b961a810c0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55b961a811f8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55b961a811f8
| | `-ParmVarDecl 0x55b961a81308 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55b961a813a8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55b961a813a8
| | `-ParmVarDecl 0x55b961a814b8 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55b961a84278 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55b961a84388 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55b961a84608 <col:11>
| |   `-ReturnStmt 0x55b961a845f8 <col:11>
| |     `-UnaryOperator 0x55b961a845e0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55b961a845d0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55b961a843f8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55b961a843f8
|   `-ParmVarDecl 0x55b961a84508 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55b961a70220 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55b961a70338 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55b961a703d8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55b961a70440 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55b961a704a8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55b961a70510 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55b961a70570 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55b961a70630 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55b961a70690 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55b961a706f0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55b961a80ef8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55b961a703d8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55b961a81868 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55b961a818c0 <col:12>
| |-CXXConstructorDecl 0x55b961a81528 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55b961a81528
| | `-ParmVarDecl 0x55b961a81638 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55b961a816d8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55b961a816d8
| | `-ParmVarDecl 0x55b961a817e8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55b961a83960 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55b961a70768 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55b961a707c8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55b961a70830 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55b961a70898 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55b961a70900 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55b961a70968 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55b961a709c8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55b961a70a28 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55b961a70a90 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55b961a70b18 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55b961a70768 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55b961a80e90 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55b961a709c8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55b961a818d0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55b961a81930 <col:21, line:755:5>
|-CXXConstructorDecl 0x55b961a70cb8 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55b961a70bf8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55b961a70db0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55b961a70f98 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55b961a70ea0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55b961a71268 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55b961a71050 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b961a710c8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55b961a71140 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b961a71488 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55b961a71338 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55b961a713b0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55b961a79a68 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55b961a71548 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55b961a715c0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55b961a71638 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55b961a79bc0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55b961a79b30 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b961a79d08 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55b961a79c78 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55b961a79e00 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class WritablePacket
         0 |   class Packet (base)
         0 |     class atomic_uint32_t _use_count
         0 |       uint32_t _val
         8 |     class Packet * _data_packet
        16 |     unsigned char * _head
        24 |     unsigned char * _data
        32 |     unsigned char * _tail
        40 |     unsigned char * _end
        48 |     struct Packet::AllAnno _aa
        48 |       union Packet::Anno cb
        48 |         char [48] c
        48 |         uint8_t [48] u8
        48 |         uint16_t [24] u16
        48 |         uint32_t [12] u32
        48 |         uint64_t [6] u64
        96 |       unsigned char * mac
       104 |       unsigned char * nh
       112 |       unsigned char * h
       120 |       enum Packet::PacketType pkt_type
       124 |       char [8] timestamp
       136 |       class Packet * next
       144 |       class Packet * prev
       152 |     Packet::buffer_destructor_type _destructor
       160 |     void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b961a819d0 prev 0x55b961a5e290 <../dummy_inc/click/packet.hh:778:1, line:816:1> line:778:7 referenced class WritablePacket definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Packet'
|-CXXRecordDecl 0x55b961a81b08 <col:1, col:7> col:7 implicit referenced class WritablePacket
|-AccessSpecDecl 0x55b961a81b98 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x55b961a81c40 <line:780:5, col:62> col:55 used data 'unsigned char *() const'
| |-NoInlineAttr 0x55b961a81ce0 <col:20>
| `-OptimizeNoneAttr 0x55b961a81d38 <col:30>
|-CXXMethodDecl 0x55b961a81d88 <line:781:5, col:66> col:55 end_data 'unsigned char *() const'
| |-NoInlineAttr 0x55b961a81e28 <col:20>
| `-OptimizeNoneAttr 0x55b961a81e80 <col:30>
|-CXXMethodDecl 0x55b961a81ed0 <line:782:5, col:36> col:27 buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x55b961a81f98 <line:783:5, col:40> col:27 end_buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x55b961a82060 <line:784:5, col:40> col:27 mac_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x55b961a82178 <line:785:5, col:40> col:25 ether_header 'click_ether *() const' inline
|-CXXMethodDecl 0x55b961a82240 <line:786:5, col:72> col:55 network_header 'unsigned char *() const'
| |-NoInlineAttr 0x55b961a822e0 <col:20>
| `-OptimizeNoneAttr 0x55b961a82338 <col:30>
|-CXXMethodDecl 0x55b961a823a8 <line:787:5, col:62> col:50 ip_header 'click_ip *() const'
| |-NoInlineAttr 0x55b961a82448 <col:20>
| `-OptimizeNoneAttr 0x55b961a824a0 <col:30>
|-CXXMethodDecl 0x55b961a82548 <line:788:5, col:64> col:51 ip6_header 'click_ip6 *() const'
| |-NoInlineAttr 0x55b961a825e8 <col:20>
| `-OptimizeNoneAttr 0x55b961a82640 <col:30>
|-CXXMethodDecl 0x55b961a82690 <line:789:5, col:46> col:27 transport_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x55b961a827a8 <line:790:5, col:38> col:24 icmp_header 'click_icmp *() const' inline
|-CXXMethodDecl 0x55b961a828c8 <line:791:5, col:36> col:23 tcp_header 'click_tcp *() const' inline
|-CXXMethodDecl 0x55b961a829e8 <line:792:5, col:36> col:23 udp_header 'click_udp *() const' inline
|-CXXMethodDecl 0x55b961a82ab0 <line:795:5, col:73> col:27 buffer_data 'unsigned char *() const' inline
| `-DeprecatedAttr 0x55b961a82b50 <col:62> "" ""
|-AccessSpecDecl 0x55b961a82bc0 <line:798:2, col:9> col:2 private
|-CXXConstructorDecl 0x55b961a82c20 <line:800:5, col:31> col:12 WritablePacket 'void ()' inline
| |-CXXCtorInitializer 'Packet'
| | `-CXXConstructExpr 0x55b961a83818 <col:12> 'Packet' 'void ()'
| `-CompoundStmt 0x55b961a83a40 <col:29, col:31>
|-CXXMethodDecl 0x55b961a82ce8 <line:802:5, col:28> col:17 initialize 'void ()' inline
|-CXXConstructorDecl 0x55b961a82e28 <line:804:5, col:35> col:5 WritablePacket 'void (const Packet &)'
| `-ParmVarDecl 0x55b961a82d98 <col:20, col:34> col:34 x 'const Packet &'
|-CXXDestructorDecl 0x55b961a82f20 <line:805:5, col:25> col:5 ~WritablePacket 'void () noexcept'
| `-CompoundStmt 0x55b961a83a50 <col:23, col:25>
|-CXXMethodDecl 0x55b961a830d8 <line:808:5, col:56> col:28 pool_allocate 'WritablePacket *(bool)' static
| `-ParmVarDecl 0x55b961a83010 <col:42, col:47> col:47 with_data 'bool'
|-CXXMethodDecl 0x55b961a833a8 <line:809:5, line:810:24> line:809:28 pool_allocate 'WritablePacket *(uint32_t, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55b961a83190 <col:42, col:51> col:51 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55b961a83208 <col:61, col:70> col:70 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55b961a83280 <line:810:7, col:16> col:16 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b961a83538 <line:811:5, col:42> col:17 recycle 'void (WritablePacket *)' static
| `-ParmVarDecl 0x55b961a83470 <col:25, col:41> col:41 p 'WritablePacket *'
|-FriendDecl 0x55b961a83630 <line:814:5, col:18> col:12 'class Packet':'Packet'
`-CXXConstructorDecl 0x55b961a83698 <line:778:7> col:7 implicit WritablePacket 'void (const WritablePacket &)' inline default noexcept-unevaluated 0x55b961a83698
  `-ParmVarDecl 0x55b961a837a8 <col:7> col:7 'const WritablePacket &'

Layout: <CGRecordLayout
  LLVMType:%class.WritablePacket = type { %class.Packet }
  NonVirtualBaseLLVMType:%class.WritablePacket = type { %class.Packet }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9617cbf68 </usr/include/netinet/in.h:31:1, line:34:3> line:31:8 struct in_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b9617cc088 <col:1, col:8> col:8 implicit struct in_addr
|-FieldDecl 0x55b9617cc150 <line:33:5, col:15> col:15 referenced s_addr 'in_addr_t':'unsigned int'
|-CXXConstructorDecl 0x55b96189c720 <line:31:8> col:8 implicit used in_addr 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55b9618a1a38 <col:8>
|-CXXConstructorDecl 0x55b96189c828 <col:8> col:8 implicit used constexpr in_addr 'void (const in_addr &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b96189c938 <col:8> col:8 used 'const in_addr &'
| |-CXXCtorInitializer Field 0x55b9617cc150 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x55b961adb5a0 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55b961adb570 <col:8> 'const in_addr_t':'const unsigned int' lvalue .s_addr 0x55b9617cc150
| |     `-DeclRefExpr 0x55b961adb550 <col:8> 'const in_addr' lvalue ParmVar 0x55b96189c938 '' 'const in_addr &'
| `-CompoundStmt 0x55b961adb5e8 <col:8>
|-CXXConstructorDecl 0x55b96189c9d8 <col:8> col:8 implicit used constexpr in_addr 'void (in_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55b96189cae8 <col:8> col:8 used 'in_addr &&'
| |-CXXCtorInitializer Field 0x55b9617cc150 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x55b9618a1c50 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55b9618a1c20 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x55b9617cc150
| |     `-CXXStaticCastExpr 0x55b9618a1bf0 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
| |       `-DeclRefExpr 0x55b9618a1bc0 <col:8> 'in_addr' lvalue ParmVar 0x55b96189cae8 '' 'in_addr &&'
| `-CompoundStmt 0x55b9618a1c98 <col:8>
|-CXXDestructorDecl 0x55b9618a1ed0 <col:8> col:8 implicit referenced ~in_addr 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55b961ad92d0 <col:8> col:8 implicit used constexpr operator= 'in_addr &(const in_addr &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b961ad93d8 <col:8> col:8 used 'const in_addr &'
| `-CompoundStmt 0x55b961ad9730 <col:8>
|   |-BinaryOperator 0x55b961ad96d8 <col:8> 'in_addr_t':'unsigned int' lvalue '='
|   | |-MemberExpr 0x55b961ad9690 <col:8> 'in_addr_t':'unsigned int' lvalue ->s_addr 0x55b9617cc150
|   | | `-CXXThisExpr 0x55b961ad9680 <col:8> 'in_addr *' this
|   | `-ImplicitCastExpr 0x55b961ad96c0 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
|   |   `-MemberExpr 0x55b961ad9650 <col:8> 'const in_addr_t':'const unsigned int' lvalue .s_addr 0x55b9617cc150
|   |     `-DeclRefExpr 0x55b961ad9630 <col:8> 'const in_addr' lvalue ParmVar 0x55b961ad93d8 '' 'const in_addr &'
|   `-ReturnStmt 0x55b961ad9720 <col:8>
|     `-UnaryOperator 0x55b961ad9708 <col:8> 'in_addr' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b961ad96f8 <col:8> 'in_addr *' this
`-CXXMethodDecl 0x55b961ad9448 <col:8> col:8 implicit constexpr operator= 'in_addr &(in_addr &&)' inline default trivial noexcept-unevaluated 0x55b961ad9448
  `-ParmVarDecl 0x55b961ad9558 <col:8> col:8 'in_addr &&'

Layout: <CGRecordLayout
  LLVMType:%struct.in_addr = type { i32 }
  NonVirtualBaseLLVMType:%struct.in_addr = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b961895418 <../dummy_inc/clicknet/ip.h:23:1, line:52:1> line:23:8 struct click_ip definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55b961895538 <col:1, col:8> col:8 implicit struct click_ip
|-FieldDecl 0x55b961895620 <line:28:5, col:22> col:14 referenced ip_hl 'unsigned int'
| `-ConstantExpr 0x55b961895600 <col:22> 'int' Int: 4
|   `-IntegerLiteral 0x55b9618955c8 <col:22> 'int' 4
|-FieldDecl 0x55b9618956c8 <line:29:5, col:21> col:14 ip_v 'unsigned int'
| `-ConstantExpr 0x55b9618956a8 <col:21> 'int' Int: 4
|   `-IntegerLiteral 0x55b961895670 <col:21> 'int' 4
|-FieldDecl 0x55b961895728 <line:33:5, col:13> col:13 ip_tos 'uint8_t':'unsigned char'
|-FieldDecl 0x55b961895788 <line:40:5, col:14> col:14 referenced ip_len 'uint16_t':'unsigned short'
|-FieldDecl 0x55b9618957e8 <line:41:5, col:14> col:14 ip_id 'uint16_t':'unsigned short'
|-FieldDecl 0x55b961895848 <line:42:5, col:14> col:14 ip_off 'uint16_t':'unsigned short'
|-FieldDecl 0x55b9618958a8 <line:47:5, col:13> col:13 referenced ip_ttl 'uint8_t':'unsigned char'
|-FieldDecl 0x55b961895908 <line:48:5, col:13> col:13 referenced ip_p 'uint8_t':'unsigned char'
|-FieldDecl 0x55b961895968 <line:49:5, col:14> col:14 referenced ip_sum 'uint16_t':'unsigned short'
|-FieldDecl 0x55b9618959d8 <line:50:5, col:20> col:20 referenced ip_src 'struct in_addr':'in_addr'
`-FieldDecl 0x55b961895a48 <line:51:5, col:20> col:20 referenced ip_dst 'struct in_addr':'in_addr'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  NonVirtualBaseLLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b961acf7c8 prev 0x55b961a5e080 <../dummy_inc/clicknet/tcp.h:24:1, line:51:1> line:24:8 referenced struct click_tcp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55b961acf8c0 <col:1, col:8> col:8 implicit struct click_tcp
|-FieldDecl 0x55b961acf960 <line:25:5, col:14> col:14 referenced th_sport 'uint16_t':'unsigned short'
|-FieldDecl 0x55b961acf9c0 <line:26:5, col:14> col:14 referenced th_dport 'uint16_t':'unsigned short'
|-FieldDecl 0x55b961acfa40 <line:27:5, col:15> col:15 referenced th_seq 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x55b961acfaa0 <line:28:5, col:15> col:15 referenced th_ack 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x55b961acfb48 <line:30:5, col:26> col:14 th_flags2 'unsigned int'
| `-ConstantExpr 0x55b961acfb28 <col:26> 'int' Int: 4
|   `-IntegerLiteral 0x55b961acfaf0 <col:26> 'int' 4
|-FieldDecl 0x55b961acfbf0 <line:31:5, col:23> col:14 referenced th_off 'unsigned int'
| `-ConstantExpr 0x55b961acfbd0 <col:23> 'int' Int: 4
|   `-IntegerLiteral 0x55b961acfb98 <col:23> 'int' 4
|-FieldDecl 0x55b961acfc50 <line:39:5, col:13> col:13 referenced th_flags 'uint8_t':'unsigned char'
|-FieldDecl 0x55b961acfcb0 <line:48:5, col:14> col:14 referenced th_win 'uint16_t':'unsigned short'
|-FieldDecl 0x55b961acfd10 <line:49:5, col:14> col:14 referenced th_sum 'uint16_t':'unsigned short'
`-FieldDecl 0x55b961acfd70 <line:50:5, col:14> col:14 th_urp 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b961898360 prev 0x55b9617fd398 <../dummy_inc/click/ipaddress.hh:15:1, line:154:1> line:15:7 referenced class IPAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b961898458 <col:1, col:7> col:7 implicit referenced class IPAddress
|-AccessSpecDecl 0x55b9618984e8 <col:19, col:25> col:19 public
|-TypedefDecl 0x55b961898520 <line:17:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x55b96168ac90 'uninitialized_type'
|   `-CXXRecord 0x55b96168abf8 'uninitialized_type'
|-CXXConstructorDecl 0x55b9618985e0 <line:20:5, line:22:5> line:20:12 IPAddress 'void ()' inline
| |-CXXCtorInitializer Field 0x55b96189bd30 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55b96189bdd8 <line:21:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55b96189bd98 <col:10> 'int' 0
| `-CompoundStmt 0x55b96189be20 <col:13, line:22:5>
|-CXXConstructorDecl 0x55b961898730 <line:25:5, line:27:5> line:25:12 used IPAddress 'void (unsigned int)' inline
| |-ParmVarDecl 0x55b9618986a0 <col:22, col:31> col:31 used x 'unsigned int'
| |-CXXCtorInitializer Field 0x55b96189bd30 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55b96189be70 <line:26:10> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x55b96189be30 <col:10> 'unsigned int' lvalue ParmVar 0x55b9618986a0 'x' 'unsigned int'
| `-CompoundStmt 0x55b96189beb8 <col:13, line:27:5>
|-CXXConstructorDecl 0x55b961898888 <line:29:5, line:31:5> line:29:21 IPAddress 'void (int)' inline
| |-ParmVarDecl 0x55b9618987f8 <col:31, col:35> col:35 used x 'int'
| |-CXXCtorInitializer Field 0x55b96189bd30 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55b96189bf20 <line:30:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55b96189bf08 <col:10> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x55b96189bec8 <col:10> 'int' lvalue ParmVar 0x55b9618987f8 'x' 'int'
| `-CompoundStmt 0x55b96189bf68 <col:13, line:31:5>
|-CXXConstructorDecl 0x55b9618989e0 <line:33:5, line:35:5> line:33:21 IPAddress 'void (unsigned long)' inline
| |-ParmVarDecl 0x55b961898950 <col:31, col:45> col:45 used x 'unsigned long'
| |-CXXCtorInitializer Field 0x55b96189bd30 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55b96189bfd0 <line:34:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55b96189bfb8 <col:10> 'unsigned long' <LValueToRValue>
| |     `-DeclRefExpr 0x55b96189bf78 <col:10> 'unsigned long' lvalue ParmVar 0x55b961898950 'x' 'unsigned long'
| `-CompoundStmt 0x55b96189c018 <col:13, line:35:5>
|-CXXConstructorDecl 0x55b961898b38 <line:37:5, line:39:5> line:37:21 IPAddress 'void (long)' inline
| |-ParmVarDecl 0x55b961898aa8 <col:31, col:36> col:36 used x 'long'
| |-CXXCtorInitializer Field 0x55b96189bd30 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55b96189c080 <line:38:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x55b96189c068 <col:10> 'long' <LValueToRValue>
| |     `-DeclRefExpr 0x55b96189c028 <col:10> 'long' lvalue ParmVar 0x55b961898aa8 'x' 'long'
| `-CompoundStmt 0x55b96189c0c8 <col:13, line:39:5>
|-CXXConstructorDecl 0x55b961898cf8 <line:42:5, line:44:5> line:42:12 used IPAddress 'void (struct in_addr)' inline
| |-ParmVarDecl 0x55b961898c08 <col:22, col:37> col:37 used x 'struct in_addr':'in_addr'
| |-CXXCtorInitializer Field 0x55b96189bd30 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55b96189c148 <line:43:10, col:12> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55b96189c0f8 <col:10, col:12> 'in_addr_t':'unsigned int' lvalue .s_addr 0x55b9617cc150
| |     `-DeclRefExpr 0x55b96189c0d8 <col:10> 'struct in_addr':'in_addr' lvalue ParmVar 0x55b961898c08 'x' 'struct in_addr':'in_addr'
| `-CompoundStmt 0x55b96189c190 <col:20, line:44:5>
|-CXXConstructorDecl 0x55b961898e88 <line:50:5, line:56:5> line:50:14 IPAddress 'void (const unsigned char *)'
| |-ParmVarDecl 0x55b961898dc0 <col:24, col:45> col:45 used data 'const unsigned char *'
| `-CompoundStmt 0x55b96189c2f8 <col:51, line:56:5>
|   `-BinaryOperator 0x55b96189c2d8 <line:52:2, col:52> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x55b96189c1b0 <col:2> 'uint32_t':'unsigned int' lvalue ->_addr 0x55b96189bd30
|     | `-CXXThisExpr 0x55b96189c1a0 <col:2> 'IPAddress *' implicit this
|     `-ImplicitCastExpr 0x55b96189c2c0 <col:10, col:52> 'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55b96189c2a8 <col:10, col:52> 'const unsigned int' lvalue prefix '*' cannot overflow
|         `-ParenExpr 0x55b96189c288 <col:11, col:52> 'const unsigned int *'
|           `-CXXReinterpretCastExpr 0x55b96189c258 <col:12, col:51> 'const unsigned int *' reinterpret_cast<const unsigned int *> <BitCast>
|             `-ImplicitCastExpr 0x55b96189c240 <col:47> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|               `-DeclRefExpr 0x55b96189c1e0 <col:47> 'const unsigned char *' lvalue ParmVar 0x55b961898dc0 'data' 'const unsigned char *'
|-CXXConstructorDecl 0x55b961898fd8 <line:63:5, col:39> col:14 IPAddress 'void (const String &)'
| `-ParmVarDecl 0x55b961898f48 <col:24, col:38> col:38 x 'const String &'
|-CXXConstructorDecl 0x55b961899188 <line:66:5, line:68:5> line:66:12 IPAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x55b9618990c8 <col:22, col:48> col:48 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x55b96189c368 <col:56, line:68:5>
|   `-CStyleCastExpr 0x55b96189c340 <line:67:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x55b96189c310 <col:9> 'const uninitialized_type' lvalue ParmVar 0x55b9618990c8 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x55b961899318 <line:78:5, col:48> col:22 make_prefix 'IPAddress (int)' static
| `-ParmVarDecl 0x55b961899250 <col:34, col:38> col:38 prefix_len 'int'
|-CXXMethodDecl 0x55b961899408 <line:81:5, line:83:5> line:81:29 make_broadcast 'IPAddress ()' static inline
| `-CompoundStmt 0x55b96189d328 <col:46, line:83:5>
|   `-ReturnStmt 0x55b96189d318 <line:82:2, col:29>
|     `-ExprWithCleanups 0x55b96189d300 <col:9, col:29> 'IPAddress'
|       `-CXXConstructExpr 0x55b96189d2d0 <col:9, col:29> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55b96189d188 <col:9, col:29> 'IPAddress' xvalue
|           `-CXXFunctionalCastExpr 0x55b96189d070 <col:9, col:29> 'IPAddress' functional cast to class IPAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x55b96189cf58 <col:9, col:29> 'IPAddress' 'void (unsigned int)'
|               `-IntegerLiteral 0x55b96189c390 <col:19> 'unsigned int' 4294967295
|-CXXMethodDecl 0x55b9618994f8 <line:86:5, line:88:5> line:86:17 empty 'bool () const' inline
| `-CompoundStmt 0x55b96189d3d8 <col:31, line:88:5>
|   `-ReturnStmt 0x55b96189d3c8 <line:87:2, col:10>
|     `-UnaryOperator 0x55b96189d3b0 <col:9, col:10> 'bool' prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x55b96189d398 <col:10> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x55b96189d380 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x55b96189d350 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55b96189bd30
|             `-CXXThisExpr 0x55b96189d340 <col:10> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x55b9618995b8 <line:91:5, line:93:5> line:91:21 used addr 'uint32_t () const' inline
| `-CompoundStmt 0x55b96189d458 <col:34, line:93:5>
|   `-ReturnStmt 0x55b96189d448 <line:92:2, col:9>
|     `-ImplicitCastExpr 0x55b96189d430 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55b96189d400 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55b96189bd30
|         `-CXXThisExpr 0x55b96189d3f0 <col:9> 'const IPAddress *' implicit this
|-CXXConversionDecl 0x55b961899688 <line:99:5, line:101:5> line:99:12 operator unsigned int 'uint32_t () const' inline
| `-CompoundStmt 0x55b96189d4d8 <col:38, line:101:5>
|   `-ReturnStmt 0x55b96189d4c8 <line:100:2, col:9>
|     `-ImplicitCastExpr 0x55b96189d4b0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x55b96189d480 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55b96189bd30
|         `-CXXThisExpr 0x55b96189d470 <col:9> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x55b961899758 <line:106:5, line:108:5> line:106:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x55b96189d7a8 <col:38, line:108:5>
|   `-ReturnStmt 0x55b96189d798 <line:107:2, col:58>
|     `-BinaryOperator 0x55b96189d778 <col:9, col:58> 'bool' '=='
|       |-ParenExpr 0x55b96189d690 <col:9, col:36> 'unsigned int'
|       | `-BinaryOperator 0x55b96189d670 <col:10, col:35> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55b96189d658 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55b96189d500 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55b96189bd30
|       |   |   `-CXXThisExpr 0x55b96189d4f0 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x55b96189d630 <col:18, col:35> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x55b96189d618 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55b96189d598 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x55b9617da688 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x55b96189d578 <col:24> 'unsigned int' 4026531840
|       `-CallExpr 0x55b96189d750 <col:41, col:58> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x55b96189d738 <col:41> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55b96189d718 <col:41> 'uint32_t (uint32_t) throw()' lvalue Function 0x55b9617da688 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x55b96189d6f8 <col:47> 'unsigned int' 3758096384
|-CXXMethodDecl 0x55b961899818 <line:110:5, line:112:5> line:110:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x55b96189da18 <col:39, line:112:5>
|   `-ReturnStmt 0x55b96189da08 <line:111:2, col:56>
|     `-BinaryOperator 0x55b96189d9e8 <col:9, col:56> 'bool' '=='
|       |-ParenExpr 0x55b96189d900 <col:9, col:35> 'unsigned int'
|       | `-BinaryOperator 0x55b96189d8e0 <col:10, col:34> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x55b96189d8c8 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x55b96189d7d0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x55b96189bd30
|       |   |   `-CXXThisExpr 0x55b96189d7c0 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x55b96189d8a0 <col:18, col:34> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x55b96189d888 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55b96189d868 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x55b9617da688 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x55b96189d848 <col:24> 'unsigned int' 4294901760
|       `-CallExpr 0x55b96189d9c0 <col:40, col:56> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x55b96189d9a8 <col:40> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x55b96189d988 <col:40> 'uint32_t (uint32_t) throw()' lvalue Function 0x55b9617da688 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x55b96189d968 <col:46> 'unsigned int' 2851995648
|-CXXMethodDecl 0x55b961899948 <line:114:5, col:37> col:27 used in_addr 'struct in_addr () const' inline
|-CXXConversionDecl 0x55b961899a50 <line:115:5, col:38> col:12 operator in_addr 'struct in_addr () const' inline
|-CXXMethodDecl 0x55b961899b60 <line:117:5, col:32> col:27 data 'unsigned char *()' inline
|-CXXMethodDecl 0x55b96189ac28 <line:118:5, col:40> col:33 data 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55b96189ace8 <line:120:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55b96189adb0 <line:122:5, col:30> col:9 mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x55b96189afa8 <line:123:5, col:64> col:17 matches_prefix 'bool (IPAddress, IPAddress) const' inline
| |-ParmVarDecl 0x55b96189ae60 <col:32, col:42> col:42 addr 'IPAddress'
| `-ParmVarDecl 0x55b96189aed8 <col:48, col:58> col:58 mask 'IPAddress'
|-CXXMethodDecl 0x55b96189b128 <line:124:5, col:50> col:17 mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x55b96189b068 <col:34, col:44> col:44 mask 'IPAddress'
|-CXXMethodDecl 0x55b96189b270 <line:125:5, col:52> col:17 mask_more_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x55b96189b1e0 <col:36, col:46> col:46 mask 'IPAddress'
|-CXXMethodDecl 0x55b96189b418 <line:137:5, col:43> col:23 operator&= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55b96189b328 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55b96189b560 <line:138:5, col:43> col:23 operator|= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55b96189b4d0 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55b96189b6a8 <line:139:5, col:43> col:23 operator^= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x55b96189b618 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x55b96189b770 <line:141:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x55b96189b830 <line:142:5, col:27> col:12 unparse_mask 'String () const'
|-CXXMethodDecl 0x55b96189b9a8 <line:143:5, col:41> col:12 unparse_with_mask 'String (IPAddress) const'
| `-ParmVarDecl 0x55b96189b8e0 <col:30> col:39 'IPAddress'
|-CXXMethodDecl 0x55b96189ba70 <line:145:5, col:23> col:19 s 'String () const' inline
|-CXXConversionDecl 0x55b96189bb58 <line:146:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x55b96189bc00 <col:51> "" ""
|-TypedefDecl 0x55b96189bca0 <line:148:5, col:23> col:23 parameter_type 'IPAddress'
| `-RecordType 0x55b9617fd430 'IPAddress'
|   `-CXXRecord 0x55b961898360 'IPAddress'
|-AccessSpecDecl 0x55b96189bcf8 <line:150:3, col:10> col:3 private
|-FieldDecl 0x55b96189bd30 <line:152:5, col:14> col:14 referenced _addr 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55b96189c3d8 <line:15:7> col:7 implicit constexpr IPAddress 'void (const IPAddress &)' inline default trivial noexcept-unevaluated 0x55b96189c3d8
| `-ParmVarDecl 0x55b96189c4e8 <col:7> col:7 'const IPAddress &'
|-CXXConstructorDecl 0x55b96189c588 <col:7> col:7 implicit used constexpr IPAddress 'void (IPAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55b96189c698 <col:7> col:7 used 'IPAddress &&'
| |-CXXCtorInitializer Field 0x55b96189bd30 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x55b96189d278 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55b96189d230 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x55b96189bd30
| |     `-CXXStaticCastExpr 0x55b96189d200 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
| |       `-DeclRefExpr 0x55b96189d1d0 <col:7> 'IPAddress' lvalue ParmVar 0x55b96189c698 '' 'IPAddress &&'
| `-CompoundStmt 0x55b96189d2c0 <col:7>
`-CXXDestructorDecl 0x55b96189cf88 <col:7> col:7 implicit referenced ~IPAddress 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IPAddress = type { i32 }
  NonVirtualBaseLLVMType:%class.IPAddress = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b961a2fcc0 prev 0x55b961a26b00 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b961a2fdb8 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x55b961a2fe58 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x55b961a36c20 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55b961a37008 <col:11>
|-CXXConstructorDecl 0x55b961a36d00 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b961a36de8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55b961a37750 <col:11>
|-CXXConstructorDecl 0x55b961a36e88 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55b961a36f98 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x55b961a38fa8 <col:11>
|-CXXDestructorDecl 0x55b961a382b8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55b96173ee98 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b96173efa8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55b96173f870 <col:11>
|   `-ReturnStmt 0x55b96173f860 <col:11>
|     `-UnaryOperator 0x55b96173f848 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b96173f838 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x55b96173f018 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55b96173f128 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x55b961acd2e0 <col:11>
    `-ReturnStmt 0x55b961acd2d0 <col:11>
      `-UnaryOperator 0x55b961acd2b8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55b961acd2a8 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b961a25cb8 prev 0x55b961a259c8 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b961a25db0 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x55b961a25e40 <col:19, col:25> col:19 public
|-TypedefDecl 0x55b961a25e78 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x55b96168b060 'int32_t' sugar
|   |-Typedef 0x55b9615a0268 'int32_t'
|   `-TypedefType 0x55b9615793b0 '__int32_t' sugar
|     |-Typedef 0x55b961578fc8 '__int32_t'
|     `-BuiltinType 0x55b961537370 'int'
|-TypedefDecl 0x55b961a25ee0 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x55b96168b220 'int64_t' sugar
|   |-Typedef 0x55b9615a02d0 'int64_t'
|   `-TypedefType 0x55b9615794d0 '__int64_t' sugar
|     |-Typedef 0x55b9615790a8 '__int64_t'
|     `-BuiltinType 0x55b961537390 'long'
|-EnumDecl 0x55b961a25f38 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x55b961a260b0 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x55b961a26090 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x55b961a26068 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x55b961a26050 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x55b961a26020 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x55b961a261a8 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x55b961a26188 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x55b961a26160 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x55b961a26148 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x55b961a26120 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x55b961a26100 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x55b961a261f8 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x55b961a26300 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55b961a26850 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a262e0 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x55b961a262c0 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x55b961a26390 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55b961a26868 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a26370 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55b961a26350 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x55b961a26420 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55b961a26880 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a26400 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55b961a263e0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55b961a264b0 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55b961a26898 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a26490 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x55b961a26470 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x55b961a26540 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55b961a268b0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a26520 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x55b961a26500 <col:25> 'int' 1000
| |-EnumConstantDecl 0x55b961a265d0 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55b961a268c8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a265b0 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x55b961a26590 <col:24> 'int' 1000
| |-EnumConstantDecl 0x55b961a26660 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55b961a268e0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a26640 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x55b961a26620 <col:26> 'int' EnumConstant 0x55b961a26300 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x55b961a26730 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x55b961a268f8 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a26710 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x55b961a266f0 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x55b961a266b0 <col:27> 'int' EnumConstant 0x55b961a26660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x55b961a266d0 <col:44> 'int' EnumConstant 0x55b961a265d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x55b961a26800 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x55b961a26910 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b961a267e0 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x55b961a267c0 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x55b961a26780 <col:27> 'int' EnumConstant 0x55b961a26660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x55b961a267a0 <col:44> 'int' EnumConstant 0x55b961a264b0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x55b961a26928 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x55b961a26a30 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x55b961a26a80 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b961a26a10 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x55b961a269f0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a26660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x55b961a26aa8 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x55b96168ac90 'uninitialized_type'
|   `-CXXRecord 0x55b96168abf8 'uninitialized_type'
|-CXXRecordDecl 0x55b961a26b00 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x55b961a26c10 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x55b961a30e08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55b961a37018 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55b961a37138 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x55b961a370f0 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x55b961a37080 <col:9> '<bound member function type>' ->assign 0x55b961a2b858
|     | `-CXXThisExpr 0x55b961a37070 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55b961a370b0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55b961a37120 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55b961a370d0 <col:19> 'int' 0
|-CXXConstructorDecl 0x55b961a26e58 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x55b961a26cd0 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x55b961a26d48 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55b961a32950 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55b961a32930 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x55b961a30e08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55b961a37150 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55b961a372a0 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x55b961a37228 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x55b961a371b8 <col:9> '<bound member function type>' ->assign 0x55b961a2b858
|     | `-CXXThisExpr 0x55b961a371a8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55b961a37270 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55b961a37258 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55b961a371e8 <col:16> 'long' lvalue ParmVar 0x55b961a26cd0 'sec' 'long'
|     `-ImplicitCastExpr 0x55b961a37288 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55b961a37208 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b961a26d48 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55b961a270b8 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55b961a26f28 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x55b961a26fa0 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55b961a32988 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55b961a32968 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x55b961a30e08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55b961a372b8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55b961a373f0 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x55b961a37390 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x55b961a37320 <col:9> '<bound member function type>' ->assign 0x55b961a2b858
|     | `-CXXThisExpr 0x55b961a37310 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55b961a373c0 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55b961a37350 <col:16> 'int' lvalue ParmVar 0x55b961a26f28 'sec' 'int'
|     `-ImplicitCastExpr 0x55b961a373d8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55b961a37370 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b961a26fa0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55b961a27318 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x55b961a27188 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x55b961a27200 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55b961a329c0 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55b961a329a0 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x55b961a30e08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55b961a37408 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55b961a37558 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x55b961a374e0 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x55b961a37470 <col:9> '<bound member function type>' ->assign 0x55b961a2b858
|     | `-CXXThisExpr 0x55b961a37460 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55b961a37528 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55b961a37510 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x55b961a374a0 <col:16> 'unsigned long' lvalue ParmVar 0x55b961a27188 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x55b961a37540 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55b961a374c0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b961a27200 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55b961a284b0 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x55b961a273e8 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x55b961a27460 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55b961a329f8 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55b961a329d8 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x55b961a30e08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55b961a37570 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55b961a376c0 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x55b961a37648 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x55b961a375d8 <col:9> '<bound member function type>' ->assign 0x55b961a2b858
|     | `-CXXThisExpr 0x55b961a375c8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55b961a37690 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x55b961a37678 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55b961a37608 <col:16> 'unsigned int' lvalue ParmVar 0x55b961a273e8 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x55b961a376a8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x55b961a37628 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b961a27460 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x55b961a28610 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x55b961a28580 <col:31> col:37 'double'
|-CXXConstructorDecl 0x55b961a287a8 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x55b961a286e8 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x55b961a289d8 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x55b961a288e0 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x55b961a28b88 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x55b961a28ac8 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x55b961a30e08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55b961a37760 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x55b961a376d8 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x55b961a28ac8 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x55b961a377c0 <col:19, line:214:5>
|-CXXConstructorDecl 0x55b961a28d58 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x55b961a28c98 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x55b961a30e08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55b961a377d0 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55b961a37880 <col:53, line:219:5>
|   `-CStyleCastExpr 0x55b961a37858 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x55b961a37828 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x55b961a28c98 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x55b961a28f48 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x55b961a28ec0 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x55b961a25a60 'Timestamp'
|   | `-CXXRecord 0x55b961a25cb8 'Timestamp'
|   `-ParenType 0x55b961a28e60 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x55b961a28e30 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x55b961a26000 'Timestamp::seconds_type' sugar
|         |-Typedef 0x55b961a25e78 'seconds_type'
|         `-TypedefType 0x55b96168b060 'int32_t' sugar
|           |-Typedef 0x55b9615a0268 'int32_t'
|           `-TypedefType 0x55b9615793b0 '__int32_t' sugar
|             |-Typedef 0x55b961578fc8 '__int32_t'
|             `-BuiltinType 0x55b961537370 'int'
|-CXXConversionDecl 0x55b961a29088 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55b961a29158 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x55b961a37988 <col:37, line:231:5>
|   `-ReturnStmt 0x55b961a37978 <line:227:9, col:23>
|     `-BinaryOperator 0x55b961a37958 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x55b961a37928 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55b961a378d8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55b961a2fe58
|       |   `-MemberExpr 0x55b961a378a8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55b961a30e08
|       |     `-CXXThisExpr 0x55b961a37898 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55b961a37940 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x55b961a37908 <col:23> 'int' 0
|-CXXMethodDecl 0x55b961a29218 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x55b961a292d8 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55b961a29398 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x55b961a29458 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x55b961a29518 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x55b961a29688 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x55b961a295c8 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x55b961a297d0 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x55b961a29740 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b961a29898 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55b961a29938 <col:54> "" ""
|-CXXMethodDecl 0x55b961a299c8 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55b961a29a68 <col:54> "" ""
|-CXXMethodDecl 0x55b961a29af8 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x55b961a29b98 <col:54> "" ""
|-CXXMethodDecl 0x55b961a29c98 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x55b961a29d68 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x55b961a29e98 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x55b961a29f90 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x55b961a2a0c8 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55b961a37ba0 <col:39, line:271:5>
|   `-ReturnStmt 0x55b961a37b90 <line:267:9, col:61>
|     `-CallExpr 0x55b961a37b30 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55b961a37b18 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55b961a379a0 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55b961a31138 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55b961a37b60 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55b961a37a00 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55b961a2fe58
|       |   `-MemberExpr 0x55b961a379d0 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55b961a30e08
|       |     `-CXXThisExpr 0x55b961a379c0 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55b961a37b78 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55b961a37aa0 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55b961a37a70 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55b961a37a30 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a26660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55b961a37a88 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55b961a37a50 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a265d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55b961a2a188 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55b961a37d60 <col:39, line:279:5>
|   `-ReturnStmt 0x55b961a37d50 <line:275:9, col:61>
|     `-CallExpr 0x55b961a37cf0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x55b961a37cd8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55b961a37bb8 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55b961a31138 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x55b961a37d20 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55b961a37c18 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x55b961a2fe58
|       |   `-MemberExpr 0x55b961a37be8 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x55b961a30e08
|       |     `-CXXThisExpr 0x55b961a37bd8 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55b961a37d38 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x55b961a37cb8 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x55b961a37c88 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x55b961a37c48 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a26660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x55b961a37ca0 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x55b961a37c68 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a264b0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55b961a2a248 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x55b961a37ef8 <col:39, line:287:5>
|   `-ReturnStmt 0x55b961a37ee8 <line:283:9, col:53>
|     `-BinaryOperator 0x55b961a37ec8 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x55b961a37e98 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x55b961a37db8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x55b961a2fe58
|       |   `-MemberExpr 0x55b961a37d88 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x55b961a30e08
|       |     `-CXXThisExpr 0x55b961a37d78 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x55b961a37eb0 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x55b961a37e78 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55b961a37e58 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55b961a37e28 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55b961a37de8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a26300 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55b961a37e40 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55b961a37e08 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a26660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55b961a2a338 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55b961a39190 <col:40, line:293:5>
|   |-DeclStmt 0x55b961a38040 <line:291:9, col:48>
|   | `-VarDecl 0x55b961a37f20 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55b961a38020 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55b961a37fc8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55b961a37f98 <col:22> '<bound member function type>' ->subsec 0x55b961a292d8
|   |     |   `-CXXThisExpr 0x55b961a37f88 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55b961a38008 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55b961a37fe8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a26730 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55b961a39180 <line:292:9, col:70>
|     `-ExprWithCleanups 0x55b961a39168 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55b961a39138 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55b961a39120 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55b961a39100 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55b961a390d0 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55b961a38e68 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55b961a38e50 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55b961a38058 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55b961a37f20 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55b961a39070 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55b961a39058 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55b961a39028 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55b961a38e80 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55b961a38df0 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55b961a38dd8 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55b961a38d88 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55b961a25c08 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55b961a38d28 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55b961a38088 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55b961a38078 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55b961a38d70 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55b961a38d58 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55b961a38548 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55b961a380b0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55b961a38140 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55b961a38110 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55b961a380d0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a26730 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55b961a38128 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55b961a380f0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55b961a37f20 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55b961a390a0 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55b961a38e38 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55b961a38e28 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55b961a2a3f8 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55b961a396e8 <col:40, line:302:5>
|   |-DeclStmt 0x55b961a392e0 <line:297:9, col:48>
|   | `-VarDecl 0x55b961a391c0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x55b961a392c0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x55b961a39268 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x55b961a39238 <col:22> '<bound member function type>' ->subsec 0x55b961a292d8
|   |     |   `-CXXThisExpr 0x55b961a39228 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x55b961a392a8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x55b961a39288 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a26800 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55b961a396d8 <line:298:9, col:70>
|     `-ExprWithCleanups 0x55b961a396c0 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x55b961a39690 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55b961a39678 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x55b961a39658 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x55b961a39628 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x55b961a39550 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x55b961a39538 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x55b961a392f8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x55b961a391c0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x55b961a395c8 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x55b961a395b0 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x55b961a39580 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x55b961a39568 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x55b961a394d8 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x55b961a394c0 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x55b961a394a0 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55b961a25c08 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x55b961a39440 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x55b961a39328 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x55b961a39318 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x55b961a39488 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x55b961a39470 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x55b961a39400 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x55b961a39350 <col:39> 'int' 0
|               |               `-BinaryOperator 0x55b961a393e0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x55b961a393b0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x55b961a39370 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a26800 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x55b961a393c8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x55b961a39390 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x55b961a391c0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x55b961a395f8 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x55b961a39520 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x55b961a39510 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x55b961a2a4b8 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x55b961a39770 <col:40, line:306:5>
|   `-ReturnStmt 0x55b961a39760 <line:305:9, col:17>
|     `-CXXConstructExpr 0x55b961a39730 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x55b961a39718 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b961a39708 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x55b961a2a658 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x55b961a2a568 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x55b961a2a828 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x55b961a2a730 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x55b961a2a918 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x55b961a2aa88 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x55b961a2a9c8 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x55b961a398b8 <col:56, line:320:5>
|   `-ReturnStmt 0x55b961a398a8 <line:319:9, col:32>
|     `-ExprWithCleanups 0x55b961a39890 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x55b961a39860 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55b961a39848 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55b961a39808 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55b961a397d8 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55b961a39798 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55b961a2a9c8 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x55b961a397f0 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55b961a397b8 <col:31> 'int' 0
|-CXXMethodDecl 0x55b961a2acc8 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55b961a2ab40 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55b961a2abb8 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b961a39a88 <col:72, line:326:5>
|   `-ReturnStmt 0x55b961a39a78 <line:325:9, col:51>
|     `-ExprWithCleanups 0x55b961a39a60 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55b961a39a30 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55b961a39a18 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55b961a399d8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55b961a399c0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55b961a398e0 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55b961a2ab40 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55b961a39980 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55b961a39968 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55b961a39900 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55b961a2f5b0 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55b961a399a8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55b961a39920 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b961a2abb8 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b961a2ae78 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55b961a2ad88 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55b961a3a150 <col:56, line:337:5>
|   |-DeclStmt 0x55b961a39d88 <line:329:9, col:51>
|   | `-VarDecl 0x55b961a39ab0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55b961a39d70 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55b961a39d40 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55b961a39d28 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55b961a39d10 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55b961a39ce0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55b961a39cc8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55b961a39cb0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55b961a39ba0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55b961a39f40 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55b961a39df0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55b961a2fe58
|   | | `-MemberExpr 0x55b961a39dc0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55b961a30e08
|   | |   `-DeclRefExpr 0x55b961a39da0 <col:9> 'Timestamp' lvalue Var 0x55b961a39ab0 't' 'Timestamp'
|   | `-BinaryOperator 0x55b961a39f20 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55b961a39ef0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b961a39e20 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55b961a2ad88 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55b961a39f08 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55b961a39ed0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55b961a39eb0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55b961a39e80 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55b961a39e40 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a26660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55b961a39e98 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55b961a39e60 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a265d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55b961a3a138 <line:336:9, col:16>
|     `-CXXConstructExpr 0x55b961a3a108 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55b961a3a0f0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55b961a3a0d0 <col:16> 'Timestamp' lvalue Var 0x55b961a39ab0 't' 'Timestamp'
|-CXXMethodDecl 0x55b961a2b040 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55b961a2af30 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55b961a2afa8 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b961a3a308 <col:72, line:343:5>
|   `-ReturnStmt 0x55b961a3a2f8 <line:342:9, col:51>
|     `-ExprWithCleanups 0x55b961a3a2e0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55b961a3a2b0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55b961a3a298 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55b961a3a258 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55b961a3a240 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55b961a3a188 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55b961a2af30 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55b961a3a200 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55b961a3a1e8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55b961a3a1a8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55b961a2f6f8 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55b961a3a228 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55b961a3a1c8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b961a2afa8 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b961a2b190 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55b961a2b100 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55b961a3a750 <col:56, line:354:5>
|   |-DeclStmt 0x55b961a3a4f8 <line:346:9, col:51>
|   | `-VarDecl 0x55b961a3a330 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55b961a3a4e0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55b961a3a4b0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55b961a3a498 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55b961a3a480 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55b961a3a450 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55b961a3a438 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55b961a3a420 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55b961a3a3f0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55b961a3a6b0 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55b961a3a560 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55b961a2fe58
|   | | `-MemberExpr 0x55b961a3a530 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55b961a30e08
|   | |   `-DeclRefExpr 0x55b961a3a510 <col:9> 'Timestamp' lvalue Var 0x55b961a3a330 't' 'Timestamp'
|   | `-BinaryOperator 0x55b961a3a690 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x55b961a3a660 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b961a3a590 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x55b961a2b100 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55b961a3a678 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x55b961a3a640 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x55b961a3a620 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x55b961a3a5f0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x55b961a3a5b0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a26660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x55b961a3a608 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x55b961a3a5d0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a264b0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55b961a3a738 <line:353:9, col:16>
|     `-CXXConstructExpr 0x55b961a3a708 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55b961a3a6f0 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55b961a3a6d0 <col:16> 'Timestamp' lvalue Var 0x55b961a3a330 't' 'Timestamp'
|-CXXMethodDecl 0x55b961a2b358 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x55b961a2b248 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55b961a2b2c0 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b961a3a908 <col:72, line:360:5>
|   `-ReturnStmt 0x55b961a3a8f8 <line:359:9, col:51>
|     `-ExprWithCleanups 0x55b961a3a8e0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x55b961a3a8b0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55b961a3a898 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55b961a3a858 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x55b961a3a840 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x55b961a3a788 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55b961a2b248 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x55b961a3a800 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x55b961a3a7e8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55b961a3a7a8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55b961a2f840 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x55b961a3a828 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55b961a3a7c8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b961a2b2c0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b961a2b4a8 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x55b961a2b418 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x55b961a47278 <col:56, line:371:5>
|   |-DeclStmt 0x55b961a3aaf8 <line:363:9, col:51>
|   | `-VarDecl 0x55b961a3a930 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x55b961a3aae0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x55b961a3aab0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55b961a3aa98 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x55b961a3aa80 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x55b961a3aa50 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x55b961a3aa38 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x55b961a3aa20 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x55b961a3a9f0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x55b961a471d8 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x55b961a3ab60 <col:9, col:14> 'int64_t':'long' lvalue .x 0x55b961a2fe58
|   | | `-MemberExpr 0x55b961a3ab30 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x55b961a30e08
|   | |   `-DeclRefExpr 0x55b961a3ab10 <col:9> 'Timestamp' lvalue Var 0x55b961a3a930 't' 'Timestamp'
|   | `-CallExpr 0x55b961a47178 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x55b961a47160 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x55b961a3ab90 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x55b961a31138 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x55b961a471a8 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x55b961a3abb0 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x55b961a2b418 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x55b961a471c0 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x55b961a47140 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x55b961a47110 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x55b961a3abd0 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a26300 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x55b961a47128 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x55b961a3abf0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a26660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x55b961a47260 <line:370:9, col:16>
|     `-CXXConstructExpr 0x55b961a47230 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x55b961a47218 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x55b961a471f8 <col:16> 'Timestamp' lvalue Var 0x55b961a3a930 't' 'Timestamp'
|-CXXMethodDecl 0x55b961a2b598 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x55b961a473b8 <col:39, line:377:5>
|   `-ReturnStmt 0x55b961a473a8 <line:376:9, col:30>
|     `-ExprWithCleanups 0x55b961a47390 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x55b961a47360 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55b961a47348 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x55b961a47308 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x55b961a472b0 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x55b961a472f0 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55b961a472d0 <col:29> 'int' 1
|-CXXMethodDecl 0x55b961a2b658 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x55b961a47498 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x55b961a47450 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x55b961a473e0 <col:9> '<bound member function type>' ->assign 0x55b961a2b858
|     | `-CXXThisExpr 0x55b961a473d0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x55b961a47410 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x55b961a47480 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x55b961a47430 <col:19> 'int' 0
|-CXXMethodDecl 0x55b961a2b858 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55b961a2b708 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55b961a2b780 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55b961a32a30 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55b961a32a10 <col:60> 'int' 0
| `-CompoundStmt 0x55b961a47690 <col:63, line:395:5>
|   `-BinaryOperator 0x55b961a47670 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x55b961a474f0 <col:9, col:12> 'int64_t':'long' lvalue .x 0x55b961a2fe58
|     | `-MemberExpr 0x55b961a474c0 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x55b961a30e08
|     |   `-CXXThisExpr 0x55b961a474b0 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x55b961a47650 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x55b961a475e0 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x55b961a47580 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x55b961a47568 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x55b961a47550 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x55b961a47520 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55b961a2b708 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x55b961a475c8 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x55b961a475a8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a26660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x55b961a47638 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x55b961a47620 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x55b961a47600 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b961a2b780 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b961a2ba28 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55b961a2b918 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55b961a2b990 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b961a477e8 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x55b961a477a0 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x55b961a476b8 <col:9> '<bound member function type>' ->assign 0x55b961a2b858
|     | `-CXXThisExpr 0x55b961a476a8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55b961a477d0 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55b961a476e8 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55b961a2b918 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55b961a47760 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55b961a47748 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55b961a47708 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55b961a2f6f8 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55b961a47788 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55b961a47728 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b961a2b990 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b961a2bbf8 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55b961a2bae8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55b961a2bb60 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b961a47940 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x55b961a478f8 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x55b961a47810 <col:9> '<bound member function type>' ->assign 0x55b961a2b858
|     | `-CXXThisExpr 0x55b961a47800 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x55b961a47928 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55b961a47840 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x55b961a2bae8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x55b961a478b8 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x55b961a478a0 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55b961a47860 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x55b961a2f840 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x55b961a478e0 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55b961a47880 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b961a2bb60 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b961a2bdc8 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55b961a2bcb8 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55b961a2bd30 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x55b961a32a68 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x55b961a32a48 <col:57> 'int' 0
| `-DeprecatedAttr 0x55b961a2be78 <col:75> "" ""
|-CXXMethodDecl 0x55b961a2c008 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55b961a2bef8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55b961a2bf70 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b961a2c0b8 <col:74> "" ""
|-CXXMethodDecl 0x55b961a2c248 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x55b961a2c138 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x55b961a2c1b0 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b961a2c2f8 <col:74> "" ""
|-CXXMethodDecl 0x55b961a2c388 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x55b961a2c428 <col:42> "" ""
|-CXXMethodDecl 0x55b961a2ec60 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x55b961a2eb40 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55b961a2ebc0 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x55b961a2ed30 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x55b961a2edf0 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x55b961a2ee90 <col:20>
| `-OptimizeNoneAttr 0x55b961a2eee8 <col:30>
|-CXXMethodDecl 0x55b961a2ef30 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x55b961a2eff0 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x55b961a2f0b0 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55b961a2f170 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x55b961a2f230 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x55b961a2f2f0 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x55b961a2f3b0 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x55b961a2f470 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x55b961a2f5b0 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55b961a2f520 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b961a47a88 <col:58, line:512:5>
|   `-ReturnStmt 0x55b961a47a78 <line:511:9, col:53>
|     `-BinaryOperator 0x55b961a47a58 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55b961a47a28 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55b961a47958 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b961a2f520 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55b961a47a40 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55b961a47a08 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55b961a479e8 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55b961a479b8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55b961a47978 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a26660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55b961a479d0 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55b961a47998 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a265d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55b961a2f6f8 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55b961a2f668 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b961a47bd0 <col:58, line:516:5>
|   `-ReturnStmt 0x55b961a47bc0 <line:515:9, col:53>
|     `-BinaryOperator 0x55b961a47ba0 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55b961a47b70 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55b961a47aa0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b961a2f668 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55b961a47b88 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55b961a47b50 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55b961a47b30 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55b961a47b00 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55b961a47ac0 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a26660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55b961a47b18 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55b961a47ae0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a264b0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55b961a2f840 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55b961a2f7b0 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b961a47d18 <col:58, line:520:5>
|   `-ReturnStmt 0x55b961a47d08 <line:519:9, col:53>
|     `-BinaryOperator 0x55b961a47ce8 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55b961a47cb8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55b961a47be8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b961a2f7b0 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55b961a47cd0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55b961a47c98 <col:23, col:53> 'int'
|           `-BinaryOperator 0x55b961a47c78 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x55b961a47c48 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55b961a47c08 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a26300 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55b961a47c60 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55b961a47c28 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a26660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55b961a2f988 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55b961a2f8f8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b961a47e60 <col:60, line:524:5>
|   `-ReturnStmt 0x55b961a47e50 <line:523:9, col:55>
|     `-BinaryOperator 0x55b961a47e30 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55b961a47e00 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55b961a47d30 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b961a2f8f8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55b961a47e18 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55b961a47de0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55b961a47dc0 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55b961a47d90 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55b961a47d50 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a26660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55b961a47da8 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55b961a47d70 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a265d0 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55b961a2fad0 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55b961a2fa40 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b961a47fa8 <col:60, line:528:5>
|   `-ReturnStmt 0x55b961a47f98 <line:527:9, col:55>
|     `-BinaryOperator 0x55b961a47f78 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x55b961a47f48 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55b961a47e78 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b961a2fa40 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55b961a47f60 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55b961a47f28 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55b961a47f08 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x55b961a47ed8 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55b961a47e98 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a26660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55b961a47ef0 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55b961a47eb8 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a264b0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x55b961a2fc18 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x55b961a2fb88 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b961a480f0 <col:60, line:532:5>
|   `-ReturnStmt 0x55b961a480e0 <line:531:9, col:55>
|     `-BinaryOperator 0x55b961a480c0 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x55b961a48090 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x55b961a47fc0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b961a2fb88 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x55b961a480a8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x55b961a48070 <col:25, col:55> 'int'
|           `-BinaryOperator 0x55b961a48050 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x55b961a48020 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x55b961a47fe0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a26300 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x55b961a48038 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x55b961a48000 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x55b961a26660 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x55b961a2fcc0 prev 0x55b961a26b00 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55b961a2fdb8 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x55b961a2fe58 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x55b961a36c20 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55b961a37008 <col:11>
| |-CXXConstructorDecl 0x55b961a36d00 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55b961a36de8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55b961a37750 <col:11>
| |-CXXConstructorDecl 0x55b961a36e88 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x55b961a36f98 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x55b961a38fa8 <col:11>
| |-CXXDestructorDecl 0x55b961a382b8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55b96173ee98 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55b96173efa8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x55b96173f870 <col:11>
| |   `-ReturnStmt 0x55b96173f860 <col:11>
| |     `-UnaryOperator 0x55b96173f848 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55b96173f838 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x55b96173f018 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x55b96173f128 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x55b961acd2e0 <col:11>
|     `-ReturnStmt 0x55b961acd2d0 <col:11>
|       `-UnaryOperator 0x55b961acd2b8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x55b961acd2a8 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x55b961a2fec0 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x55b961a2ffc0 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55b961a301c0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a2ffa0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55b961a2ff80 <col:21> 'int' 0
| |-EnumConstantDecl 0x55b961a30050 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55b961a301d8 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a30030 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x55b961a30010 <col:23> 'int' 1
| |-EnumConstantDecl 0x55b961a300e0 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x55b961a301f0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55b961a300c0 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x55b961a300a0 <col:23> 'int' 2
| `-EnumConstantDecl 0x55b961a30170 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x55b961a30208 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b961a30150 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x55b961a30130 <col:27> 'int' 3
|-CXXMethodDecl 0x55b961a30248 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x55b961a30310 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x55b961a30518 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x55b961a303c0 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x55b961a30440 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x55b961a32a80 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x55b961a30728 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x55b961a305d8 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x55b961a30650 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x55b961a307f8 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x55b961a308b8 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x55b961a30a28 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x55b961a30968 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x55b961a30af0 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55b961a30bb0 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x55b961a30c70 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x55b961a30d30 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x55b961a30dd0 <line:670:3, col:10> col:3 private
|-FieldDecl 0x55b961a30e08 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x55b961a30e78 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x55b961a48108 <col:27, line:684:5>
|-CXXMethodDecl 0x55b961a30f38 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x55b961a48118 <col:27, line:696:5>
|-CXXMethodDecl 0x55b961a31138 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55b961a30fe8 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55b961a31060 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b961a482a0 <col:66, line:700:5>
|   `-ReturnStmt 0x55b961a48290 <line:699:9, col:31>
|     `-CallExpr 0x55b961a48230 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x55b961a48218 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55b961a481c8 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x55b9618b34e8 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x55b961a48260 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x55b961a48188 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x55b961a30fe8 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x55b961a48278 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x55b961a481a8 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b961a31060 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b961a314a8 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x55b961a311f8 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x55b961a31270 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x55b961a312e8 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x55b961a31360 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b961a485f0 <col:64, line:707:5>
|   |-DeclStmt 0x55b961a48330 <line:704:9, col:24>
|   | `-VarDecl 0x55b961a482c8 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x55b961a48540 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x55b961a48348 <col:9> 'int32_t':'int' lvalue ParmVar 0x55b961a31270 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x55b961a48528 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x55b961a484c0 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x55b961a484a8 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55b961a48428 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x55b9618b87b8 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x55b961a484f8 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55b961a483c8 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x55b961a312e8 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x55b961a48510 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x55b961a483e8 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b961a31360 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x55b961a48408 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x55b961a482c8 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x55b961a485d0 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x55b961a48560 <col:9> 'int32_t':'int' lvalue ParmVar 0x55b961a311f8 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x55b961a485b8 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x55b961a485a0 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x55b961a48580 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x55b961a482c8 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x55b961a31748 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x55b961a31578 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x55b961a315f0 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x55b961a31668 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x55b961a319e8 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x55b961a31810 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x55b961a31888 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x55b961a31900 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x55b961a31b78 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x55b961a31ab0 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x55b961a31d78 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x55b961a31c30 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x55b961a31ca8 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x55b961a32048 <line:717:5, col:73> col:24
| `-FunctionDecl 0x55b961a31f88 parent 0x55b961537278 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55b961a31e38 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x55b961a31eb0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55b961a32268 <line:718:5, col:72> col:24
| `-FunctionDecl 0x55b961a321a8 parent 0x55b961537278 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55b961a32098 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x55b961a32110 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x55b961a32430 <line:719:5, col:57> col:29
| `-FunctionDecl 0x55b961a32378 parent 0x55b961537278 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x55b961a322b8 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x55b961a326b8 <line:720:5, col:73> col:30
| `-FunctionDecl 0x55b961a325f8 parent 0x55b961537278 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55b961a324a8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55b961a32520 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x55b961a328d8 <line:721:5, col:73> col:30
| `-FunctionDecl 0x55b961a32818 parent 0x55b961537278 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x55b961a32708 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x55b961a32780 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x55b961a38160 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b961a38248 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x55b961a30e08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55b961a38cb8 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x55b961a38c70 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55b961a30e08
| |     `-DeclRefExpr 0x55b961a38c50 <col:7> 'const Timestamp' lvalue ParmVar 0x55b961a38248 '' 'const Timestamp &'
| `-CompoundStmt 0x55b961a38d18 <col:7>
|-CXXConstructorDecl 0x55b961a383c8 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55b961a384d8 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x55b961a30e08 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x55b961a38fb8 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x55b961a38f60 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55b961a30e08
| |     `-CXXStaticCastExpr 0x55b961a38f30 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x55b961a38f00 <col:7> 'Timestamp' lvalue ParmVar 0x55b961a384d8 '' 'Timestamp &&'
| `-CompoundStmt 0x55b961a39018 <col:7>
|-CXXDestructorDecl 0x55b961a38588 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55b96173ece8 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b96173edf8 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x55b96173f8e8 <col:7>
|   |-CXXMemberCallExpr 0x55b96173f888 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x55b96173f7c8 <col:7> '<bound member function type>' .operator= 0x55b96173ee98
|   | | `-MemberExpr 0x55b96173f6d8 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55b961a30e08
|   | |   `-CXXThisExpr 0x55b96173f6c8 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x55b96173f798 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x55b961a30e08
|   |   `-DeclRefExpr 0x55b96173f778 <col:7> 'const Timestamp' lvalue ParmVar 0x55b96173edf8 '' 'const Timestamp &'
|   `-ReturnStmt 0x55b96173f8d8 <col:7>
|     `-UnaryOperator 0x55b96173f8c0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b96173f8b0 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x55b96173f198 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x55b96173f2a8 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x55b961acd358 <col:7>
    |-CXXMemberCallExpr 0x55b961acd2f8 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x55b961acd260 <col:7> '<bound member function type>' .operator= 0x55b96173f018
    | | `-MemberExpr 0x55b961acd130 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x55b961a30e08
    | |   `-CXXThisExpr 0x55b961acd120 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x55b961acd230 <col:7> 'Timestamp::rep_t' xvalue ._t 0x55b961a30e08
    |   `-CXXStaticCastExpr 0x55b961acd200 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x55b961acd1d0 <col:7> 'Timestamp' lvalue ParmVar 0x55b96173f2a8 '' 'Timestamp &&'
    `-ReturnStmt 0x55b961acd348 <col:7>
      `-UnaryOperator 0x55b961acd330 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x55b961acd320 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b961aca338 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x55b961aca468 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x55b961acaf58 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b961ab4b68 prev 0x55b961a96fb0 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b961ab4c60 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x55b961ab4cf0 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x55b961ab4d50 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x55b961ab4df8 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x55b961ab4f18 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x55b961ab50b8 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x55b961ab4ff8 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x55b961ab5308 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x55b961ab5178 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x55b961ab51f8 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x55b961ab5498 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x55b961ab53d0 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x55b961ab5618 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x55b961ab5558 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x55b961ab57c8 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x55b961ab5708 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x55b961ab58c0 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x55b961acb130 <col:21, line:58:5>
|   `-IfStmt 0x55b961acb118 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x55b961acb080 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x55b961acb050 <col:6> '<bound member function type>' ->scheduled 0x55b961ab6118
|     |   `-ImplicitCastExpr 0x55b961acb0a0 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x55b961acb040 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x55b961acb0f8 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x55b961acb0c8 <col:6> '<bound member function type>' ->unschedule 0x55b961ac97e0
|         `-CXXThisExpr 0x55b961acb0b8 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x55b961ab59c0 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x55b961acb2d0 <col:26, line:65:5>
|   |-BinaryOperator 0x55b961acb1f0 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55b961acb188 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55b961aca468
|   | | `-MemberExpr 0x55b961acb158 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55b961aca528
|   | |   `-CXXThisExpr 0x55b961acb148 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55b961acb1d8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b961acb1b8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55b961aca988 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55b961acb2b0 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x55b961acb220 <col:2> 'void *' lvalue ->_thunk 0x55b961aca5a8
|     | `-CXXThisExpr 0x55b961acb210 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x55b961acb288 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x55b961acb250 <col:20> 'int' 1
|-CXXMethodDecl 0x55b961ab5b00 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x55b961ab5a70 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x55b961acb430 <col:52, line:71:5>
|   |-CStyleCastExpr 0x55b961acb320 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x55b961acb2f0 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x55b961ab5a70 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x55b961acb410 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x55b961acb3e0 <col:2> '<bound member function type>' ->assign 0x55b961ab59c0
|       `-CXXThisExpr 0x55b961acb3d0 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x55b961ab5cd0 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x55b961ab5bb8 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x55b961ab5c38 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x55b961acb5b0 <col:58, line:79:5>
|   |-BinaryOperator 0x55b961acb4f8 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55b961acb490 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55b961aca468
|   | | `-MemberExpr 0x55b961acb460 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55b961aca528
|   | |   `-CXXThisExpr 0x55b961acb450 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55b961acb4e0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b961acb4c0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x55b961ab5bb8 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x55b961acb590 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55b961acb528 <col:2> 'void *' lvalue ->_thunk 0x55b961aca5a8
|     | `-CXXThisExpr 0x55b961acb518 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55b961acb578 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x55b961acb558 <col:11> 'void *' lvalue ParmVar 0x55b961ab5c38 'user_data' 'void *'
|-CXXMethodDecl 0x55b961ab5e20 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x55b961ab5d90 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x55b961acb748 <col:35, line:87:5>
|   |-BinaryOperator 0x55b961acb678 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55b961acb610 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55b961aca468
|   | | `-MemberExpr 0x55b961acb5e0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55b961aca528
|   | |   `-CXXThisExpr 0x55b961acb5d0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55b961acb660 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b961acb640 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55b961acab60 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55b961acb728 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55b961acb6a8 <col:2> 'void *' lvalue ->_thunk 0x55b961aca5a8
|     | `-CXXThisExpr 0x55b961acb698 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55b961acb710 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55b961acb6f8 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x55b961acb6d8 <col:11> 'Element *' lvalue ParmVar 0x55b961ab5d90 'element' 'Element *'
|-CXXMethodDecl 0x55b961ab5f68 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x55b961ab5ed8 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x55b961acb8e0 <col:29, line:94:5>
|   |-BinaryOperator 0x55b961acb810 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x55b961acb7a8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x55b961aca468
|   | | `-MemberExpr 0x55b961acb778 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x55b961aca528
|   | |   `-CXXThisExpr 0x55b961acb768 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x55b961acb7f8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x55b961acb7d8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x55b961acad38 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x55b961acb8c0 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x55b961acb840 <col:2> 'void *' lvalue ->_thunk 0x55b961aca5a8
|     | `-CXXThisExpr 0x55b961acb830 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x55b961acb8a8 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x55b961acb890 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x55b961acb870 <col:11> 'Task *' lvalue ParmVar 0x55b961ab5ed8 'task' 'Task *'
|-CXXMethodDecl 0x55b961ab6058 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x55b961acb9c0 <col:37, line:100:5>
|   `-ReturnStmt 0x55b961acb9b0 <line:99:2, col:19>
|     `-BinaryOperator 0x55b961acb990 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x55b961acb960 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x55b961acb910 <col:9> 'Element *const' lvalue ->_owner 0x55b961aca608
|       |   `-CXXThisExpr 0x55b961acb900 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x55b961acb978 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x55b961acb940 <col:19> 'int' 0
|-CXXMethodDecl 0x55b961ab6118 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x55b961acba80 <col:35, line:105:5>
|   `-ReturnStmt 0x55b961acba70 <line:104:2, col:23>
|     `-BinaryOperator 0x55b961acba50 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x55b961acba38 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x55b961acb9e8 <col:9> 'const int' lvalue ->_schedpos1 0x55b961aca288
|       |   `-CXXThisExpr 0x55b961acb9d8 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x55b961acba18 <col:23> 'int' 0
|-CXXMethodDecl 0x55b961ab61d8 <line:116:5, line:118:5> line:116:29 expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x55b961acbae8 <col:51, line:118:5>
|   `-ReturnStmt 0x55b961acbad8 <line:117:2, col:9>
|     `-MemberExpr 0x55b961acbaa8 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x55b961aca2e8
|       `-CXXThisExpr 0x55b961acba98 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55b961ab6298 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x55b961acc040 <col:37, line:136:5>
|   `-IfStmt 0x55b961acc018 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x55b961acbba8 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x55b961acbb90 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x55b961acbb70 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x55b961acbb40 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x55b961a29088
|     |       `-MemberExpr 0x55b961acbb10 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x55b961aca2e8
|     |         `-CXXThisExpr 0x55b961acbb00 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x55b961acbf88 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x55b961acbf70 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x55b961acbf40 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x55b961acbf28 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x55b961acbef0 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x55b961acbed8 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x55b961acbeb8 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55b961a57860 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x55b961acbe58 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x55b961acbe40 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x55b961acbd68 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x55b961acbd50 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x55b961acbd30 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55b961a57520 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x55b961acbcd0 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x55b961acbbd0 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55b961aca2e8
|     |         |     |   `-CXXThisExpr 0x55b961acbbc0 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x55b961acbd18 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x55b961acbd00 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x55b961acbcb0 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x55b961acbc98 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x55b961acbc38 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x55b961a4ab80 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x55b961acbea0 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x55b961acbe88 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x55b961acbe20 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x55b961acbe08 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x55b961acbdd8 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x55b9618a60d0 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x55b961acc008 <line:135:6, col:13>
|       `-CXXConstructExpr 0x55b961acbfd8 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x55b961acbfa8 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x55b961aca2e8
|           `-CXXThisExpr 0x55b961acbf98 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x55b961ab6358 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x55b961acc128 <col:35, line:141:5>
|   `-ReturnStmt 0x55b961acc118 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x55b961acc0e0 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x55b961acc0b0 <col:9, col:17> '<bound member function type>' ->router 0x55b961aa9710
|         `-ImplicitCastExpr 0x55b961acc100 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x55b961acc098 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x55b961acc068 <col:9> 'Element *const' lvalue ->_owner 0x55b961aca608
|               `-CXXThisExpr 0x55b961acc058 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55b961ab6418 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x55b961acc1a8 <col:37, line:146:5>
|   `-ReturnStmt 0x55b961acc198 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x55b961acc180 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x55b961acc150 <col:9> 'Element *const' lvalue ->_owner 0x55b961aca608
|         `-CXXThisExpr 0x55b961acc140 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55b961ab64d8 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x55b961acc228 <col:41, line:151:5>
|   `-ReturnStmt 0x55b961acc218 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x55b961acc200 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x55b961acc1d0 <col:9> 'RouterThread *const' lvalue ->_thread 0x55b961aca668
|         `-CXXThisExpr 0x55b961acc1c0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x55b961ab65a0 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x55b961ab6798 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x55b961ab6650 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x55b961ab66c8 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55b961acaf48 <col:50> 'bool' false
|-CXXMethodDecl 0x55b961ab6918 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x55b961ab6858 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x55b961ac8ad0 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55b961ab69d0 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55b961ac8c18 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x55b961ac8b88 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x55b961ac8d60 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55b961ac8cd0 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x55b961ac8ea8 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55b961ac8e18 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x55b961ac8f70 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x55b961acc390 <col:32, line:223:5>
|   `-ExprWithCleanups 0x55b961acc378 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x55b961acc320 <col:2, col:47> 'void'
|       |-MemberExpr 0x55b961acc250 <col:2> '<bound member function type>' ->schedule_at_steady 0x55b961ac8ad0
|       | `-CXXThisExpr 0x55b961acc240 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55b961acc360 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55b961acc348 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55b961acc300 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x55b961acc2e8 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x55b961acc2b8 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x55b9618a60d0 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x55b961ac90b0 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x55b961ac9020 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x55b961ac91f8 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55b961ac9168 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b961acc518 <col:56, line:241:5>
|   `-ExprWithCleanups 0x55b961acc500 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x55b961acc4a8 <col:2, col:40> 'void'
|       |-MemberExpr 0x55b961acc3b8 <col:2> '<bound member function type>' ->schedule_after 0x55b961ac90b0
|       | `-CXXThisExpr 0x55b961acc3a8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55b961acc4e8 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55b961acc4d0 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55b961acc468 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x55b961acc438 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x55b961acc3f8 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b961ac9168 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x55b961acc450 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x55b961acc418 <col:38> 'int' 0
|-CXXMethodDecl 0x55b961ac9340 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55b961ac92b0 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b961acc788 <col:58, line:249:5>
|   `-ExprWithCleanups 0x55b961acc770 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x55b961acc718 <col:2, col:49> 'void'
|       |-MemberExpr 0x55b961acc540 <col:2> '<bound member function type>' ->schedule_after 0x55b961ac90b0
|       | `-CXXThisExpr 0x55b961acc530 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55b961acc758 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55b961acc740 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x55b961acc6c0 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x55b961acc6a8 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55b961acc618 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55b961a2ae78 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55b961acc700 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x55b961acc6e8 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x55b961acc5f8 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b961ac92b0 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b961ac9488 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x55b961ac93f8 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x55b961acc968 <col:58, line:261:5>
|   `-ExprWithCleanups 0x55b961acc950 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x55b961acc8f8 <col:2, col:38> 'void'
|       |-MemberExpr 0x55b961acc7b0 <col:2> '<bound member function type>' ->schedule_at_steady 0x55b961ac8ad0
|       | `-CXXThisExpr 0x55b961acc7a0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55b961acc938 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55b961acc920 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55b961acc8c0 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55b961acc8a8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55b961acc888 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55b961a57520 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55b961acc858 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55b961acc840 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55b961acc7f0 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55b961aca2e8
|             |     `-CXXThisExpr 0x55b961acc7e0 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x55b961acc820 <col:33> 'const Timestamp' lvalue ParmVar 0x55b961ac93f8 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x55b961ac95d0 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55b961ac9540 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b961accc40 <col:58, line:270:5>
|   `-ExprWithCleanups 0x55b961accc28 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x55b961accbd0 <col:2, col:79> 'void'
|       |-MemberExpr 0x55b961acc990 <col:2> '<bound member function type>' ->schedule_at_steady 0x55b961ac8ad0
|       | `-CXXThisExpr 0x55b961acc980 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55b961accc10 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55b961accbf8 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x55b961accb90 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x55b961accac8 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x55b961accab0 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x55b961acca40 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x55b961acca10 <col:31, col:41> '<bound member function type>' .sec 0x55b9618a7bc8
|             | |     `-ImplicitCastExpr 0x55b961acca60 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x55b961acc9e0 <col:31> 'Timestamp' lvalue ->_expiry_s 0x55b961aca2e8
|             | |         `-CXXThisExpr 0x55b961acc9d0 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x55b961acca98 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x55b961acca78 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b961ac9540 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x55b961accb58 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x55b961accb28 <col:60, col:70> '<bound member function type>' .subsec 0x55b9618a82c0
|                 `-ImplicitCastExpr 0x55b961accb78 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x55b961accaf8 <col:60> 'Timestamp' lvalue ->_expiry_s 0x55b961aca2e8
|                     `-CXXThisExpr 0x55b961accae8 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x55b961ac9718 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x55b961ac9688 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x55b961accf78 <col:60, line:279:5>
|   `-ExprWithCleanups 0x55b961accf60 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x55b961accf08 <col:2, col:65> 'void'
|       |-MemberExpr 0x55b961accc68 <col:2> '<bound member function type>' ->schedule_at_steady 0x55b961ac8ad0
|       | `-CXXThisExpr 0x55b961accc58 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55b961accf48 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x55b961accf30 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x55b961acced0 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x55b961acceb8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55b961acce98 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x55b961a57520 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x55b961acce38 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x55b961acce20 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x55b961accca8 <col:21> 'Timestamp' lvalue ->_expiry_s 0x55b961aca2e8
|             |     `-CXXThisExpr 0x55b961accc98 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x55b961acce80 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x55b961acce68 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x55b961accdc8 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x55b961accdb0 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x55b961accd80 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55b961a2ae78 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x55b961acce08 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x55b961accdf0 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x55b961accd60 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x55b961ac9688 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55b961ac97e0 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x55b961ac98a0 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x55b961acd440 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x55b961accfd0 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x55b961accfa0 <col:2> '<bound member function type>' ->unschedule 0x55b961ac97e0
|   |   `-CXXThisExpr 0x55b961accf90 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x55b961acd428 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x55b961acd3f0 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x55b961acd3d8 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55b961acd088 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x55b96173f198 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x55b961acd000 <col:2> 'Timestamp' lvalue ->_expiry_s 0x55b961aca2e8
|       | `-CXXThisExpr 0x55b961accff0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x55b961acd070 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x55b961acd040 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x55b961ac9960 <line:304:5, line:310:5> line:304:29 adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x55b961acd798 <col:42, line:310:5>
|   |-IfStmt 0x55b961acd5e0 <line:306:2, line:307:23>
|   | |-CallExpr 0x55b961acd510 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x55b961acd4f8 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x55b961acd498 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x55b961a48ff0 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x55b961acd5d0 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x55b961acd5b8 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x55b961acd588 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x55b961acd570 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x55b961acd540 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x55b961acd788 <line:309:2, col:33>
|     `-ExprWithCleanups 0x55b961acd770 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x55b961acd740 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x55b961acd728 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x55b961acd6e8 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x55b961acd6d0 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x55b961acd6a0 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x55b961a2b190 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x55b961acd710 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x55b961acd680 <col:30> 'int' 500
|-CXXMethodDecl 0x55b961ac9aa0 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55b961ac9a10 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b961ac9b48 <col:69> "" ""
|-CXXMethodDecl 0x55b961ac9c58 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55b961ac9bc8 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b961ac9d00 <col:70> "" ""
|-CXXMethodDecl 0x55b961ac9e10 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x55b961ac9d80 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b961ac9eb8 <col:71> "" ""
|-CXXMethodDecl 0x55b961ac9fc8 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x55b961ac9f38 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55b961aca070 <col:72> "" ""
|-EnumDecl 0x55b961aca0e0 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x55b961aca1e0 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x55b961aca230 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b961aca1c0 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x55b961aca1a0 <col:25> 'int' 1
|-AccessSpecDecl 0x55b961aca248 <line:339:3, col:10> col:3 private
|-FieldDecl 0x55b961aca288 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x55b961aca2e8 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x55b961aca338 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x55b961aca468 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x55b961acaf58 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x55b961aca528 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x55b961aca5a8 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x55b961aca608 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x55b961aca668 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x55b961aca7b8 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x55b961aca6c8 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x55b961aca988 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55b961aca870 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x55b961aca8f0 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x55b961acab60 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55b961acaa48 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x55b961acaac8 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x55b961acad38 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x55b961acac20 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x55b961acaca0 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x55b961acaf08 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b96186b230 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55b96186b348 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55b96186b3e8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55b96186b448 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55b96186b4a8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55b96186b558 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b96186b860 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55b96186b978 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55b96186ba20 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55b96186ba88 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55b96186bb18 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55b961871bb0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55b961871fe8 <col:12>
|-CXXConstructorDecl 0x55b961871cb8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b961871dc8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55b96186ba20 'data' 'const char *'
| | `-ImplicitCastExpr 0x55b961874570 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55b961874540 <col:12> 'const char *const' lvalue .data 0x55b96186ba20
| |     `-DeclRefExpr 0x55b961874520 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b961871dc8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55b96186ba88 'length' 'int'
| | `-ImplicitCastExpr 0x55b961874600 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55b9618745d0 <col:12> 'const int' lvalue .length 0x55b96186ba88
| |     `-DeclRefExpr 0x55b9618745b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b961871dc8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55b96186bb18 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55b961874690 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55b961874660 <col:12> 'String::memo_t *const' lvalue .memo 0x55b96186bb18
| |     `-DeclRefExpr 0x55b961874640 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b961871dc8 '' 'const String::rep_t &'
| `-CompoundStmt 0x55b9618746e8 <col:12>
|-CXXConstructorDecl 0x55b961871e68 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55b961871e68
| `-ParmVarDecl 0x55b961871f78 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55b9618774d0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55b961882ee8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55b961882ff8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55b961883510 <col:12>
|   |-BinaryOperator 0x55b961883328 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55b9618832e0 <col:12> 'const char *' lvalue ->data 0x55b96186ba20
|   | | `-CXXThisExpr 0x55b9618832d0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55b961883310 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55b9618832a0 <col:12> 'const char *const' lvalue .data 0x55b96186ba20
|   |     `-DeclRefExpr 0x55b961883280 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b961882ff8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55b9618833f0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55b9618833a8 <col:12> 'int' lvalue ->length 0x55b96186ba88
|   | | `-CXXThisExpr 0x55b961883398 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55b9618833d8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55b961883368 <col:12> 'const int' lvalue .length 0x55b96186ba88
|   |     `-DeclRefExpr 0x55b961883348 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b961882ff8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55b9618834b8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55b961883470 <col:12> 'String::memo_t *' lvalue ->memo 0x55b96186bb18
|   | | `-CXXThisExpr 0x55b961883460 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55b9618834a0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55b961883430 <col:12> 'String::memo_t *const' lvalue .memo 0x55b96186bb18
|   |     `-DeclRefExpr 0x55b961883410 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b961882ff8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55b961883500 <col:12>
|     `-UnaryOperator 0x55b9618834e8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55b9618834d8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55b961883068 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55b961883068
  `-ParmVarDecl 0x55b961883178 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55b9618627a0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55b9618628b8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55b961862948 <col:16, col:22> col:16 public
|-TypedefDecl 0x55b961862988 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55b961537dc0 'const char *'
|   `-QualType 0x55b961537311 'const char' const
|     `-BuiltinType 0x55b961537310 'char'
|-TypedefDecl 0x55b961862a10 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55b9618629e0 'String::const_iterator' sugar
|   |-Typedef 0x55b961862988 'const_iterator'
|   `-PointerType 0x55b961537dc0 'const char *'
|     `-QualType 0x55b961537311 'const char' const
|       `-BuiltinType 0x55b961537310 'char'
|-TypedefDecl 0x55b961862b80 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55b961862af0 'int (String::*)() const'
|   |-RecordType 0x55b961862830 'String'
|   | `-CXXRecord 0x55b9618627a0 'String'
|   `-ParenType 0x55b961862a90 'int () const' sugar
|     `-FunctionProtoType 0x55b961836620 'int () const' const cdecl
|       `-BuiltinType 0x55b961537370 'int'
|-TypedefDecl 0x55b961862be8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55b96168b220 'int64_t' sugar
|   |-Typedef 0x55b9615a02d0 'int64_t'
|   `-TypedefType 0x55b9615794d0 '__int64_t' sugar
|     |-Typedef 0x55b9615790a8 '__int64_t'
|     `-BuiltinType 0x55b961537390 'long'
|-TypedefDecl 0x55b961862c50 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55b96168b140 'uint64_t' sugar
|   |-Typedef 0x55b9615a0470 'uint64_t'
|   `-TypedefType 0x55b961579560 '__uint64_t' sugar
|     |-Typedef 0x55b961579118 '__uint64_t'
|     `-BuiltinType 0x55b961537430 'unsigned long'
|-TypedefDecl 0x55b961862ce0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55b961862cb0 'String::intmax_t' sugar
|   |-Typedef 0x55b961862be8 'intmax_t'
|   `-TypedefType 0x55b96168b220 'int64_t' sugar
|     |-Typedef 0x55b9615a02d0 'int64_t'
|     `-TypedefType 0x55b9615794d0 '__int64_t' sugar
|       |-Typedef 0x55b9615790a8 '__int64_t'
|       `-BuiltinType 0x55b961537390 'long'
|-TypedefDecl 0x55b961862d70 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55b961862d40 'String::uintmax_t' sugar
|   |-Typedef 0x55b961862c50 'uintmax_t'
|   `-TypedefType 0x55b96168b140 'uint64_t' sugar
|     |-Typedef 0x55b9615a0470 'uint64_t'
|     `-TypedefType 0x55b961579560 '__uint64_t' sugar
|       |-Typedef 0x55b961579118 '__uint64_t'
|       `-BuiltinType 0x55b961537430 'unsigned long'
|-CXXConstructorDecl 0x55b961862e30 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55b961862fd8 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55b961862f18 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55b961863188 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55b9618630c8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55b9618632e0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55b961863250 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55b9618634f8 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55b9618633a8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55b961863428 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55b961863718 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55b9618635c8 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55b961863648 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55b961863938 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55b9618637e8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55b961863868 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55b961863b58 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55b961863a08 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55b961863a88 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55b961863ce8 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x55b961863c20 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55b961863e68 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55b961863da8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55b961863ff8 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55b961863f30 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55b961864150 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55b9618640c0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55b9618642a8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55b961864218 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55b961864400 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55b961864370 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55b961864588 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55b9618644c8 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55b961864718 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55b961864650 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55b9618648a8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55b9618647e0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55b961864a38 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55b961864970 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55b961864b30 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55b961864c58 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55b961864dd8 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55b961864d10 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55b961864f28 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55b961864e98 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55b961864fe0 <col:63> "" ""
|-CXXMethodDecl 0x55b961865128 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55b961865068 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55b961865338 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55b9618651e8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55b961865268 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55b961865558 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55b961865400 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55b961865480 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55b961865838 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55b961865618 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55b961865698 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55b961871680 <col:55> 'int' 10
| `-ParmVarDecl 0x55b961865710 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55b9618716a0 <col:76> 'bool' true
|-CXXMethodDecl 0x55b961865b18 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55b961865900 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55b961865980 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55b9618716b0 <col:56> 'int' 10
| `-ParmVarDecl 0x55b9618659f8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55b9618716d0 <col:77> 'bool' true
|-CXXMethodDecl 0x55b961865c20 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55b961865ce8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55b961865db0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55b961865e50 <col:20>
| `-OptimizeNoneAttr 0x55b961865ea8 <col:30>
|-CXXConversionDecl 0x55b961865f98 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55b961866068 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55b961866128 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55b961866218 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55b9618662d8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55b961866458 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55b961866390 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55b9618665a8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55b961866518 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55b961866698 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55b961866758 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55b9618669a8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55b961866810 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55b961866890 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55b961866c08 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55b961866a70 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55b961866af0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55b961866cd8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55b961866ee8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55b961866d90 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55b961866e10 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55b961867108 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55b961866fb0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55b961867030 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55b961867298 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55b9618671d0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55b961867388 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55b9618674f8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55b961867438 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55b961867708 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55b9618675b8 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55b961867638 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55b961867920 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55b9618677c8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55b961867840 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55b961867ab0 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55b9618679e0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55b961867cd0 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55b961867b70 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55b961867bf0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55b961867e20 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55b961867d90 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55b961867ff8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55b961867ee0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55b961867f60 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55b961868148 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55b9618680b8 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55b961868360 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55b961868200 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55b961868280 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55b9618716e0 <col:39> 'int' 0
|-CXXMethodDecl 0x55b961868580 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55b961868420 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55b9618684a0 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55b961871700 <col:48> 'int' 0
|-CXXMethodDecl 0x55b961868760 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55b961868640 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55b9618686c0 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55b961871720 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55b961868830 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55b9618688f0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55b9618689b0 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55b961868a70 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55b961868b30 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55b961868cd8 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55b961868be0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55b961868e58 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55b961868d90 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55b961869030 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55b961868f18 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55b9618691a8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55b9618690e8 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55b9618692f0 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55b961869260 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55b961869440 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55b9618693b0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55b961869618 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55b961869500 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55b961869580 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55b9618697f8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55b9618696e0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55b961869760 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55b961869948 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55b9618698b8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55b961869b58 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55b961869a08 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55b961869a88 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55b961869cb8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55b961869c20 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55b961869e10 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55b961869d78 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55b961869eb8 <col:57> "" ""
|-CXXMethodDecl 0x55b961869fc8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55b961869f38 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55b96186a118 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55b96186a088 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55b96186a298 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55b96186a1d0 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55b96186a360 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55b96186a420 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55b96186a4e0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55b96186a580 <col:49> "" ""
|-CXXMethodDecl 0x55b96186a610 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55b96186a6d0 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55b96186a7c0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55b96186a888 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55b96186a948 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55b96186aa08 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55b96186ab00 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55b96186abc8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55b96186ac90 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55b96186ae68 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55b96186ad48 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55b96186adc8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55b96186b090 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55b96186af30 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55b96186afb0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55b96186b1a0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55b96186b208 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55b96186b230 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55b96186b348 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55b96186b3e8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55b96186b448 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55b96186b4a8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55b96186b558 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55b96186b5c0 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55b96186b7f8 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55b96186b848 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b96186b7d8 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55b96186b6e8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55b96186b690 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55b96186b6d0 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55b96186b6b0 <col:32> 'int' 8
|-CXXRecordDecl 0x55b96186b860 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55b96186b978 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55b96186ba20 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55b96186ba88 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55b96186bb18 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55b961871bb0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55b961871fe8 <col:12>
| |-CXXConstructorDecl 0x55b961871cb8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55b961871dc8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55b96186ba20 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55b961874570 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55b961874540 <col:12> 'const char *const' lvalue .data 0x55b96186ba20
| | |     `-DeclRefExpr 0x55b961874520 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b961871dc8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55b96186ba88 'length' 'int'
| | | `-ImplicitCastExpr 0x55b961874600 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55b9618745d0 <col:12> 'const int' lvalue .length 0x55b96186ba88
| | |     `-DeclRefExpr 0x55b9618745b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b961871dc8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55b96186bb18 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55b961874690 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55b961874660 <col:12> 'String::memo_t *const' lvalue .memo 0x55b96186bb18
| | |     `-DeclRefExpr 0x55b961874640 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b961871dc8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55b9618746e8 <col:12>
| |-CXXConstructorDecl 0x55b961871e68 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55b961871e68
| | `-ParmVarDecl 0x55b961871f78 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55b9618774d0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55b961882ee8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55b961882ff8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55b961883510 <col:12>
| |   |-BinaryOperator 0x55b961883328 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55b9618832e0 <col:12> 'const char *' lvalue ->data 0x55b96186ba20
| |   | | `-CXXThisExpr 0x55b9618832d0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55b961883310 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55b9618832a0 <col:12> 'const char *const' lvalue .data 0x55b96186ba20
| |   |     `-DeclRefExpr 0x55b961883280 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b961882ff8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55b9618833f0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55b9618833a8 <col:12> 'int' lvalue ->length 0x55b96186ba88
| |   | | `-CXXThisExpr 0x55b961883398 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55b9618833d8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55b961883368 <col:12> 'const int' lvalue .length 0x55b96186ba88
| |   |     `-DeclRefExpr 0x55b961883348 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b961882ff8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55b9618834b8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55b961883470 <col:12> 'String::memo_t *' lvalue ->memo 0x55b96186bb18
| |   | | `-CXXThisExpr 0x55b961883460 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55b9618834a0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55b961883430 <col:12> 'String::memo_t *const' lvalue .memo 0x55b96186bb18
| |   |     `-DeclRefExpr 0x55b961883410 <col:12> 'const String::rep_t' lvalue ParmVar 0x55b961882ff8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55b961883500 <col:12>
| |     `-UnaryOperator 0x55b9618834e8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55b9618834d8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55b961883068 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55b961883068
|   `-ParmVarDecl 0x55b961883178 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55b96186bb90 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55b96186bdd8 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55b96186bbf8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55b96186bc78 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55b96186bcf0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55b961871b70 <col:79, line:261:5>
|   |-BinaryOperator 0x55b9618717e8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55b961871780 <col:2, col:5> 'const char *' lvalue .data 0x55b96186ba20
|   | | `-MemberExpr 0x55b961871750 <col:2> 'String::rep_t' lvalue ->_r 0x55b96186bb90
|   | |   `-CXXThisExpr 0x55b961871740 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55b9618717d0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b9618717b0 <col:12> 'const char *' lvalue ParmVar 0x55b96186bbf8 'data' 'const char *'
|   |-BinaryOperator 0x55b9618718b0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55b961871848 <col:2, col:5> 'int' lvalue .length 0x55b96186ba88
|   | | `-MemberExpr 0x55b961871818 <col:2> 'String::rep_t' lvalue ->_r 0x55b96186bb90
|   | |   `-CXXThisExpr 0x55b961871808 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55b961871898 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55b961871878 <col:14> 'int' lvalue ParmVar 0x55b96186bc78 'length' 'int'
|   `-IfStmt 0x55b961871b58 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55b9618719d0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55b9618719b8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55b961871998 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55b961871978 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55b961871910 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55b96186bb18
|     |       | `-MemberExpr 0x55b9618718e0 <col:7> 'String::rep_t' lvalue ->_r 0x55b96186bb90
|     |       |   `-CXXThisExpr 0x55b9618718d0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55b961871960 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55b961871940 <col:17> 'String::memo_t *' lvalue ParmVar 0x55b96186bcf0 'memo' 'String::memo_t *'
|     `-CallExpr 0x55b961871b30 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55b961871b18 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55b961871a20 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55b96185a808 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55b961871a88 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55b96186b3e8
|         `-ImplicitCastExpr 0x55b961871a70 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55b961871a50 <col:27> 'String::memo_t *' lvalue ParmVar 0x55b96186bcf0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55b96186c088 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55b96186bea8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55b96186bf28 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55b96186bfa0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55b96186bb90 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55b961871ff8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55b961872188 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55b9618720f0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55b961872060 <col:2> '<bound member function type>' ->assign_memo 0x55b96186bdd8
|     | `-ImplicitCastExpr 0x55b961872128 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55b961872050 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55b961872140 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55b961872090 <col:14> 'const char *' lvalue ParmVar 0x55b96186bea8 'data' 'const char *'
|     |-ImplicitCastExpr 0x55b961872158 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55b9618720b0 <col:20> 'int' lvalue ParmVar 0x55b96186bf28 'length' 'int'
|     `-ImplicitCastExpr 0x55b961872170 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55b9618720d0 <col:28> 'String::memo_t *' lvalue ParmVar 0x55b96186bfa0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55b96186c218 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55b96186c158 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55b9618723e0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55b961872360 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55b9618721b0 <col:2> '<bound member function type>' ->assign_memo 0x55b96186bdd8
|     | `-CXXThisExpr 0x55b9618721a0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55b961872398 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55b961872230 <col:14, col:19> 'const char *' lvalue .data 0x55b96186ba20
|     |   `-MemberExpr 0x55b961872200 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55b96186bb90
|     |     `-DeclRefExpr 0x55b9618721e0 <col:14> 'const String' lvalue ParmVar 0x55b96186c158 'x' 'const String &'
|     |-ImplicitCastExpr 0x55b9618723b0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55b9618722b0 <col:25, col:30> 'int' lvalue .length 0x55b96186ba88
|     |   `-MemberExpr 0x55b961872280 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55b96186bb90
|     |     `-DeclRefExpr 0x55b961872260 <col:25> 'const String' lvalue ParmVar 0x55b96186c158 'x' 'const String &'
|     `-ImplicitCastExpr 0x55b9618723c8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55b961872330 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55b96186bb18
|         `-MemberExpr 0x55b961872300 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55b96186bb90
|           `-DeclRefExpr 0x55b9618722e0 <col:38> 'const String' lvalue ParmVar 0x55b96186c158 'x' 'const String &'
|-CXXMethodDecl 0x55b96186c2e0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55b961872da0 <col:31, line:278:5>
|   `-IfStmt 0x55b961872d88 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55b961872480 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55b961872468 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55b961872438 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55b96186bb18
|     |     `-MemberExpr 0x55b961872408 <col:6> 'String::rep_t' lvalue ->_r 0x55b96186bb90
|     |       `-CXXThisExpr 0x55b9618723f8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55b961872d60 <col:15, line:277:2>
|       |-ParenExpr 0x55b961872930 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55b961872900 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55b961872590 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55b961872578 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55b961872560 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55b961872520 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55b96186b3e8
|       |   |       `-ImplicitCastExpr 0x55b961872508 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55b9618724d8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55b96186bb18
|       |   |           `-MemberExpr 0x55b9618724a8 <col:27> 'String::rep_t' lvalue ->_r 0x55b96186bb90
|       |   |             `-CXXThisExpr 0x55b961872498 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55b9618725f0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55b9618725d0 <col:54> 'int' 0
|       |   `-CallExpr 0x55b961872860 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55b961872848 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55b9618727c8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55b9615d1a80 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55b9618728a0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55b9618726d8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55b9618728b8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55b961872708 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55b9618728d0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55b961872740 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55b9618728e8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55b9618727b0 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55b961872798 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55b961872760 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55b961872c80 <line:274:6, line:275:22>
|       | |-CallExpr 0x55b961872b40 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55b961872b28 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55b961872aa0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55b96185bc50 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55b961872a70 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55b96186b3e8
|       | |   `-ImplicitCastExpr 0x55b961872a58 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55b961872a28 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55b96186bb18
|       | |       `-MemberExpr 0x55b9618729f8 <col:40> 'String::rep_t' lvalue ->_r 0x55b96186bb90
|       | |         `-CXXThisExpr 0x55b9618729e8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55b961872c40 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55b961872c28 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55b961872b68 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55b961870ac0 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55b961872c68 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55b961872bc8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55b96186bb18
|       |       `-MemberExpr 0x55b961872b98 <col:15> 'String::rep_t' lvalue ->_r 0x55b96186bb90
|       |         `-CXXThisExpr 0x55b961872b88 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55b961872d40 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55b961872cd8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55b96186bb18
|         | `-MemberExpr 0x55b961872ca8 <col:6> 'String::rep_t' lvalue ->_r 0x55b96186bb90
|         |   `-CXXThisExpr 0x55b961872c98 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55b961872d28 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55b961872d08 <col:16> 'int' 0
|-CXXMethodDecl 0x55b96186c578 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55b96186c398 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55b96186c418 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55b96186c490 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55b96186c650 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55b96186c8a0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55b96186c708 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55b96186c788 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55b96186c800 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55b96186ca88 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55b96186c970 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55b96186c9f0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55b96186cb88 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55b961872e78 <col:41, line:286:5>
|   `-ReturnStmt 0x55b961872e68 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55b961872e38 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55b961872e00 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55b961872de8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55b961872dc8 <col:46> 'int' 1
|-CXXMethodDecl 0x55b96186ce28 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55b96186cc40 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55b96186ccc0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55b96186cd40 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55b961870ac0 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55b96186cef0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55b961870b90 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55b961870d60 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55b961870c48 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55b961870cc8 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55b961870e20 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55b961870ee8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55b961870fe8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55b961871060 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55b9618710d8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55b961871140 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55b961871240 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55b961871290 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55b961871220 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55b961871200 <col:22> 'int' 14
|-CXXMethodDecl 0x55b9618714a8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55b9618712c0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55b961871340 <col:38> col:41 'int'
| `-ParmVarDecl 0x55b9618713c0 <col:43> col:46 'int'
|-FriendDecl 0x55b9618715b0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55b961871640 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>
