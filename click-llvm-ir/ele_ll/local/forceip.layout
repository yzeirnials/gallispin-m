
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561a8535bff8 prev 0x561a85353798 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561a8535c0f0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x561a8535c180 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x561a8535c1f8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x561a8535c2b8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x561a8535c380 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x561a8535c4f8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x561a8535c430 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x561a8535c5a0 <col:24>
| `-OptimizeNoneAttr 0x561a8535c5f8 <col:34>
|-CXXMethodDecl 0x561a8535c640 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x561a8535c8f8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x561a8535c6f0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x561a8535c768 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x561a8535c7e8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x561a8535c9b0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x561a8535c9e8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x561a8535ca50 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x561a8535cad8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x561a8535cdf8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x561a8535cb90 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x561a8535cc08 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x561a8535cc80 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x561a8535cd00 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x561a8535cf10 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x561a85364888 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x561a85364888
| `-ParmVarDecl 0x561a85364998 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x561a85364a38 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x561a85364a38
| `-ParmVarDecl 0x561a85364b48 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x561a8539c240 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561a8534f010 prev 0x561a8534ed90 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561a8534f108 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x561a8534f198 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x561a8534f1f8 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x561a8534f2e8 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x561a8534f3e8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x561a8534f5b8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x561a8534f468 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x561a8534f4e0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x561a8534f748 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x561a8534f680 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x561a8534f7f0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x561a8534f928 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x561a8534f860 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x561a8534fac8 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x561a8534fa08 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x561a8534fc68 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x561a8534fba8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x561a8534fd10 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x561a8534fe10 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x561a8534fef0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a8534fdf0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x561a8534fdd0 <col:26> 'int' 1
| `-EnumConstantDecl 0x561a8534fea0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x561a8534ff08 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561a8534fe80 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x561a8534fe60 <col:44> 'int' 2
|-CXXMethodDecl 0x561a85350050 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x561a8534ff38 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x561a8534ffb8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x561a853501a8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x561a85350118 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x561a853503e8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x561a85350268 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x561a853502e0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x561a85350498 <col:20>
| `-OptimizeNoneAttr 0x561a853504f0 <col:30>
|-CXXMethodDecl 0x561a853505f8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x561a85350530 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x561a853506a0 <col:20>
| `-OptimizeNoneAttr 0x561a853506f8 <col:30>
|-CXXMethodDecl 0x561a85350748 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x561a85350810 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x561a85350928 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x561a853509b0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x561a85350a38 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x561a85350ac0 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x561a85350b48 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x561a85350bd8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x561a85350c98 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x561a85350d20 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x561a85350da8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x561a85350e30 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x561a85350eb8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x561a85350f40 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x561a85350fd0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x561a85351090 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x561a85351120 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x561a85351270 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x561a853511d8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x561a85351400 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x561a85351330 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x561a853516b0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x561a853514b8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x561a85351538 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x561a853515b8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x561a85351768 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x561a85351870 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x561a85351b00 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a85351850 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x561a85351830 <col:33> 'int' 0
| |-EnumConstantDecl 0x561a85351900 <line:81:9, col:32> col:9 referenced CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x561a85351b18 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a853518e0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x561a853518c0 <col:32> 'int' 20
| |-EnumConstantDecl 0x561a85351990 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x561a85351b30 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a85351970 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x561a85351950 <col:38> 'int' 90
| |-EnumConstantDecl 0x561a85351a20 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x561a85351b48 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a85351a00 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x561a853519e0 <col:35> 'int' 100
| `-EnumConstantDecl 0x561a85351ab0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x561a85351b60 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561a85351a90 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x561a85351a70 <col:32> 'int' 2000
|-CXXMethodDecl 0x561a85351ba0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x561a85351fe0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x561a85351e50 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x561a85351ec8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561a853520b0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x561a85352230 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x561a85352160 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561a85352438 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x561a853522e8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x561a85352360 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561a85352538 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x561a853525d8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x561a853526a0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x561a85352730 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x561a85352960 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a85352710 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x561a853526f0 <col:36> 'int' EnumConstant 0x561a853526a0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x561a85352780 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x561a853527d0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x561a85352820 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x561a85352870 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x561a853528c0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x561a85352910 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x561a85352a48 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x561a85352988 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x561a85352b10 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x561a85352bd0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x561a85352c90 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x561a85352d50 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x561a85352e68 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x561a85352f30 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x561a853530b0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x561a85352fe0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x561a853531d8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x561a853533d8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x561a85353288 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x561a85353308 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x561a85360d28 <col:54, line:127:5>
|   |-ParenExpr 0x561a85360bd8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x561a85360ba8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x561a85360898 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x561a85360870 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x561a85360858 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x561a85360840 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x561a85360810 <col:31> 'Router *' lvalue ->_router 0x561a8535e6f0
|   |   |         `-CXXThisExpr 0x561a85360800 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x561a853608f8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561a853608d8 <col:48> 'int' 0
|   |   `-CallExpr 0x561a85360b08 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x561a85360af0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561a85360ad0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561a84e89690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561a85360b48 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a85360968 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x561a85360b60 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a85360988 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x561a85360b78 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561a853609c0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x561a85360b90 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561a85360ab8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561a85360aa0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561a85360a58 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x561a85360c70 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x561a85360c08 <col:9> 'Router *' lvalue ->_router 0x561a8535e6f0
|   | | `-CXXThisExpr 0x561a85360bf8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x561a85360c58 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x561a85360c38 <col:19> 'Router *' lvalue ParmVar 0x561a85353288 'r' 'Router *'
|   `-BinaryOperator 0x561a85360d08 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x561a85360ca0 <col:9> 'int' lvalue ->_eindex 0x561a8535e758
|     | `-CXXThisExpr 0x561a85360c90 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x561a85360cf0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x561a85360cd0 <col:19> 'int' lvalue ParmVar 0x561a85353308 'eindex' 'int'
|-CXXMethodDecl 0x561a85353560 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x561a85353498 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x561a85353630 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x561a853536f8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x561a85353798 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x561a853539e8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x561a85353860 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x561a853538e0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x561a85353a98 <col:20>
| `-OptimizeNoneAttr 0x561a85353af0 <col:30>
|-CXXMethodDecl 0x561a85353bf8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x561a85353b30 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x561a85353ca0 <col:20>
| `-OptimizeNoneAttr 0x561a85353cf8 <col:30>
|-CXXMethodDecl 0x561a85353dc8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x561a85353d38 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x561a85353e70 <col:20>
| `-OptimizeNoneAttr 0x561a85353ec8 <col:30>
|-CXXMethodDecl 0x561a85354058 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x561a85353f00 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x561a85353f80 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x561a853541e8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x561a85354120 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x561a85354338 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x561a853542a8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x561a85354488 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x561a853543f8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x561a853545d8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x561a85354548 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x561a85354898 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x561a85354690 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x561a85354710 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x561a853547b8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x561a85354970 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x561a85354a30 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x561a85354d00 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x561a85354bb0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x561a85354c28 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x561a85354e28 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x561a85355000 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x561a85354ee0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x561a85354f60 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x561a853551e8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x561a853550c8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x561a85355148 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x561a85355558 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x561a853552a8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x561a85355320 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x561a853553a0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x561a85360310 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x561a853602f0 <col:106> 'int' 0
| `-ParmVarDecl 0x561a85355418 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561a85360348 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561a85360328 <col:126> 'int' 0
|-CXXMethodDecl 0x561a853558f8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x561a85355628 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x561a853556c0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x561a85355740 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x561a853557b8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561a85360380 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561a85360360 <col:114> 'int' 0
|-CXXMethodDecl 0x561a85355c88 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x561a853559d0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x561a85355a48 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x561a85355ac8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x561a85360398 <col:96> 'int' 0
| `-ParmVarDecl 0x561a85355b40 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561a853603d8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561a853603b8 <col:116> 'int' 0
|-CXXMethodDecl 0x561a85356008 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x561a85355d58 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x561a85355dd0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x561a85355e50 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x561a85360410 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x561a853603f0 <col:109> 'int' 0
| `-ParmVarDecl 0x561a85355ec8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561a85360448 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561a85360428 <col:129> 'int' 0
|-CXXMethodDecl 0x561a85356388 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x561a853560d8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x561a85356150 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x561a853561d0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x561a85356248 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561a85360480 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561a85360460 <col:117> 'int' 0
|-CXXMethodDecl 0x561a85356718 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x561a85356460 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561a853564d8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x561a85356558 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x561a85360498 <col:99> 'int' 0
| `-ParmVarDecl 0x561a853565d0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x561a853604d8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x561a853604b8 <col:119> 'int' 0
|-CXXMethodDecl 0x561a85356b38 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x561a853567e8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x561a85356868 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x561a853568e0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x561a85356960 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x561a85360510 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x561a853604f0 <col:108> 'int' 0
| `-ParmVarDecl 0x561a853569e0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x561a85360548 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x561a85360528 <col:141> 'int' 0
|-CXXMethodDecl 0x561a85356f58 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x561a85356c10 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x561a85356c90 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x561a85356d08 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x561a85356d88 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x561a85356e08 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x561a85360560 <col:121> 'int' 0
|-CXXMethodDecl 0x561a85357388 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x561a85357038 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x561a853570b8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x561a85357130 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x561a853571b0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x561a85360580 <col:98> 'int' 0
| `-ParmVarDecl 0x561a85357230 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x561a853605a0 <col:123> 'int' 0
|-CXXMethodDecl 0x561a85357650 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x561a85357460 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x561a853574e0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x561a85357560 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x561a853605c0 <col:80> 'int' 0
|-EnumDecl 0x561a85357708 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x561a85357810 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x561a85357aa0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a853577f0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x561a853577d0 <col:42> 'int' 1
| |-EnumConstantDecl 0x561a853578a0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x561a85357ab8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a85357880 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x561a85357860 <col:40> 'int' 2
| |-EnumConstantDecl 0x561a85357930 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x561a85357ad0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a85357910 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x561a853578f0 <col:44> 'int' 4
| |-EnumConstantDecl 0x561a853579c0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x561a85357ae8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a853579a0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x561a85357980 <col:36> 'int' 7
| `-EnumConstantDecl 0x561a85357a50 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x561a85357b00 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561a85357a30 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x561a85357a10 <col:34> 'int' 6
|-CXXMethodDecl 0x561a85357db8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x561a85357b28 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x561a85357bc8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x561a85357c48 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x561a85357cc0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x561a85360678 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x561a85360660 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x561a85360648 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x561a85360628 <col:98, col:105> 'String' (CXXTemporary 0x561a85360628)
|           `-CXXTemporaryObjectExpr 0x561a853605f0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x561a85358058 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x561a85357e88 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x561a85357f00 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x561a85357f78 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x561a85360728 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x561a85360710 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x561a853606f8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x561a853606d8 <col:94, col:101> 'String' (CXXTemporary 0x561a853606d8)
| |         `-CXXTemporaryObjectExpr 0x561a853606a0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x561a85360f10 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x561a85360e88 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x561a85360e58 <col:9> '<bound member function type>' ->add_task_handlers 0x561a85357db8
|     | `-CXXThisExpr 0x561a85360e48 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x561a85360ec8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x561a85360dc8 <col:27> 'Task *' lvalue ParmVar 0x561a85357e88 'task' 'Task *'
|     |-ImplicitCastExpr 0x561a85360ee0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x561a85360de8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x561a85357f00 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x561a85360ef8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x561a85360e08 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x561a85357a50 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x561a85360e28 <col:62> 'const String' lvalue ParmVar 0x561a85357f78 'prefix' 'const String &'
|-CXXMethodDecl 0x561a85358268 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x561a85358120 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x561a85358198 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x561a853607d8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x561a853607c0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x561a853607a8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x561a85360788 <col:70, col:77> 'String' (CXXTemporary 0x561a85360788)
| |         `-CXXTemporaryObjectExpr 0x561a85360750 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x561a853610e8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x561a85361060 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x561a85361030 <col:9> '<bound member function type>' ->add_task_handlers 0x561a85357db8
|     | `-CXXThisExpr 0x561a85361020 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x561a853610a0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x561a85360fa0 <col:27> 'Task *' lvalue ParmVar 0x561a85358120 'task' 'Task *'
|     |-ImplicitCastExpr 0x561a853610b8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x561a85360fc0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x561a853610d0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x561a85360fe0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x561a85357a50 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x561a85361000 <col:57> 'const String' lvalue ParmVar 0x561a85358198 'prefix' 'const String &'
|-CXXMethodDecl 0x561a85358548 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x561a85358330 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561a853583b0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561a85358428 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x561a853587f8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x561a85358618 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561a85358698 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561a85358718 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x561a85358ae8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x561a853588c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561a85358948 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561a853589c0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x561a85358d98 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x561a85358bb8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561a85358c38 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561a85358cb8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x561a85359048 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x561a85358e68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561a85358ee8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561a85358f68 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x561a853592f8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x561a85359118 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561a85359198 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561a85359210 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x561a853595a8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x561a853593c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561a85359448 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561a853594c8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x561a853598b8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x561a853596d0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561a85359750 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561a853597d0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x561a85359b98 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x561a85359988 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561a85359a08 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561a85359ab0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x561a85359e78 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x561a85359c68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561a85359ce8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561a85359d90 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x561a8535a0e0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x561a85359f48 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x561a85359fc8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x561a8535a040 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x561a8535a388 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x561a8535a1b0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x561a8535a230 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x561a8535a2a8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x561a8535a638 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x561a8535a458 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561a8535a4d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561a8535a558 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x561a8535a8e8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x561a8535a708 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561a8535a788 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561a8535a800 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x561a8535ab98 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x561a8535a9b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561a8535aa38 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561a8535aab0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x561a8535ae68 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x561a8535ac68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561a8535ace8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x561a8535ad88 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x561a8535b198 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x561a8535af38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x561a8535afb8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x561a8535b030 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x561a8535b0a8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x561a853607f0 <col:93> 'bool' false
|-CXXMethodDecl 0x561a8535b380 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x561a8535b268 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x561a8535b2e8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x561a8535b558 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x561a8535b440 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x561a8535b4c0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x561a8535b838 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x561a8535b618 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x561a8535b690 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x561a8535b710 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x561a8535b788 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x561a8535bb28 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x561a8535b908 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x561a8535b980 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x561a8535ba00 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x561a8535ba78 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x561a8535bd60 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x561a8535bc00 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x561a8535bc80 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x561a8535bf48 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x561a8535be28 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x561a8535bea8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x561a8535bff8 prev 0x561a85353798 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x561a8535c0f0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x561a8535c180 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x561a8535c1f8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x561a8535c2b8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x561a8535c380 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x561a8535c4f8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x561a8535c430 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x561a8535c5a0 <col:24>
| | `-OptimizeNoneAttr 0x561a8535c5f8 <col:34>
| |-CXXMethodDecl 0x561a8535c640 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x561a8535c8f8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x561a8535c6f0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x561a8535c768 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x561a8535c7e8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x561a8535c9b0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x561a8535c9e8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x561a8535ca50 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x561a8535cad8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x561a8535cdf8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x561a8535cb90 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x561a8535cc08 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x561a8535cc80 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x561a8535cd00 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x561a8535cf10 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x561a85364888 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x561a85364888
| | `-ParmVarDecl 0x561a85364998 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x561a85364a38 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x561a85364a38
| | `-ParmVarDecl 0x561a85364b48 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x561a8539c240 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x561a8535cf88 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x561a8535d028 <col:38> "" ""
|-CXXMethodDecl 0x561a8535d0b8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x561a8535d158 <col:44> "" ""
|-AccessSpecDecl 0x561a8535d1c8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x561a8535d1f0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x561a8535d2f0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x561a8535d340 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561a8535d2d0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x561a8535d2b0 <col:27> 'int' 4
|-FieldDecl 0x561a8535d3f8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x561a8535d5a8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x561a8535d660 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x561a8535e6f0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x561a8535e758 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x561a8535e8a8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x561a8535e7e8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x561a8535ea58 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x561a8535e968 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x561a8535ec38 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x561a8535eb18 <col:20> col:23 'int'
| `-ParmVarDecl 0x561a8535eb98 <col:25> col:28 'int'
|-CXXMethodDecl 0x561a8535eee0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x561a8535ed00 <col:23> col:26 'int'
| |-ParmVarDecl 0x561a8535ed80 <col:28> col:31 'int'
| `-ParmVarDecl 0x561a8535edf8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x561a8535ef98 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x561a8535f060 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x561a8535f0b0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x561a8535f100 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x561a8535f2e0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x561a8535f190 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x561a8535f208 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561a8535f588 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x561a8535f3a8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x561a8535f428 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x561a8535f4a0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x561a8535f7a8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x561a8535f658 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x561a8535f6d8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x561a8535fae0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x561a8535f868 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x561a8535f8e8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x561a8535f960 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x561a8535f9e0 <col:57> col:60 'int'
|-CXXMethodDecl 0x561a8535fcc8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x561a8535fbb0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x561a8535fc30 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x561a8535fe18 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x561a8535fd88 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x561a85360198 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x561a8535fed8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x561a8535ff58 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x561a8535ffd0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x561a85360050 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x561a853602b0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ForceIP
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   int _count
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561a853679f8 <../elements/local/forceip.hh:26:1, line:40:1> line:26:7 class ForceIP definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x561a85367b58 <col:1, col:7> col:7 implicit referenced class ForceIP
|-FieldDecl 0x561a85367c00 <line:28:3, col:7> col:7 referenced _count 'int'
|-AccessSpecDecl 0x561a85367c50 <line:30:2, col:8> col:2 public
|-CXXConstructorDecl 0x561a85367ce0 <line:32:3, col:11> col:3 ForceIP 'void ()'
|-CXXDestructorDecl 0x561a85367dd0 <line:33:3, col:12> col:3 ~ForceIP 'void ()' noexcept-unevaluated 0x561a85367dd0
| `-Overrides: [ 0x561a8534f2e8 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x561a85367f00 <line:35:3, col:54> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x561a85350748 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x561a85368550 <col:34, col:54>
|   `-ReturnStmt 0x561a85368540 <col:36, col:43>
|     `-ImplicitCastExpr 0x561a85368528 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x561a85368508 <col:43> 'const char [8]' lvalue "ForceIP"
|-CXXMethodDecl 0x561a85367fc8 <line:36:3, col:54> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x561a85350810 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x561a853685b0 <col:34, col:54>
|   `-ReturnStmt 0x561a853685a0 <col:36, col:43>
|     `-ImplicitCastExpr 0x561a85368588 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x561a85368568 <col:43> 'const char []' lvalue Var 0x561a85350ac0 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x561a85368108 <line:38:3, col:33> col:11 simple_action 'Packet *(Packet *)'
| |-Overrides: [ 0x561a8534f928 Element::simple_action 'Packet *(Packet *)' ]
| `-ParmVarDecl 0x561a85368078 <col:25, col:32> col:33 'Packet *'
|-CXXConstructorDecl 0x561a853681d8 <line:26:7> col:7 implicit ForceIP 'void (const ForceIP &)' inline default_delete noexcept-unevaluated 0x561a853681d8
| `-ParmVarDecl 0x561a853682e8 <col:7> col:7 'const ForceIP &'
`-CXXMethodDecl 0x561a85368388 <col:7> col:7 implicit operator= 'ForceIP &(const ForceIP &)' inline default_delete noexcept-unevaluated 0x561a85368388
  `-ParmVarDecl 0x561a85368498 <col:7> col:7 'const ForceIP &'

Layout: <CGRecordLayout
  LLVMType:%class.ForceIP = type { %class.Element.base, i32 }
  NonVirtualBaseLLVMType:%class.ForceIP = type { %class.Element.base, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_ip
     0:0-3 |   unsigned int ip_hl
     0:4-7 |   unsigned int ip_v
         1 |   uint8_t ip_tos
         2 |   uint16_t ip_len
         4 |   uint16_t ip_id
         6 |   uint16_t ip_off
         8 |   uint8_t ip_ttl
         9 |   uint8_t ip_p
        10 |   uint16_t ip_sum
        12 |   struct in_addr ip_src
        12 |     in_addr_t s_addr
        16 |   struct in_addr ip_dst
        16 |     in_addr_t s_addr
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561a8510dac0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561a8510dbd8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x561a8510dc68 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x561a8510dd38 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x561a8510de20 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x561a8510e038 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x561a8510dee0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561a8510e1e8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x561a8510e0f0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x561a8510e330 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x561a8510e2a0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x561a8510e478 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x561a8510e3e8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561a8510e5c0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x561a8510e530 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561a8510e688 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x561a8510e7d0 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x561a8510e740 <col:28> col:31 'int'
|-CXXMethodDecl 0x561a8510e898 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x561a8510e9e0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x561a8510e950 <col:28> col:31 'int'
|-CXXMethodDecl 0x561a8510eb58 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x561a8510ea98 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561a8510eca0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x561a8510ec10 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561a8510ed68 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x561a8510ef28 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x561a8510ee18 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x561a8510ee90 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561a8510f178 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x561a8510efe8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561a8510f060 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561a8510f228 <col:86> "" ""
|-CXXMethodDecl 0x561a8510f498 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x561a8510f308 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x561a8510f380 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561a8510f648 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x561a8510f558 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x561a8510f7f8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x561a8510f700 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x561a8510fac8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x561a8510f8b0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x561a8510f928 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x561a8510f9a0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561a8510fda8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x561a8510fb90 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x561a8510fc08 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561a8510fc80 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561a8510fe60 <col:115> "" ""
|-AccessSpecDecl 0x561a8510fed0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x561a8510ff08 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561a85110410 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x561a85110410
| `-ParmVarDecl 0x561a85110518 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x561a851105b8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x561a851105b8
| `-ParmVarDecl 0x561a851106c8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x561a85145cf8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x561a85338b00 <col:7>
|-CXXConstructorDecl 0x561a85145dd0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x561a85145dd0
| `-ParmVarDecl 0x561a85145ee8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x561a85145f58 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x561a85145f58
| `-ParmVarDecl 0x561a85146068 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x561a8533b500 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561a853276a8 prev 0x561a8531c8b0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561a853277a0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x561a85327890 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x561a853279b8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x561a85327b38 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x561a85327cb8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x561a85327e38 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x561a85338c68 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x561a853394d8 <col:11>
|-CXXDestructorDecl 0x561a85338d40 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x561a85338e78 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x561a85338e78
| `-ParmVarDecl 0x561a85338f88 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x561a85339028 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x561a85339028
| `-ParmVarDecl 0x561a85339138 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x561a8533bef8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x561a8533c008 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x561a8533c288 <col:11>
|   `-ReturnStmt 0x561a8533c278 <col:11>
|     `-UnaryOperator 0x561a8533c260 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x561a8533c250 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x561a8533c078 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x561a8533c078
  `-ParmVarDecl 0x561a8533c188 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561a85327ea0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561a85327fb8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x561a85328058 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x561a853280c0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x561a85328128 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x561a85328190 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x561a853281f0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x561a853282b0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x561a85328310 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x561a85328370 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x561a85338b78 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x561a85328058 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x561a853394e8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x561a85339540 <col:12>
|-CXXConstructorDecl 0x561a853391a8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x561a853391a8
| `-ParmVarDecl 0x561a853392b8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x561a85339358 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x561a85339358
| `-ParmVarDecl 0x561a85339468 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x561a8533b5e0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561a85315fc0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561a853160d8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x561a85316168 <col:16, col:22> col:16 public
|-EnumDecl 0x561a85316190 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x561a85316290 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x561a85316370 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a85316270 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x561a85316250 <col:21> 'int' 28
| `-EnumConstantDecl 0x561a85316320 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x561a85316388 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561a85316300 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x561a853162e0 <col:22> 'int' 64
|-CXXMethodDecl 0x561a853166c8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x561a853163b0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561a85316430 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x561a853164a8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561a85316520 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x561a85316788 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x561a85316988 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x561a85316800 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x561a85316878 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x561a85316a38 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x561a85316b98 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x561a85316aa8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x561a85316c40 <col:72> warn_unused_result ""
|-TypedefDecl 0x561a85316fa0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x561a85316f30 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x561a85316ed0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x561a85316e90 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x561a84def4e0 'void'
|       |-PointerType 0x561a85096360 'unsigned char *'
|       | `-BuiltinType 0x561a84def5e0 'unsigned char'
|       |-TypedefType 0x561a84e92930 'size_t' sugar
|       | |-Typedef 0x561a84e5fbe0 'size_t'
|       | `-BuiltinType 0x561a84def640 'unsigned long'
|       `-PointerType 0x561a84defce0 'void *'
|         `-BuiltinType 0x561a84def4e0 'void'
|-CXXMethodDecl 0x561a85317418 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x561a85317010 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x561a85317088 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561a85317120 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x561a853171a0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x561a85331b10 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x561a85331af8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x561a85331ac0 <col:58> 'int' 0
| |-ParmVarDecl 0x561a85317220 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x561a85331b38 <col:76> 'int' 0
| |-ParmVarDecl 0x561a853172a0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x561a85331b58 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x561a853174e8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x561a85317568 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x561a85317628 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x561a853176c8 <col:20>
| `-OptimizeNoneAttr 0x561a85317720 <col:30>
|-CXXMethodDecl 0x561a85317798 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x561a85317838 <col:20>
| `-OptimizeNoneAttr 0x561a85317890 <col:30>
|-CXXMethodDecl 0x561a85317908 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x561a853179a8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x561a85317a58 <line:77:5, col:102> col:56 used uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x561a85317af8 <col:20>
| |-OptimizeNoneAttr 0x561a85317b50 <col:30>
| `-WarnUnusedResultAttr 0x561a85317b78 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x561a85317bd0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x561a85317c70 <col:20>
| `-OptimizeNoneAttr 0x561a85317cc8 <col:30>
|-CXXMethodDecl 0x561a85317d18 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x561a85317db8 <col:20>
| `-OptimizeNoneAttr 0x561a85317e10 <col:30>
|-CXXMethodDecl 0x561a85317e58 <line:81:5, col:58> col:49 used length 'uint32_t () const'
| |-NoInlineAttr 0x561a85317ef8 <col:20>
| `-OptimizeNoneAttr 0x561a85317f50 <col:30>
|-CXXMethodDecl 0x561a85317f98 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x561a85318058 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x561a85318120 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x561a853181e8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x561a853182a8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x561a853183c8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x561a85331c20 <col:54, line:99:5>
|   `-ReturnStmt 0x561a85331c10 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x561a85331bf8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x561a85331bc8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x561a853286a8
|         `-CXXThisExpr 0x561a85331bb8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x561a85318568 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x561a85318478 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x561a85331cd0 <col:67, line:103:5>
|   `-BinaryOperator 0x561a85331cb0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x561a85331c48 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x561a853286a8
|     | `-CXXThisExpr 0x561a85331c38 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x561a85331c98 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x561a85331c78 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x561a85318478 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x561a85318660 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x561a85331d50 <col:33, line:107:5>
|   `-ReturnStmt 0x561a85331d40 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x561a85331d28 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x561a85331cf8 <col:16> 'void *' lvalue ->_destructor_argument 0x561a85328710
|         `-CXXThisExpr 0x561a85331ce8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x561a85318720 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x561a85332380 <col:25, line:113:5>
|   |-ParenExpr 0x561a853320c8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x561a85332098 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x561a85331e08 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x561a85331de0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x561a85331da8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x561a85331d78 <col:24> '<bound member function type>' ->shared 0x561a85317798
|   |   |       `-ImplicitCastExpr 0x561a85331dc8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x561a85331d68 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x561a85331e68 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561a85331e48 <col:42> 'int' 0
|   |   `-CallExpr 0x561a85331ff8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x561a85331fe0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561a85331fc0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561a84e89690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561a85332038 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a85331ed8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x561a85332050 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a85331f00 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561a85332068 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561a85331f38 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x561a85332080 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561a85331fa8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561a85331f90 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561a85331f58 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x561a853322c8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x561a853320f8 <col:2> 'unsigned char *' lvalue ->_head 0x561a853284b0
|   | | `-CXXThisExpr 0x561a853320e8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x561a853322b0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x561a85332290 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x561a85332138 <col:10> 'unsigned char *' lvalue ->_data 0x561a85328518
|   |     | `-CXXThisExpr 0x561a85332128 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x561a85332278 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x561a85332258 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x561a85332178 <col:18> 'unsigned char *' lvalue ->_tail 0x561a85328580
|   |         | `-CXXThisExpr 0x561a85332168 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x561a85332240 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x561a85332220 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x561a853321b8 <col:26> 'unsigned char *' lvalue ->_end 0x561a853285e8
|   |             | `-CXXThisExpr 0x561a853321a8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x561a85332208 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x561a853321e8 <col:33> 'int' 0
|   `-BinaryOperator 0x561a85332360 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x561a853322f8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x561a853286a8
|     | `-CXXThisExpr 0x561a853322e8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x561a85332348 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x561a85332328 <col:16> 'int' 0
|-CXXMethodDecl 0x561a85318860 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x561a853187d0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561a85318908 <col:20>
| |-OptimizeNoneAttr 0x561a85318960 <col:30>
| `-WarnUnusedResultAttr 0x561a85318988 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x561a85318a58 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x561a853189c8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561a85318b00 <col:20>
| |-OptimizeNoneAttr 0x561a85318b58 <col:30>
| `-WarnUnusedResultAttr 0x561a85318b80 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x561a85318cb8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x561a85318bc0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x561a85318d60 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x561a85318e60 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x561a85318dd0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561a85318f08 <col:20>
| `-OptimizeNoneAttr 0x561a85318f60 <col:30>
|-CXXMethodDecl 0x561a85319028 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x561a85318f98 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x561a853190d0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x561a853191d0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x561a85319140 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x561a85319278 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x561a85319378 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x561a853192e8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561a85319420 <col:20>
| `-OptimizeNoneAttr 0x561a85319478 <col:30>
|-CXXMethodDecl 0x561a85319608 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x561a853194b8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x561a85319530 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x561a85331b78 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x561a853196b8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x561a853198b8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x561a85319730 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x561a853197a8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561a85319ac8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x561a85319978 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x561a853199f0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561a85319cd8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x561a85319b88 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x561a85319c08 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x561a85331b88 <col:39> 'int' 0
|-CXXMethodDecl 0x561a85319da8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x561a85319e70 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x561a85319f38 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x561a85319ff8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x561a8531a0c0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x561a8531a208 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x561a8531a178 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x561a8531a3d8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x561a8531a2c8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x561a8531a340 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561a8531a4a8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x561a8531a568 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x561a8531a608 <col:20>
| `-OptimizeNoneAttr 0x561a8531a660 <col:30>
|-CXXMethodDecl 0x561a8531a6b0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x561a8531a750 <col:20>
| `-OptimizeNoneAttr 0x561a8531a7a8 <col:30>
|-CXXMethodDecl 0x561a8531a7f8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x561a8531a8b8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x561a8531a980 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x561a8531aa20 <col:20>
| `-OptimizeNoneAttr 0x561a8531aa78 <col:30>
|-CXXMethodDecl 0x561a8531abc8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x561a8531aab8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x561a8531ab30 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561a8531ad18 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x561a8531ac88 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561a8531adf0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x561a8531aeb0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x561a8531af50 <col:20>
| `-OptimizeNoneAttr 0x561a8531afa8 <col:30>
|-CXXMethodDecl 0x561a8531aff8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x561a8531b098 <col:20>
| `-OptimizeNoneAttr 0x561a8531b0f0 <col:30>
|-CXXMethodDecl 0x561a8531b140 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x561a8531b208 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x561a8531b2a8 <col:20>
| `-OptimizeNoneAttr 0x561a8531b300 <col:30>
|-CXXMethodDecl 0x561a8531b348 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x561a8531b468 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x561a8531b5d8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x561a8531b518 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x561a8531b6c8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x561a8531b768 <col:20>
| `-OptimizeNoneAttr 0x561a8531b7c0 <col:30>
|-CXXMethodDecl 0x561a8531b810 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x561a8531b8d0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x561a8531bb08 <line:310:5, col:92> col:45 used set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x561a8531b980 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x561a8531b9f8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561a8531bbb8 <col:20>
| `-OptimizeNoneAttr 0x561a8531bc10 <col:30>
|-CXXMethodDecl 0x561a8531bcb8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x561a8531bd58 <col:20>
| `-OptimizeNoneAttr 0x561a8531bdb0 <col:30>
|-CXXMethodDecl 0x561a8531be00 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x561a8531bea0 <col:20>
| `-OptimizeNoneAttr 0x561a8531bef8 <col:30>
|-CXXMethodDecl 0x561a8531bf40 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x561a8531bfe0 <col:20>
| `-OptimizeNoneAttr 0x561a8531c038 <col:30>
|-CXXMethodDecl 0x561a8531c138 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x561a8531c070 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x561a8531c1e0 <col:20>
| `-OptimizeNoneAttr 0x561a8531c238 <col:30>
|-CXXMethodDecl 0x561a8531c3f8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x561a8531c270 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x561a8531c2e8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561a8531c4a8 <col:20>
| `-OptimizeNoneAttr 0x561a8531c500 <col:30>
|-CXXMethodDecl 0x561a8531c5a8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x561a8531c6c8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x561a8531c7e8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x561a8531c888 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x561a8531c8b0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x561a8531c9d8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x561a8531ca78 <col:20>
| `-OptimizeNoneAttr 0x561a8531cad0 <col:30>
|-CXXMethodDecl 0x561a8531cb78 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x561a8531cc18 <col:20>
| `-OptimizeNoneAttr 0x561a8531cc70 <col:30>
|-AccessSpecDecl 0x561a8531cc98 <line:344:3, col:9> col:3 public
|-EnumDecl 0x561a8531ccc0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x561a8531cdc0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x561a8531ce10 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561a8531cda0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x561a8531cd80 <col:14> 'int' 48
|-CXXMethodDecl 0x561a8531ce78 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x561a8531cf18 <col:20>
| `-OptimizeNoneAttr 0x561a8531cf70 <col:30>
|-CXXMethodDecl 0x561a8531cfe8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x561a8531d088 <col:20>
| `-OptimizeNoneAttr 0x561a8531d0e0 <col:30>
|-CXXMethodDecl 0x561a8531d1a8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x561a8531d118 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x561a8531d348 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x561a8531d4e8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x561a8531d3f8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x561a8531d590 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x561a8531d690 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561a8531da40 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a8531d670 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x561a8531d650 <col:9> 'int' 0
| |-EnumConstantDecl 0x561a8531d720 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561a8531da58 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a8531d700 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x561a8531d6e0 <col:14> 'int' 1
| |-EnumConstantDecl 0x561a8531d7b0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561a8531da70 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a8531d790 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x561a8531d770 <col:14> 'int' 2
| |-EnumConstantDecl 0x561a8531d840 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561a8531da88 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a8531d820 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x561a8531d800 <col:14> 'int' 3
| |-EnumConstantDecl 0x561a8531d8d0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561a8531daa0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a8531d8b0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x561a8531d890 <col:13> 'int' 4
| |-EnumConstantDecl 0x561a8531d960 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x561a8531dab8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a8531d940 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x561a8531d920 <col:13> 'int' 5
| `-EnumConstantDecl 0x561a8531d9f0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x561a8531dad0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561a8531d9d0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x561a8531d9b0 <col:14> 'int' 6
|-CXXMethodDecl 0x561a8531db38 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x561a8531dbd8 <col:20>
| `-OptimizeNoneAttr 0x561a8531dc30 <col:30>
|-CXXMethodDecl 0x561a8531dd28 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x561a8531dc68 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x561a8531ddd0 <col:20>
| `-OptimizeNoneAttr 0x561a8531de28 <col:30>
|-CXXMethodDecl 0x561a8531de98 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x561a8531dfc0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x561a8531e138 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x561a8531e070 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x561a8531e200 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x561a8531e2c8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x561a8531e408 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x561a8531e378 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x561a8531e4b0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x561a8531e5b0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x561a8531e7b0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a8531e590 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x561a8531e570 <col:23> 'int' 0
| |-EnumConstantDecl 0x561a8531e640 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x561a8531e7c8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a8531e620 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x561a8531e600 <col:45> 'int' 4
| |-EnumConstantDecl 0x561a8531e6d0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x561a8531e7e0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a8531e6b0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x561a8531e690 <col:24> 'int' 0
| `-EnumConstantDecl 0x561a8531e760 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x561a8531e7f8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561a8531e740 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x561a8531e720 <col:47> 'int' 16
|-CXXMethodDecl 0x561a8531e858 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x561a8531e9c8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x561a8531e908 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x561a8531ea70 <col:20>
| `-OptimizeNoneAttr 0x561a8531eac8 <col:30>
|-CXXMethodDecl 0x561a8531eb18 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x561a853324a0 <col:18, col:36>
|   `-ReturnStmt 0x561a85332490 <col:20, col:33>
|     `-ImplicitCastExpr 0x561a85332478 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x561a85332458 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x561a85332428 <col:27> '<bound member function type>' ->xanno 0x561a8531cb78
|           `-CXXThisExpr 0x561a85332418 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x561a8531ec10 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x561a853325b0 <col:30, col:48>
|   `-ReturnStmt 0x561a853325a0 <col:32, col:45>
|     `-ImplicitCastExpr 0x561a85332588 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x561a85332568 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x561a85332538 <col:39> '<bound member function type>' ->xanno 0x561a8531c9d8
|           `-CXXThisExpr 0x561a85332528 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x561a8531ecf8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x561a85332748 <col:24, col:50>
|   `-ReturnStmt 0x561a85332738 <col:26, col:47>
|     `-UnaryOperator 0x561a85332720 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x561a85332700 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x561a853326e8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x561a85332698 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x561a853279b8
|         |   `-CXXMemberCallExpr 0x561a85332678 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x561a85332648 <col:34> '<bound member function type>' ->xanno 0x561a8531cb78
|         |       `-CXXThisExpr 0x561a85332638 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x561a853326c8 <col:46> 'int' 0
|-CXXMethodDecl 0x561a8531ee00 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x561a85332918 <col:36, col:62>
|   `-ReturnStmt 0x561a85332908 <col:38, col:59>
|     `-UnaryOperator 0x561a853328f0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x561a853328d0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x561a853328b8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x561a85332830 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x561a853279b8
|         |   `-CXXMemberCallExpr 0x561a85332810 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x561a853327e0 <col:46> '<bound member function type>' ->xanno 0x561a8531c9d8
|         |       `-CXXThisExpr 0x561a853327d0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x561a85332860 <col:58> 'int' 0
|-CXXMethodDecl 0x561a8531ef18 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x561a85332ab0 <col:26, col:53>
|   `-ReturnStmt 0x561a85332aa0 <col:28, col:50>
|     `-UnaryOperator 0x561a85332a88 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x561a85332a68 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x561a85332a50 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x561a85332a00 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x561a85327cb8
|         |   `-CXXMemberCallExpr 0x561a853329e0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x561a853329b0 <col:36> '<bound member function type>' ->xanno 0x561a8531cb78
|         |       `-CXXThisExpr 0x561a853329a0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x561a85332a30 <col:49> 'int' 0
|-CXXMethodDecl 0x561a8531f038 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x561a85332c88 <col:38, col:65>
|   `-ReturnStmt 0x561a85332c78 <col:40, col:62>
|     `-UnaryOperator 0x561a85332c60 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x561a85332c40 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x561a85332c28 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x561a85332b98 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x561a85327cb8
|         |   `-CXXMemberCallExpr 0x561a85332b78 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x561a85332b48 <col:48> '<bound member function type>' ->xanno 0x561a8531c9d8
|         |       `-CXXThisExpr 0x561a85332b38 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x561a85332bc8 <col:61> 'int' 0
|-CXXMethodDecl 0x561a8531f1e8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x561a8531f0f0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x561a85333358 <col:34, line:463:5>
|   |-ParenExpr 0x561a853331a0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x561a85333170 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x561a85332dd8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561a85332da8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561a85332cf8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561a85332ce0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561a85332ca0 <col:23> 'int' lvalue ParmVar 0x561a8531f0f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561a85332cc0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561a85332d88 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561a85332d58 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561a85332d18 <col:33> 'int' lvalue ParmVar 0x561a8531f0f0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x561a85332d70 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x561a85332d38 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561a8531cdc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x561a85332e38 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561a85332e18 <col:56> 'int' 0
|   |   `-CallExpr 0x561a853330d0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x561a853330b8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561a85333098 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561a84e89690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561a85333110 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a85332f28 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x561a85333128 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a85332f58 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561a85333140 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561a85332f90 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x561a85333158 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561a85333080 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561a85333068 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561a85333028 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x561a85333348 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x561a85333330 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x561a85333310 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x561a853332e0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x561a85333290 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x561a853279b8
|         |   `-CXXMemberCallExpr 0x561a85333270 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x561a85333240 <col:9> '<bound member function type>' ->xanno 0x561a8531c9d8
|         |       `-CXXThisExpr 0x561a85333230 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x561a853332f8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x561a853332c0 <col:21> 'int' lvalue ParmVar 0x561a8531f0f0 'i' 'int'
|-CXXMethodDecl 0x561a8531f438 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x561a8531f2a8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x561a8531f320 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x561a853339e8 <col:40, line:472:5>
|   |-ParenExpr 0x561a85333800 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x561a853337d0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x561a853334b0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561a85333480 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561a853333d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561a853333b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561a85333378 <col:23> 'int' lvalue ParmVar 0x561a8531f2a8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561a85333398 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561a85333460 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561a85333430 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561a853333f0 <col:33> 'int' lvalue ParmVar 0x561a8531f2a8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x561a85333448 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x561a85333410 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561a8531cdc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x561a85333510 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561a853334f0 <col:56> 'int' 0
|   |   `-CallExpr 0x561a85333730 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x561a85333718 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561a853336f8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561a84e89690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561a85333770 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a85333580 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x561a85333788 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a853335b0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561a853337a0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561a853335e8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x561a853337b8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561a853336e0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561a853336c8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561a85333688 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x561a853339c8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x561a85333970 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x561a85333940 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x561a853338f0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x561a853279b8
|     | |   `-CXXMemberCallExpr 0x561a853338d0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x561a853338a0 <col:2> '<bound member function type>' ->xanno 0x561a8531cb78
|     | |       `-CXXThisExpr 0x561a85333890 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x561a85333958 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x561a85333920 <col:14> 'int' lvalue ParmVar 0x561a8531f2a8 'i' 'int'
|     `-ImplicitCastExpr 0x561a853339b0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x561a85333990 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x561a8531f320 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x561a8531f5f8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x561a8531f500 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x561a85334168 <col:36, line:485:5>
|   |-ParenExpr 0x561a85333ed0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x561a85333ea0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561a85333b80 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561a85333b50 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561a85333a60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561a85333a48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561a85333a08 <col:23> 'int' lvalue ParmVar 0x561a8531f500 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561a85333a28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561a85333b30 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561a85333b18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561a85333a80 <col:33> 'int' lvalue ParmVar 0x561a8531f500 'i' 'int'
|   |   |     `-BinaryOperator 0x561a85333af8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561a85333ae0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561a85333aa0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561a8531cdc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561a85333ac0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x561a85333be0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561a85333bc0 <col:60> 'int' 0
|   |   `-CallExpr 0x561a85333e00 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561a85333de8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561a85333dc8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561a84e89690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561a85333e40 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a85333c50 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x561a85333e58 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a85333c88 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561a85333e70 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561a85333cc0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x561a85333e88 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561a85333db0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561a85333d98 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561a85333d58 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x561a85334158 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x561a85334140 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x561a85334128 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x561a853340f8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x561a85334098 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x561a85334068 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x561a85333fe0 <col:61, col:70> 'char const[48]' lvalue ->c 0x561a85327890
|             |   `-CXXMemberCallExpr 0x561a85333fc0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x561a85333f90 <col:61> '<bound member function type>' ->xanno 0x561a8531c9d8
|             |       `-CXXThisExpr 0x561a85333f80 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x561a85334080 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x561a85334010 <col:74> 'int' lvalue ParmVar 0x561a8531f500 'i' 'int'
|-CXXMethodDecl 0x561a8531f848 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x561a8531f6b8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x561a8531f730 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x561a853348b8 <col:42, line:500:5>
|   |-ParenExpr 0x561a85334650 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x561a85334620 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561a85334300 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561a853342d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561a853341e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561a853341c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561a85334188 <col:23> 'int' lvalue ParmVar 0x561a8531f6b8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561a853341a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561a853342b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561a85334298 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561a85334200 <col:33> 'int' lvalue ParmVar 0x561a8531f6b8 'i' 'int'
|   |   |     `-BinaryOperator 0x561a85334278 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561a85334260 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561a85334220 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561a8531cdc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561a85334240 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x561a85334360 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561a85334340 <col:60> 'int' 0
|   |   `-CallExpr 0x561a85334580 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561a85334568 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561a85334548 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561a84e89690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561a853345c0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a853343d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x561a853345d8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a85334408 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561a853345f0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561a85334440 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x561a85334608 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561a85334530 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561a85334518 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561a853344d8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x561a85334898 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x561a85334848 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x561a85334818 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x561a853347c0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x561a85334790 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x561a85334740 <col:48, col:57> 'char [48]' lvalue ->c 0x561a85327890
|     |     |   `-CXXMemberCallExpr 0x561a85334720 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x561a853346f0 <col:48> '<bound member function type>' ->xanno 0x561a8531cb78
|     |     |       `-CXXThisExpr 0x561a853346e0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x561a853347a8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x561a85334770 <col:61> 'int' lvalue ParmVar 0x561a8531f6b8 'i' 'int'
|     `-ImplicitCastExpr 0x561a85334880 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x561a85334860 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x561a8531f730 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x561a8531fa08 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x561a8531f910 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x561a85335018 <col:35, line:513:5>
|   |-ParenExpr 0x561a85334d28 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x561a85334cf8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561a85334a50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561a85334a20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561a85334930 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561a85334918 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561a853348d8 <col:23> 'int' lvalue ParmVar 0x561a8531f910 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561a853348f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561a85334a00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561a853349e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561a85334950 <col:33> 'int' lvalue ParmVar 0x561a8531f910 'i' 'int'
|   |   |     `-BinaryOperator 0x561a853349c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561a853349b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561a85334970 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561a8531cdc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561a85334990 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x561a85334ab0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561a85334a90 <col:60> 'int' 0
|   |   `-CallExpr 0x561a85334c58 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561a85334c40 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561a85334c20 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561a84e89690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561a85334c98 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a85334b20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x561a85334cb0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a85334b58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561a85334cc8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561a85334b90 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x561a85334ce0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561a85334c08 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561a85334bf0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561a85334bb0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x561a85335008 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x561a85334ff0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x561a85334fd8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x561a85334fa8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x561a85334f20 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x561a85334ef0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x561a85334ea0 <col:60, col:69> 'char const[48]' lvalue ->c 0x561a85327890
|             |   `-CXXMemberCallExpr 0x561a85334e80 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x561a85334e50 <col:60> '<bound member function type>' ->xanno 0x561a8531c9d8
|             |       `-CXXThisExpr 0x561a85334e40 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x561a85334f08 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x561a85334ed0 <col:73> 'int' lvalue ParmVar 0x561a8531f910 'i' 'int'
|-CXXMethodDecl 0x561a8531fc58 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x561a8531fac8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x561a8531fb40 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x561a85335738 <col:41, line:528:5>
|   |-ParenExpr 0x561a853354c0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x561a85335490 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561a853351b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561a85335180 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561a85335090 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561a85335078 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561a85335038 <col:23> 'int' lvalue ParmVar 0x561a8531fac8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561a85335058 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561a85335160 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561a85335148 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561a853350b0 <col:33> 'int' lvalue ParmVar 0x561a8531fac8 'i' 'int'
|   |   |     `-BinaryOperator 0x561a85335128 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561a85335110 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561a853350d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561a8531cdc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561a853350f0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x561a85335210 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561a853351f0 <col:60> 'int' 0
|   |   `-CallExpr 0x561a853353f0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561a853353d8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561a853353b8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561a84e89690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561a85335430 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a85335280 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x561a85335448 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a853352b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561a85335460 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561a853352f0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x561a85335478 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561a853353a0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561a85335388 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561a85335348 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x561a85335718 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x561a853356c8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x561a85335698 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x561a85335640 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x561a85335600 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x561a853355b0 <col:47, col:56> 'char [48]' lvalue ->c 0x561a85327890
|     |     |   `-CXXMemberCallExpr 0x561a85335590 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x561a85335560 <col:47> '<bound member function type>' ->xanno 0x561a8531cb78
|     |     |       `-CXXThisExpr 0x561a85335550 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x561a85335618 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x561a853355e0 <col:60> 'int' lvalue ParmVar 0x561a8531fac8 'i' 'int'
|     `-ImplicitCastExpr 0x561a85335700 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x561a853356e0 <col:65> 'int16_t':'short' lvalue ParmVar 0x561a8531fb40 'x' 'int16_t':'short'
|-CXXMethodDecl 0x561a8531fe18 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x561a8531fd20 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x561a85335e08 <col:36, line:541:5>
|   |-ParenExpr 0x561a85335ba8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x561a85335b78 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561a853358d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561a853358a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561a853357b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561a85335798 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561a85335758 <col:23> 'int' lvalue ParmVar 0x561a8531fd20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561a85335778 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561a85335880 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561a85335868 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561a853357d0 <col:33> 'int' lvalue ParmVar 0x561a8531fd20 'i' 'int'
|   |   |     `-BinaryOperator 0x561a85335848 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561a85335830 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561a853357f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561a8531cdc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561a85335810 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x561a85335930 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561a85335910 <col:60> 'int' 0
|   |   `-CallExpr 0x561a85335ad8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561a85335ac0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561a85335aa0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561a84e89690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561a85335b18 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a853359a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x561a85335b30 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a853359d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561a85335b48 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561a85335a10 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x561a85335b60 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561a85335a88 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561a85335a70 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561a85335a30 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x561a85335df8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x561a85335de0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x561a85335dc8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x561a85335d98 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x561a85335d40 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x561a85335d10 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x561a85335cc0 <col:61, col:70> 'char const[48]' lvalue ->c 0x561a85327890
|             |   `-CXXMemberCallExpr 0x561a85335ca0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x561a85335c70 <col:61> '<bound member function type>' ->xanno 0x561a8531c9d8
|             |       `-CXXThisExpr 0x561a85335c60 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x561a85335d28 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x561a85335cf0 <col:74> 'int' lvalue ParmVar 0x561a8531fd20 'i' 'int'
|-CXXMethodDecl 0x561a8531ffe8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x561a8531fed8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x561a8531ff50 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x561a85320098 <col:20>
| `-OptimizeNoneAttr 0x561a853200f0 <col:30>
|-CXXMethodDecl 0x561a85320228 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x561a85320130 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x561a853364d8 <col:35, line:562:5>
|   |-ParenExpr 0x561a85336278 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x561a85336248 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561a85335fa0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561a85335f70 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561a85335e80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561a85335e68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561a85335e28 <col:23> 'int' lvalue ParmVar 0x561a85320130 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561a85335e48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561a85335f50 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561a85335f38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561a85335ea0 <col:33> 'int' lvalue ParmVar 0x561a85320130 'i' 'int'
|   |   |     `-BinaryOperator 0x561a85335f18 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561a85335f00 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561a85335ec0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561a8531cdc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561a85335ee0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x561a85336000 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561a85335fe0 <col:60> 'int' 0
|   |   `-CallExpr 0x561a853361a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561a85336190 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561a85336170 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561a84e89690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561a853361e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a85336070 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x561a85336200 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a853360a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561a85336218 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561a853360e0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x561a85336230 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561a85336158 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561a85336140 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561a85336100 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x561a853364c8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x561a853364b0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x561a85336498 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x561a85336468 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x561a85336410 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x561a853363e0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x561a85336390 <col:60, col:69> 'char const[48]' lvalue ->c 0x561a85327890
|             |   `-CXXMemberCallExpr 0x561a85336370 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x561a85336340 <col:60> '<bound member function type>' ->xanno 0x561a8531c9d8
|             |       `-CXXThisExpr 0x561a85336330 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x561a853363f8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x561a853363c0 <col:73> 'int' lvalue ParmVar 0x561a85320130 'i' 'int'
|-CXXMethodDecl 0x561a85320438 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x561a853202e8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x561a85320360 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x561a85336bb8 <col:41, line:577:5>
|   |-ParenExpr 0x561a85336948 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x561a85336918 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561a85336670 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561a85336640 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561a85336550 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561a85336538 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561a853364f8 <col:23> 'int' lvalue ParmVar 0x561a853202e8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561a85336518 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561a85336620 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561a85336608 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561a85336570 <col:33> 'int' lvalue ParmVar 0x561a853202e8 'i' 'int'
|   |   |     `-BinaryOperator 0x561a853365e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561a853365d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561a85336590 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561a8531cdc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561a853365b0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x561a853366d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561a853366b0 <col:60> 'int' 0
|   |   `-CallExpr 0x561a85336878 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561a85336860 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561a85336840 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561a84e89690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561a853368b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a85336740 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x561a853368d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a85336778 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561a853368e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561a853367b0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x561a85336900 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561a85336828 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561a85336810 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561a853367d0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x561a85336b98 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x561a85336b48 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x561a85336b18 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x561a85336ab8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x561a85336a88 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x561a85336a38 <col:47, col:56> 'char [48]' lvalue ->c 0x561a85327890
|     |     |   `-CXXMemberCallExpr 0x561a85336a18 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x561a853369e8 <col:47> '<bound member function type>' ->xanno 0x561a8531cb78
|     |     |       `-CXXThisExpr 0x561a853369d8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x561a85336aa0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x561a85336a68 <col:60> 'int' lvalue ParmVar 0x561a853202e8 'i' 'int'
|     `-ImplicitCastExpr 0x561a85336b80 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x561a85336b60 <col:65> 'int32_t':'int' lvalue ParmVar 0x561a85320360 'x' 'int32_t':'int'
|-CXXMethodDecl 0x561a853205f8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x561a85320500 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x561a853372e8 <col:36, line:591:5>
|   |-ParenExpr 0x561a85337028 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x561a85336ff8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561a85336d50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561a85336d20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561a85336c30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561a85336c18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561a85336bd8 <col:23> 'int' lvalue ParmVar 0x561a85320500 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561a85336bf8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561a85336d00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561a85336ce8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561a85336c50 <col:33> 'int' lvalue ParmVar 0x561a85320500 'i' 'int'
|   |   |     `-BinaryOperator 0x561a85336cc8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561a85336cb0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561a85336c70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561a8531cdc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561a85336c90 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x561a85336db0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561a85336d90 <col:60> 'int' 0
|   |   `-CallExpr 0x561a85336f58 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561a85336f40 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561a85336f20 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561a84e89690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561a85336f98 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a85336e20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x561a85336fb0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a85336e58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561a85336fc8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561a85336e90 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x561a85336fe0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561a85336f08 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561a85336ef0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561a85336eb0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x561a853372d8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x561a853372c0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x561a853372a8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x561a85337278 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x561a853371f0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x561a853371c0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x561a85337170 <col:61, col:70> 'char const[48]' lvalue ->c 0x561a85327890
|             |   `-CXXMemberCallExpr 0x561a85337150 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x561a85337120 <col:61> '<bound member function type>' ->xanno 0x561a8531c9d8
|             |       `-CXXThisExpr 0x561a85337110 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x561a853371d8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x561a853371a0 <col:74> 'int' lvalue ParmVar 0x561a85320500 'i' 'int'
|-CXXMethodDecl 0x561a85320848 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x561a853206b8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x561a85320730 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x561a853379c8 <col:42, line:606:5>
|   |-ParenExpr 0x561a85337758 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x561a85337728 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x561a85337480 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561a85337450 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561a85337360 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561a85337348 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561a85337308 <col:23> 'int' lvalue ParmVar 0x561a853206b8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561a85337328 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561a85337430 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x561a85337418 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561a85337380 <col:33> 'int' lvalue ParmVar 0x561a853206b8 'i' 'int'
|   |   |     `-BinaryOperator 0x561a853373f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561a853373e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561a853373a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561a8531cdc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x561a853373c0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x561a853374e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561a853374c0 <col:60> 'int' 0
|   |   `-CallExpr 0x561a85337688 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x561a85337670 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561a85337650 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561a84e89690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561a853376c8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a85337550 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x561a853376e0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a85337588 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561a853376f8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561a853375c0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x561a85337710 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561a85337638 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561a85337620 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561a853375e0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x561a853379a8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x561a85337958 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x561a85337928 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x561a853378c8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x561a85337898 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x561a85337848 <col:48, col:57> 'char [48]' lvalue ->c 0x561a85327890
|     |     |   `-CXXMemberCallExpr 0x561a85337828 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x561a853377f8 <col:48> '<bound member function type>' ->xanno 0x561a8531cb78
|     |     |       `-CXXThisExpr 0x561a853377e8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x561a853378b0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x561a85337878 <col:61> 'int' lvalue ParmVar 0x561a853206b8 'i' 'int'
|     `-ImplicitCastExpr 0x561a85337990 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x561a85337970 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x561a85320730 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x561a853209e0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x561a85320910 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x561a85338238 <col:33, line:620:5>
|   |-ParenExpr 0x561a85337fb0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x561a85337f80 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x561a85337bd0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561a85337ba0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561a85337a40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561a85337a28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561a853379e8 <col:23> 'int' lvalue ParmVar 0x561a85320910 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561a85337a08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561a85337b80 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x561a85337b68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561a85337a60 <col:33> 'int' lvalue ParmVar 0x561a85320910 'i' 'int'
|   |   |     `-BinaryOperator 0x561a85337b48 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561a85337b30 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561a85337a80 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561a8531cdc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x561a85337b08 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x561a85337af0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x561a85337ab8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x561a85337c30 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561a85337c10 <col:79> 'int' 0
|   |   `-CallExpr 0x561a85337ee0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x561a85337ec8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561a85337ea8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561a84e89690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561a85337f20 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a85337d18 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x561a85337f38 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a85337d60 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561a85337f50 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561a85337d98 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x561a85337f68 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561a85337e90 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561a85337e78 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561a85337e38 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x561a85338228 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x561a85338210 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x561a853381f8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x561a853381c8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x561a85338140 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x561a85338110 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x561a853380c0 <col:67, col:76> 'char const[48]' lvalue ->c 0x561a85327890
|             |   `-CXXMemberCallExpr 0x561a853380a0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x561a85338070 <col:67> '<bound member function type>' ->xanno 0x561a8531c9d8
|             |       `-CXXThisExpr 0x561a85338060 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x561a85338128 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x561a853380f0 <col:80> 'int' lvalue ParmVar 0x561a85320910 'i' 'int'
|-CXXMethodDecl 0x561a85320bf8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x561a85320aa0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x561a85320b20 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x561a85338a60 <col:45, line:635:5>
|   |-ParenExpr 0x561a853387a8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x561a85338778 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x561a85338440 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x561a85338410 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x561a853382b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x561a85338298 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x561a85338258 <col:23> 'int' lvalue ParmVar 0x561a85320aa0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x561a85338278 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x561a853383f0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x561a853383d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x561a853382d0 <col:33> 'int' lvalue ParmVar 0x561a85320aa0 'i' 'int'
|   |   |     `-BinaryOperator 0x561a853383b8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x561a853383a0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x561a853382f0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x561a8531cdc0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x561a85338378 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x561a85338360 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x561a85338328 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x561a853384a0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x561a85338480 <col:79> 'int' 0
|   |   `-CallExpr 0x561a853386d8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x561a853386c0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x561a853386a0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561a84e89690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x561a85338718 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a85338510 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x561a85338730 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x561a85338558 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x561a85338748 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x561a85338590 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x561a85338760 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x561a85338688 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x561a85338670 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x561a85338628 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x561a85338a40 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x561a853389a8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x561a85338978 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x561a85338918 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x561a853388e8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x561a85338898 <col:54, col:63> 'char [48]' lvalue ->c 0x561a85327890
|     |     |   `-CXXMemberCallExpr 0x561a85338878 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x561a85338848 <col:54> '<bound member function type>' ->xanno 0x561a8531cb78
|     |     |       `-CXXThisExpr 0x561a85338838 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x561a85338900 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x561a853388c8 <col:67> 'int' lvalue ParmVar 0x561a85320aa0 'i' 'int'
|     `-CXXConstCastExpr 0x561a85338a10 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x561a853389f8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x561a853389c0 <col:91> 'const void *' lvalue ParmVar 0x561a85320b20 'x' 'const void *'
|-CXXMethodDecl 0x561a85320cc8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x561a85338ae8 <col:34, line:640:5>
|   `-ReturnStmt 0x561a85338ad8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x561a85338ac0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x561a85338a90 <col:16> 'Packet *' lvalue ->_data_packet 0x561a85328448
|         `-CXXThisExpr 0x561a85338a80 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x561a85320e08 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x561a85320d78 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x561a85331ba8 <col:46> 'bool' true
|-CXXMethodDecl 0x561a85320f88 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x561a85320ec0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x561a85321030 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x561a853217e0 <line:660:22> "" ""
| |-EnumConstantDecl 0x561a85321130 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561a85321850 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a85321110 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x561a853210f0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x561a85316290 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x561a853211c0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561a85321868 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a853211a0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x561a85321180 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x561a85316320 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x561a85321250 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561a85321880 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a85321230 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x561a85321210 <col:21> 'int' 0
| |-EnumConstantDecl 0x561a853212e0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561a85321898 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a853212c0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x561a853212a0 <col:19> 'int' 16
| |-EnumConstantDecl 0x561a85321370 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561a853218b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a85321350 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x561a85321330 <col:21> 'int' 16
| |-EnumConstantDecl 0x561a85321400 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561a853218c8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a853213e0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x561a853213c0 <col:19> 'int' 32
| |-EnumConstantDecl 0x561a85321490 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561a853218e0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a85321470 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x561a85321450 <col:19> 'int' EnumConstant 0x561a853212e0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x561a85321520 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561a853218f8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a85321500 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x561a853214e0 <col:19> 'int' EnumConstant 0x561a85321400 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x561a853215f0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561a85321910 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a853215d0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x561a853215b0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x561a85321570 <col:23> 'int' EnumConstant 0x561a85321520 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x561a85321590 <col:40> 'int' 2
| |-EnumConstantDecl 0x561a853216c0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x561a85321928 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a853216a0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x561a85321680 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x561a85321640 <col:23> 'int' EnumConstant 0x561a85321520 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x561a85321660 <col:40> 'int' 4
| `-EnumConstantDecl 0x561a85321790 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x561a85321940 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561a85321770 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x561a85321750 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x561a85321710 <col:23> 'int' EnumConstant 0x561a85321520 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x561a85321730 <col:40> 'int' 8
|-CXXMethodDecl 0x561a85321980 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x561a85321a20 <col:68> "" ""
|-CXXMethodDecl 0x561a85321ab8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x561a85321b58 <col:45> "" ""
|-CXXMethodDecl 0x561a85321bf0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x561a85321c90 <col:57> "" ""
|-CXXMethodDecl 0x561a85321d28 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x561a85321dc8 <col:45> "" ""
|-CXXMethodDecl 0x561a85321e60 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x561a85321f00 <col:57> "" ""
|-CXXMethodDecl 0x561a85321f90 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x561a85322030 <col:51> "" ""
|-CXXMethodDecl 0x561a853220c0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x561a85322160 <col:63> "" ""
|-CXXMethodDecl 0x561a853221f0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x561a85322290 <col:53> "" ""
|-CXXMethodDecl 0x561a85322320 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x561a853223c0 <col:65> "" ""
|-CXXMethodDecl 0x561a853224d8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x561a85322448 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x561a85322580 <col:61> "" ""
|-CXXMethodDecl 0x561a85322718 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x561a85322608 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x561a85322680 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x561a853227c8 <col:67> "" ""
|-CXXMethodDecl 0x561a853228e0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x561a85322850 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x561a85322988 <col:63> "" ""
|-CXXMethodDecl 0x561a85322b20 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x561a85322a10 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x561a85322a88 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x561a85322bd0 <col:69> "" ""
|-CXXMethodDecl 0x561a85322ce8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x561a85322c58 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x561a85322d90 <col:63> "" ""
|-CXXMethodDecl 0x561a85325468 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x561a85325358 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x561a853253d0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561a85325518 <col:69> "" ""
|-CXXMethodDecl 0x561a85325630 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x561a853255a0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x561a853256d8 <col:62> "" ""
|-CXXMethodDecl 0x561a85325870 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x561a85325760 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x561a853257d8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x561a85325920 <col:68> "" ""
|-CXXMethodDecl 0x561a85325a38 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x561a853259a8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x561a85325ae0 <col:63> "" ""
|-CXXMethodDecl 0x561a85325c78 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x561a85325b68 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x561a85325be0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x561a85325d28 <col:69> "" ""
|-CXXMethodDecl 0x561a85325db8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x561a85325e58 <col:64> "" ""
|-CXXMethodDecl 0x561a85325ee8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x561a85325f88 <col:52> "" ""
|-CXXMethodDecl 0x561a85326018 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x561a853260b8 <col:67> "" ""
|-CXXMethodDecl 0x561a85326148 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x561a853261e8 <col:55> "" ""
|-CXXMethodDecl 0x561a85326300 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x561a85326270 <col:32> col:35 'int'
| `-DeprecatedAttr 0x561a853263a8 <col:58> "" ""
|-CXXMethodDecl 0x561a85326540 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x561a85326430 <col:33> col:36 'int'
| |-ParmVarDecl 0x561a853264a8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x561a853265f0 <col:62> "" ""
|-CXXMethodDecl 0x561a85326708 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x561a85326678 <col:32> col:35 'int'
| `-DeprecatedAttr 0x561a853267b0 <col:58> "" ""
|-CXXMethodDecl 0x561a85326948 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x561a85326838 <col:33> col:36 'int'
| |-ParmVarDecl 0x561a853268b0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x561a853269f8 <col:62> "" ""
|-CXXMethodDecl 0x561a85326b10 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x561a85326a80 <col:34> col:37 'int'
| `-DeprecatedAttr 0x561a85326bb8 <col:60> "" ""
|-CXXMethodDecl 0x561a85326d50 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x561a85326c40 <col:34> col:37 'int'
| |-ParmVarDecl 0x561a85326cb8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x561a85326e00 <col:64> "" ""
|-CXXMethodDecl 0x561a85326f18 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x561a85326e88 <col:32> col:35 'int'
| `-DeprecatedAttr 0x561a85326fc0 <col:58> "" ""
|-CXXMethodDecl 0x561a85327158 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x561a85327048 <col:33> col:36 'int'
| |-ParmVarDecl 0x561a853270c0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x561a85327208 <col:62> "" ""
|-CXXMethodDecl 0x561a85327320 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x561a85327290 <col:33> col:36 'int'
| `-DeprecatedAttr 0x561a853273c8 <col:59> "" ""
|-CXXMethodDecl 0x561a85327560 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x561a85327450 <col:33> col:36 'int'
| |-ParmVarDecl 0x561a853274c8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x561a85327610 <col:63> "" ""
|-AccessSpecDecl 0x561a85327680 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x561a853276a8 prev 0x561a8531c8b0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x561a853277a0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x561a85327890 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x561a853279b8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x561a85327b38 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x561a85327cb8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x561a85327e38 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x561a85338c68 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x561a853394d8 <col:11>
| |-CXXDestructorDecl 0x561a85338d40 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x561a85338e78 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x561a85338e78
| | `-ParmVarDecl 0x561a85338f88 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x561a85339028 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x561a85339028
| | `-ParmVarDecl 0x561a85339138 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x561a8533bef8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x561a8533c008 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x561a8533c288 <col:11>
| |   `-ReturnStmt 0x561a8533c278 <col:11>
| |     `-UnaryOperator 0x561a8533c260 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x561a8533c250 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x561a8533c078 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x561a8533c078
|   `-ParmVarDecl 0x561a8533c188 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x561a85327ea0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x561a85327fb8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x561a85328058 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x561a853280c0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x561a85328128 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x561a85328190 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x561a853281f0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x561a853282b0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x561a85328310 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x561a85328370 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x561a85338b78 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x561a85328058 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x561a853394e8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x561a85339540 <col:12>
| |-CXXConstructorDecl 0x561a853391a8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x561a853391a8
| | `-ParmVarDecl 0x561a853392b8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x561a85339358 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x561a85339358
| | `-ParmVarDecl 0x561a85339468 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x561a8533b5e0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x561a853283e8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x561a85328448 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x561a853284b0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x561a85328518 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x561a85328580 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x561a853285e8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x561a85328648 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x561a853286a8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x561a85328710 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x561a85328798 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x561a853283e8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x561a85338b10 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x561a85328648 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x561a85339550 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x561a853395b0 <col:21, line:755:5>
|-CXXConstructorDecl 0x561a85328938 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x561a85328878 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x561a85328a30 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x561a85328c18 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x561a85328b20 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x561a85328ee8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x561a85328cd0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561a85328d48 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x561a85328dc0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561a85329108 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x561a85328fb8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x561a85329030 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x561a853316e8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x561a853291c8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x561a85329240 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x561a853292b8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x561a85331840 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x561a853317b0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561a85331988 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x561a853318f8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x561a85331a80 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class WritablePacket
         0 |   class Packet (base)
         0 |     class atomic_uint32_t _use_count
         0 |       uint32_t _val
         8 |     class Packet * _data_packet
        16 |     unsigned char * _head
        24 |     unsigned char * _data
        32 |     unsigned char * _tail
        40 |     unsigned char * _end
        48 |     struct Packet::AllAnno _aa
        48 |       union Packet::Anno cb
        48 |         char [48] c
        48 |         uint8_t [48] u8
        48 |         uint16_t [24] u16
        48 |         uint32_t [12] u32
        48 |         uint64_t [6] u64
        96 |       unsigned char * mac
       104 |       unsigned char * nh
       112 |       unsigned char * h
       120 |       enum Packet::PacketType pkt_type
       124 |       char [8] timestamp
       136 |       class Packet * next
       144 |       class Packet * prev
       152 |     Packet::buffer_destructor_type _destructor
       160 |     void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561a85339650 prev 0x561a85315f10 <../dummy_inc/click/packet.hh:778:1, line:816:1> line:778:7 referenced class WritablePacket definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Packet'
|-CXXRecordDecl 0x561a85339788 <col:1, col:7> col:7 implicit referenced class WritablePacket
|-AccessSpecDecl 0x561a85339818 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x561a853398c0 <line:780:5, col:62> col:55 used data 'unsigned char *() const'
| |-NoInlineAttr 0x561a85339960 <col:20>
| `-OptimizeNoneAttr 0x561a853399b8 <col:30>
|-CXXMethodDecl 0x561a85339a08 <line:781:5, col:66> col:55 end_data 'unsigned char *() const'
| |-NoInlineAttr 0x561a85339aa8 <col:20>
| `-OptimizeNoneAttr 0x561a85339b00 <col:30>
|-CXXMethodDecl 0x561a85339b50 <line:782:5, col:36> col:27 buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x561a85339c18 <line:783:5, col:40> col:27 end_buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x561a85339ce0 <line:784:5, col:40> col:27 mac_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x561a85339df8 <line:785:5, col:40> col:25 ether_header 'click_ether *() const' inline
|-CXXMethodDecl 0x561a85339ec0 <line:786:5, col:72> col:55 network_header 'unsigned char *() const'
| |-NoInlineAttr 0x561a85339f60 <col:20>
| `-OptimizeNoneAttr 0x561a85339fb8 <col:30>
|-CXXMethodDecl 0x561a8533a028 <line:787:5, col:62> col:50 ip_header 'click_ip *() const'
| |-NoInlineAttr 0x561a8533a0c8 <col:20>
| `-OptimizeNoneAttr 0x561a8533a120 <col:30>
|-CXXMethodDecl 0x561a8533a1c8 <line:788:5, col:64> col:51 ip6_header 'click_ip6 *() const'
| |-NoInlineAttr 0x561a8533a268 <col:20>
| `-OptimizeNoneAttr 0x561a8533a2c0 <col:30>
|-CXXMethodDecl 0x561a8533a310 <line:789:5, col:46> col:27 transport_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x561a8533a428 <line:790:5, col:38> col:24 icmp_header 'click_icmp *() const' inline
|-CXXMethodDecl 0x561a8533a548 <line:791:5, col:36> col:23 tcp_header 'click_tcp *() const' inline
|-CXXMethodDecl 0x561a8533a668 <line:792:5, col:36> col:23 udp_header 'click_udp *() const' inline
|-CXXMethodDecl 0x561a8533a730 <line:795:5, col:73> col:27 buffer_data 'unsigned char *() const' inline
| `-DeprecatedAttr 0x561a8533a7d0 <col:62> "" ""
|-AccessSpecDecl 0x561a8533a840 <line:798:2, col:9> col:2 private
|-CXXConstructorDecl 0x561a8533a8a0 <line:800:5, col:31> col:12 WritablePacket 'void ()' inline
| |-CXXCtorInitializer 'Packet'
| | `-CXXConstructExpr 0x561a8533b498 <col:12> 'Packet' 'void ()'
| `-CompoundStmt 0x561a8533b6c0 <col:29, col:31>
|-CXXMethodDecl 0x561a8533a968 <line:802:5, col:28> col:17 initialize 'void ()' inline
|-CXXConstructorDecl 0x561a8533aaa8 <line:804:5, col:35> col:5 WritablePacket 'void (const Packet &)'
| `-ParmVarDecl 0x561a8533aa18 <col:20, col:34> col:34 x 'const Packet &'
|-CXXDestructorDecl 0x561a8533aba0 <line:805:5, col:25> col:5 ~WritablePacket 'void () noexcept'
| `-CompoundStmt 0x561a8533b6d0 <col:23, col:25>
|-CXXMethodDecl 0x561a8533ad58 <line:808:5, col:56> col:28 pool_allocate 'WritablePacket *(bool)' static
| `-ParmVarDecl 0x561a8533ac90 <col:42, col:47> col:47 with_data 'bool'
|-CXXMethodDecl 0x561a8533b028 <line:809:5, line:810:24> line:809:28 pool_allocate 'WritablePacket *(uint32_t, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x561a8533ae10 <col:42, col:51> col:51 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x561a8533ae88 <col:61, col:70> col:70 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x561a8533af00 <line:810:7, col:16> col:16 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x561a8533b1b8 <line:811:5, col:42> col:17 recycle 'void (WritablePacket *)' static
| `-ParmVarDecl 0x561a8533b0f0 <col:25, col:41> col:41 p 'WritablePacket *'
|-FriendDecl 0x561a8533b2b0 <line:814:5, col:18> col:12 'class Packet':'Packet'
`-CXXConstructorDecl 0x561a8533b318 <line:778:7> col:7 implicit WritablePacket 'void (const WritablePacket &)' inline default noexcept-unevaluated 0x561a8533b318
  `-ParmVarDecl 0x561a8533b428 <col:7> col:7 'const WritablePacket &'

Layout: <CGRecordLayout
  LLVMType:%class.WritablePacket = type { %class.Packet }
  NonVirtualBaseLLVMType:%class.WritablePacket = type { %class.Packet }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561a85083be8 </usr/include/netinet/in.h:31:1, line:34:3> line:31:8 struct in_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561a85083d08 <col:1, col:8> col:8 implicit struct in_addr
|-FieldDecl 0x561a85083dd0 <line:33:5, col:15> col:15 referenced s_addr 'in_addr_t':'unsigned int'
|-CXXConstructorDecl 0x561a851543a0 <line:31:8> col:8 implicit used in_addr 'void () noexcept' inline default trivial
| `-CompoundStmt 0x561a851596b8 <col:8>
|-CXXConstructorDecl 0x561a851544a8 <col:8> col:8 implicit constexpr in_addr 'void (const in_addr &)' inline default trivial noexcept-unevaluated 0x561a851544a8
| `-ParmVarDecl 0x561a851545b8 <col:8> col:8 'const in_addr &'
|-CXXConstructorDecl 0x561a85154658 <col:8> col:8 implicit used constexpr in_addr 'void (in_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x561a85154768 <col:8> col:8 used 'in_addr &&'
| |-CXXCtorInitializer Field 0x561a85083dd0 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x561a851598d0 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x561a851598a0 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x561a85083dd0
| |     `-CXXStaticCastExpr 0x561a85159870 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
| |       `-DeclRefExpr 0x561a85159840 <col:8> 'in_addr' lvalue ParmVar 0x561a85154768 '' 'in_addr &&'
| `-CompoundStmt 0x561a85159918 <col:8>
`-CXXDestructorDecl 0x561a85159b50 <col:8> col:8 implicit referenced ~in_addr 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.in_addr = type { i32 }
  NonVirtualBaseLLVMType:%struct.in_addr = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561a8514c088 <../dummy_inc/clicknet/ip.h:23:1, line:52:1> line:23:8 struct click_ip definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x561a8514c1a8 <col:1, col:8> col:8 implicit struct click_ip
|-FieldDecl 0x561a8514c290 <line:28:5, col:22> col:14 referenced ip_hl 'unsigned int'
| `-ConstantExpr 0x561a8514c270 <col:22> 'int' Int: 4
|   `-IntegerLiteral 0x561a8514c238 <col:22> 'int' 4
|-FieldDecl 0x561a8514c338 <line:29:5, col:21> col:14 referenced ip_v 'unsigned int'
| `-ConstantExpr 0x561a8514c318 <col:21> 'int' Int: 4
|   `-IntegerLiteral 0x561a8514c2e0 <col:21> 'int' 4
|-FieldDecl 0x561a8514c398 <line:33:5, col:13> col:13 ip_tos 'uint8_t':'unsigned char'
|-FieldDecl 0x561a8514c3f8 <line:40:5, col:14> col:14 referenced ip_len 'uint16_t':'unsigned short'
|-FieldDecl 0x561a8514c458 <line:41:5, col:14> col:14 ip_id 'uint16_t':'unsigned short'
|-FieldDecl 0x561a8514c4b8 <line:42:5, col:14> col:14 referenced ip_off 'uint16_t':'unsigned short'
|-FieldDecl 0x561a8514c518 <line:47:5, col:13> col:13 ip_ttl 'uint8_t':'unsigned char'
|-FieldDecl 0x561a8514c578 <line:48:5, col:13> col:13 referenced ip_p 'uint8_t':'unsigned char'
|-FieldDecl 0x561a8514c5d8 <line:49:5, col:14> col:14 referenced ip_sum 'uint16_t':'unsigned short'
|-FieldDecl 0x561a8514c648 <line:50:5, col:20> col:20 referenced ip_src 'struct in_addr':'in_addr'
`-FieldDecl 0x561a8514c6b8 <line:51:5, col:20> col:20 referenced ip_dst 'struct in_addr':'in_addr'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  NonVirtualBaseLLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561a853685c8 prev 0x561a8534ee20 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561a853686c0 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x561a85368750 <col:22, col:28> col:22 public
|-EnumDecl 0x561a85368778 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x561a85368898 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x561a85368878 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x561a85368860 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x561a85368840 <col:14> 'int' 999
| |-EnumConstantDecl 0x561a85368940 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x561a85368920 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x561a85368908 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x561a853688e8 <col:14> 'int' 1
| |-EnumConstantDecl 0x561a853689d0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x561a853689b0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x561a85368990 <col:17> 'int' 0
| |-EnumConstantDecl 0x561a85368a60 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x561a85368a40 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x561a85368a20 <col:13> 'int' 1
| |-EnumConstantDecl 0x561a85368af0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x561a85368ad0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x561a85368ab0 <col:16> 'int' 2
| |-EnumConstantDecl 0x561a85368b80 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x561a85368b60 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x561a85368b40 <col:13> 'int' 3
| |-EnumConstantDecl 0x561a85368c10 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x561a85368bf0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x561a85368bd0 <col:15> 'int' 4
| |-EnumConstantDecl 0x561a85368ca0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x561a85368c80 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x561a85368c60 <col:14> 'int' 5
| |-EnumConstantDecl 0x561a85368d30 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x561a85368d10 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x561a85368cf0 <col:12> 'int' 6
| `-EnumConstantDecl 0x561a85368dc0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x561a85368da0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x561a85368d80 <col:13> 'int' 7
|-VarDecl 0x561a85368e30 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x561a85368eb8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x561a85368f40 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x561a85368fc8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x561a85369050 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x561a853690d8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x561a85369160 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x561a853691e8 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x561a85369270 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x561a853692f8 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x561a85369380 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x561a85369480 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x561a85370338 '_nerrors' 'int'
| | `-IntegerLiteral 0x561a85370ac8 <line:128:13> 'int' 0
| `-CompoundStmt 0x561a85370b38 <col:16, line:129:5>
|-CXXDestructorDecl 0x561a85369570 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x561a85370b48 <col:29, line:132:5>
|-CXXMethodDecl 0x561a85369728 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x561a85369660 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561a853697f0 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x561a853698d8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x561a85370ba0 <col:44, line:161:5>
|   `-ReturnStmt 0x561a85370b90 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x561a85370b78 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x561a85370b58 <col:9> 'ErrorHandler *' lvalue Var 0x561a85370398 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x561a85369a48 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x561a85369988 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x561a85369b10 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x561a85370c00 <col:43, line:173:5>
|   `-ReturnStmt 0x561a85370bf0 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x561a85370bd8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x561a85370bb8 <col:9> 'ErrorHandler *' lvalue Var 0x561a85370410 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x561a85369bc8 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x561a85369c48 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x561a85369d58 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x561a85369cc8 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x561a85369ea8 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x561a85369e18 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x561a8536a000 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x561a85369f68 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x561a8536a158 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x561a8536a0c0 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x561a8536a2b0 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x561a8536a218 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x561a8536a4c0 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x561a8536a368 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x561a8536a3e8 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x561a8536a698 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x561a8536a580 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x561a8536a600 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x561a8536a8b8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x561a8536a758 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x561a8536a7d8 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x561a8536aa98 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x561a8536a978 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x561a8536a9f8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x561a8536ac78 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x561a8536ab58 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x561a8536abd8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x561a8536ae00 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x561a8536ad38 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x561a8536afd0 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x561a8536aeb8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x561a8536af30 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x561a85370e58 <col:57, line:234:5>
|   `-ReturnStmt 0x561a85370e48 <line:233:2, col:41>
|     `-ExprWithCleanups 0x561a85370e30 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x561a85370dd8 <col:9, col:41> 'int'
|         |-MemberExpr 0x561a85370da8 <col:9> '<bound member function type>' ->xmessage 0x561a8536ae00
|         | `-CXXThisExpr 0x561a85370d98 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x561a85370e18 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x561a85370e00 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x561a85370d78 <col:18, col:40> 'String' (CXXTemporary 0x561a85370d78)
|               `-CallExpr 0x561a85370d40 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x561a85370d28 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x561a85370ca0 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x561a8536d058 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x561a85370cc0 <col:31> 'const String' lvalue ParmVar 0x561a8536af30 'str' 'const String &'
|                 `-DeclRefExpr 0x561a85370ce0 <col:36> 'const String' lvalue ParmVar 0x561a8536aeb8 'anno' 'const String &'
|-CXXMethodDecl 0x561a8536b310 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x561a8536b090 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x561a8536b110 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x561a8536b1e0 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x561a853710e8 <col:68, line:243:5>
|   `-ReturnStmt 0x561a853710d8 <line:242:2, col:41>
|     `-ExprWithCleanups 0x561a853710c0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x561a85371060 <col:9, col:41> 'int'
|         |-MemberExpr 0x561a85371030 <col:9> '<bound member function type>' ->xmessage 0x561a8536afd0
|         | `-CXXThisExpr 0x561a85371020 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x561a85370ef8 <col:18> 'const String' lvalue ParmVar 0x561a8536b090 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x561a853710a8 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x561a85371090 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x561a85371000 <col:24, col:40> 'String' (CXXTemporary 0x561a85371000)
|               `-CXXMemberCallExpr 0x561a85370f98 <col:24, col:40> 'String'
|                 |-MemberExpr 0x561a85370f28 <col:24> '<bound member function type>' ->vformat 0x561a8536c4f0
|                 | `-CXXThisExpr 0x561a85370f18 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x561a85370fc8 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x561a85370f58 <col:32> 'const char *' lvalue ParmVar 0x561a8536b110 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x561a85370fe0 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x561a85370f78 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x561a8536b1e0 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x561a8536b5b0 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x561a8536b3d8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x561a8536b450 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x561a8536b4c8 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x561a85371428 <col:23, line:254:5>
|   `-ReturnStmt 0x561a85371418 <line:253:2, col:71>
|     `-ExprWithCleanups 0x561a85371400 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x561a853713a0 <col:9, col:71> 'int'
|         |-MemberExpr 0x561a85371370 <col:9> '<bound member function type>' ->xmessage 0x561a8536afd0
|         | `-CXXThisExpr 0x561a85371360 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x561a853713e8 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x561a853713d0 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x561a85371320 <col:18, col:65> 'String' (CXXTemporary 0x561a85371320)
|         |     `-CallExpr 0x561a853712b8 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x561a853712a0 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x561a85371188 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x561a8536d058 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x561a853711a8 <col:31> 'const String' lvalue ParmVar 0x561a8536b450 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x561a85371300 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x561a853712e8 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x561a85371280 <col:37, col:64> 'String' (CXXTemporary 0x561a85371280)
|         |             `-CallExpr 0x561a85371250 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x561a85371238 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x561a853711c8 <col:37> 'String (const String &)' lvalue CXXMethod 0x561a8536d6a8 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x561a853711e8 <col:56> 'const String' lvalue ParmVar 0x561a8536b3d8 'landmark' 'const String &'
|         `-DeclRefExpr 0x561a85371340 <col:68> 'const String' lvalue ParmVar 0x561a8536b4c8 'str' 'const String &'
|-CXXMethodDecl 0x561a8536b930 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x561a8536b678 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x561a8536b6f0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x561a8536b770 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x561a8536b7e8 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x561a853716e0 <col:34, line:267:5>
|   `-ReturnStmt 0x561a853716d0 <line:266:2, col:51>
|     `-ExprWithCleanups 0x561a853716b8 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x561a85371650 <col:9, col:51> 'int'
|         |-MemberExpr 0x561a85371620 <col:9> '<bound member function type>' ->xmessage 0x561a8536b5b0
|         | `-CXXThisExpr 0x561a85371610 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x561a853714c8 <col:18> 'const String' lvalue ParmVar 0x561a8536b678 'landmark' 'const String &'
|         |-DeclRefExpr 0x561a853714e8 <col:28> 'const String' lvalue ParmVar 0x561a8536b6f0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x561a853716a0 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x561a85371688 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x561a853715f0 <col:34, col:50> 'String' (CXXTemporary 0x561a853715f0)
|               `-CXXMemberCallExpr 0x561a85371588 <col:34, col:50> 'String'
|                 |-MemberExpr 0x561a85371518 <col:34> '<bound member function type>' ->vformat 0x561a8536c4f0
|                 | `-CXXThisExpr 0x561a85371508 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x561a853715b8 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x561a85371548 <col:42> 'const char *' lvalue ParmVar 0x561a8536b770 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x561a853715d0 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x561a85371568 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x561a8536b7e8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x561a8536ba40 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x561a85371760 <col:25, line:288:5>
|   `-ReturnStmt 0x561a85371750 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x561a85371738 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x561a85371708 <col:9> 'const int' lvalue ->_nerrors 0x561a85370338
|         `-CXXThisExpr 0x561a853716f8 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x561a8536bc50 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x561a8536baf8 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x561a8536bb78 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x561a8536bf38 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x561a8536bd18 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x561a8536bd98 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x561a8536be10 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x561a8536c0d0 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x561a8536c008 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x561a8536c318 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x561a8536c190 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x561a8536c208 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x561a853719c0 <col:58, line:357:5>
|   `-ReturnStmt 0x561a853719b0 <line:356:2, col:29>
|     `-ExprWithCleanups 0x561a85371998 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x561a85371968 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x561a85371950 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x561a85371930 <col:9, col:29> 'String' (CXXTemporary 0x561a85371930)
|             `-CallExpr 0x561a853718c0 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x561a853718a8 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x561a85371828 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x561a8536bf38 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x561a853717c8 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x561a853718f8 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x561a853717e8 <col:21> 'const char *' lvalue ParmVar 0x561a8536c190 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x561a85371910 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x561a85371808 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x561a8536c208 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x561a8536c4f0 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x561a8536c3e0 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x561a8536c458 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x561a8536c648 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x561a8536c5b8 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x561a8536c7c8 <line:393:5, col:46> col:20 used decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x561a8536c700 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x561a8536ca60 <line:424:5, col:69> col:19 used emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x561a8536c880 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x561a8536c900 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x561a8536c978 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x561a8536cbc0 <line:438:5, line:441:5> line:438:18 used account 'void (int)' virtual
| |-ParmVarDecl 0x561a8536cb30 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x561a85371ad8 <col:37, line:441:5>
|   `-IfStmt 0x561a85371ac0 <line:439:2, line:440:8>
|     |-BinaryOperator 0x561a85371a48 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x561a85371a18 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x561a853719d8 <col:6> 'int' lvalue ParmVar 0x561a8536cb30 'level' 'int'
|     | `-ImplicitCastExpr 0x561a85371a30 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x561a853719f8 <col:15> 'ErrorHandler::Level' EnumConstant 0x561a85368b80 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x561a85371aa8 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x561a85371a78 <col:8> 'int' lvalue ->_nerrors 0x561a85370338
|         `-CXXThisExpr 0x561a85371a68 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x561a8536cc88 <line:446:5, line:448:5> line:446:18 used clear 'void ()' virtual
| `-CompoundStmt 0x561a85371b70 <col:26, line:448:5>
|   `-BinaryOperator 0x561a85371b50 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x561a85371b00 <col:2> 'int' lvalue ->_nerrors 0x561a85370338
|     | `-CXXThisExpr 0x561a85371af0 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x561a85371b30 <col:13> 'int' 0
|-CXXMethodDecl 0x561a8536ce50 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x561a8536cd40 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x561a8536cdb8 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x561a8536d058 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x561a8536cf10 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x561a8536cf88 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x561a8536d308 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x561a8536d118 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x561a8536d198 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x561a8536d218 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x561a8536d3c0 <col:59> 0 0
|-CXXMethodDecl 0x561a8536d558 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x561a8536d438 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x561a8536d4b8 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x561a853721e0 <col:70, line:534:5>
|   |-DeclStmt 0x561a85371ce0 <line:528:2, col:20>
|   | |-VarDecl 0x561a85371b98 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x561a85371c00 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x561a85371c38 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x561a85371ca0 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x561a85371db0 <line:529:2, col:23>
|   | `-VarDecl 0x561a85371d10 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x561a85371d98 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x561a85371d78 <col:18> 'const char *' lvalue ParmVar 0x561a8536d438 'begin' 'const char *'
|   |-DoStmt 0x561a85372178 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x561a853720a8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x561a85372090 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x561a85372070 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x561a85371dc8 <col:6> 'const char *' lvalue Var 0x561a85371d10 'x' 'const char *'
|   | |     `-CallExpr 0x561a85371fc0 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x561a85371fa8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x561a85371f60 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x561a85370810 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x561a85372028 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x561a85372010 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x561a85371e80 <col:20, col:27> 'String' (CXXTemporary 0x561a85371e80)
|   | |       |     `-CXXTemporaryObjectExpr 0x561a85371e48 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x561a85372040 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x561a85371ea0 <col:30> 'const char *' lvalue Var 0x561a85371d10 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x561a85372058 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x561a85371ec0 <col:33> 'const char *' lvalue ParmVar 0x561a8536d4b8 'end' 'const char *'
|   | |       |-UnaryOperator 0x561a85371f00 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x561a85371ee0 <col:39> 'String' lvalue Var 0x561a85371b98 'name' 'String'
|   | |       |-UnaryOperator 0x561a85371f38 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x561a85371f18 <col:46> 'String' lvalue Var 0x561a85371c38 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x561a85371f50 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x561a85372160 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x561a85372148 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x561a85372128 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x561a853720f8 <col:11> '<bound member function type>' .operator int (String::*)() const 0x561a8511cc08
|   |         `-ImplicitCastExpr 0x561a853720e0 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x561a853720c0 <col:11> 'String' lvalue Var 0x561a85371b98 'name' 'String'
|   `-ReturnStmt 0x561a853721d0 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x561a853721b8 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x561a85372198 <col:9> 'const char *' lvalue Var 0x561a85371d10 'x' 'const char *'
|-CXXMethodDecl 0x561a8536d6a8 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x561a8536d618 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x561a853727e8 <col:55, line:550:5>
|   `-IfStmt 0x561a853727c0 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x561a85372420 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x561a85372408 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x561a853723f0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x561a853723d0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x561a853723a0 <col:6> '<bound member function type>' .operator int (String::*)() const 0x561a8511cc08
|     | |       `-DeclRefExpr 0x561a85372240 <col:6> 'const String' lvalue ParmVar 0x561a8536d618 'x' 'const String &'
|     | `-BinaryOperator 0x561a85372380 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x561a85372350 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x561a85372300 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x561a853722e8 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x561a853722a0 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x561a85136440 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x561a85372260 <col:11> 'const String' lvalue ParmVar 0x561a8536d618 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x561a85372280 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x561a85372368 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x561a85372338 <col:19> 'char' 123
|     |-ReturnStmt 0x561a85372490 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x561a85372460 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x561a85372440 <col:13> 'const String' lvalue ParmVar 0x561a8536d618 'x' 'const String &'
|     `-IfStmt 0x561a85372798 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x561a85372528 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x561a85372510 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x561a853724f0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x561a853724c0 <col:11> '<bound member function type>' .operator int (String::*)() const 0x561a8511cc08
|       |       `-DeclRefExpr 0x561a853724a0 <col:11> 'const String' lvalue ParmVar 0x561a8536d618 'x' 'const String &'
|       |-ReturnStmt 0x561a853726b0 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x561a85372698 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x561a85372668 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x561a85372650 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x561a85372630 <col:13, col:29> 'String' (CXXTemporary 0x561a85372630)
|       |         `-CallExpr 0x561a853725e0 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x561a853725c8 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x561a85372540 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x561a8536ce50 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x561a85372610 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x561a85372560 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x561a85372580 <col:28> 'const String' lvalue ParmVar 0x561a8536d618 'x' 'const String &'
|       `-ReturnStmt 0x561a85372788 <line:549:6, col:20>
|         `-ExprWithCleanups 0x561a85372770 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x561a85372740 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x561a85372728 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x561a85372708 <col:13, col:20> 'String' (CXXTemporary 0x561a85372708)
|                 `-CXXTemporaryObjectExpr 0x561a853726d0 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x561a8536d8a8 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x561a8536d760 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x561a8536d7d8 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x561a85370ab8 <col:71> 'bool' false
|-CXXRecordDecl 0x561a8536d958 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x561a8536dc58 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x561a8536dbf0 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x561a8536db90 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x561a8536db50 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x561a851194a0 'String'
|       | `-CXXRecord 0x561a85119410 'String'
|       |-BuiltinType 0x561a84def580 'int'
|       `-DecayedType 0x561a8536b1b0 '__va_list_tag *' sugar
|         |-TypedefType 0x561a8536b180 'va_list' sugar
|         | |-Typedef 0x561a8500b560 'va_list'
|         | `-TypedefType 0x561a8500b510 '__gnuc_va_list' sugar
|         |   |-Typedef 0x561a84f43138 '__gnuc_va_list'
|         |   `-TypedefType 0x561a84f430a0 '__builtin_va_list' sugar
|         |     |-Typedef 0x561a84e30d38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x561a84e30ce0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x561a84df02d0 '__va_list_tag'
|         |         `-CXXRecord 0x561a84df0238 '__va_list_tag'
|         `-PointerType 0x561a85010e00 '__va_list_tag *'
|           `-RecordType 0x561a84df02d0 '__va_list_tag'
|             `-CXXRecord 0x561a84df0238 '__va_list_tag'
|-EnumDecl 0x561a8536dcb0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x561a8536ddb0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x561a8536e310 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a8536dd90 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x561a8536dd70 <col:16> 'int' 1
| |-EnumConstantDecl 0x561a8536de40 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x561a8536e328 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a8536de20 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x561a8536de00 <col:21> 'int' 2
| |-EnumConstantDecl 0x561a8536ded0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x561a8536e340 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a8536deb0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x561a8536de90 <col:22> 'int' 4
| |-EnumConstantDecl 0x561a8536df60 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x561a8536e358 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a8536df40 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x561a8536df20 <col:17> 'int' 8
| |-EnumConstantDecl 0x561a8536dff0 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x561a8536e370 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a8536dfd0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x561a8536dfb0 <col:22> 'int' 16
| |-EnumConstantDecl 0x561a8536e080 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x561a8536e388 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a8536e060 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x561a8536e040 <col:19> 'int' 32
| |-EnumConstantDecl 0x561a8536e110 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x561a8536e3a0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a8536e0f0 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x561a8536e0d0 <col:17> 'int' 64
| |-EnumConstantDecl 0x561a8536e1a0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x561a8536e3b8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a8536e180 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x561a8536e160 <col:14> 'int' 128
| |-EnumConstantDecl 0x561a8536e230 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x561a8536e3d0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x561a8536e210 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x561a8536e1f0 <col:16> 'int' 256
| `-EnumConstantDecl 0x561a8536e2c0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x561a8536e3e8 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561a8536e2a0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x561a8536e280 <col:12> 'int' 1024
|-CXXMethodDecl 0x561a8536e5f8 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x561a8536e410 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x561a8536e4b0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x561a85370250 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x561a85370180 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x561a853702f8 <line:580:3, col:10> col:3 private
|-FieldDecl 0x561a85370338 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x561a85370398 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x561a85370410 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x561a85370810 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x561a85370488 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x561a85370508 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x561a85370588 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x561a85370600 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x561a85370678 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x561a853706f0 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x561a85370938 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x561a85370938
| `-ParmVarDecl 0x561a85370a48 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x561a85372b48 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x561a85372b48
  `-ParmVarDecl 0x561a85372c58 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561a85121ea0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x561a85121fb8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x561a85122058 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x561a851220b8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x561a85122118 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x561a851221c8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561a851224d0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x561a851225e8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x561a85122690 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x561a851226f8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x561a85122788 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x561a85128820 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x561a85128c58 <col:12>
|-CXXConstructorDecl 0x561a85128928 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x561a85128a38 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x561a85122690 'data' 'const char *'
| | `-ImplicitCastExpr 0x561a8512b1e0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x561a8512b1b0 <col:12> 'const char *const' lvalue .data 0x561a85122690
| |     `-DeclRefExpr 0x561a8512b190 <col:12> 'const String::rep_t' lvalue ParmVar 0x561a85128a38 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x561a851226f8 'length' 'int'
| | `-ImplicitCastExpr 0x561a8512b270 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x561a8512b240 <col:12> 'const int' lvalue .length 0x561a851226f8
| |     `-DeclRefExpr 0x561a8512b220 <col:12> 'const String::rep_t' lvalue ParmVar 0x561a85128a38 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x561a85122788 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x561a8512b300 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x561a8512b2d0 <col:12> 'String::memo_t *const' lvalue .memo 0x561a85122788
| |     `-DeclRefExpr 0x561a8512b2b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x561a85128a38 '' 'const String::rep_t &'
| `-CompoundStmt 0x561a8512b358 <col:12>
|-CXXConstructorDecl 0x561a85128ad8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x561a85128ad8
| `-ParmVarDecl 0x561a85128be8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x561a8512e140 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x561a85139b58 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x561a85139c68 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x561a8513a180 <col:12>
|   |-BinaryOperator 0x561a85139f98 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x561a85139f50 <col:12> 'const char *' lvalue ->data 0x561a85122690
|   | | `-CXXThisExpr 0x561a85139f40 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x561a85139f80 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x561a85139f10 <col:12> 'const char *const' lvalue .data 0x561a85122690
|   |     `-DeclRefExpr 0x561a85139ef0 <col:12> 'const String::rep_t' lvalue ParmVar 0x561a85139c68 '' 'const String::rep_t &'
|   |-BinaryOperator 0x561a8513a060 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x561a8513a018 <col:12> 'int' lvalue ->length 0x561a851226f8
|   | | `-CXXThisExpr 0x561a8513a008 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x561a8513a048 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x561a85139fd8 <col:12> 'const int' lvalue .length 0x561a851226f8
|   |     `-DeclRefExpr 0x561a85139fb8 <col:12> 'const String::rep_t' lvalue ParmVar 0x561a85139c68 '' 'const String::rep_t &'
|   |-BinaryOperator 0x561a8513a128 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x561a8513a0e0 <col:12> 'String::memo_t *' lvalue ->memo 0x561a85122788
|   | | `-CXXThisExpr 0x561a8513a0d0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x561a8513a110 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x561a8513a0a0 <col:12> 'String::memo_t *const' lvalue .memo 0x561a85122788
|   |     `-DeclRefExpr 0x561a8513a080 <col:12> 'const String::rep_t' lvalue ParmVar 0x561a85139c68 '' 'const String::rep_t &'
|   `-ReturnStmt 0x561a8513a170 <col:12>
|     `-UnaryOperator 0x561a8513a158 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x561a8513a148 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x561a85139cd8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x561a85139cd8
  `-ParmVarDecl 0x561a85139de8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x561a85119410 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x561a85119528 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x561a851195b8 <col:16, col:22> col:16 public
|-TypedefDecl 0x561a851195f8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x561a84deffd0 'const char *'
|   `-QualType 0x561a84def521 'const char' const
|     `-BuiltinType 0x561a84def520 'char'
|-TypedefDecl 0x561a85119680 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x561a85119650 'String::const_iterator' sugar
|   |-Typedef 0x561a851195f8 'const_iterator'
|   `-PointerType 0x561a84deffd0 'const char *'
|     `-QualType 0x561a84def521 'const char' const
|       `-BuiltinType 0x561a84def520 'char'
|-TypedefDecl 0x561a851197f0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x561a85119760 'int (String::*)() const'
|   |-RecordType 0x561a851194a0 'String'
|   | `-CXXRecord 0x561a85119410 'String'
|   `-ParenType 0x561a85119700 'int () const' sugar
|     `-FunctionProtoType 0x561a850ee2a0 'int () const' const cdecl
|       `-BuiltinType 0x561a84def580 'int'
|-TypedefDecl 0x561a85119858 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x561a84f42e80 'int64_t' sugar
|   |-Typedef 0x561a84e58390 'int64_t'
|   `-TypedefType 0x561a84e31630 '__int64_t' sugar
|     |-Typedef 0x561a84e31208 '__int64_t'
|     `-BuiltinType 0x561a84def5a0 'long'
|-TypedefDecl 0x561a851198c0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x561a84f42da0 'uint64_t' sugar
|   |-Typedef 0x561a84e58530 'uint64_t'
|   `-TypedefType 0x561a84e316c0 '__uint64_t' sugar
|     |-Typedef 0x561a84e31278 '__uint64_t'
|     `-BuiltinType 0x561a84def640 'unsigned long'
|-TypedefDecl 0x561a85119950 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x561a85119920 'String::intmax_t' sugar
|   |-Typedef 0x561a85119858 'intmax_t'
|   `-TypedefType 0x561a84f42e80 'int64_t' sugar
|     |-Typedef 0x561a84e58390 'int64_t'
|     `-TypedefType 0x561a84e31630 '__int64_t' sugar
|       |-Typedef 0x561a84e31208 '__int64_t'
|       `-BuiltinType 0x561a84def5a0 'long'
|-TypedefDecl 0x561a851199e0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x561a851199b0 'String::uintmax_t' sugar
|   |-Typedef 0x561a851198c0 'uintmax_t'
|   `-TypedefType 0x561a84f42da0 'uint64_t' sugar
|     |-Typedef 0x561a84e58530 'uint64_t'
|     `-TypedefType 0x561a84e316c0 '__uint64_t' sugar
|       |-Typedef 0x561a84e31278 '__uint64_t'
|       `-BuiltinType 0x561a84def640 'unsigned long'
|-CXXConstructorDecl 0x561a85119aa0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x561a85119c48 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x561a85119b88 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x561a85119df8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x561a85119d38 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x561a85119f50 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x561a85119ec0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x561a8511a168 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x561a8511a018 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x561a8511a098 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x561a8511a388 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x561a8511a238 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x561a8511a2b8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x561a8511a5a8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x561a8511a458 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x561a8511a4d8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x561a8511a7c8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x561a8511a678 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x561a8511a6f8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x561a8511a958 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x561a8511a890 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x561a8511aad8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x561a8511aa18 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x561a8511ac68 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x561a8511aba0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x561a8511adc0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x561a8511ad30 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x561a8511af18 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x561a8511ae88 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x561a8511b070 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x561a8511afe0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x561a8511b1f8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x561a8511b138 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x561a8511b388 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x561a8511b2c0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x561a8511b518 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x561a8511b450 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x561a8511b6a8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x561a8511b5e0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x561a8511b7a0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x561a8511b8c8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x561a8511ba48 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x561a8511b980 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x561a8511bb98 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x561a8511bb08 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x561a8511bc50 <col:63> "" ""
|-CXXMethodDecl 0x561a8511bd98 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x561a8511bcd8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x561a8511bfa8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x561a8511be58 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x561a8511bed8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x561a8511c1c8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x561a8511c070 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x561a8511c0f0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x561a8511c4a8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x561a8511c288 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x561a8511c308 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x561a851282f0 <col:55> 'int' 10
| `-ParmVarDecl 0x561a8511c380 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x561a85128310 <col:76> 'bool' true
|-CXXMethodDecl 0x561a8511c788 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x561a8511c570 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x561a8511c5f0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x561a85128320 <col:56> 'int' 10
| `-ParmVarDecl 0x561a8511c668 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x561a85128340 <col:77> 'bool' true
|-CXXMethodDecl 0x561a8511c890 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x561a8511c958 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x561a8511ca20 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x561a8511cac0 <col:20>
| `-OptimizeNoneAttr 0x561a8511cb18 <col:30>
|-CXXConversionDecl 0x561a8511cc08 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x561a8511ccd8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x561a8511cd98 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x561a8511ce88 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x561a8511cf48 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x561a8511d0c8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x561a8511d000 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x561a8511d218 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x561a8511d188 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x561a8511d308 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x561a8511d3c8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x561a8511d618 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x561a8511d480 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x561a8511d500 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x561a8511d878 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x561a8511d6e0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x561a8511d760 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x561a8511d948 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x561a8511db58 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x561a8511da00 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x561a8511da80 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x561a8511dd78 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x561a8511dc20 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x561a8511dca0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x561a8511df08 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x561a8511de40 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x561a8511dff8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x561a8511e168 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x561a8511e0a8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x561a8511e378 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x561a8511e228 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x561a8511e2a8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x561a8511e590 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x561a8511e438 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x561a8511e4b0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x561a8511e720 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x561a8511e650 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x561a8511e940 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x561a8511e7e0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x561a8511e860 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x561a8511ea90 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x561a8511ea00 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x561a8511ec68 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x561a8511eb50 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x561a8511ebd0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x561a8511edb8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x561a8511ed28 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x561a8511efd0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x561a8511ee70 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x561a8511eef0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x561a85128350 <col:39> 'int' 0
|-CXXMethodDecl 0x561a8511f1f0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x561a8511f090 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x561a8511f110 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x561a85128370 <col:48> 'int' 0
|-CXXMethodDecl 0x561a8511f3d0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x561a8511f2b0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x561a8511f330 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x561a85128390 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x561a8511f4a0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x561a8511f560 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x561a8511f620 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x561a8511f6e0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x561a8511f7a0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x561a8511f948 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x561a8511f850 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x561a8511fac8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x561a8511fa00 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x561a8511fca0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x561a8511fb88 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x561a8511fe18 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x561a8511fd58 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x561a8511ff60 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x561a8511fed0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x561a851200b0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x561a85120020 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x561a85120288 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x561a85120170 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x561a851201f0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x561a85120468 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x561a85120350 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x561a851203d0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x561a851205b8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x561a85120528 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x561a851207c8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x561a85120678 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x561a851206f8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x561a85120928 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x561a85120890 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x561a85120a80 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x561a851209e8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x561a85120b28 <col:57> "" ""
|-CXXMethodDecl 0x561a85120c38 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x561a85120ba8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x561a85120d88 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x561a85120cf8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x561a85120f08 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x561a85120e40 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x561a85120fd0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x561a85121090 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x561a85121150 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x561a851211f0 <col:49> "" ""
|-CXXMethodDecl 0x561a85121280 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x561a85121340 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x561a85121430 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x561a851214f8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x561a851215b8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x561a85121678 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x561a85121770 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x561a85121838 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x561a85121900 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x561a85121ad8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x561a851219b8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x561a85121a38 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x561a85121d00 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x561a85121ba0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x561a85121c20 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x561a85121e10 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x561a85121e78 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x561a85121ea0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x561a85121fb8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x561a85122058 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x561a851220b8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x561a85122118 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x561a851221c8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x561a85122230 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x561a85122468 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x561a851224b8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561a85122448 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x561a85122358 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x561a85122300 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x561a85122340 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x561a85122320 <col:32> 'int' 8
|-CXXRecordDecl 0x561a851224d0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x561a851225e8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x561a85122690 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x561a851226f8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x561a85122788 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x561a85128820 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x561a85128c58 <col:12>
| |-CXXConstructorDecl 0x561a85128928 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x561a85128a38 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x561a85122690 'data' 'const char *'
| | | `-ImplicitCastExpr 0x561a8512b1e0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x561a8512b1b0 <col:12> 'const char *const' lvalue .data 0x561a85122690
| | |     `-DeclRefExpr 0x561a8512b190 <col:12> 'const String::rep_t' lvalue ParmVar 0x561a85128a38 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x561a851226f8 'length' 'int'
| | | `-ImplicitCastExpr 0x561a8512b270 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x561a8512b240 <col:12> 'const int' lvalue .length 0x561a851226f8
| | |     `-DeclRefExpr 0x561a8512b220 <col:12> 'const String::rep_t' lvalue ParmVar 0x561a85128a38 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x561a85122788 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x561a8512b300 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x561a8512b2d0 <col:12> 'String::memo_t *const' lvalue .memo 0x561a85122788
| | |     `-DeclRefExpr 0x561a8512b2b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x561a85128a38 '' 'const String::rep_t &'
| | `-CompoundStmt 0x561a8512b358 <col:12>
| |-CXXConstructorDecl 0x561a85128ad8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x561a85128ad8
| | `-ParmVarDecl 0x561a85128be8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x561a8512e140 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x561a85139b58 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x561a85139c68 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x561a8513a180 <col:12>
| |   |-BinaryOperator 0x561a85139f98 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x561a85139f50 <col:12> 'const char *' lvalue ->data 0x561a85122690
| |   | | `-CXXThisExpr 0x561a85139f40 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x561a85139f80 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x561a85139f10 <col:12> 'const char *const' lvalue .data 0x561a85122690
| |   |     `-DeclRefExpr 0x561a85139ef0 <col:12> 'const String::rep_t' lvalue ParmVar 0x561a85139c68 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x561a8513a060 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x561a8513a018 <col:12> 'int' lvalue ->length 0x561a851226f8
| |   | | `-CXXThisExpr 0x561a8513a008 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x561a8513a048 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x561a85139fd8 <col:12> 'const int' lvalue .length 0x561a851226f8
| |   |     `-DeclRefExpr 0x561a85139fb8 <col:12> 'const String::rep_t' lvalue ParmVar 0x561a85139c68 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x561a8513a128 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x561a8513a0e0 <col:12> 'String::memo_t *' lvalue ->memo 0x561a85122788
| |   | | `-CXXThisExpr 0x561a8513a0d0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x561a8513a110 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x561a8513a0a0 <col:12> 'String::memo_t *const' lvalue .memo 0x561a85122788
| |   |     `-DeclRefExpr 0x561a8513a080 <col:12> 'const String::rep_t' lvalue ParmVar 0x561a85139c68 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x561a8513a170 <col:12>
| |     `-UnaryOperator 0x561a8513a158 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x561a8513a148 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x561a85139cd8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x561a85139cd8
|   `-ParmVarDecl 0x561a85139de8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x561a85122800 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x561a85122a48 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x561a85122868 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x561a851228e8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x561a85122960 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x561a851287e0 <col:79, line:261:5>
|   |-BinaryOperator 0x561a85128458 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x561a851283f0 <col:2, col:5> 'const char *' lvalue .data 0x561a85122690
|   | | `-MemberExpr 0x561a851283c0 <col:2> 'String::rep_t' lvalue ->_r 0x561a85122800
|   | |   `-CXXThisExpr 0x561a851283b0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x561a85128440 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x561a85128420 <col:12> 'const char *' lvalue ParmVar 0x561a85122868 'data' 'const char *'
|   |-BinaryOperator 0x561a85128520 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x561a851284b8 <col:2, col:5> 'int' lvalue .length 0x561a851226f8
|   | | `-MemberExpr 0x561a85128488 <col:2> 'String::rep_t' lvalue ->_r 0x561a85122800
|   | |   `-CXXThisExpr 0x561a85128478 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x561a85128508 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x561a851284e8 <col:14> 'int' lvalue ParmVar 0x561a851228e8 'length' 'int'
|   `-IfStmt 0x561a851287c8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x561a85128640 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x561a85128628 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x561a85128608 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x561a851285e8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x561a85128580 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x561a85122788
|     |       | `-MemberExpr 0x561a85128550 <col:7> 'String::rep_t' lvalue ->_r 0x561a85122800
|     |       |   `-CXXThisExpr 0x561a85128540 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x561a851285d0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x561a851285b0 <col:17> 'String::memo_t *' lvalue ParmVar 0x561a85122960 'memo' 'String::memo_t *'
|     `-CallExpr 0x561a851287a0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x561a85128788 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x561a85128690 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x561a85111478 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x561a851286f8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x561a85122058
|         `-ImplicitCastExpr 0x561a851286e0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x561a851286c0 <col:27> 'String::memo_t *' lvalue ParmVar 0x561a85122960 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x561a85122cf8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x561a85122b18 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x561a85122b98 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x561a85122c10 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x561a85122800 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x561a85128c68 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x561a85128df8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x561a85128d60 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x561a85128cd0 <col:2> '<bound member function type>' ->assign_memo 0x561a85122a48
|     | `-ImplicitCastExpr 0x561a85128d98 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x561a85128cc0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x561a85128db0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x561a85128d00 <col:14> 'const char *' lvalue ParmVar 0x561a85122b18 'data' 'const char *'
|     |-ImplicitCastExpr 0x561a85128dc8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x561a85128d20 <col:20> 'int' lvalue ParmVar 0x561a85122b98 'length' 'int'
|     `-ImplicitCastExpr 0x561a85128de0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x561a85128d40 <col:28> 'String::memo_t *' lvalue ParmVar 0x561a85122c10 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x561a85122e88 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x561a85122dc8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x561a85129050 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x561a85128fd0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x561a85128e20 <col:2> '<bound member function type>' ->assign_memo 0x561a85122a48
|     | `-CXXThisExpr 0x561a85128e10 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x561a85129008 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x561a85128ea0 <col:14, col:19> 'const char *' lvalue .data 0x561a85122690
|     |   `-MemberExpr 0x561a85128e70 <col:14, col:16> 'String::rep_t' lvalue ._r 0x561a85122800
|     |     `-DeclRefExpr 0x561a85128e50 <col:14> 'const String' lvalue ParmVar 0x561a85122dc8 'x' 'const String &'
|     |-ImplicitCastExpr 0x561a85129020 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x561a85128f20 <col:25, col:30> 'int' lvalue .length 0x561a851226f8
|     |   `-MemberExpr 0x561a85128ef0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x561a85122800
|     |     `-DeclRefExpr 0x561a85128ed0 <col:25> 'const String' lvalue ParmVar 0x561a85122dc8 'x' 'const String &'
|     `-ImplicitCastExpr 0x561a85129038 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x561a85128fa0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x561a85122788
|         `-MemberExpr 0x561a85128f70 <col:38, col:40> 'String::rep_t' lvalue ._r 0x561a85122800
|           `-DeclRefExpr 0x561a85128f50 <col:38> 'const String' lvalue ParmVar 0x561a85122dc8 'x' 'const String &'
|-CXXMethodDecl 0x561a85122f50 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x561a85129a10 <col:31, line:278:5>
|   `-IfStmt 0x561a851299f8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x561a851290f0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x561a851290d8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x561a851290a8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x561a85122788
|     |     `-MemberExpr 0x561a85129078 <col:6> 'String::rep_t' lvalue ->_r 0x561a85122800
|     |       `-CXXThisExpr 0x561a85129068 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x561a851299d0 <col:15, line:277:2>
|       |-ParenExpr 0x561a851295a0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x561a85129570 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x561a85129200 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x561a851291e8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x561a851291d0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x561a85129190 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x561a85122058
|       |   |       `-ImplicitCastExpr 0x561a85129178 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x561a85129148 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x561a85122788
|       |   |           `-MemberExpr 0x561a85129118 <col:27> 'String::rep_t' lvalue ->_r 0x561a85122800
|       |   |             `-CXXThisExpr 0x561a85129108 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x561a85129260 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x561a85129240 <col:54> 'int' 0
|       |   `-CallExpr 0x561a851294d0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x561a851294b8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x561a85129438 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x561a84e89690 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x561a85129510 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x561a85129348 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x561a85129528 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x561a85129378 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x561a85129540 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x561a851293b0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x561a85129558 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x561a85129420 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x561a85129408 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x561a851293d0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x561a851298f0 <line:274:6, line:275:22>
|       | |-CallExpr 0x561a851297b0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x561a85129798 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x561a85129710 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x561a851128c0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x561a851296e0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x561a85122058
|       | |   `-ImplicitCastExpr 0x561a851296c8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x561a85129698 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x561a85122788
|       | |       `-MemberExpr 0x561a85129668 <col:40> 'String::rep_t' lvalue ->_r 0x561a85122800
|       | |         `-CXXThisExpr 0x561a85129658 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x561a851298b0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x561a85129898 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x561a851297d8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x561a85127730 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x561a851298d8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x561a85129838 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x561a85122788
|       |       `-MemberExpr 0x561a85129808 <col:15> 'String::rep_t' lvalue ->_r 0x561a85122800
|       |         `-CXXThisExpr 0x561a851297f8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x561a851299b0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x561a85129948 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x561a85122788
|         | `-MemberExpr 0x561a85129918 <col:6> 'String::rep_t' lvalue ->_r 0x561a85122800
|         |   `-CXXThisExpr 0x561a85129908 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x561a85129998 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x561a85129978 <col:16> 'int' 0
|-CXXMethodDecl 0x561a851231e8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x561a85123008 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x561a85123088 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x561a85123100 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x561a851232c0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x561a85123510 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x561a85123378 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x561a851233f8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x561a85123470 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x561a851236f8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x561a851235e0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x561a85123660 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x561a851237f8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x561a85129ae8 <col:41, line:286:5>
|   `-ReturnStmt 0x561a85129ad8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x561a85129aa8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x561a85129a70 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x561a85129a58 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x561a85129a38 <col:46> 'int' 1
|-CXXMethodDecl 0x561a85123a98 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x561a851238b0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x561a85123930 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x561a851239b0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x561a85127730 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x561a85123b60 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x561a85127800 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x561a851279d0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x561a851278b8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x561a85127938 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x561a85127a90 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x561a85127b58 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x561a85127c58 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x561a85127cd0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x561a85127d48 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x561a85127db0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x561a85127eb0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x561a85127f00 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x561a85127e90 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x561a85127e70 <col:22> 'int' 14
|-CXXMethodDecl 0x561a85128118 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x561a85127f30 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x561a85127fb0 <col:38> col:41 'int'
| `-ParmVarDecl 0x561a85128030 <col:43> col:46 'int'
|-FriendDecl 0x561a85128220 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x561a851282b0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>
