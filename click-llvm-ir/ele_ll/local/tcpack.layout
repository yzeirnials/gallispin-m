
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928df7d08 prev 0x558928def558 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558928df7e00 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x558928df7e90 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x558928df7f08 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x558928df7fc8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x558928df8090 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x558928df8208 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x558928df8140 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x558928df82b0 <col:24>
| `-OptimizeNoneAttr 0x558928df8308 <col:34>
|-CXXMethodDecl 0x558928df8350 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x558928df8608 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x558928df8400 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x558928df8478 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x558928df84f8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x558928df86c0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x558928df86f8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x558928df8760 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x558928df87e8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x558928df8b08 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x558928df88a0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x558928df8918 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x558928df8990 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x558928df8a10 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x558928df8c20 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x558928dff518 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x558928dff518
| `-ParmVarDecl 0x558928dff628 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x558928dff6c8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x558928dff6c8
| `-ParmVarDecl 0x558928dff7d8 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x558928c046e0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928af8970 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558928af8a88 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x558928af8b18 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x558928af8be8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x558928af8cd0 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x558928af8ee8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x558928af8d90 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558928af9098 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x558928af8fa0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x558928af91e0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x558928af9150 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x558928af9328 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x558928af9298 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558928af9470 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x558928af93e0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558928af9538 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x558928af9680 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x558928af95f0 <col:28> col:31 'int'
|-CXXMethodDecl 0x558928af9748 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x558928af9890 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x558928af9800 <col:28> col:31 'int'
|-CXXMethodDecl 0x558928af9a08 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x558928af9948 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558928af9b50 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x558928af9ac0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558928af9c18 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x558928af9dd8 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x558928af9cc8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x558928af9d40 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558928afa028 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x558928af9e98 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558928af9f10 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558928afa0d8 <col:86> "" ""
|-CXXMethodDecl 0x558928afa348 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x558928afa1b8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x558928afa230 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558928afa4f8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x558928afa408 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x558928afa6a8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x558928afa5b0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x558928afa978 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x558928afa760 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x558928afa7d8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x558928afa850 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558928afac58 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x558928afaa40 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x558928afaab8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558928afab30 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558928afad10 <col:115> "" ""
|-AccessSpecDecl 0x558928afad80 <line:84:3, col:10> col:3 private
|-FieldDecl 0x558928afadb8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558928afb268 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x558928afb268
| `-ParmVarDecl 0x558928afb378 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x558928afb418 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x558928afb418
| `-ParmVarDecl 0x558928afb528 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x558928b32218 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558928dbc360 <col:7>
|-CXXConstructorDecl 0x558928b322f0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x558928b322f0
| `-ParmVarDecl 0x558928b32408 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x558928b32478 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x558928b32478
| `-ParmVarDecl 0x558928b32588 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x558928dbed60 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558928e15820 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x558928e159f8 prev 0x558928e15820 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x558928e15a88 <col:46, col:52> col:46 public
|-TypedefDecl 0x558928e15ab0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5589287d4580 'int'
|-TypedefDecl 0x558928e17680 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x558928e17630 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x558928e15f60 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x558928e15e60 'type'
|     `-TemplateSpecializationType 0x558928e15df0 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x558928e15cd0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x558928e15cb0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x558928e15c90 <col:24> 'unsigned long' 8
|       `-RecordType 0x558928e15dd0 'char_array<8>'
|         `-ClassTemplateSpecialization 0x558928e15cf0 'char_array'
|-TypedefDecl 0x558928e17738 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x558928e17700 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x558928e176e0 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x558928e17680 'type'
|     `-ElaboratedType 0x558928e17630 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x558928e15f60 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x558928e15e60 'type'
|         `-TemplateSpecializationType 0x558928e15df0 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x558928e15cd0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x558928e15cb0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x558928e15c90 <col:24> 'unsigned long' 8
|           `-RecordType 0x558928e15dd0 'char_array<8>'
|             `-ClassTemplateSpecialization 0x558928e15cf0 'char_array'
|-CXXMethodDecl 0x558928e178b8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x558928e177c8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x558928e179a8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x558928e17a88 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x558928e17d58 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x558928e17c60 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x558928e17f98 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x558928e17e10 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558928e17e88 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x558928e18168 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x558928e18058 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558928e180d0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x558928e182c8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x558928e18398 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x558928e185e8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x558928e18458 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x558928e184d0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x558928e18848 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x558928e186b8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x558928e18730 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x558928e18a08 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x558928e18918 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x558928e18bc8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x558928e18ad0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x558928e18c80 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558928e18d30 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x558928e18f68 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x558928e18de0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558928e18e58 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x558928e19208 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x558928e19110 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x558928e192d0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x558928e19320 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x558928e19370 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558928e13fa8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x558928e14650 prev 0x558928e13fa8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x558928e15790 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x558928e15740 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x558928e15720 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x558928e155d0 'type'
|     `-SubstTemplateTypeParmType 0x558928e153f0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x5589289f1e70 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5589289f1e18 'T'
|       `-RecordType 0x558928e14f40 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x558928e14e58 'sized_array_memory'
|-FieldDecl 0x558928e193c0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x558928e19410 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x558928e19448 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x558928e146e0 'Element *' sugar
|   |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x558928ad5a98 'T'
|   `-PointerType 0x558928b45070 'Element *'
|     `-RecordType 0x558928b370c0 'Element'
|       `-CXXRecord 0x558928deafa0 'Element'
|-TypedefDecl 0x558928e194d8 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x558928e194a0 'Element *&'
|   `-SubstTemplateTypeParmType 0x558928e146e0 'Element *' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-PointerType 0x558928b45070 'Element *'
|       `-RecordType 0x558928b370c0 'Element'
|         `-CXXRecord 0x558928deafa0 'Element'
|-TypedefDecl 0x558928e19598 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x558928e19560 'Element *const &'
|   `-QualType 0x558928e146e1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x558928e146e0 'Element *' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-PointerType 0x558928b45070 'Element *'
|         `-RecordType 0x558928b370c0 'Element'
|           `-CXXRecord 0x558928deafa0 'Element'
|-TypedefDecl 0x558928e19628 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x558928e195f0 'Element **'
|   `-SubstTemplateTypeParmType 0x558928e146e0 'Element *' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-PointerType 0x558928b45070 'Element *'
|       `-RecordType 0x558928b370c0 'Element'
|         `-CXXRecord 0x558928deafa0 'Element'
|-TypedefDecl 0x558928e196e8 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x558928e196b0 'Element *const *'
|   `-QualType 0x558928e146e1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x558928e146e0 'Element *' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-PointerType 0x558928b45070 'Element *'
|         `-RecordType 0x558928b370c0 'Element'
|           `-CXXRecord 0x558928deafa0 'Element'
|-TypedefDecl 0x558928e1ad00 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x558928e1acb0 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x558928e1ac90 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x558928e1ac20 'type'
|     `-SubstTemplateTypeParmType 0x558928e19fa0 'Element *' sugar
|       |-TemplateTypeParmType 0x5589289fc260 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5589289fc210 'T'
|       `-PointerType 0x558928b45070 'Element *'
|         `-RecordType 0x558928b370c0 'Element'
|           `-CXXRecord 0x558928deafa0 'Element'
|-TypedefDecl 0x558928e1ad68 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x558928e19560 'Element *const &'
|   `-QualType 0x558928e146e1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x558928e146e0 'Element *' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-PointerType 0x558928b45070 'Element *'
|         `-RecordType 0x558928b370c0 'Element'
|           `-CXXRecord 0x558928deafa0 'Element'
|-TypedefDecl 0x558928e1adc0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5589287d4580 'int'
|-TypedefDecl 0x558928e1ae28 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x558928e195f0 'Element **'
|   `-SubstTemplateTypeParmType 0x558928e146e0 'Element *' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-PointerType 0x558928b45070 'Element *'
|       `-RecordType 0x558928b370c0 'Element'
|         `-CXXRecord 0x558928deafa0 'Element'
|-TypedefDecl 0x558928e1ae90 <line:131:5, col:22> col:22 referenced const_iterator 'Element *const *'
| `-PointerType 0x558928e196b0 'Element *const *'
|   `-QualType 0x558928e146e1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x558928e146e0 'Element *' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-PointerType 0x558928b45070 'Element *'
|         `-RecordType 0x558928b370c0 'Element'
|           `-CXXRecord 0x558928deafa0 'Element'
|-EnumDecl 0x558928e1aee8 <line:134:5> col:5
| `-EnumConstantDecl 0x558928e1afe0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x558928e1afc0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x558928ad74d8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x558928ad74b0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x558928ad7490 <col:40> 'int' 1
|-CXXConstructorDecl 0x558928e1b068 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x558928e1b2f8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x558928e1b120 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928e1b1c0 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x558928e1b588 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x558928e1b470 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x558928e1b848 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x558928e1b730 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x558928e1bb90 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x558928e1ba70 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x558928e1bea0 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x558928e1bd80 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x558928e1c190 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x558928e1bfd8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928e1c050 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x558928e1c2e8 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x558928e1c3c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e1c420 <col:30> Inherited
|-CXXMethodDecl 0x558928e1c468 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x558928e1c518 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e1c570 <col:30> Inherited
|-CXXMethodDecl 0x558928e1c638 <line:152:5, col:63> col:55 used begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x558928e1c6e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e1c740 <col:30> Inherited
|-CXXMethodDecl 0x558928e1c788 <line:153:5, col:61> col:55 used end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x558928e1c838 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e1c890 <col:30> Inherited
|-CXXMethodDecl 0x558928e1c8d8 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x558928e1c988 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e1c9e0 <col:30> Inherited
|-CXXMethodDecl 0x558928e1ca28 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x558928e1cad8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e1cb30 <col:30> Inherited
|-CXXMethodDecl 0x558928e1cb58 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558928e1cc08 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558928e1ccb8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x558928e1ce78 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x558928e1cd68 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928e1cde0 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x558928e1cfc8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x558928e1cf38 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928e1d178 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x558928e1d080 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558928e1d230 <col:20>
| `-OptimizeNoneAttr 0x558928e1d288 <col:30>
|-CXXMethodDecl 0x558928e1d3a8 <line:164:5, col:73> col:49 used operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x558928e1d2b0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558928e1d460 <col:20>
| `-OptimizeNoneAttr 0x558928e1d4b8 <col:30>
|-CXXMethodDecl 0x558928e1d570 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x558928e1d4e0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928e1d6b8 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558928e1d628 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928e1d7e8 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x558928e1d918 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x558928e1d9e8 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x558928e1dab8 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x558928e1dbf8 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x558928e1db68 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928e1dd40 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558928e1dcb0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928e1de88 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x558928e1ddf8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558928e1df40 <col:48> Inherited "" ""
|-CXXMethodDecl 0x558928e1e040 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x558928e1dfb0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558928e1e0f8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x558928e1e1b8 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x558928e1e2b8 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x558928e1e468 <line:180:5, col:48> col:17 used push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x558928e1e378 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x558928e1ec28 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x558928e1e520 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x558928e1eb88 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x558928e1ea88 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x558928e1ed08 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558928e1ee58 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x558928e1edc8 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x558928e1ef10 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x558928e1f158 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x558928e1efd0 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x558928e1f048 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x558928e1f318 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x558928e1f228 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x558928e1f568 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x558928e1f3e0 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x558928e1f458 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x558928e1f628 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x558928e1f888 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x558928e1f790 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x558928e1f958 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x558928e27bc0 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928b0cd60 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x558928b0ce78 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x558928b0cf18 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x558928b0cf78 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x558928b0cfd8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x558928b0d088 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928b0d390 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558928b0d4a8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x558928b0d550 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x558928b0d5b8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x558928b0d648 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x558928b13540 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558928b13978 <col:12>
|-CXXConstructorDecl 0x558928b13648 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x558928b13758 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x558928b0d550 'data' 'const char *'
| | `-ImplicitCastExpr 0x558928b15f00 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x558928b15ed0 <col:12> 'const char *const' lvalue .data 0x558928b0d550
| |     `-DeclRefExpr 0x558928b15eb0 <col:12> 'const String::rep_t' lvalue ParmVar 0x558928b13758 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x558928b0d5b8 'length' 'int'
| | `-ImplicitCastExpr 0x558928b15f90 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x558928b15f60 <col:12> 'const int' lvalue .length 0x558928b0d5b8
| |     `-DeclRefExpr 0x558928b15f40 <col:12> 'const String::rep_t' lvalue ParmVar 0x558928b13758 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x558928b0d648 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x558928b16020 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x558928b15ff0 <col:12> 'String::memo_t *const' lvalue .memo 0x558928b0d648
| |     `-DeclRefExpr 0x558928b15fd0 <col:12> 'const String::rep_t' lvalue ParmVar 0x558928b13758 '' 'const String::rep_t &'
| `-CompoundStmt 0x558928b16078 <col:12>
|-CXXConstructorDecl 0x558928b137f8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x558928b137f8
| `-ParmVarDecl 0x558928b13908 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x558928b18df0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x558928b24828 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x558928b24938 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x558928b24e50 <col:12>
|   |-BinaryOperator 0x558928b24c68 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x558928b24c20 <col:12> 'const char *' lvalue ->data 0x558928b0d550
|   | | `-CXXThisExpr 0x558928b24c10 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x558928b24c50 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x558928b24be0 <col:12> 'const char *const' lvalue .data 0x558928b0d550
|   |     `-DeclRefExpr 0x558928b24bc0 <col:12> 'const String::rep_t' lvalue ParmVar 0x558928b24938 '' 'const String::rep_t &'
|   |-BinaryOperator 0x558928b24d30 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x558928b24ce8 <col:12> 'int' lvalue ->length 0x558928b0d5b8
|   | | `-CXXThisExpr 0x558928b24cd8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x558928b24d18 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x558928b24ca8 <col:12> 'const int' lvalue .length 0x558928b0d5b8
|   |     `-DeclRefExpr 0x558928b24c88 <col:12> 'const String::rep_t' lvalue ParmVar 0x558928b24938 '' 'const String::rep_t &'
|   |-BinaryOperator 0x558928b24df8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x558928b24db0 <col:12> 'String::memo_t *' lvalue ->memo 0x558928b0d648
|   | | `-CXXThisExpr 0x558928b24da0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x558928b24de0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x558928b24d70 <col:12> 'String::memo_t *const' lvalue .memo 0x558928b0d648
|   |     `-DeclRefExpr 0x558928b24d50 <col:12> 'const String::rep_t' lvalue ParmVar 0x558928b24938 '' 'const String::rep_t &'
|   `-ReturnStmt 0x558928b24e40 <col:12>
|     `-UnaryOperator 0x558928b24e28 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558928b24e18 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x558928b249a8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x558928b249a8
  `-ParmVarDecl 0x558928b24ab8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928b04240 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558928b04358 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x558928b043e8 <col:16, col:22> col:16 public
|-TypedefDecl 0x558928b04428 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x5589287d4fd0 'const char *'
|   `-QualType 0x5589287d4521 'const char' const
|     `-BuiltinType 0x5589287d4520 'char'
|-TypedefDecl 0x558928b044b0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x558928b04480 'String::const_iterator' sugar
|   |-Typedef 0x558928b04428 'const_iterator'
|   `-PointerType 0x5589287d4fd0 'const char *'
|     `-QualType 0x5589287d4521 'const char' const
|       `-BuiltinType 0x5589287d4520 'char'
|-TypedefDecl 0x558928b04620 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x558928b04590 'int (String::*)() const'
|   |-RecordType 0x558928b042d0 'String'
|   | `-CXXRecord 0x558928b04240 'String'
|   `-ParenType 0x558928b04530 'int () const' sugar
|     `-FunctionProtoType 0x558928ad9110 'int () const' const cdecl
|       `-BuiltinType 0x5589287d4580 'int'
|-TypedefDecl 0x558928b04688 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55892892dd60 'int64_t' sugar
|   |-Typedef 0x55892883d390 'int64_t'
|   `-TypedefType 0x558928816630 '__int64_t' sugar
|     |-Typedef 0x558928816208 '__int64_t'
|     `-BuiltinType 0x5589287d45a0 'long'
|-TypedefDecl 0x558928b046f0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55892892dc80 'uint64_t' sugar
|   |-Typedef 0x55892883d530 'uint64_t'
|   `-TypedefType 0x5589288166c0 '__uint64_t' sugar
|     |-Typedef 0x558928816278 '__uint64_t'
|     `-BuiltinType 0x5589287d4640 'unsigned long'
|-TypedefDecl 0x558928b04780 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x558928b04750 'String::intmax_t' sugar
|   |-Typedef 0x558928b04688 'intmax_t'
|   `-TypedefType 0x55892892dd60 'int64_t' sugar
|     |-Typedef 0x55892883d390 'int64_t'
|     `-TypedefType 0x558928816630 '__int64_t' sugar
|       |-Typedef 0x558928816208 '__int64_t'
|       `-BuiltinType 0x5589287d45a0 'long'
|-TypedefDecl 0x558928b04810 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x558928b047e0 'String::uintmax_t' sugar
|   |-Typedef 0x558928b046f0 'uintmax_t'
|   `-TypedefType 0x55892892dc80 'uint64_t' sugar
|     |-Typedef 0x55892883d530 'uint64_t'
|     `-TypedefType 0x5589288166c0 '__uint64_t' sugar
|       |-Typedef 0x558928816278 '__uint64_t'
|       `-BuiltinType 0x5589287d4640 'unsigned long'
|-CXXConstructorDecl 0x558928b048d0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x558928b04a78 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x558928b049b8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x558928b04c28 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x558928b04b68 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x558928b04d80 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x558928b04cf0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x558928b04f98 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x558928b04e48 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x558928b04ec8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x558928b051b8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x558928b05068 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x558928b050e8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x558928b053d8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x558928b05288 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x558928b05308 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x558928b055f8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x558928b054a8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x558928b05528 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x558928b05788 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x558928b056c0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x558928b05908 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x558928b05848 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x558928b05a98 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x558928b059d0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x558928b05bf0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x558928b05b60 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x558928b05d48 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x558928b05cb8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x558928b05ea0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x558928b05e10 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x558928b06028 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x558928b05f68 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x558928b061b8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x558928b060f0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x558928b06348 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x558928b06280 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x558928b064d8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x558928b06410 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x558928b065d0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x558928b066f8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x558928b06878 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x558928b067b0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x558928b069c8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x558928b06938 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x558928b06a70 <col:63> "" ""
|-CXXMethodDecl 0x558928b06bb8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x558928b06af8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x558928b06dc8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x558928b06c78 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x558928b06cf8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x558928b07038 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x558928b06e90 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x558928b06f60 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x558928b07318 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x558928b070f8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x558928b07178 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x558928b13010 <col:55> 'int' 10
| `-ParmVarDecl 0x558928b071f0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558928b13030 <col:76> 'bool' true
|-CXXMethodDecl 0x558928b075f8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x558928b073e0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x558928b07460 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x558928b13040 <col:56> 'int' 10
| `-ParmVarDecl 0x558928b074d8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558928b13060 <col:77> 'bool' true
|-CXXMethodDecl 0x558928b07700 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x558928b077c8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x558928b07890 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x558928b07930 <col:20>
| `-OptimizeNoneAttr 0x558928b07988 <col:30>
|-CXXConversionDecl 0x558928b07a78 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x558928b07b48 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x558928b07c08 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x558928b07cf8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x558928b07db8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x558928b07f38 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x558928b07e70 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x558928b08088 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x558928b07ff8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x558928b08178 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x558928b08238 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x558928b08488 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x558928b082f0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x558928b08370 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x558928b086e8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x558928b08550 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x558928b085d0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x558928b087b8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x558928b089c8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x558928b08870 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x558928b088f0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x558928b08be8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x558928b08a90 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x558928b08b10 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x558928b08d78 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x558928b08cb0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x558928b08e68 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x558928b08fd8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x558928b08f18 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x558928b091e8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x558928b09098 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x558928b09118 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x558928b09400 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x558928b092a8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x558928b09320 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x558928b09590 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x558928b094c0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x558928b097b0 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x558928b09650 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x558928b096d0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x558928b09900 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x558928b09870 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x558928b09ad8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x558928b099c0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x558928b09a40 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x558928b09c28 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x558928b09b98 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x558928b09e40 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x558928b09ce0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x558928b09d60 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x558928b13070 <col:39> 'int' 0
|-CXXMethodDecl 0x558928b0a060 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x558928b09f00 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x558928b09f80 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x558928b13090 <col:48> 'int' 0
|-CXXMethodDecl 0x558928b0a240 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x558928b0a120 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x558928b0a1a0 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x558928b130b0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x558928b0a310 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x558928b0a3d0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x558928b0a490 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x558928b0a550 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x558928b0a610 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x558928b0a7b8 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x558928b0a6c0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x558928b0a938 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x558928b0a870 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x558928b0aab8 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x558928b0a9f8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x558928b0ac38 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x558928b0ab70 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x558928b0ad80 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x558928b0acf0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x558928b0af70 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x558928b0ae40 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x558928b0b148 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x558928b0b030 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x558928b0b0b0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x558928b0b328 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x558928b0b210 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x558928b0b290 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x558928b0b478 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x558928b0b3e8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x558928b0b688 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x558928b0b538 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x558928b0b5b8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x558928b0b7e8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x558928b0b750 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x558928b0b940 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x558928b0b8a8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x558928b0b9e8 <col:57> "" ""
|-CXXMethodDecl 0x558928b0baf8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x558928b0ba68 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x558928b0bc48 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x558928b0bbb8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x558928b0bdc8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x558928b0bd00 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x558928b0be90 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x558928b0bf50 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x558928b0c010 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x558928b0c0b0 <col:49> "" ""
|-CXXMethodDecl 0x558928b0c140 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x558928b0c200 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x558928b0c2f0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x558928b0c3b8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x558928b0c478 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x558928b0c538 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x558928b0c630 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x558928b0c6f8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x558928b0c7c0 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x558928b0c998 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x558928b0c878 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x558928b0c8f8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x558928b0cbc0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x558928b0ca60 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x558928b0cae0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x558928b0ccd0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x558928b0cd38 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x558928b0cd60 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x558928b0ce78 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x558928b0cf18 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x558928b0cf78 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x558928b0cfd8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x558928b0d088 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x558928b0d0f0 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x558928b0d328 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x558928b0d378 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558928b0d308 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x558928b0d218 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x558928b0d1c0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x558928b0d200 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x558928b0d1e0 <col:32> 'int' 8
|-CXXRecordDecl 0x558928b0d390 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558928b0d4a8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x558928b0d550 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x558928b0d5b8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x558928b0d648 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x558928b13540 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x558928b13978 <col:12>
| |-CXXConstructorDecl 0x558928b13648 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x558928b13758 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x558928b0d550 'data' 'const char *'
| | | `-ImplicitCastExpr 0x558928b15f00 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x558928b15ed0 <col:12> 'const char *const' lvalue .data 0x558928b0d550
| | |     `-DeclRefExpr 0x558928b15eb0 <col:12> 'const String::rep_t' lvalue ParmVar 0x558928b13758 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x558928b0d5b8 'length' 'int'
| | | `-ImplicitCastExpr 0x558928b15f90 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x558928b15f60 <col:12> 'const int' lvalue .length 0x558928b0d5b8
| | |     `-DeclRefExpr 0x558928b15f40 <col:12> 'const String::rep_t' lvalue ParmVar 0x558928b13758 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x558928b0d648 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x558928b16020 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x558928b15ff0 <col:12> 'String::memo_t *const' lvalue .memo 0x558928b0d648
| | |     `-DeclRefExpr 0x558928b15fd0 <col:12> 'const String::rep_t' lvalue ParmVar 0x558928b13758 '' 'const String::rep_t &'
| | `-CompoundStmt 0x558928b16078 <col:12>
| |-CXXConstructorDecl 0x558928b137f8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x558928b137f8
| | `-ParmVarDecl 0x558928b13908 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x558928b18df0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x558928b24828 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x558928b24938 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x558928b24e50 <col:12>
| |   |-BinaryOperator 0x558928b24c68 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x558928b24c20 <col:12> 'const char *' lvalue ->data 0x558928b0d550
| |   | | `-CXXThisExpr 0x558928b24c10 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x558928b24c50 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x558928b24be0 <col:12> 'const char *const' lvalue .data 0x558928b0d550
| |   |     `-DeclRefExpr 0x558928b24bc0 <col:12> 'const String::rep_t' lvalue ParmVar 0x558928b24938 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x558928b24d30 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x558928b24ce8 <col:12> 'int' lvalue ->length 0x558928b0d5b8
| |   | | `-CXXThisExpr 0x558928b24cd8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x558928b24d18 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x558928b24ca8 <col:12> 'const int' lvalue .length 0x558928b0d5b8
| |   |     `-DeclRefExpr 0x558928b24c88 <col:12> 'const String::rep_t' lvalue ParmVar 0x558928b24938 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x558928b24df8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x558928b24db0 <col:12> 'String::memo_t *' lvalue ->memo 0x558928b0d648
| |   | | `-CXXThisExpr 0x558928b24da0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x558928b24de0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x558928b24d70 <col:12> 'String::memo_t *const' lvalue .memo 0x558928b0d648
| |   |     `-DeclRefExpr 0x558928b24d50 <col:12> 'const String::rep_t' lvalue ParmVar 0x558928b24938 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x558928b24e40 <col:12>
| |     `-UnaryOperator 0x558928b24e28 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x558928b24e18 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x558928b249a8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x558928b249a8
|   `-ParmVarDecl 0x558928b24ab8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x558928b0d6c0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x558928b0d908 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x558928b0d728 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x558928b0d7a8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x558928b0d820 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x558928b13500 <col:79, line:261:5>
|   |-BinaryOperator 0x558928b13178 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x558928b13110 <col:2, col:5> 'const char *' lvalue .data 0x558928b0d550
|   | | `-MemberExpr 0x558928b130e0 <col:2> 'String::rep_t' lvalue ->_r 0x558928b0d6c0
|   | |   `-CXXThisExpr 0x558928b130d0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x558928b13160 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x558928b13140 <col:12> 'const char *' lvalue ParmVar 0x558928b0d728 'data' 'const char *'
|   |-BinaryOperator 0x558928b13240 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x558928b131d8 <col:2, col:5> 'int' lvalue .length 0x558928b0d5b8
|   | | `-MemberExpr 0x558928b131a8 <col:2> 'String::rep_t' lvalue ->_r 0x558928b0d6c0
|   | |   `-CXXThisExpr 0x558928b13198 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x558928b13228 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x558928b13208 <col:14> 'int' lvalue ParmVar 0x558928b0d7a8 'length' 'int'
|   `-IfStmt 0x558928b134e8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x558928b13360 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x558928b13348 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x558928b13328 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x558928b13308 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x558928b132a0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x558928b0d648
|     |       | `-MemberExpr 0x558928b13270 <col:7> 'String::rep_t' lvalue ->_r 0x558928b0d6c0
|     |       |   `-CXXThisExpr 0x558928b13260 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x558928b132f0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x558928b132d0 <col:17> 'String::memo_t *' lvalue ParmVar 0x558928b0d820 'memo' 'String::memo_t *'
|     `-CallExpr 0x558928b134c0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x558928b134a8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558928b133b0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x558928afe300 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x558928b13418 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x558928b0cf18
|         `-ImplicitCastExpr 0x558928b13400 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x558928b133e0 <col:27> 'String::memo_t *' lvalue ParmVar 0x558928b0d820 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x558928b0dbb8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x558928b0d9d8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x558928b0da58 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x558928b0dad0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x558928b0d6c0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x558928b13988 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558928b13b18 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x558928b13a80 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x558928b139f0 <col:2> '<bound member function type>' ->assign_memo 0x558928b0d908
|     | `-ImplicitCastExpr 0x558928b13ab8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x558928b139e0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x558928b13ad0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x558928b13a20 <col:14> 'const char *' lvalue ParmVar 0x558928b0d9d8 'data' 'const char *'
|     |-ImplicitCastExpr 0x558928b13ae8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x558928b13a40 <col:20> 'int' lvalue ParmVar 0x558928b0da58 'length' 'int'
|     `-ImplicitCastExpr 0x558928b13b00 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x558928b13a60 <col:28> 'String::memo_t *' lvalue ParmVar 0x558928b0dad0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x558928b0dd48 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x558928b0dc88 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x558928b13d70 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x558928b13cf0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x558928b13b40 <col:2> '<bound member function type>' ->assign_memo 0x558928b0d908
|     | `-CXXThisExpr 0x558928b13b30 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x558928b13d28 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x558928b13bc0 <col:14, col:19> 'const char *' lvalue .data 0x558928b0d550
|     |   `-MemberExpr 0x558928b13b90 <col:14, col:16> 'String::rep_t' lvalue ._r 0x558928b0d6c0
|     |     `-DeclRefExpr 0x558928b13b70 <col:14> 'const String' lvalue ParmVar 0x558928b0dc88 'x' 'const String &'
|     |-ImplicitCastExpr 0x558928b13d40 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x558928b13c40 <col:25, col:30> 'int' lvalue .length 0x558928b0d5b8
|     |   `-MemberExpr 0x558928b13c10 <col:25, col:27> 'String::rep_t' lvalue ._r 0x558928b0d6c0
|     |     `-DeclRefExpr 0x558928b13bf0 <col:25> 'const String' lvalue ParmVar 0x558928b0dc88 'x' 'const String &'
|     `-ImplicitCastExpr 0x558928b13d58 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x558928b13cc0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x558928b0d648
|         `-MemberExpr 0x558928b13c90 <col:38, col:40> 'String::rep_t' lvalue ._r 0x558928b0d6c0
|           `-DeclRefExpr 0x558928b13c70 <col:38> 'const String' lvalue ParmVar 0x558928b0dc88 'x' 'const String &'
|-CXXMethodDecl 0x558928b0de10 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x558928b14730 <col:31, line:278:5>
|   `-IfStmt 0x558928b14718 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x558928b13e10 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x558928b13df8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x558928b13dc8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x558928b0d648
|     |     `-MemberExpr 0x558928b13d98 <col:6> 'String::rep_t' lvalue ->_r 0x558928b0d6c0
|     |       `-CXXThisExpr 0x558928b13d88 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x558928b146f0 <col:15, line:277:2>
|       |-ParenExpr 0x558928b142c0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x558928b14290 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x558928b13f20 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x558928b13f08 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x558928b13ef0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x558928b13eb0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x558928b0cf18
|       |   |       `-ImplicitCastExpr 0x558928b13e98 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x558928b13e68 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x558928b0d648
|       |   |           `-MemberExpr 0x558928b13e38 <col:27> 'String::rep_t' lvalue ->_r 0x558928b0d6c0
|       |   |             `-CXXThisExpr 0x558928b13e28 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x558928b13f80 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x558928b13f60 <col:54> 'int' 0
|       |   `-CallExpr 0x558928b141f0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x558928b141d8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x558928b14158 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558928874570 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x558928b14230 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x558928b14068 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x558928b14248 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x558928b14098 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x558928b14260 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x558928b140d0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x558928b14278 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x558928b14140 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x558928b14128 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x558928b140f0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x558928b14610 <line:274:6, line:275:22>
|       | |-CallExpr 0x558928b144d0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x558928b144b8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x558928b14430 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x558928aff740 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x558928b14400 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x558928b0cf18
|       | |   `-ImplicitCastExpr 0x558928b143e8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x558928b143b8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x558928b0d648
|       | |       `-MemberExpr 0x558928b14388 <col:40> 'String::rep_t' lvalue ->_r 0x558928b0d6c0
|       | |         `-CXXThisExpr 0x558928b14378 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x558928b145d0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x558928b145b8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x558928b144f8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x558928b0eae8 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x558928b145f8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x558928b14558 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x558928b0d648
|       |       `-MemberExpr 0x558928b14528 <col:15> 'String::rep_t' lvalue ->_r 0x558928b0d6c0
|       |         `-CXXThisExpr 0x558928b14518 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x558928b146d0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x558928b14668 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x558928b0d648
|         | `-MemberExpr 0x558928b14638 <col:6> 'String::rep_t' lvalue ->_r 0x558928b0d6c0
|         |   `-CXXThisExpr 0x558928b14628 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x558928b146b8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x558928b14698 <col:16> 'int' 0
|-CXXMethodDecl 0x558928b0e0a8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x558928b0dec8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x558928b0df48 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x558928b0dfc0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x558928b0e180 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x558928b0e3d0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x558928b0e238 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x558928b0e2b8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x558928b0e330 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x558928b0e5b8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x558928b0e4a0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x558928b0e520 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x558928b0e6b8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x558928b14808 <col:41, line:286:5>
|   `-ReturnStmt 0x558928b147f8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x558928b147c8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x558928b14790 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x558928b14778 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x558928b14758 <col:46> 'int' 1
|-CXXMethodDecl 0x558928b0e958 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x558928b0e770 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x558928b0e7f0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x558928b0e870 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x558928b0eae8 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x558928b0ea20 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x558928b0ebb8 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x558928b0ed88 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x558928b0ec70 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x558928b0ecf0 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x558928b0ee48 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x558928b12870 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x558928b12978 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x558928b129f0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x558928b12a68 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x558928b12ad0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x558928b12bd0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x558928b12c20 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558928b12bb0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x558928b12b90 <col:22> 'int' 14
|-CXXMethodDecl 0x558928b12e38 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x558928b12c50 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x558928b12cd0 <col:38> col:41 'int'
| `-ParmVarDecl 0x558928b12d50 <col:43> col:46 'int'
|-FriendDecl 0x558928b12f40 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x558928b12fd0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558928b56810 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x558928b569e8 prev 0x558928b56810 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x558928b56a78 <col:46, col:52> col:46 public
|-TypedefDecl 0x558928b56aa0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5589287d4580 'int'
|-TypedefDecl 0x558928b58ba0 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x558928b58b50 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x558928b58b30 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x558928b56cb8 'type'
|     `-SubstTemplateTypeParmType 0x558928b56c80 'String' sugar
|       |-TemplateTypeParmType 0x558928ac8dc0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ac8d70 'T'
|       `-RecordType 0x558928b042d0 'String'
|         `-CXXRecord 0x558928b04240 'String'
|-TypedefDecl 0x558928b58c58 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x558928b58c20 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x558928b58c00 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x558928b58ba0 'type'
|     `-ElaboratedType 0x558928b58b50 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x558928b58b30 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x558928b56cb8 'type'
|         `-SubstTemplateTypeParmType 0x558928b56c80 'String' sugar
|           |-TemplateTypeParmType 0x558928ac8dc0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x558928ac8d70 'T'
|           `-RecordType 0x558928b042d0 'String'
|             `-CXXRecord 0x558928b04240 'String'
|-CXXMethodDecl 0x558928b58dd8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x558928b58ce8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x558928b58ec8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x558928b58fa8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x558928b58fa8
|-CXXMethodDecl 0x558928b59278 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x558928b59180 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x558928b594b8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x558928b59330 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558928b593a8 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x558928b59688 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x558928b59578 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558928b595f0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x558928b597e8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x558928b598b8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x558928b59b08 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x558928b59978 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x558928b599f0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x558928b59d68 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x558928b59bd8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x558928b59c50 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x558928b59f28 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x558928b59e38 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x558928b5a0e8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x558928b59ff0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x558928b5a1a0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558928b5a250 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x558928b5a488 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x558928b5a300 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558928b5a378 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x558928b5a728 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x558928b5a630 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x558928b5a7f0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x558928b5a840 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x558928b5a890 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558928b38670 <../dummy_inc/click/vector.hh:110:1, line:197:1> line:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x558928b55278 prev 0x558928b38670 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x558928b56780 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x558928b56730 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x558928b56710 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x558928b565c0 'type'
|     `-SubstTemplateTypeParmType 0x558928b56450 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x5589289f25f0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x5589289f2598 'F'
|       `-RecordType 0x558928b560b0 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x558928b55fd0 'typed_array_memory'
|-FieldDecl 0x558928b5a8e0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x558928b5a930 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x558928b5a968 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x558928b55310 'String' sugar
|   |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x558928ad5a98 'T'
|   `-RecordType 0x558928b042d0 'String'
|     `-CXXRecord 0x558928b04240 'String'
|-TypedefDecl 0x558928b5a9f8 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x558928b5a9c0 'String &'
|   `-SubstTemplateTypeParmType 0x558928b55310 'String' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-RecordType 0x558928b042d0 'String'
|       `-CXXRecord 0x558928b04240 'String'
|-TypedefDecl 0x558928b5aa88 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x558928b5aa50 'const String &'
|   `-QualType 0x558928b55311 'const String' const
|     `-SubstTemplateTypeParmType 0x558928b55310 'String' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-RecordType 0x558928b042d0 'String'
|         `-CXXRecord 0x558928b04240 'String'
|-TypedefDecl 0x558928b5ab18 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x558928b5aae0 'String *'
|   `-SubstTemplateTypeParmType 0x558928b55310 'String' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-RecordType 0x558928b042d0 'String'
|       `-CXXRecord 0x558928b04240 'String'
|-TypedefDecl 0x558928b5aba8 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x558928b5ab70 'const String *'
|   `-QualType 0x558928b55311 'const String' const
|     `-SubstTemplateTypeParmType 0x558928b55310 'String' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-RecordType 0x558928b042d0 'String'
|         `-CXXRecord 0x558928b04240 'String'
|-TypedefDecl 0x558928b5b800 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x558928b5b7b0 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x558928b5b790 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x558928b5b6c8 'type'
|     `-LValueReferenceType 0x558928b5b690 'const String &'
|       `-QualType 0x558928b5b431 'const String' const
|         `-SubstTemplateTypeParmType 0x558928b5b430 'String' sugar
|           |-TemplateTypeParmType 0x5589289fa920 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5589289fa8c8 'T'
|           `-RecordType 0x558928b042d0 'String'
|             `-CXXRecord 0x558928b04240 'String'
|-TypedefDecl 0x558928b5b868 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x558928b5aa50 'const String &'
|   `-QualType 0x558928b55311 'const String' const
|     `-SubstTemplateTypeParmType 0x558928b55310 'String' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-RecordType 0x558928b042d0 'String'
|         `-CXXRecord 0x558928b04240 'String'
|-TypedefDecl 0x558928b5b8c0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5589287d4580 'int'
|-TypedefDecl 0x558928b5b928 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x558928b5aae0 'String *'
|   `-SubstTemplateTypeParmType 0x558928b55310 'String' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-RecordType 0x558928b042d0 'String'
|       `-CXXRecord 0x558928b04240 'String'
|-TypedefDecl 0x558928b5b990 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x558928b5ab70 'const String *'
|   `-QualType 0x558928b55311 'const String' const
|     `-SubstTemplateTypeParmType 0x558928b55310 'String' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-RecordType 0x558928b042d0 'String'
|         `-CXXRecord 0x558928b04240 'String'
|-EnumDecl 0x558928b5b9e8 <line:134:5> col:5
| `-EnumConstantDecl 0x558928b5bae0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x558928b5bac0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x558928ad74d8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x558928ad74b0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x558928ad7490 <col:40> 'int' 1
|-CXXConstructorDecl 0x558928b5bb68 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x558928b5bdf8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x558928b5bc20 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928b5bcc0 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x558928b5c088 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x558928b5bf70 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x558928b5c348 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x558928b5c230 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x558928b5d030 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x558928b5cf10 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x558928b5d340 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x558928b5d220 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x558928b5d630 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x558928b5d478 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928b5d4f0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x558928b5d758 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x558928b5d808 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928b5d860 <col:30> Inherited
|-CXXMethodDecl 0x558928b5d8a8 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x558928b5d958 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928b5d9b0 <col:30> Inherited
|-CXXMethodDecl 0x558928b5da78 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x558928b5db28 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928b5db80 <col:30> Inherited
|-CXXMethodDecl 0x558928b5dbc8 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x558928b5dc78 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928b5dcd0 <col:30> Inherited
|-CXXMethodDecl 0x558928b5dd18 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x558928b5ddc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928b5de20 <col:30> Inherited
|-CXXMethodDecl 0x558928b5de68 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x558928b5df18 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928b5df70 <col:30> Inherited
|-CXXMethodDecl 0x558928b5df98 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558928b5e048 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558928b5e0f8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x558928b5e2b8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x558928b5e1a8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928b5e220 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x558928b5e408 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x558928b5e378 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928b5e5b8 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x558928b5e4c0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558928b5e670 <col:20>
| `-OptimizeNoneAttr 0x558928b5e6c8 <col:30>
|-CXXMethodDecl 0x558928b5e7e8 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x558928b5e6f0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558928b5e8a0 <col:20>
| `-OptimizeNoneAttr 0x558928b5e8f8 <col:30>
|-CXXMethodDecl 0x558928b5e9b0 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x558928b5e920 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928b5eaf8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558928b5ea68 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928b5ec28 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x558928b5ed58 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x558928b5ee28 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x558928b5eef8 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x558928b5f038 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x558928b5efa8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928b5f180 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558928b5f0f0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928b5f2c8 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x558928b5f238 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558928b5f380 <col:48> Inherited "" ""
|-CXXMethodDecl 0x558928b5f480 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x558928b5f3f0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558928b5f538 <col:60> Inherited "" ""
|-CXXMethodDecl 0x558928b5f5f8 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x558928b5f6f8 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x558928b5f878 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x558928b5f7b8 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x558928b60038 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x558928b5f930 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x558928b5ff98 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x558928b5fe98 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x558928b60118 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558928b60268 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x558928b601d8 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x558928b60320 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x558928b60568 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x558928b603e0 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x558928b60458 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x558928b606f8 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x558928b60638 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x558928b60908 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x558928b607c0 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x558928b60838 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x558928b609c8 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x558928b60c28 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x558928b60b30 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x558928b60cf8 <line:111:7> col:7 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x558928b60cf8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558928d43100 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x558928d432d8 prev 0x558928d43100 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x558928d43368 <col:46, col:52> col:46 public
|-TypedefDecl 0x558928d43390 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5589287d4580 'int'
|-TypedefDecl 0x558928d44f60 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x558928d44f10 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x558928d43840 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x558928d43740 'type'
|     `-TemplateSpecializationType 0x558928d436d0 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x558928d435b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x558928d43590 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x558928d43570 <col:24> 'unsigned long' 4
|       `-RecordType 0x558928d436b0 'char_array<4>'
|         `-ClassTemplateSpecialization 0x558928d435d0 'char_array'
|-TypedefDecl 0x558928d47c58 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x558928d47c20 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x558928d47c00 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x558928d44f60 'type'
|     `-ElaboratedType 0x558928d44f10 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x558928d43840 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x558928d43740 'type'
|         `-TemplateSpecializationType 0x558928d436d0 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x558928d435b0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x558928d43590 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x558928d43570 <col:24> 'unsigned long' 4
|           `-RecordType 0x558928d436b0 'char_array<4>'
|             `-ClassTemplateSpecialization 0x558928d435d0 'char_array'
|-CXXMethodDecl 0x558928d47dd8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x558928d47ce8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x558928d47ec8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x558928d47fa8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x558928d47fa8
|-CXXMethodDecl 0x558928d48278 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x558928d48180 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x558928d484b8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x558928d48330 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558928d483a8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x558928d48688 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x558928d48578 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558928d485f0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x558928d487e8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x558928d488b8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x558928d48b08 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x558928d48978 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x558928d489f0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x558928d48d68 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x558928d48bd8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x558928d48c50 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x558928d48f28 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x558928d48e38 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x558928d490e8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x558928d48ff0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x558928d491a0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558928d49250 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x558928d49488 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x558928d49300 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558928d49378 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x558928d49728 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x558928d49630 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x558928d497f0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x558928d49840 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x558928d49890 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558928eced10 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x558928ecef18 prev 0x558928eced10 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x558928ecff30 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x558928ecfee0 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x558928ecfec0 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x558928ecfd70 'type'
|     `-SubstTemplateTypeParmType 0x558928d42cd0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x5589289f1e70 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5589289f1e18 'T'
|       `-RecordType 0x558928d42820 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x558928d42738 'sized_array_memory'
|-FieldDecl 0x558928ed0030 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x558928ed0080 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x558928ed00b8 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x558928ecefb0 'unsigned int' sugar
|   |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x558928ad5a98 'T'
|   `-BuiltinType 0x5589287d4620 'unsigned int'
|-TypedefDecl 0x558928ed0148 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x558928ed0110 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x558928ecefb0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-BuiltinType 0x5589287d4620 'unsigned int'
|-TypedefDecl 0x558928ed0208 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x558928ed01d0 'const unsigned int &'
|   `-QualType 0x558928ecefb1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x558928ecefb0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-BuiltinType 0x5589287d4620 'unsigned int'
|-TypedefDecl 0x558928ed0298 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x558928ed0260 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x558928ecefb0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-BuiltinType 0x5589287d4620 'unsigned int'
|-TypedefDecl 0x558928ed0328 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x558928ed02f0 'const unsigned int *'
|   `-QualType 0x558928ecefb1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x558928ecefb0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-BuiltinType 0x5589287d4620 'unsigned int'
|-TypedefDecl 0x558928ed0f10 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x558928ed0ec0 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x558928ed0ea0 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x558928ed0e30 'type'
|     `-SubstTemplateTypeParmType 0x558928ed0bf0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x5589289fc260 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5589289fc210 'T'
|       `-BuiltinType 0x5589287d4620 'unsigned int'
|-TypedefDecl 0x558928ed0f78 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x558928ed01d0 'const unsigned int &'
|   `-QualType 0x558928ecefb1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x558928ecefb0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-BuiltinType 0x5589287d4620 'unsigned int'
|-TypedefDecl 0x558928ed0fd0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5589287d4580 'int'
|-TypedefDecl 0x558928ed1038 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x558928ed0260 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x558928ecefb0 'unsigned int' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-BuiltinType 0x5589287d4620 'unsigned int'
|-TypedefDecl 0x558928ed10a0 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x558928ed02f0 'const unsigned int *'
|   `-QualType 0x558928ecefb1 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x558928ecefb0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-BuiltinType 0x5589287d4620 'unsigned int'
|-EnumDecl 0x558928ed10f8 <line:134:5> col:5
| `-EnumConstantDecl 0x558928ed11f0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x558928ed11d0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x558928ad74d8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x558928ad74b0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x558928ad7490 <col:40> 'int' 1
|-CXXConstructorDecl 0x558928ed1278 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x558928ed14c8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x558928ed1330 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928ed13d0 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x558928ed1788 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x558928ed1670 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x558928ed1a48 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x558928ed1930 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x558928ed1d90 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x558928ed1c70 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x558928ed20a0 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x558928ed1f80 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x558928ed2390 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x558928ed21d8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928ed2250 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x558928ed24b8 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x558928ed2598 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928ed25f0 <col:30> Inherited
|-CXXMethodDecl 0x558928ed2638 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x558928ed26e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928ed2740 <col:30> Inherited
|-CXXMethodDecl 0x558928ed27d8 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x558928ed2888 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928ed28e0 <col:30> Inherited
|-CXXMethodDecl 0x558928ed2928 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x558928ed29d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928ed2a30 <col:30> Inherited
|-CXXMethodDecl 0x558928ed2a78 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x558928ed2b28 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928ed2b80 <col:30> Inherited
|-CXXMethodDecl 0x558928ed2bc8 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x558928ed2c78 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928ed2cd0 <col:30> Inherited
|-CXXMethodDecl 0x558928ed2cf8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558928ed2da8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558928ed2e58 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x558928ed3018 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x558928ed2f08 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928ed2f80 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x558928ed3168 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x558928ed30d8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928ed3318 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x558928ed3220 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558928ed33d0 <col:20>
| `-OptimizeNoneAttr 0x558928ed3428 <col:30>
|-CXXMethodDecl 0x558928ed3548 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x558928ed3450 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558928ed3600 <col:20>
| `-OptimizeNoneAttr 0x558928ed3658 <col:30>
|-CXXMethodDecl 0x558928ed3710 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x558928ed3680 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928ed3d40 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558928ed37c8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928ed3e78 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x558928ed3fa8 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x558928ed4078 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x558928ed4148 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x558928ed4288 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x558928ed41f8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928ed43d0 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558928ed4340 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928ed4518 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x558928ed4488 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558928ed45d0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x558928ed46d0 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x558928ed4640 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558928ed4788 <col:60> Inherited "" ""
|-CXXMethodDecl 0x558928ed4848 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x558928ed4948 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x558928ed4ac8 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x558928ed4a08 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x558928ed5288 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x558928ed4b80 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x558928ed51e8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x558928ed50e8 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x558928ed5368 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558928ed54b8 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x558928ed5428 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x558928ed5570 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x558928ed57b8 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x558928ed5630 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x558928ed56a8 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x558928ed5978 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x558928ed5888 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x558928ed5bc8 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x558928ed5a40 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x558928ed5ab8 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x558928ed5c88 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x558928ed5ee8 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x558928ed5df0 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x558928ed5fb8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x558928ed5fb8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558928d41b08 <../dummy_inc/click/vector.hh:110:1, line:197:1> line:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x558928d41d18 prev 0x558928d41b08 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x558928d43070 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x558928d43020 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x558928d43000 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x558928d42eb0 'type'
|     `-SubstTemplateTypeParmType 0x558928d42cd0 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x5589289f1e70 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5589289f1e18 'T'
|       `-RecordType 0x558928d42820 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x558928d42738 'sized_array_memory'
|-FieldDecl 0x558928d498e0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x558928d49930 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x558928d49968 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x558928d41db0 'int' sugar
|   |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x558928ad5a98 'T'
|   `-BuiltinType 0x5589287d4580 'int'
|-TypedefDecl 0x558928d499f8 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x558928d499c0 'int &'
|   `-SubstTemplateTypeParmType 0x558928d41db0 'int' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-BuiltinType 0x5589287d4580 'int'
|-TypedefDecl 0x558928d49ab8 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x558928d49a80 'const int &'
|   `-QualType 0x558928d41db1 'const int' const
|     `-SubstTemplateTypeParmType 0x558928d41db0 'int' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-BuiltinType 0x5589287d4580 'int'
|-TypedefDecl 0x558928d49b48 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x558928d49b10 'int *'
|   `-SubstTemplateTypeParmType 0x558928d41db0 'int' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-BuiltinType 0x5589287d4580 'int'
|-TypedefDecl 0x558928d49bd8 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x558928d49ba0 'const int *'
|   `-QualType 0x558928d41db1 'const int' const
|     `-SubstTemplateTypeParmType 0x558928d41db0 'int' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-BuiltinType 0x5589287d4580 'int'
|-TypedefDecl 0x558928d4a7c0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x558928d4a770 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x558928d4a750 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x558928d4a6e0 'type'
|     `-SubstTemplateTypeParmType 0x558928d4a4a0 'int' sugar
|       |-TemplateTypeParmType 0x5589289fc260 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5589289fc210 'T'
|       `-BuiltinType 0x5589287d4580 'int'
|-TypedefDecl 0x558928d4a828 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x558928d49a80 'const int &'
|   `-QualType 0x558928d41db1 'const int' const
|     `-SubstTemplateTypeParmType 0x558928d41db0 'int' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-BuiltinType 0x5589287d4580 'int'
|-TypedefDecl 0x558928d4a880 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5589287d4580 'int'
|-TypedefDecl 0x558928d4a8e8 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x558928d49b10 'int *'
|   `-SubstTemplateTypeParmType 0x558928d41db0 'int' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-BuiltinType 0x5589287d4580 'int'
|-TypedefDecl 0x558928d4a950 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x558928d49ba0 'const int *'
|   `-QualType 0x558928d41db1 'const int' const
|     `-SubstTemplateTypeParmType 0x558928d41db0 'int' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-BuiltinType 0x5589287d4580 'int'
|-EnumDecl 0x558928d4a9a8 <line:134:5> col:5
| `-EnumConstantDecl 0x558928d4aaa0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x558928d4aa80 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x558928ad74d8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x558928ad74b0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x558928ad7490 <col:40> 'int' 1
|-CXXConstructorDecl 0x558928d4ab28 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x558928d4ad78 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x558928d4abe0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928d4ac80 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x558928d4b038 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x558928d4af20 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x558928d4b2f8 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x558928d4b1e0 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x558928d4b640 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x558928d4b520 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x558928d4b950 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x558928d4b830 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x558928d4c6c8 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x558928d4ba88 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928d4bb00 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x558928d4c7f8 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x558928d4c8d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928d4c930 <col:30> Inherited
|-CXXMethodDecl 0x558928d4c978 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x558928d4ca28 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928d4ca80 <col:30> Inherited
|-CXXMethodDecl 0x558928d4cb48 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x558928d4cbf8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928d4cc50 <col:30> Inherited
|-CXXMethodDecl 0x558928d4cc98 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x558928d4cd48 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928d4cda0 <col:30> Inherited
|-CXXMethodDecl 0x558928d4cde8 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x558928d4ce98 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928d4cef0 <col:30> Inherited
|-CXXMethodDecl 0x558928d4cf38 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x558928d4cfe8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928d4d040 <col:30> Inherited
|-CXXMethodDecl 0x558928d4d068 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558928d4d118 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558928d4d1c8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x558928d4d388 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x558928d4d278 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928d4d2f0 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x558928d4d4d8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x558928d4d448 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928d4d688 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x558928d4d590 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558928d4d740 <col:20>
| `-OptimizeNoneAttr 0x558928d4d798 <col:30>
|-CXXMethodDecl 0x558928d4d8b8 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x558928d4d7c0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558928d4d970 <col:20>
| `-OptimizeNoneAttr 0x558928d4d9c8 <col:30>
|-CXXMethodDecl 0x558928d4da80 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x558928d4d9f0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928d4dbc8 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558928d4db38 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928d4dcf8 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x558928d4de28 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x558928d4def8 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x558928d4dfc8 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x558928d4e108 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x558928d4e078 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928d4e250 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558928d4e1c0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928d4e398 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x558928d4e308 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558928d4e450 <col:48> Inherited "" ""
|-CXXMethodDecl 0x558928d4e550 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x558928d4e4c0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558928d4e608 <col:60> Inherited "" ""
|-CXXMethodDecl 0x558928d4e6c8 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x558928d4e7c8 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x558928d4e948 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x558928d4e888 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x558928d4f108 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x558928d4ea00 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x558928d4f068 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x558928d4ef68 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x558928d4f1e8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558928d4f338 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x558928d4f2a8 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x558928d4f3f0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x558928d4f638 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x558928d4f4b0 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x558928d4f528 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x558928d4f7f8 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x558928d4f708 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x558928d4fa48 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x558928d4f8c0 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x558928d4f938 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x558928d4fb08 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x558928d4fd68 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x558928d4fc70 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x558928d4fe38 <line:111:7> col:7 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x558928d4fe38

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928ed6200 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x558928ed6318 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x558928ed63b8 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x558928ed6418 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x558928ed64b0 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x558928ed64b0
| `-ParmVarDecl 0x558928ed65c8 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x558928ed6668 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x558928ed6668
| `-ParmVarDecl 0x558928ed6778 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x558928ed6818 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x558928ed6818
| `-ParmVarDecl 0x558928ed6928 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x558928ed6998 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x558928ed6998
| `-ParmVarDecl 0x558928ed6aa8 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x558928ed6b30 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x558928ed6b30

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558928ed80c0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x558928ed8298 prev 0x558928ed80c0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x558928ed8328 <col:46, col:52> col:46 public
|-TypedefDecl 0x558928ed8350 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5589287d4580 'int'
|-TypedefDecl 0x558928ed9d10 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x558928ed9cc0 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x558928ed9ca0 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x558928ed8568 'type'
|     `-SubstTemplateTypeParmType 0x558928ed8530 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x558928ac8dc0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ac8d70 'T'
|       `-RecordType 0x558928ed6290 'Router::element_landmark_t'
|         `-CXXRecord 0x558928ed6200 'element_landmark_t'
|-TypedefDecl 0x558928ed9dc8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x558928ed9d90 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x558928ed9d70 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x558928ed9d10 'type'
|     `-ElaboratedType 0x558928ed9cc0 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x558928ed9ca0 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x558928ed8568 'type'
|         `-SubstTemplateTypeParmType 0x558928ed8530 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x558928ac8dc0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x558928ac8d70 'T'
|           `-RecordType 0x558928ed6290 'Router::element_landmark_t'
|             `-CXXRecord 0x558928ed6200 'element_landmark_t'
|-CXXMethodDecl 0x558928ed9f48 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x558928ed9e58 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x558928eda038 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x558928eda118 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x558928eda118
|-CXXMethodDecl 0x558928eda3e8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x558928eda2f0 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x558928eda628 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x558928eda4a0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558928eda518 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x558928eda7f8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x558928eda6e8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558928eda760 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x558928eda958 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x558928edaa28 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x558928edac78 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x558928edaae8 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x558928edab60 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x558928edaed8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x558928edad48 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x558928edadc0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x558928edb098 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x558928edafa8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x558928edb258 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x558928edb160 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x558928edb310 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558928edb3c0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x558928edb5f8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x558928edb470 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558928edb4e8 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x558928edb898 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x558928edb7a0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x558928edb960 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x558928edb9b0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x558928edba00 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558928ed6c20 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x558928ed6e28 prev 0x558928ed6c20 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x558928ed8030 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x558928ed7fe0 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x558928ed7fc0 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x558928ed7e70 'type'
|     `-SubstTemplateTypeParmType 0x558928ed7d00 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x5589289f25f0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x5589289f2598 'F'
|       `-RecordType 0x558928ed7960 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x558928ed7880 'typed_array_memory'
|-FieldDecl 0x558928edba50 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x558928edbaa0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x558928edbad8 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x558928ed6ec0 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x558928ad5a98 'T'
|   `-RecordType 0x558928ed6290 'Router::element_landmark_t'
|     `-CXXRecord 0x558928ed6200 'element_landmark_t'
|-TypedefDecl 0x558928edbb68 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x558928edbb30 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x558928ed6ec0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-RecordType 0x558928ed6290 'Router::element_landmark_t'
|       `-CXXRecord 0x558928ed6200 'element_landmark_t'
|-TypedefDecl 0x558928edbbf8 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x558928edbbc0 'const Router::element_landmark_t &'
|   `-QualType 0x558928ed6ec1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x558928ed6ec0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-RecordType 0x558928ed6290 'Router::element_landmark_t'
|         `-CXXRecord 0x558928ed6200 'element_landmark_t'
|-TypedefDecl 0x558928edbc88 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x558928edbc50 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x558928ed6ec0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-RecordType 0x558928ed6290 'Router::element_landmark_t'
|       `-CXXRecord 0x558928ed6200 'element_landmark_t'
|-TypedefDecl 0x558928eddf30 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x558928edbce0 'const Router::element_landmark_t *'
|   `-QualType 0x558928ed6ec1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x558928ed6ec0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-RecordType 0x558928ed6290 'Router::element_landmark_t'
|         `-CXXRecord 0x558928ed6200 'element_landmark_t'
|-TypedefDecl 0x558928edeb90 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x558928edeb40 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x558928edeb20 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x558928edea58 'type'
|     `-LValueReferenceType 0x558928edea20 'const Router::element_landmark_t &'
|       `-QualType 0x558928ede7c1 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x558928ede7c0 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x5589289fa920 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5589289fa8c8 'T'
|           `-RecordType 0x558928ed6290 'Router::element_landmark_t'
|             `-CXXRecord 0x558928ed6200 'element_landmark_t'
|-TypedefDecl 0x558928edebf8 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x558928edbbc0 'const Router::element_landmark_t &'
|   `-QualType 0x558928ed6ec1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x558928ed6ec0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-RecordType 0x558928ed6290 'Router::element_landmark_t'
|         `-CXXRecord 0x558928ed6200 'element_landmark_t'
|-TypedefDecl 0x558928edec50 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5589287d4580 'int'
|-TypedefDecl 0x558928edecb8 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x558928edbc50 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x558928ed6ec0 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-RecordType 0x558928ed6290 'Router::element_landmark_t'
|       `-CXXRecord 0x558928ed6200 'element_landmark_t'
|-TypedefDecl 0x558928eded20 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x558928edbce0 'const Router::element_landmark_t *'
|   `-QualType 0x558928ed6ec1 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x558928ed6ec0 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-RecordType 0x558928ed6290 'Router::element_landmark_t'
|         `-CXXRecord 0x558928ed6200 'element_landmark_t'
|-EnumDecl 0x558928eded78 <line:134:5> col:5
| `-EnumConstantDecl 0x558928edee70 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x558928edee50 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x558928ad74d8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x558928ad74b0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x558928ad7490 <col:40> 'int' 1
|-CXXConstructorDecl 0x558928edeef8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x558928edf188 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x558928edefb0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928edf050 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x558928edf448 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x558928edf330 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x558928edf708 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x558928edf5f0 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x558928edfa50 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x558928edf930 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x558928edfd60 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x558928edfc40 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x558928ee0050 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x558928edfe98 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928edff10 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x558928ee0178 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x558928ee0258 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928ee02b0 <col:30> Inherited
|-CXXMethodDecl 0x558928ee02f8 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x558928ee03a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928ee0400 <col:30> Inherited
|-CXXMethodDecl 0x558928ee04c8 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x558928ee0578 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928ee05d0 <col:30> Inherited
|-CXXMethodDecl 0x558928ee0618 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x558928ee06c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928ee0720 <col:30> Inherited
|-CXXMethodDecl 0x558928ee0768 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x558928ee0818 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928ee0870 <col:30> Inherited
|-CXXMethodDecl 0x558928ee08b8 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x558928ee0968 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928ee09c0 <col:30> Inherited
|-CXXMethodDecl 0x558928ee09e8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558928ee0a98 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558928ee0b48 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x558928ee0d08 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x558928ee0bf8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928ee0c70 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x558928ee0e58 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x558928ee0dc8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928ee1008 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x558928ee0f10 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558928ee10c0 <col:20>
| `-OptimizeNoneAttr 0x558928ee1118 <col:30>
|-CXXMethodDecl 0x558928ee1238 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x558928ee1140 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558928ee12f0 <col:20>
| `-OptimizeNoneAttr 0x558928ee1348 <col:30>
|-CXXMethodDecl 0x558928ee1400 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x558928ee1370 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928ee1548 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558928ee14b8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928ee1678 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x558928ee17a8 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x558928ee1878 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x558928ee1948 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x558928ee1a88 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x558928ee19f8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928ee1bd0 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558928ee1b40 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928ee1d18 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x558928ee1c88 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558928ee1dd0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x558928ee1ed0 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x558928ee1e40 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558928ee1f88 <col:60> Inherited "" ""
|-CXXMethodDecl 0x558928ee2048 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x558928ee2148 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x558928ee22c8 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x558928ee2208 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x558928ee2a58 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x558928ee2380 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x558928ee29b8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x558928ee28b8 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x558928ee2b38 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558928ee2c88 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x558928ee2bf8 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x558928ee2d40 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x558928ee2f88 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x558928ee2e00 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x558928ee2e78 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x558928ee3118 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x558928ee3058 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x558928ee3328 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x558928ee31e0 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x558928ee3258 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x558928ee33e8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x558928ee3648 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x558928ee3550 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x558928ee3718 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x558928ee3718

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558928e46290 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x558928e46468 prev 0x558928e46290 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x558928e464f8 <col:46, col:52> col:46 public
|-TypedefDecl 0x558928e46520 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5589287d4580 'int'
|-TypedefDecl 0x558928e52160 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x558928e52110 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x558928e469d0 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x558928e468d0 'type'
|     `-TemplateSpecializationType 0x558928e46860 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x558928e46740 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x558928e46720 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x558928e46700 <col:24> 'unsigned long' 16
|       `-RecordType 0x558928e46840 'char_array<16>'
|         `-ClassTemplateSpecialization 0x558928e46760 'char_array'
|-TypedefDecl 0x558928e52218 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x558928e521e0 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x558928e521c0 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x558928e52160 'type'
|     `-ElaboratedType 0x558928e52110 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x558928e469d0 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x558928e468d0 'type'
|         `-TemplateSpecializationType 0x558928e46860 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x558928e46740 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x558928e46720 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x558928e46700 <col:24> 'unsigned long' 16
|           `-RecordType 0x558928e46840 'char_array<16>'
|             `-ClassTemplateSpecialization 0x558928e46760 'char_array'
|-CXXMethodDecl 0x558928e52398 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x558928e522a8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x558928e52488 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x558928e52568 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x558928e52568
|-CXXMethodDecl 0x558928e52838 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x558928e52740 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x558928e52a78 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x558928e528f0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558928e52968 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x558928e52c48 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x558928e52b38 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558928e52bb0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x558928e52da8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x558928e52e78 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x558928e530c8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x558928e52f38 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x558928e52fb0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x558928e53328 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x558928e53198 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x558928e53210 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x558928e534e8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x558928e533f8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x558928e536a8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x558928e535b0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x558928e53760 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558928e53810 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x558928e53a48 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x558928e538c0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558928e53938 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x558928e53ce8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x558928e53bf0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x558928e53db0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x558928e53e00 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x558928e53e50 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558928ee3e30 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x558928ee4038 prev 0x558928ee3e30 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x558928ee5100 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x558928ee50b0 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x558928ee5090 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x558928ee4f40 'type'
|     `-SubstTemplateTypeParmType 0x558928e45e60 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x5589289f1e70 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5589289f1e18 'T'
|       `-RecordType 0x558928e459b0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x558928e458c8 'sized_array_memory'
|-FieldDecl 0x558928ee5200 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x558928ee5250 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x558928ee5288 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x558928ee40d0 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x558928ad5a98 'T'
|   `-RecordType 0x558928ecd1b0 'Router::Connection'
|     `-CXXRecord 0x558928ecd120 'Connection'
|-TypedefDecl 0x558928ee5348 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x558928ee5310 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x558928ee40d0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-RecordType 0x558928ecd1b0 'Router::Connection'
|       `-CXXRecord 0x558928ecd120 'Connection'
|-TypedefDecl 0x558928ee53d8 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x558928ee53a0 'const Router::Connection &'
|   `-QualType 0x558928ee40d1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x558928ee40d0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-RecordType 0x558928ecd1b0 'Router::Connection'
|         `-CXXRecord 0x558928ecd120 'Connection'
|-TypedefDecl 0x558928ee5468 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x558928ee5430 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x558928ee40d0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-RecordType 0x558928ecd1b0 'Router::Connection'
|       `-CXXRecord 0x558928ecd120 'Connection'
|-TypedefDecl 0x558928ee54f8 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x558928ee54c0 'const Router::Connection *'
|   `-QualType 0x558928ee40d1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x558928ee40d0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-RecordType 0x558928ecd1b0 'Router::Connection'
|         `-CXXRecord 0x558928ecd120 'Connection'
|-TypedefDecl 0x558928ee7470 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x558928ee7420 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x558928ee7400 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x558928ee7338 'type'
|     `-LValueReferenceType 0x558928ee7300 'const Router::Connection &'
|       `-QualType 0x558928ee5d81 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x558928ee5d80 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x5589289fa920 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5589289fa8c8 'T'
|           `-RecordType 0x558928ecd1b0 'Router::Connection'
|             `-CXXRecord 0x558928ecd120 'Connection'
|-TypedefDecl 0x558928ee74d8 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x558928ee53a0 'const Router::Connection &'
|   `-QualType 0x558928ee40d1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x558928ee40d0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-RecordType 0x558928ecd1b0 'Router::Connection'
|         `-CXXRecord 0x558928ecd120 'Connection'
|-TypedefDecl 0x558928ee7530 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5589287d4580 'int'
|-TypedefDecl 0x558928ee7598 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x558928ee5430 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x558928ee40d0 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-RecordType 0x558928ecd1b0 'Router::Connection'
|       `-CXXRecord 0x558928ecd120 'Connection'
|-TypedefDecl 0x558928ee7600 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x558928ee54c0 'const Router::Connection *'
|   `-QualType 0x558928ee40d1 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x558928ee40d0 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-RecordType 0x558928ecd1b0 'Router::Connection'
|         `-CXXRecord 0x558928ecd120 'Connection'
|-EnumDecl 0x558928ee7658 <line:134:5> col:5
| `-EnumConstantDecl 0x558928ee7750 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x558928ee7730 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x558928ad74d8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x558928ad74b0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x558928ad7490 <col:40> 'int' 1
|-CXXConstructorDecl 0x558928ee77d8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x558928ee7a68 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x558928ee7890 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928ee7930 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x558928ee7d28 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x558928ee7c10 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x558928ee7fe8 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x558928ee7ed0 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x558928ee8330 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x558928ee8210 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x558928ee8640 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x558928ee8520 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x558928ee8930 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x558928ee8778 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928ee87f0 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x558928ee8a88 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x558928ee8b68 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928ee8bc0 <col:30> Inherited
|-CXXMethodDecl 0x558928ee8c08 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x558928ee8cb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928ee8d10 <col:30> Inherited
|-CXXMethodDecl 0x558928ee8dd8 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x558928ee8e88 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928ee8ee0 <col:30> Inherited
|-CXXMethodDecl 0x558928ee8f28 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x558928ee8fd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928ee9030 <col:30> Inherited
|-CXXMethodDecl 0x558928ee9078 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x558928ee9128 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928ee9180 <col:30> Inherited
|-CXXMethodDecl 0x558928ee91c8 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x558928ee9278 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928ee92d0 <col:30> Inherited
|-CXXMethodDecl 0x558928ee92f8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558928ee93a8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558928ee9458 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x558928ee9618 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x558928ee9508 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928ee9580 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x558928ee9768 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x558928ee96d8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928ee9918 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x558928ee9820 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558928ee99d0 <col:20>
| `-OptimizeNoneAttr 0x558928ee9a28 <col:30>
|-CXXMethodDecl 0x558928ee9b48 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x558928ee9a50 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558928ee9c00 <col:20>
| `-OptimizeNoneAttr 0x558928ee9c58 <col:30>
|-CXXMethodDecl 0x558928ee9d10 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x558928ee9c80 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928ee9e58 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558928ee9dc8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928ee9f88 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x558928eea0b8 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x558928eea188 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x558928eea258 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x558928eea398 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x558928eea308 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928eea4e0 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558928eea450 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928eea628 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x558928eea598 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558928eea6e0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x558928eea7e0 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x558928eea750 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558928eea898 <col:60> Inherited "" ""
|-CXXMethodDecl 0x558928eea958 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x558928eeaa58 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x558928eeac08 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x558928eeab18 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x558928eeb3c8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x558928eeacc0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x558928eeb328 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x558928eeb228 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x558928eeb4a8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558928eeb5f8 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x558928eeb568 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x558928eeb6b0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x558928eeb8f8 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x558928eeb770 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x558928eeb7e8 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x558928eebab8 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x558928eeb9c8 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x558928eebd08 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x558928eebb80 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x558928eebbf8 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x558928eebdc8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x558928eec028 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x558928eebf30 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x558928eec0f8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x558928eec0f8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928f06020 prev 0x558928deadd0 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558928f06118 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x558928f061a8 <col:22, col:28> col:22 public
|-EnumDecl 0x558928f061d0 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x558928f062e8 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x558928f062c8 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x558928f062b0 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x558928f06290 <col:14> 'int' 999
| |-EnumConstantDecl 0x558928f06390 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x558928f06370 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x558928f06358 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x558928f06338 <col:14> 'int' 1
| |-EnumConstantDecl 0x558928f06420 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x558928f06400 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x558928f063e0 <col:17> 'int' 0
| |-EnumConstantDecl 0x558928f064b0 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x558928f06490 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x558928f06470 <col:13> 'int' 1
| |-EnumConstantDecl 0x558928f06540 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x558928f06520 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x558928f06500 <col:16> 'int' 2
| |-EnumConstantDecl 0x558928f065d0 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x558928f065b0 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x558928f06590 <col:13> 'int' 3
| |-EnumConstantDecl 0x558928f06660 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x558928f06640 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x558928f06620 <col:15> 'int' 4
| |-EnumConstantDecl 0x558928f066f0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x558928f066d0 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x558928f066b0 <col:14> 'int' 5
| |-EnumConstantDecl 0x558928f06780 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x558928f06760 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x558928f06740 <col:12> 'int' 6
| `-EnumConstantDecl 0x558928f06810 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x558928f067f0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x558928f067d0 <col:13> 'int' 7
|-VarDecl 0x558928f06880 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x558928f06908 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x558928f06990 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x558928f06a18 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x558928f06aa0 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x558928f06b28 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x558928f06bb0 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x558928f06c38 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x558928f06cc0 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x558928f06d48 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x558928f06dd0 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x558928f06ed0 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x558928f0c1b8 '_nerrors' 'int'
| | `-IntegerLiteral 0x558928f0d998 <line:128:13> 'int' 0
| `-CompoundStmt 0x558928f0da08 <col:16, line:129:5>
|-CXXDestructorDecl 0x558928f06fc0 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x558928f0da18 <col:29, line:132:5>
|-CXXMethodDecl 0x558928f07178 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x558928f070b0 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558928f07240 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x558928f07328 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x558928f0da70 <col:44, line:161:5>
|   `-ReturnStmt 0x558928f0da60 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x558928f0da48 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x558928f0da28 <col:9> 'ErrorHandler *' lvalue Var 0x558928f0c218 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x558928f07468 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x558928f073d8 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558928f07530 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x558928f0dad0 <col:43, line:173:5>
|   `-ReturnStmt 0x558928f0dac0 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x558928f0daa8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x558928f0da88 <col:9> 'ErrorHandler *' lvalue Var 0x558928f0c290 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x558928f075e8 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x558928f07668 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x558928f07778 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x558928f076e8 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x558928f078c8 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x558928f07838 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x558928f07a20 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x558928f07988 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x558928f07b78 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x558928f07ae0 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x558928f07cd0 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x558928f07c38 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x558928f07ee0 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x558928f07d88 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x558928f07e08 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x558928f080b8 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x558928f07fa0 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x558928f08020 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x558928f082d8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x558928f08178 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x558928f081f8 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x558928f084b8 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x558928f08398 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x558928f08418 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x558928f08698 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x558928f08578 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x558928f085f8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x558928f08820 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x558928f08758 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x558928f089f0 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x558928f088d8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x558928f08950 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x558928f0dd28 <col:57, line:234:5>
|   `-ReturnStmt 0x558928f0dd18 <line:233:2, col:41>
|     `-ExprWithCleanups 0x558928f0dd00 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x558928f0dca8 <col:9, col:41> 'int'
|         |-MemberExpr 0x558928f0dc78 <col:9> '<bound member function type>' ->xmessage 0x558928f08820
|         | `-CXXThisExpr 0x558928f0dc68 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x558928f0dce8 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x558928f0dcd0 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x558928f0dc48 <col:18, col:40> 'String' (CXXTemporary 0x558928f0dc48)
|               `-CallExpr 0x558928f0dc10 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x558928f0dbf8 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x558928f0db70 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x558928f0a9e8 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x558928f0db90 <col:31> 'const String' lvalue ParmVar 0x558928f08950 'str' 'const String &'
|                 `-DeclRefExpr 0x558928f0dbb0 <col:36> 'const String' lvalue ParmVar 0x558928f088d8 'anno' 'const String &'
|-CXXMethodDecl 0x558928f08cd0 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x558928f08ab0 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x558928f08b30 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x558928f08ba8 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x558928f0dfb8 <col:68, line:243:5>
|   `-ReturnStmt 0x558928f0dfa8 <line:242:2, col:41>
|     `-ExprWithCleanups 0x558928f0df90 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x558928f0df30 <col:9, col:41> 'int'
|         |-MemberExpr 0x558928f0df00 <col:9> '<bound member function type>' ->xmessage 0x558928f089f0
|         | `-CXXThisExpr 0x558928f0def0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x558928f0ddc8 <col:18> 'const String' lvalue ParmVar 0x558928f08ab0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x558928f0df78 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x558928f0df60 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x558928f0ded0 <col:24, col:40> 'String' (CXXTemporary 0x558928f0ded0)
|               `-CXXMemberCallExpr 0x558928f0de68 <col:24, col:40> 'String'
|                 |-MemberExpr 0x558928f0ddf8 <col:24> '<bound member function type>' ->vformat 0x558928f09eb0
|                 | `-CXXThisExpr 0x558928f0dde8 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x558928f0de98 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x558928f0de28 <col:32> 'const char *' lvalue ParmVar 0x558928f08b30 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x558928f0deb0 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x558928f0de48 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x558928f08ba8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x558928f08f70 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x558928f08d98 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x558928f08e10 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x558928f08e88 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x558928f0e2f8 <col:23, line:254:5>
|   `-ReturnStmt 0x558928f0e2e8 <line:253:2, col:71>
|     `-ExprWithCleanups 0x558928f0e2d0 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x558928f0e270 <col:9, col:71> 'int'
|         |-MemberExpr 0x558928f0e240 <col:9> '<bound member function type>' ->xmessage 0x558928f089f0
|         | `-CXXThisExpr 0x558928f0e230 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x558928f0e2b8 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x558928f0e2a0 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x558928f0e1f0 <col:18, col:65> 'String' (CXXTemporary 0x558928f0e1f0)
|         |     `-CallExpr 0x558928f0e188 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x558928f0e170 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x558928f0e058 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x558928f0a9e8 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x558928f0e078 <col:31> 'const String' lvalue ParmVar 0x558928f08e10 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x558928f0e1d0 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x558928f0e1b8 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x558928f0e150 <col:37, col:64> 'String' (CXXTemporary 0x558928f0e150)
|         |             `-CallExpr 0x558928f0e120 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x558928f0e108 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x558928f0e098 <col:37> 'String (const String &)' lvalue CXXMethod 0x558928f0b038 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x558928f0e0b8 <col:56> 'const String' lvalue ParmVar 0x558928f08d98 'landmark' 'const String &'
|         `-DeclRefExpr 0x558928f0e210 <col:68> 'const String' lvalue ParmVar 0x558928f08e88 'str' 'const String &'
|-CXXMethodDecl 0x558928f092f0 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x558928f09038 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x558928f090b0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x558928f09130 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x558928f091a8 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x558928f0e5b0 <col:34, line:267:5>
|   `-ReturnStmt 0x558928f0e5a0 <line:266:2, col:51>
|     `-ExprWithCleanups 0x558928f0e588 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x558928f0e520 <col:9, col:51> 'int'
|         |-MemberExpr 0x558928f0e4f0 <col:9> '<bound member function type>' ->xmessage 0x558928f08f70
|         | `-CXXThisExpr 0x558928f0e4e0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x558928f0e398 <col:18> 'const String' lvalue ParmVar 0x558928f09038 'landmark' 'const String &'
|         |-DeclRefExpr 0x558928f0e3b8 <col:28> 'const String' lvalue ParmVar 0x558928f090b0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x558928f0e570 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x558928f0e558 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x558928f0e4c0 <col:34, col:50> 'String' (CXXTemporary 0x558928f0e4c0)
|               `-CXXMemberCallExpr 0x558928f0e458 <col:34, col:50> 'String'
|                 |-MemberExpr 0x558928f0e3e8 <col:34> '<bound member function type>' ->vformat 0x558928f09eb0
|                 | `-CXXThisExpr 0x558928f0e3d8 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x558928f0e488 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x558928f0e418 <col:42> 'const char *' lvalue ParmVar 0x558928f09130 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x558928f0e4a0 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x558928f0e438 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x558928f091a8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x558928f09400 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x558928f0e630 <col:25, line:288:5>
|   `-ReturnStmt 0x558928f0e620 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x558928f0e608 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x558928f0e5d8 <col:9> 'const int' lvalue ->_nerrors 0x558928f0c1b8
|         `-CXXThisExpr 0x558928f0e5c8 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x558928f09610 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x558928f094b8 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x558928f09538 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x558928f098f8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x558928f096d8 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x558928f09758 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x558928f097d0 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x558928f09a90 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x558928f099c8 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x558928f09cd8 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x558928f09b50 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x558928f09bc8 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x558928f0e890 <col:58, line:357:5>
|   `-ReturnStmt 0x558928f0e880 <line:356:2, col:29>
|     `-ExprWithCleanups 0x558928f0e868 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x558928f0e838 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x558928f0e820 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x558928f0e800 <col:9, col:29> 'String' (CXXTemporary 0x558928f0e800)
|             `-CallExpr 0x558928f0e790 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x558928f0e778 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x558928f0e6f8 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x558928f098f8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x558928f0e698 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x558928f0e7c8 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x558928f0e6b8 <col:21> 'const char *' lvalue ParmVar 0x558928f09b50 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x558928f0e7e0 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x558928f0e6d8 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x558928f09bc8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x558928f09eb0 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x558928f09da0 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x558928f09e18 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x558928f0a008 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x558928f09f78 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x558928f0a150 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x558928f0a0c0 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x558928f0a3f0 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x558928f0a208 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x558928f0a288 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x558928f0a300 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x558928f0a550 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x558928f0a4c0 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x558928f0e9a8 <col:37, line:441:5>
|   `-IfStmt 0x558928f0e990 <line:439:2, line:440:8>
|     |-BinaryOperator 0x558928f0e918 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x558928f0e8e8 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x558928f0e8a8 <col:6> 'int' lvalue ParmVar 0x558928f0a4c0 'level' 'int'
|     | `-ImplicitCastExpr 0x558928f0e900 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x558928f0e8c8 <col:15> 'ErrorHandler::Level' EnumConstant 0x558928f065d0 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x558928f0e978 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x558928f0e948 <col:8> 'int' lvalue ->_nerrors 0x558928f0c1b8
|         `-CXXThisExpr 0x558928f0e938 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x558928f0a618 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x558928f0ea40 <col:26, line:448:5>
|   `-BinaryOperator 0x558928f0ea20 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x558928f0e9d0 <col:2> 'int' lvalue ->_nerrors 0x558928f0c1b8
|     | `-CXXThisExpr 0x558928f0e9c0 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x558928f0ea00 <col:13> 'int' 0
|-CXXMethodDecl 0x558928f0a7e0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x558928f0a6d0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x558928f0a748 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x558928f0a9e8 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x558928f0a8a0 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x558928f0a918 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x558928f0ac98 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x558928f0aaa8 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x558928f0ab28 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x558928f0aba8 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x558928f0ad50 <col:59> 0 0
|-CXXMethodDecl 0x558928f0aee8 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x558928f0adc8 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x558928f0ae48 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x558928f0f0b0 <col:70, line:534:5>
|   |-DeclStmt 0x558928f0ebb0 <line:528:2, col:20>
|   | |-VarDecl 0x558928f0ea68 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x558928f0ead0 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x558928f0eb08 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x558928f0eb70 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x558928f0ec80 <line:529:2, col:23>
|   | `-VarDecl 0x558928f0ebe0 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x558928f0ec68 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x558928f0ec48 <col:18> 'const char *' lvalue ParmVar 0x558928f0adc8 'begin' 'const char *'
|   |-DoStmt 0x558928f0f048 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x558928f0ef78 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x558928f0ef60 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x558928f0ef40 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x558928f0ec98 <col:6> 'const char *' lvalue Var 0x558928f0ebe0 'x' 'const char *'
|   | |     `-CallExpr 0x558928f0ee90 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x558928f0ee78 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x558928f0ee30 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x558928f0d6e0 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x558928f0eef8 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x558928f0eee0 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x558928f0ed50 <col:20, col:27> 'String' (CXXTemporary 0x558928f0ed50)
|   | |       |     `-CXXTemporaryObjectExpr 0x558928f0ed18 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x558928f0ef10 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x558928f0ed70 <col:30> 'const char *' lvalue Var 0x558928f0ebe0 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x558928f0ef28 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x558928f0ed90 <col:33> 'const char *' lvalue ParmVar 0x558928f0ae48 'end' 'const char *'
|   | |       |-UnaryOperator 0x558928f0edd0 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x558928f0edb0 <col:39> 'String' lvalue Var 0x558928f0ea68 'name' 'String'
|   | |       |-UnaryOperator 0x558928f0ee08 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x558928f0ede8 <col:46> 'String' lvalue Var 0x558928f0eb08 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x558928f0ee20 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x558928f0f030 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x558928f0f018 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x558928f0eff8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x558928f0efc8 <col:11> '<bound member function type>' .operator int (String::*)() const 0x558928b07a78
|   |         `-ImplicitCastExpr 0x558928f0efb0 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x558928f0ef90 <col:11> 'String' lvalue Var 0x558928f0ea68 'name' 'String'
|   `-ReturnStmt 0x558928f0f0a0 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x558928f0f088 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x558928f0f068 <col:9> 'const char *' lvalue Var 0x558928f0ebe0 'x' 'const char *'
|-CXXMethodDecl 0x558928f0b038 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x558928f0afa8 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x558928f0f6b8 <col:55, line:550:5>
|   `-IfStmt 0x558928f0f690 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x558928f0f2f0 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x558928f0f2d8 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x558928f0f2c0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x558928f0f2a0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x558928f0f270 <col:6> '<bound member function type>' .operator int (String::*)() const 0x558928b07a78
|     | |       `-DeclRefExpr 0x558928f0f110 <col:6> 'const String' lvalue ParmVar 0x558928f0afa8 'x' 'const String &'
|     | `-BinaryOperator 0x558928f0f250 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x558928f0f220 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x558928f0f1d0 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x558928f0f1b8 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x558928f0f170 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x558928b21110 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x558928f0f130 <col:11> 'const String' lvalue ParmVar 0x558928f0afa8 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x558928f0f150 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x558928f0f238 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x558928f0f208 <col:19> 'char' 123
|     |-ReturnStmt 0x558928f0f360 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x558928f0f330 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x558928f0f310 <col:13> 'const String' lvalue ParmVar 0x558928f0afa8 'x' 'const String &'
|     `-IfStmt 0x558928f0f668 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x558928f0f3f8 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x558928f0f3e0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x558928f0f3c0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x558928f0f390 <col:11> '<bound member function type>' .operator int (String::*)() const 0x558928b07a78
|       |       `-DeclRefExpr 0x558928f0f370 <col:11> 'const String' lvalue ParmVar 0x558928f0afa8 'x' 'const String &'
|       |-ReturnStmt 0x558928f0f580 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x558928f0f568 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x558928f0f538 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x558928f0f520 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x558928f0f500 <col:13, col:29> 'String' (CXXTemporary 0x558928f0f500)
|       |         `-CallExpr 0x558928f0f4b0 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x558928f0f498 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x558928f0f410 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x558928f0a7e0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x558928f0f4e0 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x558928f0f430 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x558928f0f450 <col:28> 'const String' lvalue ParmVar 0x558928f0afa8 'x' 'const String &'
|       `-ReturnStmt 0x558928f0f658 <line:549:6, col:20>
|         `-ExprWithCleanups 0x558928f0f640 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x558928f0f610 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x558928f0f5f8 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x558928f0f5d8 <col:13, col:20> 'String' (CXXTemporary 0x558928f0f5d8)
|                 `-CXXTemporaryObjectExpr 0x558928f0f5a0 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x558928f0b200 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x558928f0b0f0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x558928f0b168 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558928f0d988 <col:71> 'bool' false
|-CXXRecordDecl 0x558928f0b2b0 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x558928f0b5a8 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x558928f0b540 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x558928f0b4e0 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x558928f0b4a0 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x558928b042d0 'String'
|       | `-CXXRecord 0x558928b04240 'String'
|       |-BuiltinType 0x5589287d4580 'int'
|       `-DecayedType 0x558928d22e30 '__va_list_tag *' sugar
|         |-TypedefType 0x558928d22e00 'va_list' sugar
|         | |-Typedef 0x558928a22590 'va_list'
|         | `-TypedefType 0x558928a22540 '__gnuc_va_list' sugar
|         |   |-Typedef 0x558928a1b338 '__gnuc_va_list'
|         |   `-TypedefType 0x558928a1b2a0 '__builtin_va_list' sugar
|         |     |-Typedef 0x558928815d38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x558928815ce0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x5589287d52d0 '__va_list_tag'
|         |         `-CXXRecord 0x5589287d5238 '__va_list_tag'
|         `-PointerType 0x558928a28290 '__va_list_tag *'
|           `-RecordType 0x5589287d52d0 '__va_list_tag'
|             `-CXXRecord 0x5589287d5238 '__va_list_tag'
|-EnumDecl 0x558928f0b600 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x558928f0b700 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x558928f0bc60 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928f0b6e0 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x558928f0b6c0 <col:16> 'int' 1
| |-EnumConstantDecl 0x558928f0b790 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x558928f0bc78 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928f0b770 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x558928f0b750 <col:21> 'int' 2
| |-EnumConstantDecl 0x558928f0b820 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x558928f0bc90 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928f0b800 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x558928f0b7e0 <col:22> 'int' 4
| |-EnumConstantDecl 0x558928f0b8b0 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x558928f0bca8 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928f0b890 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x558928f0b870 <col:17> 'int' 8
| |-EnumConstantDecl 0x558928f0b940 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x558928f0bcc0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928f0b920 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x558928f0b900 <col:22> 'int' 16
| |-EnumConstantDecl 0x558928f0b9d0 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x558928f0bcd8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928f0b9b0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x558928f0b990 <col:19> 'int' 32
| |-EnumConstantDecl 0x558928f0ba60 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x558928f0bcf0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928f0ba40 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x558928f0ba20 <col:17> 'int' 64
| |-EnumConstantDecl 0x558928f0baf0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x558928f0bd08 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928f0bad0 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x558928f0bab0 <col:14> 'int' 128
| |-EnumConstantDecl 0x558928f0bb80 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x558928f0bd20 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928f0bb60 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x558928f0bb40 <col:16> 'int' 256
| `-EnumConstantDecl 0x558928f0bc10 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x558928f0bd38 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558928f0bbf0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x558928f0bbd0 <col:12> 'int' 1024
|-CXXMethodDecl 0x558928f0bf48 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x558928f0bd60 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x558928f0be00 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x558928f0c0d0 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x558928f0c008 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x558928f0c178 <line:580:3, col:10> col:3 private
|-FieldDecl 0x558928f0c1b8 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x558928f0c218 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x558928f0c290 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x558928f0d6e0 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x558928f0c308 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x558928f0c388 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x558928f0c408 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x558928f0c480 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x558928f0c4f8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x558928f0d5c0 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x558928f0d808 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x558928f0d808
| `-ParmVarDecl 0x558928f0d918 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x558928f0fa18 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x558928f0fa18
  `-ParmVarDecl 0x558928f0fb28 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928ce3090 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x558928ce31e0 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x558928ce3260 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x558928ce3f98 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x558928ce3f98
| `-ParmVarDecl 0x558928ce40a8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x558928ce4148 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x558928ce4148
| `-ParmVarDecl 0x558928ce4258 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x558928ce42c8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x558928ce42c8
|-CXXMethodDecl 0x558928ce4b98 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x558928ce4b98
| `-ParmVarDecl 0x558928ce4ca8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x558928ce4d18 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x558928ce4d18
| `-ParmVarDecl 0x558928ce4e28 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x558928f05bb0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x558928f05c90 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928ce3390 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x558928ce34b8 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x558928ce3540 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x558928ce43f8 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x558928ce43f8
| `-ParmVarDecl 0x558928ce4508 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x558928ce45a8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x558928ce45a8
| `-ParmVarDecl 0x558928ce46b8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x558928ce4728 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x558928ce4728
|-CXXMethodDecl 0x558928ce4ec8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x558928ce4ec8
| `-ParmVarDecl 0x558928ce4fd8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x558928ce5048 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x558928ce5048
| `-ParmVarDecl 0x558928ce5158 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x558928f05cf0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x558928f05dd0 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928cdea58 prev 0x558928cddff8 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x558928cdeb50 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x558928cdebe0 <col:17, col:23> col:17 public
|-EnumDecl 0x558928cdec08 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x558928cded10 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x558928cdfa60 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928cdecf0 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x558928cdecd0 <col:11> 'int' 1
| |-EnumConstantDecl 0x558928cdeda0 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x558928cdfa78 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928cded80 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x558928cded60 <col:12> 'int' 2
| |-EnumConstantDecl 0x558928cdee30 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x558928cdfa90 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928cdee10 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x558928cdedf0 <col:17> 'int' 4
| |-EnumConstantDecl 0x558928cdeec0 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x558928cdfaa8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928cdeea0 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x558928cdee80 <col:16> 'int' 0
| |-EnumConstantDecl 0x558928cdef50 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x558928cdfac0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928cdef30 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x558928cdef10 <col:19> 'int' 32
| |-EnumConstantDecl 0x558928cdefe0 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x558928cdfad8 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928cdefc0 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x558928cdefa0 <col:10> 'int' 64
| |-EnumConstantDecl 0x558928cdf070 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x558928cdfaf0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928cdf050 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x558928cdf030 <col:19> 'int' 128
| |-EnumConstantDecl 0x558928cdf100 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x558928cdfb08 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928cdf0e0 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x558928cdf0c0 <col:20> 'int' 256
| |-EnumConstantDecl 0x558928cdf190 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x558928cdfb20 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928cdf170 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x558928cdf150 <col:17> 'int' 512
| |-EnumConstantDecl 0x558928cdf220 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x558928cdfb38 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928cdf200 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x558928cdf1e0 <col:15> 'int' 1024
| |-EnumConstantDecl 0x558928cdf2b0 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x558928cdfb50 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928cdf290 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x558928cdf270 <col:11> 'int' 2048
| |-EnumConstantDecl 0x558928cdf340 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x558928cdfb68 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928cdf320 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x558928cdf300 <col:16> 'int' 4096
| |-EnumConstantDecl 0x558928cdf3d0 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x558928cdfb80 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928cdf3b0 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x558928cdf390 <col:13> 'int' 8192
| |-EnumConstantDecl 0x558928cdf460 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x558928cdfb98 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928cdf440 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x558928cdf420 <col:15> 'int' 16384
| |-EnumConstantDecl 0x558928cdf530 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x558928cdf510 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x558928cdf4f0 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x558928cdf4b0 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x558928cdf4d0 <col:20> 'int' 26
| |-EnumConstantDecl 0x558928cdf600 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x558928cdf5e0 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x558928cdf5c0 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x558928cdf580 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x558928cdf5a0 <col:27> 'int' 27
| |-EnumConstantDecl 0x558928cdf690 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x558928cdfbb0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928cdf670 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x558928cdf650 <col:17> 'int' 28
| |-EnumConstantDecl 0x558928cdf760 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x558928cdf740 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x558928cdf720 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x558928cdf6e0 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x558928cdf700 <col:18> 'int' EnumConstant 0x558928cdf690 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x558928cdf7f0 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x558928cdfbc8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928cdf7d0 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x558928cdf7b0 <col:25> 'int' 8
| |-EnumConstantDecl 0x558928cdf880 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x558928cdfbe0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928cdf860 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x558928cdf840 <col:26> 'int' 16
| `-EnumConstantDecl 0x558928cdfa10 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x558928cdfbf8 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558928cdf9f0 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x558928cdf9d0 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x558928cdf990 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x558928cdf950 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x558928cdf910 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x558928cdf8d0 <col:14> 'int' EnumConstant 0x558928cded10 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x558928cdf8f0 <col:23> 'int' EnumConstant 0x558928cdeda0 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x558928cdf930 <col:33> 'int' EnumConstant 0x558928cdee30 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x558928cdf970 <col:48> 'int' EnumConstant 0x558928cdf7f0 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x558928cdf9b0 <col:71> 'int' EnumConstant 0x558928cdf880 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x558928cdfc30 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x558928ce5578 <col:39, line:64:5>
|   `-ReturnStmt 0x558928ce5568 <line:63:2, col:9>
|     `-MemberExpr 0x558928ce5538 <col:9> 'const String' lvalue ->_name 0x558928ce3040
|       `-CXXThisExpr 0x558928ce5528 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x558928cdfcf0 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x558928ce55f8 <col:35, line:71:5>
|   `-ReturnStmt 0x558928ce55e8 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x558928ce55d0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x558928ce55a0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x558928ce3750
|         `-CXXThisExpr 0x558928ce5590 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x558928cdfe40 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x558928cdfda8 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x558928ce5778 <col:42, line:77:5>
|   `-ReturnStmt 0x558928ce5768 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x558928ce5750 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x558928ce5720 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x558928ce5680 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x558928ce5650 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x558928ce5610 <col:9> 'int' lvalue ParmVar 0x558928cdfda8 'op' 'int'
|         | `-ImplicitCastExpr 0x558928ce5668 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x558928ce5630 <col:15> 'Handler::Flags' EnumConstant 0x558928cdeda0 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x558928ce56b0 <col:25> 'void *const' lvalue ->_write_user_data 0x558928ce36f0
|         | `-CXXThisExpr 0x558928ce56a0 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x558928ce56f0 <col:44> 'void *const' lvalue ->_read_user_data 0x558928ce3688
|           `-CXXThisExpr 0x558928ce56e0 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x558928cdff10 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x558928ce57f8 <col:41, line:82:5>
|   `-ReturnStmt 0x558928ce57e8 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x558928ce57d0 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x558928ce57a0 <col:9> 'void *const' lvalue ->_read_user_data 0x558928ce3688
|         `-CXXThisExpr 0x558928ce5790 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x558928cdffd8 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x558928ce5878 <col:42, line:87:5>
|   `-ReturnStmt 0x558928ce5868 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x558928ce5850 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x558928ce5820 <col:9> 'void *const' lvalue ->_write_user_data 0x558928ce36f0
|         `-CXXThisExpr 0x558928ce5810 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x558928ce00a0 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x558928ce0140 <col:52> "" ""
|-CXXMethodDecl 0x558928ce01d8 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x558928ce0278 <col:52> "" ""
|-CXXMethodDecl 0x558928ce0308 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x558928ce5968 <col:34, line:98:5>
|   `-ReturnStmt 0x558928ce5958 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x558928ce5940 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x558928ce5920 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x558928ce58f0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x558928ce58a0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x558928ce3750
|         |   `-CXXThisExpr 0x558928ce5890 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x558928ce5908 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x558928ce58d0 <col:18> 'Handler::Flags' EnumConstant 0x558928cded10 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x558928ce03c8 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x558928ce5a58 <col:36, line:104:5>
|   `-ReturnStmt 0x558928ce5a48 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x558928ce5a30 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x558928ce5a10 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x558928ce59e0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x558928ce5990 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x558928ce3750
|         |   `-CXXThisExpr 0x558928ce5980 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x558928ce59f8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x558928ce59c0 <col:18> 'Handler::Flags' EnumConstant 0x558928cdee30 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x558928ce0488 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x558928de91b8 <col:38, line:113:5>
|   `-ReturnStmt 0x558928de91a8 <line:112:2, col:49>
|     `-BinaryOperator 0x558928de9188 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x558928de9130 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x558928de9110 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x558928de90e0 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x558928ce5a80 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x558928ce3750
|       |   |   `-CXXThisExpr 0x558928ce5a70 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x558928de90f8 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x558928de90c0 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x558928de90a0 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x558928ce5af0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x558928ce5ab0 <col:20> 'Handler::Flags' EnumConstant 0x558928cded10 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x558928ce5b08 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x558928ce5ad0 <col:29> 'Handler::Flags' EnumConstant 0x558928cdf070 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x558928de9170 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x558928de9150 <col:49> 'Handler::Flags' EnumConstant 0x558928cded10 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x558928ce0548 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x558928de92a8 <col:34, line:118:5>
|   `-ReturnStmt 0x558928de9298 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x558928de9280 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x558928de9260 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x558928de9230 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x558928de91e0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x558928ce3750
|         |   `-CXXThisExpr 0x558928de91d0 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x558928de9248 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x558928de9210 <col:18> 'Handler::Flags' EnumConstant 0x558928cdeda0 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x558928ce0608 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x558928de9488 <col:39, line:127:5>
|   `-ReturnStmt 0x558928de9478 <line:126:2, col:51>
|     `-BinaryOperator 0x558928de9458 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x558928de9400 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x558928de93e0 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x558928de93b0 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x558928de92d0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x558928ce3750
|       |   |   `-CXXThisExpr 0x558928de92c0 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x558928de93c8 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x558928de9390 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x558928de9370 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x558928de9340 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x558928de9300 <col:20> 'Handler::Flags' EnumConstant 0x558928cdeda0 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x558928de9358 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x558928de9320 <col:30> 'Handler::Flags' EnumConstant 0x558928cdf100 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x558928de9440 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x558928de9420 <col:51> 'Handler::Flags' EnumConstant 0x558928cdeda0 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x558928ce06c8 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x558928de9590 <col:33, line:132:5>
|   `-ReturnStmt 0x558928de9580 <line:131:2, col:41>
|     `-BinaryOperator 0x558928de9560 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x558928de94e0 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x558928de94b0 <col:9> '<bound member function type>' ->read_visible 0x558928ce0488
|       |   `-CXXThisExpr 0x558928de94a0 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x558928de9540 <col:27, col:41> 'bool'
|         `-MemberExpr 0x558928de9510 <col:27> '<bound member function type>' ->write_visible 0x558928ce0608
|           `-CXXThisExpr 0x558928de9500 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x558928ce0788 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x558928de96a0 <col:51, line:138:5>
|   `-ReturnStmt 0x558928de9690 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x558928de9678 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x558928de9658 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x558928de9638 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x558928de9608 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x558928de95b8 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x558928ce3750
|           |   `-CXXThisExpr 0x558928de95a8 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x558928de9620 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x558928de95e8 <col:26> 'Handler::Flags' EnumConstant 0x558928cdef50 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x558928ce0848 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x558928de97b0 <col:50, line:144:5>
|   `-ReturnStmt 0x558928de97a0 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x558928de9788 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x558928de9768 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x558928de9748 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x558928de9718 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x558928de96c8 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x558928ce3750
|           |   `-CXXThisExpr 0x558928de96b8 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x558928de9730 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x558928de96f8 <col:26> 'Handler::Flags' EnumConstant 0x558928cdef50 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x558928ce0908 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x558928de98a0 <col:29, line:166:5>
|   `-ReturnStmt 0x558928de9890 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x558928de9878 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x558928de9858 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x558928de9828 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x558928de97d8 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x558928ce3750
|         |   `-CXXThisExpr 0x558928de97c8 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x558928de9840 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x558928de9808 <col:18> 'Handler::Flags' EnumConstant 0x558928cdefe0 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x558928ce0b88 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x558928ce09b8 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x558928ce0a30 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x558928ce0aa8 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558928ce0d98 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x558928ce0c50 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x558928ce0cc8 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x558928ce5460 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x558928ce5440 <col:62> 'int' 0
| `-CompoundStmt 0x558928de9b40 <col:71, line:188:5>
|   `-ReturnStmt 0x558928de9b30 <line:187:2, col:36>
|     `-ExprWithCleanups 0x558928de9b18 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x558928de9ae8 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x558928de9ad0 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x558928de9ab0 <col:9, col:36> 'String' (CXXTemporary 0x558928de9ab0)
|             `-CXXMemberCallExpr 0x558928de9a10 <col:9, col:36> 'String'
|               |-MemberExpr 0x558928de99e0 <col:9> '<bound member function type>' ->call_read 0x558928ce0b88
|               | `-CXXThisExpr 0x558928de99d0 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x558928de9a48 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x558928de9928 <col:19> 'Element *' lvalue ParmVar 0x558928ce0c50 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x558928de9a78 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x558928de9a60 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x558928de9990 <col:22, col:29> 'String' (CXXTemporary 0x558928de9990)
|               |     `-CXXTemporaryObjectExpr 0x558928de9958 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x558928de9a90 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x558928de99b0 <col:32> 'ErrorHandler *' lvalue ParmVar 0x558928ce0cc8 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x558928ce1030 <line:198:5, col:73> col:9 call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x558928ce0e58 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x558928ce0ed0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x558928ce0f48 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558928ce11b8 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x558928ce10f8 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x558928ce13e8 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x558928ce1270 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x558928ce12e8 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x558928ce14e8 <line:223:5, line:225:5> line:223:34 blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x558928de9ba0 <col:50, line:225:5>
|   `-ReturnStmt 0x558928de9b90 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x558928de9b78 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x558928de9b58 <col:9> 'const Handler *' lvalue Var 0x558928ce3880 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x558928ce1588 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x558928ce1690 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x558928ce2220 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce1670 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x558928ce1650 <col:11> 'Handler::Flags' EnumConstant 0x558928cded10 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x558928ce1720 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x558928ce2238 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce1700 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x558928ce16e0 <col:12> 'Handler::Flags' EnumConstant 0x558928cdeda0 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x558928ce17b0 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x558928ce2250 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce1790 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x558928ce1770 <col:17> 'Handler::Flags' EnumConstant 0x558928cdee30 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x558928ce1840 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x558928ce2268 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce1820 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x558928ce1800 <col:16> 'Handler::Flags' EnumConstant 0x558928cdeec0 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x558928ce18d0 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x558928ce2280 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce18b0 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x558928ce1890 <col:19> 'Handler::Flags' EnumConstant 0x558928cdef50 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x558928ce1960 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x558928ce2298 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce1940 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x558928ce1920 <col:10> 'Handler::Flags' EnumConstant 0x558928cdefe0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x558928ce19f0 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x558928ce22b0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce19d0 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x558928ce19b0 <col:19> 'Handler::Flags' EnumConstant 0x558928cdf070 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x558928ce1a80 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x558928ce22c8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce1a60 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x558928ce1a40 <col:20> 'Handler::Flags' EnumConstant 0x558928cdf100 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x558928ce1b10 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x558928ce22e0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce1af0 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x558928ce1ad0 <col:17> 'Handler::Flags' EnumConstant 0x558928cdf190 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x558928ce1ba0 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x558928ce22f8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce1b80 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x558928ce1b60 <col:15> 'Handler::Flags' EnumConstant 0x558928cdf220 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x558928ce1c30 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x558928ce2310 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce1c10 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x558928ce1bf0 <col:11> 'Handler::Flags' EnumConstant 0x558928cdf2b0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x558928ce1cc0 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x558928ce2328 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce1ca0 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x558928ce1c80 <col:16> 'Handler::Flags' EnumConstant 0x558928cdf340 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x558928ce1d50 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x558928ce2340 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce1d30 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x558928ce1d10 <col:13> 'Handler::Flags' EnumConstant 0x558928cdf3d0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x558928ce1de0 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x558928ce2358 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce1dc0 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x558928ce1da0 <col:15> 'Handler::Flags' EnumConstant 0x558928cdf460 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x558928ce1e70 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x558928ce2370 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce1e50 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x558928ce1e30 <col:20> 'Handler::Flags' EnumConstant 0x558928cdf530 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x558928ce1f00 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x558928ce2388 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce1ee0 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x558928ce1ec0 <col:27> 'Handler::Flags' EnumConstant 0x558928cdf600 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x558928ce1f90 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x558928ce23a0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce1f70 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x558928ce1f50 <col:22> 'Handler::Flags' EnumConstant 0x558928cdf690 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x558928ce2020 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x558928ce23b8 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce2000 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x558928ce1fe0 <col:18> 'Handler::Flags' EnumConstant 0x558928cdf760 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x558928ce20b0 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x558928ce23d0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce2090 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x558928ce2070 <col:25> 'Handler::Flags' EnumConstant 0x558928cdf7f0 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x558928ce2140 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x558928ce23e8 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce2120 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x558928ce2100 <col:26> 'Handler::Flags' EnumConstant 0x558928cdf880 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x558928ce21d0 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x558928ce2400 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558928ce21b0 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x558928ce2190 <col:20> 'Handler::Flags' EnumConstant 0x558928cdfa10 'f_special' 'Handler::Flags'
|-EnumDecl 0x558928ce2418 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x558928ce2520 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x558928ce2a80 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce2500 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x558928ce24e0 <col:12> 'Handler::Flags' EnumConstant 0x558928cded10 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x558928ce25b0 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x558928ce2a98 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce2590 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x558928ce2570 <col:13> 'Handler::Flags' EnumConstant 0x558928cdeda0 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x558928ce2640 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x558928ce2ab0 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce2620 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x558928ce2600 <col:15> 'Handler::Flags' EnumConstant 0x558928cdee30 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x558928ce26d0 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x558928ce2ac8 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce26b0 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x558928ce2690 <col:8> 'Handler::Flags' EnumConstant 0x558928cdefe0 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x558928ce2760 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x558928ce2ae0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce2740 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x558928ce2720 <col:9> 'Handler::Flags' EnumConstant 0x558928cdf2b0 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x558928ce27f0 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x558928ce2af8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce27d0 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x558928ce27b0 <col:14> 'Handler::Flags' EnumConstant 0x558928cdf340 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x558928ce2880 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x558928ce2b10 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce2860 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x558928ce2840 <col:11> 'Handler::Flags' EnumConstant 0x558928cdf3d0 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x558928ce2910 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x558928ce2b28 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce28f0 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x558928ce28d0 <col:13> 'Handler::Flags' EnumConstant 0x558928cdf460 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x558928ce29a0 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x558928ce2b40 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce2980 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x558928ce2960 <col:20> 'Handler::Flags' EnumConstant 0x558928cdf690 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x558928ce2a30 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x558928ce2b58 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558928ce2a10 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x558928ce29f0 <col:16> 'Handler::Flags' EnumConstant 0x558928cdf760 'f_user0' 'Handler::Flags'
|-EnumDecl 0x558928ce2b70 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x558928ce2c30 <col:25> "" ""
| |-EnumConstantDecl 0x558928ce2ce0 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x558928ce2dc0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ce2cc0 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x558928ce2ca0 <col:14> 'Handler::Flags' EnumConstant 0x558928cdeec0 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x558928ce2d70 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x558928ce2dd8 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558928ce2d50 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x558928ce2d30 <col:17> 'Handler::Flags' EnumConstant 0x558928cdef50 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x558928ce2f58 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x558928ce2e00 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x558928ce2e80 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x558928dea260 <col:70, line:284:5>
|   |-ParenExpr 0x558928dea080 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x558928dea050 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x558928de9d80 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558928de9d50 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x558928de9cf8 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x558928de9cd8 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x558928de9ca8 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x558928de9bc8 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x558928ce3750
|   |   |   |   |   `-CXXThisExpr 0x558928de9bb8 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x558928de9cc0 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x558928de9c88 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x558928de9c68 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x558928de9c38 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x558928de9bf8 <col:34> 'Handler::Flags' EnumConstant 0x558928cded10 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x558928de9c50 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x558928de9c18 <col:43> 'Handler::Flags' EnumConstant 0x558928cdf7f0 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x558928de9d38 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x558928de9d18 <col:69> 'Handler::Flags' EnumConstant 0x558928cded10 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x558928de9de0 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558928de9dc0 <col:85> 'int' 0
|   |   `-CallExpr 0x558928de9fb0 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x558928de9f98 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558928de9f78 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558928874570 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558928de9ff0 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928de9e50 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x558928dea008 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928de9ea0 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x558928dea020 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558928de9ed8 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x558928dea038 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558928de9f60 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558928de9f48 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558928de9ef8 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x558928dea250 <line:283:2, col:38>
|     `-ExprWithCleanups 0x558928dea238 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x558928dea208 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x558928dea1f0 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x558928dea1d0 <col:9, col:38> 'String' (CXXTemporary 0x558928dea1d0)
|             `-CallExpr 0x558928dea168 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x558928dea150 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x558928dea0e0 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x558928ce3260
|               |   `-MemberExpr 0x558928dea0b0 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x558928ce3328
|               |     `-CXXThisExpr 0x558928dea0a0 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x558928dea198 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x558928dea110 <col:22> 'Element *' lvalue ParmVar 0x558928ce2e00 'e' 'Element *'
|               `-ImplicitCastExpr 0x558928dea1b0 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x558928dea130 <col:25> 'void *' lvalue ParmVar 0x558928ce2e80 'new_user_data' 'void *'
|-AccessSpecDecl 0x558928ce3008 <line:287:3, col:10> col:3 private
|-FieldDecl 0x558928ce3040 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x558928ce3090 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x558928ce31e0 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x558928ce3260 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x558928ce3f98 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x558928ce3f98
| | `-ParmVarDecl 0x558928ce40a8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x558928ce4148 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x558928ce4148
| | `-ParmVarDecl 0x558928ce4258 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x558928ce42c8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x558928ce42c8
| |-CXXMethodDecl 0x558928ce4b98 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x558928ce4b98
| | `-ParmVarDecl 0x558928ce4ca8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x558928ce4d18 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x558928ce4d18
| | `-ParmVarDecl 0x558928ce4e28 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x558928f05bb0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x558928f05c90 <col:5>
|-FieldDecl 0x558928ce3328 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x558928ce3390 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x558928ce34b8 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x558928ce3540 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x558928ce43f8 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x558928ce43f8
| | `-ParmVarDecl 0x558928ce4508 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x558928ce45a8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x558928ce45a8
| | `-ParmVarDecl 0x558928ce46b8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x558928ce4728 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x558928ce4728
| |-CXXMethodDecl 0x558928ce4ec8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x558928ce4ec8
| | `-ParmVarDecl 0x558928ce4fd8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x558928ce5048 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x558928ce5048
| | `-ParmVarDecl 0x558928ce5158 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x558928f05cf0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x558928f05dd0 <col:5>
|-FieldDecl 0x558928ce3608 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x558928ce3688 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x558928ce36f0 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x558928ce3750 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x558928ce37b8 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x558928ce3820 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x558928ce3880 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x558928ce39a0 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x558928ce38f8 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x558928ce5510 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x558928ce54f8 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x558928ce54e0 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x558928ce54c0 <col:30, col:37> 'String' (CXXTemporary 0x558928ce54c0)
|           `-CXXTemporaryObjectExpr 0x558928ce5488 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x558928ce3b48 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x558928ce3a88 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x558928ce3cc8 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x558928ce3c00 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x558928ce3dc0 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x558928ce3e00 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x558928ce3e00
| `-ParmVarDecl 0x558928ce3ee8 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x558928ce4838 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x558928ce4838
| `-ParmVarDecl 0x558928ce4948 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x558928ce49e8 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x558928ce49e8
| `-ParmVarDecl 0x558928ce4af8 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x558928ce51c8 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x558928ce51c8
| `-ParmVarDecl 0x558928ce52d8 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x558928ce5360 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x558928ce5360

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558928eecc68 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x558928eece78 prev 0x558928eecc68 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x558928eede90 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x558928eede40 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x558928eede20 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x558928eedcd0 'type'
|     `-SubstTemplateTypeParmType 0x558928e153f0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x5589289f1e70 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5589289f1e18 'T'
|       `-RecordType 0x558928e14f40 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x558928e14e58 'sized_array_memory'
|-FieldDecl 0x558928eedf90 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x558928eedfe0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x558928eee018 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x558928eecf10 'void *' sugar
|   |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x558928ad5a98 'T'
|   `-PointerType 0x5589287d4ce0 'void *'
|     `-BuiltinType 0x5589287d44e0 'void'
|-TypedefDecl 0x558928eee0a8 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x558928eee070 'void *&'
|   `-SubstTemplateTypeParmType 0x558928eecf10 'void *' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-PointerType 0x5589287d4ce0 'void *'
|       `-BuiltinType 0x5589287d44e0 'void'
|-TypedefDecl 0x558928eee168 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x558928eee130 'void *const &'
|   `-QualType 0x558928eecf11 'void *const' const
|     `-SubstTemplateTypeParmType 0x558928eecf10 'void *' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-PointerType 0x5589287d4ce0 'void *'
|         `-BuiltinType 0x5589287d44e0 'void'
|-TypedefDecl 0x558928eee1f8 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x558928eee1c0 'void **'
|   `-SubstTemplateTypeParmType 0x558928eecf10 'void *' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-PointerType 0x5589287d4ce0 'void *'
|       `-BuiltinType 0x5589287d44e0 'void'
|-TypedefDecl 0x558928eee288 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x558928eee250 'void *const *'
|   `-QualType 0x558928eecf11 'void *const' const
|     `-SubstTemplateTypeParmType 0x558928eecf10 'void *' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-PointerType 0x5589287d4ce0 'void *'
|         `-BuiltinType 0x5589287d44e0 'void'
|-TypedefDecl 0x558928eeee70 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x558928eeee20 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x558928eeee00 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x558928eeed90 'type'
|     `-SubstTemplateTypeParmType 0x558928eeeb50 'void *' sugar
|       |-TemplateTypeParmType 0x5589289fc260 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5589289fc210 'T'
|       `-PointerType 0x5589287d4ce0 'void *'
|         `-BuiltinType 0x5589287d44e0 'void'
|-TypedefDecl 0x558928eeeed8 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x558928eee130 'void *const &'
|   `-QualType 0x558928eecf11 'void *const' const
|     `-SubstTemplateTypeParmType 0x558928eecf10 'void *' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-PointerType 0x5589287d4ce0 'void *'
|         `-BuiltinType 0x5589287d44e0 'void'
|-TypedefDecl 0x558928eeef30 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5589287d4580 'int'
|-TypedefDecl 0x558928eeef98 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x558928eee1c0 'void **'
|   `-SubstTemplateTypeParmType 0x558928eecf10 'void *' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-PointerType 0x5589287d4ce0 'void *'
|       `-BuiltinType 0x5589287d44e0 'void'
|-TypedefDecl 0x558928eef000 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x558928eee250 'void *const *'
|   `-QualType 0x558928eecf11 'void *const' const
|     `-SubstTemplateTypeParmType 0x558928eecf10 'void *' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-PointerType 0x5589287d4ce0 'void *'
|         `-BuiltinType 0x5589287d44e0 'void'
|-EnumDecl 0x558928eef058 <line:134:5> col:5
| `-EnumConstantDecl 0x558928eef150 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x558928eef130 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x558928ad74d8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x558928ad74b0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x558928ad7490 <col:40> 'int' 1
|-CXXConstructorDecl 0x558928ef09e0 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x558928ef0c28 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x558928ef0a98 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928ef0b30 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x558928ef0ee8 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x558928ef0dd0 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x558928ef11a8 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x558928ef1090 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x558928ef14f0 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x558928ef13d0 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x558928ef1800 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x558928ef16e0 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x558928ef1af0 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x558928ef1938 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928ef19b0 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x558928ef1c48 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x558928ef1d28 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928ef1d80 <col:30> Inherited
|-CXXMethodDecl 0x558928ef1dc8 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x558928ef1e78 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928ef1ed0 <col:30> Inherited
|-CXXMethodDecl 0x558928ef1f98 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x558928ef2048 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928ef20a0 <col:30> Inherited
|-CXXMethodDecl 0x558928ef20e8 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x558928ef2198 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928ef21f0 <col:30> Inherited
|-CXXMethodDecl 0x558928ef2238 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x558928ef22e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928ef2340 <col:30> Inherited
|-CXXMethodDecl 0x558928ef2388 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x558928ef2438 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928ef2490 <col:30> Inherited
|-CXXMethodDecl 0x558928ef24b8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558928ef2568 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558928ef2618 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x558928ef27d8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x558928ef26c8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928ef2740 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x558928ef2928 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x558928ef2898 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928ef2ad8 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x558928ef29e0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558928ef2b90 <col:20>
| `-OptimizeNoneAttr 0x558928ef2be8 <col:30>
|-CXXMethodDecl 0x558928ef2d08 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x558928ef2c10 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558928ef2dc0 <col:20>
| `-OptimizeNoneAttr 0x558928ef2e18 <col:30>
|-CXXMethodDecl 0x558928ef2ed0 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x558928ef2e40 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928ef3018 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558928ef2f88 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928ef3148 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x558928ef3278 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x558928ef3348 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x558928ef3418 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x558928ef3558 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x558928ef34c8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928ef36a0 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558928ef3610 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928ef37e8 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x558928ef3758 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558928ef38a0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x558928ef39a0 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x558928ef3910 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558928ef3a58 <col:60> Inherited "" ""
|-CXXMethodDecl 0x558928ef3b18 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x558928ef3c18 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x558928ef3d98 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x558928ef3cd8 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x558928ef4558 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x558928ef3e50 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x558928ef44b8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x558928ef43b8 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x558928ef4638 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558928ef4788 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x558928ef46f8 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x558928ef4840 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x558928ef4a88 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x558928ef4900 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x558928ef4978 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x558928ef4c48 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x558928ef4b58 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x558928ef4e98 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x558928ef4d10 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x558928ef4d88 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x558928ef4f58 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x558928ef51b8 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x558928ef50c0 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x558928ef5288 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x558928ef5288

Layout: <CGRecordLayout
  LLVMType:%class.Vector.12 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.12 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928ef5480 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x558928ef5598 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x558928ef5628 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x558928ef5730 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x558928ef5780 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558928ef5710 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x558928ef56f0 <col:27> 'int' 4096
|-FieldDecl 0x558928ef57a8 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x558928ef5810 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x558928ef5a08 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x558928ef5a98 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x558928ef5c58 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x558928ef5af8 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x558928ef5b70 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x558928ef57a8 'name' 'String'
| | `-CXXConstructExpr 0x558928f00bb8 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x558928f00b78 <col:20> 'const String' lvalue ParmVar 0x558928ef5af8 'n' 'const String &'
| |-CXXCtorInitializer Field 0x558928ef5810 'nsig' 'int'
| | `-IntegerLiteral 0x558928f00c10 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x558928ef5a08 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x558928f00cf8 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x558928ef5a98 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x558928f00cb8 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x558928f00c78 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x558928ef5b70 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x558928f00f88 <col:42, line:289:9>
|   `-CallExpr 0x558928f00f38 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x558928f00f20 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x558928f00f00 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x558928a64e28 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x558928f00f70 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x558928f00e48 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x558928f00e28 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x558928f00e10 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558928f00dc0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x558928ef5a08
|     |     |   `-CXXThisExpr 0x558928f00db0 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x558928f00df0 <col:25> 'int' 0
|     |-IntegerLiteral 0x558928f00e60 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x558928f00ee0 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x558928f00ec0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x558928f00e90 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x558928ef5a08 non_odr_use_unevaluated
|           `-CXXThisExpr 0x558928f00e80 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x558928ef5d38 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x558928ef5d38
| `-ParmVarDecl 0x558928ef5e48 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x558928ef5ee8 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x558928ef5ee8
| `-ParmVarDecl 0x558928ef5ff8 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x558928ef6098 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x558928ef6098
| `-ParmVarDecl 0x558928ef61a8 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x558928ef6218 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x558928ef6218
| `-ParmVarDecl 0x558928ef6328 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x558928ef63b0 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x558928ef63b0

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928eb2060 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558928eb2178 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x558928eb2208 <col:21, col:27> col:21 public
|-EnumDecl 0x558928eb2230 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x558928eb2348 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x558928eb2328 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x558928eb2310 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x558928eb22f0 <col:32> 'int' 1
| `-EnumConstantDecl 0x558928eb23f0 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x558928eb23d0 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x558928eb23b8 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x558928eb2398 <col:53> 'int' 1000
|-CXXConstructorDecl 0x558928eb24a0 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x558928ec3a48 <col:19, col:21>
|-CXXDestructorDecl 0x558928eb2590 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x558928ec3a58 <col:28, col:30>
|-CXXMethodDecl 0x558928eb2750 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x558928eb2680 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x558928ec38d0 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x558928ec38d0
  `-ParmVarDecl 0x558928ec39d8 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928ec3fe0 prev 0x558928e89e10 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x558928ec40d8 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x558928ec4168 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x558928ec41d8 <line:28:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x558928ec4298 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x558928ec4358 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x558928ec4418 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x558928ec44d8 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x558928ec4578 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x558928ec46d8 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x558928ec46b8 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x558928ec4698 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x558928ec4660 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x558928ec4640 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x558928ec4678 <col:42> 'int' 1
|-CXXMethodDecl 0x558928ec4778 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x558928ec48e8 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x558928ec4828 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x558928ec4a30 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x558928ec49a0 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x558928ec4af8 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x558928ec4cc0 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x558928ec4d88 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x558928ec4ed0 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x558928ec4e40 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x558928ec4f98 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x558928ec5198 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x558928ec5048 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x558928ec50c8 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x558928ec52f0 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x558928ec5260 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x558928ec5440 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x558928ec53b0 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x558928ec5590 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x558928ec5500 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x558928ec56e0 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x558928ec5650 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x558928ec58b0 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x558928ec57a0 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x558928ec5818 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x558928ec5ab8 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x558928ec5970 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x558928ec59e8 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x558928efd800 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x558928efd7e0 <col:60> 'int' 0
|-CXXMethodDecl 0x558928ec5d48 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x558928ec5b78 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x558928ec5bf0 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x558928ec5c68 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x558928efd838 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x558928efd818 <col:76> 'int' 0
|-CXXMethodDecl 0x558928ec5fe8 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x558928ec5e10 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x558928ec5e88 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x558928ec5f00 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x558928efd870 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x558928efd850 <col:84> 'int' 0
|-CXXMethodDecl 0x558928ec6320 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x558928ec60b0 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x558928ec6128 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x558928ec61a8 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x558928ec6220 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x558928ec65d0 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x558928ec63f0 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x558928ec6470 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x558928ec64e8 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x558928ec6838 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x558928ec6698 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x558928ec6718 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x558928ec6790 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x558928ec6cc0 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x558928ec6900 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x558928ec6980 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x558928ec6a28 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x558928ec6b70 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x558928ec6d80 <col:115> "" ""
|-CXXMethodDecl 0x558928ec7140 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x558928ec6e00 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x558928ec6e80 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x558928ec6ef8 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x558928ec7040 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x558928ec7200 <col:113> "" ""
|-CXXMethodDecl 0x558928ec7350 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x558928ec7288 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x558928ec7520 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x558928ec7410 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x558928ec7488 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x558928ec7728 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x558928ec75e0 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x558928ec7658 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x558928ec7b28 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x558928ec77e8 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x558928ec7860 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x558928ec78d8 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x558928ec7958 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x558928ec79d0 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558928efd8a8 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558928efd888 <col:137> 'int' 0
|-CXXMethodDecl 0x558928ec7f38 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x558928ec7c00 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x558928ec7c78 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x558928ec7cf0 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x558928ec7d70 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x558928ec7de8 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558928efd8e0 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558928efd8c0 <col:139> 'int' 0
|-CXXMethodDecl 0x558928ec83e8 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x558928ec8010 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x558928ec8088 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x558928ec8100 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558928ec8178 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x558928ec81f8 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x558928efd918 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x558928efd8f8 <col:133> 'int' 0
| `-ParmVarDecl 0x558928ec8278 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x558928efd950 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x558928efd930 <col:160> 'int' 0
|-CXXMethodDecl 0x558928ec8780 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x558928ec84c8 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x558928ec8540 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x558928ec85b8 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x558928ec8630 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558928efd988 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558928efd968 <col:116> 'int' 0
|-EnumDecl 0x558928ec8840 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x558928ec8940 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x558928ec8990 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558928ec8920 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x558928ec8900 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x558928ec8b10 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x558928ec89b8 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x558928ec8a30 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x558928ec8d28 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x558928ec8bd0 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x558928ec8c50 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x558928ec9058 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x558928ec8de8 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x558928ec8f40 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x558928ec91e0 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x558928ec9118 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x558928ec9360 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x558928ec9298 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x558928ec9570 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x558928ec9418 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x558928ec9498 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x558928ec96f8 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x558928ec9630 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x558928ec9818 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x558928ec9908 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x558928ec9a78 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x558928ec99b8 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x558928ec9c00 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x558928ec9b30 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x558928ec9e08 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x558928ec9cb8 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x558928ec9d38 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x558928ec9f38 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x558928eca028 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x558928eca0e8 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x558928eca2e8 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x558928eca198 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x558928eca210 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x558928efda38 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x558928efda20 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x558928efda08 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x558928efd9e8 <col:58, col:65> 'String' (CXXTemporary 0x558928efd9e8)
|           `-CXXTemporaryObjectExpr 0x558928efd9b0 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x558928eca4b8 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x558928eca3a8 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x558928eca420 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x558928efdae8 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x558928efdad0 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x558928efdab8 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x558928efda98 <col:71, col:78> 'String' (CXXTemporary 0x558928efda98)
|           `-CXXTemporaryObjectExpr 0x558928efda60 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x558928eca688 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x558928eca578 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x558928eca5f0 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x558928efdb98 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x558928efdb80 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x558928efdb68 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x558928efdb48 <col:71, col:78> 'String' (CXXTemporary 0x558928efdb48)
|           `-CXXTemporaryObjectExpr 0x558928efdb10 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x558928eca858 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x558928eca748 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x558928eca7c0 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x558928efdc48 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x558928efdc30 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x558928efdc18 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x558928efdbf8 <col:70, col:77> 'String' (CXXTemporary 0x558928efdbf8)
|           `-CXXTemporaryObjectExpr 0x558928efdbc0 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x558928eca9d8 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x558928eca918 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x558928ecabf8 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x558928ecaa90 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x558928ecab08 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x558928ecacf8 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x558928ecacf8
|-CXXMethodDecl 0x558928ecae00 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x558928ecaec0 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x558928ecaf80 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x558928ecb040 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x558928ecb238 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x558928ecb0f0 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x558928ecb168 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x558928ecb5f0 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x558928ecb2f8 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x558928ecb370 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x558928ecb3e8 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x558928ecb460 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x558928ecb4e0 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x558928ecb970 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x558928ecb6d0 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x558928ecb750 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x558928ecb7d0 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x558928ecb850 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x558928ecba50 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x558928ecbb90 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x558928ecbb00 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x558928ecbce0 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x558928ecbc48 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558928ecbee8 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x558928ecbd98 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x558928ecbe10 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558928ecc038 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x558928ecbfa8 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558928ecc180 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x558928ecc0f0 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x558928ecc3c0 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x558928ecc240 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x558928ecc2e8 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x558928ecc548 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x558928ecc480 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x558928ecc5f0 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558928ecc708 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x558928ecc7b0 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x558928ecc818 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x558928ecc8d0 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x558928efdc70 <col:16, line:150:9>
| |-CXXConstructorDecl 0x558928eccaa8 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x558928ecc990 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x558928ecca10 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x558928ecc7b0 'idx' 'int'
| | | `-ImplicitCastExpr 0x558928efdcc0 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x558928efdc80 <col:19> 'int' lvalue ParmVar 0x558928ecc990 'i' 'int'
| | |-CXXCtorInitializer Field 0x558928ecc818 'port' 'int'
| | | `-ImplicitCastExpr 0x558928efdd40 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x558928efdd00 <col:28> 'int' lvalue ParmVar 0x558928ecca10 'p' 'int'
| | `-CompoundStmt 0x558928efdd90 <col:31, line:153:9>
| |-CXXMethodDecl 0x558928eccc88 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x558928eccb98 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x558928efdf90 <col:46, line:157:9>
| |   `-ReturnStmt 0x558928efdf80 <line:156:13, col:46>
| |     `-BinaryOperator 0x558928efdf60 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x558928efde60 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x558928efde30 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x558928efddb0 <col:20> 'const int' lvalue ->idx 0x558928ecc7b0
| |       | |   `-CXXThisExpr 0x558928efdda0 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x558928efde48 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x558928efde00 <col:27, col:29> 'const int' lvalue .idx 0x558928ecc7b0
| |       |     `-DeclRefExpr 0x558928efdde0 <col:27> 'const Router::Port' lvalue ParmVar 0x558928eccb98 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x558928efdf40 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x558928efdf10 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x558928efde90 <col:36> 'const int' lvalue ->port 0x558928ecc818
| |         |   `-CXXThisExpr 0x558928efde80 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x558928efdf28 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x558928efdee0 <col:44, col:46> 'const int' lvalue .port 0x558928ecc818
| |             `-DeclRefExpr 0x558928efdec0 <col:44> 'const Router::Port' lvalue ParmVar 0x558928eccb98 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x558928eccdd0 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x558928eccd40 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x558928efe198 <col:46, line:160:9>
| |   `-ReturnStmt 0x558928efe188 <line:159:13, col:46>
| |     `-BinaryOperator 0x558928efe168 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x558928efe068 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x558928efe038 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x558928efdfb8 <col:20> 'const int' lvalue ->idx 0x558928ecc7b0
| |       | |   `-CXXThisExpr 0x558928efdfa8 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x558928efe050 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x558928efe008 <col:27, col:29> 'const int' lvalue .idx 0x558928ecc7b0
| |       |     `-DeclRefExpr 0x558928efdfe8 <col:27> 'const Router::Port' lvalue ParmVar 0x558928eccd40 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x558928efe148 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x558928efe118 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x558928efe098 <col:36> 'const int' lvalue ->port 0x558928ecc818
| |         |   `-CXXThisExpr 0x558928efe088 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x558928efe130 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x558928efe0e8 <col:44, col:46> 'const int' lvalue .port 0x558928ecc818
| |             `-DeclRefExpr 0x558928efe0c8 <col:44> 'const Router::Port' lvalue ParmVar 0x558928eccd40 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x558928eccf18 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x558928ecce88 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x558928efe4c0 <col:45, line:163:9>
| |   `-ReturnStmt 0x558928efe4b0 <line:162:13, col:65>
| |     `-BinaryOperator 0x558928efe490 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x558928efe270 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x558928efe240 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x558928efe1c0 <col:20> 'const int' lvalue ->idx 0x558928ecc7b0
| |       | |   `-CXXThisExpr 0x558928efe1b0 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x558928efe258 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x558928efe210 <col:26, col:28> 'const int' lvalue .idx 0x558928ecc7b0
| |       |     `-DeclRefExpr 0x558928efe1f0 <col:26> 'const Router::Port' lvalue ParmVar 0x558928ecce88 'x' 'const Router::Port &'
| |       `-ParenExpr 0x558928efe470 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x558928efe450 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x558928efe350 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x558928efe320 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x558928efe2a0 <col:36> 'const int' lvalue ->idx 0x558928ecc7b0
| |           | |   `-CXXThisExpr 0x558928efe290 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x558928efe338 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x558928efe2f0 <col:43, col:45> 'const int' lvalue .idx 0x558928ecc7b0
| |           |     `-DeclRefExpr 0x558928efe2d0 <col:43> 'const Router::Port' lvalue ParmVar 0x558928ecce88 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x558928efe430 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x558928efe400 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x558928efe380 <col:52> 'const int' lvalue ->port 0x558928ecc818
| |             |   `-CXXThisExpr 0x558928efe370 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x558928efe418 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x558928efe3d0 <col:59, col:61> 'const int' lvalue .port 0x558928ecc818
| |                 `-DeclRefExpr 0x558928efe3b0 <col:59> 'const Router::Port' lvalue ParmVar 0x558928ecce88 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x558928ecd060 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x558928eccfd0 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x558928efe7e8 <col:46, line:166:9>
| |   `-ReturnStmt 0x558928efe7d8 <line:165:13, col:66>
| |     `-BinaryOperator 0x558928efe7b8 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x558928efe598 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x558928efe568 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x558928efe4e8 <col:20> 'const int' lvalue ->idx 0x558928ecc7b0
| |       | |   `-CXXThisExpr 0x558928efe4d8 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x558928efe580 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x558928efe538 <col:26, col:28> 'const int' lvalue .idx 0x558928ecc7b0
| |       |     `-DeclRefExpr 0x558928efe518 <col:26> 'const Router::Port' lvalue ParmVar 0x558928eccfd0 'x' 'const Router::Port &'
| |       `-ParenExpr 0x558928efe798 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x558928efe778 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x558928efe678 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x558928efe648 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x558928efe5c8 <col:36> 'const int' lvalue ->idx 0x558928ecc7b0
| |           | |   `-CXXThisExpr 0x558928efe5b8 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x558928efe660 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x558928efe618 <col:43, col:45> 'const int' lvalue .idx 0x558928ecc7b0
| |           |     `-DeclRefExpr 0x558928efe5f8 <col:43> 'const Router::Port' lvalue ParmVar 0x558928eccfd0 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x558928efe758 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x558928efe728 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x558928efe6a8 <col:52> 'const int' lvalue ->port 0x558928ecc818
| |             |   `-CXXThisExpr 0x558928efe698 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x558928efe740 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x558928efe6f8 <col:60, col:62> 'const int' lvalue .port 0x558928ecc818
| |                 `-DeclRefExpr 0x558928efe6d8 <col:60> 'const Router::Port' lvalue ParmVar 0x558928eccfd0 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x558928efe800 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x558928efe800
| | `-ParmVarDecl 0x558928efe918 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x558928efe9b8 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x558928efe9b8
| | `-ParmVarDecl 0x558928efeac8 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x558928efeb60 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x558928efee30 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x558928efee30
| | `-ParmVarDecl 0x558928efef38 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x558928efefa8 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x558928eff0b8 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x558928eff3d8 <col:12>
|     |-BinaryOperator 0x558928eff278 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x558928eff230 <col:12> 'int' lvalue ->idx 0x558928ecc7b0
|     | | `-CXXThisExpr 0x558928eff220 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x558928eff260 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x558928eff1f0 <col:12> 'int' xvalue .idx 0x558928ecc7b0
|     |     `-CXXStaticCastExpr 0x558928eff1c0 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x558928eff190 <col:12> 'Router::Port' lvalue ParmVar 0x558928eff0b8 '' 'Router::Port &&'
|     |-BinaryOperator 0x558928eff380 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x558928eff338 <col:12> 'int' lvalue ->port 0x558928ecc818
|     | | `-CXXThisExpr 0x558928eff328 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x558928eff368 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x558928eff2f8 <col:12> 'int' xvalue .port 0x558928ecc818
|     |     `-CXXStaticCastExpr 0x558928eff2c8 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x558928eff298 <col:12> 'Router::Port' lvalue ParmVar 0x558928eff0b8 '' 'Router::Port &&'
|     `-ReturnStmt 0x558928eff3c8 <col:12>
|       `-UnaryOperator 0x558928eff3b0 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558928eff3a0 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x558928ecd120 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x558928ecd238 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x558928ecd428 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x558928ecd4e0 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x558928ecd428 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x558928efeb38 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x558928efec70 <col:22, line:173:9>
| |-CXXConstructorDecl 0x558928ecd818 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x558928ecd5a0 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x558928ecd620 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x558928ecd6a0 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x558928ecd720 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x558928ecd428 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x558928efec80 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x558928eff6b8 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x558928eff4a8 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x558928eff470 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x558928eff458 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x558928eff140 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x558928efefa8 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x558928efed50 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x558928efed38 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x558928efece8 <col:13> 'Router::Port [2]' lvalue ->p 0x558928ecd428
| |   |   | |   `-CXXThisExpr 0x558928efecd8 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x558928efed18 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x558928eff128 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x558928efedf0 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x558928efedc0 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x558928efed80 <col:25> 'int' lvalue ParmVar 0x558928ecd6a0 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x558928efedd8 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x558928efeda0 <col:33> 'int' lvalue ParmVar 0x558928ecd720 'to_port' 'int'
| |   `-ExprWithCleanups 0x558928eff6a0 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x558928eff668 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x558928eff650 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x558928eff630 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x558928efefa8 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x558928eff538 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x558928eff520 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x558928eff4d0 <col:13> 'Router::Port [2]' lvalue ->p 0x558928ecd428
| |       | |   `-CXXThisExpr 0x558928eff4c0 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x558928eff500 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x558928eff618 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x558928eff5d8 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x558928eff5a8 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x558928eff568 <col:25> 'int' lvalue ParmVar 0x558928ecd5a0 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x558928eff5c0 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x558928eff588 <col:35> 'int' lvalue ParmVar 0x558928ecd620 'from_port' 'int'
| |-CXXMethodDecl 0x558928ecd9e8 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x558928ecd8f8 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x558928effc78 <col:45, line:182:9>
| |   |-ParenExpr 0x558928effb58 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x558928effb28 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x558928eff7f8 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x558928eff7c8 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x558928eff730 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x558928eff718 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x558928eff6d8 <col:34> 'int' lvalue ParmVar 0x558928ecd8f8 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x558928eff6f8 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x558928eff7a8 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x558928eff790 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x558928eff750 <col:44> 'int' lvalue ParmVar 0x558928ecd8f8 'i' 'int'
| |   |   |     `-IntegerLiteral 0x558928eff770 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x558928eff858 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x558928eff838 <col:59> 'int' 0
| |   |   `-CallExpr 0x558928effa88 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x558928effa70 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x558928effa50 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558928874570 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x558928effac8 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x558928eff8c8 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x558928effae0 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x558928eff8f0 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x558928effaf8 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x558928eff928 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x558928effb10 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x558928effa38 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x558928effa20 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x558928eff9c8 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x558928effc68 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x558928effc48 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x558928effc18 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x558928effb88 <col:20> 'Router::Port const[2]' lvalue ->p 0x558928ecd428
| |       |   `-CXXThisExpr 0x558928effb78 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x558928effc30 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x558928effbb8 <col:22> 'int' lvalue ParmVar 0x558928ecd8f8 'i' 'int'
| |-CXXMethodDecl 0x558928ecdb98 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x558928ecdaa8 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x558928f001f0 <col:33, line:186:9>
| |   |-ParenExpr 0x558928f00110 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x558928f000e0 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x558928effdb8 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x558928effd88 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x558928effcf0 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x558928effcd8 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x558928effc98 <col:34> 'int' lvalue ParmVar 0x558928ecdaa8 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x558928effcb8 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x558928effd68 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x558928effd50 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x558928effd10 <col:44> 'int' lvalue ParmVar 0x558928ecdaa8 'i' 'int'
| |   |   |     `-IntegerLiteral 0x558928effd30 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x558928effe18 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x558928effdf8 <col:59> 'int' 0
| |   |   `-CallExpr 0x558928f00040 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x558928f00028 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x558928f00008 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558928874570 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x558928f00080 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x558928effe88 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x558928f00098 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x558928effeb0 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x558928f000b0 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x558928effee8 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x558928f000c8 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x558928effff0 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x558928efffd8 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x558928efff88 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x558928f001e0 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x558928f001c0 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x558928f00190 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x558928f00140 <col:20> 'Router::Port [2]' lvalue ->p 0x558928ecd428
| |       |   `-CXXThisExpr 0x558928f00130 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x558928f001a8 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x558928f00170 <col:22> 'int' lvalue ParmVar 0x558928ecdaa8 'i' 'int'
| |-CXXMethodDecl 0x558928ecdd38 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x558928ecdc78 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x558928f005c8 <col:52, line:190:9>
| |   `-ReturnStmt 0x558928f005b8 <line:189:13, col:51>
| |     `-BinaryOperator 0x558928f00598 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x558928f003b0 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x558928f00398 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x558928f00350 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x558928eccc88 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x558928f00288 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x558928f00270 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x558928f00220 <col:20> 'Router::Port const[2]' lvalue ->p 0x558928ecd428
| |       | | |   `-CXXThisExpr 0x558928f00210 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x558928f00250 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x558928f00330 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x558928f00318 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x558928f002c8 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x558928ecd428
| |       |   |   `-DeclRefExpr 0x558928f002a8 <col:28> 'const Router::Connection' lvalue ParmVar 0x558928ecdc78 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x558928f002f8 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x558928f00560 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x558928f00548 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x558928f00528 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x558928eccc88 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x558928f00460 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x558928f00448 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x558928f003f8 <col:38> 'Router::Port const[2]' lvalue ->p 0x558928ecd428
| |         | |   `-CXXThisExpr 0x558928f003e8 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x558928f00428 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x558928f00508 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x558928f004f0 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x558928f004a0 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x558928ecd428
| |           |   `-DeclRefExpr 0x558928f00480 <col:46> 'const Router::Connection' lvalue ParmVar 0x558928ecdc78 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x558928f004d0 <col:50> 'int' 1
| `-CXXMethodDecl 0x558928ecde80 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x558928ecddf0 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x558928f00b60 <col:51, line:193:9>
|     `-ReturnStmt 0x558928f00b50 <line:192:13, col:69>
|       `-BinaryOperator 0x558928f00b30 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x558928f00758 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x558928f00740 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x558928f00720 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x558928eccf18 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x558928f00658 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x558928f00640 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x558928f005f0 <col:20> 'Router::Port const[2]' lvalue ->p 0x558928ecd428
|         | | |   `-CXXThisExpr 0x558928f005e0 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x558928f00620 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x558928f00700 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x558928f006e8 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x558928f00698 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x558928ecd428
|         |   |   `-DeclRefExpr 0x558928f00678 <col:27> 'const Router::Connection' lvalue ParmVar 0x558928ecddf0 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x558928f006c8 <col:31> 'int' 0
|         `-ParenExpr 0x558928f00b10 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x558928f00af0 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x558928f00908 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x558928f008f0 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x558928f008d0 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x558928eccc88 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x558928f00808 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x558928f007f0 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x558928f007a0 <col:38> 'Router::Port const[2]' lvalue ->p 0x558928ecd428
|             | | |   `-CXXThisExpr 0x558928f00790 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x558928f007d0 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x558928f008b0 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x558928f00898 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x558928f00848 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x558928ecd428
|             |   |   `-DeclRefExpr 0x558928f00828 <col:46> 'const Router::Connection' lvalue ParmVar 0x558928ecddf0 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x558928f00878 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x558928f00ab8 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x558928f00aa0 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x558928f00a80 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x558928eccf18 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x558928f009b8 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x558928f009a0 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x558928f00950 <col:56> 'Router::Port const[2]' lvalue ->p 0x558928ecd428
|               | |   `-CXXThisExpr 0x558928f00940 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x558928f00980 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x558928f00a60 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x558928f00a48 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x558928f009f8 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x558928ecd428
|                 |   `-DeclRefExpr 0x558928f009d8 <col:63> 'const Router::Connection' lvalue ParmVar 0x558928ecddf0 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x558928f00a28 <col:67> 'int' 1
|-AccessSpecDecl 0x558928ecdf40 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x558928ecdf68 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x558928ece020 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x558928ece0e0 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x558928ece130 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x558928ece180 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x558928ece1d0 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x558928ece220 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x558928ece270 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x558928ece388 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x558928ece368 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x558928ece350 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x558928ece330 <col:25> 'int' 2
| |-EnumConstantDecl 0x558928ece430 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x558928ece410 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x558928ece3f8 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x558928ece3d8 <col:48> 'int' 1
| |-EnumConstantDecl 0x558928ece4c0 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x558928ece4a0 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x558928ece480 <col:71> 'int' 0
| |-EnumConstantDecl 0x558928ece550 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x558928ece530 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x558928ece510 <col:30> 'int' 1
| `-EnumConstantDecl 0x558928ece5e0 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x558928ece5c0 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x558928ece5a0 <col:50> 'int' 2
|-FieldDecl 0x558928ece640 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x558928ece6a0 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x558928ece708 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x558928ece7a8 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x558928ece788 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x558928ece758 <col:30> 'int' 1
|-FieldDecl 0x558928ece848 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x558928ece828 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x558928ece7f8 <col:33> 'int' 1
|-FieldDecl 0x558928ece8e8 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x558928ece8c8 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x558928ece898 <col:32> 'int' 1
|-FieldDecl 0x558928ece950 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x558928ece9b0 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x558928eceab0 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x558928ecebb0 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x558928ececb0 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x558928ed60a0 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x558928ed61b0 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x558928ed6200 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x558928ed6318 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x558928ed63b8 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x558928ed6418 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x558928ed64b0 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x558928ed64b0
| | `-ParmVarDecl 0x558928ed65c8 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x558928ed6668 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x558928ed6668
| | `-ParmVarDecl 0x558928ed6778 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x558928ed6818 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x558928ed6818
| | `-ParmVarDecl 0x558928ed6928 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x558928ed6998 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x558928ed6998
| | `-ParmVarDecl 0x558928ed6aa8 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x558928ed6b30 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x558928ed6b30
|-FieldDecl 0x558928ee3800 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x558928ee3860 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x558928ee3970 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x558928ee3cc8 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x558928ee3dd0 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x558928eec1e0 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x558928eec2f0 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x558928eec3f0 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x558928eec500 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x558928eec610 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x558928eec720 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x558928eec830 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x558928eec880 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x558928eec980 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x558928eec9d0 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558928eec960 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x558928eec940 <col:29> 'int' 256
|-FieldDecl 0x558928eeca30 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x558928eeca98 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x558928eecb00 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x558928eecc00 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x558928ef5370 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x558928ef53d0 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x558928ef5430 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x558928ef5480 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x558928ef5598 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x558928ef5628 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x558928ef5730 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x558928ef5780 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x558928ef5710 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x558928ef56f0 <col:27> 'int' 4096
| |-FieldDecl 0x558928ef57a8 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x558928ef5810 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x558928ef5a08 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x558928ef5a98 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x558928ef5c58 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x558928ef5af8 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x558928ef5b70 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x558928ef57a8 'name' 'String'
| | | `-CXXConstructExpr 0x558928f00bb8 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x558928f00b78 <col:20> 'const String' lvalue ParmVar 0x558928ef5af8 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x558928ef5810 'nsig' 'int'
| | | `-IntegerLiteral 0x558928f00c10 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x558928ef5a08 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x558928f00cf8 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x558928ef5a98 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x558928f00cb8 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x558928f00c78 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x558928ef5b70 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x558928f00f88 <col:42, line:289:9>
| |   `-CallExpr 0x558928f00f38 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x558928f00f20 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x558928f00f00 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x558928a64e28 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x558928f00f70 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x558928f00e48 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x558928f00e28 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x558928f00e10 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x558928f00dc0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x558928ef5a08
| |     |     |   `-CXXThisExpr 0x558928f00db0 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x558928f00df0 <col:25> 'int' 0
| |     |-IntegerLiteral 0x558928f00e60 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x558928f00ee0 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x558928f00ec0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x558928f00e90 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x558928ef5a08 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x558928f00e80 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x558928ef5d38 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x558928ef5d38
| | `-ParmVarDecl 0x558928ef5e48 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x558928ef5ee8 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x558928ef5ee8
| | `-ParmVarDecl 0x558928ef5ff8 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x558928ef6098 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x558928ef6098
| | `-ParmVarDecl 0x558928ef61a8 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x558928ef6218 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x558928ef6218
| | `-ParmVarDecl 0x558928ef6328 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x558928ef63b0 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x558928ef63b0
|-FieldDecl 0x558928ef64a0 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x558928ef6500 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x558928ef6560 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x558928ef65c0 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x558928ef6620 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x558928ef6730 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x558928ef6830 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x558928ef6890 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x558928ef69d8 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x558928ef6918 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x558928ef6b88 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x558928ef6a98 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x558928ef6cd0 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x558928ef6c40 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x558928ef7078 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x558928ef6d88 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x558928ef6e00 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x558928ef6e80 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x558928ef6ef8 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x558928ef6f70 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558928efdc60 <col:57> 'bool' false
|-CXXMethodDecl 0x558928ef71e8 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x558928ef7150 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x558928ef7338 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x558928ef72a0 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x558928ef7488 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x558928ef73f0 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x558928ef75e0 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x558928ef7548 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x558928ef7900 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x558928ef7698 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x558928ef7710 <col:50> col:54 'bool'
| |-ParmVarDecl 0x558928ef7790 <col:56> col:59 'int'
| `-ParmVarDecl 0x558928ef7808 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x558928ef7a68 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x558928ef79d0 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x558928ef7b30 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x558928ef7bf0 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x558928ef7df0 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x558928ef7ca0 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x558928ef7d18 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x558928ef7ec0 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x558928ef8008 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x558928ef7f70 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x558928f011c0 <col:42, line:326:5>
|   `-ReturnStmt 0x558928f011b0 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x558928f01198 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x558928f01178 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x558928f01148 <col:16, col:45> '<bound member function type>' .back 0x558928d4dfc8
|           `-ArraySubscriptExpr 0x558928f010c8 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x558928f01098 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558928f00fb0 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x558928ee3cc8
|             |   `-CXXThisExpr 0x558928f00fa0 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x558928f010b0 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x558928f00fe0 <col:38> 'bool' lvalue ParmVar 0x558928ef7f70 'isout' 'bool'
|-CXXMethodDecl 0x558928ef81d8 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x558928ef80c0 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x558928ef8138 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x558928ef8330 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x558928ef8298 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x558928ef85d8 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x558928ef83e8 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x558928ef8460 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x558928ef84e0 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x558928ef87b0 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x558928ef86a0 <col:30> col:34 'bool'
| `-ParmVarDecl 0x558928ef8718 <col:36> col:40 'bool'
|-CXXMethodDecl 0x558928ef8938 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x558928ef8878 <col:30> col:33 'int'
|-CXXMethodDecl 0x558928efc780 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x558928efc5a8 <col:23> col:26 'int'
| |-ParmVarDecl 0x558928efc620 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x558928efc698 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x558928efc998 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x558928efc848 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x558928efc8c0 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x558928efcba8 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x558928efca60 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x558928efcad8 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x558928efcd28 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x558928efcc68 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x558928efcf28 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x558928efcde0 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x558928efce58 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x558928efd100 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x558928efcfe8 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x558928efd068 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x558928efd3e0 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x558928efd1c0 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x558928efd238 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x558928efd2b8 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x558928efd330 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x558928efd4c0 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x558928efd520 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x558928efd7a0 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x558928efd6a0 parent 0x558928deafa0 prev 0x558928df9928 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x558928efd580 <col:36> col:39 'int'
    `-ParmVarDecl 0x558928efd600 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928deafa0 prev 0x558928dead40 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558928deb098 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x558928deb128 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x558928deb188 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x558928deb278 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x558928deb378 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x558928deb548 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x558928deb3f8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x558928deb470 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x558928deb6d8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x558928deb610 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x558928deb780 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x558928deb8b8 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x558928deb7f0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x558928deba58 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x558928deb998 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x558928debbf8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x558928debb38 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x558928debca0 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x558928debda0 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x558928debe80 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928debd80 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x558928debd60 <col:26> 'int' 1
| `-EnumConstantDecl 0x558928debe30 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x558928debe98 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558928debe10 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x558928debdf0 <col:44> 'int' 2
|-CXXMethodDecl 0x558928debfe0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x558928debec8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x558928debf48 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x558928dec138 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x558928dec0a8 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x558928dec348 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x558928dec1f8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x558928dec270 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x558928dec3f8 <col:20>
| `-OptimizeNoneAttr 0x558928dec450 <col:30>
|-CXXMethodDecl 0x558928dec558 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x558928dec490 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x558928dec600 <col:20>
| `-OptimizeNoneAttr 0x558928dec658 <col:30>
|-CXXMethodDecl 0x558928dec6a8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x558928dec770 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x558928dec858 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x558928dec8e0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x558928dec968 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x558928dec9f0 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x558928deca78 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x558928decb08 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x558928decbc8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x558928decc50 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x558928deccd8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x558928decd60 <line:65:5, col:36> col:23 used PUSH_TO_PULL 'const char []' static
|-VarDecl 0x558928decde8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x558928dece70 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x558928decf00 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x558928decfc0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x558928ded050 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x558928ded1a0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x558928ded108 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x558928ded330 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x558928ded260 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x558928ded5d0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x558928ded3e8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x558928ded468 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x558928ded4e8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x558928ded688 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x558928ded790 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x558928deda20 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ded770 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x558928ded750 <col:33> 'int' 0
| |-EnumConstantDecl 0x558928ded820 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x558928deda38 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ded800 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x558928ded7e0 <col:32> 'int' 20
| |-EnumConstantDecl 0x558928ded8b0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x558928deda50 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ded890 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x558928ded870 <col:38> 'int' 90
| |-EnumConstantDecl 0x558928ded940 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x558928deda68 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ded920 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x558928ded900 <col:35> 'int' 100
| `-EnumConstantDecl 0x558928ded9d0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x558928deda80 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558928ded9b0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x558928ded990 <col:32> 'int' 2000
|-CXXMethodDecl 0x558928dedac0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x558928deddd0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x558928dedc40 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x558928dedcb8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558928dedea0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x558928dee020 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x558928dedf50 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558928dee228 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x558928dee0d8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x558928dee150 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558928dee328 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x558928dee3c8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x558928dee490 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x558928dee520 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x558928dee750 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928dee500 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x558928dee4e0 <col:36> 'int' EnumConstant 0x558928dee490 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x558928dee570 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x558928dee5c0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x558928dee610 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x558928dee660 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x558928dee6b0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x558928dee700 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x558928dee838 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x558928dee778 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x558928dee900 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x558928dee9c0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x558928deea80 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x558928deeb40 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x558928deec28 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x558928deecf0 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x558928deee70 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x558928deeda0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x558928deef98 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x558928def198 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x558928def048 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x558928def0c8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x558928dfb9e8 <col:54, line:127:5>
|   |-ParenExpr 0x558928dfb898 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x558928dfb868 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x558928dfb550 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x558928dfb528 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x558928dfb510 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x558928dfb4f8 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x558928dfb4c8 <col:31> 'Router *' lvalue ->_router 0x558928df93e0
|   |   |         `-CXXThisExpr 0x558928dfb4b8 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x558928dfb5b0 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558928dfb590 <col:48> 'int' 0
|   |   `-CallExpr 0x558928dfb7c8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x558928dfb7b0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558928dfb790 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558928874570 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558928dfb808 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928dfb620 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x558928dfb820 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928dfb640 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x558928dfb838 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558928dfb678 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x558928dfb850 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558928dfb778 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558928dfb760 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558928dfb718 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x558928dfb930 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x558928dfb8c8 <col:9> 'Router *' lvalue ->_router 0x558928df93e0
|   | | `-CXXThisExpr 0x558928dfb8b8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x558928dfb918 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x558928dfb8f8 <col:19> 'Router *' lvalue ParmVar 0x558928def048 'r' 'Router *'
|   `-BinaryOperator 0x558928dfb9c8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x558928dfb960 <col:9> 'int' lvalue ->_eindex 0x558928df9448
|     | `-CXXThisExpr 0x558928dfb950 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x558928dfb9b0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x558928dfb990 <col:19> 'int' lvalue ParmVar 0x558928def0c8 'eindex' 'int'
|-CXXMethodDecl 0x558928def320 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x558928def258 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x558928def3f0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x558928def4b8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x558928def558 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x558928def7a8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x558928def620 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x558928def6a0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x558928def858 <col:20>
| `-OptimizeNoneAttr 0x558928def8b0 <col:30>
|-CXXMethodDecl 0x558928def9b8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x558928def8f0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x558928defa60 <col:20>
| `-OptimizeNoneAttr 0x558928defab8 <col:30>
|-CXXMethodDecl 0x558928defb88 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x558928defaf8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x558928defc30 <col:20>
| `-OptimizeNoneAttr 0x558928defc88 <col:30>
|-CXXMethodDecl 0x558928defe18 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x558928defcc0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x558928defd40 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x558928deffa8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x558928defee0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x558928df00f8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x558928df0068 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x558928df0248 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x558928df01b8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x558928df0398 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x558928df0308 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x558928df0658 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x558928df0450 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x558928df04d0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x558928df0578 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x558928df0730 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x558928df07f0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x558928df0ac0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x558928df0970 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x558928df09e8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x558928df0be8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x558928df0dc0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x558928df0ca0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x558928df0d20 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x558928df0fa8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x558928df0e88 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x558928df0f08 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x558928df1368 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x558928df10b0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x558928df1128 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x558928df11a8 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x558928dfafc8 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x558928dfafa8 <col:106> 'int' 0
| `-ParmVarDecl 0x558928df1220 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558928dfb000 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558928dfafe0 <col:126> 'int' 0
|-CXXMethodDecl 0x558928df16e8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x558928df1438 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x558928df14b0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x558928df1530 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x558928df15a8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558928dfb038 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558928dfb018 <col:114> 'int' 0
|-CXXMethodDecl 0x558928df1a78 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x558928df17c0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x558928df1838 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x558928df18b8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x558928dfb050 <col:96> 'int' 0
| `-ParmVarDecl 0x558928df1930 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558928dfb090 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558928dfb070 <col:116> 'int' 0
|-CXXMethodDecl 0x558928df1df8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x558928df1b48 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x558928df1bc0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x558928df1c40 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x558928dfb0c8 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x558928dfb0a8 <col:109> 'int' 0
| `-ParmVarDecl 0x558928df1cb8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558928dfb100 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558928dfb0e0 <col:129> 'int' 0
|-CXXMethodDecl 0x558928df2178 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x558928df1ec8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x558928df1f40 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x558928df1fc0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x558928df2038 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558928dfb138 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558928dfb118 <col:117> 'int' 0
|-CXXMethodDecl 0x558928df2508 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x558928df2250 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558928df22c8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x558928df2348 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x558928dfb150 <col:99> 'int' 0
| `-ParmVarDecl 0x558928df23c0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x558928dfb190 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x558928dfb170 <col:119> 'int' 0
|-CXXMethodDecl 0x558928df2928 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x558928df25d8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x558928df2658 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x558928df26d0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x558928df2750 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x558928dfb1c8 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x558928dfb1a8 <col:108> 'int' 0
| `-ParmVarDecl 0x558928df27d0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x558928dfb200 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x558928dfb1e0 <col:141> 'int' 0
|-CXXMethodDecl 0x558928df2d48 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x558928df2a00 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x558928df2a80 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x558928df2af8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x558928df2b78 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x558928df2bf8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x558928dfb218 <col:121> 'int' 0
|-CXXMethodDecl 0x558928df3178 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x558928df2e28 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x558928df2ea8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x558928df2f20 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x558928df2fa0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x558928dfb238 <col:98> 'int' 0
| `-ParmVarDecl 0x558928df3020 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x558928dfb258 <col:123> 'int' 0
|-CXXMethodDecl 0x558928df3440 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x558928df3250 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x558928df32d0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x558928df3350 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x558928dfb278 <col:80> 'int' 0
|-EnumDecl 0x558928df34f8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x558928df3600 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x558928df3890 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928df35e0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x558928df35c0 <col:42> 'int' 1
| |-EnumConstantDecl 0x558928df3690 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x558928df38a8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928df3670 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x558928df3650 <col:40> 'int' 2
| |-EnumConstantDecl 0x558928df3720 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x558928df38c0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928df3700 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x558928df36e0 <col:44> 'int' 4
| |-EnumConstantDecl 0x558928df37b0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x558928df38d8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928df3790 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x558928df3770 <col:36> 'int' 7
| `-EnumConstantDecl 0x558928df3840 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x558928df38f0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558928df3820 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x558928df3800 <col:34> 'int' 6
|-CXXMethodDecl 0x558928df3ba8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x558928df3918 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x558928df39b8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x558928df3a38 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x558928df3ab0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x558928dfb330 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x558928dfb318 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x558928dfb300 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x558928dfb2e0 <col:98, col:105> 'String' (CXXTemporary 0x558928dfb2e0)
|           `-CXXTemporaryObjectExpr 0x558928dfb2a8 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x558928df3e48 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x558928df3c78 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x558928df3cf0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x558928df3d68 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x558928dfb3e0 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x558928dfb3c8 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x558928dfb3b0 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x558928dfb390 <col:94, col:101> 'String' (CXXTemporary 0x558928dfb390)
| |         `-CXXTemporaryObjectExpr 0x558928dfb358 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x558928dfbbd0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x558928dfbb48 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x558928dfbb18 <col:9> '<bound member function type>' ->add_task_handlers 0x558928df3ba8
|     | `-CXXThisExpr 0x558928dfbb08 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x558928dfbb88 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x558928dfba88 <col:27> 'Task *' lvalue ParmVar 0x558928df3c78 'task' 'Task *'
|     |-ImplicitCastExpr 0x558928dfbba0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x558928dfbaa8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x558928df3cf0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x558928dfbbb8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x558928dfbac8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x558928df3840 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x558928dfbae8 <col:62> 'const String' lvalue ParmVar 0x558928df3d68 'prefix' 'const String &'
|-CXXMethodDecl 0x558928df4058 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x558928df3f10 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x558928df3f88 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x558928dfb490 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x558928dfb478 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x558928dfb460 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x558928dfb440 <col:70, col:77> 'String' (CXXTemporary 0x558928dfb440)
| |         `-CXXTemporaryObjectExpr 0x558928dfb408 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x558928dfbda8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x558928dfbd20 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x558928dfbcf0 <col:9> '<bound member function type>' ->add_task_handlers 0x558928df3ba8
|     | `-CXXThisExpr 0x558928dfbce0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x558928dfbd60 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x558928dfbc60 <col:27> 'Task *' lvalue ParmVar 0x558928df3f10 'task' 'Task *'
|     |-ImplicitCastExpr 0x558928dfbd78 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x558928dfbc80 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x558928dfbd90 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x558928dfbca0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x558928df3840 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x558928dfbcc0 <col:57> 'const String' lvalue ParmVar 0x558928df3f88 'prefix' 'const String &'
|-CXXMethodDecl 0x558928df4338 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x558928df4120 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558928df41a0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558928df4218 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x558928df45e8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x558928df4408 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558928df4488 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558928df4508 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x558928df48d8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x558928df46b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558928df4738 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558928df47b0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x558928df4b88 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x558928df49a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558928df4a28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558928df4aa8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x558928df4e38 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x558928df4c58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558928df4cd8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558928df4d58 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x558928df50e8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x558928df4f08 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558928df4f88 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558928df5000 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x558928df5398 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x558928df51b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558928df5238 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558928df52b8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x558928df5648 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x558928df5468 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558928df54e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558928df5568 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x558928df58f8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x558928df5718 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558928df5798 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558928df5818 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x558928df5ba8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x558928df59c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558928df5a48 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558928df5ac8 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x558928df5e10 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x558928df5c78 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x558928df5cf8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x558928df5d70 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x558928df60b8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x558928df5ee0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x558928df5f60 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x558928df5fd8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x558928df6368 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x558928df6188 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558928df6208 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558928df6288 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x558928df6618 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x558928df6438 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558928df64b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558928df6530 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x558928df68c8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x558928df66e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558928df6768 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558928df67e0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x558928df6b78 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x558928df6998 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558928df6a18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x558928df6a90 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x558928df6ea8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x558928df6c48 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x558928df6cc8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x558928df6d40 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x558928df6db8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558928dfb4a8 <col:93> 'bool' false
|-CXXMethodDecl 0x558928df7090 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x558928df6f78 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x558928df6ff8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x558928df7268 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x558928df7150 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x558928df71d0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x558928df7548 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x558928df7328 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x558928df73a0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x558928df7420 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x558928df7498 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x558928df7838 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x558928df7618 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x558928df7690 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x558928df7710 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x558928df7788 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x558928df7a70 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x558928df7910 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x558928df7990 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x558928df7c58 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x558928df7b38 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x558928df7bb8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x558928df7d08 prev 0x558928def558 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558928df7e00 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x558928df7e90 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x558928df7f08 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x558928df7fc8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x558928df8090 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x558928df8208 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x558928df8140 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x558928df82b0 <col:24>
| | `-OptimizeNoneAttr 0x558928df8308 <col:34>
| |-CXXMethodDecl 0x558928df8350 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x558928df8608 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x558928df8400 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x558928df8478 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x558928df84f8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x558928df86c0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x558928df86f8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x558928df8760 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x558928df87e8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x558928df8b08 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x558928df88a0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x558928df8918 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x558928df8990 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x558928df8a10 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x558928df8c20 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x558928dff518 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x558928dff518
| | `-ParmVarDecl 0x558928dff628 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x558928dff6c8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x558928dff6c8
| | `-ParmVarDecl 0x558928dff7d8 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x558928c046e0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x558928df8c98 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x558928df8d38 <col:38> "" ""
|-CXXMethodDecl 0x558928df8dc8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x558928df8e68 <col:44> "" ""
|-AccessSpecDecl 0x558928df8ed8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x558928df8f00 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x558928df9000 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x558928df9050 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558928df8fe0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x558928df8fc0 <col:27> 'int' 4
|-FieldDecl 0x558928df9118 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x558928df92c8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x558928df9380 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x558928df93e0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x558928df9448 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x558928df9598 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x558928df94d8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x558928df9748 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x558928df9658 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x558928df9928 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x558928df9808 <col:20> col:23 'int'
| `-ParmVarDecl 0x558928df9888 <col:25> col:28 'int'
|-CXXMethodDecl 0x558928df9bd0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x558928df99f0 <col:23> col:26 'int'
| |-ParmVarDecl 0x558928df9a70 <col:28> col:31 'int'
| `-ParmVarDecl 0x558928df9ae8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x558928df9c88 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x558928df9d50 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x558928df9da0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x558928df9df0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x558928df9fd0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x558928df9e80 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x558928df9ef8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558928dfa278 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x558928dfa098 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x558928dfa118 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x558928dfa190 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x558928dfa498 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x558928dfa348 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x558928dfa3c8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x558928dfa7d0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x558928dfa558 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x558928dfa5d8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x558928dfa650 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x558928dfa6d0 <col:57> col:60 'int'
|-CXXMethodDecl 0x558928dfa9b8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x558928dfa8a0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x558928dfa920 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x558928dfab08 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x558928dfaa78 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x558928dfae88 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x558928dfabc8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x558928dfac48 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x558928dfacc0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x558928dfad40 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x558928dfaf68 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class TCPAck
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class Timer _timer
       112 |     int _schedpos1
       120 |     class Timestamp _expiry_s
       120 |       union Timestamp::rep_t _t
       120 |         int64_t x
       128 |     union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
       128 |       TimerCallback callback
       136 |     void * _thunk
       144 |     class Element * _owner
       152 |     class RouterThread * _thread
       160 |   _Bool _synack
       161 |   _Bool _needack
       164 |   unsigned int _ack_nxt
       168 |   class TCPBuffer * _tcpbuffer
       176 |   unsigned int _ackdelay_ms
           | [sizeof=184, dsize=180, align=8,
           |  nvsize=180, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928cf79a0 prev 0x558928ceddb0 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558928cf7a98 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x558928cf7b38 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x558928cfa798 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558928cfdb98 <col:11>
|-CXXConstructorDecl 0x558928cfa870 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x558928cfa958 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x558928cfe2e0 <col:11>
|-CXXConstructorDecl 0x558928cfa9f8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x558928cfdb28 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x558928cfff38 <col:11>
|-CXXDestructorDecl 0x558928cfee48 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x558928dc3268 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x558928dc3378 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x558928dc3c40 <col:11>
|   `-ReturnStmt 0x558928dc3c30 <col:11>
|     `-UnaryOperator 0x558928dc3c18 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558928dc3c08 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x558928dc33e8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x558928dc34f8 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x558928e36920 <col:11>
    `-ReturnStmt 0x558928e36910 <col:11>
      `-UnaryOperator 0x558928e368f8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x558928e368e8 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928cecf68 prev 0x558928ceccd0 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558928ced060 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x558928ced0f0 <col:19, col:25> col:19 public
|-TypedefDecl 0x558928ced128 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x55892892dba0 'int32_t' sugar
|   |-Typedef 0x55892883d328 'int32_t'
|   `-TypedefType 0x558928816510 '__int32_t' sugar
|     |-Typedef 0x558928816128 '__int32_t'
|     `-BuiltinType 0x5589287d4580 'int'
|-TypedefDecl 0x558928ced190 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x55892892dd60 'int64_t' sugar
|   |-Typedef 0x55892883d390 'int64_t'
|   `-TypedefType 0x558928816630 '__int64_t' sugar
|     |-Typedef 0x558928816208 '__int64_t'
|     `-BuiltinType 0x5589287d45a0 'long'
|-EnumDecl 0x558928ced1e8 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x558928ced360 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x558928ced340 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x558928ced318 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x558928ced300 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x558928ced2d0 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x558928ced458 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x558928ced438 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x558928ced410 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x558928ced3f8 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x558928ced3d0 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x558928ced3b0 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x558928ced4a8 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x558928ced5b0 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558928cedb00 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ced590 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x558928ced570 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x558928ced640 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558928cedb18 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ced620 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x558928ced600 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x558928ced6d0 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558928cedb30 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ced6b0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x558928ced690 <col:25> 'int' 1000
| |-EnumConstantDecl 0x558928ced760 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558928cedb48 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ced740 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x558928ced720 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x558928ced7f0 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558928cedb60 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ced7d0 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x558928ced7b0 <col:25> 'int' 1000
| |-EnumConstantDecl 0x558928ced880 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558928cedb78 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ced860 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x558928ced840 <col:24> 'int' 1000
| |-EnumConstantDecl 0x558928ced910 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558928cedb90 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ced8f0 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x558928ced8d0 <col:26> 'int' EnumConstant 0x558928ced5b0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x558928ced9e0 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x558928cedba8 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928ced9c0 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x558928ced9a0 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x558928ced960 <col:27> 'int' EnumConstant 0x558928ced910 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x558928ced980 <col:44> 'int' EnumConstant 0x558928ced880 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x558928cedab0 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x558928cedbc0 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558928ceda90 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x558928ceda70 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x558928ceda30 <col:27> 'int' EnumConstant 0x558928ced910 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x558928ceda50 <col:44> 'int' EnumConstant 0x558928ced760 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x558928cedbd8 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x558928cedce0 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x558928cedd30 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558928cedcc0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x558928cedca0 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928ced910 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x558928cedd58 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x55892892d7d0 'uninitialized_type'
|   `-CXXRecord 0x55892892d738 'uninitialized_type'
|-CXXRecordDecl 0x558928ceddb0 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x558928cede98 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x558928cf8ae8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558928cfdba8 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558928cfdcc8 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x558928cfdc80 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x558928cfdc10 <col:9> '<bound member function type>' ->assign 0x558928cf2458
|     | `-CXXThisExpr 0x558928cfdc00 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x558928cfdc40 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x558928cfdcb0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x558928cfdc60 <col:19> 'int' 0
|-CXXConstructorDecl 0x558928cee0e8 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x558928cedf58 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x558928cedfd0 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x558928cfa630 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x558928cfa610 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x558928cf8ae8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558928cfdce0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558928cfde30 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x558928cfddb8 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x558928cfdd48 <col:9> '<bound member function type>' ->assign 0x558928cf2458
|     | `-CXXThisExpr 0x558928cfdd38 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x558928cfde00 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x558928cfdde8 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x558928cfdd78 <col:16> 'long' lvalue ParmVar 0x558928cedf58 'sec' 'long'
|     `-ImplicitCastExpr 0x558928cfde18 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x558928cfdd98 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x558928cedfd0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x558928cee348 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x558928cee1b8 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x558928cee230 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x558928cfa668 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x558928cfa648 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x558928cf8ae8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558928cfde48 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558928cfdf80 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x558928cfdf20 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x558928cfdeb0 <col:9> '<bound member function type>' ->assign 0x558928cf2458
|     | `-CXXThisExpr 0x558928cfdea0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x558928cfdf50 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x558928cfdee0 <col:16> 'int' lvalue ParmVar 0x558928cee1b8 'sec' 'int'
|     `-ImplicitCastExpr 0x558928cfdf68 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x558928cfdf00 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x558928cee230 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x558928cee5a8 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x558928cee418 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x558928cee490 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x558928cfa6a0 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x558928cfa680 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x558928cf8ae8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558928cfdf98 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558928cfe0e8 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x558928cfe070 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x558928cfe000 <col:9> '<bound member function type>' ->assign 0x558928cf2458
|     | `-CXXThisExpr 0x558928cfdff0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x558928cfe0b8 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x558928cfe0a0 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x558928cfe030 <col:16> 'unsigned long' lvalue ParmVar 0x558928cee418 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x558928cfe0d0 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x558928cfe050 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x558928cee490 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x558928cee808 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x558928cee678 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x558928cee6f0 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x558928cfa6d8 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x558928cfa6b8 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x558928cf8ae8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558928cfe100 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558928cfe250 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x558928cfe1d8 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x558928cfe168 <col:9> '<bound member function type>' ->assign 0x558928cf2458
|     | `-CXXThisExpr 0x558928cfe158 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x558928cfe220 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x558928cfe208 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x558928cfe198 <col:16> 'unsigned int' lvalue ParmVar 0x558928cee678 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x558928cfe238 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x558928cfe1b8 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x558928cee6f0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x558928cee968 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x558928cee8d8 <col:31> col:37 'double'
|-CXXConstructorDecl 0x558928cef350 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x558928ceea40 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x558928cef578 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x558928cef480 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x558928cef728 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x558928cef668 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x558928cf8ae8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558928cfe2f0 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x558928cfe268 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x558928cef668 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x558928cfe350 <col:19, line:214:5>
|-CXXConstructorDecl 0x558928cef958 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x558928cef868 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x558928cf8ae8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558928cfe360 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x558928cfe410 <col:53, line:219:5>
|   `-CStyleCastExpr 0x558928cfe3e8 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x558928cfe3b8 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x558928cef868 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x558928cefb48 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x558928cefac0 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x558928b37010 'Timestamp'
|   | `-CXXRecord 0x558928cecf68 'Timestamp'
|   `-ParenType 0x558928cefa60 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x558928cefa30 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x558928ced2b0 'Timestamp::seconds_type' sugar
|         |-Typedef 0x558928ced128 'seconds_type'
|         `-TypedefType 0x55892892dba0 'int32_t' sugar
|           |-Typedef 0x55892883d328 'int32_t'
|           `-TypedefType 0x558928816510 '__int32_t' sugar
|             |-Typedef 0x558928816128 '__int32_t'
|             `-BuiltinType 0x5589287d4580 'int'
|-CXXConversionDecl 0x558928cefc88 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x558928cefd58 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x558928cfe518 <col:37, line:231:5>
|   `-ReturnStmt 0x558928cfe508 <line:227:9, col:23>
|     `-BinaryOperator 0x558928cfe4e8 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x558928cfe4b8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x558928cfe468 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x558928cf7b38
|       |   `-MemberExpr 0x558928cfe438 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x558928cf8ae8
|       |     `-CXXThisExpr 0x558928cfe428 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x558928cfe4d0 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x558928cfe498 <col:23> 'int' 0
|-CXXMethodDecl 0x558928cefe18 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x558928cefed8 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x558928ceff98 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x558928cf0058 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x558928cf0118 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x558928cf0288 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x558928cf01c8 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x558928cf03d0 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x558928cf0340 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558928cf0498 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x558928cf0538 <col:54> "" ""
|-CXXMethodDecl 0x558928cf05c8 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x558928cf0668 <col:54> "" ""
|-CXXMethodDecl 0x558928cf06f8 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x558928cf0798 <col:54> "" ""
|-CXXMethodDecl 0x558928cf0898 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x558928cf0968 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x558928cf0a98 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x558928cf0b90 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x558928cf0cc8 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x558928cfe730 <col:39, line:271:5>
|   `-ReturnStmt 0x558928cfe720 <line:267:9, col:61>
|     `-CallExpr 0x558928cfe6c0 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x558928cfe6a8 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558928cfe530 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x558928cf8e18 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x558928cfe6f0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x558928cfe590 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x558928cf7b38
|       |   `-MemberExpr 0x558928cfe560 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x558928cf8ae8
|       |     `-CXXThisExpr 0x558928cfe550 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x558928cfe708 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x558928cfe630 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x558928cfe600 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x558928cfe5c0 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928ced910 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x558928cfe618 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x558928cfe5e0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928ced880 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558928cf0d88 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x558928cfe8f0 <col:39, line:279:5>
|   `-ReturnStmt 0x558928cfe8e0 <line:275:9, col:61>
|     `-CallExpr 0x558928cfe880 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x558928cfe868 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558928cfe748 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x558928cf8e18 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x558928cfe8b0 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x558928cfe7a8 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x558928cf7b38
|       |   `-MemberExpr 0x558928cfe778 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x558928cf8ae8
|       |     `-CXXThisExpr 0x558928cfe768 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x558928cfe8c8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x558928cfe848 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x558928cfe818 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x558928cfe7d8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928ced910 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x558928cfe830 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x558928cfe7f8 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928ced760 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558928cf0e48 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x558928cfea88 <col:39, line:287:5>
|   `-ReturnStmt 0x558928cfea78 <line:283:9, col:53>
|     `-BinaryOperator 0x558928cfea58 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x558928cfea28 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x558928cfe948 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x558928cf7b38
|       |   `-MemberExpr 0x558928cfe918 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x558928cf8ae8
|       |     `-CXXThisExpr 0x558928cfe908 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x558928cfea40 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x558928cfea08 <col:23, col:53> 'int'
|           `-BinaryOperator 0x558928cfe9e8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x558928cfe9b8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x558928cfe978 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928ced5b0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x558928cfe9d0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x558928cfe998 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928ced910 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558928cf0f38 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x558928d00120 <col:40, line:293:5>
|   |-DeclStmt 0x558928cfebd0 <line:291:9, col:48>
|   | `-VarDecl 0x558928cfeab0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x558928cfebb0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x558928cfeb58 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x558928cfeb28 <col:22> '<bound member function type>' ->subsec 0x558928cefed8
|   |     |   `-CXXThisExpr 0x558928cfeb18 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x558928cfeb98 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x558928cfeb78 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928ced9e0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x558928d00110 <line:292:9, col:70>
|     `-ExprWithCleanups 0x558928d000f8 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x558928d000c8 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558928d000b0 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x558928d00090 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x558928d00060 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x558928cffdf8 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x558928cffde0 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x558928cfebe8 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x558928cfeab0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x558928d00000 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x558928cfffe8 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x558928cfffb8 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x558928cffe10 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x558928cffd80 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x558928cffd68 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x558928cffd18 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x558928ceceb8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x558928cffcb8 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x558928cfec18 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x558928cfec08 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x558928cffd00 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x558928cffce8 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x558928cff0d8 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x558928cfec40 <col:39> 'int' 0
|               |               `-BinaryOperator 0x558928cfecd0 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x558928cfeca0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x558928cfec60 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928ced9e0 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x558928cfecb8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x558928cfec80 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x558928cfeab0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x558928d00030 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x558928cffdc8 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x558928cffdb8 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x558928cf0ff8 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x558928d00678 <col:40, line:302:5>
|   |-DeclStmt 0x558928d00270 <line:297:9, col:48>
|   | `-VarDecl 0x558928d00150 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x558928d00250 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x558928d001f8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x558928d001c8 <col:22> '<bound member function type>' ->subsec 0x558928cefed8
|   |     |   `-CXXThisExpr 0x558928d001b8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x558928d00238 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x558928d00218 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928cedab0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x558928d00668 <line:298:9, col:70>
|     `-ExprWithCleanups 0x558928d00650 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x558928d00620 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558928d00608 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x558928d005e8 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x558928d005b8 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x558928d004e0 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x558928d004c8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x558928d00288 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x558928d00150 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x558928d00558 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x558928d00540 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x558928d00510 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x558928d004f8 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x558928d00468 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x558928d00450 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x558928d00430 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x558928ceceb8 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x558928d003d0 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x558928d002b8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x558928d002a8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x558928d00418 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x558928d00400 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x558928d00390 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x558928d002e0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x558928d00370 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x558928d00340 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x558928d00300 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928cedab0 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x558928d00358 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x558928d00320 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x558928d00150 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x558928d00588 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x558928d004b0 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x558928d004a0 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x558928cf10b8 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x558928d00700 <col:40, line:306:5>
|   `-ReturnStmt 0x558928d006f0 <line:305:9, col:17>
|     `-CXXConstructExpr 0x558928d006c0 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x558928d006a8 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558928d00698 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x558928cf1258 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x558928cf1168 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x558928cf1428 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x558928cf1330 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x558928cf1518 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x558928cf1688 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x558928cf15c8 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x558928d00848 <col:56, line:320:5>
|   `-ReturnStmt 0x558928d00838 <line:319:9, col:32>
|     `-ExprWithCleanups 0x558928d00820 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x558928d007f0 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558928d007d8 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x558928d00798 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x558928d00768 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x558928d00728 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x558928cf15c8 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x558928d00780 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x558928d00748 <col:31> 'int' 0
|-CXXMethodDecl 0x558928cf18c8 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x558928cf1740 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558928cf17b8 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558928d00a18 <col:72, line:326:5>
|   `-ReturnStmt 0x558928d00a08 <line:325:9, col:51>
|     `-ExprWithCleanups 0x558928d009f0 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x558928d009c0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558928d009a8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x558928d00968 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x558928d00950 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x558928d00870 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x558928cf1740 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x558928d00910 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x558928d008f8 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x558928d00890 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x558928cf7290 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x558928d00938 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x558928d008b0 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x558928cf17b8 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558928cf1a78 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x558928cf1988 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x558928d010e0 <col:56, line:337:5>
|   |-DeclStmt 0x558928d00d18 <line:329:9, col:51>
|   | `-VarDecl 0x558928d00a40 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x558928d00d00 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x558928d00cd0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x558928d00cb8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x558928d00ca0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x558928d00c70 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x558928d00c58 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x558928d00c40 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x558928d00b30 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x558928d00ed0 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x558928d00d80 <col:9, col:14> 'int64_t':'long' lvalue .x 0x558928cf7b38
|   | | `-MemberExpr 0x558928d00d50 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x558928cf8ae8
|   | |   `-DeclRefExpr 0x558928d00d30 <col:9> 'Timestamp' lvalue Var 0x558928d00a40 't' 'Timestamp'
|   | `-BinaryOperator 0x558928d00eb0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x558928d00e80 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558928d00db0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x558928cf1988 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x558928d00e98 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x558928d00e60 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x558928d00e40 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x558928d00e10 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x558928d00dd0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928ced910 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x558928d00e28 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x558928d00df0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928ced880 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x558928d010c8 <line:336:9, col:16>
|     `-CXXConstructExpr 0x558928d01098 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x558928d01080 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x558928d01060 <col:16> 'Timestamp' lvalue Var 0x558928d00a40 't' 'Timestamp'
|-CXXMethodDecl 0x558928cf1c40 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x558928cf1b30 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558928cf1ba8 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558928d01298 <col:72, line:343:5>
|   `-ReturnStmt 0x558928d01288 <line:342:9, col:51>
|     `-ExprWithCleanups 0x558928d01270 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x558928d01240 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558928d01228 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x558928d011e8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x558928d011d0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x558928d01118 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x558928cf1b30 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x558928d01190 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x558928d01178 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x558928d01138 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x558928cf73d8 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x558928d011b8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x558928d01158 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x558928cf1ba8 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558928cf1d90 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x558928cf1d00 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x558928d016e0 <col:56, line:354:5>
|   |-DeclStmt 0x558928d01488 <line:346:9, col:51>
|   | `-VarDecl 0x558928d012c0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x558928d01470 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x558928d01440 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x558928d01428 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x558928d01410 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x558928d013e0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x558928d013c8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x558928d013b0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x558928d01380 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x558928d01640 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x558928d014f0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x558928cf7b38
|   | | `-MemberExpr 0x558928d014c0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x558928cf8ae8
|   | |   `-DeclRefExpr 0x558928d014a0 <col:9> 'Timestamp' lvalue Var 0x558928d012c0 't' 'Timestamp'
|   | `-BinaryOperator 0x558928d01620 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x558928d015f0 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558928d01520 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x558928cf1d00 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x558928d01608 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x558928d015d0 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x558928d015b0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x558928d01580 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x558928d01540 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928ced910 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x558928d01598 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x558928d01560 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928ced760 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x558928d016c8 <line:353:9, col:16>
|     `-CXXConstructExpr 0x558928d01698 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x558928d01680 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x558928d01660 <col:16> 'Timestamp' lvalue Var 0x558928d012c0 't' 'Timestamp'
|-CXXMethodDecl 0x558928cf1f58 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x558928cf1e48 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558928cf1ec0 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558928d01898 <col:72, line:360:5>
|   `-ReturnStmt 0x558928d01888 <line:359:9, col:51>
|     `-ExprWithCleanups 0x558928d01870 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x558928d01840 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558928d01828 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x558928d017e8 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x558928d017d0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x558928d01718 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x558928cf1e48 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x558928d01790 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x558928d01778 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x558928d01738 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x558928cf7520 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x558928d017b8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x558928d01758 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x558928cf1ec0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558928cf20a8 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x558928cf2018 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x558928d0b1c8 <col:56, line:371:5>
|   |-DeclStmt 0x558928d01a88 <line:363:9, col:51>
|   | `-VarDecl 0x558928d018c0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x558928d01a70 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x558928d01a40 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x558928d01a28 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x558928d01a10 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x558928d019e0 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x558928d019c8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x558928d019b0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x558928d01980 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x558928d0b128 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x558928d0afb0 <col:9, col:14> 'int64_t':'long' lvalue .x 0x558928cf7b38
|   | | `-MemberExpr 0x558928d0af80 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x558928cf8ae8
|   | |   `-DeclRefExpr 0x558928d01aa0 <col:9> 'Timestamp' lvalue Var 0x558928d018c0 't' 'Timestamp'
|   | `-CallExpr 0x558928d0b0c8 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x558928d0b0b0 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x558928d0afe0 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x558928cf8e18 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x558928d0b0f8 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x558928d0b000 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x558928cf2018 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x558928d0b110 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x558928d0b090 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x558928d0b060 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x558928d0b020 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928ced5b0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x558928d0b078 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x558928d0b040 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928ced910 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x558928d0b1b0 <line:370:9, col:16>
|     `-CXXConstructExpr 0x558928d0b180 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x558928d0b168 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x558928d0b148 <col:16> 'Timestamp' lvalue Var 0x558928d018c0 't' 'Timestamp'
|-CXXMethodDecl 0x558928cf2198 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x558928d0b308 <col:39, line:377:5>
|   `-ReturnStmt 0x558928d0b2f8 <line:376:9, col:30>
|     `-ExprWithCleanups 0x558928d0b2e0 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x558928d0b2b0 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558928d0b298 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x558928d0b258 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x558928d0b200 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x558928d0b240 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x558928d0b220 <col:29> 'int' 1
|-CXXMethodDecl 0x558928cf2258 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x558928d0b3e8 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x558928d0b3a0 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x558928d0b330 <col:9> '<bound member function type>' ->assign 0x558928cf2458
|     | `-CXXThisExpr 0x558928d0b320 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x558928d0b360 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x558928d0b3d0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x558928d0b380 <col:19> 'int' 0
|-CXXMethodDecl 0x558928cf2458 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x558928cf2308 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558928cf2380 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x558928cfa710 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x558928cfa6f0 <col:60> 'int' 0
| `-CompoundStmt 0x558928d0b5e0 <col:63, line:395:5>
|   `-BinaryOperator 0x558928d0b5c0 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x558928d0b440 <col:9, col:12> 'int64_t':'long' lvalue .x 0x558928cf7b38
|     | `-MemberExpr 0x558928d0b410 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x558928cf8ae8
|     |   `-CXXThisExpr 0x558928d0b400 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x558928d0b5a0 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x558928d0b530 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x558928d0b4d0 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x558928d0b4b8 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x558928d0b4a0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x558928d0b470 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x558928cf2308 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x558928d0b518 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x558928d0b4f8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928ced910 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x558928d0b588 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x558928d0b570 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x558928d0b550 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x558928cf2380 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558928cf2628 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x558928cf2518 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558928cf2590 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558928d0b738 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x558928d0b6f0 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x558928d0b608 <col:9> '<bound member function type>' ->assign 0x558928cf2458
|     | `-CXXThisExpr 0x558928d0b5f8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x558928d0b720 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x558928d0b638 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x558928cf2518 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x558928d0b6b0 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x558928d0b698 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558928d0b658 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x558928cf73d8 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x558928d0b6d8 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x558928d0b678 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x558928cf2590 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558928cf27f8 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x558928cf26e8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558928cf2760 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558928d0b890 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x558928d0b848 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x558928d0b760 <col:9> '<bound member function type>' ->assign 0x558928cf2458
|     | `-CXXThisExpr 0x558928d0b750 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x558928d0b878 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x558928d0b790 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x558928cf26e8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x558928d0b808 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x558928d0b7f0 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558928d0b7b0 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x558928cf7520 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x558928d0b830 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x558928d0b7d0 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x558928cf2760 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558928cf29c8 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x558928cf28b8 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558928cf2930 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x558928cfa748 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x558928cfa728 <col:57> 'int' 0
| `-DeprecatedAttr 0x558928cf2a78 <col:75> "" ""
|-CXXMethodDecl 0x558928cf2c08 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x558928cf2af8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558928cf2b70 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558928cf2cb8 <col:74> "" ""
|-CXXMethodDecl 0x558928cf2e48 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x558928cf2d38 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x558928cf2db0 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558928cf2ef8 <col:74> "" ""
|-CXXMethodDecl 0x558928cf2f88 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x558928cf3028 <col:42> "" ""
|-CXXMethodDecl 0x558928cf31d0 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x558928cf30b0 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x558928cf3130 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x558928cf32a0 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x558928cf6ad0 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x558928cf6b70 <col:20>
| `-OptimizeNoneAttr 0x558928cf6bc8 <col:30>
|-CXXMethodDecl 0x558928cf6c10 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x558928cf6cd0 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x558928cf6d90 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x558928cf6e50 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x558928cf6f10 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x558928cf6fd0 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x558928cf7090 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x558928cf7150 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x558928cf7290 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x558928cf7200 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558928d0b9d8 <col:58, line:512:5>
|   `-ReturnStmt 0x558928d0b9c8 <line:511:9, col:53>
|     `-BinaryOperator 0x558928d0b9a8 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x558928d0b978 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x558928d0b8a8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x558928cf7200 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x558928d0b990 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x558928d0b958 <col:23, col:53> 'int'
|           `-BinaryOperator 0x558928d0b938 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x558928d0b908 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x558928d0b8c8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928ced910 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x558928d0b920 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x558928d0b8e8 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928ced880 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558928cf73d8 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x558928cf7348 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558928d0bb20 <col:58, line:516:5>
|   `-ReturnStmt 0x558928d0bb10 <line:515:9, col:53>
|     `-BinaryOperator 0x558928d0baf0 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x558928d0bac0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x558928d0b9f0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x558928cf7348 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x558928d0bad8 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x558928d0baa0 <col:23, col:53> 'int'
|           `-BinaryOperator 0x558928d0ba80 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x558928d0ba50 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x558928d0ba10 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928ced910 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x558928d0ba68 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x558928d0ba30 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928ced760 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558928cf7520 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x558928cf7490 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558928d0bc68 <col:58, line:520:5>
|   `-ReturnStmt 0x558928d0bc58 <line:519:9, col:53>
|     `-BinaryOperator 0x558928d0bc38 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x558928d0bc08 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x558928d0bb38 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x558928cf7490 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x558928d0bc20 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x558928d0bbe8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x558928d0bbc8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x558928d0bb98 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x558928d0bb58 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928ced5b0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x558928d0bbb0 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x558928d0bb78 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928ced910 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558928cf7668 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x558928cf75d8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558928d0bdb0 <col:60, line:524:5>
|   `-ReturnStmt 0x558928d0bda0 <line:523:9, col:55>
|     `-BinaryOperator 0x558928d0bd80 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x558928d0bd50 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x558928d0bc80 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x558928cf75d8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x558928d0bd68 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x558928d0bd30 <col:25, col:55> 'int'
|           `-BinaryOperator 0x558928d0bd10 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x558928d0bce0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x558928d0bca0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928ced910 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x558928d0bcf8 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x558928d0bcc0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928ced880 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558928cf77b0 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x558928cf7720 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558928d0bef8 <col:60, line:528:5>
|   `-ReturnStmt 0x558928d0bee8 <line:527:9, col:55>
|     `-BinaryOperator 0x558928d0bec8 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x558928d0be98 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x558928d0bdc8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x558928cf7720 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x558928d0beb0 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x558928d0be78 <col:25, col:55> 'int'
|           `-BinaryOperator 0x558928d0be58 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x558928d0be28 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x558928d0bde8 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928ced910 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x558928d0be40 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x558928d0be08 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928ced760 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x558928cf78f8 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x558928cf7868 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558928d0c040 <col:60, line:532:5>
|   `-ReturnStmt 0x558928d0c030 <line:531:9, col:55>
|     `-BinaryOperator 0x558928d0c010 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x558928d0bfe0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x558928d0bf10 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x558928cf7868 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x558928d0bff8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x558928d0bfc0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x558928d0bfa0 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x558928d0bf70 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x558928d0bf30 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928ced5b0 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x558928d0bf88 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x558928d0bf50 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x558928ced910 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x558928cf79a0 prev 0x558928ceddb0 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558928cf7a98 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x558928cf7b38 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x558928cfa798 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x558928cfdb98 <col:11>
| |-CXXConstructorDecl 0x558928cfa870 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x558928cfa958 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x558928cfe2e0 <col:11>
| |-CXXConstructorDecl 0x558928cfa9f8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x558928cfdb28 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x558928cfff38 <col:11>
| |-CXXDestructorDecl 0x558928cfee48 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x558928dc3268 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x558928dc3378 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x558928dc3c40 <col:11>
| |   `-ReturnStmt 0x558928dc3c30 <col:11>
| |     `-UnaryOperator 0x558928dc3c18 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x558928dc3c08 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x558928dc33e8 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x558928dc34f8 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x558928e36920 <col:11>
|     `-ReturnStmt 0x558928e36910 <col:11>
|       `-UnaryOperator 0x558928e368f8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558928e368e8 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x558928cf7ba0 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x558928cf7ca0 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x558928cf7ea0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928cf7c80 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x558928cf7c60 <col:21> 'int' 0
| |-EnumConstantDecl 0x558928cf7d30 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x558928cf7eb8 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928cf7d10 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x558928cf7cf0 <col:23> 'int' 1
| |-EnumConstantDecl 0x558928cf7dc0 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x558928cf7ed0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928cf7da0 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x558928cf7d80 <col:23> 'int' 2
| `-EnumConstantDecl 0x558928cf7e50 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x558928cf7ee8 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558928cf7e30 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x558928cf7e10 <col:27> 'int' 3
|-CXXMethodDecl 0x558928cf7f28 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x558928cf7ff0 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x558928cf81f8 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x558928cf80a0 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x558928cf8120 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x558928cfa760 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x558928cf8408 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x558928cf82b8 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x558928cf8330 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x558928cf84d8 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x558928cf8598 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x558928cf8708 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x558928cf8648 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x558928cf87d0 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x558928cf8890 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x558928cf8950 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x558928cf8a10 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x558928cf8ab0 <line:670:3, col:10> col:3 private
|-FieldDecl 0x558928cf8ae8 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x558928cf8b58 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x558928d0c058 <col:27, line:684:5>
|-CXXMethodDecl 0x558928cf8c18 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x558928d0c068 <col:27, line:696:5>
|-CXXMethodDecl 0x558928cf8e18 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x558928cf8cc8 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x558928cf8d40 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558928d0c1f0 <col:66, line:700:5>
|   `-ReturnStmt 0x558928d0c1e0 <line:699:9, col:31>
|     `-CallExpr 0x558928d0c180 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x558928d0c168 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558928d0c118 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x558928b7c1e8 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x558928d0c1b0 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x558928d0c0d8 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x558928cf8cc8 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x558928d0c1c8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x558928d0c0f8 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x558928cf8d40 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558928cf9188 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x558928cf8ed8 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x558928cf8f50 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x558928cf8fc8 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x558928cf9040 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558928d0c540 <col:64, line:707:5>
|   |-DeclStmt 0x558928d0c280 <line:704:9, col:24>
|   | `-VarDecl 0x558928d0c218 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x558928d0c490 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x558928d0c298 <col:9> 'int32_t':'int' lvalue ParmVar 0x558928cf8f50 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x558928d0c478 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x558928d0c410 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x558928d0c3f8 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558928d0c378 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x558928b814c8 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x558928d0c448 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x558928d0c318 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x558928cf8fc8 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x558928d0c460 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x558928d0c338 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x558928cf9040 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x558928d0c358 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x558928d0c218 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x558928d0c520 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x558928d0c4b0 <col:9> 'int32_t':'int' lvalue ParmVar 0x558928cf8ed8 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x558928d0c508 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x558928d0c4f0 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x558928d0c4d0 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x558928d0c218 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x558928cf9428 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x558928cf9258 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x558928cf92d0 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x558928cf9348 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x558928cf96c8 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x558928cf94f0 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x558928cf9568 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x558928cf95e0 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x558928cf9858 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x558928cf9790 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x558928cf9a58 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x558928cf9910 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x558928cf9988 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x558928cf9d28 <line:717:5, col:73> col:24
| `-FunctionDecl 0x558928cf9c68 parent 0x5589287d4488 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x558928cf9b18 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x558928cf9b90 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x558928cf9f48 <line:718:5, col:72> col:24
| `-FunctionDecl 0x558928cf9e88 parent 0x5589287d4488 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x558928cf9d78 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x558928cf9df0 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x558928cfa110 <line:719:5, col:57> col:29
| `-FunctionDecl 0x558928cfa058 parent 0x5589287d4488 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x558928cf9f98 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x558928cfa398 <line:720:5, col:73> col:30
| `-FunctionDecl 0x558928cfa2d8 parent 0x5589287d4488 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x558928cfa188 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x558928cfa200 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x558928cfa5b8 <line:721:5, col:73> col:30
| `-FunctionDecl 0x558928cfa4f8 parent 0x5589287d4488 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x558928cfa3e8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x558928cfa460 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x558928cfecf0 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x558928cfedd8 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x558928cf8ae8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558928cffc48 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x558928cffc00 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x558928cf8ae8
| |     `-DeclRefExpr 0x558928cffbe0 <col:7> 'const Timestamp' lvalue ParmVar 0x558928cfedd8 '' 'const Timestamp &'
| `-CompoundStmt 0x558928cffca8 <col:7>
|-CXXConstructorDecl 0x558928cfef58 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x558928cff068 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x558928cf8ae8 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x558928cfff48 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x558928cffef0 <col:7> 'Timestamp::rep_t' xvalue ._t 0x558928cf8ae8
| |     `-CXXStaticCastExpr 0x558928cffec0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x558928cffe90 <col:7> 'Timestamp' lvalue ParmVar 0x558928cff068 '' 'Timestamp &&'
| `-CompoundStmt 0x558928cfffa8 <col:7>
|-CXXDestructorDecl 0x558928cff118 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x558928dc30c0 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x558928dc31c8 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x558928dc3cb8 <col:7>
|   |-CXXMemberCallExpr 0x558928dc3c58 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x558928dc3b98 <col:7> '<bound member function type>' .operator= 0x558928dc3268
|   | | `-MemberExpr 0x558928dc3aa8 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x558928cf8ae8
|   | |   `-CXXThisExpr 0x558928dc3a98 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x558928dc3b68 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x558928cf8ae8
|   |   `-DeclRefExpr 0x558928dc3b48 <col:7> 'const Timestamp' lvalue ParmVar 0x558928dc31c8 '' 'const Timestamp &'
|   `-ReturnStmt 0x558928dc3ca8 <col:7>
|     `-UnaryOperator 0x558928dc3c90 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558928dc3c80 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x558928dc3568 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x558928dc3678 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x558928e36998 <col:7>
    |-CXXMemberCallExpr 0x558928e36938 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x558928e368a0 <col:7> '<bound member function type>' .operator= 0x558928dc33e8
    | | `-MemberExpr 0x558928e36770 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x558928cf8ae8
    | |   `-CXXThisExpr 0x558928e36760 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x558928e36870 <col:7> 'Timestamp::rep_t' xvalue ._t 0x558928cf8ae8
    |   `-CXXStaticCastExpr 0x558928e36840 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x558928e36810 <col:7> 'Timestamp' lvalue ParmVar 0x558928dc3678 '' 'Timestamp &&'
    `-ReturnStmt 0x558928e36988 <col:7>
      `-UnaryOperator 0x558928e36970 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x558928e36960 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928e33978 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x558928e33aa8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x558928e34598 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.13 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928e38620 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558928e38738 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x558928e38808 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x558928e38868 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x558928e388d0 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x558928e38958 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x558928e38bc0 <col:16, line:46:5>
|   |-BinaryOperator 0x558928e38b08 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x558928e38a28 <col:9> 'TaskLink *' lvalue ->_prev 0x558928e38808
|   | | `-CXXThisExpr 0x558928e38a18 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x558928e38af0 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x558928e38ad0 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x558928e38a68 <col:17> 'TaskLink *' lvalue ->_next 0x558928e38868
|   |     | `-CXXThisExpr 0x558928e38a58 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x558928e38ab8 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x558928e38a98 <col:25> 'int' 0
|   `-BinaryOperator 0x558928e38ba0 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x558928e38b38 <col:9> 'unsigned int' lvalue ->_pass 0x558928e388d0
|     | `-CXXThisExpr 0x558928e38b28 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x558928e38b88 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x558928e38b68 <col:17> 'int' 0
|-CXXConstructorDecl 0x558928ea2498 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x558928ea2498
| `-ParmVarDecl 0x558928ea25a8 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x558928ea2648 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x558928ea2648
| `-ParmVarDecl 0x558928ea2758 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x558928ea2948 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x558928ea2948
|-CXXMethodDecl 0x558928ea3148 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x558928ea3148
| `-ParmVarDecl 0x558928ea3258 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x558928ea32c8 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x558928ea32c8
  `-ParmVarDecl 0x558928ea33d8 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558928e44de8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x558928e44ff8 prev 0x558928e44de8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x558928e46200 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x558928e461b0 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x558928e46190 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x558928e46040 'type'
|     `-SubstTemplateTypeParmType 0x558928e45e60 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x5589289f1e70 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5589289f1e18 'T'
|       `-RecordType 0x558928e459b0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x558928e458c8 'sized_array_memory'
|-FieldDecl 0x558928e53ea0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x558928e53ef0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x558928e53f28 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x558928e45090 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x558928ad5a98 'T'
|   `-RecordType 0x558928e43ff0 'TimerSet::heap_element'
|     `-CXXRecord 0x558928e43f60 'heap_element'
|-TypedefDecl 0x558928e53fe8 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x558928e53fb0 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x558928e45090 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-RecordType 0x558928e43ff0 'TimerSet::heap_element'
|       `-CXXRecord 0x558928e43f60 'heap_element'
|-TypedefDecl 0x558928e54078 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x558928e54040 'const TimerSet::heap_element &'
|   `-QualType 0x558928e45091 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x558928e45090 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-RecordType 0x558928e43ff0 'TimerSet::heap_element'
|         `-CXXRecord 0x558928e43f60 'heap_element'
|-TypedefDecl 0x558928e54108 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x558928e540d0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x558928e45090 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-RecordType 0x558928e43ff0 'TimerSet::heap_element'
|       `-CXXRecord 0x558928e43f60 'heap_element'
|-TypedefDecl 0x558928e541c8 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x558928e54190 'const TimerSet::heap_element *'
|   `-QualType 0x558928e45091 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x558928e45090 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-RecordType 0x558928e43ff0 'TimerSet::heap_element'
|         `-CXXRecord 0x558928e43f60 'heap_element'
|-TypedefDecl 0x558928e54e20 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x558928e54dd0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x558928e54db0 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x558928e54ce8 'type'
|     `-LValueReferenceType 0x558928e54cb0 'const TimerSet::heap_element &'
|       `-QualType 0x558928e54a51 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x558928e54a50 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x5589289fa920 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5589289fa8c8 'T'
|           `-RecordType 0x558928e43ff0 'TimerSet::heap_element'
|             `-CXXRecord 0x558928e43f60 'heap_element'
|-TypedefDecl 0x558928e54e88 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x558928e54040 'const TimerSet::heap_element &'
|   `-QualType 0x558928e45091 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x558928e45090 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-RecordType 0x558928e43ff0 'TimerSet::heap_element'
|         `-CXXRecord 0x558928e43f60 'heap_element'
|-TypedefDecl 0x558928e54ee0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5589287d4580 'int'
|-TypedefDecl 0x558928e54f48 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x558928e540d0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x558928e45090 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-RecordType 0x558928e43ff0 'TimerSet::heap_element'
|       `-CXXRecord 0x558928e43f60 'heap_element'
|-TypedefDecl 0x558928e54fb0 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x558928e54190 'const TimerSet::heap_element *'
|   `-QualType 0x558928e45091 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x558928e45090 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-RecordType 0x558928e43ff0 'TimerSet::heap_element'
|         `-CXXRecord 0x558928e43f60 'heap_element'
|-EnumDecl 0x558928e55008 <line:134:5> col:5
| `-EnumConstantDecl 0x558928e55100 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x558928e550e0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x558928ad74d8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x558928ad74b0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x558928ad7490 <col:40> 'int' 1
|-CXXConstructorDecl 0x558928e55188 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x558928e55418 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x558928e55240 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928e552e0 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x558928e556d8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x558928e555c0 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x558928e55998 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x558928e55880 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x558928e55ce0 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x558928e55bc0 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x558928e55ff0 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x558928e55ed0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x558928e562e0 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x558928e56128 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928e561a0 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x558928e56438 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x558928e56518 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e56570 <col:30> Inherited
|-CXXMethodDecl 0x558928e565b8 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x558928e56668 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e566c0 <col:30> Inherited
|-CXXMethodDecl 0x558928e56788 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x558928e56838 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e56890 <col:30> Inherited
|-CXXMethodDecl 0x558928e568d8 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x558928e56988 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e569e0 <col:30> Inherited
|-CXXMethodDecl 0x558928e56a28 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x558928e56ad8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e56b30 <col:30> Inherited
|-CXXMethodDecl 0x558928e56b78 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x558928e56c28 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e56c80 <col:30> Inherited
|-CXXMethodDecl 0x558928e56ca8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558928e56d58 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558928e56e08 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x558928e56fc8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x558928e56eb8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928e56f30 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x558928e57118 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x558928e57088 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928e572c8 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x558928e571d0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558928e57380 <col:20>
| `-OptimizeNoneAttr 0x558928e573d8 <col:30>
|-CXXMethodDecl 0x558928e574f8 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x558928e57400 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558928e575b0 <col:20>
| `-OptimizeNoneAttr 0x558928e57608 <col:30>
|-CXXMethodDecl 0x558928e576c0 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x558928e57630 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928e57808 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558928e57778 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928e57938 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x558928e57a68 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x558928e57b38 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x558928e57c08 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x558928e57d48 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x558928e57cb8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928e57e90 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558928e57e00 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928e57fd8 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x558928e57f48 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558928e58090 <col:48> Inherited "" ""
|-CXXMethodDecl 0x558928e58190 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x558928e58100 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558928e58248 <col:60> Inherited "" ""
|-CXXMethodDecl 0x558928e58308 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x558928e58408 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x558928e585b8 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x558928e584c8 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x558928e58d78 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x558928e58670 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x558928e58cd8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x558928e58bd8 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x558928e58e58 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558928e58fa8 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x558928e58f18 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x558928e59060 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x558928e592a8 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x558928e59120 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x558928e59198 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x558928e59468 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x558928e59378 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x558928e596b8 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x558928e59530 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x558928e595a8 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x558928e59778 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x558928e599d8 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x558928e598e0 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x558928e59aa8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x558928e59aa8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.14 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.14 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558928e59c20 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x558928e59e28 prev 0x558928e59c20 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x558928e5ae40 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x558928e5adf0 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x558928e5add0 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x558928e5ac80 'type'
|     `-SubstTemplateTypeParmType 0x558928e153f0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x5589289f1e70 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5589289f1e18 'T'
|       `-RecordType 0x558928e14f40 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x558928e14e58 'sized_array_memory'
|-FieldDecl 0x558928e5af40 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x558928e5af90 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x558928e5afc8 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x558928e59ec0 'Timer *' sugar
|   |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x558928ad5a98 'T'
|   `-PointerType 0x558928debb00 'Timer *'
|     `-RecordType 0x558928deac70 'Timer'
|       `-CXXRecord 0x558928e2da28 'Timer'
|-TypedefDecl 0x558928e5b088 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x558928e5b050 'Timer *&'
|   `-SubstTemplateTypeParmType 0x558928e59ec0 'Timer *' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-PointerType 0x558928debb00 'Timer *'
|       `-RecordType 0x558928deac70 'Timer'
|         `-CXXRecord 0x558928e2da28 'Timer'
|-TypedefDecl 0x558928e5b148 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x558928e5b110 'Timer *const &'
|   `-QualType 0x558928e59ec1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x558928e59ec0 'Timer *' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-PointerType 0x558928debb00 'Timer *'
|         `-RecordType 0x558928deac70 'Timer'
|           `-CXXRecord 0x558928e2da28 'Timer'
|-TypedefDecl 0x558928e5b208 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x558928e5b1d0 'Timer **'
|   `-SubstTemplateTypeParmType 0x558928e59ec0 'Timer *' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-PointerType 0x558928debb00 'Timer *'
|       `-RecordType 0x558928deac70 'Timer'
|         `-CXXRecord 0x558928e2da28 'Timer'
|-TypedefDecl 0x558928e5b2c8 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x558928e5b290 'Timer *const *'
|   `-QualType 0x558928e59ec1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x558928e59ec0 'Timer *' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-PointerType 0x558928debb00 'Timer *'
|         `-RecordType 0x558928deac70 'Timer'
|           `-CXXRecord 0x558928e2da28 'Timer'
|-TypedefDecl 0x558928e5bea0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x558928e5be50 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x558928e5be30 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x558928e5bdc0 'type'
|     `-SubstTemplateTypeParmType 0x558928e5bb80 'Timer *' sugar
|       |-TemplateTypeParmType 0x5589289fc260 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5589289fc210 'T'
|       `-PointerType 0x558928debb00 'Timer *'
|         `-RecordType 0x558928deac70 'Timer'
|           `-CXXRecord 0x558928e2da28 'Timer'
|-TypedefDecl 0x558928e5bf08 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x558928e5b110 'Timer *const &'
|   `-QualType 0x558928e59ec1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x558928e59ec0 'Timer *' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-PointerType 0x558928debb00 'Timer *'
|         `-RecordType 0x558928deac70 'Timer'
|           `-CXXRecord 0x558928e2da28 'Timer'
|-TypedefDecl 0x558928e5bf60 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5589287d4580 'int'
|-TypedefDecl 0x558928e5bfc8 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x558928e5b1d0 'Timer **'
|   `-SubstTemplateTypeParmType 0x558928e59ec0 'Timer *' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-PointerType 0x558928debb00 'Timer *'
|       `-RecordType 0x558928deac70 'Timer'
|         `-CXXRecord 0x558928e2da28 'Timer'
|-TypedefDecl 0x558928e5c030 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x558928e5b290 'Timer *const *'
|   `-QualType 0x558928e59ec1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x558928e59ec0 'Timer *' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-PointerType 0x558928debb00 'Timer *'
|         `-RecordType 0x558928deac70 'Timer'
|           `-CXXRecord 0x558928e2da28 'Timer'
|-EnumDecl 0x558928e5c088 <line:134:5> col:5
| `-EnumConstantDecl 0x558928e5c180 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x558928e5c160 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x558928ad74d8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x558928ad74b0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x558928ad7490 <col:40> 'int' 1
|-CXXConstructorDecl 0x558928e5c208 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x558928e5c498 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x558928e5c2c0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928e5c360 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x558928e5c758 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x558928e5c640 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x558928e5ca18 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x558928e5c900 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x558928e5cd60 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x558928e5cc40 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x558928e5d070 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x558928e5cf50 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x558928e5d360 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x558928e5d1a8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928e5d220 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x558928e5d4b8 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x558928e5d598 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e5d5f0 <col:30> Inherited
|-CXXMethodDecl 0x558928e5d638 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x558928e5d6e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e5d740 <col:30> Inherited
|-CXXMethodDecl 0x558928e5d808 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x558928e5d8b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e5d910 <col:30> Inherited
|-CXXMethodDecl 0x558928e5d958 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x558928e5da08 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e5da60 <col:30> Inherited
|-CXXMethodDecl 0x558928e5daa8 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x558928e5db58 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e5dbb0 <col:30> Inherited
|-CXXMethodDecl 0x558928e5dbf8 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x558928e5dca8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e5dd00 <col:30> Inherited
|-CXXMethodDecl 0x558928e5dd28 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558928e5ddd8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558928e5de88 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x558928e5e048 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x558928e5df38 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928e5dfb0 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x558928e5e198 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x558928e5e108 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928e5e348 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x558928e5e250 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558928e5e400 <col:20>
| `-OptimizeNoneAttr 0x558928e5e458 <col:30>
|-CXXMethodDecl 0x558928e5e578 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x558928e5e480 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558928e5e630 <col:20>
| `-OptimizeNoneAttr 0x558928e5e688 <col:30>
|-CXXMethodDecl 0x558928e5e740 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x558928e5e6b0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928e5e888 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558928e5e7f8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928e5e9b8 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x558928e5eae8 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x558928e5ebb8 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x558928e5ec88 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x558928e5edc8 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x558928e5ed38 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928e5ef10 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558928e5ee80 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928e5f058 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x558928e5efc8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558928e5f110 <col:48> Inherited "" ""
|-CXXMethodDecl 0x558928e5f210 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x558928e5f180 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558928e5f2c8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x558928e5f388 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x558928e5f488 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x558928e5f608 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x558928e5f548 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x558928e5fdc8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x558928e5f6c0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x558928e5fd28 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x558928e5fc28 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x558928e5fea8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558928e5fff8 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x558928e5ff68 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x558928e600b0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x558928e602f8 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x558928e60170 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x558928e601e8 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x558928e604b8 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x558928e603c8 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x558928e60708 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x558928e60580 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x558928e605f8 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x558928e607c8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x558928e60a28 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x558928e60930 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x558928e60af8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x558928e60af8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.15 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.15 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928e2a460 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558928e2a578 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x558928e2a608 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x558928e2a690 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x558928e2a780 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x558928e2a880 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x558928e2a940 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x558928e2aa00 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x558928e2ab28 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x558928e2ab28
| `-ParmVarDecl 0x558928e2ac38 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x558928e618a8 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x558928e618a8
  `-ParmVarDecl 0x558928e619b8 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928e430e0 prev 0x558928e34428 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x558928e431d8 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x558928e43268 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x558928e432f0 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x558928e433e8 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x558928e61d30 <col:43, col:67>
|   `-ReturnStmt 0x558928e61d20 <col:45, col:52>
|     `-CXXConstructExpr 0x558928e61cf0 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x558928e61cc0 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x558928e44bd0
|         `-CXXThisExpr 0x558928e61cb0 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x558928e434a8 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x558928e436b0 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x558928e43558 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x558928e435d0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x558928e437a8 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x558928e43870 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x558928e61db0 <col:39, col:67>
|   `-ReturnStmt 0x558928e61da0 <col:41, col:48>
|     `-ImplicitCastExpr 0x558928e61d88 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x558928e61d58 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x558928e44cb8
|         `-CXXThisExpr 0x558928e61d48 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x558928e43938 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x558928e61e30 <col:35, col:59>
|   `-ReturnStmt 0x558928e61e20 <col:37, col:44>
|     `-ImplicitCastExpr 0x558928e61e08 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x558928e61dd8 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x558928e44d20
|         `-CXXThisExpr 0x558928e61dc8 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x558928e43a80 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x558928e439f0 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x558928e43bc8 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x558928e43b38 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x558928e43dc8 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x558928e43c80 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x558928e43cf8 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x558928e43e98 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x558928e43f38 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x558928e43f60 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x558928e44078 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x558928e44118 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x558928e44178 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x558928e442a8 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x558928e441d8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x558928e44118 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x558928e61f08 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x558928e61eb0 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x558928e61e80 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x558928e2f068
|   |       `-ImplicitCastExpr 0x558928e61ed0 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x558928e61e68 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x558928e61e48 <col:17> 'Timer *' lvalue ParmVar 0x558928e441d8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x558928e44178 't' 'Timer *'
|   | `-ImplicitCastExpr 0x558928e61fa0 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x558928e61f60 <col:41> 'Timer *' lvalue ParmVar 0x558928e441d8 't_' 'Timer *'
|   `-CompoundStmt 0x558928e61ff0 <col:45, line:44:2>
|-CXXRecordDecl 0x558928e44370 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x558928e44488 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x558928e446d8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x558928e44558 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x558928e445d0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x558928e62120 <col:71, line:49:2>
|     `-ReturnStmt 0x558928e62110 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x558928e620d8 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x558928e620c0 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x558928e620a0 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x558928b74d88 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x558928e62020 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x558928e44118
|         | `-DeclRefExpr 0x558928e62000 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x558928e44558 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x558928e62070 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x558928e44118
|           `-DeclRefExpr 0x558928e62050 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x558928e445d0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x558928e447a0 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x558928e448b8 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x558928e44ad8 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x558928e44958 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x558928e449d0 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x558928e62328 <col:63, line:54:2>
|     `-BinaryOperator 0x558928e62308 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x558928e621b8 <col:6, col:12> 'int' lvalue ->_schedpos1 0x558928e338c8
|       | `-ImplicitCastExpr 0x558928e621a0 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x558928e62170 <col:6, col:9> 'Timer *' lvalue ->t 0x558928e44178
|       |     `-ImplicitCastExpr 0x558928e62158 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x558928e62138 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x558928e449d0 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x558928e622f0 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x558928e622d0 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x558928e62278 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x558928e62258 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x558928e62228 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x558928e621e8 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x558928e449d0 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x558928e62240 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x558928e62208 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x558928e44958 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x558928e622b8 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x558928e62298 <col:39> 'int' 1
|-FieldDecl 0x558928e44bd0 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x558928e44c40 <col:44, col:53> aligned
|   `-ConstantExpr 0x558928e44c20 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x558928e44ba0 <col:52> 'int' 8
|-FieldDecl 0x558928e44cb8 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x558928e44d20 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x558928e44d88 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x558928e59bc0 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x558928e60be0 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x558928e60c40 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x558928e60ca0 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x558928e60d00 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558928e60df0 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x558928e60d60 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x558928e60eb8 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x558928e62780 <col:29, line:81:5>
|   `-IfStmt 0x558928e62758 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x558928e62410 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x558928e623b0 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x558928e62380 <col:6, col:18> '<bound member function type>' .size 0x558928e56ca8
|     |     `-ImplicitCastExpr 0x558928e623f8 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x558928e62350 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x558928e59bc0
|     |         `-CXXThisExpr 0x558928e62340 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x558928e62600 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x558928e625e8 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x558928e625c8 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x558928dc30c0 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x558928e62438 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x558928e44bd0
|     | | `-CXXThisExpr 0x558928e62428 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x558928e625b0 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x558928e62580 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x558928e44118
|     |     `-CXXMemberCallExpr 0x558928e62558 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x558928e62528 <col:22, col:34> '<bound member function type>' .unchecked_at 0x558928e57d48
|     |       | `-MemberExpr 0x558928e62478 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x558928e59bc0
|     |       |   `-CXXThisExpr 0x558928e62468 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x558928e62508 <col:47> 'int' 0
|     `-ExprWithCleanups 0x558928e62740 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x558928e62708 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x558928e626f0 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x558928e626d0 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x558928dc3568 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x558928e62648 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x558928e44bd0
|         | `-CXXThisExpr 0x558928e62638 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x558928e626b8 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x558928e62688 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x558928e60ff8 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x558928e60f68 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x558928e610c0 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x558928e61180 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x558928e61240 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x558928e61330 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x558928e61398 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x558928e61398
| `-ParmVarDecl 0x558928e614a8 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x558928e61548 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x558928e61548
| `-ParmVarDecl 0x558928e61658 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x558928e616f8 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x558928e616f8
| `-ParmVarDecl 0x558928e61808 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x558928e61a28 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x558928e61a28
| `-ParmVarDecl 0x558928e61b38 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x558928e61bd0 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x558928e61bd0

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.14, %class.Vector.15, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.14, %class.Vector.15, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558928e8b278 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x558928e8b488 prev 0x558928e8b278 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x558928e8c560 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x558928e8c510 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x558928e8c4f0 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x558928e8c3a0 'type'
|     `-SubstTemplateTypeParmType 0x558928e153f0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x5589289f1e70 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5589289f1e18 'T'
|       `-RecordType 0x558928e14f40 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x558928e14e58 'sized_array_memory'
|-FieldDecl 0x558928e8c660 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x558928e8c6b0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x558928e8c6e8 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x558928e8b520 'pollfd' sugar
|   |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x558928ad5a98 'T'
|   `-RecordType 0x558928e89330 'pollfd'
|     `-CXXRecord 0x558928e892a0 'pollfd'
|-TypedefDecl 0x558928e8c7a8 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x558928e8c770 'pollfd &'
|   `-SubstTemplateTypeParmType 0x558928e8b520 'pollfd' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-RecordType 0x558928e89330 'pollfd'
|       `-CXXRecord 0x558928e892a0 'pollfd'
|-TypedefDecl 0x558928e8c868 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x558928e8c830 'const pollfd &'
|   `-QualType 0x558928e8b521 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x558928e8b520 'pollfd' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-RecordType 0x558928e89330 'pollfd'
|         `-CXXRecord 0x558928e892a0 'pollfd'
|-TypedefDecl 0x558928e8c8f8 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x558928e8c8c0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x558928e8b520 'pollfd' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-RecordType 0x558928e89330 'pollfd'
|       `-CXXRecord 0x558928e892a0 'pollfd'
|-TypedefDecl 0x558928e8c9b8 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x558928e8c980 'const pollfd *'
|   `-QualType 0x558928e8b521 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x558928e8b520 'pollfd' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-RecordType 0x558928e89330 'pollfd'
|         `-CXXRecord 0x558928e892a0 'pollfd'
|-TypedefDecl 0x558928e8d590 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x558928e8d540 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x558928e8d520 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x558928e8d4b0 'type'
|     `-SubstTemplateTypeParmType 0x558928e8d270 'pollfd' sugar
|       |-TemplateTypeParmType 0x5589289fc260 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5589289fc210 'T'
|       `-RecordType 0x558928e89330 'pollfd'
|         `-CXXRecord 0x558928e892a0 'pollfd'
|-TypedefDecl 0x558928e8d5f8 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x558928e8c830 'const pollfd &'
|   `-QualType 0x558928e8b521 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x558928e8b520 'pollfd' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-RecordType 0x558928e89330 'pollfd'
|         `-CXXRecord 0x558928e892a0 'pollfd'
|-TypedefDecl 0x558928e8d650 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5589287d4580 'int'
|-TypedefDecl 0x558928e8d6b8 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x558928e8c8c0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x558928e8b520 'pollfd' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-RecordType 0x558928e89330 'pollfd'
|       `-CXXRecord 0x558928e892a0 'pollfd'
|-TypedefDecl 0x558928e8d720 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x558928e8c980 'const pollfd *'
|   `-QualType 0x558928e8b521 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x558928e8b520 'pollfd' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-RecordType 0x558928e89330 'pollfd'
|         `-CXXRecord 0x558928e892a0 'pollfd'
|-EnumDecl 0x558928e8d778 <line:134:5> col:5
| `-EnumConstantDecl 0x558928e8d870 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x558928e8d850 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x558928ad74d8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x558928ad74b0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x558928ad7490 <col:40> 'int' 1
|-CXXConstructorDecl 0x558928e8d8f8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x558928e8db88 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x558928e8d9b0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928e8da50 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x558928e8de48 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x558928e8dd30 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x558928e8e108 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x558928e8dff0 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x558928e8e4e0 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x558928e8e330 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x558928e8e7f0 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x558928e8e6d0 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x558928e8eae0 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x558928e8e928 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928e8e9a0 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x558928e8ec38 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x558928e8ed18 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e8ed70 <col:30> Inherited
|-CXXMethodDecl 0x558928e8edb8 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x558928e8ee68 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e8eec0 <col:30> Inherited
|-CXXMethodDecl 0x558928e8ef88 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x558928e8f038 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e8f090 <col:30> Inherited
|-CXXMethodDecl 0x558928e8f0d8 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x558928e8f188 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e8f1e0 <col:30> Inherited
|-CXXMethodDecl 0x558928e8f228 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x558928e8f2d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e8f330 <col:30> Inherited
|-CXXMethodDecl 0x558928e8f378 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x558928e8f428 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e8f480 <col:30> Inherited
|-CXXMethodDecl 0x558928e8f4a8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558928e8f558 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558928e8f608 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x558928e8f7c8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x558928e8f6b8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928e8f730 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x558928e8f918 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x558928e8f888 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928e8fac8 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x558928e8f9d0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558928e8fb80 <col:20>
| `-OptimizeNoneAttr 0x558928e8fbd8 <col:30>
|-CXXMethodDecl 0x558928e8fcf8 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x558928e8fc00 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558928e8fdb0 <col:20>
| `-OptimizeNoneAttr 0x558928e8fe08 <col:30>
|-CXXMethodDecl 0x558928e8fec0 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x558928e8fe30 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928e90008 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558928e8ff78 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928e90138 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x558928e90268 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x558928e90338 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x558928e90408 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x558928e90548 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x558928e904b8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928e90690 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558928e90600 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928e907d8 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x558928e90748 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558928e90890 <col:48> Inherited "" ""
|-CXXMethodDecl 0x558928e90990 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x558928e90900 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558928e90a48 <col:60> Inherited "" ""
|-CXXMethodDecl 0x558928e90b08 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x558928e90c08 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x558928e90db8 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x558928e90cc8 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x558928e91578 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x558928e90e70 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x558928e914d8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x558928e913d8 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x558928e91658 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558928e917a8 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x558928e91718 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x558928e91860 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x558928e91aa8 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x558928e91920 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x558928e91998 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x558928e91c68 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x558928e91b78 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x558928e91eb8 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x558928e91d30 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x558928e91da8 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x558928e91f78 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x558928e921d8 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x558928e920e0 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x558928e922a8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x558928e922a8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.16 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.16 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558928e93790 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x558928e93968 prev 0x558928e93790 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x558928e939f8 <col:46, col:52> col:46 public
|-TypedefDecl 0x558928e93a20 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5589287d4580 'int'
|-TypedefDecl 0x558928e955f0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x558928e955a0 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x558928e93ed0 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x558928e93dd0 'type'
|     `-TemplateSpecializationType 0x558928e93d60 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x558928e93c40 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x558928e93c20 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x558928e93c00 <col:24> 'unsigned long' 24
|       `-RecordType 0x558928e93d40 'char_array<24>'
|         `-ClassTemplateSpecialization 0x558928e93c60 'char_array'
|-TypedefDecl 0x558928e956a8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x558928e95670 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x558928e95650 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x558928e955f0 'type'
|     `-ElaboratedType 0x558928e955a0 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x558928e93ed0 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x558928e93dd0 'type'
|         `-TemplateSpecializationType 0x558928e93d60 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x558928e93c40 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x558928e93c20 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x558928e93c00 <col:24> 'unsigned long' 24
|           `-RecordType 0x558928e93d40 'char_array<24>'
|             `-ClassTemplateSpecialization 0x558928e93c60 'char_array'
|-CXXMethodDecl 0x558928e95828 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x558928e95738 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x558928e95918 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x558928e959f8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x558928e959f8
|-CXXMethodDecl 0x558928e95cc8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x558928e95bd0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x558928e95f08 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x558928e95d80 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558928e95df8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x558928e960d8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x558928e95fc8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558928e96040 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x558928e96238 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x558928e96308 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x558928e96598 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x558928e963c8 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x558928e96440 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x558928e967f8 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x558928e96668 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x558928e966e0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x558928e969b8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x558928e968c8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x558928e96b78 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x558928e96a80 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x558928e96c30 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558928e96ce0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x558928e96f18 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x558928e96d90 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x558928e96e08 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x558928e971b8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x558928e970c0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x558928e97280 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x558928e972d0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x558928e97320 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.18 = type { %struct.char_array.19*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.18 = type { %struct.char_array.19*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558928e923f0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x558928e925f8 prev 0x558928e923f0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x558928e93700 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x558928e936b0 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x558928e93690 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x558928e93540 'type'
|     `-SubstTemplateTypeParmType 0x558928e93360 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x5589289f1e70 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5589289f1e18 'T'
|       `-RecordType 0x558928b55f30 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x558928b55e48 'sized_array_memory'
|-FieldDecl 0x558928e97370 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x558928e973c0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x558928e973f8 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x558928e92690 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x558928ad5a98 'T'
|   `-RecordType 0x558928e8ade0 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x558928e8ad50 'SelectorInfo'
|-TypedefDecl 0x558928e974b8 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x558928e97480 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x558928e92690 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-RecordType 0x558928e8ade0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x558928e8ad50 'SelectorInfo'
|-TypedefDecl 0x558928e97578 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x558928e97540 'const SelectSet::SelectorInfo &'
|   `-QualType 0x558928e92691 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x558928e92690 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-RecordType 0x558928e8ade0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x558928e8ad50 'SelectorInfo'
|-TypedefDecl 0x558928e97608 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x558928e975d0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x558928e92690 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-RecordType 0x558928e8ade0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x558928e8ad50 'SelectorInfo'
|-TypedefDecl 0x558928e976c8 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x558928e97690 'const SelectSet::SelectorInfo *'
|   `-QualType 0x558928e92691 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x558928e92690 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-RecordType 0x558928e8ade0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x558928e8ad50 'SelectorInfo'
|-TypedefDecl 0x558928e98320 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x558928e982d0 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x558928e982b0 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x558928e981e8 'type'
|     `-LValueReferenceType 0x558928e981b0 'const SelectSet::SelectorInfo &'
|       `-QualType 0x558928e97f51 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x558928e97f50 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x5589289fa920 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5589289fa8c8 'T'
|           `-RecordType 0x558928e8ade0 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x558928e8ad50 'SelectorInfo'
|-TypedefDecl 0x558928e98388 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x558928e97540 'const SelectSet::SelectorInfo &'
|   `-QualType 0x558928e92691 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x558928e92690 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-RecordType 0x558928e8ade0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x558928e8ad50 'SelectorInfo'
|-TypedefDecl 0x558928e983e0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5589287d4580 'int'
|-TypedefDecl 0x558928e98448 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x558928e975d0 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x558928e92690 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x558928ad5a98 'T'
|     `-RecordType 0x558928e8ade0 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x558928e8ad50 'SelectorInfo'
|-TypedefDecl 0x558928e984b0 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x558928e97690 'const SelectSet::SelectorInfo *'
|   `-QualType 0x558928e92691 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x558928e92690 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x558928ad5a98 'T'
|       `-RecordType 0x558928e8ade0 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x558928e8ad50 'SelectorInfo'
|-EnumDecl 0x558928e98508 <line:134:5> col:5
| `-EnumConstantDecl 0x558928e98600 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x558928e985e0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x558928ad74d8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x558928ad74b0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x558928ad7490 <col:40> 'int' 1
|-CXXConstructorDecl 0x558928e98688 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x558928e98918 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x558928e98740 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928e987e0 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x558928e98bd8 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x558928e98ac0 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x558928e98e98 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x558928e98d80 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x558928e991e0 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x558928e990c0 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x558928e994f0 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x558928e993d0 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x558928e997e0 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x558928e99628 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928e996a0 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x558928e99938 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x558928e99a18 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e99a70 <col:30> Inherited
|-CXXMethodDecl 0x558928e99ab8 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x558928e99b68 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e99bc0 <col:30> Inherited
|-CXXMethodDecl 0x558928e99c88 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x558928e99d38 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e99d90 <col:30> Inherited
|-CXXMethodDecl 0x558928e99dd8 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x558928e99e88 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e99ee0 <col:30> Inherited
|-CXXMethodDecl 0x558928e99f28 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x558928e99fd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e9a030 <col:30> Inherited
|-CXXMethodDecl 0x558928e9a078 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x558928e9a128 <col:20> Inherited
| `-OptimizeNoneAttr 0x558928e9a180 <col:30> Inherited
|-CXXMethodDecl 0x558928e9a1a8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558928e9a258 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x558928e9a308 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x558928e9a4c8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x558928e9a3b8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x558928e9a430 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x558928e9a618 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x558928e9a588 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928e9a7c8 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x558928e9a6d0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558928e9a880 <col:20>
| `-OptimizeNoneAttr 0x558928e9a8d8 <col:30>
|-CXXMethodDecl 0x558928e9a9f8 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x558928e9a900 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x558928e9aab0 <col:20>
| `-OptimizeNoneAttr 0x558928e9ab08 <col:30>
|-CXXMethodDecl 0x558928e9abc0 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x558928e9ab30 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928e9ad08 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558928e9ac78 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928e9ae38 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x558928e9af68 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x558928e9b038 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x558928e9b108 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x558928e9b248 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x558928e9b1b8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928e9b390 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x558928e9b300 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x558928e9b4d8 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x558928e9b448 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558928e9b590 <col:48> Inherited "" ""
|-CXXMethodDecl 0x558928e9b690 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x558928e9b600 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x558928e9b748 <col:60> Inherited "" ""
|-CXXMethodDecl 0x558928e9b808 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x558928e9b908 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x558928e9bab8 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x558928e9b9c8 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x558928e9c278 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x558928e9bb70 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x558928e9c1d8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x558928e9c0d8 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x558928e9c358 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x558928e9c4a8 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x558928e9c418 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x558928e9c560 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x558928e9c7a8 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x558928e9c620 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x558928e9c698 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x558928e9c968 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x558928e9c878 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x558928e9cbb8 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x558928e9ca30 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x558928e9caa8 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x558928e9cc78 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x558928e9ced8 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x558928e9cde0 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x558928e9cfa8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x558928e9cfa8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.17 = type { %class.vector_memory.18 }
  NonVirtualBaseLLVMType:%class.Vector.17 = type { %class.vector_memory.18 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928e89f30 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558928e8a048 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x558928e8a0d8 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x558928e8a160 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x558928e8a250 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x558928e8a250
|-CXXMethodDecl 0x558928e8a350 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x558928e8a5f0 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x558928e8a408 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x558928e8a480 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x558928e8a500 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x558928e8a860 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x558928e8a6c0 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x558928e8a738 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x558928e8a7b8 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x558928e8a9b8 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x558928e8a928 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x558928e8aa80 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x558928e9e6c8 <col:34, line:50:5>
|   |-BinaryOperator 0x558928e9e028 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x558928e9dfe8 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x558928e8b208
|   | | `-CXXThisExpr 0x558928e9dfd8 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x558928e9e018 <col:23> 'bool' true
|   `-CallExpr 0x558928e9e6a0 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x558928e9e688 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x558928e9e600 <col:2> 'void (long)' lvalue Function 0x558928e9e500 'ignore_result' 'void (long)' (FunctionTemplate 0x558928a18368 'ignore_result')
|     `-CallExpr 0x558928e9e240 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x558928e9e228 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558928e9e1a8 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x558928e657a8 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x558928e9e278 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x558928e9e150 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x558928e9e138 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x558928e9e0e8 <col:22> 'int [2]' lvalue ->_wake_pipe 0x558928e8b1a8
|       |   |   `-CXXThisExpr 0x558928e9e0d8 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x558928e9e118 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x558928e9e2a8 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x558928e9e290 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x558928e9e170 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x558928e9e2c0 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x558928e9e188 <col:41> 'int' 1
|-CXXMethodDecl 0x558928e8abc0 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x558928e8ab30 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x558928e8ac88 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x558928e8ad28 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x558928e8ad50 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x558928e8ae68 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x558928e8af08 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x558928e8af68 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x558928e8afd0 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x558928e8b080 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x558928e8af08 'read' 'Element *'
|   | `-ImplicitCastExpr 0x558928e9e728 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x558928e9e6e8 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x558928e8af68 'write' 'Element *'
|   | `-ImplicitCastExpr 0x558928e9e7a8 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x558928e9e768 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x558928e8afd0 'pollfd' 'int'
|   | `-UnaryOperator 0x558928e9e808 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x558928e9e7e8 <col:35> 'int' 1
|   `-CompoundStmt 0x558928e9e880 <line:64:2, line:65:2>
|-FieldDecl 0x558928e8b1a8 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x558928e8b208 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x558928e92390 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x558928e9d090 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x558928e9d2c8 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x558928e9d0f8 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x558928e9d170 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x558928e9d1e8 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x558928e9d4b0 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x558928e9d398 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x558928e9d418 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x558928e9d6f8 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x558928e9d578 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x558928e9d5f8 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x558928e9d908 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x558928e9d7b8 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x558928e9d830 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x558928e9da58 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x558928e9d9c8 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x558928e9db20 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x558928e9dbe0 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x558928e9dca8 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x558928e9dca8
| `-ParmVarDecl 0x558928e9ddb8 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x558928e9de58 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x558928e9de58
  `-ParmVarDecl 0x558928e9df68 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.16, %class.Vector.17 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.16, %class.Vector.17 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928e293c8 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558928e294e8 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x558928e29578 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x558928e29600 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x558928e296f0 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x558928e297f0 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x558928e298b0 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x558928e29970 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x558928e29a58 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x558928e29b78 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x558928e29b78
| `-ParmVarDecl 0x558928e29c88 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x558928ea3478 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x558928ea3478
  `-ParmVarDecl 0x558928ea3588 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928e41088 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558928e411a8 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x558928e41248 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x558928e412a8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x558928ea2a78 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x558928ea2a78
| `-ParmVarDecl 0x558928ea2b88 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x558928ea2c28 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x558928ea2c28
| `-ParmVarDecl 0x558928ea2d38 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x558928ea2da8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x558928ea2da8
|-CXXMethodDecl 0x558928ea3628 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x558928ea3628
| `-ParmVarDecl 0x558928ea3738 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x558928ea37a8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x558928ea37a8
| `-ParmVarDecl 0x558928ea38b8 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x558928eae288 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x558928eae360 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928e2b2c0 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558928e2b3d8 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x558928e2b468 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x558928e2b4f0 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x558928e2b5b0 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x5589287d4580 'int'
|-CXXMethodDecl 0x558928e2b678 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x558928e2b718 <col:45> always_inline
|-CXXMethodDecl 0x558928e2b848 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x558928e2b780 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x558928e2b8f0 <col:49> always_inline
|-CXXConstructorDecl 0x558928e2b9e8 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x558928e2b9e8
| `-ParmVarDecl 0x558928e2baf8 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x558928e2bb98 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x558928e2bb98
| `-ParmVarDecl 0x558928e2bca8 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x558928ea2e90 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x558928ea2e90
|-CXXMethodDecl 0x558928ea3958 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x558928ea3958
| `-ParmVarDecl 0x558928ea3a68 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x558928ea3ad8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x558928ea3ad8
  `-ParmVarDecl 0x558928ea3be8 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928e9ecf0 prev 0x558928e89ea0 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x558928e9ede8 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x558928e9ee78 <col:22, col:28> col:22 public
|-EnumDecl 0x558928e9eea0 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x558928e9efb8 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x558928e9ef98 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x558928e9ef80 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x558928e9ef60 <col:32> 'int' 1
| `-EnumConstantDecl 0x558928e9f060 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x558928e9f040 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x558928e9f028 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x558928e9f008 <col:53> 'int' 1000
|-CXXMethodDecl 0x558928e9f100 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x558928e9f1c0 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x558928e9f2a8 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x558928ea3ca8 <col:34, col:52>
|   `-ReturnStmt 0x558928ea3c98 <col:36, col:43>
|     `-MemberExpr 0x558928ea3c68 <col:43> 'TimerSet' lvalue ->_timers 0x558928ea0f78
|       `-CXXThisExpr 0x558928ea3c58 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x558928e9f398 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x558928ea3d10 <col:46, col:64>
|   `-ReturnStmt 0x558928ea3d00 <col:48, col:55>
|     `-MemberExpr 0x558928ea3cd0 <col:55> 'const TimerSet' lvalue ->_timers 0x558928ea0f78
|       `-CXXThisExpr 0x558928ea3cc0 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x558928e9f488 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x558928ea3d78 <col:36, col:55>
|   `-ReturnStmt 0x558928ea3d68 <col:38, col:45>
|     `-MemberExpr 0x558928ea3d38 <col:45> 'SelectSet' lvalue ->_selects 0x558928ea0fd8
|       `-CXXThisExpr 0x558928ea3d28 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x558928e9f578 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x558928ea3de0 <col:48, col:67>
|   `-ReturnStmt 0x558928ea3dd0 <col:50, col:57>
|     `-MemberExpr 0x558928ea3da0 <col:57> 'const SelectSet' lvalue ->_selects 0x558928ea0fd8
|       `-CXXThisExpr 0x558928ea3d90 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x558928e9f638 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x558928e9f728 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x558928e9f898 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x558928e9f7d8 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x558928e9f960 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x558928e9fda8 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x558928e9fa10 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x558928e9fc90 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x558928e9fe78 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x558928e9ff38 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x558928e9fff8 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x558928ea0138 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x558928ea00a8 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x558928ea0200 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x558928ea02c0 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x558928ea0380 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x558928ea0440 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x558928ea0580 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x558928ea04f0 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x558928ea0648 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x558928ea0708 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x558928ea07a8 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x558928ea0870 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558928ea08c0 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558928ea0910 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558928ea0960 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558928ea09b0 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558928ea0a00 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558928ea0a50 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558928ea0aa0 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558928ea0af0 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x558928ea0b40 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x558928ea0b90 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x558928ea0c88 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x558928ea0bf8 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x558928ea0dd8 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x558928ea0d48 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x558928ea0e80 <line:104:3, col:10> col:3 private
|-FieldDecl 0x558928ea0eb8 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x558928ea0f18 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x558928ea0f78 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x558928ea0fd8 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x558928ea1058 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x558928ea10c8 <col:40, col:50> aligned
|   `-ConstantExpr 0x558928ea10a8 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x558928ea1028 <col:48> 'int' 64
|-FieldDecl 0x558928ea1138 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x558928ea1198 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x558928ea1290 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x558928ea13a0 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x558928ea1400 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x558928ea1480 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x558928ea14f0 <col:36, col:46> aligned
|   `-ConstantExpr 0x558928ea14d0 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x558928ea1450 <col:44> 'int' 64
|-FieldDecl 0x558928ea1568 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x558928ea15c8 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x558928ea1618 <line:170:3, col:9> col:3 public
|-FieldDecl 0x558928ea1658 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x558928ea16c0 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x558928ea1710 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x558928ea18b8 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x558928ea1748 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x558928ea17c8 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x558928ea19b8 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x558928ea19b8
|-CXXMethodDecl 0x558928ea1ac0 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x558928ea1b88 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x558928ea3ed8 <col:34, line:217:5>
|   `-ReturnStmt 0x558928ea3ec8 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x558928ea3eb0 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x558928ea3e80 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x558928e388d0
|         `-ImplicitCastExpr 0x558928ea3e68 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x558928ea3e38 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x558928e38868
|             `-MemberExpr 0x558928ea3e08 <col:16> 'const TaskLink' lvalue ->_task_link 0x558928ea0eb8
|               `-CXXThisExpr 0x558928ea3df8 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x558928ea1c48 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x558928ea1d08 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x558928ea4600 <col:39, line:226:5>
|   |-DeclStmt 0x558928ea4128 <line:223:9, col:68>
|   | `-VarDecl 0x558928ea3f00 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x558928ea40e0 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x558928ea40b0 <col:24, col:38> '<bound member function type>' .compare_swap 0x558928b00750
|   |     | `-MemberExpr 0x558928ea3f78 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x558928ea1138
|   |     |   `-CXXThisExpr 0x558928ea3f68 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x558928ea4068 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x558928ea4050 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x558928ea4028 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x558928ea4008 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x558928ea4110 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x558928ea4090 <col:66> 'int' 0
|   |-CStyleCastExpr 0x558928ea4170 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x558928ea4140 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x558928ea3f00 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x558928ea45e0 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x558928ea45b0 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x558928ea4288 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x558928ea4258 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x558928ea4240 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x558928ea4198 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x558928ea3f00 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x558928ea4218 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x558928ea4200 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x558928ea41d8 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x558928ea41b8 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x558928ea42e8 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x558928ea42c8 <col:60> 'int' 0
|       `-CallExpr 0x558928ea4510 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x558928ea44f8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x558928ea44d8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558928874570 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x558928ea4550 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x558928ea43d8 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x558928ea4568 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x558928ea4408 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x558928ea4580 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x558928ea4448 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x558928ea4598 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x558928ea44c0 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x558928ea44a8 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x558928ea4468 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x558928ea1e50 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x558928ea1dc0 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x558928ea1f18 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x558928ea1fd8 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x558928ea2098 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x558928ea2158 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x558928ea2218 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x558928ea2310 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x558928ea2370 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x558928ea2400 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x558928ea27c8 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x558928ea27c8
| `-ParmVarDecl 0x558928ea28d8 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x558928ea2f98 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x558928ea2f98
  `-ParmVarDecl 0x558928ea30a8 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928e2da28 prev 0x558928deabe0 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558928e2db20 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x558928e2dbb0 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x558928e2dc10 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x558928e2dcb8 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x558928e2ddd8 <col:5, col:12> col:12 implicit struct do_nothing_t
| |-CXXConstructorDecl 0x558928c04210 <col:12> col:12 implicit constexpr do_nothing_t 'void ()' inline default trivial noexcept-unevaluated 0x558928c04210
| |-CXXConstructorDecl 0x558928c042f0 <col:12> col:12 implicit constexpr do_nothing_t 'void (const Timer::do_nothing_t &)' inline default trivial noexcept-unevaluated 0x558928c042f0
| | `-ParmVarDecl 0x558928c043d8 <col:12> col:12 'const Timer::do_nothing_t &'
| `-CXXConstructorDecl 0x558928c04478 <col:12> col:12 implicit constexpr do_nothing_t 'void (Timer::do_nothing_t &&)' inline default trivial noexcept-unevaluated 0x558928c04478
|   `-ParmVarDecl 0x558928c04588 <col:12> col:12 'Timer::do_nothing_t &&'
|-CXXConstructorDecl 0x558928e2df78 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x558928e2deb8 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x558928e2e1c8 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x558928e2e038 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x558928e2e0b8 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x558928e2e320 <line:43:5, col:27> col:5 used Timer 'void (Element *)'
| `-ParmVarDecl 0x558928e2e290 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x558928e2e4a8 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x558928e2e3e0 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x558928e2e658 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x558928e2e598 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x558928e2e750 <line:55:5, line:58:5> line:55:12 used ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x558928e34770 <col:21, line:58:5>
|   `-IfStmt 0x558928e34758 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x558928e346c0 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x558928e34690 <col:6> '<bound member function type>' ->scheduled 0x558928e2efa8
|     |   `-ImplicitCastExpr 0x558928e346e0 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x558928e34680 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x558928e34738 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x558928e34708 <col:6> '<bound member function type>' ->unschedule 0x558928e32e20
|         `-CXXThisExpr 0x558928e346f8 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x558928e2e850 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x558928e34910 <col:26, line:65:5>
|   |-BinaryOperator 0x558928e34830 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x558928e347c8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x558928e33aa8
|   | | `-MemberExpr 0x558928e34798 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x558928e33b68
|   | |   `-CXXThisExpr 0x558928e34788 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x558928e34818 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558928e347f8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x558928e33fc8 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x558928e348f0 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x558928e34860 <col:2> 'void *' lvalue ->_thunk 0x558928e33be8
|     | `-CXXThisExpr 0x558928e34850 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x558928e348c8 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x558928e34890 <col:20> 'int' 1
|-CXXMethodDecl 0x558928e2e990 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x558928e2e900 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x558928e34a70 <col:52, line:71:5>
|   |-CStyleCastExpr 0x558928e34960 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x558928e34930 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x558928e2e900 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x558928e34a50 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x558928e34a20 <col:2> '<bound member function type>' ->assign 0x558928e2e850
|       `-CXXThisExpr 0x558928e34a10 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x558928e2eb60 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x558928e2ea48 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x558928e2eac8 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x558928e34bf0 <col:58, line:79:5>
|   |-BinaryOperator 0x558928e34b38 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x558928e34ad0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x558928e33aa8
|   | | `-MemberExpr 0x558928e34aa0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x558928e33b68
|   | |   `-CXXThisExpr 0x558928e34a90 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x558928e34b20 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x558928e34b00 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x558928e2ea48 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x558928e34bd0 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x558928e34b68 <col:2> 'void *' lvalue ->_thunk 0x558928e33be8
|     | `-CXXThisExpr 0x558928e34b58 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x558928e34bb8 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x558928e34b98 <col:11> 'void *' lvalue ParmVar 0x558928e2eac8 'user_data' 'void *'
|-CXXMethodDecl 0x558928e2ecb0 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x558928e2ec20 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x558928e34d88 <col:35, line:87:5>
|   |-BinaryOperator 0x558928e34cb8 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x558928e34c50 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x558928e33aa8
|   | | `-MemberExpr 0x558928e34c20 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x558928e33b68
|   | |   `-CXXThisExpr 0x558928e34c10 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x558928e34ca0 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558928e34c80 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x558928e341a0 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x558928e34d68 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x558928e34ce8 <col:2> 'void *' lvalue ->_thunk 0x558928e33be8
|     | `-CXXThisExpr 0x558928e34cd8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x558928e34d50 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x558928e34d38 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x558928e34d18 <col:11> 'Element *' lvalue ParmVar 0x558928e2ec20 'element' 'Element *'
|-CXXMethodDecl 0x558928e2edf8 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x558928e2ed68 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x558928e34f20 <col:29, line:94:5>
|   |-BinaryOperator 0x558928e34e50 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x558928e34de8 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x558928e33aa8
|   | | `-MemberExpr 0x558928e34db8 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x558928e33b68
|   | |   `-CXXThisExpr 0x558928e34da8 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x558928e34e38 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558928e34e18 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x558928e34378 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x558928e34f00 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x558928e34e80 <col:2> 'void *' lvalue ->_thunk 0x558928e33be8
|     | `-CXXThisExpr 0x558928e34e70 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x558928e34ee8 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x558928e34ed0 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x558928e34eb0 <col:11> 'Task *' lvalue ParmVar 0x558928e2ed68 'task' 'Task *'
|-CXXMethodDecl 0x558928e2eee8 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x558928e35000 <col:37, line:100:5>
|   `-ReturnStmt 0x558928e34ff0 <line:99:2, col:19>
|     `-BinaryOperator 0x558928e34fd0 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x558928e34fa0 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x558928e34f50 <col:9> 'Element *const' lvalue ->_owner 0x558928e33c48
|       |   `-CXXThisExpr 0x558928e34f40 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x558928e34fb8 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x558928e34f80 <col:19> 'int' 0
|-CXXMethodDecl 0x558928e2efa8 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x558928e350c0 <col:35, line:105:5>
|   `-ReturnStmt 0x558928e350b0 <line:104:2, col:23>
|     `-BinaryOperator 0x558928e35090 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x558928e35078 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x558928e35028 <col:9> 'const int' lvalue ->_schedpos1 0x558928e338c8
|       |   `-CXXThisExpr 0x558928e35018 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x558928e35058 <col:23> 'int' 0
|-CXXMethodDecl 0x558928e2f068 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x558928e35128 <col:51, line:118:5>
|   `-ReturnStmt 0x558928e35118 <line:117:2, col:9>
|     `-MemberExpr 0x558928e350e8 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x558928e33928
|       `-CXXThisExpr 0x558928e350d8 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x558928e2f128 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x558928e35680 <col:37, line:136:5>
|   `-IfStmt 0x558928e35658 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x558928e351e8 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x558928e351d0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x558928e351b0 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x558928e35180 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x558928cefc88
|     |       `-MemberExpr 0x558928e35150 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x558928e33928
|     |         `-CXXThisExpr 0x558928e35140 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x558928e355c8 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x558928e355b0 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x558928e35580 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x558928e35568 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x558928e35530 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x558928e35518 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x558928e354f8 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x558928bd93c0 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x558928e35498 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x558928e35480 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x558928e353a8 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x558928e35390 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x558928e35370 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x558928bd9080 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x558928e35310 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x558928e35210 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x558928e33928
|     |         |     |   `-CXXThisExpr 0x558928e35200 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x558928e35358 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x558928e35340 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x558928e352f0 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x558928e352d8 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x558928e35278 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x558928d0ead0 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x558928e354e0 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x558928e354c8 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x558928e35460 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x558928e35448 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x558928e35418 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x5589289dfdf0 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x558928e35648 <line:135:6, col:13>
|       `-CXXConstructExpr 0x558928e35618 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x558928e355e8 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x558928e33928
|           `-CXXThisExpr 0x558928e355d8 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x558928e2f1e8 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x558928e35768 <col:35, line:141:5>
|   `-ReturnStmt 0x558928e35758 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x558928e35720 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x558928e356f0 <col:9, col:17> '<bound member function type>' ->router 0x558928dfc050
|         `-ImplicitCastExpr 0x558928e35740 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x558928e356d8 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x558928e356a8 <col:9> 'Element *const' lvalue ->_owner 0x558928e33c48
|               `-CXXThisExpr 0x558928e35698 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x558928e2f2a8 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x558928e357e8 <col:37, line:146:5>
|   `-ReturnStmt 0x558928e357d8 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x558928e357c0 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x558928e35790 <col:9> 'Element *const' lvalue ->_owner 0x558928e33c48
|         `-CXXThisExpr 0x558928e35780 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x558928e2f368 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x558928e35868 <col:41, line:151:5>
|   `-ReturnStmt 0x558928e35858 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x558928e35840 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x558928e35810 <col:9> 'RouterThread *const' lvalue ->_thread 0x558928e33ca8
|         `-CXXThisExpr 0x558928e35800 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x558928e2f430 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x558928e2f628 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x558928e2f4e0 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x558928e2f558 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558928e34588 <col:50> 'bool' false
|-CXXMethodDecl 0x558928e2f778 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x558928e2f6e8 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x558928e2f8c0 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x558928e2f830 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x558928e2fa08 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x558928e2f978 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x558928e323a0 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x558928e32310 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x558928e324e8 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x558928e32458 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x558928e325b0 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x558928e359d0 <col:32, line:223:5>
|   `-ExprWithCleanups 0x558928e359b8 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x558928e35960 <col:2, col:47> 'void'
|       |-MemberExpr 0x558928e35890 <col:2> '<bound member function type>' ->schedule_at_steady 0x558928e2f8c0
|       | `-CXXThisExpr 0x558928e35880 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x558928e359a0 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x558928e35988 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x558928e35940 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x558928e35928 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x558928e358f8 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x5589289dfdf0 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x558928e326f0 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x558928e32660 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x558928e32838 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x558928e327a8 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558928e35b58 <col:56, line:241:5>
|   `-ExprWithCleanups 0x558928e35b40 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x558928e35ae8 <col:2, col:40> 'void'
|       |-MemberExpr 0x558928e359f8 <col:2> '<bound member function type>' ->schedule_after 0x558928e326f0
|       | `-CXXThisExpr 0x558928e359e8 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x558928e35b28 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x558928e35b10 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x558928e35aa8 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x558928e35a78 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x558928e35a38 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x558928e327a8 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x558928e35a90 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x558928e35a58 <col:38> 'int' 0
|-CXXMethodDecl 0x558928e32980 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x558928e328f0 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558928e35dc8 <col:58, line:249:5>
|   `-ExprWithCleanups 0x558928e35db0 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x558928e35d58 <col:2, col:49> 'void'
|       |-MemberExpr 0x558928e35b80 <col:2> '<bound member function type>' ->schedule_after 0x558928e326f0
|       | `-CXXThisExpr 0x558928e35b70 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x558928e35d98 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x558928e35d80 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x558928e35d00 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x558928e35ce8 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x558928e35c58 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x558928cf1a78 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x558928e35d40 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x558928e35d28 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x558928e35c38 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x558928e328f0 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558928e32ac8 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x558928e32a38 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x558928e35fa8 <col:58, line:261:5>
|   `-ExprWithCleanups 0x558928e35f90 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x558928e35f38 <col:2, col:38> 'void'
|       |-MemberExpr 0x558928e35df0 <col:2> '<bound member function type>' ->schedule_at_steady 0x558928e2f8c0
|       | `-CXXThisExpr 0x558928e35de0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x558928e35f78 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x558928e35f60 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x558928e35f00 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x558928e35ee8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x558928e35ec8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x558928bd9080 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x558928e35e98 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x558928e35e80 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x558928e35e30 <col:21> 'Timestamp' lvalue ->_expiry_s 0x558928e33928
|             |     `-CXXThisExpr 0x558928e35e20 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x558928e35e60 <col:33> 'const Timestamp' lvalue ParmVar 0x558928e32a38 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x558928e32c10 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x558928e32b80 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558928e36280 <col:58, line:270:5>
|   `-ExprWithCleanups 0x558928e36268 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x558928e36210 <col:2, col:79> 'void'
|       |-MemberExpr 0x558928e35fd0 <col:2> '<bound member function type>' ->schedule_at_steady 0x558928e2f8c0
|       | `-CXXThisExpr 0x558928e35fc0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x558928e36250 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x558928e36238 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x558928e361d0 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x558928e36108 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x558928e360f0 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x558928e36080 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x558928e36050 <col:31, col:41> '<bound member function type>' .sec 0x5589289e18e8
|             | |     `-ImplicitCastExpr 0x558928e360a0 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x558928e36020 <col:31> 'Timestamp' lvalue ->_expiry_s 0x558928e33928
|             | |         `-CXXThisExpr 0x558928e36010 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x558928e360d8 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x558928e360b8 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x558928e32b80 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x558928e36198 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x558928e36168 <col:60, col:70> '<bound member function type>' .subsec 0x5589289e1fe0
|                 `-ImplicitCastExpr 0x558928e361b8 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x558928e36138 <col:60> 'Timestamp' lvalue ->_expiry_s 0x558928e33928
|                     `-CXXThisExpr 0x558928e36128 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x558928e32d58 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x558928e32cc8 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x558928e365b8 <col:60, line:279:5>
|   `-ExprWithCleanups 0x558928e365a0 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x558928e36548 <col:2, col:65> 'void'
|       |-MemberExpr 0x558928e362a8 <col:2> '<bound member function type>' ->schedule_at_steady 0x558928e2f8c0
|       | `-CXXThisExpr 0x558928e36298 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x558928e36588 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x558928e36570 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x558928e36510 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x558928e364f8 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x558928e364d8 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x558928bd9080 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x558928e36478 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x558928e36460 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x558928e362e8 <col:21> 'Timestamp' lvalue ->_expiry_s 0x558928e33928
|             |     `-CXXThisExpr 0x558928e362d8 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x558928e364c0 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x558928e364a8 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x558928e36408 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x558928e363f0 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x558928e363c0 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x558928cf1a78 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x558928e36448 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x558928e36430 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x558928e363a0 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x558928e32cc8 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558928e32e20 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x558928e32ee0 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x558928e36a80 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x558928e36610 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x558928e365e0 <col:2> '<bound member function type>' ->unschedule 0x558928e32e20
|   |   `-CXXThisExpr 0x558928e365d0 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x558928e36a68 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x558928e36a30 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x558928e36a18 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558928e366c8 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x558928dc3568 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x558928e36640 <col:2> 'Timestamp' lvalue ->_expiry_s 0x558928e33928
|       | `-CXXThisExpr 0x558928e36630 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x558928e366b0 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x558928e36680 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x558928e32fa0 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x558928e36dd8 <col:42, line:310:5>
|   |-IfStmt 0x558928e36c20 <line:306:2, line:307:23>
|   | |-CallExpr 0x558928e36b50 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x558928e36b38 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x558928e36ad8 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x558928d0cf40 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x558928e36c10 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x558928e36bf8 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x558928e36bc8 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x558928e36bb0 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x558928e36b80 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x558928e36dc8 <line:309:2, col:33>
|     `-ExprWithCleanups 0x558928e36db0 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x558928e36d80 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x558928e36d68 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x558928e36d28 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x558928e36d10 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x558928e36ce0 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x558928cf1d90 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x558928e36d50 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x558928e36cc0 <col:30> 'int' 500
|-CXXMethodDecl 0x558928e330e0 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x558928e33050 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558928e33188 <col:69> "" ""
|-CXXMethodDecl 0x558928e33298 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x558928e33208 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558928e33340 <col:70> "" ""
|-CXXMethodDecl 0x558928e33450 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x558928e333c0 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558928e334f8 <col:71> "" ""
|-CXXMethodDecl 0x558928e33608 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x558928e33578 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558928e336b0 <col:72> "" ""
|-EnumDecl 0x558928e33720 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x558928e33820 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x558928e33870 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558928e33800 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x558928e337e0 <col:25> 'int' 1
|-AccessSpecDecl 0x558928e33888 <line:339:3, col:10> col:3 private
|-FieldDecl 0x558928e338c8 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x558928e33928 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x558928e33978 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x558928e33aa8 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x558928e34598 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x558928e33b68 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x558928e33be8 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x558928e33c48 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x558928e33ca8 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x558928e33df8 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x558928e33d08 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x558928e33fc8 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x558928e33eb0 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x558928e33f30 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x558928e341a0 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x558928e34088 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x558928e34108 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x558928e34378 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x558928e34260 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x558928e342e0 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x558928e34548 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.13, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.13, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class TCPBuffer
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class TCPBuffer::TCPBufferElt * _chain
       120 |   unsigned int _initial_seq
       124 |   unsigned int _first_seq
       128 |   _Bool _start_push
       129 |   _Bool _start_pull
       130 |   _Bool _skip
           | [sizeof=136, dsize=131, align=8,
           |  nvsize=131, nvalign=8]

*** Dumping AST Record Layout
         0 | class TCPBuffer::TCPBufferElt
         0 |   class Packet * _packet
         8 |   class TCPBuffer::TCPBufferElt ** _chain_ptr
        16 |   class TCPBuffer::TCPBufferElt * _next
        24 |   class TCPBuffer::TCPBufferElt * _prev
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928da5068 prev 0x558928d9c770 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558928da5160 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x558928da5250 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x558928da5300 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x558928da5488 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x558928da5608 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x558928da5788 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x558928dbc4c8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558928dbcdc8 <col:11>
|-CXXDestructorDecl 0x558928dbc630 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x558928dbc768 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x558928dbc768
| `-ParmVarDecl 0x558928dbc878 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x558928dbc918 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x558928dbc918
| `-ParmVarDecl 0x558928dbca28 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x558928dbf758 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x558928dbf868 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x558928dbfae8 <col:11>
|   `-ReturnStmt 0x558928dbfad8 <col:11>
|     `-UnaryOperator 0x558928dbfac0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558928dbfab0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x558928dbf8d8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x558928dbf8d8
  `-ParmVarDecl 0x558928dbf9e8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928da57f0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558928da5908 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x558928da59a8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x558928da5a10 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x558928da5a78 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x558928da5ae0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x558928da5b40 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x558928da5c00 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x558928da5c60 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x558928da5cc0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x558928dbc3d8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x558928da59a8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x558928dbcdd8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x558928dbce30 <col:12>
|-CXXConstructorDecl 0x558928dbca98 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x558928dbca98
| `-ParmVarDecl 0x558928dbcba8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x558928dbcc48 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x558928dbcc48
| `-ParmVarDecl 0x558928dbcd58 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x558928dbee40 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928d95e60 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558928d95f78 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x558928d96008 <col:16, col:22> col:16 public
|-EnumDecl 0x558928d96030 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x558928d96130 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x558928d96210 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928d96110 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x558928d960f0 <col:21> 'int' 28
| `-EnumConstantDecl 0x558928d961c0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x558928d96228 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558928d961a0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x558928d96180 <col:22> 'int' 64
|-CXXMethodDecl 0x558928d965c8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x558928d96250 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558928d962d0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x558928d963b0 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558928d96428 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558928d96688 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x558928d96888 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x558928d96700 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x558928d96778 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558928d96938 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x558928d96a98 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x558928d969a8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558928d96b40 <col:72> warn_unused_result ""
|-TypedefDecl 0x558928d96e70 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x558928d96e00 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x558928d96da0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x558928d96d60 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x5589287d44e0 'void'
|       |-PointerType 0x558928aacb30 'unsigned char *'
|       | `-BuiltinType 0x5589287d45e0 'unsigned char'
|       |-TypedefType 0x55892887d810 'size_t' sugar
|       | |-Typedef 0x558928844be0 'size_t'
|       | `-BuiltinType 0x5589287d4640 'unsigned long'
|       `-PointerType 0x5589287d4ce0 'void *'
|         `-BuiltinType 0x5589287d44e0 'void'
|-CXXMethodDecl 0x558928d972e8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x558928d96ee0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x558928d96f58 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558928d96ff0 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x558928d97070 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x558928db53f0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x558928db53d8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x558928db53a0 <col:58> 'int' 0
| |-ParmVarDecl 0x558928d970f0 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x558928db5418 <col:76> 'int' 0
| |-ParmVarDecl 0x558928d97170 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x558928db5438 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x558928d973b8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x558928d97438 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x558928d974f8 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x558928d97598 <col:20>
| `-OptimizeNoneAttr 0x558928d975f0 <col:30>
|-CXXMethodDecl 0x558928d97668 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x558928d97708 <col:20>
| `-OptimizeNoneAttr 0x558928d97760 <col:30>
|-CXXMethodDecl 0x558928d977d8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x558928d97878 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x558928d97928 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x558928d979c8 <col:20>
| |-OptimizeNoneAttr 0x558928d97a20 <col:30>
| `-WarnUnusedResultAttr 0x558928d97a48 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x558928d97aa0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x558928d97b40 <col:20>
| `-OptimizeNoneAttr 0x558928d97b98 <col:30>
|-CXXMethodDecl 0x558928d97be8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x558928d97c88 <col:20>
| `-OptimizeNoneAttr 0x558928d97ce0 <col:30>
|-CXXMethodDecl 0x558928d97d28 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x558928d97dc8 <col:20>
| `-OptimizeNoneAttr 0x558928d97e20 <col:30>
|-CXXMethodDecl 0x558928d97e68 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x558928d97f28 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x558928d97ff0 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x558928d980b8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x558928d98178 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x558928d98298 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x558928db5500 <col:54, line:99:5>
|   `-ReturnStmt 0x558928db54f0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x558928db54d8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x558928db54a8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x558928da5ff8
|         `-CXXThisExpr 0x558928db5498 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x558928d98438 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x558928d98348 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x558928db55b0 <col:67, line:103:5>
|   `-BinaryOperator 0x558928db5590 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x558928db5528 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x558928da5ff8
|     | `-CXXThisExpr 0x558928db5518 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x558928db5578 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x558928db5558 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x558928d98348 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x558928d98530 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x558928db5630 <col:33, line:107:5>
|   `-ReturnStmt 0x558928db5620 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x558928db5608 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x558928db55d8 <col:16> 'void *' lvalue ->_destructor_argument 0x558928da6060
|         `-CXXThisExpr 0x558928db55c8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x558928d985f0 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x558928db5c60 <col:25, line:113:5>
|   |-ParenExpr 0x558928db59a8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x558928db5978 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x558928db56e8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x558928db56c0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x558928db5688 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x558928db5658 <col:24> '<bound member function type>' ->shared 0x558928d97668
|   |   |       `-ImplicitCastExpr 0x558928db56a8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x558928db5648 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x558928db5748 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558928db5728 <col:42> 'int' 0
|   |   `-CallExpr 0x558928db58d8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x558928db58c0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558928db58a0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558928874570 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558928db5918 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928db57b8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x558928db5930 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928db57e0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558928db5948 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558928db5818 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x558928db5960 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558928db5888 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558928db5870 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558928db5838 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x558928db5ba8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x558928db59d8 <col:2> 'unsigned char *' lvalue ->_head 0x558928da5e00
|   | | `-CXXThisExpr 0x558928db59c8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x558928db5b90 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x558928db5b70 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x558928db5a18 <col:10> 'unsigned char *' lvalue ->_data 0x558928da5e68
|   |     | `-CXXThisExpr 0x558928db5a08 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x558928db5b58 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x558928db5b38 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x558928db5a58 <col:18> 'unsigned char *' lvalue ->_tail 0x558928da5ed0
|   |         | `-CXXThisExpr 0x558928db5a48 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x558928db5b20 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x558928db5b00 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x558928db5a98 <col:26> 'unsigned char *' lvalue ->_end 0x558928da5f38
|   |             | `-CXXThisExpr 0x558928db5a88 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x558928db5ae8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x558928db5ac8 <col:33> 'int' 0
|   `-BinaryOperator 0x558928db5c40 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x558928db5bd8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x558928da5ff8
|     | `-CXXThisExpr 0x558928db5bc8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x558928db5c28 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x558928db5c08 <col:16> 'int' 0
|-CXXMethodDecl 0x558928d98730 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x558928d986a0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558928d987d8 <col:20>
| |-OptimizeNoneAttr 0x558928d98830 <col:30>
| `-WarnUnusedResultAttr 0x558928d98858 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x558928d98928 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x558928d98898 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558928d989d0 <col:20>
| |-OptimizeNoneAttr 0x558928d98a28 <col:30>
| `-WarnUnusedResultAttr 0x558928d98a50 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x558928d98b88 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x558928d98a90 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558928d98c30 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x558928d98d30 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x558928d98ca0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558928d98dd8 <col:20>
| `-OptimizeNoneAttr 0x558928d98e30 <col:30>
|-CXXMethodDecl 0x558928d98ef8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x558928d98e68 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558928d98fa0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x558928d990a0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x558928d99010 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x558928d99148 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x558928d99248 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x558928d991b8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558928d992f0 <col:20>
| `-OptimizeNoneAttr 0x558928d99348 <col:30>
|-CXXMethodDecl 0x558928d994d8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x558928d99388 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x558928d99400 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x558928db5458 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x558928d99588 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x558928d99788 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x558928d99600 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x558928d99678 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558928d99998 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x558928d99848 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x558928d998c0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558928d99ba8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x558928d99a58 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x558928d99ad8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x558928db5468 <col:39> 'int' 0
|-CXXMethodDecl 0x558928d99c78 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x558928d99d40 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x558928d99e08 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x558928d99ec8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x558928d99f90 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x558928d9a0d8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x558928d9a048 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x558928d9a2a8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x558928d9a198 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x558928d9a210 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558928d9a378 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x558928d9a438 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x558928d9a4d8 <col:20>
| `-OptimizeNoneAttr 0x558928d9a530 <col:30>
|-CXXMethodDecl 0x558928d9a580 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x558928d9a620 <col:20>
| `-OptimizeNoneAttr 0x558928d9a678 <col:30>
|-CXXMethodDecl 0x558928d9a6c8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x558928d9a788 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x558928d9a850 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x558928d9a8f0 <col:20>
| `-OptimizeNoneAttr 0x558928d9a948 <col:30>
|-CXXMethodDecl 0x558928d9aa98 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x558928d9a988 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x558928d9aa00 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558928d9abe8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x558928d9ab58 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558928d9acb0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x558928d9ad70 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x558928d9ae10 <col:20>
| `-OptimizeNoneAttr 0x558928d9ae68 <col:30>
|-CXXMethodDecl 0x558928d9aeb8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x558928d9af58 <col:20>
| `-OptimizeNoneAttr 0x558928d9afb0 <col:30>
|-CXXMethodDecl 0x558928d9b000 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x558928d9b0c8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x558928d9b168 <col:20>
| `-OptimizeNoneAttr 0x558928d9b1c0 <col:30>
|-CXXMethodDecl 0x558928d9b208 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x558928d9b328 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x558928d9b498 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x558928d9b3d8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x558928d9b588 <line:307:5, col:68> col:56 used ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x558928d9b628 <col:20>
| `-OptimizeNoneAttr 0x558928d9b680 <col:30>
|-CXXMethodDecl 0x558928d9b6d0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x558928d9b790 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x558928d9b9c8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x558928d9b840 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x558928d9b8b8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558928d9ba78 <col:20>
| `-OptimizeNoneAttr 0x558928d9bad0 <col:30>
|-CXXMethodDecl 0x558928d9bb78 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x558928d9bc18 <col:20>
| `-OptimizeNoneAttr 0x558928d9bc70 <col:30>
|-CXXMethodDecl 0x558928d9bcc0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x558928d9bd60 <col:20>
| `-OptimizeNoneAttr 0x558928d9bdb8 <col:30>
|-CXXMethodDecl 0x558928d9be00 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x558928d9bea0 <col:20>
| `-OptimizeNoneAttr 0x558928d9bef8 <col:30>
|-CXXMethodDecl 0x558928d9bff8 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x558928d9bf30 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x558928d9c0a0 <col:20>
| `-OptimizeNoneAttr 0x558928d9c0f8 <col:30>
|-CXXMethodDecl 0x558928d9c2b8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x558928d9c130 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x558928d9c1a8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558928d9c368 <col:20>
| `-OptimizeNoneAttr 0x558928d9c3c0 <col:30>
|-CXXMethodDecl 0x558928d9c468 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x558928d9c588 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x558928d9c6a8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x558928d9c748 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x558928d9c770 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x558928d9c898 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x558928d9c938 <col:20>
| `-OptimizeNoneAttr 0x558928d9c990 <col:30>
|-CXXMethodDecl 0x558928d9ca38 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x558928d9cad8 <col:20>
| `-OptimizeNoneAttr 0x558928d9cb30 <col:30>
|-AccessSpecDecl 0x558928d9cb58 <line:344:3, col:9> col:3 public
|-EnumDecl 0x558928d9cb80 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x558928d9cc80 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x558928d9ccd0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558928d9cc60 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x558928d9cc40 <col:14> 'int' 48
|-CXXMethodDecl 0x558928d9cd38 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x558928d9cdd8 <col:20>
| `-OptimizeNoneAttr 0x558928d9ce30 <col:30>
|-CXXMethodDecl 0x558928d9cea8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x558928d9cf48 <col:20>
| `-OptimizeNoneAttr 0x558928d9cfa0 <col:30>
|-CXXMethodDecl 0x558928d9d068 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x558928d9cfd8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x558928d9d208 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x558928d9d3a8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x558928d9d2b8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x558928d9d450 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x558928d9d550 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558928d9d900 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928d9d530 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x558928d9d510 <col:9> 'int' 0
| |-EnumConstantDecl 0x558928d9d5e0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558928d9d918 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928d9d5c0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x558928d9d5a0 <col:14> 'int' 1
| |-EnumConstantDecl 0x558928d9d670 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558928d9d930 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928d9d650 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x558928d9d630 <col:14> 'int' 2
| |-EnumConstantDecl 0x558928d9d700 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558928d9d948 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928d9d6e0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x558928d9d6c0 <col:14> 'int' 3
| |-EnumConstantDecl 0x558928d9d790 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558928d9d960 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928d9d770 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x558928d9d750 <col:13> 'int' 4
| |-EnumConstantDecl 0x558928d9d820 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x558928d9d978 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928d9d800 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x558928d9d7e0 <col:13> 'int' 5
| `-EnumConstantDecl 0x558928d9d8b0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x558928d9d990 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558928d9d890 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x558928d9d870 <col:14> 'int' 6
|-CXXMethodDecl 0x558928d9d9f8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x558928d9da98 <col:20>
| `-OptimizeNoneAttr 0x558928d9daf0 <col:30>
|-CXXMethodDecl 0x558928d9dbe8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x558928d9db28 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x558928d9dc90 <col:20>
| `-OptimizeNoneAttr 0x558928d9dce8 <col:30>
|-CXXMethodDecl 0x558928d9dd58 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x558928d9de80 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x558928d9dff8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x558928d9df30 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x558928d9e0c0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x558928d9e188 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x558928d9e2c8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x558928d9e238 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x558928d9e3c0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x558928d9e4c0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x558928d9e6c0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928d9e4a0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x558928d9e480 <col:23> 'int' 0
| |-EnumConstantDecl 0x558928d9e550 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x558928d9e6d8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928d9e530 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x558928d9e510 <col:45> 'int' 4
| |-EnumConstantDecl 0x558928d9e5e0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x558928d9e6f0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928d9e5c0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x558928d9e5a0 <col:24> 'int' 0
| `-EnumConstantDecl 0x558928d9e670 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x558928d9e708 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558928d9e650 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x558928d9e630 <col:47> 'int' 16
|-CXXMethodDecl 0x558928d9e768 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x558928d9e8d8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x558928d9e818 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x558928d9e980 <col:20>
| `-OptimizeNoneAttr 0x558928d9e9d8 <col:30>
|-CXXMethodDecl 0x558928d9ea28 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x558928db5d80 <col:18, col:36>
|   `-ReturnStmt 0x558928db5d70 <col:20, col:33>
|     `-ImplicitCastExpr 0x558928db5d58 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x558928db5d38 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x558928db5d08 <col:27> '<bound member function type>' ->xanno 0x558928d9ca38
|           `-CXXThisExpr 0x558928db5cf8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x558928d9eb20 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x558928db5e90 <col:30, col:48>
|   `-ReturnStmt 0x558928db5e80 <col:32, col:45>
|     `-ImplicitCastExpr 0x558928db5e68 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x558928db5e48 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x558928db5e18 <col:39> '<bound member function type>' ->xanno 0x558928d9c898
|           `-CXXThisExpr 0x558928db5e08 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x558928d9ec08 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x558928db6028 <col:24, col:50>
|   `-ReturnStmt 0x558928db6018 <col:26, col:47>
|     `-UnaryOperator 0x558928db6000 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x558928db5fe0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x558928db5fc8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558928db5f78 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x558928da5300
|         |   `-CXXMemberCallExpr 0x558928db5f58 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x558928db5f28 <col:34> '<bound member function type>' ->xanno 0x558928d9ca38
|         |       `-CXXThisExpr 0x558928db5f18 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x558928db5fa8 <col:46> 'int' 0
|-CXXMethodDecl 0x558928d9ecf8 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x558928db61c0 <col:36, col:62>
|   `-ReturnStmt 0x558928db61b0 <col:38, col:59>
|     `-UnaryOperator 0x558928db6198 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x558928db6178 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x558928db6160 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558928db6110 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x558928da5300
|         |   `-CXXMemberCallExpr 0x558928db60f0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x558928db60c0 <col:46> '<bound member function type>' ->xanno 0x558928d9c898
|         |       `-CXXThisExpr 0x558928db60b0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x558928db6140 <col:58> 'int' 0
|-CXXMethodDecl 0x558928d9ee18 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x558928db6358 <col:26, col:53>
|   `-ReturnStmt 0x558928db6348 <col:28, col:50>
|     `-UnaryOperator 0x558928db6330 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x558928db6310 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x558928db62f8 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558928db62a8 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x558928da5608
|         |   `-CXXMemberCallExpr 0x558928db6288 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x558928db6258 <col:36> '<bound member function type>' ->xanno 0x558928d9ca38
|         |       `-CXXThisExpr 0x558928db6248 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x558928db62d8 <col:49> 'int' 0
|-CXXMethodDecl 0x558928d9ef38 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x558928db6528 <col:38, col:65>
|   `-ReturnStmt 0x558928db6518 <col:40, col:62>
|     `-UnaryOperator 0x558928db6500 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x558928db64e0 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x558928db64c8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558928db6440 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x558928da5608
|         |   `-CXXMemberCallExpr 0x558928db6420 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x558928db63f0 <col:48> '<bound member function type>' ->xanno 0x558928d9c898
|         |       `-CXXThisExpr 0x558928db63e0 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x558928db6470 <col:61> 'int' 0
|-CXXMethodDecl 0x558928d9f0e8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x558928d9eff0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x558928db6bf8 <col:34, line:463:5>
|   |-ParenExpr 0x558928db6a40 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x558928db6a10 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x558928db6678 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558928db6648 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558928db6598 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558928db6580 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558928db6540 <col:23> 'int' lvalue ParmVar 0x558928d9eff0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558928db6560 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558928db6628 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558928db65f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558928db65b8 <col:33> 'int' lvalue ParmVar 0x558928d9eff0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x558928db6610 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x558928db65d8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558928d9cc80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x558928db66d8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558928db66b8 <col:56> 'int' 0
|   |   `-CallExpr 0x558928db6970 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x558928db6958 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558928db6938 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558928874570 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558928db69b0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928db67c8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x558928db69c8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928db67f8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558928db69e0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558928db6830 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x558928db69f8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558928db6920 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558928db6908 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558928db68c8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x558928db6be8 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x558928db6bd0 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x558928db6bb0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x558928db6b80 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x558928db6b30 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x558928da5300
|         |   `-CXXMemberCallExpr 0x558928db6b10 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x558928db6ae0 <col:9> '<bound member function type>' ->xanno 0x558928d9c898
|         |       `-CXXThisExpr 0x558928db6ad0 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x558928db6b98 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x558928db6b60 <col:21> 'int' lvalue ParmVar 0x558928d9eff0 'i' 'int'
|-CXXMethodDecl 0x558928d9f338 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x558928d9f1a8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x558928d9f220 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x558928db7288 <col:40, line:472:5>
|   |-ParenExpr 0x558928db70a0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x558928db7070 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x558928db6d50 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558928db6d20 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558928db6c70 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558928db6c58 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558928db6c18 <col:23> 'int' lvalue ParmVar 0x558928d9f1a8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558928db6c38 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558928db6d00 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558928db6cd0 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558928db6c90 <col:33> 'int' lvalue ParmVar 0x558928d9f1a8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x558928db6ce8 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x558928db6cb0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558928d9cc80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x558928db6db0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558928db6d90 <col:56> 'int' 0
|   |   `-CallExpr 0x558928db6fd0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x558928db6fb8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558928db6f98 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558928874570 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558928db7010 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928db6e20 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x558928db7028 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928db6e50 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558928db7040 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558928db6e88 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x558928db7058 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558928db6f80 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558928db6f68 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558928db6f28 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x558928db7268 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x558928db7210 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x558928db71e0 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x558928db7190 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x558928da5300
|     | |   `-CXXMemberCallExpr 0x558928db7170 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x558928db7140 <col:2> '<bound member function type>' ->xanno 0x558928d9ca38
|     | |       `-CXXThisExpr 0x558928db7130 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x558928db71f8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x558928db71c0 <col:14> 'int' lvalue ParmVar 0x558928d9f1a8 'i' 'int'
|     `-ImplicitCastExpr 0x558928db7250 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x558928db7230 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x558928d9f220 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x558928d9f4f8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x558928d9f400 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x558928db7a08 <col:36, line:485:5>
|   |-ParenExpr 0x558928db7770 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x558928db7740 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558928db7420 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558928db73f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558928db7300 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558928db72e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558928db72a8 <col:23> 'int' lvalue ParmVar 0x558928d9f400 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558928db72c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558928db73d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558928db73b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558928db7320 <col:33> 'int' lvalue ParmVar 0x558928d9f400 'i' 'int'
|   |   |     `-BinaryOperator 0x558928db7398 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558928db7380 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558928db7340 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558928d9cc80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558928db7360 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x558928db7480 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558928db7460 <col:60> 'int' 0
|   |   `-CallExpr 0x558928db76a0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558928db7688 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558928db7668 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558928874570 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558928db76e0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928db74f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x558928db76f8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928db7528 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558928db7710 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558928db7560 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x558928db7728 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558928db7650 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558928db7638 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558928db75f8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x558928db79f8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x558928db79e0 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x558928db79c8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558928db7998 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x558928db7938 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x558928db7908 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558928db7880 <col:61, col:70> 'char const[48]' lvalue ->c 0x558928da5250
|             |   `-CXXMemberCallExpr 0x558928db7860 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558928db7830 <col:61> '<bound member function type>' ->xanno 0x558928d9c898
|             |       `-CXXThisExpr 0x558928db7820 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558928db7920 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558928db78b0 <col:74> 'int' lvalue ParmVar 0x558928d9f400 'i' 'int'
|-CXXMethodDecl 0x558928d9f748 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x558928d9f5b8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558928d9f630 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x558928db8158 <col:42, line:500:5>
|   |-ParenExpr 0x558928db7ef0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x558928db7ec0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558928db7ba0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558928db7b70 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558928db7a80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558928db7a68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558928db7a28 <col:23> 'int' lvalue ParmVar 0x558928d9f5b8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558928db7a48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558928db7b50 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558928db7b38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558928db7aa0 <col:33> 'int' lvalue ParmVar 0x558928d9f5b8 'i' 'int'
|   |   |     `-BinaryOperator 0x558928db7b18 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558928db7b00 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558928db7ac0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558928d9cc80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558928db7ae0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x558928db7c00 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558928db7be0 <col:60> 'int' 0
|   |   `-CallExpr 0x558928db7e20 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558928db7e08 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558928db7de8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558928874570 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558928db7e60 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928db7c70 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x558928db7e78 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928db7ca8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558928db7e90 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558928db7ce0 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x558928db7ea8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558928db7dd0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558928db7db8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558928db7d78 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x558928db8138 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x558928db80e8 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558928db80b8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x558928db8060 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558928db8030 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558928db7fe0 <col:48, col:57> 'char [48]' lvalue ->c 0x558928da5250
|     |     |   `-CXXMemberCallExpr 0x558928db7fc0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558928db7f90 <col:48> '<bound member function type>' ->xanno 0x558928d9ca38
|     |     |       `-CXXThisExpr 0x558928db7f80 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558928db8048 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558928db8010 <col:61> 'int' lvalue ParmVar 0x558928d9f5b8 'i' 'int'
|     `-ImplicitCastExpr 0x558928db8120 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x558928db8100 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x558928d9f630 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x558928d9f908 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x558928d9f810 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x558928db88b8 <col:35, line:513:5>
|   |-ParenExpr 0x558928db85c8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x558928db8598 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558928db82f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558928db82c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558928db81d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558928db81b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558928db8178 <col:23> 'int' lvalue ParmVar 0x558928d9f810 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558928db8198 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558928db82a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558928db8288 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558928db81f0 <col:33> 'int' lvalue ParmVar 0x558928d9f810 'i' 'int'
|   |   |     `-BinaryOperator 0x558928db8268 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558928db8250 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558928db8210 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558928d9cc80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558928db8230 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x558928db8350 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558928db8330 <col:60> 'int' 0
|   |   `-CallExpr 0x558928db84f8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558928db84e0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558928db84c0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558928874570 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558928db8538 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928db83c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x558928db8550 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928db83f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558928db8568 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558928db8430 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x558928db8580 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558928db84a8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558928db8490 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558928db8450 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x558928db88a8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x558928db8890 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x558928db8878 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558928db8848 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x558928db87c0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x558928db8790 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558928db8740 <col:60, col:69> 'char const[48]' lvalue ->c 0x558928da5250
|             |   `-CXXMemberCallExpr 0x558928db8720 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558928db86f0 <col:60> '<bound member function type>' ->xanno 0x558928d9c898
|             |       `-CXXThisExpr 0x558928db86e0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558928db87a8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558928db8770 <col:73> 'int' lvalue ParmVar 0x558928d9f810 'i' 'int'
|-CXXMethodDecl 0x558928d9fb58 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x558928d9f9c8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558928d9fa40 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x558928db8f98 <col:41, line:528:5>
|   |-ParenExpr 0x558928db8d28 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x558928db8cf8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558928db8a50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558928db8a20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558928db8930 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558928db8918 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558928db88d8 <col:23> 'int' lvalue ParmVar 0x558928d9f9c8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558928db88f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558928db8a00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558928db89e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558928db8950 <col:33> 'int' lvalue ParmVar 0x558928d9f9c8 'i' 'int'
|   |   |     `-BinaryOperator 0x558928db89c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558928db89b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558928db8970 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558928d9cc80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558928db8990 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x558928db8ab0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558928db8a90 <col:60> 'int' 0
|   |   `-CallExpr 0x558928db8c58 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558928db8c40 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558928db8c20 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558928874570 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558928db8c98 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928db8b20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x558928db8cb0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928db8b58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558928db8cc8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558928db8b90 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x558928db8ce0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558928db8c08 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558928db8bf0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558928db8bb0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x558928db8f78 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x558928db8f28 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558928db8ef8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x558928db8e98 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558928db8e68 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558928db8e18 <col:47, col:56> 'char [48]' lvalue ->c 0x558928da5250
|     |     |   `-CXXMemberCallExpr 0x558928db8df8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558928db8dc8 <col:47> '<bound member function type>' ->xanno 0x558928d9ca38
|     |     |       `-CXXThisExpr 0x558928db8db8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558928db8e80 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558928db8e48 <col:60> 'int' lvalue ParmVar 0x558928d9f9c8 'i' 'int'
|     `-ImplicitCastExpr 0x558928db8f60 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x558928db8f40 <col:65> 'int16_t':'short' lvalue ParmVar 0x558928d9fa40 'x' 'int16_t':'short'
|-CXXMethodDecl 0x558928d9fd18 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x558928d9fc20 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x558928db9668 <col:36, line:541:5>
|   |-ParenExpr 0x558928db9408 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x558928db93d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558928db9130 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558928db9100 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558928db9010 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558928db8ff8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558928db8fb8 <col:23> 'int' lvalue ParmVar 0x558928d9fc20 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558928db8fd8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558928db90e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558928db90c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558928db9030 <col:33> 'int' lvalue ParmVar 0x558928d9fc20 'i' 'int'
|   |   |     `-BinaryOperator 0x558928db90a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558928db9090 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558928db9050 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558928d9cc80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558928db9070 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x558928db9190 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558928db9170 <col:60> 'int' 0
|   |   `-CallExpr 0x558928db9338 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558928db9320 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558928db9300 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558928874570 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558928db9378 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928db9200 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x558928db9390 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928db9238 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558928db93a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558928db9270 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x558928db93c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558928db92e8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558928db92d0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558928db9290 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x558928db9658 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x558928db9640 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x558928db9628 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558928db95f8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x558928db95a0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x558928db9570 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558928db9520 <col:61, col:70> 'char const[48]' lvalue ->c 0x558928da5250
|             |   `-CXXMemberCallExpr 0x558928db9500 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558928db94d0 <col:61> '<bound member function type>' ->xanno 0x558928d9c898
|             |       `-CXXThisExpr 0x558928db94c0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558928db9588 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558928db9550 <col:74> 'int' lvalue ParmVar 0x558928d9fc20 'i' 'int'
|-CXXMethodDecl 0x558928d9fee8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x558928d9fdd8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x558928d9fe50 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x558928d9ff98 <col:20>
| `-OptimizeNoneAttr 0x558928d9fff0 <col:30>
|-CXXMethodDecl 0x558928da0128 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x558928da0030 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x558928db9d38 <col:35, line:562:5>
|   |-ParenExpr 0x558928db9ad8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x558928db9aa8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558928db9800 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558928db97d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558928db96e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558928db96c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558928db9688 <col:23> 'int' lvalue ParmVar 0x558928da0030 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558928db96a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558928db97b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558928db9798 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558928db9700 <col:33> 'int' lvalue ParmVar 0x558928da0030 'i' 'int'
|   |   |     `-BinaryOperator 0x558928db9778 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558928db9760 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558928db9720 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558928d9cc80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558928db9740 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x558928db9860 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558928db9840 <col:60> 'int' 0
|   |   `-CallExpr 0x558928db9a08 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558928db99f0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558928db99d0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558928874570 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558928db9a48 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928db98d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x558928db9a60 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928db9908 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558928db9a78 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558928db9940 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x558928db9a90 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558928db99b8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558928db99a0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558928db9960 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x558928db9d28 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x558928db9d10 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x558928db9cf8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558928db9cc8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x558928db9c70 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x558928db9c40 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558928db9bf0 <col:60, col:69> 'char const[48]' lvalue ->c 0x558928da5250
|             |   `-CXXMemberCallExpr 0x558928db9bd0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558928db9ba0 <col:60> '<bound member function type>' ->xanno 0x558928d9c898
|             |       `-CXXThisExpr 0x558928db9b90 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558928db9c58 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558928db9c20 <col:73> 'int' lvalue ParmVar 0x558928da0030 'i' 'int'
|-CXXMethodDecl 0x558928da0338 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x558928da01e8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558928da0260 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x558928dba418 <col:41, line:577:5>
|   |-ParenExpr 0x558928dba1a8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x558928dba178 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558928db9ed0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558928db9ea0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558928db9db0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558928db9d98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558928db9d58 <col:23> 'int' lvalue ParmVar 0x558928da01e8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558928db9d78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558928db9e80 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558928db9e68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558928db9dd0 <col:33> 'int' lvalue ParmVar 0x558928da01e8 'i' 'int'
|   |   |     `-BinaryOperator 0x558928db9e48 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558928db9e30 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558928db9df0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558928d9cc80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558928db9e10 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x558928db9f30 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558928db9f10 <col:60> 'int' 0
|   |   `-CallExpr 0x558928dba0d8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558928dba0c0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558928dba0a0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558928874570 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558928dba118 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928db9fa0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x558928dba130 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928db9fd8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558928dba148 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558928dba010 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x558928dba160 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558928dba088 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558928dba070 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558928dba030 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x558928dba3f8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x558928dba3a8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558928dba378 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x558928dba318 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558928dba2e8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558928dba298 <col:47, col:56> 'char [48]' lvalue ->c 0x558928da5250
|     |     |   `-CXXMemberCallExpr 0x558928dba278 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558928dba248 <col:47> '<bound member function type>' ->xanno 0x558928d9ca38
|     |     |       `-CXXThisExpr 0x558928dba238 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558928dba300 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558928dba2c8 <col:60> 'int' lvalue ParmVar 0x558928da01e8 'i' 'int'
|     `-ImplicitCastExpr 0x558928dba3e0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x558928dba3c0 <col:65> 'int32_t':'int' lvalue ParmVar 0x558928da0260 'x' 'int32_t':'int'
|-CXXMethodDecl 0x558928da04f8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x558928da0400 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x558928dbab48 <col:36, line:591:5>
|   |-ParenExpr 0x558928dba888 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x558928dba858 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558928dba5b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558928dba580 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558928dba490 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558928dba478 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558928dba438 <col:23> 'int' lvalue ParmVar 0x558928da0400 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558928dba458 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558928dba560 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558928dba548 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558928dba4b0 <col:33> 'int' lvalue ParmVar 0x558928da0400 'i' 'int'
|   |   |     `-BinaryOperator 0x558928dba528 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558928dba510 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558928dba4d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558928d9cc80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558928dba4f0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x558928dba610 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558928dba5f0 <col:60> 'int' 0
|   |   `-CallExpr 0x558928dba7b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558928dba7a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558928dba780 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558928874570 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558928dba7f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928dba680 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x558928dba810 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928dba6b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558928dba828 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558928dba6f0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x558928dba840 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558928dba768 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558928dba750 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558928dba710 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x558928dbab38 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x558928dbab20 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x558928dbab08 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558928dbaad8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x558928dbaa50 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x558928dbaa20 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558928dba9d0 <col:61, col:70> 'char const[48]' lvalue ->c 0x558928da5250
|             |   `-CXXMemberCallExpr 0x558928dba9b0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558928dba980 <col:61> '<bound member function type>' ->xanno 0x558928d9c898
|             |       `-CXXThisExpr 0x558928dba970 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558928dbaa38 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558928dbaa00 <col:74> 'int' lvalue ParmVar 0x558928da0400 'i' 'int'
|-CXXMethodDecl 0x558928da0748 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x558928da05b8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558928da0630 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x558928dbb228 <col:42, line:606:5>
|   |-ParenExpr 0x558928dbafb8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x558928dbaf88 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x558928dbace0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558928dbacb0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558928dbabc0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558928dbaba8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558928dbab68 <col:23> 'int' lvalue ParmVar 0x558928da05b8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558928dbab88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558928dbac90 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x558928dbac78 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558928dbabe0 <col:33> 'int' lvalue ParmVar 0x558928da05b8 'i' 'int'
|   |   |     `-BinaryOperator 0x558928dbac58 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558928dbac40 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558928dbac00 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558928d9cc80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x558928dbac20 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x558928dbad40 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558928dbad20 <col:60> 'int' 0
|   |   `-CallExpr 0x558928dbaee8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x558928dbaed0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558928dbaeb0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558928874570 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558928dbaf28 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928dbadb0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x558928dbaf40 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928dbade8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558928dbaf58 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558928dbae20 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x558928dbaf70 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558928dbae98 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558928dbae80 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558928dbae40 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x558928dbb208 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x558928dbb1b8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558928dbb188 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x558928dbb128 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558928dbb0f8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558928dbb0a8 <col:48, col:57> 'char [48]' lvalue ->c 0x558928da5250
|     |     |   `-CXXMemberCallExpr 0x558928dbb088 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558928dbb058 <col:48> '<bound member function type>' ->xanno 0x558928d9ca38
|     |     |       `-CXXThisExpr 0x558928dbb048 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558928dbb110 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558928dbb0d8 <col:61> 'int' lvalue ParmVar 0x558928da05b8 'i' 'int'
|     `-ImplicitCastExpr 0x558928dbb1f0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x558928dbb1d0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x558928da0630 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x558928da08e0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x558928da0810 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x558928dbba98 <col:33, line:620:5>
|   |-ParenExpr 0x558928dbb810 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x558928dbb7e0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x558928dbb430 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558928dbb400 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558928dbb2a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558928dbb288 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558928dbb248 <col:23> 'int' lvalue ParmVar 0x558928da0810 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558928dbb268 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558928dbb3e0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x558928dbb3c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558928dbb2c0 <col:33> 'int' lvalue ParmVar 0x558928da0810 'i' 'int'
|   |   |     `-BinaryOperator 0x558928dbb3a8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558928dbb390 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558928dbb2e0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558928d9cc80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x558928dbb368 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x558928dbb350 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x558928dbb318 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x558928dbb490 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558928dbb470 <col:79> 'int' 0
|   |   `-CallExpr 0x558928dbb740 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x558928dbb728 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558928dbb708 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558928874570 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558928dbb780 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928dbb578 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x558928dbb798 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928dbb5c0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558928dbb7b0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558928dbb5f8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x558928dbb7c8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558928dbb6f0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558928dbb6d8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558928dbb698 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x558928dbba88 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x558928dbba70 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x558928dbba58 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x558928dbba28 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x558928dbb9a0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x558928dbb970 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x558928dbb920 <col:67, col:76> 'char const[48]' lvalue ->c 0x558928da5250
|             |   `-CXXMemberCallExpr 0x558928dbb900 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x558928dbb8d0 <col:67> '<bound member function type>' ->xanno 0x558928d9c898
|             |       `-CXXThisExpr 0x558928dbb8c0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x558928dbb988 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x558928dbb950 <col:80> 'int' lvalue ParmVar 0x558928da0810 'i' 'int'
|-CXXMethodDecl 0x558928da0af8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x558928da09a0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x558928da0a20 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x558928dbc2c0 <col:45, line:635:5>
|   |-ParenExpr 0x558928dbc008 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x558928dbbfd8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x558928dbbca0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x558928dbbc70 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x558928dbbb10 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x558928dbbaf8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x558928dbbab8 <col:23> 'int' lvalue ParmVar 0x558928da09a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x558928dbbad8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x558928dbbc50 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x558928dbbc38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x558928dbbb30 <col:33> 'int' lvalue ParmVar 0x558928da09a0 'i' 'int'
|   |   |     `-BinaryOperator 0x558928dbbc18 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x558928dbbc00 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x558928dbbb50 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x558928d9cc80 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x558928dbbbd8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x558928dbbbc0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x558928dbbb88 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x558928dbbd00 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x558928dbbce0 <col:79> 'int' 0
|   |   `-CallExpr 0x558928dbbf38 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x558928dbbf20 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x558928dbbf00 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x558928874570 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x558928dbbf78 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928dbbd70 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x558928dbbf90 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x558928dbbdb8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x558928dbbfa8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x558928dbbdf0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x558928dbbfc0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x558928dbbee8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x558928dbbed0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x558928dbbe88 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x558928dbc2a0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x558928dbc208 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x558928dbc1d8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x558928dbc178 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x558928dbc148 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x558928dbc0f8 <col:54, col:63> 'char [48]' lvalue ->c 0x558928da5250
|     |     |   `-CXXMemberCallExpr 0x558928dbc0d8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x558928dbc0a8 <col:54> '<bound member function type>' ->xanno 0x558928d9ca38
|     |     |       `-CXXThisExpr 0x558928dbc098 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x558928dbc160 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x558928dbc128 <col:67> 'int' lvalue ParmVar 0x558928da09a0 'i' 'int'
|     `-CXXConstCastExpr 0x558928dbc270 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x558928dbc258 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x558928dbc220 <col:91> 'const void *' lvalue ParmVar 0x558928da0a20 'x' 'const void *'
|-CXXMethodDecl 0x558928da0bc8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x558928dbc348 <col:34, line:640:5>
|   `-ReturnStmt 0x558928dbc338 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x558928dbc320 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x558928dbc2f0 <col:16> 'Packet *' lvalue ->_data_packet 0x558928da5d98
|         `-CXXThisExpr 0x558928dbc2e0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x558928da0d08 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x558928da0c78 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x558928db5488 <col:46> 'bool' true
|-CXXMethodDecl 0x558928da0e88 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x558928da0dc0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x558928da0f30 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x558928da16e0 <line:660:22> "" ""
| |-EnumConstantDecl 0x558928da1030 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558928da1750 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928da1010 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x558928da0ff0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x558928d96130 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x558928da10c0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558928da1768 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928da10a0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x558928da1080 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x558928d961c0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x558928da1150 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558928da1780 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928da1130 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x558928da1110 <col:21> 'int' 0
| |-EnumConstantDecl 0x558928da11e0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558928da1798 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928da11c0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x558928da11a0 <col:19> 'int' 16
| |-EnumConstantDecl 0x558928da1270 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558928da17b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928da1250 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x558928da1230 <col:21> 'int' 16
| |-EnumConstantDecl 0x558928da1300 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558928da17c8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928da12e0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x558928da12c0 <col:19> 'int' 32
| |-EnumConstantDecl 0x558928da1390 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558928da17e0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928da1370 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x558928da1350 <col:19> 'int' EnumConstant 0x558928da11e0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x558928da1420 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558928da17f8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928da1400 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x558928da13e0 <col:19> 'int' EnumConstant 0x558928da1300 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x558928da14f0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558928da1810 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928da14d0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x558928da14b0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x558928da1470 <col:23> 'int' EnumConstant 0x558928da1420 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x558928da1490 <col:40> 'int' 2
| |-EnumConstantDecl 0x558928da15c0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x558928da1828 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928da15a0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x558928da1580 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x558928da1540 <col:23> 'int' EnumConstant 0x558928da1420 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x558928da1560 <col:40> 'int' 4
| `-EnumConstantDecl 0x558928da1690 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x558928da1840 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558928da1670 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x558928da1650 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x558928da1610 <col:23> 'int' EnumConstant 0x558928da1420 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x558928da1630 <col:40> 'int' 8
|-CXXMethodDecl 0x558928da1880 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x558928da1920 <col:68> "" ""
|-CXXMethodDecl 0x558928da19b8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x558928da1a58 <col:45> "" ""
|-CXXMethodDecl 0x558928da1af0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x558928da1b90 <col:57> "" ""
|-CXXMethodDecl 0x558928da1c28 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x558928da1cc8 <col:45> "" ""
|-CXXMethodDecl 0x558928da1d60 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x558928da1e00 <col:57> "" ""
|-CXXMethodDecl 0x558928da1e90 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x558928da1f30 <col:51> "" ""
|-CXXMethodDecl 0x558928da1fc0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x558928da2060 <col:63> "" ""
|-CXXMethodDecl 0x558928da20f0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x558928da2190 <col:53> "" ""
|-CXXMethodDecl 0x558928da2220 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x558928da22c0 <col:65> "" ""
|-CXXMethodDecl 0x558928da23d8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x558928da2348 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x558928da2480 <col:61> "" ""
|-CXXMethodDecl 0x558928da2618 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x558928da2508 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x558928da2580 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x558928da26c8 <col:67> "" ""
|-CXXMethodDecl 0x558928da27e0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x558928da2750 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x558928da2888 <col:63> "" ""
|-CXXMethodDecl 0x558928da2a20 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x558928da2910 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x558928da2988 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x558928da2ad0 <col:69> "" ""
|-CXXMethodDecl 0x558928da2be8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x558928da2b58 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x558928da2c90 <col:63> "" ""
|-CXXMethodDecl 0x558928da2e28 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x558928da2d18 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x558928da2d90 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558928da2ed8 <col:69> "" ""
|-CXXMethodDecl 0x558928da2ff0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x558928da2f60 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x558928da3098 <col:62> "" ""
|-CXXMethodDecl 0x558928da3230 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x558928da3120 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x558928da3198 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x558928da32e0 <col:68> "" ""
|-CXXMethodDecl 0x558928da33f8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x558928da3368 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x558928da34a0 <col:63> "" ""
|-CXXMethodDecl 0x558928da3638 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x558928da3528 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x558928da35a0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x558928da36e8 <col:69> "" ""
|-CXXMethodDecl 0x558928da3778 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x558928da3818 <col:64> "" ""
|-CXXMethodDecl 0x558928da38a8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x558928da3948 <col:52> "" ""
|-CXXMethodDecl 0x558928da39d8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x558928da3a78 <col:67> "" ""
|-CXXMethodDecl 0x558928da3b08 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x558928da3ba8 <col:55> "" ""
|-CXXMethodDecl 0x558928da3cc0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x558928da3c30 <col:32> col:35 'int'
| `-DeprecatedAttr 0x558928da3d68 <col:58> "" ""
|-CXXMethodDecl 0x558928da3f00 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x558928da3df0 <col:33> col:36 'int'
| |-ParmVarDecl 0x558928da3e68 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x558928da3fb0 <col:62> "" ""
|-CXXMethodDecl 0x558928da40c8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x558928da4038 <col:32> col:35 'int'
| `-DeprecatedAttr 0x558928da4170 <col:58> "" ""
|-CXXMethodDecl 0x558928da4308 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x558928da41f8 <col:33> col:36 'int'
| |-ParmVarDecl 0x558928da4270 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x558928da43b8 <col:62> "" ""
|-CXXMethodDecl 0x558928da44d0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x558928da4440 <col:34> col:37 'int'
| `-DeprecatedAttr 0x558928da4578 <col:60> "" ""
|-CXXMethodDecl 0x558928da4710 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x558928da4600 <col:34> col:37 'int'
| |-ParmVarDecl 0x558928da4678 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x558928da47c0 <col:64> "" ""
|-CXXMethodDecl 0x558928da48d8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x558928da4848 <col:32> col:35 'int'
| `-DeprecatedAttr 0x558928da4980 <col:58> "" ""
|-CXXMethodDecl 0x558928da4b18 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x558928da4a08 <col:33> col:36 'int'
| |-ParmVarDecl 0x558928da4a80 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x558928da4bc8 <col:62> "" ""
|-CXXMethodDecl 0x558928da4ce0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x558928da4c50 <col:33> col:36 'int'
| `-DeprecatedAttr 0x558928da4d88 <col:59> "" ""
|-CXXMethodDecl 0x558928da4f20 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x558928da4e10 <col:33> col:36 'int'
| |-ParmVarDecl 0x558928da4e88 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x558928da4fd0 <col:63> "" ""
|-AccessSpecDecl 0x558928da5040 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x558928da5068 prev 0x558928d9c770 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558928da5160 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x558928da5250 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x558928da5300 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x558928da5488 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x558928da5608 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x558928da5788 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x558928dbc4c8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x558928dbcdc8 <col:11>
| |-CXXDestructorDecl 0x558928dbc630 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x558928dbc768 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x558928dbc768
| | `-ParmVarDecl 0x558928dbc878 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x558928dbc918 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x558928dbc918
| | `-ParmVarDecl 0x558928dbca28 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x558928dbf758 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x558928dbf868 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x558928dbfae8 <col:11>
| |   `-ReturnStmt 0x558928dbfad8 <col:11>
| |     `-UnaryOperator 0x558928dbfac0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x558928dbfab0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x558928dbf8d8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x558928dbf8d8
|   `-ParmVarDecl 0x558928dbf9e8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x558928da57f0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558928da5908 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x558928da59a8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x558928da5a10 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x558928da5a78 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x558928da5ae0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x558928da5b40 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x558928da5c00 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x558928da5c60 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x558928da5cc0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x558928dbc3d8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x558928da59a8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x558928dbcdd8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x558928dbce30 <col:12>
| |-CXXConstructorDecl 0x558928dbca98 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x558928dbca98
| | `-ParmVarDecl 0x558928dbcba8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x558928dbcc48 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x558928dbcc48
| | `-ParmVarDecl 0x558928dbcd58 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x558928dbee40 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x558928da5d38 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x558928da5d98 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x558928da5e00 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x558928da5e68 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x558928da5ed0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x558928da5f38 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x558928da5f98 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x558928da5ff8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x558928da6060 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x558928da60e8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x558928da5d38 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x558928dbc370 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x558928da5f98 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x558928dbce40 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x558928dbcea0 <col:21, line:755:5>
|-CXXConstructorDecl 0x558928da6288 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x558928da61c8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x558928db4620 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x558928db4808 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x558928db4710 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x558928db4ad8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x558928db48c0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558928db4938 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x558928db49b0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558928db4cf8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x558928db4ba8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x558928db4c20 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x558928db4fc8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x558928db4db8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x558928db4e30 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x558928db4ea8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x558928db5120 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x558928db5090 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558928db5268 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x558928db51d8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x558928db5360 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928f1a138 <../elements/local/tcpbuffer.hh:43:3, line:58:3> line:43:9 referenced class TCPBufferElt definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558928f1a258 <col:3, col:9> col:9 implicit referenced class TCPBufferElt
|-AccessSpecDecl 0x558928f1a2e8 <line:44:3, col:10> col:3 private
|-FieldDecl 0x558928f1a320 <line:45:5, col:13> col:13 referenced _packet 'Packet *'
|-FieldDecl 0x558928f1a3e0 <line:46:5, col:20> col:20 referenced _chain_ptr 'TCPBuffer::TCPBufferElt **'
|-FieldDecl 0x558928f1a440 <line:47:5, col:19> col:19 referenced _next 'TCPBuffer::TCPBufferElt *'
|-FieldDecl 0x558928f1a4a0 <line:48:5, col:19> col:19 referenced _prev 'TCPBuffer::TCPBufferElt *'
|-AccessSpecDecl 0x558928f1a4f0 <line:50:3, col:9> col:3 public
|-CXXConstructorDecl 0x558928f1a698 <line:51:5, col:49> col:5 TCPBufferElt 'void (TCPBuffer::TCPBufferElt **, Packet *)'
| |-ParmVarDecl 0x558928f1a530 <col:18, col:33> col:33 chain 'TCPBuffer::TCPBufferElt **'
| `-ParmVarDecl 0x558928f1a5a8 <col:40, col:48> col:48 p 'Packet *'
|-CXXMethodDecl 0x558928f1a7c8 <line:53:5, col:48> col:19 used next 'TCPBuffer::TCPBufferElt *() const'
| `-CompoundStmt 0x558928f1c590 <col:32, col:48>
|   `-ReturnStmt 0x558928f1c580 <col:34, col:41>
|     `-ImplicitCastExpr 0x558928f1c568 <col:41> 'TCPBuffer::TCPBufferElt *' <LValueToRValue>
|       `-MemberExpr 0x558928f1c538 <col:41> 'TCPBuffer::TCPBufferElt *const' lvalue ->_next 0x558928f1a440
|         `-CXXThisExpr 0x558928f1c528 <col:41> 'const TCPBuffer::TCPBufferElt *' implicit this
|-CXXMethodDecl 0x558928f1a888 <line:54:5, col:48> col:19 prev 'TCPBuffer::TCPBufferElt *() const'
| `-CompoundStmt 0x558928f1c610 <col:32, col:48>
|   `-ReturnStmt 0x558928f1c600 <col:34, col:41>
|     `-ImplicitCastExpr 0x558928f1c5e8 <col:41> 'TCPBuffer::TCPBufferElt *' <LValueToRValue>
|       `-MemberExpr 0x558928f1c5b8 <col:41> 'TCPBuffer::TCPBufferElt *const' lvalue ->_prev 0x558928f1a4a0
|         `-CXXThisExpr 0x558928f1c5a8 <col:41> 'const TCPBuffer::TCPBufferElt *' implicit this
|-CXXMethodDecl 0x558928f1a948 <line:55:5, col:46> col:13 used packet 'Packet *() const'
| `-CompoundStmt 0x558928f1c690 <col:28, col:46>
|   `-ReturnStmt 0x558928f1c680 <col:30, col:37>
|     `-ImplicitCastExpr 0x558928f1c668 <col:37> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x558928f1c638 <col:37> 'Packet *const' lvalue ->_packet 0x558928f1a320
|         `-CXXThisExpr 0x558928f1c628 <col:37> 'const TCPBuffer::TCPBufferElt *' implicit this
|-CXXMethodDecl 0x558928f1aa08 <line:57:5, col:22> col:13 kill_elt 'Packet *()'
|-CXXConstructorDecl 0x558928f1c988 <line:43:9> col:9 implicit constexpr TCPBufferElt 'void (const TCPBuffer::TCPBufferElt &)' inline default trivial noexcept-unevaluated 0x558928f1c988
| `-ParmVarDecl 0x558928f1ca98 <col:9> col:9 'const TCPBuffer::TCPBufferElt &'
|-CXXConstructorDecl 0x558928f1cb38 <col:9> col:9 implicit constexpr TCPBufferElt 'void (TCPBuffer::TCPBufferElt &&)' inline default trivial noexcept-unevaluated 0x558928f1cb38
| `-ParmVarDecl 0x558928f1cc48 <col:9> col:9 'TCPBuffer::TCPBufferElt &&'
`-CXXDestructorDecl 0x558928f1dea0 <col:9> col:9 implicit ~TCPBufferElt 'void ()' inline default trivial noexcept-unevaluated 0x558928f1dea0

Layout: <CGRecordLayout
  LLVMType:%"class.TCPBuffer::TCPBufferElt" = type { %class.Packet*, %"class.TCPBuffer::TCPBufferElt"**, %"class.TCPBuffer::TCPBufferElt"*, %"class.TCPBuffer::TCPBufferElt"* }
  NonVirtualBaseLLVMType:%"class.TCPBuffer::TCPBufferElt" = type { %class.Packet*, %"class.TCPBuffer::TCPBufferElt"**, %"class.TCPBuffer::TCPBufferElt"*, %"class.TCPBuffer::TCPBufferElt"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928f19e28 <../elements/local/tcpbuffer.hh:39:1, line:97:1> line:39:7 class TCPBuffer definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x558928f19f88 <col:1, col:7> col:7 implicit referenced class TCPBuffer
|-AccessSpecDecl 0x558928f1a018 <line:40:1, col:8> col:1 private
|-VarDecl 0x558928f1a058 <line:41:3, col:32> col:20 _capacity 'const int' static cinit
| `-IntegerLiteral 0x558928f1a0c0 <col:32> 'int' 128
|-CXXRecordDecl 0x558928f1a138 <line:43:3, line:58:3> line:43:9 referenced class TCPBufferElt definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558928f1a258 <col:3, col:9> col:9 implicit referenced class TCPBufferElt
| |-AccessSpecDecl 0x558928f1a2e8 <line:44:3, col:10> col:3 private
| |-FieldDecl 0x558928f1a320 <line:45:5, col:13> col:13 referenced _packet 'Packet *'
| |-FieldDecl 0x558928f1a3e0 <line:46:5, col:20> col:20 referenced _chain_ptr 'TCPBuffer::TCPBufferElt **'
| |-FieldDecl 0x558928f1a440 <line:47:5, col:19> col:19 referenced _next 'TCPBuffer::TCPBufferElt *'
| |-FieldDecl 0x558928f1a4a0 <line:48:5, col:19> col:19 referenced _prev 'TCPBuffer::TCPBufferElt *'
| |-AccessSpecDecl 0x558928f1a4f0 <line:50:3, col:9> col:3 public
| |-CXXConstructorDecl 0x558928f1a698 <line:51:5, col:49> col:5 TCPBufferElt 'void (TCPBuffer::TCPBufferElt **, Packet *)'
| | |-ParmVarDecl 0x558928f1a530 <col:18, col:33> col:33 chain 'TCPBuffer::TCPBufferElt **'
| | `-ParmVarDecl 0x558928f1a5a8 <col:40, col:48> col:48 p 'Packet *'
| |-CXXMethodDecl 0x558928f1a7c8 <line:53:5, col:48> col:19 used next 'TCPBuffer::TCPBufferElt *() const'
| | `-CompoundStmt 0x558928f1c590 <col:32, col:48>
| |   `-ReturnStmt 0x558928f1c580 <col:34, col:41>
| |     `-ImplicitCastExpr 0x558928f1c568 <col:41> 'TCPBuffer::TCPBufferElt *' <LValueToRValue>
| |       `-MemberExpr 0x558928f1c538 <col:41> 'TCPBuffer::TCPBufferElt *const' lvalue ->_next 0x558928f1a440
| |         `-CXXThisExpr 0x558928f1c528 <col:41> 'const TCPBuffer::TCPBufferElt *' implicit this
| |-CXXMethodDecl 0x558928f1a888 <line:54:5, col:48> col:19 prev 'TCPBuffer::TCPBufferElt *() const'
| | `-CompoundStmt 0x558928f1c610 <col:32, col:48>
| |   `-ReturnStmt 0x558928f1c600 <col:34, col:41>
| |     `-ImplicitCastExpr 0x558928f1c5e8 <col:41> 'TCPBuffer::TCPBufferElt *' <LValueToRValue>
| |       `-MemberExpr 0x558928f1c5b8 <col:41> 'TCPBuffer::TCPBufferElt *const' lvalue ->_prev 0x558928f1a4a0
| |         `-CXXThisExpr 0x558928f1c5a8 <col:41> 'const TCPBuffer::TCPBufferElt *' implicit this
| |-CXXMethodDecl 0x558928f1a948 <line:55:5, col:46> col:13 used packet 'Packet *() const'
| | `-CompoundStmt 0x558928f1c690 <col:28, col:46>
| |   `-ReturnStmt 0x558928f1c680 <col:30, col:37>
| |     `-ImplicitCastExpr 0x558928f1c668 <col:37> 'Packet *' <LValueToRValue>
| |       `-MemberExpr 0x558928f1c638 <col:37> 'Packet *const' lvalue ->_packet 0x558928f1a320
| |         `-CXXThisExpr 0x558928f1c628 <col:37> 'const TCPBuffer::TCPBufferElt *' implicit this
| |-CXXMethodDecl 0x558928f1aa08 <line:57:5, col:22> col:13 kill_elt 'Packet *()'
| |-CXXConstructorDecl 0x558928f1c988 <line:43:9> col:9 implicit constexpr TCPBufferElt 'void (const TCPBuffer::TCPBufferElt &)' inline default trivial noexcept-unevaluated 0x558928f1c988
| | `-ParmVarDecl 0x558928f1ca98 <col:9> col:9 'const TCPBuffer::TCPBufferElt &'
| |-CXXConstructorDecl 0x558928f1cb38 <col:9> col:9 implicit constexpr TCPBufferElt 'void (TCPBuffer::TCPBufferElt &&)' inline default trivial noexcept-unevaluated 0x558928f1cb38
| | `-ParmVarDecl 0x558928f1cc48 <col:9> col:9 'TCPBuffer::TCPBufferElt &&'
| `-CXXDestructorDecl 0x558928f1dea0 <col:9> col:9 implicit ~TCPBufferElt 'void ()' inline default trivial noexcept-unevaluated 0x558928f1dea0
|-FieldDecl 0x558928f1aad0 <line:60:3, col:17> col:17 referenced _chain 'TCPBuffer::TCPBufferElt *'
|-FieldDecl 0x558928f1ab38 <line:61:3, col:12> col:12 _initial_seq 'unsigned int'
|-FieldDecl 0x558928f1aba0 <line:62:3, col:12> col:12 referenced _first_seq 'unsigned int'
|-FieldDecl 0x558928f1ac00 <line:63:3, col:8> col:8 _start_push 'bool'
|-FieldDecl 0x558928f1ac60 <line:64:3, col:8> col:8 referenced _start_pull 'bool'
|-FieldDecl 0x558928f1acc0 <line:66:3, col:8> col:8 _skip 'bool'
|-CXXMethodDecl 0x558928f1ad58 <line:67:3, col:13> col:8 dump 'void ()'
|-AccessSpecDecl 0x558928f1adf8 <line:69:1, col:7> col:1 public
|-CXXConstructorDecl 0x558928f1ae58 <line:71:3, col:13> col:3 TCPBuffer 'void ()'
|-CXXDestructorDecl 0x558928f1af48 <line:72:3, col:14> col:3 ~TCPBuffer 'void ()' noexcept-unevaluated 0x558928f1af48
| `-Overrides: [ 0x558928deb278 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x558928f1b080 <line:74:3, col:56> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x558928dec6a8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x558928f1c6f8 <col:34, col:56>
|   `-ReturnStmt 0x558928f1c6e8 <col:36, col:43>
|     `-ImplicitCastExpr 0x558928f1c6d0 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x558928f1c6a8 <col:43> 'const char [10]' lvalue "TCPBuffer"
|-CXXMethodDecl 0x558928f1b148 <line:75:3, col:54> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x558928dec770 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x558928f1c758 <col:34, col:54>
|   `-ReturnStmt 0x558928f1c748 <col:36, col:43>
|     `-ImplicitCastExpr 0x558928f1c730 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x558928f1c710 <col:43> 'const char []' lvalue Var 0x558928dec9f0 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x558928f1b210 <line:76:3, col:57> col:15 processing 'const char *() const'
| |-Overrides: [ 0x558928decb08 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x558928f1c7b8 <col:34, col:57>
|   `-ReturnStmt 0x558928f1c7a8 <col:36, col:43>
|     `-ImplicitCastExpr 0x558928f1c790 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x558928f1c770 <col:43> 'const char []' lvalue Var 0x558928decd60 'PUSH_TO_PULL' 'const char []'
|-CXXMethodDecl 0x558928f1b358 <line:78:3, col:32> col:7 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x558928dee020 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x558928f1b2c0 <col:18, col:31> col:32 'ErrorHandler *'
|-CXXMethodDecl 0x558928f1b4a0 <line:79:3, col:28> col:8 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x558928dee838 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x558928f1b410 <col:16> col:28 'Element::CleanupStage'
|-CXXMethodDecl 0x558928f1b780 <line:80:3, col:57> col:7 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x558928deddd0 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x558928f1b630 <col:17, col:33> col:33 conf 'Vector<String> &'
| `-ParmVarDecl 0x558928f1b6a8 <col:39, col:53> col:53 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558928f1b958 <line:82:3, col:26> col:8 push 'void (int, Packet *)'
| |-Overrides: [ 0x558928deb548 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x558928f1b848 <col:13> col:16 'int'
| `-ParmVarDecl 0x558928f1b8c0 <col:18, col:25> col:26 'Packet *'
|-CXXMethodDecl 0x558928f1bab0 <line:83:3, col:19> col:11 pull 'Packet *(int)'
| |-Overrides: [ 0x558928deb6d8 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x558928f1ba20 <col:16> col:19 'int'
|-CXXMethodDecl 0x558928f1bc38 <line:88:3, col:44> col:8 first_missing_seq_no 'bool (unsigned int &)'
| `-ParmVarDecl 0x558928f1bb70 <col:29, col:39> col:39 seqno 'unsigned int &'
|-CXXMethodDecl 0x558928f1be48 <line:93:3, col:57> col:8 used next_missing_seq_no 'bool (unsigned int, unsigned int &)'
| |-ParmVarDecl 0x558928f1bcf8 <col:28, col:37> col:37 pos 'unsigned int'
| `-ParmVarDecl 0x558928f1bd78 <col:42, col:52> col:52 seqno 'unsigned int &'
|-CXXMethodDecl 0x558928f1bfd0 <line:95:3, col:34> col:19 used seqlen 'unsigned int (Packet *)' static
| `-ParmVarDecl 0x558928f1bf08 <col:26, col:33> col:34 'Packet *'
|-CXXMethodDecl 0x558928f1c120 <line:96:3, col:33> col:19 used seqno 'unsigned int (Packet *)' static
| `-ParmVarDecl 0x558928f1c088 <col:25, col:32> col:33 'Packet *'
|-CXXConstructorDecl 0x558928f1c1f8 <line:39:7> col:7 implicit TCPBuffer 'void (const TCPBuffer &)' inline default_delete noexcept-unevaluated 0x558928f1c1f8
| `-ParmVarDecl 0x558928f1c308 <col:7> col:7 'const TCPBuffer &'
`-CXXMethodDecl 0x558928f1c3a8 <col:7> col:7 implicit operator= 'TCPBuffer &(const TCPBuffer &)' inline default_delete noexcept-unevaluated 0x558928f1c3a8
  `-ParmVarDecl 0x558928f1c4b8 <col:7> col:7 'const TCPBuffer &'

Layout: <CGRecordLayout
  LLVMType:%class.TCPBuffer = type <{ %class.Element.base, [4 x i8], %"class.TCPBuffer::TCPBufferElt"*, i32, i32, i8, i8, i8, [5 x i8] }>
  NonVirtualBaseLLVMType:%class.TCPBuffer.base = type <{ %class.Element.base, [4 x i8], %"class.TCPBuffer::TCPBufferElt"*, i32, i32, i8, i8, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928c026a0 <../elements/local/tcpack.hh:47:1, line:77:1> line:47:7 class TCPAck definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x558928c027f8 <col:1, col:7> col:7 implicit referenced class TCPAck
|-AccessSpecDecl 0x558928c02888 <line:48:1, col:8> col:1 private
|-FieldDecl 0x558928c028c0 <line:49:3, col:9> col:9 _timer 'Timer'
|-FieldDecl 0x558928c02920 <line:51:3, col:8> col:8 _synack 'bool'
|-FieldDecl 0x558928c02980 <line:52:3, col:8> col:8 _needack 'bool'
|-FieldDecl 0x558928c029e8 <line:53:3, col:12> col:12 _ack_nxt 'unsigned int'
|-FieldDecl 0x558928c02a48 <line:55:3, col:14> col:14 _tcpbuffer 'TCPBuffer *'
|-FieldDecl 0x558928c02ab0 <line:57:3, col:12> col:12 _ackdelay_ms 'unsigned int'
|-CXXMethodDecl 0x558928c02c08 <line:59:3, col:21> col:8 iput 'bool (Packet *)'
| `-ParmVarDecl 0x558928c02b10 <col:13, col:20> col:21 'Packet *'
|-CXXMethodDecl 0x558928c02d50 <line:60:3, col:21> col:8 oput 'bool (Packet *)'
| `-ParmVarDecl 0x558928c02cc0 <col:13, col:20> col:21 'Packet *'
|-CXXMethodDecl 0x558928c02e18 <line:61:3, col:17> col:8 send_ack 'void ()'
|-AccessSpecDecl 0x558928c02eb8 <line:63:1, col:7> col:1 public
|-CXXConstructorDecl 0x558928c02f18 <line:64:3, col:10> col:3 TCPAck 'void ()'
|-CXXDestructorDecl 0x558928c03008 <line:65:3, col:11> col:3 ~TCPAck 'void ()' noexcept-unevaluated 0x558928c03008
| `-Overrides: [ 0x558928deb278 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x558928c03140 <line:67:3, col:53> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x558928dec6a8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x558928c03fb0 <col:34, col:53>
|   `-ReturnStmt 0x558928c03fa0 <col:36, col:43>
|     `-ImplicitCastExpr 0x558928c03f88 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x558928c03f68 <col:43> 'const char [7]' lvalue "TCPAck"
|-CXXMethodDecl 0x558928c03208 <line:68:3, col:50> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x558928dec770 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x558928c04010 <col:34, col:50>
|   `-ReturnStmt 0x558928c04000 <col:36, col:43>
|     `-ImplicitCastExpr 0x558928c03fe8 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x558928c03fc8 <col:43> 'const char [4]' lvalue "2/3"
|-CXXMethodDecl 0x558928c032d0 <line:69:3, col:53> col:15 processing 'const char *() const'
| |-Overrides: [ 0x558928decb08 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x558928c04070 <col:34, col:53>
|   `-ReturnStmt 0x558928c04060 <col:36, col:43>
|     `-ImplicitCastExpr 0x558928c04048 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x558928c04028 <col:43> 'const char [7]' lvalue "aa/aah"
|-CXXMethodDecl 0x558928c03418 <line:71:3, col:32> col:7 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x558928dee020 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x558928c03380 <col:18, col:31> col:32 'ErrorHandler *'
|-CXXMethodDecl 0x558928c036f0 <line:72:3, col:57> col:7 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x558928deddd0 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x558928c035a0 <col:17, col:33> col:33 conf 'Vector<String> &'
| `-ParmVarDecl 0x558928c03618 <col:39, col:53> col:53 errh 'ErrorHandler *'
|-CXXMethodDecl 0x558928c038c8 <line:74:3, col:26> col:8 push 'void (int, Packet *)'
| |-Overrides: [ 0x558928deb548 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x558928c037b8 <col:13> col:16 'int'
| `-ParmVarDecl 0x558928c03830 <col:18, col:25> col:26 'Packet *'
|-CXXMethodDecl 0x558928c03a20 <line:75:3, col:19> col:11 pull 'Packet *(int)'
| |-Overrides: [ 0x558928deb6d8 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x558928c03990 <col:16> col:19 'int'
|-CXXMethodDecl 0x558928c03b68 <line:76:3, col:25> col:8 run_timer 'void (Timer *)'
| |-Overrides: [ 0x558928debbf8 Element::run_timer 'void (Timer *)' ]
| `-ParmVarDecl 0x558928c03ad8 <col:18, col:24> col:25 'Timer *'
|-CXXConstructorDecl 0x558928c03c38 <line:47:7> col:7 implicit TCPAck 'void (const TCPAck &)' inline default_delete noexcept-unevaluated 0x558928c03c38
| `-ParmVarDecl 0x558928c03d48 <col:7> col:7 'const TCPAck &'
`-CXXMethodDecl 0x558928c03de8 <col:7> col:7 implicit operator= 'TCPAck &(const TCPAck &)' inline default_delete noexcept-unevaluated 0x558928c03de8
  `-ParmVarDecl 0x558928c03ef8 <col:7> col:7 'const TCPAck &'

Layout: <CGRecordLayout
  LLVMType:%class.TCPAck = type <{ %class.Element.base, [4 x i8], %class.Timer, i8, i8, [2 x i8], i32, %class.TCPBuffer*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TCPAck.base = type <{ %class.Element.base, [4 x i8], %class.Timer, i8, i8, [2 x i8], i32, %class.TCPBuffer*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928e409b8 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x558928e40ae8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x558928e40b48 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x558928e40ba8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x558928ead9b8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x558928eada90 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x558928eada90
|-CXXConstructorDecl 0x558928eadd48 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x558928eadd48
| `-ParmVarDecl 0x558928eade58 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x558928eadef8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x558928eadef8
  `-ParmVarDecl 0x558928eae008 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928e40808 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x558928e40928 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x558928e409b8 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x558928e40ae8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x558928e40b48 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x558928e40ba8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x558928ead9b8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x558928eada90 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x558928eada90
| |-CXXConstructorDecl 0x558928eadd48 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x558928eadd48
| | `-ParmVarDecl 0x558928eade58 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x558928eadef8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x558928eadef8
|   `-ParmVarDecl 0x558928eae008 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x558928e40c68 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x558928e40cc8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x558928e40c68 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x558928e40ae8 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x558928e40d20 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x558928e40c68 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x558928e40b48 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x558928e40d78 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x558928e40c68 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x558928e40ba8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x558928e40dd0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x558928ead8c8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558928eae228 <col:11>
|-CXXConstructorDecl 0x558928eadb98 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x558928eadb98
| `-ParmVarDecl 0x558928eadca8 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x558928eae0a8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x558928eae0a8
  `-ParmVarDecl 0x558928eae1b8 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928e38be0 prev 0x558928deab30 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x558928e38d18 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x558928e38da8 <col:33, col:39> col:33 public
|-EnumDecl 0x558928e38dd0 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x558928e38f10 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x558928e38ef0 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x558928e38ed0 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x558928e38e90 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x558928e38eb0 <col:26> 'int' 16
| `-EnumConstantDecl 0x558928e38fe0 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x558928e38fc0 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x558928e38fa0 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x558928e38f60 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x558928e38f80 <col:47> 'int' 31
|-EnumDecl 0x558928e39030 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x558928e39170 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x558928e39290 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928e39150 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x558928e39130 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x558928e390f0 <col:26> 'int' 1
| |       `-IntegerLiteral 0x558928e39110 <col:29> 'int' 15
| `-EnumConstantDecl 0x558928e39240 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x558928e392a8 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558928e39220 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x558928e39200 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x558928e391c0 <col:51> 'int' 1
|         `-IntegerLiteral 0x558928e391e0 <col:54> 'int' 10
|-CXXConstructorDecl 0x558928e39478 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x558928e392d0 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x558928e39350 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x558928e395d0 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x558928e39540 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x558928e396c8 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x558928e396c8
|-CXXMethodDecl 0x558928e39858 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x558928e421e8 <col:42, line:100:5>
|   `-ReturnStmt 0x558928e421d8 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x558928e421c0 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x558928e42190 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x558928e40f10
|         `-CXXThisExpr 0x558928e42180 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x558928e39920 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x558928e42268 <col:36, line:105:5>
|   `-ReturnStmt 0x558928e42258 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x558928e42240 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x558928e42210 <col:16> 'void *const' lvalue ->_thunk 0x558928e40f78
|         `-CXXThisExpr 0x558928e42200 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x558928e399e0 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x558928e422e8 <col:37, line:110:5>
|   `-ReturnStmt 0x558928e422d8 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x558928e422c0 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x558928e42290 <col:16> 'Element *const' lvalue ->_owner 0x558928e41038
|         `-CXXThisExpr 0x558928e42280 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x558928e39aa0 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x558928e39b68 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x558928e39c28 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x558928e39ce8 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x558928e423d0 <col:35, line:137:5>
|   `-ReturnStmt 0x558928e423c0 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x558928e42388 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x558928e42358 <col:16, col:24> '<bound member function type>' ->router 0x558928dfc050
|         `-ImplicitCastExpr 0x558928e423a8 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x558928e42340 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x558928e42310 <col:16> 'Element *const' lvalue ->_owner 0x558928e41038
|               `-CXXThisExpr 0x558928e42300 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x558928e39da8 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x558928e39f68 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x558928e39e58 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x558928e39ed0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x558928e3a178 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x558928e3a028 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x558928e3a0a0 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x558928e3a248 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x558928e424e0 <col:35, line:181:5>
|   `-ReturnStmt 0x558928e424d0 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x558928e424b8 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x558928e424a0 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x558928e42470 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x558928e40b48
|           `-MemberExpr 0x558928e42428 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x558928e40c68
|             `-MemberExpr 0x558928e423f8 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x558928e40e98
|               `-CXXThisExpr 0x558928e423e8 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x558928e3fb90 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x558928e425f8 <col:30, line:192:5>
|   `-BinaryOperator 0x558928e425d8 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x558928e42580 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x558928e40b48
|     | `-MemberExpr 0x558928e42538 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x558928e40c68
|     |   `-MemberExpr 0x558928e42508 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x558928e40e98
|     |     `-CXXThisExpr 0x558928e424f8 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x558928e425c0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x558928e425b0 <col:32> 'bool' false
|-CXXMethodDecl 0x558928e3fc50 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x558928e42948 <col:30, line:206:5>
|   |-BinaryOperator 0x558928e426f0 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x558928e42698 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x558928e40b48
|   | | `-MemberExpr 0x558928e42650 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x558928e40c68
|   | |   `-MemberExpr 0x558928e42620 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x558928e40e98
|   | |     `-CXXThisExpr 0x558928e42610 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x558928e426d8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x558928e426c8 <col:32> 'bool' true
|   |-CallExpr 0x558928e42790 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x558928e42778 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x558928e42758 <col:9> 'void ()' lvalue Function 0x558928e28f80 'click_fence' 'void ()'
|   `-IfStmt 0x558928e42930 <line:204:9, line:205:32>
|     |-BinaryOperator 0x558928e42870 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x558928e42840 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x558928e427f0 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x558928e412a8
|     | |   `-MemberExpr 0x558928e427c0 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x558928e41320
|     | |     `-CXXThisExpr 0x558928e427b0 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x558928e42858 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x558928e42820 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x558928e428f0 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x558928e428a0 <col:13> '<bound member function type>' ->complete_schedule 0x558928e41d20
|       | `-CXXThisExpr 0x558928e42890 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x558928e42918 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x558928e428d0 <col:31> 'int' 0
|-CXXMethodDecl 0x558928e3fd10 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x558928e42a70 <col:35, line:240:5>
|   `-BinaryOperator 0x558928e42a50 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x558928e429f8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x558928e40b48
|     | `-MemberExpr 0x558928e429b0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x558928e40c68
|     |   `-MemberExpr 0x558928e42980 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x558928e40e98
|     |     `-CXXThisExpr 0x558928e42970 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x558928e42a38 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x558928e42a28 <col:32> 'bool' true
|-CXXMethodDecl 0x558928e3fdd0 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x558928e42c88 <col:37, line:253:5>
|   |-BinaryOperator 0x558928e42b68 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x558928e42b10 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x558928e40b48
|   | | `-MemberExpr 0x558928e42ac8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x558928e40c68
|   | |   `-MemberExpr 0x558928e42a98 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x558928e40e98
|   | |     `-CXXThisExpr 0x558928e42a88 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x558928e42b50 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x558928e42b40 <col:32> 'bool' false
|   `-BinaryOperator 0x558928e42c68 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x558928e42c10 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x558928e40ba8
|     | `-MemberExpr 0x558928e42bc8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x558928e40c68
|     |   `-MemberExpr 0x558928e42b98 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x558928e40e98
|     |     `-CXXThisExpr 0x558928e42b88 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x558928e42c50 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x558928e42c40 <col:41> 'bool' true
|-CXXMethodDecl 0x558928e3fe90 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x558928e42e08 <col:37, line:264:5>
|   |-BinaryOperator 0x558928e42d88 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x558928e42d30 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x558928e40ba8
|   | | `-MemberExpr 0x558928e42ce8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x558928e40c68
|   | |   `-MemberExpr 0x558928e42cb8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x558928e40e98
|   | |     `-CXXThisExpr 0x558928e42ca8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x558928e42d70 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x558928e42d60 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x558928e42de8 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x558928e42db8 <col:9> '<bound member function type>' ->reschedule 0x558928e3fc50
|       `-CXXThisExpr 0x558928e42da8 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x558928e3ffd8 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x558928e3ff48 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x558928e400a8 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x558928e401f0 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x558928e40160 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x558928e40340 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x558928e402b0 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x558928e40408 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x558928e404c8 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x558928e40568 <col:53> "" ""
|-CXXMethodDecl 0x558928e40600 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x558928e406a0 <col:47> "" ""
|-AccessSpecDecl 0x558928e40710 <line:303:3, col:10> col:3 private
|-FieldDecl 0x558928e40750 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x558928e407b8 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x558928e40808 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x558928e40928 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x558928e409b8 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x558928e40ae8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x558928e40b48 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x558928e40ba8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x558928ead9b8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x558928eada90 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x558928eada90
| | |-CXXConstructorDecl 0x558928eadd48 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x558928eadd48
| | | `-ParmVarDecl 0x558928eade58 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x558928eadef8 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x558928eadef8
| |   `-ParmVarDecl 0x558928eae008 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x558928e40c68 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x558928e40cc8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x558928e40c68 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x558928e40ae8 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x558928e40d20 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x558928e40c68 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x558928e40b48 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x558928e40d78 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x558928e40c68 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x558928e40ba8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x558928e40dd0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x558928ead8c8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x558928eae228 <col:11>
| |-CXXConstructorDecl 0x558928eadb98 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x558928eadb98
| | `-ParmVarDecl 0x558928eadca8 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x558928eae0a8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x558928eae0a8
|   `-ParmVarDecl 0x558928eae1b8 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x558928e40e98 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x558928e40f10 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x558928e40f78 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x558928e40fd8 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x558928e41038 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x558928e41088 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x558928e411a8 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x558928e41248 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x558928e412a8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x558928ea2a78 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x558928ea2a78
| | `-ParmVarDecl 0x558928ea2b88 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x558928ea2c28 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x558928ea2c28
| | `-ParmVarDecl 0x558928ea2d38 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x558928ea2da8 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x558928ea2da8
| |-CXXMethodDecl 0x558928ea3628 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x558928ea3628
| | `-ParmVarDecl 0x558928ea3738 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x558928ea37a8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x558928ea37a8
| | `-ParmVarDecl 0x558928ea38b8 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x558928eae288 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x558928eae360 <col:11>
|-FieldDecl 0x558928e41320 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x558928e41468 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x558928e413a8 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x558928e41618 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x558928e41528 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x558928e416e0 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x558928e417a0 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x558928e41860 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x558928e42f18 <col:41, line:355:5>
|   `-ReturnStmt 0x558928e42f08 <line:354:9, col:38>
|     `-BinaryOperator 0x558928e42ee8 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x558928e42eb8 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x558928e42e68 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x558928e412a8
|       |   `-MemberExpr 0x558928e42e38 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x558928e41320
|       |     `-CXXThisExpr 0x558928e42e28 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x558928e42ed0 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x558928e42e98 <col:38> 'int' 0
|-CXXMethodDecl 0x558928e41920 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x558928e41a60 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x558928e419d0 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x558928e41bd8 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x558928e41b18 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x558928e41d20 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x558928e41c90 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x558928e41de8 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x558928e41fb0 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x558928e41e98 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x558928e41f18 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x558928e420b0 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x558928e42140 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping AST Record Layout
         0 | class Args
         0 |   class ArgContext (base)
         0 |     const class Element * _context
         8 |     class ErrorHandler * _errh
        16 |     const char * _arg_keyword
        24 |     _Bool _read_status
        25 |   _Bool _my_conf
        26 |   _Bool _status
        27 |   uint8_t _simple_slotpos
        32 |   Vector<class String> * _conf
        40 |   class Vector<int> _kwpos
        40 |     class vector_memory<class sized_array_memory<4> > vm_
        40 |       vector_memory<class sized_array_memory<4> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   struct Args::Slot * _slots
        64 |   uint8_t [48] _simple_slotbuf
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928d21e70 prev 0x558928d209d8 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558928d21f68 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x558928d21ff8 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x558928d22138 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x558928d22030 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x558928d23580 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x558928d23560 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x558928d23100 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x558928d23610 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x558928d235d0 <col:17> 'ErrorHandler *' lvalue ParmVar 0x558928d22030 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x558928d23168 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x558928d23690 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x558928d23650 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x558928d231c8 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x558928d236d0 <col:54> 'bool' false
| `-CompoundStmt 0x558928d237d8 <col:61, line:38:5>
|   `-BinaryOperator 0x558928d237b8 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x558928d23750 <col:9> 'const Element *' lvalue ->_context 0x558928d230a0
|     | `-CXXThisExpr 0x558928d23740 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x558928d237a0 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x558928d23780 <col:20> 'int' 0
|-CXXConstructorDecl 0x558928d22348 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x558928d221f8 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x558928d22270 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x558928d235b8 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x558928d23598 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x558928d230a0 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x558928d23830 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x558928d237f0 <col:20> 'const Element *' lvalue ParmVar 0x558928d221f8 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x558928d23100 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x558928d238b0 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x558928d23870 <col:36> 'ErrorHandler *' lvalue ParmVar 0x558928d22270 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x558928d23168 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x558928d23930 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x558928d238f0 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x558928d231c8 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x558928d23970 <col:73> 'bool' false
| `-CompoundStmt 0x558928d239e8 <col:80, line:46:5>
|-CXXMethodDecl 0x558928d22478 <line:49:5, line:51:5> line:49:20 context 'const Element *() const'
| `-CompoundStmt 0x558928d23a60 <col:36, line:51:5>
|   `-ReturnStmt 0x558928d23a50 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x558928d23a38 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x558928d23a08 <col:16> 'const Element *const' lvalue ->_context 0x558928d230a0
|         `-CXXThisExpr 0x558928d239f8 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x558928d22568 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x558928d23ae0 <col:32, line:57:5>
|   `-ReturnStmt 0x558928d23ad0 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x558928d23ab8 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x558928d23a88 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x558928d23100
|         `-CXXThisExpr 0x558928d23a78 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x558928d22628 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x558928d227b0 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x558928d226e0 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x558928d22900 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x558928d22870 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x558928d22a50 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x558928d229c0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x558928d22c58 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x558928d22b08 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x558928d22b80 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x558928d22fb0 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x558928d22d18 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x558928d22d98 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x558928d22e60 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x558928d23068 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x558928d230a0 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x558928d23100 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x558928d23168 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x558928d231c8 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x558928d23218 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x558928d23218
| `-ParmVarDecl 0x558928d23328 <col:7> col:7 'const ArgContext &'
|-CXXMethodDecl 0x558928d233c8 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x558928d233c8
| `-ParmVarDecl 0x558928d234d8 <col:7> col:7 'const ArgContext &'
`-CXXDestructorDecl 0x558928c072c0 <col:7> col:7 implicit ~ArgContext 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::Slot
         0 |   (Slot vtable pointer)
         8 |   struct Args::Slot * _next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928d39ca8 prev 0x558928d28958 <../dummy_inc/click/args.hh:826:5, line:833:5> line:826:12 referenced struct Slot definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558928d39da0 <col:5, col:12> col:12 implicit referenced struct Slot
|-CXXConstructorDecl 0x558928d39e90 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| `-CompoundStmt 0x558928d63d20 <col:16, line:828:9>
|-CXXDestructorDecl 0x558928d39f80 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| `-CompoundStmt 0x558928d63d30 <col:25, line:830:9>
|-CXXMethodDecl 0x558928d3a080 <line:831:9, col:32> col:22 store 'void ()' virtual pure
|-FieldDecl 0x558928d3a130 <line:832:9, col:15> col:15 _next 'Args::Slot *'
|-CXXMethodDecl 0x558928d3a1d8 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x558928d3a1d8
| `-ParmVarDecl 0x558928d3a2e8 <col:12> col:12 'const Args::Slot &'
`-CXXConstructorDecl 0x558928d3aaa8 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x558928d3aaa8
  `-ParmVarDecl 0x558928d3abb8 <col:12> col:12 'const Args::Slot &'

Layout: <CGRecordLayout
  LLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  NonVirtualBaseLLVMType:%"struct.Args::Slot" = type { i32 (...)**, %"struct.Args::Slot"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928d28768 <../dummy_inc/click/args.hh:247:1, line:898:1> line:247:7 referenced class Args definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-public 'ArgContext'
|-CXXRecordDecl 0x558928d288c8 <col:1, col:7> col:7 implicit referenced class Args
|-CXXRecordDecl 0x558928d28958 <line:248:5, col:12> col:12 struct Slot
|-AccessSpecDecl 0x558928d28a10 <line:250:3, col:9> col:3 public
|-CXXConstructorDecl 0x558928d28b18 <line:254:5, col:32> col:5 Args 'void (ErrorHandler *)'
| `-ParmVarDecl 0x558928d28a48 <col:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x558928d51a68 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x558928d51a48 <col:31> 'int' 0
|-CXXConstructorDecl 0x558928d28e38 <line:259:5, col:60> col:5 Args 'void (const Vector<String> &, ErrorHandler *)'
| |-ParmVarDecl 0x558928d28cb0 <col:10, col:32> col:32 conf 'const Vector<String> &'
| `-ParmVarDecl 0x558928d28d28 <col:38, col:59> col:52 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x558928d51aa0 <col:59> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x558928d51a80 <col:59> 'int' 0
|-CXXConstructorDecl 0x558928d29010 <line:265:5, col:56> col:5 Args 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x558928d28f00 <col:10, col:25> col:25 context 'const Element *'
| `-ParmVarDecl 0x558928d28f78 <col:34, col:55> col:48 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x558928d51ad8 <col:55> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x558928d51ab8 <col:55> 'int' 0
|-CXXConstructorDecl 0x558928d293c8 <line:271:5, line:272:32> line:271:5 used Args 'void (const Vector<String> &, const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x558928d291b0 <col:10, col:32> col:32 conf 'const Vector<String> &'
| |-ParmVarDecl 0x558928d29228 <col:38, col:53> col:53 context 'const Element *'
| `-ParmVarDecl 0x558928d292a0 <line:272:10, col:31> col:24 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x558928d51b10 <col:31> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x558928d51af0 <col:31> 'int' 0
|-CXXConstructorDecl 0x558928d29588 <line:279:5, col:23> col:5 Args 'void (const Args &)'
| `-ParmVarDecl 0x558928d294c8 <col:10, col:22> col:22 x 'const Args &'
|-CXXDestructorDecl 0x558928d29680 <line:281:5, col:11> col:5 used ~Args 'void () noexcept'
|-CXXMethodDecl 0x558928d29868 <line:285:5, col:34> col:11 operator= 'Args &(const Args &)'
| `-ParmVarDecl 0x558928d29770 <col:21, col:33> col:33 x 'const Args &'
|-CXXMethodDecl 0x558928d29958 <line:289:5, line:291:5> line:289:10 empty 'bool () const'
| `-CompoundStmt 0x558928d51f00 <col:24, line:291:5>
|   `-ReturnStmt 0x558928d51ef0 <line:290:9, col:79>
|     `-BinaryOperator 0x558928d51ed0 <col:16, col:79> 'bool' '&&'
|       |-BinaryOperator 0x558928d51d68 <col:16, col:47> 'bool' '&&'
|       | |-ParenExpr 0x558928d51cc0 <col:16, col:41> 'bool'
|       | | `-BinaryOperator 0x558928d51ca0 <col:17, col:40> 'bool' '||'
|       | |   |-UnaryOperator 0x558928d51b98 <col:17, col:18> 'bool' prefix '!' cannot overflow
|       | |   | `-ImplicitCastExpr 0x558928d51b80 <col:18> 'bool' <PointerToBoolean>
|       | |   |   `-ImplicitCastExpr 0x558928d51b68 <col:18> 'Vector<String> *' <LValueToRValue>
|       | |   |     `-MemberExpr 0x558928d51b38 <col:18> 'Vector<String> *const' lvalue ->_conf 0x558928d41aa0
|       | |   |       `-CXXThisExpr 0x558928d51b28 <col:18> 'const Args *' implicit this
|       | |   `-UnaryOperator 0x558928d51c88 <col:27, col:40> 'bool' prefix '!' cannot overflow
|       | |     `-ImplicitCastExpr 0x558928d51c70 <col:28, col:40> 'bool' <IntegralToBoolean>
|       | |       `-CXXMemberCallExpr 0x558928d51c38 <col:28, col:40> 'Vector::size_type':'int'
|       | |         `-MemberExpr 0x558928d51c08 <col:28, col:35> '<bound member function type>' ->size 0x558928b5df98
|       | |           `-ImplicitCastExpr 0x558928d51c58 <col:28> 'const Vector<String> *' <NoOp>
|       | |             `-ImplicitCastExpr 0x558928d51bf0 <col:28> 'Vector<String> *' <LValueToRValue>
|       | |               `-MemberExpr 0x558928d51bc0 <col:28> 'Vector<String> *const' lvalue ->_conf 0x558928d41aa0
|       | |                 `-CXXThisExpr 0x558928d51bb0 <col:28> 'const Args *' implicit this
|       | `-UnaryOperator 0x558928d51d50 <col:46, col:47> 'bool' prefix '!' cannot overflow
|       |   `-ImplicitCastExpr 0x558928d51d38 <col:47> 'bool' <PointerToBoolean>
|       |     `-ImplicitCastExpr 0x558928d51d20 <col:47> 'Args::Slot *' <LValueToRValue>
|       |       `-MemberExpr 0x558928d51cf0 <col:47> 'Args::Slot *const' lvalue ->_slots 0x558928d4ff80
|       |         `-CXXThisExpr 0x558928d51ce0 <col:47> 'const Args *' implicit this
|       `-BinaryOperator 0x558928d51eb0 <col:57, col:79> 'bool' '=='
|         |-ImplicitCastExpr 0x558928d51e98 <col:57, col:74> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x558928d51e80 <col:57, col:74> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x558928d51e40 <col:57, col:74> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x558928d51e28 <col:57> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x558928d51d98 <col:57> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x558928d500a8
|         |     |   `-CXXThisExpr 0x558928d51d88 <col:57> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x558928d51dc8 <col:73> 'int' 0
|         `-IntegerLiteral 0x558928d51e60 <col:79> 'int' 0
|-CXXMethodDecl 0x558928d29a18 <line:294:5, line:296:5> line:294:10 results_empty 'bool () const'
| `-CompoundStmt 0x558928d520d8 <col:32, line:296:5>
|   `-ReturnStmt 0x558928d520c8 <line:295:9, col:49>
|     `-BinaryOperator 0x558928d520a8 <col:16, col:49> 'bool' '&&'
|       |-UnaryOperator 0x558928d51f88 <col:16, col:17> 'bool' prefix '!' cannot overflow
|       | `-ImplicitCastExpr 0x558928d51f70 <col:17> 'bool' <PointerToBoolean>
|       |   `-ImplicitCastExpr 0x558928d51f58 <col:17> 'Args::Slot *' <LValueToRValue>
|       |     `-MemberExpr 0x558928d51f28 <col:17> 'Args::Slot *const' lvalue ->_slots 0x558928d4ff80
|       |       `-CXXThisExpr 0x558928d51f18 <col:17> 'const Args *' implicit this
|       `-BinaryOperator 0x558928d52088 <col:27, col:49> 'bool' '=='
|         |-ImplicitCastExpr 0x558928d52070 <col:27, col:44> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x558928d52058 <col:27, col:44> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x558928d52018 <col:27, col:44> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x558928d52000 <col:27> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x558928d51fb0 <col:27> 'uint8_t const[48]' lvalue ->_simple_slotbuf 0x558928d500a8
|         |     |   `-CXXThisExpr 0x558928d51fa0 <col:27> 'const Args *' implicit this
|         |     `-IntegerLiteral 0x558928d51fe0 <col:43> 'int' 0
|         `-IntegerLiteral 0x558928d52038 <col:49> 'int' 0
|-CXXMethodDecl 0x558928d29b08 <line:301:5, line:306:5> line:301:11 clear 'Args &()'
| `-CompoundStmt 0x558928d522e8 <col:19, line:306:5>
|   |-IfStmt 0x558928d52208 <line:302:9, line:303:26>
|   | |-ImplicitCastExpr 0x558928d52148 <line:302:13> 'bool' <PointerToBoolean>
|   | | `-ImplicitCastExpr 0x558928d52130 <col:13> 'Vector<String> *' <LValueToRValue>
|   | |   `-MemberExpr 0x558928d52100 <col:13> 'Vector<String> *' lvalue ->_conf 0x558928d41aa0
|   | |     `-CXXThisExpr 0x558928d520f0 <col:13> 'Args *' implicit this
|   | `-CXXMemberCallExpr 0x558928d521e8 <line:303:13, col:26> 'void'
|   |   `-MemberExpr 0x558928d521b8 <col:13, col:20> '<bound member function type>' ->clear 0x558928b609c8
|   |     `-ImplicitCastExpr 0x558928d521a0 <col:13> 'Vector<String> *' <LValueToRValue>
|   |       `-MemberExpr 0x558928d52170 <col:13> 'Vector<String> *' lvalue ->_conf 0x558928d41aa0
|   |         `-CXXThisExpr 0x558928d52160 <col:13> 'Args *' implicit this
|   |-CXXMemberCallExpr 0x558928d52290 <line:304:9, col:22> 'void'
|   | `-MemberExpr 0x558928d52260 <col:9, col:16> '<bound member function type>' .clear 0x558928d4fb08
|   |   `-MemberExpr 0x558928d52230 <col:9> 'Vector<int>':'Vector<int>' lvalue ->_kwpos 0x558928d4ff20
|   |     `-CXXThisExpr 0x558928d52220 <col:9> 'Args *' implicit this
|   `-ReturnStmt 0x558928d522d8 <line:305:9, col:17>
|     `-UnaryOperator 0x558928d522c0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558928d522b0 <col:17> 'Args *' this
|-CXXMethodDecl 0x558928d29d88 <line:313:5, col:36> col:11 bind 'Args &(Vector<String> &)'
| `-ParmVarDecl 0x558928d29c90 <col:16, col:32> col:32 conf 'Vector<String> &'
|-CXXMethodDecl 0x558928d29f08 <line:317:5, col:38> col:11 push_back 'Args &(const String &)'
| `-ParmVarDecl 0x558928d29e40 <col:21, col:35> col:35 arg 'const String &'
|-FunctionTemplateDecl 0x558928d2a288 <line:321:5, line:327:5> line:321:35 push_back
| |-TemplateTypeParmDecl 0x558928d29fb0 <col:14, col:23> col:23 referenced typename depth 0 index 0 Iter
| `-CXXMethodDecl 0x558928d2a1e8 <col:29, line:327:5> line:321:35 push_back 'Args &(Iter, Iter)'
|   |-ParmVarDecl 0x558928d2a058 <col:45, col:50> col:50 referenced begin 'Iter'
|   |-ParmVarDecl 0x558928d2a0d0 <col:57, col:62> col:62 referenced end 'Iter'
|   `-CompoundStmt 0x558928d525f8 <col:67, line:327:5>
|     |-WhileStmt 0x558928d525a8 <line:322:9, line:325:9>
|     | |-CXXOperatorCallExpr 0x558928d523c0 <line:322:16, col:25> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x558928d52350 <col:22> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x558928b74a80 0x558928b32b70 0x558928b32820 0x558928b32110 0x558928b03390 0x558928abf690
|     | | |-DeclRefExpr 0x558928d52310 <col:16> 'Iter' lvalue ParmVar 0x558928d2a058 'begin' 'Iter'
|     | | `-DeclRefExpr 0x558928d52330 <col:25> 'Iter' lvalue ParmVar 0x558928d2a0d0 'end' 'Iter'
|     | `-CompoundStmt 0x558928d52588 <col:30, line:325:9>
|     |   |-CallExpr 0x558928d52528 <line:323:13, col:29> '<dependent type>'
|     |   | |-UnresolvedMemberExpr 0x558928d52408 <col:13> '<bound member function type>' lvalue
|     |   | `-CXXOperatorCallExpr 0x558928d524f8 <col:23, col:24> '<dependent type>'
|     |   |   |-UnresolvedLookupExpr 0x558928d52488 <col:23> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x558928bdbc28 0x558928bdb848 0x558928bdb478 0x558928bdb098 0x558928bdacb8 0x558928bda8e8
|     |   |   `-DeclRefExpr 0x558928d52468 <col:24> 'Iter' lvalue ParmVar 0x558928d2a058 'begin' 'Iter'
|     |   `-UnaryOperator 0x558928d52570 <line:324:13, col:15> '<dependent type>' prefix '++' cannot overflow
|     |     `-DeclRefExpr 0x558928d52550 <col:15> 'Iter' lvalue ParmVar 0x558928d2a058 'begin' 'Iter'
|     `-ReturnStmt 0x558928d525e8 <line:326:9, col:17>
|       `-UnaryOperator 0x558928d525d0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558928d525c0 <col:17> 'Args *' this
|-CXXMethodDecl 0x558928d2a390 <line:331:5, col:44> col:11 push_back_words 'Args &(const String &)'
| `-ParmVarDecl 0x558928d2a300 <col:27, col:41> col:41 str 'const String &'
|-CXXMethodDecl 0x558928d2a4d8 <line:335:5, col:43> col:11 push_back_args 'Args &(const String &)'
| `-ParmVarDecl 0x558928d2a448 <col:26, col:40> col:40 str 'const String &'
|-CXXMethodDecl 0x558928d2a5a0 <line:350:5, line:353:5> line:350:11 reset 'Args &()'
| `-CompoundStmt 0x558928d526d8 <col:19, line:353:5>
|   |-CXXMemberCallExpr 0x558928d52678 <line:351:9, col:21> 'void'
|   | |-MemberExpr 0x558928d52628 <col:9> '<bound member function type>' ->reset_from 0x558928d50428
|   | | `-CXXThisExpr 0x558928d52618 <col:9> 'Args *' implicit this
|   | `-IntegerLiteral 0x558928d52658 <col:20> 'int' 0
|   `-ReturnStmt 0x558928d526c8 <line:352:9, col:17>
|     `-UnaryOperator 0x558928d526b0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558928d526a0 <col:17> 'Args *' this
|-VarDecl 0x558928d2a658 <line:356:5, col:38> col:26 referenced mandatory 'const int' static constexpr cinit
| `-IntegerLiteral 0x558928d2a6c0 <col:38> 'int' 1
|-VarDecl 0x558928d2a750 <line:357:5, col:39> col:26 referenced positional 'const int' static constexpr cinit
| `-IntegerLiteral 0x558928d2a7b8 <col:39> 'int' 2
|-VarDecl 0x558928d2a848 <line:358:5, col:39> col:26 deprecated 'const int' static constexpr cinit
| `-IntegerLiteral 0x558928d2a8b0 <col:39> 'int' 4
|-VarDecl 0x558928d2a940 <line:359:5, col:39> col:26 referenced firstmatch 'const int' static constexpr cinit
| `-IntegerLiteral 0x558928d2a9a8 <col:39> 'int' 8
|-FunctionTemplateDecl 0x558928d2ad28 <line:368:5, line:371:5> line:369:11 read
| |-TemplateTypeParmDecl 0x558928d2aa20 <line:368:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x558928d2ac88 <line:369:5, line:371:5> line:369:11 read 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x558928d2aad0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d2ab78 <col:37, col:40> col:40 referenced x 'T &'
|   `-CompoundStmt 0x558928d52830 <col:43, line:371:5>
|     `-ReturnStmt 0x558928d52820 <line:370:9, col:34>
|       `-CallExpr 0x558928d527e8 <col:16, col:34> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d52708 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d52788 <col:21> 'const char *' lvalue ParmVar 0x558928d2aad0 'keyword' 'const char *'
|         |-IntegerLiteral 0x558928d527a8 <col:30> 'int' 0
|         `-DeclRefExpr 0x558928d527c8 <col:33> 'T' lvalue ParmVar 0x558928d2ab78 'x' 'T &'
|-FunctionTemplateDecl 0x558928d2b070 <line:372:5, line:375:5> line:373:11 read_m
| |-TemplateTypeParmDecl 0x558928d2ad90 <line:372:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x558928d2afd0 <line:373:5, line:375:5> line:373:11 read_m 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x558928d2ae40 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d2aee8 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x558928d52980 <col:45, line:375:5>
|     `-ReturnStmt 0x558928d52970 <line:374:9, col:42>
|       `-CallExpr 0x558928d52938 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d52858 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d528d8 <col:21> 'const char *' lvalue ParmVar 0x558928d2ae40 'keyword' 'const char *'
|         |-DeclRefExpr 0x558928d528f8 <col:30> 'const int' lvalue Var 0x558928d2a658 'mandatory' 'const int'
|         `-DeclRefExpr 0x558928d52918 <col:41> 'T' lvalue ParmVar 0x558928d2aee8 'x' 'T &'
|-FunctionTemplateDecl 0x558928d2b3a8 <line:376:5, line:379:5> line:377:11 read_p
| |-TemplateTypeParmDecl 0x558928d2b0d8 <line:376:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x558928d2b308 <line:377:5, line:379:5> line:377:11 read_p 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x558928d2b190 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d2b238 <col:39, col:42> col:42 referenced x 'T &'
|   `-CompoundStmt 0x558928d52ad0 <col:45, line:379:5>
|     `-ReturnStmt 0x558928d52ac0 <line:378:9, col:43>
|       `-CallExpr 0x558928d52a88 <col:16, col:43> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d529a8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d52a28 <col:21> 'const char *' lvalue ParmVar 0x558928d2b190 'keyword' 'const char *'
|         |-DeclRefExpr 0x558928d52a48 <col:30> 'const int' lvalue Var 0x558928d2a750 'positional' 'const int'
|         `-DeclRefExpr 0x558928d52a68 <col:42> 'T' lvalue ParmVar 0x558928d2b238 'x' 'T &'
|-FunctionTemplateDecl 0x558928d2b6d8 <line:380:5, line:383:5> line:381:11 read_mp
| |-TemplateTypeParmDecl 0x558928d2b410 <line:380:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x558928d2b638 <line:381:5, line:383:5> line:381:11 read_mp 'Args &(const char *, T &)'
|   |-ParmVarDecl 0x558928d2b4c0 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d2b568 <col:40, col:43> col:43 referenced x 'T &'
|   `-CompoundStmt 0x558928d52cd0 <col:46, line:383:5>
|     `-ReturnStmt 0x558928d52cc0 <line:382:9, col:55>
|       `-CallExpr 0x558928d52c88 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d52af8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d52b78 <col:21> 'const char *' lvalue ParmVar 0x558928d2b4c0 'keyword' 'const char *'
|         |-BinaryOperator 0x558928d52c48 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x558928d52bf8 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x558928d52bd8 <col:30> 'const int' lvalue Var 0x558928d2a658 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x558928d52c30 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x558928d52c10 <col:42> 'const int' lvalue Var 0x558928d2a750 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x558928d52c68 <col:54> 'T' lvalue ParmVar 0x558928d2b568 'x' 'T &'
|-FunctionTemplateDecl 0x558928d2bad8 <line:384:5, line:388:5> line:385:11 read
| |-TemplateTypeParmDecl 0x558928d2b740 <line:384:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x558928d2ba38 <line:385:5, line:388:5> line:385:11 read 'Args &(const char *, int, T &)'
|   |-ParmVarDecl 0x558928d2b7f0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d2b870 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x558928d2b918 <col:48, col:51> col:51 referenced x 'T &'
|   `-CompoundStmt 0x558928d52e10 <col:54, line:388:5>
|     |-CallExpr 0x558928d52d98 <line:386:9, col:47> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x558928d52ce8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x558928d52d28 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x558928d52d38 <col:30> 'const char *' lvalue ParmVar 0x558928d2b7f0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x558928d52d58 <col:39> 'int' lvalue ParmVar 0x558928d2b870 'flags' 'int'
|     | `-DeclRefExpr 0x558928d52d78 <col:46> 'T' lvalue ParmVar 0x558928d2b918 'x' 'T &'
|     `-ReturnStmt 0x558928d52e00 <line:387:9, col:17>
|       `-UnaryOperator 0x558928d52de8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558928d52dd8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x558928d2bf88 <line:400:5, line:403:5> line:401:11 read_or_set
| |-TemplateTypeParmDecl 0x558928d2bb48 <line:400:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x558928d2bbc8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x558928d2bee8 <line:401:5, line:403:5> line:401:11 read_or_set 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x558928d2bc88 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d2bd28 <col:44, col:47> col:47 referenced x 'T &'
|   |-ParmVarDecl 0x558928d2bdc8 <col:50, col:59> col:59 referenced default_value 'const V &'
|   `-CompoundStmt 0x558928d52f80 <col:74, line:403:5>
|     `-ReturnStmt 0x558928d52f70 <line:402:9, col:56>
|       `-CallExpr 0x558928d52f30 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d52e40 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d52eb0 <col:28> 'const char *' lvalue ParmVar 0x558928d2bc88 'keyword' 'const char *'
|         |-IntegerLiteral 0x558928d52ed0 <col:37> 'int' 0
|         |-DeclRefExpr 0x558928d52ef0 <col:40> 'T' lvalue ParmVar 0x558928d2bd28 'x' 'T &'
|         `-DeclRefExpr 0x558928d52f10 <col:43> 'const V' lvalue ParmVar 0x558928d2bdc8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x558928d2c3f8 <line:404:5, line:407:5> line:405:11 read_or_set_p
| |-TemplateTypeParmDecl 0x558928d2bff8 <line:404:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x558928d2c078 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x558928d2c358 <line:405:5, line:407:5> line:405:11 read_or_set_p 'Args &(const char *, T &, const V &)'
|   |-ParmVarDecl 0x558928d2c138 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d2c1d8 <col:46, col:49> col:49 referenced x 'T &'
|   |-ParmVarDecl 0x558928d2c278 <col:52, col:61> col:61 referenced default_value 'const V &'
|   `-CompoundStmt 0x558928d530e8 <col:76, line:407:5>
|     `-ReturnStmt 0x558928d530d8 <line:406:9, col:65>
|       `-CallExpr 0x558928d53098 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d52fa8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d53018 <col:28> 'const char *' lvalue ParmVar 0x558928d2c138 'keyword' 'const char *'
|         |-DeclRefExpr 0x558928d53038 <col:37> 'const int' lvalue Var 0x558928d2a750 'positional' 'const int'
|         |-DeclRefExpr 0x558928d53058 <col:49> 'T' lvalue ParmVar 0x558928d2c1d8 'x' 'T &'
|         `-DeclRefExpr 0x558928d53078 <col:52> 'const V' lvalue ParmVar 0x558928d2c278 'default_value' 'const V &'
|-FunctionTemplateDecl 0x558928d2c948 <line:408:5, line:412:5> line:409:11 read_or_set
| |-TemplateTypeParmDecl 0x558928d2c468 <line:408:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x558928d2c4e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x558928d2c8a8 <line:409:5, line:412:5> line:409:11 read_or_set 'Args &(const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x558928d2c5a8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d2c628 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x558928d2c6c8 <col:55, col:58> col:58 referenced x 'T &'
|   |-ParmVarDecl 0x558928d2c768 <col:61, col:70> col:70 referenced default_value 'const V &'
|   `-CompoundStmt 0x558928d53250 <col:85, line:412:5>
|     |-CallExpr 0x558928d531d0 <line:410:9, col:69> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x558928d53100 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x558928d53140 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x558928d53150 <col:37> 'const char *' lvalue ParmVar 0x558928d2c5a8 'keyword' 'const char *'
|     | |-DeclRefExpr 0x558928d53170 <col:46> 'int' lvalue ParmVar 0x558928d2c628 'flags' 'int'
|     | |-DeclRefExpr 0x558928d53190 <col:53> 'T' lvalue ParmVar 0x558928d2c6c8 'x' 'T &'
|     | `-DeclRefExpr 0x558928d531b0 <col:56> 'const V' lvalue ParmVar 0x558928d2c768 'default_value' 'const V &'
|     `-ReturnStmt 0x558928d53240 <line:411:9, col:17>
|       `-UnaryOperator 0x558928d53228 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558928d53218 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x558928d2cdd8 <line:422:5, line:425:5> line:423:11 read
| |-TemplateTypeParmDecl 0x558928d2c9c0 <line:422:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558928d2ca38 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-CXXMethodDecl 0x558928d2cd38 <line:423:5, line:425:5> line:423:11 read 'Args &(const char *, P, T &)'
| | |-ParmVarDecl 0x558928d2caf8 <col:16, col:28> col:28 referenced keyword 'const char *'
| | |-ParmVarDecl 0x558928d2cb70 <col:37, col:39> col:39 referenced parser 'P'
| | |-ParmVarDecl 0x558928d2cc18 <col:47, col:50> col:50 referenced x 'T &'
| | `-CompoundStmt 0x558928d533d0 <col:53, line:425:5>
| |   `-ReturnStmt 0x558928d533c0 <line:424:9, col:42>
| |     `-CallExpr 0x558928d53380 <col:16, col:42> '<dependent type>'
| |       |-UnresolvedMemberExpr 0x558928d53280 <col:16> '<bound member function type>' lvalue
| |       |-DeclRefExpr 0x558928d53300 <col:21> 'const char *' lvalue ParmVar 0x558928d2caf8 'keyword' 'const char *'
| |       |-IntegerLiteral 0x558928d53320 <col:30> 'int' 0
| |       |-DeclRefExpr 0x558928d53340 <col:33> 'P' lvalue ParmVar 0x558928d2cb70 'parser' 'P'
| |       `-DeclRefExpr 0x558928d53360 <col:41> 'T' lvalue ParmVar 0x558928d2cc18 'x' 'T &'
| `-CXXMethodDecl 0x558928c07d18 <line:423:5, line:425:5> line:423:11 used read 'Args &(const char *, SecondsArg, unsigned int &)'
|   |-TemplateArgument type 'SecondsArg'
|   |-TemplateArgument type 'unsigned int'
|   |-ParmVarDecl 0x558928c07a88 <col:16, col:28> col:28 keyword 'const char *'
|   |-ParmVarDecl 0x558928c07b28 <col:37, col:39> col:39 parser 'SecondsArg':'SecondsArg'
|   `-ParmVarDecl 0x558928c07bf8 <col:47, col:50> col:50 x 'unsigned int &'
|-FunctionTemplateDecl 0x558928d2d228 <line:426:5, line:429:5> line:427:11 read_m
| |-TemplateTypeParmDecl 0x558928d2ce48 <line:426:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558928d2cec8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558928d2d188 <line:427:5, line:429:5> line:427:11 read_m 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x558928d2cf88 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d2d000 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x558928d2d0a8 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x558928d53548 <col:55, line:429:5>
|     `-ReturnStmt 0x558928d53538 <line:428:9, col:50>
|       `-CallExpr 0x558928d534f8 <col:16, col:50> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d533f8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d53478 <col:21> 'const char *' lvalue ParmVar 0x558928d2cf88 'keyword' 'const char *'
|         |-DeclRefExpr 0x558928d53498 <col:30> 'const int' lvalue Var 0x558928d2a658 'mandatory' 'const int'
|         |-DeclRefExpr 0x558928d534b8 <col:41> 'P' lvalue ParmVar 0x558928d2d000 'parser' 'P'
|         `-DeclRefExpr 0x558928d534d8 <col:49> 'T' lvalue ParmVar 0x558928d2d0a8 'x' 'T &'
|-FunctionTemplateDecl 0x558928d2d678 <line:430:5, line:433:5> line:431:11 read_p
| |-TemplateTypeParmDecl 0x558928d2d298 <line:430:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558928d2d318 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558928d2d5d8 <line:431:5, line:433:5> line:431:11 read_p 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x558928d2d3d8 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d2d450 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x558928d2d4f8 <col:49, col:52> col:52 referenced x 'T &'
|   `-CompoundStmt 0x558928d536c0 <col:55, line:433:5>
|     `-ReturnStmt 0x558928d536b0 <line:432:9, col:51>
|       `-CallExpr 0x558928d53670 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d53570 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d535f0 <col:21> 'const char *' lvalue ParmVar 0x558928d2d3d8 'keyword' 'const char *'
|         |-DeclRefExpr 0x558928d53610 <col:30> 'const int' lvalue Var 0x558928d2a750 'positional' 'const int'
|         |-DeclRefExpr 0x558928d53630 <col:42> 'P' lvalue ParmVar 0x558928d2d450 'parser' 'P'
|         `-DeclRefExpr 0x558928d53650 <col:50> 'T' lvalue ParmVar 0x558928d2d4f8 'x' 'T &'
|-FunctionTemplateDecl 0x558928d2dac8 <line:434:5, line:437:5> line:435:11 read_mp
| |-TemplateTypeParmDecl 0x558928d2d6e8 <line:434:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558928d2d768 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558928d2da28 <line:435:5, line:437:5> line:435:11 read_mp 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x558928d2d828 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d2d8a0 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x558928d2d948 <col:50, col:53> col:53 referenced x 'T &'
|   `-CompoundStmt 0x558928d538e8 <col:56, line:437:5>
|     `-ReturnStmt 0x558928d538d8 <line:436:9, col:63>
|       `-CallExpr 0x558928d53898 <col:16, col:63> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d536e8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d53768 <col:21> 'const char *' lvalue ParmVar 0x558928d2d828 'keyword' 'const char *'
|         |-BinaryOperator 0x558928d53838 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x558928d537e8 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x558928d537c8 <col:30> 'const int' lvalue Var 0x558928d2a658 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x558928d53820 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x558928d53800 <col:42> 'const int' lvalue Var 0x558928d2a750 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x558928d53858 <col:54> 'P' lvalue ParmVar 0x558928d2d8a0 'parser' 'P'
|         `-DeclRefExpr 0x558928d53878 <col:62> 'T' lvalue ParmVar 0x558928d2d948 'x' 'T &'
|-FunctionTemplateDecl 0x558928d2dff8 <line:438:5, line:442:5> line:439:11 read
| |-TemplateTypeParmDecl 0x558928d2db38 <line:438:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558928d2dbb8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558928d2df58 <line:439:5, line:442:5> line:439:11 read 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x558928d2dc78 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d2dcf8 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x558928d2dd70 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x558928d2de18 <col:58, col:61> col:61 referenced x 'T &'
|   `-CompoundStmt 0x558928d53a50 <col:64, line:442:5>
|     |-CallExpr 0x558928d539d0 <line:440:9, col:55> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x558928d53900 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x558928d53940 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x558928d53950 <col:30> 'const char *' lvalue ParmVar 0x558928d2dc78 'keyword' 'const char *'
|     | |-DeclRefExpr 0x558928d53970 <col:39> 'int' lvalue ParmVar 0x558928d2dcf8 'flags' 'int'
|     | |-DeclRefExpr 0x558928d53990 <col:46> 'P' lvalue ParmVar 0x558928d2dd70 'parser' 'P'
|     | `-DeclRefExpr 0x558928d539b0 <col:54> 'T' lvalue ParmVar 0x558928d2de18 'x' 'T &'
|     `-ReturnStmt 0x558928d53a40 <line:441:9, col:17>
|       `-UnaryOperator 0x558928d53a28 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558928d53a18 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x558928d2e5f8 <line:455:5, line:458:5> line:456:11 read_or_set
| |-TemplateTypeParmDecl 0x558928d2e070 <line:455:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558928d2e0e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x558928d2e168 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x558928d2e558 <line:456:5, line:458:5> line:456:11 read_or_set 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x558928d2e230 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d2e2a8 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x558928d2e348 <col:54, col:57> col:57 referenced x 'T &'
|   |-ParmVarDecl 0x558928d2e418 <col:60, col:69> col:69 referenced default_value 'const V &'
|   `-CompoundStmt 0x558928d53be8 <col:84, line:458:5>
|     `-ReturnStmt 0x558928d53bd8 <line:457:9, col:64>
|       `-CallExpr 0x558928d53b90 <col:16, col:64> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d53a80 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d53af0 <col:28> 'const char *' lvalue ParmVar 0x558928d2e230 'keyword' 'const char *'
|         |-IntegerLiteral 0x558928d53b10 <col:37> 'int' 0
|         |-DeclRefExpr 0x558928d53b30 <col:40> 'P' lvalue ParmVar 0x558928d2e2a8 'parser' 'P'
|         |-DeclRefExpr 0x558928d53b50 <col:48> 'T' lvalue ParmVar 0x558928d2e348 'x' 'T &'
|         `-DeclRefExpr 0x558928d53b70 <col:51> 'const V' lvalue ParmVar 0x558928d2e418 'default_value' 'const V &'
|-FunctionTemplateDecl 0x558928d2eb78 <line:459:5, line:462:5> line:460:11 read_or_set_p
| |-TemplateTypeParmDecl 0x558928d2e670 <line:459:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558928d2e6e8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x558928d2e768 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x558928d2ead8 <line:460:5, line:462:5> line:460:11 read_or_set_p 'Args &(const char *, P, T &, const V &)'
|   |-ParmVarDecl 0x558928d2e830 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d2e8a8 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x558928d2e948 <col:56, col:59> col:59 referenced x 'T &'
|   |-ParmVarDecl 0x558928d2e9e8 <col:62, col:71> col:71 referenced default_value 'const V &'
|   `-CompoundStmt 0x558928d53d78 <col:86, line:462:5>
|     `-ReturnStmt 0x558928d53d68 <line:461:9, col:73>
|       `-CallExpr 0x558928d53d20 <col:16, col:73> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d53c10 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d53c80 <col:28> 'const char *' lvalue ParmVar 0x558928d2e830 'keyword' 'const char *'
|         |-DeclRefExpr 0x558928d53ca0 <col:37> 'const int' lvalue Var 0x558928d2a750 'positional' 'const int'
|         |-DeclRefExpr 0x558928d53cc0 <col:49> 'P' lvalue ParmVar 0x558928d2e8a8 'parser' 'P'
|         |-DeclRefExpr 0x558928d53ce0 <col:57> 'T' lvalue ParmVar 0x558928d2e948 'x' 'T &'
|         `-DeclRefExpr 0x558928d53d00 <col:60> 'const V' lvalue ParmVar 0x558928d2e9e8 'default_value' 'const V &'
|-FunctionTemplateDecl 0x558928d2f208 <line:463:5, line:467:5> line:464:11 read_or_set
| |-TemplateTypeParmDecl 0x558928d2ebf0 <line:463:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558928d2ec68 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| |-TemplateTypeParmDecl 0x558928d2ece8 <col:39, col:48> col:48 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x558928d2f168 <line:464:5, line:467:5> line:464:11 read_or_set 'Args &(const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x558928d2edb0 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d2ee30 <col:44, col:48> col:48 referenced flags 'int'
|   |-ParmVarDecl 0x558928d2eea8 <col:55, col:57> col:57 referenced parser 'P'
|   |-ParmVarDecl 0x558928d2ef48 <col:65, col:68> col:68 referenced x 'T &'
|   |-ParmVarDecl 0x558928d2f018 <col:71, col:80> col:80 referenced default_value 'const V &'
|   `-CompoundStmt 0x558928d53f08 <col:95, line:467:5>
|     |-CallExpr 0x558928d53e80 <line:465:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x558928d53d90 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_or_set' empty
|     | |-CXXThisExpr 0x558928d53dd0 <col:31> 'Args *' this
|     | |-DeclRefExpr 0x558928d53de0 <col:37> 'const char *' lvalue ParmVar 0x558928d2edb0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x558928d53e00 <col:46> 'int' lvalue ParmVar 0x558928d2ee30 'flags' 'int'
|     | |-DeclRefExpr 0x558928d53e20 <col:53> 'P' lvalue ParmVar 0x558928d2eea8 'parser' 'P'
|     | |-DeclRefExpr 0x558928d53e40 <col:61> 'T' lvalue ParmVar 0x558928d2ef48 'x' 'T &'
|     | `-DeclRefExpr 0x558928d53e60 <col:64> 'const V' lvalue ParmVar 0x558928d2f018 'default_value' 'const V &'
|     `-ReturnStmt 0x558928d53ef8 <line:466:9, col:17>
|       `-UnaryOperator 0x558928d53ee0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558928d53ed0 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x558928d2f7e8 <line:478:5, line:481:5> line:479:11 read
| |-TemplateTypeParmDecl 0x558928d2f288 <line:478:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558928d2f308 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x558928d2f388 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x558928d2f748 <line:479:5, line:481:5> line:479:11 read 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x558928d2f450 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d2f4c8 <col:37, col:39> col:39 referenced parser 'P'
|   |-ParmVarDecl 0x558928d2f568 <col:47, col:51> col:51 referenced x1 'T1 &'
|   |-ParmVarDecl 0x558928d2f608 <col:55, col:59> col:59 referenced x2 'T2 &'
|   `-CompoundStmt 0x558928d540b0 <col:63, line:481:5>
|     `-ReturnStmt 0x558928d540a0 <line:480:9, col:47>
|       `-CallExpr 0x558928d54058 <col:16, col:47> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d53f38 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d53fb8 <col:21> 'const char *' lvalue ParmVar 0x558928d2f450 'keyword' 'const char *'
|         |-IntegerLiteral 0x558928d53fd8 <col:30> 'int' 0
|         |-DeclRefExpr 0x558928d53ff8 <col:33> 'P' lvalue ParmVar 0x558928d2f4c8 'parser' 'P'
|         |-DeclRefExpr 0x558928d54018 <col:41> 'T1' lvalue ParmVar 0x558928d2f568 'x1' 'T1 &'
|         `-DeclRefExpr 0x558928d54038 <col:45> 'T2' lvalue ParmVar 0x558928d2f608 'x2' 'T2 &'
|-FunctionTemplateDecl 0x558928d2fd68 <line:482:5, line:485:5> line:483:11 read_m
| |-TemplateTypeParmDecl 0x558928d2f860 <line:482:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558928d2f8d8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x558928d2f958 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x558928d2fcc8 <line:483:5, line:485:5> line:483:11 read_m 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x558928d2fa20 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d2fa98 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x558928d2fb38 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x558928d2fbd8 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x558928d54250 <col:65, line:485:5>
|     `-ReturnStmt 0x558928d54240 <line:484:9, col:55>
|       `-CallExpr 0x558928d541f8 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d540d8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d54158 <col:21> 'const char *' lvalue ParmVar 0x558928d2fa20 'keyword' 'const char *'
|         |-DeclRefExpr 0x558928d54178 <col:30> 'const int' lvalue Var 0x558928d2a658 'mandatory' 'const int'
|         |-DeclRefExpr 0x558928d54198 <col:41> 'P' lvalue ParmVar 0x558928d2fa98 'parser' 'P'
|         |-DeclRefExpr 0x558928d541b8 <col:49> 'T1' lvalue ParmVar 0x558928d2fb38 'x1' 'T1 &'
|         `-DeclRefExpr 0x558928d541d8 <col:53> 'T2' lvalue ParmVar 0x558928d2fbd8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x558928d302e8 <line:486:5, line:489:5> line:487:11 read_p
| |-TemplateTypeParmDecl 0x558928d2fde0 <line:486:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558928d2fe58 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x558928d2fed8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x558928d30248 <line:487:5, line:489:5> line:487:11 read_p 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x558928d2ffa0 <col:18, col:30> col:30 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d30018 <col:39, col:41> col:41 referenced parser 'P'
|   |-ParmVarDecl 0x558928d300b8 <col:49, col:53> col:53 referenced x1 'T1 &'
|   |-ParmVarDecl 0x558928d30158 <col:57, col:61> col:61 referenced x2 'T2 &'
|   `-CompoundStmt 0x558928d543f0 <col:65, line:489:5>
|     `-ReturnStmt 0x558928d543e0 <line:488:9, col:56>
|       `-CallExpr 0x558928d54398 <col:16, col:56> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d54278 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d542f8 <col:21> 'const char *' lvalue ParmVar 0x558928d2ffa0 'keyword' 'const char *'
|         |-DeclRefExpr 0x558928d54318 <col:30> 'const int' lvalue Var 0x558928d2a750 'positional' 'const int'
|         |-DeclRefExpr 0x558928d54338 <col:42> 'P' lvalue ParmVar 0x558928d30018 'parser' 'P'
|         |-DeclRefExpr 0x558928d54358 <col:50> 'T1' lvalue ParmVar 0x558928d300b8 'x1' 'T1 &'
|         `-DeclRefExpr 0x558928d54378 <col:54> 'T2' lvalue ParmVar 0x558928d30158 'x2' 'T2 &'
|-FunctionTemplateDecl 0x558928d30868 <line:490:5, line:493:5> line:491:11 read_mp
| |-TemplateTypeParmDecl 0x558928d30360 <line:490:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558928d303d8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x558928d30458 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x558928d307c8 <line:491:5, line:493:5> line:491:11 read_mp 'Args &(const char *, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x558928d30520 <col:19, col:31> col:31 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d30598 <col:40, col:42> col:42 referenced parser 'P'
|   |-ParmVarDecl 0x558928d30638 <col:50, col:54> col:54 referenced x1 'T1 &'
|   |-ParmVarDecl 0x558928d306d8 <col:58, col:62> col:62 referenced x2 'T2 &'
|   `-CompoundStmt 0x558928d54640 <col:66, line:493:5>
|     `-ReturnStmt 0x558928d54630 <line:492:9, col:68>
|       `-CallExpr 0x558928d545e8 <col:16, col:68> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d54418 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d54498 <col:21> 'const char *' lvalue ParmVar 0x558928d30520 'keyword' 'const char *'
|         |-BinaryOperator 0x558928d54568 <col:30, col:42> 'int' '|'
|         | |-ImplicitCastExpr 0x558928d54518 <col:30> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x558928d544f8 <col:30> 'const int' lvalue Var 0x558928d2a658 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x558928d54550 <col:42> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x558928d54530 <col:42> 'const int' lvalue Var 0x558928d2a750 'positional' 'const int' non_odr_use_constant
|         |-DeclRefExpr 0x558928d54588 <col:54> 'P' lvalue ParmVar 0x558928d30598 'parser' 'P'
|         |-DeclRefExpr 0x558928d545a8 <col:62> 'T1' lvalue ParmVar 0x558928d30638 'x1' 'T1 &'
|         `-DeclRefExpr 0x558928d545c8 <col:66> 'T2' lvalue ParmVar 0x558928d306d8 'x2' 'T2 &'
|-FunctionTemplateDecl 0x558928d30ec8 <line:494:5, line:498:5> line:495:11 read
| |-TemplateTypeParmDecl 0x558928d308e0 <line:494:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558928d30958 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x558928d309d8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x558928d30e28 <line:495:5, line:498:5> line:495:11 read 'Args &(const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x558928d30aa0 <col:16, col:28> col:28 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d30b20 <col:37, col:41> col:41 referenced flags 'int'
|   |-ParmVarDecl 0x558928d30b98 <col:48, col:50> col:50 referenced parser 'P'
|   |-ParmVarDecl 0x558928d30c38 <col:58, col:62> col:62 referenced x1 'T1 &'
|   |-ParmVarDecl 0x558928d30cd8 <col:66, col:70> col:70 referenced x2 'T2 &'
|   `-CompoundStmt 0x558928d547d0 <col:74, line:498:5>
|     |-CallExpr 0x558928d54748 <line:496:9, col:60> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x558928d54658 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read' empty
|     | |-CXXThisExpr 0x558928d54698 <col:24> 'Args *' this
|     | |-DeclRefExpr 0x558928d546a8 <col:30> 'const char *' lvalue ParmVar 0x558928d30aa0 'keyword' 'const char *'
|     | |-DeclRefExpr 0x558928d546c8 <col:39> 'int' lvalue ParmVar 0x558928d30b20 'flags' 'int'
|     | |-DeclRefExpr 0x558928d546e8 <col:46> 'P' lvalue ParmVar 0x558928d30b98 'parser' 'P'
|     | |-DeclRefExpr 0x558928d54708 <col:54> 'T1' lvalue ParmVar 0x558928d30c38 'x1' 'T1 &'
|     | `-DeclRefExpr 0x558928d54728 <col:58> 'T2' lvalue ParmVar 0x558928d30cd8 'x2' 'T2 &'
|     `-ReturnStmt 0x558928d547c0 <line:497:9, col:17>
|       `-UnaryOperator 0x558928d547a8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558928d54798 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x558928d31228 <line:506:5, line:509:5> line:507:11 read_with
| |-TemplateTypeParmDecl 0x558928d30f48 <line:506:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x558928d31188 <line:507:5, line:509:5> line:507:11 read_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x558928d31000 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d31078 <col:42, col:44> col:44 referenced parser 'P'
|   `-CompoundStmt 0x558928d54918 <col:52, line:509:5>
|     `-ReturnStmt 0x558928d54908 <line:508:9, col:44>
|       `-CallExpr 0x558928d548d0 <col:16, col:44> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d54800 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d54870 <col:26> 'const char *' lvalue ParmVar 0x558928d31000 'keyword' 'const char *'
|         |-IntegerLiteral 0x558928d54890 <col:35> 'int' 0
|         `-DeclRefExpr 0x558928d548b0 <col:38> 'P' lvalue ParmVar 0x558928d31078 'parser' 'P'
|-FunctionTemplateDecl 0x558928d31528 <line:510:5, line:513:5> line:511:11 read_m_with
| |-TemplateTypeParmDecl 0x558928d31290 <line:510:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x558928d31488 <line:511:5, line:513:5> line:511:11 read_m_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x558928d31340 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d313b8 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x558928d54a58 <col:54, line:513:5>
|     `-ReturnStmt 0x558928d54a48 <line:512:9, col:52>
|       `-CallExpr 0x558928d54a10 <col:16, col:52> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d54940 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d549b0 <col:26> 'const char *' lvalue ParmVar 0x558928d31340 'keyword' 'const char *'
|         |-DeclRefExpr 0x558928d549d0 <col:35> 'const int' lvalue Var 0x558928d2a658 'mandatory' 'const int'
|         `-DeclRefExpr 0x558928d549f0 <col:46> 'P' lvalue ParmVar 0x558928d313b8 'parser' 'P'
|-FunctionTemplateDecl 0x558928d31828 <line:514:5, line:517:5> line:515:11 read_p_with
| |-TemplateTypeParmDecl 0x558928d31590 <line:514:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x558928d31788 <line:515:5, line:517:5> line:515:11 read_p_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x558928d31640 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d316b8 <col:44, col:46> col:46 referenced parser 'P'
|   `-CompoundStmt 0x558928d54b98 <col:54, line:517:5>
|     `-ReturnStmt 0x558928d54b88 <line:516:9, col:53>
|       `-CallExpr 0x558928d54b50 <col:16, col:53> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d54a80 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d54af0 <col:26> 'const char *' lvalue ParmVar 0x558928d31640 'keyword' 'const char *'
|         |-DeclRefExpr 0x558928d54b10 <col:35> 'const int' lvalue Var 0x558928d2a750 'positional' 'const int'
|         `-DeclRefExpr 0x558928d54b30 <col:47> 'P' lvalue ParmVar 0x558928d316b8 'parser' 'P'
|-FunctionTemplateDecl 0x558928d31b28 <line:518:5, line:521:5> line:519:11 read_mp_with
| |-TemplateTypeParmDecl 0x558928d31890 <line:518:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x558928d31a88 <line:519:5, line:521:5> line:519:11 read_mp_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x558928d31940 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d319b8 <col:45, col:47> col:47 referenced parser 'P'
|   `-CompoundStmt 0x558928d56488 <col:55, line:521:5>
|     `-ReturnStmt 0x558928d56478 <line:520:9, col:65>
|       `-CallExpr 0x558928d56440 <col:16, col:65> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d562c0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d56330 <col:26> 'const char *' lvalue ParmVar 0x558928d31940 'keyword' 'const char *'
|         |-BinaryOperator 0x558928d56400 <col:35, col:47> 'int' '|'
|         | |-ImplicitCastExpr 0x558928d563b0 <col:35> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x558928d56390 <col:35> 'const int' lvalue Var 0x558928d2a658 'mandatory' 'const int' non_odr_use_constant
|         | `-ImplicitCastExpr 0x558928d563e8 <col:47> 'int' <LValueToRValue>
|         |   `-DeclRefExpr 0x558928d563c8 <col:47> 'const int' lvalue Var 0x558928d2a750 'positional' 'const int' non_odr_use_constant
|         `-DeclRefExpr 0x558928d56420 <col:59> 'P' lvalue ParmVar 0x558928d319b8 'parser' 'P'
|-FunctionTemplateDecl 0x558928d31ef8 <line:522:5, line:526:5> line:523:11 read_with
| |-TemplateTypeParmDecl 0x558928d31b90 <line:522:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x558928d31e58 <line:523:5, line:526:5> line:523:11 read_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x558928d31c40 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d31cc0 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x558928d31d38 <col:53, col:55> col:55 referenced parser 'P'
|   `-CompoundStmt 0x558928d565c8 <col:63, line:526:5>
|     |-CallExpr 0x558928d56550 <line:524:9, col:57> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x558928d564a0 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_with' empty
|     | |-CXXThisExpr 0x558928d564e0 <col:29> 'Args *' this
|     | |-DeclRefExpr 0x558928d564f0 <col:35> 'const char *' lvalue ParmVar 0x558928d31c40 'keyword' 'const char *'
|     | |-DeclRefExpr 0x558928d56510 <col:44> 'int' lvalue ParmVar 0x558928d31cc0 'flags' 'int'
|     | `-DeclRefExpr 0x558928d56530 <col:51> 'P' lvalue ParmVar 0x558928d31d38 'parser' 'P'
|     `-ReturnStmt 0x558928d565b8 <line:525:9, col:17>
|       `-UnaryOperator 0x558928d565a0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558928d56590 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x558928d32348 <line:538:5, line:541:5> line:539:11 read_with
| |-TemplateTypeParmDecl 0x558928d31f68 <line:538:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558928d31fe8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558928d322a8 <line:539:5, line:541:5> line:539:11 read_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x558928d320a8 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d32120 <col:42, col:44> col:44 referenced parser 'P'
|   |-ParmVarDecl 0x558928d321c8 <col:52, col:55> col:55 referenced x 'T &'
|   `-CompoundStmt 0x558928d56720 <col:58, line:541:5>
|     `-ReturnStmt 0x558928d56710 <line:540:9, col:39>
|       `-CallExpr 0x558928d566d8 <col:16, col:39> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d565f8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d56678 <col:21> 'const char *' lvalue ParmVar 0x558928d320a8 'keyword' 'const char *'
|         |-DeclRefExpr 0x558928d56698 <col:30> 'P' lvalue ParmVar 0x558928d32120 'parser' 'P'
|         `-DeclRefExpr 0x558928d566b8 <col:38> 'T' lvalue ParmVar 0x558928d321c8 'x' 'T &'
|-FunctionTemplateDecl 0x558928d32798 <line:542:5, line:545:5> line:543:11 read_m_with
| |-TemplateTypeParmDecl 0x558928d323b8 <line:542:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558928d32438 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558928d326f8 <line:543:5, line:545:5> line:543:11 read_m_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x558928d324f8 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d32570 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x558928d32618 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x558928d56858 <col:60, line:545:5>
|     `-ReturnStmt 0x558928d56848 <line:544:9, col:41>
|       `-CallExpr 0x558928d56810 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d56748 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d567b0 <col:23> 'const char *' lvalue ParmVar 0x558928d324f8 'keyword' 'const char *'
|         |-DeclRefExpr 0x558928d567d0 <col:32> 'P' lvalue ParmVar 0x558928d32570 'parser' 'P'
|         `-DeclRefExpr 0x558928d567f0 <col:40> 'T' lvalue ParmVar 0x558928d32618 'x' 'T &'
|-FunctionTemplateDecl 0x558928d32be8 <line:546:5, line:549:5> line:547:11 read_p_with
| |-TemplateTypeParmDecl 0x558928d32808 <line:546:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558928d32888 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558928d32b48 <line:547:5, line:549:5> line:547:11 read_p_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x558928d32948 <col:23, col:35> col:35 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d329c0 <col:44, col:46> col:46 referenced parser 'P'
|   |-ParmVarDecl 0x558928d32a68 <col:54, col:57> col:57 referenced x 'T &'
|   `-CompoundStmt 0x558928d56990 <col:60, line:549:5>
|     `-ReturnStmt 0x558928d56980 <line:548:9, col:41>
|       `-CallExpr 0x558928d56948 <col:16, col:41> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d56880 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d568e8 <col:23> 'const char *' lvalue ParmVar 0x558928d32948 'keyword' 'const char *'
|         |-DeclRefExpr 0x558928d56908 <col:32> 'P' lvalue ParmVar 0x558928d329c0 'parser' 'P'
|         `-DeclRefExpr 0x558928d56928 <col:40> 'T' lvalue ParmVar 0x558928d32a68 'x' 'T &'
|-FunctionTemplateDecl 0x558928d33090 <line:550:5, line:553:5> line:551:11 read_mp_with
| |-TemplateTypeParmDecl 0x558928d32c58 <line:550:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558928d32cd8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558928d32ff0 <line:551:5, line:553:5> line:551:11 read_mp_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x558928d32d98 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d32e10 <col:45, col:47> col:47 referenced parser 'P'
|   |-ParmVarDecl 0x558928d32eb8 <col:55, col:58> col:58 referenced x 'T &'
|   `-CompoundStmt 0x558928d56ac8 <col:61, line:553:5>
|     `-ReturnStmt 0x558928d56ab8 <line:552:9, col:42>
|       `-CallExpr 0x558928d56a80 <col:16, col:42> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d569b8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d56a20 <col:24> 'const char *' lvalue ParmVar 0x558928d32d98 'keyword' 'const char *'
|         |-DeclRefExpr 0x558928d56a40 <col:33> 'P' lvalue ParmVar 0x558928d32e10 'parser' 'P'
|         `-DeclRefExpr 0x558928d56a60 <col:41> 'T' lvalue ParmVar 0x558928d32eb8 'x' 'T &'
|-FunctionTemplateDecl 0x558928d33568 <line:554:5, line:557:5> line:555:11 read_with
| |-TemplateTypeParmDecl 0x558928d33100 <line:554:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558928d33178 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558928d334c8 <line:555:5, line:557:5> line:555:11 read_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x558928d33238 <col:21, col:33> col:33 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d332b8 <col:42, col:46> col:46 referenced flags 'int'
|   |-ParmVarDecl 0x558928d33330 <col:53, col:55> col:55 referenced parser 'P'
|   |-ParmVarDecl 0x558928d333d8 <col:63, col:66> col:66 referenced x 'T &'
|   `-CompoundStmt 0x558928d56c40 <col:69, line:557:5>
|     `-ReturnStmt 0x558928d56c30 <line:556:9, col:46>
|       `-CallExpr 0x558928d56bf0 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d56af0 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d56b70 <col:21> 'const char *' lvalue ParmVar 0x558928d33238 'keyword' 'const char *'
|         |-DeclRefExpr 0x558928d56b90 <col:30> 'int' lvalue ParmVar 0x558928d332b8 'flags' 'int'
|         |-DeclRefExpr 0x558928d56bb0 <col:37> 'P' lvalue ParmVar 0x558928d33330 'parser' 'P'
|         `-DeclRefExpr 0x558928d56bd0 <col:45> 'T' lvalue ParmVar 0x558928d333d8 'x' 'T &'
|-FunctionTemplateDecl 0x558928d33878 <line:568:5, line:571:5> line:569:11 read_all_with
| |-TemplateTypeParmDecl 0x558928d335e0 <line:568:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x558928d337d8 <line:569:5, line:571:5> line:569:11 read_all_with 'Args &(const char *, P)'
|   |-ParmVarDecl 0x558928d33690 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d33708 <col:46, col:48> col:48 referenced parser 'P'
|   `-CompoundStmt 0x558928d56d80 <col:56, line:571:5>
|     `-ReturnStmt 0x558928d56d70 <line:570:9, col:48>
|       `-CallExpr 0x558928d56d38 <col:16, col:48> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d56c68 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d56cd8 <col:30> 'const char *' lvalue ParmVar 0x558928d33690 'keyword' 'const char *'
|         |-IntegerLiteral 0x558928d56cf8 <col:39> 'int' 0
|         `-DeclRefExpr 0x558928d56d18 <col:42> 'P' lvalue ParmVar 0x558928d33708 'parser' 'P'
|-FunctionTemplateDecl 0x558928d33c08 <line:572:5, line:576:5> line:573:11 read_all_with
| |-TemplateTypeParmDecl 0x558928d338e0 <line:572:15, col:24> col:24 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x558928d33b68 <line:573:5, line:576:5> line:573:11 read_all_with 'Args &(const char *, int, P)'
|   |-ParmVarDecl 0x558928d33990 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d33a10 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x558928d33a88 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x558928d56f50 <col:67, line:576:5>
|     |-CallExpr 0x558928d56ed8 <line:574:9, col:74> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x558928d56d98 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x558928d56dd8 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x558928d56de8 <col:39> 'const char *' lvalue ParmVar 0x558928d33990 'keyword' 'const char *'
|     | |-BinaryOperator 0x558928d56e98 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x558928d56e48 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x558928d56e08 <col:48> 'int' lvalue ParmVar 0x558928d33a10 'flags' 'int'
|     | | `-ImplicitCastExpr 0x558928d56e80 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x558928d56e60 <col:56> 'const int' lvalue Var 0x558928d2a940 'firstmatch' 'const int' non_odr_use_constant
|     | `-DeclRefExpr 0x558928d56eb8 <col:68> 'P' lvalue ParmVar 0x558928d33a88 'parser' 'P'
|     `-ReturnStmt 0x558928d56f40 <line:575:9, col:17>
|       `-UnaryOperator 0x558928d56f28 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558928d56f18 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x558928d34058 <line:589:5, line:592:5> line:590:11 read_all_with
| |-TemplateTypeParmDecl 0x558928d33c78 <line:589:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558928d33cf8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558928d33fb8 <line:590:5, line:592:5> line:590:11 read_all_with 'Args &(const char *, P, T &)'
|   |-ParmVarDecl 0x558928d33db8 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d33e30 <col:46, col:48> col:48 referenced parser 'P'
|   |-ParmVarDecl 0x558928d33ed8 <col:56, col:59> col:59 referenced x 'T &'
|   `-CompoundStmt 0x558928d570c0 <col:62, line:592:5>
|     `-ReturnStmt 0x558928d570b0 <line:591:9, col:51>
|       `-CallExpr 0x558928d57070 <col:16, col:51> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d56f80 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d56ff0 <col:30> 'const char *' lvalue ParmVar 0x558928d33db8 'keyword' 'const char *'
|         |-IntegerLiteral 0x558928d57010 <col:39> 'int' 0
|         |-DeclRefExpr 0x558928d57030 <col:42> 'P' lvalue ParmVar 0x558928d33e30 'parser' 'P'
|         `-DeclRefExpr 0x558928d57050 <col:50> 'T' lvalue ParmVar 0x558928d33ed8 'x' 'T &'
|-FunctionTemplateDecl 0x558928d34538 <line:593:5, line:597:5> line:594:11 read_all_with
| |-TemplateTypeParmDecl 0x558928d340c8 <line:593:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558928d34148 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558928d34498 <line:594:5, line:597:5> line:594:11 read_all_with 'Args &(const char *, int, P, T &)'
|   |-ParmVarDecl 0x558928d34208 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d34288 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x558928d34300 <col:57, col:59> col:59 referenced parser 'P'
|   |-ParmVarDecl 0x558928d343a8 <col:67, col:70> col:70 referenced x 'T &'
|   `-CompoundStmt 0x558928d572b8 <col:73, line:597:5>
|     |-CallExpr 0x558928d57238 <line:595:9, col:77> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x558928d570d8 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all_with' empty
|     | |-CXXThisExpr 0x558928d57118 <col:33> 'Args *' this
|     | |-DeclRefExpr 0x558928d57128 <col:39> 'const char *' lvalue ParmVar 0x558928d34208 'keyword' 'const char *'
|     | |-BinaryOperator 0x558928d571d8 <col:48, col:56> 'int' '|'
|     | | |-ImplicitCastExpr 0x558928d57188 <col:48> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x558928d57148 <col:48> 'int' lvalue ParmVar 0x558928d34288 'flags' 'int'
|     | | `-ImplicitCastExpr 0x558928d571c0 <col:56> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x558928d571a0 <col:56> 'const int' lvalue Var 0x558928d2a940 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x558928d571f8 <col:68> 'P' lvalue ParmVar 0x558928d34300 'parser' 'P'
|     | `-DeclRefExpr 0x558928d57218 <col:76> 'T' lvalue ParmVar 0x558928d343a8 'x' 'T &'
|     `-ReturnStmt 0x558928d572a8 <line:596:9, col:17>
|       `-UnaryOperator 0x558928d57290 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558928d57280 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x558928d34ae8 <line:611:5, line:614:5> line:612:11 read_all
| |-TemplateTypeParmDecl 0x558928d345b0 <line:611:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558928d34628 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558928d34a48 <line:612:5, line:614:5> line:612:11 read_all 'Args &(const char *, P, Vector<T> &)'
|   |-ParmVarDecl 0x558928d346e8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d34760 <col:41, col:43> col:43 referenced parser 'P'
|   |-ParmVarDecl 0x558928d34920 <col:51, col:62> col:62 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x558928d57428 <col:65, line:614:5>
|     `-ReturnStmt 0x558928d57418 <line:613:9, col:46>
|       `-CallExpr 0x558928d573d8 <col:16, col:46> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d572e8 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d57358 <col:25> 'const char *' lvalue ParmVar 0x558928d346e8 'keyword' 'const char *'
|         |-IntegerLiteral 0x558928d57378 <col:34> 'int' 0
|         |-DeclRefExpr 0x558928d57398 <col:37> 'P' lvalue ParmVar 0x558928d34760 'parser' 'P'
|         `-DeclRefExpr 0x558928d573b8 <col:45> 'Vector<T>' lvalue ParmVar 0x558928d34920 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x558928d34f18 <line:615:5, line:618:5> line:616:11 read_all
| |-TemplateTypeParmDecl 0x558928d34b58 <line:615:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x558928d34e78 <line:616:5, line:618:5> line:616:11 read_all 'Args &(const char *, Vector<T> &)'
|   |-ParmVarDecl 0x558928d34c10 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d34d60 <col:41, col:52> col:52 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x558928d57640 <col:55, line:618:5>
|     `-ReturnStmt 0x558928d57630 <line:617:9, col:55>
|       `-CallExpr 0x558928d575f0 <col:16, col:55> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d57450 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d574c0 <col:25> 'const char *' lvalue ParmVar 0x558928d34c10 'keyword' 'const char *'
|         |-IntegerLiteral 0x558928d574e0 <col:34> 'int' 0
|         |-CXXUnresolvedConstructExpr 0x558928d575b0 <col:37, col:51> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x558928d575d0 <col:54> 'Vector<T>' lvalue ParmVar 0x558928d34d60 'x' 'Vector<T> &'
|-FunctionTemplateDecl 0x558928d354e8 <line:619:5, line:623:5> line:620:11 read_all
| |-TemplateTypeParmDecl 0x558928d34f80 <line:619:15, col:24> col:24 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558928d34ff8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558928d35448 <line:620:5, line:623:5> line:620:11 read_all 'Args &(const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x558928d350b8 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d35138 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x558928d351b0 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x558928d35300 <col:62, col:73> col:73 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x558928d57838 <col:76, line:623:5>
|     |-CallExpr 0x558928d577b8 <line:621:9, col:72> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x558928d57658 <col:9> '<overloaded function type>' lvalue (ADL) = 'args_base_read_all' empty
|     | |-CXXThisExpr 0x558928d57698 <col:28> 'Args *' this
|     | |-DeclRefExpr 0x558928d576a8 <col:34> 'const char *' lvalue ParmVar 0x558928d350b8 'keyword' 'const char *'
|     | |-BinaryOperator 0x558928d57758 <col:43, col:51> 'int' '|'
|     | | |-ImplicitCastExpr 0x558928d57708 <col:43> 'int' <LValueToRValue>
|     | | | `-DeclRefExpr 0x558928d576c8 <col:43> 'int' lvalue ParmVar 0x558928d35138 'flags' 'int'
|     | | `-ImplicitCastExpr 0x558928d57740 <col:51> 'int' <LValueToRValue>
|     | |   `-DeclRefExpr 0x558928d57720 <col:51> 'const int' lvalue Var 0x558928d2a940 'firstmatch' 'const int' non_odr_use_constant
|     | |-DeclRefExpr 0x558928d57778 <col:63> 'P' lvalue ParmVar 0x558928d351b0 'parser' 'P'
|     | `-DeclRefExpr 0x558928d57798 <col:71> 'Vector<T>' lvalue ParmVar 0x558928d35300 'x' 'Vector<T> &'
|     `-ReturnStmt 0x558928d57828 <line:622:9, col:17>
|       `-UnaryOperator 0x558928d57810 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558928d57800 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x558928d35a28 <line:624:5, line:627:5> line:625:11 read_all
| |-TemplateTypeParmDecl 0x558928d35560 <line:624:15, col:24> col:24 typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558928d355d8 <col:27, col:36> col:36 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558928d35988 <line:625:5, line:627:5> line:625:11 read_all 'Args &(const char *, int, Vector<T> &)'
|   |-ParmVarDecl 0x558928d35698 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d35718 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x558928d35860 <col:52, col:63> col:63 referenced x 'Vector<T> &'
|   `-CompoundStmt 0x558928d57aa0 <col:66, line:627:5>
|     `-ReturnStmt 0x558928d57a90 <line:626:9, col:59>
|       `-CallExpr 0x558928d57a50 <col:16, col:59> '<dependent type>'
|         |-UnresolvedMemberExpr 0x558928d57868 <col:16> '<bound member function type>' lvalue
|         |-DeclRefExpr 0x558928d578d8 <col:25> 'const char *' lvalue ParmVar 0x558928d35698 'keyword' 'const char *'
|         |-DeclRefExpr 0x558928d578f8 <col:34> 'int' lvalue ParmVar 0x558928d35718 'flags' 'int'
|         |-CXXUnresolvedConstructExpr 0x558928d57a10 <col:41, col:55> 'DefaultArg<T>' 'DefaultArg<T>'
|         `-DeclRefExpr 0x558928d57a30 <col:58> 'Vector<T>' lvalue ParmVar 0x558928d35860 'x' 'Vector<T> &'
|-CXXMethodDecl 0x558928d35ab8 <line:631:5, line:633:5> line:631:10 status 'bool () const'
| `-CompoundStmt 0x558928d57b20 <col:25, line:633:5>
|   `-ReturnStmt 0x558928d57b10 <line:632:9, col:16>
|     `-ImplicitCastExpr 0x558928d57af8 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x558928d57ac8 <col:16> 'const bool' lvalue ->_status 0x558928d41908
|         `-CXXThisExpr 0x558928d57ab8 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x558928d35c68 <line:636:5, line:639:5> line:636:11 status 'Args &(bool &)'
| |-ParmVarDecl 0x558928d35ba0 <col:18, col:24> col:24 used x 'bool &'
| `-CompoundStmt 0x558928d57c08 <col:27, line:639:5>
|   |-BinaryOperator 0x558928d57bb0 <line:637:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x558928d57b38 <col:9> 'bool' lvalue ParmVar 0x558928d35ba0 'x' 'bool &'
|   | `-ImplicitCastExpr 0x558928d57b98 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x558928d57b68 <col:13> 'bool' lvalue ->_status 0x558928d41908
|   |     `-CXXThisExpr 0x558928d57b58 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x558928d57bf8 <line:638:9, col:17>
|     `-UnaryOperator 0x558928d57be0 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558928d57bd0 <col:17> 'Args *' this
|-CXXMethodDecl 0x558928d35de8 <line:641:5, line:644:5> line:641:17 status 'const Args &(bool &) const'
| |-ParmVarDecl 0x558928d35d28 <col:24, col:30> col:30 used x 'bool &'
| `-CompoundStmt 0x558928d57cf8 <col:39, line:644:5>
|   |-BinaryOperator 0x558928d57ca0 <line:642:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x558928d57c28 <col:9> 'bool' lvalue ParmVar 0x558928d35d28 'x' 'bool &'
|   | `-ImplicitCastExpr 0x558928d57c88 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x558928d57c58 <col:13> 'const bool' lvalue ->_status 0x558928d41908
|   |     `-CXXThisExpr 0x558928d57c48 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x558928d57ce8 <line:643:9, col:17>
|     `-UnaryOperator 0x558928d57cd0 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558928d57cc0 <col:17> 'const Args *' this
|-CXXMethodDecl 0x558928d35eb0 <line:649:5, line:651:5> line:649:10 read_status 'bool () const'
| `-CompoundStmt 0x558928d57da0 <col:30, line:651:5>
|   `-ReturnStmt 0x558928d57d90 <line:650:9, col:16>
|     `-ImplicitCastExpr 0x558928d57d78 <col:16> 'bool' <LValueToRValue>
|       `-MemberExpr 0x558928d57d48 <col:16> 'bool' lvalue ->_read_status 0x558928d231c8
|         `-ImplicitCastExpr 0x558928d57d28 <col:16> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|           `-CXXThisExpr 0x558928d57d18 <col:16> 'const Args *' implicit this
|-CXXMethodDecl 0x558928d35ff8 <line:655:5, line:658:5> line:655:11 read_status 'Args &(bool &)'
| |-ParmVarDecl 0x558928d35f68 <col:23, col:29> col:29 used x 'bool &'
| `-CompoundStmt 0x558928d57ea8 <col:32, line:658:5>
|   |-BinaryOperator 0x558928d57e50 <line:656:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x558928d57db8 <col:9> 'bool' lvalue ParmVar 0x558928d35f68 'x' 'bool &'
|   | `-ImplicitCastExpr 0x558928d57e38 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x558928d57e08 <col:13> 'bool' lvalue ->_read_status 0x558928d231c8
|   |     `-ImplicitCastExpr 0x558928d57de8 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x558928d57dd8 <col:13> 'Args *' implicit this
|   `-ReturnStmt 0x558928d57e98 <line:657:9, col:17>
|     `-UnaryOperator 0x558928d57e80 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558928d57e70 <col:17> 'Args *' this
|-CXXMethodDecl 0x558928d36148 <line:660:5, line:663:5> line:660:17 read_status 'const Args &(bool &) const'
| |-ParmVarDecl 0x558928d360b8 <col:29, col:35> col:35 used x 'bool &'
| `-CompoundStmt 0x558928d57fb8 <col:44, line:663:5>
|   |-BinaryOperator 0x558928d57f60 <line:661:9, col:13> 'bool' lvalue '='
|   | |-DeclRefExpr 0x558928d57ec8 <col:9> 'bool' lvalue ParmVar 0x558928d360b8 'x' 'bool &'
|   | `-ImplicitCastExpr 0x558928d57f48 <col:13> 'bool' <LValueToRValue>
|   |   `-MemberExpr 0x558928d57f18 <col:13> 'bool' lvalue ->_read_status 0x558928d231c8
|   |     `-ImplicitCastExpr 0x558928d57ef8 <col:13> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|   |       `-CXXThisExpr 0x558928d57ee8 <col:13> 'const Args *' implicit this
|   `-ReturnStmt 0x558928d57fa8 <line:662:9, col:17>
|     `-UnaryOperator 0x558928d57f90 <col:16, col:17> 'const Args' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x558928d57f80 <col:17> 'const Args *' this
|-CXXMethodDecl 0x558928d36210 <line:667:5, col:17> col:11 strip 'Args &()'
|-CXXMethodDecl 0x558928d362d8 <line:675:5, col:17> col:9 execute 'int ()'
|-CXXMethodDecl 0x558928d363a0 <line:684:5, col:17> col:9 consume 'int ()'
|-CXXMethodDecl 0x558928d36468 <line:693:5, col:18> col:9 used complete 'int ()'
|-FunctionTemplateDecl 0x558928d36778 <line:700:5, line:706:5> line:701:8 slot
| |-TemplateTypeParmDecl 0x558928d36508 <line:700:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x558928d366d8 <line:701:5, line:706:5> line:701:8 slot 'T *(T &)'
|   |-ParmVarDecl 0x558928d365e8 <col:13, col:16> col:16 referenced x 'T &'
|   `-CompoundStmt 0x558928d58310 <col:19, line:706:5>
|     `-IfStmt 0x558928d582e8 <line:702:9, line:705:34> has_else
|       |-CXXDependentScopeMemberExpr 0x558928d580b8 <line:702:13, col:34> '<dependent type>' lvalue ->value
|       |-ReturnStmt 0x558928d58218 <line:703:13, col:68>
|       | `-CXXReinterpretCastExpr 0x558928d581e8 <col:20, col:68> 'T *' reinterpret_cast<T *> <Dependent>
|       |   `-CallExpr 0x558928d581a8 <col:42, col:67> '<dependent type>'
|       |     |-MemberExpr 0x558928d58110 <col:42> '<bound member function type>' ->simple_slot 0x558928d516d0
|       |     | `-CXXThisExpr 0x558928d58100 <col:42> 'Args *' implicit this
|       |     |-UnaryOperator 0x558928d58160 <col:54, col:55> '<dependent type>' prefix '&' cannot overflow
|       |     | `-DeclRefExpr 0x558928d58140 <col:55> 'T' lvalue ParmVar 0x558928d365e8 'x' 'T &'
|       |     `-UnaryExprOrTypeTraitExpr 0x558928d58188 <col:58, col:66> 'unsigned long' sizeof 'T'
|       `-ReturnStmt 0x558928d582d8 <line:705:13, col:34>
|         `-CallExpr 0x558928d582b0 <col:20, col:34> '<dependent type>'
|           |-UnresolvedMemberExpr 0x558928d58238 <col:20> '<bound member function type>' lvalue
|           `-DeclRefExpr 0x558928d58290 <col:33> 'T' lvalue ParmVar 0x558928d365e8 'x' 'T &'
|-FunctionTemplateDecl 0x558928d36a48 <line:711:5, line:717:5> line:712:8 initialized_slot
| |-TemplateTypeParmDecl 0x558928d367d8 <line:711:15, col:24> col:24 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x558928d369a8 <line:712:5, line:717:5> line:712:8 initialized_slot 'T *(T &)'
|   |-ParmVarDecl 0x558928d368b8 <col:25, col:28> col:28 referenced x 'T &'
|   `-CompoundStmt 0x558928d586f0 <col:31, line:717:5>
|     |-DeclStmt 0x558928d58450 <line:713:9, col:23>
|     | `-VarDecl 0x558928d58338 <col:9, col:22> col:12 referenced s 'T *' nrvo cinit
|     |   `-CallExpr 0x558928d58428 <col:16, col:22> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x558928d583b0 <col:16> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x558928d58408 <col:21> 'T' lvalue ParmVar 0x558928d368b8 'x' 'T &'
|     |-IfStmt 0x558928d586a0 <line:714:9, line:715:20>
|     | |-CXXDependentScopeMemberExpr 0x558928d58548 <line:714:13, col:34> '<dependent type>' lvalue ->value
|     | `-BinaryOperator 0x558928d58680 <line:715:13, col:20> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x558928d58620 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x558928d585b0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x558928bdbc28 0x558928bdb848 0x558928bdb478 0x558928bdb098 0x558928bdacb8 0x558928bda8e8
|     |   | `-DeclRefExpr 0x558928d58590 <col:14> 'T *' lvalue Var 0x558928d58338 's' 'T *'
|     |   `-CXXUnresolvedConstructExpr 0x558928d58660 <col:18, col:20> 'T' 'T'
|     `-ReturnStmt 0x558928d586d8 <line:716:9, col:16>
|       `-DeclRefExpr 0x558928d586b8 <col:16> 'T *' lvalue Var 0x558928d58338 's' 'T *'
|-FunctionTemplateDecl 0x558928d36e58 <line:721:5, line:726:5> line:722:11 set
| |-TemplateTypeParmDecl 0x558928d36aa8 <line:721:15, col:24> col:24 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x558928d36b28 <col:27, col:36> col:36 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x558928d36db8 <line:722:5, line:726:5> line:722:11 set 'Args &(T &, const V &)'
|   |-ParmVarDecl 0x558928d36c08 <col:15, col:18> col:18 referenced x 'T &'
|   |-ParmVarDecl 0x558928d36ca8 <col:21, col:30> col:30 referenced value 'const V &'
|   `-CompoundStmt 0x558928d58a00 <col:37, line:726:5>
|     |-IfStmt 0x558928d58990 <line:723:9, line:724:18> has_var
|     | |-DeclStmt 0x558928d589b0 <line:723:13, col:26>
|     | | `-VarDecl 0x558928d58758 <col:13, col:26> col:16 referenced s 'T *' cinit
|     | |   `-CallExpr 0x558928d58848 <col:20, col:26> '<dependent type>'
|     | |     |-UnresolvedMemberExpr 0x558928d587d0 <col:20> '<bound member function type>' lvalue
|     | |     `-DeclRefExpr 0x558928d58828 <col:25> 'T' lvalue ParmVar 0x558928d36c08 'x' 'T &'
|     | |-DeclRefExpr 0x558928d58870 <col:16> 'T *' lvalue Var 0x558928d58758 's' 'T *'
|     | `-BinaryOperator 0x558928d58970 <line:724:13, col:18> '<dependent type>' '='
|     |   |-CXXOperatorCallExpr 0x558928d58920 <col:13, col:14> '<dependent type>'
|     |   | |-UnresolvedLookupExpr 0x558928d588b0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x558928bdbc28 0x558928bdb848 0x558928bdb478 0x558928bdb098 0x558928bdacb8 0x558928bda8e8
|     |   | `-DeclRefExpr 0x558928d58890 <col:14> 'T *' lvalue Var 0x558928d58758 's' 'T *'
|     |   `-DeclRefExpr 0x558928d58950 <col:18> 'const V' lvalue ParmVar 0x558928d36ca8 'value' 'const V &'
|     `-ReturnStmt 0x558928d589f0 <line:725:9, col:17>
|       `-UnaryOperator 0x558928d589d8 <col:16, col:17> 'Args' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x558928d589c8 <col:17> 'Args *' this
|-FunctionTemplateDecl 0x558928d37268 <line:730:5, line:737:5> line:731:10 base_read
| |-TemplateTypeParmDecl 0x558928d36ec0 <line:730:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXMethodDecl 0x558928d371c8 <line:731:5, line:737:5> line:731:10 base_read 'void (const char *, int, T &)'
|   |-ParmVarDecl 0x558928d36f70 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d37000 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x558928d370a8 <col:52, col:55> col:55 referenced variable 'T &'
|   `-CompoundStmt 0x558928d59820 <col:65, line:737:5>
|     |-DeclStmt 0x558928d58a98 <line:732:9, col:26>
|     | `-VarDecl 0x558928d58a30 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x558928d597e8 <line:733:9, line:736:9> has_var
|       |-DeclStmt 0x558928d59808 <line:733:13, col:58>
|       | `-VarDecl 0x558928d58ac0 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x558928d58ca0 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x558928d58c70 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x558928d58c58 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x558928d58c38 <col:26, col:58> 'String' (CXXTemporary 0x558928d58c38)
|       |           `-CXXMemberCallExpr 0x558928d58bc8 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x558928d58b38 <col:26> '<bound member function type>' ->find 0x558928d50ce8
|       |             | `-CXXThisExpr 0x558928d58b28 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x558928d58c00 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x558928d58b68 <col:31> 'const char *' lvalue ParmVar 0x558928d36f70 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x558928d58c18 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x558928d58b88 <col:40> 'int' lvalue ParmVar 0x558928d37000 'flags' 'int'
|       |             `-DeclRefExpr 0x558928d58ba8 <col:47> 'Args::Slot *' lvalue Var 0x558928d58a30 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x558928d58d58 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x558928d58d40 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x558928d58d20 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x558928d58cf0 <col:20> '<bound member function type>' .operator int (String::*)() const 0x558928b07a78
|       |       `-ImplicitCastExpr 0x558928d58cd8 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x558928d58cb8 <col:20> 'String' lvalue Var 0x558928d58ac0 'str' 'String'
|       `-CompoundStmt 0x558928d597c8 <col:61, line:736:9>
|         |-DeclStmt 0x558928d59210 <line:734:13, col:76>
|         | `-VarDecl 0x558928d58da8 <col:13, col:75> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x558928d591e0 <col:20, col:75> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x558928d59150 <col:20, col:55> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x558928d59198 <col:60> 'T' lvalue ParmVar 0x558928d370a8 'variable' 'T &'
|         |     `-UnaryOperator 0x558928d591c8 <col:70, col:71> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x558928d591b8 <col:71> 'Args *' this
|         `-CallExpr 0x558928d59798 <line:735:13, col:114> '<dependent type>'
|           |-MemberExpr 0x558928d59238 <col:13> '<bound member function type>' ->postparse 0x558928d50ef8
|           | `-CXXThisExpr 0x558928d59228 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x558928d59758 <col:23, col:100> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x558928d59268 <col:23> 'T *' lvalue Var 0x558928d58da8 's' 'T *'
|           | `-CallExpr 0x558928d59718 <col:28, col:100> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x558928d594f0 <col:28, col:63> '<dependent type>' lvalue ->parse
|           |   |-CXXUnresolvedConstructExpr 0x558928d595f0 <col:69, col:83> 'DefaultArg<T>' 'DefaultArg<T>'
|           |   |-DeclRefExpr 0x558928d59610 <col:86> 'String' lvalue Var 0x558928d58ac0 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x558928d596c0 <col:91, col:92> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x558928d59650 <col:91> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x558928bdbc28 0x558928bdb848 0x558928bdb478 0x558928bdb098 0x558928bdacb8 0x558928bda8e8
|           |   | `-DeclRefExpr 0x558928d59630 <col:92> 'T *' lvalue Var 0x558928d58da8 's' 'T *'
|           |   `-UnaryOperator 0x558928d59700 <col:95, col:96> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x558928d596f0 <col:96> 'Args *' this
|           `-DeclRefExpr 0x558928d59778 <col:103> 'Args::Slot *' lvalue Var 0x558928d58a30 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x558928d377b8 <line:739:5, line:745:5> line:740:10 base_read_or_set
| |-TemplateTypeParmDecl 0x558928d372d8 <line:739:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x558928d37358 <col:26, col:35> col:35 referenced typename depth 0 index 1 V
| `-CXXMethodDecl 0x558928d37718 <line:740:5, line:745:5> line:740:10 base_read_or_set 'void (const char *, int, T &, const V &)'
|   |-ParmVarDecl 0x558928d37418 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d37498 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x558928d37538 <col:59, col:62> col:62 referenced variable 'T &'
|   |-ParmVarDecl 0x558928d375d8 <col:72, col:81> col:81 referenced value 'const V &'
|   `-CompoundStmt 0x558928d5cae0 <col:88, line:745:5>
|     |-DeclStmt 0x558928d598b8 <line:741:9, col:26>
|     | `-VarDecl 0x558928d59850 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x558928d59ad8 <line:742:9, col:55>
|     | `-VarDecl 0x558928d598e0 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x558928d59ac0 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x558928d59a90 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x558928d59a78 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x558928d59a58 <col:22, col:54> 'String' (CXXTemporary 0x558928d59a58)
|     |           `-CXXMemberCallExpr 0x558928d599e8 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x558928d59958 <col:22> '<bound member function type>' ->find 0x558928d50ce8
|     |             | `-CXXThisExpr 0x558928d59948 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x558928d59a20 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x558928d59988 <col:27> 'const char *' lvalue ParmVar 0x558928d37418 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x558928d59a38 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x558928d599a8 <col:36> 'int' lvalue ParmVar 0x558928d37498 'flags' 'int'
|     |             `-DeclRefExpr 0x558928d599c8 <col:43> 'Args::Slot *' lvalue Var 0x558928d59850 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x558928d59eb0 <line:743:9, col:72>
|     | `-VarDecl 0x558928d59b28 <col:9, col:71> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x558928d59e80 <col:16, col:71> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x558928d59df0 <col:16, col:51> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x558928d59e38 <col:56> 'T' lvalue ParmVar 0x558928d37538 'variable' 'T &'
|     |     `-UnaryOperator 0x558928d59e68 <col:66, col:67> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x558928d59e58 <col:67> 'Args *' this
|     `-CallExpr 0x558928d5cab0 <line:744:9, col:139> '<dependent type>'
|       |-MemberExpr 0x558928d59ed8 <col:9> '<bound member function type>' ->postparse 0x558928d50ef8
|       | `-CXXThisExpr 0x558928d59ec8 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x558928d5ca70 <col:19, col:125> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x558928d59f08 <col:19> 'T *' lvalue Var 0x558928d59b28 's' 'T *'
|       | `-ParenExpr 0x558928d5ca50 <col:24, col:125> '<dependent type>'
|       |   `-ConditionalOperator 0x558928d5ca20 <col:25, col:124> '<dependent type>'
|       |     |-ImplicitCastExpr 0x558928d5ca08 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x558928d5c9f0 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x558928d5c9d0 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x558928d5c9a0 <col:25> '<bound member function type>' .operator int (String::*)() const 0x558928b07a78
|       |     |       `-ImplicitCastExpr 0x558928d5c988 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x558928d59f28 <col:25> 'String' lvalue Var 0x558928d598e0 'str' 'String'
|       |     |-CallExpr 0x558928d5c7f8 <col:31, col:103> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x558928d5a1b0 <col:31, col:66> '<dependent type>' lvalue ->parse
|       |     | |-CXXUnresolvedConstructExpr 0x558928d5c6d0 <col:72, col:86> 'DefaultArg<T>' 'DefaultArg<T>'
|       |     | |-DeclRefExpr 0x558928d5c6f0 <col:89> 'String' lvalue Var 0x558928d598e0 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x558928d5c7a0 <col:94, col:95> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x558928d5c730 <col:94> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x558928bdbc28 0x558928bdb848 0x558928bdb478 0x558928bdb098 0x558928bdacb8 0x558928bda8e8
|       |     | | `-DeclRefExpr 0x558928d5c710 <col:95> 'T *' lvalue Var 0x558928d59b28 's' 'T *'
|       |     | `-UnaryOperator 0x558928d5c7e0 <col:98, col:99> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x558928d5c7d0 <col:99> 'Args *' this
|       |     `-ParenExpr 0x558928d5c968 <col:107, col:124> '<dependent type>'
|       |       `-BinaryOperator 0x558928d5c948 <col:108, col:120> '<dependent type>' ','
|       |         |-BinaryOperator 0x558928d5c918 <col:108, col:113> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x558928d5c8c8 <col:108, col:109> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x558928d5c858 <col:108> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x558928bdbc28 0x558928bdb848 0x558928bdb478 0x558928bdb098 0x558928bdacb8 0x558928bda8e8
|       |         | | `-DeclRefExpr 0x558928d5c838 <col:109> 'T *' lvalue Var 0x558928d59b28 's' 'T *'
|       |         | `-DeclRefExpr 0x558928d5c8f8 <col:113> 'const V' lvalue ParmVar 0x558928d375d8 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x558928d5c938 <col:120> 'bool' true
|       `-DeclRefExpr 0x558928d5ca90 <col:128> 'Args::Slot *' lvalue Var 0x558928d59850 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x558928d37ce8 <line:747:5, line:754:5> line:748:10 base_read
| |-TemplateTypeParmDecl 0x558928d37830 <line:747:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558928d378a8 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558928d37c48 <line:748:5, line:754:5> line:748:10 base_read 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x558928d37968 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d379e8 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x558928d37a60 <col:52, col:54> col:54 referenced parser 'P'
|   |-ParmVarDecl 0x558928d37b08 <col:62, col:65> col:65 referenced variable 'T &'
|   `-CompoundStmt 0x558928d5d6d8 <col:75, line:754:5>
|     |-DeclStmt 0x558928d5cb88 <line:749:9, col:26>
|     | `-VarDecl 0x558928d5cb20 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x558928d5d6a0 <line:750:9, line:753:9> has_var
|       |-DeclStmt 0x558928d5d6c0 <line:750:13, col:58>
|       | `-VarDecl 0x558928d5cbb0 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x558928d5cd90 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x558928d5cd60 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x558928d5cd48 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x558928d5cd28 <col:26, col:58> 'String' (CXXTemporary 0x558928d5cd28)
|       |           `-CXXMemberCallExpr 0x558928d5ccb8 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x558928d5cc28 <col:26> '<bound member function type>' ->find 0x558928d50ce8
|       |             | `-CXXThisExpr 0x558928d5cc18 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x558928d5ccf0 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x558928d5cc58 <col:31> 'const char *' lvalue ParmVar 0x558928d37968 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x558928d5cd08 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x558928d5cc78 <col:40> 'int' lvalue ParmVar 0x558928d379e8 'flags' 'int'
|       |             `-DeclRefExpr 0x558928d5cc98 <col:47> 'Args::Slot *' lvalue Var 0x558928d5cb20 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x558928d5ce48 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x558928d5ce30 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x558928d5ce10 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x558928d5cde0 <col:20> '<bound member function type>' .operator int (String::*)() const 0x558928b07a78
|       |       `-ImplicitCastExpr 0x558928d5cdc8 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x558928d5cda8 <col:20> 'String' lvalue Var 0x558928d5cbb0 'str' 'String'
|       `-CompoundStmt 0x558928d5d680 <col:61, line:753:9>
|         |-DeclStmt 0x558928d5d220 <line:751:13, col:63>
|         | `-VarDecl 0x558928d5ce98 <col:13, col:62> col:16 referenced s 'T *' cinit
|         |   `-CallExpr 0x558928d5d1f0 <col:20, col:62> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x558928d5d160 <col:20, col:42> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x558928d5d1a8 <col:47> 'T' lvalue ParmVar 0x558928d37b08 'variable' 'T &'
|         |     `-UnaryOperator 0x558928d5d1d8 <col:57, col:58> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x558928d5d1c8 <col:58> 'Args *' this
|         `-CallExpr 0x558928d5d650 <line:752:13, col:92> '<dependent type>'
|           |-MemberExpr 0x558928d5d248 <col:13> '<bound member function type>' ->postparse 0x558928d50ef8
|           | `-CXXThisExpr 0x558928d5d238 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x558928d5d610 <col:23, col:78> '<dependent type>' '&&'
|           | |-DeclRefExpr 0x558928d5d278 <col:23> 'T *' lvalue Var 0x558928d5ce98 's' 'T *'
|           | `-CallExpr 0x558928d5d5d0 <col:28, col:78> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x558928d5d460 <col:28, col:50> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x558928d5d4a8 <col:56> 'P' lvalue ParmVar 0x558928d37a60 'parser' 'P'
|           |   |-DeclRefExpr 0x558928d5d4c8 <col:64> 'String' lvalue Var 0x558928d5cbb0 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x558928d5d578 <col:69, col:70> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x558928d5d508 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x558928bdbc28 0x558928bdb848 0x558928bdb478 0x558928bdb098 0x558928bdacb8 0x558928bda8e8
|           |   | `-DeclRefExpr 0x558928d5d4e8 <col:70> 'T *' lvalue Var 0x558928d5ce98 's' 'T *'
|           |   `-UnaryOperator 0x558928d5d5b8 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x558928d5d5a8 <col:74> 'Args *' this
|           `-DeclRefExpr 0x558928d5d630 <col:81> 'Args::Slot *' lvalue Var 0x558928d5cb20 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x558928d38348 <line:756:5, line:762:5> line:757:10 base_read_or_set
| |-TemplateTypeParmDecl 0x558928d37d60 <line:756:14, col:23> col:23 referenced typename depth 0 index 0 T
| |-TemplateTypeParmDecl 0x558928d37dd8 <col:26, col:35> col:35 referenced typename depth 0 index 1 P
| |-TemplateTypeParmDecl 0x558928d37e58 <col:38, col:47> col:47 referenced typename depth 0 index 2 V
| `-CXXMethodDecl 0x558928d382a8 <line:757:5, line:762:5> line:757:10 base_read_or_set 'void (const char *, int, P, T &, const V &)'
|   |-ParmVarDecl 0x558928d37f20 <col:27, col:39> col:39 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d37fa0 <col:48, col:52> col:52 referenced flags 'int'
|   |-ParmVarDecl 0x558928d38018 <col:59, col:61> col:61 referenced parser 'P'
|   |-ParmVarDecl 0x558928d380b8 <col:69, col:72> col:72 referenced variable 'T &'
|   |-ParmVarDecl 0x558928d38158 <col:82, col:91> col:91 referenced value 'const V &'
|   `-CompoundStmt 0x558928d5e468 <col:98, line:762:5>
|     |-DeclStmt 0x558928d5d770 <line:758:9, col:26>
|     | `-VarDecl 0x558928d5d708 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x558928d5d990 <line:759:9, col:55>
|     | `-VarDecl 0x558928d5d798 <col:9, col:54> col:16 referenced str 'String' cinit destroyed
|     |   `-ExprWithCleanups 0x558928d5d978 <col:22, col:54> 'String'
|     |     `-CXXConstructExpr 0x558928d5d948 <col:22, col:54> 'String' 'void (String &&)' elidable
|     |       `-MaterializeTemporaryExpr 0x558928d5d930 <col:22, col:54> 'String' xvalue
|     |         `-CXXBindTemporaryExpr 0x558928d5d910 <col:22, col:54> 'String' (CXXTemporary 0x558928d5d910)
|     |           `-CXXMemberCallExpr 0x558928d5d8a0 <col:22, col:54> 'String'
|     |             |-MemberExpr 0x558928d5d810 <col:22> '<bound member function type>' ->find 0x558928d50ce8
|     |             | `-CXXThisExpr 0x558928d5d800 <col:22> 'Args *' implicit this
|     |             |-ImplicitCastExpr 0x558928d5d8d8 <col:27> 'const char *' <LValueToRValue>
|     |             | `-DeclRefExpr 0x558928d5d840 <col:27> 'const char *' lvalue ParmVar 0x558928d37f20 'keyword' 'const char *'
|     |             |-ImplicitCastExpr 0x558928d5d8f0 <col:36> 'int' <LValueToRValue>
|     |             | `-DeclRefExpr 0x558928d5d860 <col:36> 'int' lvalue ParmVar 0x558928d37fa0 'flags' 'int'
|     |             `-DeclRefExpr 0x558928d5d880 <col:43> 'Args::Slot *' lvalue Var 0x558928d5d708 'slot_status' 'Args::Slot *'
|     |-DeclStmt 0x558928d5ddb0 <line:760:9, col:59>
|     | `-VarDecl 0x558928d5d9e8 <col:9, col:58> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x558928d5dd80 <col:16, col:58> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x558928d5dcf0 <col:16, col:38> '<dependent type>' lvalue ->slot
|     |     |-DeclRefExpr 0x558928d5dd38 <col:43> 'T' lvalue ParmVar 0x558928d380b8 'variable' 'T &'
|     |     `-UnaryOperator 0x558928d5dd68 <col:53, col:54> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x558928d5dd58 <col:54> 'Args *' this
|     `-CallExpr 0x558928d5e438 <line:761:9, col:117> '<dependent type>'
|       |-MemberExpr 0x558928d5ddd8 <col:9> '<bound member function type>' ->postparse 0x558928d50ef8
|       | `-CXXThisExpr 0x558928d5ddc8 <col:9> 'Args *' implicit this
|       |-BinaryOperator 0x558928d5e3f8 <col:19, col:103> '<dependent type>' '&&'
|       | |-DeclRefExpr 0x558928d5de08 <col:19> 'T *' lvalue Var 0x558928d5d9e8 's' 'T *'
|       | `-ParenExpr 0x558928d5e3d8 <col:24, col:103> '<dependent type>'
|       |   `-ConditionalOperator 0x558928d5e3a8 <col:25, col:102> '<dependent type>'
|       |     |-ImplicitCastExpr 0x558928d5e390 <col:25> 'bool' <MemberPointerToBoolean>
|       |     | `-ImplicitCastExpr 0x558928d5e378 <col:25> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |     |   `-CXXMemberCallExpr 0x558928d5e358 <col:25> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     |     `-MemberExpr 0x558928d5e328 <col:25> '<bound member function type>' .operator int (String::*)() const 0x558928b07a78
|       |     |       `-ImplicitCastExpr 0x558928d5e310 <col:25> 'const String' lvalue <NoOp>
|       |     |         `-DeclRefExpr 0x558928d5de28 <col:25> 'String' lvalue Var 0x558928d5d798 'str' 'String'
|       |     |-CallExpr 0x558928d5e180 <col:31, col:81> '<dependent type>'
|       |     | |-CXXDependentScopeMemberExpr 0x558928d5e010 <col:31, col:53> '<dependent type>' lvalue ->parse
|       |     | |-DeclRefExpr 0x558928d5e058 <col:59> 'P' lvalue ParmVar 0x558928d38018 'parser' 'P'
|       |     | |-DeclRefExpr 0x558928d5e078 <col:67> 'String' lvalue Var 0x558928d5d798 'str' 'String'
|       |     | |-CXXOperatorCallExpr 0x558928d5e128 <col:72, col:73> '<dependent type>'
|       |     | | |-UnresolvedLookupExpr 0x558928d5e0b8 <col:72> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x558928bdbc28 0x558928bdb848 0x558928bdb478 0x558928bdb098 0x558928bdacb8 0x558928bda8e8
|       |     | | `-DeclRefExpr 0x558928d5e098 <col:73> 'T *' lvalue Var 0x558928d5d9e8 's' 'T *'
|       |     | `-UnaryOperator 0x558928d5e168 <col:76, col:77> 'Args' lvalue prefix '*' cannot overflow
|       |     |   `-CXXThisExpr 0x558928d5e158 <col:77> 'Args *' this
|       |     `-ParenExpr 0x558928d5e2f0 <col:85, col:102> '<dependent type>'
|       |       `-BinaryOperator 0x558928d5e2d0 <col:86, col:98> '<dependent type>' ','
|       |         |-BinaryOperator 0x558928d5e2a0 <col:86, col:91> '<dependent type>' '='
|       |         | |-CXXOperatorCallExpr 0x558928d5e250 <col:86, col:87> '<dependent type>'
|       |         | | |-UnresolvedLookupExpr 0x558928d5e1e0 <col:86> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x558928bdbc28 0x558928bdb848 0x558928bdb478 0x558928bdb098 0x558928bdacb8 0x558928bda8e8
|       |         | | `-DeclRefExpr 0x558928d5e1c0 <col:87> 'T *' lvalue Var 0x558928d5d9e8 's' 'T *'
|       |         | `-DeclRefExpr 0x558928d5e280 <col:91> 'const V' lvalue ParmVar 0x558928d38158 'value' 'const V &'
|       |         `-CXXBoolLiteralExpr 0x558928d5e2c0 <col:98> 'bool' true
|       `-DeclRefExpr 0x558928d5e418 <col:106> 'Args::Slot *' lvalue Var 0x558928d5d708 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x558928d389b8 <line:764:5, line:773:5> line:765:10 base_read
| |-TemplateTypeParmDecl 0x558928d383c8 <line:764:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558928d38448 <col:26, col:35> col:35 referenced typename depth 0 index 1 T1
| |-TemplateTypeParmDecl 0x558928d384c8 <col:39, col:48> col:48 referenced typename depth 0 index 2 T2
| `-CXXMethodDecl 0x558928d38918 <line:765:5, line:773:5> line:765:10 base_read 'void (const char *, int, P, T1 &, T2 &)'
|   |-ParmVarDecl 0x558928d38590 <col:20, col:32> col:32 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d38610 <col:41, col:45> col:45 referenced flags 'int'
|   |-ParmVarDecl 0x558928d38688 <line:766:20, col:22> col:22 referenced parser 'P'
|   |-ParmVarDecl 0x558928d38728 <col:30, col:34> col:34 referenced variable1 'T1 &'
|   |-ParmVarDecl 0x558928d387c8 <col:45, col:49> col:49 referenced variable2 'T2 &'
|   `-CompoundStmt 0x558928d5f448 <col:60, line:773:5>
|     |-DeclStmt 0x558928d5e510 <line:767:9, col:26>
|     | `-VarDecl 0x558928d5e4a8 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x558928d5f410 <line:768:9, line:772:9> has_var
|       |-DeclStmt 0x558928d5f430 <line:768:13, col:58>
|       | `-VarDecl 0x558928d5e538 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x558928d5e718 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x558928d5e6e8 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x558928d5e6d0 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x558928d5e6b0 <col:26, col:58> 'String' (CXXTemporary 0x558928d5e6b0)
|       |           `-CXXMemberCallExpr 0x558928d5e640 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x558928d5e5b0 <col:26> '<bound member function type>' ->find 0x558928d50ce8
|       |             | `-CXXThisExpr 0x558928d5e5a0 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x558928d5e678 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x558928d5e5e0 <col:31> 'const char *' lvalue ParmVar 0x558928d38590 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x558928d5e690 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x558928d5e600 <col:40> 'int' lvalue ParmVar 0x558928d38610 'flags' 'int'
|       |             `-DeclRefExpr 0x558928d5e620 <col:47> 'Args::Slot *' lvalue Var 0x558928d5e4a8 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x558928d5e7d0 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x558928d5e7b8 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x558928d5e798 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x558928d5e768 <col:20> '<bound member function type>' .operator int (String::*)() const 0x558928b07a78
|       |       `-ImplicitCastExpr 0x558928d5e750 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x558928d5e730 <col:20> 'String' lvalue Var 0x558928d5e538 'str' 'String'
|       `-CompoundStmt 0x558928d5f3e8 <col:61, line:772:9>
|         |-DeclStmt 0x558928d5eb10 <line:769:13, col:66>
|         | `-VarDecl 0x558928d5e828 <col:13, col:65> col:17 referenced s1 'T1 *' cinit
|         |   `-CallExpr 0x558928d5eae0 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x558928d5ea50 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x558928d5ea98 <col:49> 'T1' lvalue ParmVar 0x558928d38728 'variable1' 'T1 &'
|         |     `-UnaryOperator 0x558928d5eac8 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x558928d5eab8 <col:61> 'Args *' this
|         |-DeclStmt 0x558928d5ee80 <line:770:13, col:66>
|         | `-VarDecl 0x558928d5eb98 <col:13, col:65> col:17 referenced s2 'T2 *' cinit
|         |   `-CallExpr 0x558928d5ee50 <col:22, col:65> '<dependent type>'
|         |     |-CXXDependentScopeMemberExpr 0x558928d5edc0 <col:22, col:44> '<dependent type>' lvalue ->slot
|         |     |-DeclRefExpr 0x558928d5ee08 <col:49> 'T2' lvalue ParmVar 0x558928d387c8 'variable2' 'T2 &'
|         |     `-UnaryOperator 0x558928d5ee38 <col:60, col:61> 'Args' lvalue prefix '*' cannot overflow
|         |       `-CXXThisExpr 0x558928d5ee28 <col:61> 'Args *' this
|         `-CallExpr 0x558928d5f3b8 <line:771:13, col:105> '<dependent type>'
|           |-MemberExpr 0x558928d5eea8 <col:13> '<bound member function type>' ->postparse 0x558928d50ef8
|           | `-CXXThisExpr 0x558928d5ee98 <col:13> 'Args *' implicit this
|           |-BinaryOperator 0x558928d5f378 <col:23, col:91> '<dependent type>' '&&'
|           | |-BinaryOperator 0x558928d5ef18 <col:23, col:29> '<dependent type>' '&&'
|           | | |-DeclRefExpr 0x558928d5eed8 <col:23> 'T1 *' lvalue Var 0x558928d5e828 's1' 'T1 *'
|           | | `-DeclRefExpr 0x558928d5eef8 <col:29> 'T2 *' lvalue Var 0x558928d5eb98 's2' 'T2 *'
|           | `-CallExpr 0x558928d5f330 <col:35, col:91> '<dependent type>'
|           |   |-CXXDependentScopeMemberExpr 0x558928d5f100 <col:35, col:57> '<dependent type>' lvalue ->parse
|           |   |-DeclRefExpr 0x558928d5f148 <col:63> 'P' lvalue ParmVar 0x558928d38688 'parser' 'P'
|           |   |-DeclRefExpr 0x558928d5f168 <col:71> 'String' lvalue Var 0x558928d5e538 'str' 'String'
|           |   |-CXXOperatorCallExpr 0x558928d5f218 <col:76, col:77> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x558928d5f1a8 <col:76> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x558928bdbc28 0x558928bdb848 0x558928bdb478 0x558928bdb098 0x558928bdacb8 0x558928bda8e8
|           |   | `-DeclRefExpr 0x558928d5f188 <col:77> 'T1 *' lvalue Var 0x558928d5e828 's1' 'T1 *'
|           |   |-CXXOperatorCallExpr 0x558928d5f2d8 <col:81, col:82> '<dependent type>'
|           |   | |-UnresolvedLookupExpr 0x558928d5f268 <col:81> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x558928bdbc28 0x558928bdb848 0x558928bdb478 0x558928bdb098 0x558928bdacb8 0x558928bda8e8
|           |   | `-DeclRefExpr 0x558928d5f248 <col:82> 'T2 *' lvalue Var 0x558928d5eb98 's2' 'T2 *'
|           |   `-UnaryOperator 0x558928d5f318 <col:86, col:87> 'Args' lvalue prefix '*' cannot overflow
|           |     `-CXXThisExpr 0x558928d5f308 <col:87> 'Args *' this
|           `-DeclRefExpr 0x558928d5f398 <col:94> 'Args::Slot *' lvalue Var 0x558928d5e4a8 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x558928d38da8 <line:775:5, line:780:5> line:776:10 base_read_with
| |-TemplateTypeParmDecl 0x558928d38a38 <line:775:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x558928d38d08 <line:776:5, line:780:5> line:776:10 base_read_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x558928d38af0 <col:25, col:37> col:37 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d38b70 <col:46, col:50> col:50 referenced flags 'int'
|   |-ParmVarDecl 0x558928d38be8 <col:57, col:59> col:59 referenced parser 'P'
|   `-CompoundStmt 0x558928d5f960 <col:67, line:780:5>
|     |-DeclStmt 0x558928d5f4e0 <line:777:9, col:26>
|     | `-VarDecl 0x558928d5f478 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     `-IfStmt 0x558928d5f928 <line:778:9, line:779:60> has_var
|       |-DeclStmt 0x558928d5f948 <line:778:13, col:58>
|       | `-VarDecl 0x558928d5f508 <col:13, col:58> col:20 referenced str 'String' cinit destroyed
|       |   `-ExprWithCleanups 0x558928d5f6e8 <col:26, col:58> 'String'
|       |     `-CXXConstructExpr 0x558928d5f6b8 <col:26, col:58> 'String' 'void (String &&)' elidable
|       |       `-MaterializeTemporaryExpr 0x558928d5f6a0 <col:26, col:58> 'String' xvalue
|       |         `-CXXBindTemporaryExpr 0x558928d5f680 <col:26, col:58> 'String' (CXXTemporary 0x558928d5f680)
|       |           `-CXXMemberCallExpr 0x558928d5f610 <col:26, col:58> 'String'
|       |             |-MemberExpr 0x558928d5f580 <col:26> '<bound member function type>' ->find 0x558928d50ce8
|       |             | `-CXXThisExpr 0x558928d5f570 <col:26> 'Args *' implicit this
|       |             |-ImplicitCastExpr 0x558928d5f648 <col:31> 'const char *' <LValueToRValue>
|       |             | `-DeclRefExpr 0x558928d5f5b0 <col:31> 'const char *' lvalue ParmVar 0x558928d38af0 'keyword' 'const char *'
|       |             |-ImplicitCastExpr 0x558928d5f660 <col:40> 'int' <LValueToRValue>
|       |             | `-DeclRefExpr 0x558928d5f5d0 <col:40> 'int' lvalue ParmVar 0x558928d38b70 'flags' 'int'
|       |             `-DeclRefExpr 0x558928d5f5f0 <col:47> 'Args::Slot *' lvalue Var 0x558928d5f478 'slot_status' 'Args::Slot *'
|       |-ImplicitCastExpr 0x558928d5f7a0 <col:20> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x558928d5f788 <col:20> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x558928d5f768 <col:20> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x558928d5f738 <col:20> '<bound member function type>' .operator int (String::*)() const 0x558928b07a78
|       |       `-ImplicitCastExpr 0x558928d5f720 <col:20> 'const String' lvalue <NoOp>
|       |         `-DeclRefExpr 0x558928d5f700 <col:20> 'String' lvalue Var 0x558928d5f508 'str' 'String'
|       `-CallExpr 0x558928d5f8f8 <line:779:13, col:60> '<dependent type>'
|         |-MemberExpr 0x558928d5f7c8 <col:13> '<bound member function type>' ->postparse 0x558928d50ef8
|         | `-CXXThisExpr 0x558928d5f7b8 <col:13> 'Args *' implicit this
|         |-CallExpr 0x558928d5f8a8 <col:23, col:46> '<dependent type>'
|         | |-CXXDependentScopeMemberExpr 0x558928d5f818 <col:23, col:30> '<dependent type>' lvalue .parse
|         | | `-DeclRefExpr 0x558928d5f7f8 <col:23> 'P' lvalue ParmVar 0x558928d38be8 'parser' 'P'
|         | |-DeclRefExpr 0x558928d5f860 <col:36> 'String' lvalue Var 0x558928d5f508 'str' 'String'
|         | `-UnaryOperator 0x558928d5f890 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|         |   `-CXXThisExpr 0x558928d5f880 <col:42> 'Args *' this
|         `-DeclRefExpr 0x558928d5f8d8 <col:49> 'Args::Slot *' lvalue Var 0x558928d5f478 'slot_status' 'Args::Slot *'
|-FunctionTemplateDecl 0x558928d39148 <line:782:5, line:792:5> line:783:10 base_read_all_with
| |-TemplateTypeParmDecl 0x558928d38e18 <line:782:14, col:23> col:23 referenced typename depth 0 index 0 P
| `-CXXMethodDecl 0x558928d390a8 <line:783:5, line:792:5> line:783:10 base_read_all_with 'void (const char *, int, P)'
|   |-ParmVarDecl 0x558928d38ed0 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d38f50 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x558928d38fc8 <col:61, col:63> col:63 referenced parser 'P'
|   `-CompoundStmt 0x558928d602d0 <col:71, line:792:5>
|     |-DeclStmt 0x558928d5f9f8 <line:784:9, col:26>
|     | `-VarDecl 0x558928d5f990 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x558928d5fac8 <line:785:9, col:29>
|     | `-VarDecl 0x558928d5fa28 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x558928d5fab0 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x558928d5fa90 <col:28> 'int' 1
|     |-WhileStmt 0x558928d60180 <line:786:9, line:790:9> has_var
|     | |-DeclStmt 0x558928d601a0 <line:786:16, col:61>
|     | | `-VarDecl 0x558928d5faf0 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x558928d5fcd0 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x558928d5fca0 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x558928d5fc88 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x558928d5fc68 <col:29, col:61> 'String' (CXXTemporary 0x558928d5fc68)
|     | |           `-CXXMemberCallExpr 0x558928d5fbf8 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x558928d5fb68 <col:29> '<bound member function type>' ->find 0x558928d50ce8
|     | |             | `-CXXThisExpr 0x558928d5fb58 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x558928d5fc30 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x558928d5fb98 <col:34> 'const char *' lvalue ParmVar 0x558928d38ed0 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x558928d5fc48 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x558928d5fbb8 <col:43> 'int' lvalue ParmVar 0x558928d38f50 'flags' 'int'
|     | |             `-DeclRefExpr 0x558928d5fbd8 <col:50> 'Args::Slot *' lvalue Var 0x558928d5f990 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x558928d5fd88 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x558928d5fd70 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x558928d5fd50 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x558928d5fd20 <col:23> '<bound member function type>' .operator int (String::*)() const 0x558928b07a78
|     | |       `-ImplicitCastExpr 0x558928d5fd08 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x558928d5fce8 <col:23> 'String' lvalue Var 0x558928d5faf0 'str' 'String'
|     | `-CompoundStmt 0x558928d60158 <col:64, line:790:9>
|     |   |-CallExpr 0x558928d5fee0 <line:787:13, col:60> '<dependent type>'
|     |   | |-MemberExpr 0x558928d5fdb0 <col:13> '<bound member function type>' ->postparse 0x558928d50ef8
|     |   | | `-CXXThisExpr 0x558928d5fda0 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x558928d5fe90 <col:23, col:46> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x558928d5fe00 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x558928d5fde0 <col:23> 'P' lvalue ParmVar 0x558928d38fc8 'parser' 'P'
|     |   | | |-DeclRefExpr 0x558928d5fe48 <col:36> 'String' lvalue Var 0x558928d5faf0 'str' 'String'
|     |   | | `-UnaryOperator 0x558928d5fe78 <col:41, col:42> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x558928d5fe68 <col:42> 'Args *' this
|     |   | `-DeclRefExpr 0x558928d5fec0 <col:49> 'Args::Slot *' lvalue Var 0x558928d5f990 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x558928d60078 <line:788:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x558928d5ff10 <col:13> 'int' lvalue Var 0x558928d5fa28 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x558928d60060 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x558928d60040 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x558928d5ffa8 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x558928d5ff88 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x558928d5ff70 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x558928d5ff30 <col:28> 'int' lvalue Var 0x558928d5fa28 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x558928d5ff50 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x558928d60028 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x558928d5fff8 <col:49> 'bool' lvalue ->_read_status 0x558928d231c8
|     |   |         `-ImplicitCastExpr 0x558928d5ffd8 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x558928d5ffc8 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x558928d60128 <line:789:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x558928d60098 <col:13> 'int' lvalue ParmVar 0x558928d38f50 'flags' 'int'
|     |     `-UnaryOperator 0x558928d60110 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x558928d600f8 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x558928d600d8 <col:23> 'const int' lvalue Var 0x558928d2a658 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x558928d602b0 <line:791:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x558928d601e8 <col:9> 'bool' lvalue ->_read_status 0x558928d231c8
|       | `-ImplicitCastExpr 0x558928d601c8 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x558928d601b8 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x558928d60290 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x558928d60270 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x558928d60258 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x558928d60218 <col:25> 'int' lvalue Var 0x558928d5fa28 'read_status' 'int'
|           `-IntegerLiteral 0x558928d60238 <col:40> 'int' 1
|-FunctionTemplateDecl 0x558928d39628 <line:794:5, line:805:5> line:795:10 base_read_all_with
| |-TemplateTypeParmDecl 0x558928d391b8 <line:794:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558928d39238 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558928d39588 <line:795:5, line:805:5> line:795:10 base_read_all_with 'void (const char *, int, P, T &)'
|   |-ParmVarDecl 0x558928d392f8 <col:29, col:41> col:41 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d39378 <col:50, col:54> col:54 referenced flags 'int'
|   |-ParmVarDecl 0x558928d393f0 <col:61, col:63> col:63 referenced parser 'P'
|   |-ParmVarDecl 0x558928d39498 <col:71, col:74> col:74 referenced variable 'T &'
|   `-CompoundStmt 0x558928d62ee0 <col:84, line:805:5>
|     |-DeclStmt 0x558928d60378 <line:796:9, col:26>
|     | `-VarDecl 0x558928d60310 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x558928d60448 <line:797:9, col:29>
|     | `-VarDecl 0x558928d603a8 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x558928d60430 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x558928d60410 <col:28> 'int' 1
|     |-DeclStmt 0x558928d62400 <line:798:9, col:71>
|     | `-VarDecl 0x558928d60498 <col:9, col:70> col:12 referenced s 'T *' cinit
|     |   `-CallExpr 0x558928d623d0 <col:16, col:70> '<dependent type>'
|     |     |-CXXDependentScopeMemberExpr 0x558928d62340 <col:16, col:38> '<dependent type>' lvalue ->initialized_slot
|     |     |-DeclRefExpr 0x558928d62388 <col:55> 'T' lvalue ParmVar 0x558928d39498 'variable' 'T &'
|     |     `-UnaryOperator 0x558928d623b8 <col:65, col:66> 'Args' lvalue prefix '*' cannot overflow
|     |       `-CXXThisExpr 0x558928d623a8 <col:66> 'Args *' this
|     |-WhileStmt 0x558928d62d90 <line:799:9, line:803:9> has_var
|     | |-DeclStmt 0x558928d62db0 <line:799:16, col:61>
|     | | `-VarDecl 0x558928d62428 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x558928d62608 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x558928d625d8 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x558928d625c0 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x558928d625a0 <col:29, col:61> 'String' (CXXTemporary 0x558928d625a0)
|     | |           `-CXXMemberCallExpr 0x558928d62530 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x558928d624a0 <col:29> '<bound member function type>' ->find 0x558928d50ce8
|     | |             | `-CXXThisExpr 0x558928d62490 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x558928d62568 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x558928d624d0 <col:34> 'const char *' lvalue ParmVar 0x558928d392f8 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x558928d62580 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x558928d624f0 <col:43> 'int' lvalue ParmVar 0x558928d39378 'flags' 'int'
|     | |             `-DeclRefExpr 0x558928d62510 <col:50> 'Args::Slot *' lvalue Var 0x558928d60310 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x558928d626c0 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x558928d626a8 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x558928d62688 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x558928d62658 <col:23> '<bound member function type>' .operator int (String::*)() const 0x558928b07a78
|     | |       `-ImplicitCastExpr 0x558928d62640 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x558928d62620 <col:23> 'String' lvalue Var 0x558928d62428 'str' 'String'
|     | `-CompoundStmt 0x558928d62d68 <col:64, line:803:9>
|     |   |-CallExpr 0x558928d62af0 <line:800:13, col:92> '<dependent type>'
|     |   | |-MemberExpr 0x558928d626e8 <col:13> '<bound member function type>' ->postparse 0x558928d50ef8
|     |   | | `-CXXThisExpr 0x558928d626d8 <col:13> 'Args *' implicit this
|     |   | |-BinaryOperator 0x558928d62ab0 <col:23, col:78> '<dependent type>' '&&'
|     |   | | |-DeclRefExpr 0x558928d62718 <col:23> 'T *' lvalue Var 0x558928d60498 's' 'T *'
|     |   | | `-CallExpr 0x558928d62a70 <col:28, col:78> '<dependent type>'
|     |   | |   |-CXXDependentScopeMemberExpr 0x558928d62900 <col:28, col:50> '<dependent type>' lvalue ->parse
|     |   | |   |-DeclRefExpr 0x558928d62948 <col:56> 'P' lvalue ParmVar 0x558928d393f0 'parser' 'P'
|     |   | |   |-DeclRefExpr 0x558928d62968 <col:64> 'String' lvalue Var 0x558928d62428 'str' 'String'
|     |   | |   |-CXXOperatorCallExpr 0x558928d62a18 <col:69, col:70> '<dependent type>'
|     |   | |   | |-UnresolvedLookupExpr 0x558928d629a8 <col:69> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x558928bdbc28 0x558928bdb848 0x558928bdb478 0x558928bdb098 0x558928bdacb8 0x558928bda8e8
|     |   | |   | `-DeclRefExpr 0x558928d62988 <col:70> 'T *' lvalue Var 0x558928d60498 's' 'T *'
|     |   | |   `-UnaryOperator 0x558928d62a58 <col:73, col:74> 'Args' lvalue prefix '*' cannot overflow
|     |   | |     `-CXXThisExpr 0x558928d62a48 <col:74> 'Args *' this
|     |   | `-DeclRefExpr 0x558928d62ad0 <col:81> 'Args::Slot *' lvalue Var 0x558928d60310 'slot_status' 'Args::Slot *'
|     |   |-BinaryOperator 0x558928d62c88 <line:801:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x558928d62b20 <col:13> 'int' lvalue Var 0x558928d603a8 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x558928d62c70 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x558928d62c50 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x558928d62bb8 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x558928d62b98 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x558928d62b80 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x558928d62b40 <col:28> 'int' lvalue Var 0x558928d603a8 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x558928d62b60 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x558928d62c38 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x558928d62c08 <col:49> 'bool' lvalue ->_read_status 0x558928d231c8
|     |   |         `-ImplicitCastExpr 0x558928d62be8 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x558928d62bd8 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x558928d62d38 <line:802:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x558928d62ca8 <col:13> 'int' lvalue ParmVar 0x558928d39378 'flags' 'int'
|     |     `-UnaryOperator 0x558928d62d20 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x558928d62d08 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x558928d62ce8 <col:23> 'const int' lvalue Var 0x558928d2a658 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x558928d62ec0 <line:804:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x558928d62df8 <col:9> 'bool' lvalue ->_read_status 0x558928d231c8
|       | `-ImplicitCastExpr 0x558928d62dd8 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x558928d62dc8 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x558928d62ea0 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x558928d62e80 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x558928d62e68 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x558928d62e28 <col:25> 'int' lvalue Var 0x558928d603a8 'read_status' 'int'
|           `-IntegerLiteral 0x558928d62e48 <col:40> 'int' 1
|-FunctionTemplateDecl 0x558928d39c08 <line:807:5, line:821:5> line:808:10 base_read_all
| |-TemplateTypeParmDecl 0x558928d396a0 <line:807:14, col:23> col:23 referenced typename depth 0 index 0 P
| |-TemplateTypeParmDecl 0x558928d39718 <col:26, col:35> col:35 referenced typename depth 0 index 1 T
| `-CXXMethodDecl 0x558928d39b68 <line:808:5, line:821:5> line:808:10 base_read_all 'void (const char *, int, P, Vector<T> &)'
|   |-ParmVarDecl 0x558928d397d8 <col:24, col:36> col:36 referenced keyword 'const char *'
|   |-ParmVarDecl 0x558928d39858 <col:45, col:49> col:49 referenced flags 'int'
|   |-ParmVarDecl 0x558928d398d0 <col:56, col:58> col:58 referenced parser 'P'
|   |-ParmVarDecl 0x558928d39a20 <col:66, col:77> col:77 referenced variable 'Vector<T> &'
|   `-CompoundStmt 0x558928d63ce8 <col:87, line:821:5>
|     |-DeclStmt 0x558928d62f90 <line:809:9, col:26>
|     | `-VarDecl 0x558928d62f28 <col:9, col:15> col:15 referenced slot_status 'Args::Slot *'
|     |-DeclStmt 0x558928d63060 <line:810:9, col:29>
|     | `-VarDecl 0x558928d62fc0 <col:9, col:28> col:13 referenced read_status 'int' cinit
|     |   `-UnaryOperator 0x558928d63048 <col:27, col:28> 'int' prefix '-'
|     |     `-IntegerLiteral 0x558928d63028 <col:28> 'int' 1
|     |-DeclStmt 0x558928d632a8 <line:811:9, col:38>
|     | `-VarDecl 0x558928d63190 <col:9, col:37> col:20 referenced s 'Vector<T> *' cinit
|     |   `-CallExpr 0x558928d63280 <col:24, col:37> '<dependent type>'
|     |     |-UnresolvedMemberExpr 0x558928d63208 <col:24> '<bound member function type>' lvalue
|     |     `-DeclRefExpr 0x558928d63260 <col:29> 'Vector<T>' lvalue ParmVar 0x558928d39a20 'variable' 'Vector<T> &'
|     |-WhileStmt 0x558928d63b98 <line:812:9, line:819:9> has_var
|     | |-DeclStmt 0x558928d63bb8 <line:812:16, col:61>
|     | | `-VarDecl 0x558928d632d0 <col:16, col:61> col:23 referenced str 'String' cinit destroyed
|     | |   `-ExprWithCleanups 0x558928d634b0 <col:29, col:61> 'String'
|     | |     `-CXXConstructExpr 0x558928d63480 <col:29, col:61> 'String' 'void (String &&)' elidable
|     | |       `-MaterializeTemporaryExpr 0x558928d63468 <col:29, col:61> 'String' xvalue
|     | |         `-CXXBindTemporaryExpr 0x558928d63448 <col:29, col:61> 'String' (CXXTemporary 0x558928d63448)
|     | |           `-CXXMemberCallExpr 0x558928d633d8 <col:29, col:61> 'String'
|     | |             |-MemberExpr 0x558928d63348 <col:29> '<bound member function type>' ->find 0x558928d50ce8
|     | |             | `-CXXThisExpr 0x558928d63338 <col:29> 'Args *' implicit this
|     | |             |-ImplicitCastExpr 0x558928d63410 <col:34> 'const char *' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x558928d63378 <col:34> 'const char *' lvalue ParmVar 0x558928d397d8 'keyword' 'const char *'
|     | |             |-ImplicitCastExpr 0x558928d63428 <col:43> 'int' <LValueToRValue>
|     | |             | `-DeclRefExpr 0x558928d63398 <col:43> 'int' lvalue ParmVar 0x558928d39858 'flags' 'int'
|     | |             `-DeclRefExpr 0x558928d633b8 <col:50> 'Args::Slot *' lvalue Var 0x558928d62f28 'slot_status' 'Args::Slot *'
|     | |-ImplicitCastExpr 0x558928d63568 <col:23> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x558928d63550 <col:23> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x558928d63530 <col:23> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x558928d63500 <col:23> '<bound member function type>' .operator int (String::*)() const 0x558928b07a78
|     | |       `-ImplicitCastExpr 0x558928d634e8 <col:23> 'const String' lvalue <NoOp>
|     | |         `-DeclRefExpr 0x558928d634c8 <col:23> 'String' lvalue Var 0x558928d632d0 'str' 'String'
|     | `-CompoundStmt 0x558928d63b60 <col:64, line:819:9>
|     |   |-DeclStmt 0x558928d63628 <line:813:13, col:23>
|     |   | `-VarDecl 0x558928d63590 <col:13, col:22> col:15 referenced sx 'T' cinit
|     |   |   `-CXXUnresolvedConstructExpr 0x558928d63608 <col:20, col:22> 'T' 'T'
|     |   |-CallExpr 0x558928d637a8 <line:814:13, col:64> '<dependent type>'
|     |   | |-MemberExpr 0x558928d63650 <col:13> '<bound member function type>' ->postparse 0x558928d50ef8
|     |   | | `-CXXThisExpr 0x558928d63640 <col:13> 'Args *' implicit this
|     |   | |-CallExpr 0x558928d63750 <col:23, col:50> '<dependent type>'
|     |   | | |-CXXDependentScopeMemberExpr 0x558928d636a0 <col:23, col:30> '<dependent type>' lvalue .parse
|     |   | | | `-DeclRefExpr 0x558928d63680 <col:23> 'P' lvalue ParmVar 0x558928d398d0 'parser' 'P'
|     |   | | |-DeclRefExpr 0x558928d636e8 <col:36> 'String' lvalue Var 0x558928d632d0 'str' 'String'
|     |   | | |-DeclRefExpr 0x558928d63708 <col:41> 'T' lvalue Var 0x558928d63590 'sx' 'T'
|     |   | | `-UnaryOperator 0x558928d63738 <col:45, col:46> 'Args' lvalue prefix '*' cannot overflow
|     |   | |   `-CXXThisExpr 0x558928d63728 <col:46> 'Args *' this
|     |   | `-DeclRefExpr 0x558928d63788 <col:53> 'Args::Slot *' lvalue Var 0x558928d62f28 'slot_status' 'Args::Slot *'
|     |   |-IfStmt 0x558928d63900 <line:815:13, line:816:32>
|     |   | |-ImplicitCastExpr 0x558928d63838 <line:815:17> 'bool' <LValueToRValue>
|     |   | | `-MemberExpr 0x558928d63808 <col:17> 'bool' lvalue ->_read_status 0x558928d231c8
|     |   | |   `-ImplicitCastExpr 0x558928d637e8 <col:17> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   | |     `-CXXThisExpr 0x558928d637d8 <col:17> 'Args *' implicit this
|     |   | `-CallExpr 0x558928d638d8 <line:816:17, col:32> '<dependent type>'
|     |   |   |-CXXDependentScopeMemberExpr 0x558928d63870 <col:17, col:20> '<dependent type>' lvalue ->push_back
|     |   |   | `-DeclRefExpr 0x558928d63850 <col:17> 'Vector<T> *' lvalue Var 0x558928d63190 's' 'Vector<T> *'
|     |   |   `-DeclRefExpr 0x558928d638b8 <col:30> 'T' lvalue Var 0x558928d63590 'sx' 'T'
|     |   |-BinaryOperator 0x558928d63a80 <line:817:13, col:49> 'int' lvalue '='
|     |   | |-DeclRefExpr 0x558928d63918 <col:13> 'int' lvalue Var 0x558928d62fc0 'read_status' 'int'
|     |   | `-ImplicitCastExpr 0x558928d63a68 <col:27, col:49> 'int' <IntegralCast>
|     |   |   `-BinaryOperator 0x558928d63a48 <col:27, col:49> 'bool' '&&'
|     |   |     |-ParenExpr 0x558928d639b0 <col:27, col:44> 'bool'
|     |   |     | `-BinaryOperator 0x558928d63990 <col:28, col:43> 'bool' '!='
|     |   |     |   |-ImplicitCastExpr 0x558928d63978 <col:28> 'int' <LValueToRValue>
|     |   |     |   | `-DeclRefExpr 0x558928d63938 <col:28> 'int' lvalue Var 0x558928d62fc0 'read_status' 'int'
|     |   |     |   `-IntegerLiteral 0x558928d63958 <col:43> 'int' 0
|     |   |     `-ImplicitCastExpr 0x558928d63a30 <col:49> 'bool' <LValueToRValue>
|     |   |       `-MemberExpr 0x558928d63a00 <col:49> 'bool' lvalue ->_read_status 0x558928d231c8
|     |   |         `-ImplicitCastExpr 0x558928d639e0 <col:49> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|     |   |           `-CXXThisExpr 0x558928d639d0 <col:49> 'Args *' implicit this
|     |   `-CompoundAssignOperator 0x558928d63b30 <line:818:13, col:23> 'int' lvalue '&=' ComputeLHSTy='int' ComputeResultTy='int'
|     |     |-DeclRefExpr 0x558928d63aa0 <col:13> 'int' lvalue ParmVar 0x558928d39858 'flags' 'int'
|     |     `-UnaryOperator 0x558928d63b18 <col:22, col:23> 'int' prefix '~' cannot overflow
|     |       `-ImplicitCastExpr 0x558928d63b00 <col:23> 'int' <LValueToRValue>
|     |         `-DeclRefExpr 0x558928d63ae0 <col:23> 'const int' lvalue Var 0x558928d2a658 'mandatory' 'const int' non_odr_use_constant
|     `-BinaryOperator 0x558928d63cc8 <line:820:9, col:41> 'bool' lvalue '='
|       |-MemberExpr 0x558928d63c00 <col:9> 'bool' lvalue ->_read_status 0x558928d231c8
|       | `-ImplicitCastExpr 0x558928d63be0 <col:9> 'ArgContext *' <UncheckedDerivedToBase (ArgContext)>
|       |   `-CXXThisExpr 0x558928d63bd0 <col:9> 'Args *' implicit this
|       `-ParenExpr 0x558928d63ca8 <col:24, col:41> 'bool'
|         `-BinaryOperator 0x558928d63c88 <col:25, col:40> 'bool' '=='
|           |-ImplicitCastExpr 0x558928d63c70 <col:25> 'int' <LValueToRValue>
|           | `-DeclRefExpr 0x558928d63c30 <col:25> 'int' lvalue Var 0x558928d62fc0 'read_status' 'int'
|           `-IntegerLiteral 0x558928d63c50 <col:40> 'int' 1
|-AccessSpecDecl 0x558928d39c80 <line:824:3, col:10> col:3 private
|-CXXRecordDecl 0x558928d39ca8 prev 0x558928d28958 <line:826:5, line:833:5> line:826:12 referenced struct Slot definition
| |-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| | |-MoveConstructor
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment
| | `-Destructor non_trivial user_declared
| |-CXXRecordDecl 0x558928d39da0 <col:5, col:12> col:12 implicit referenced struct Slot
| |-CXXConstructorDecl 0x558928d39e90 <line:827:9, line:828:9> line:827:9 used Slot 'void ()'
| | `-CompoundStmt 0x558928d63d20 <col:16, line:828:9>
| |-CXXDestructorDecl 0x558928d39f80 <line:829:9, line:830:9> line:829:17 used ~Slot 'void () noexcept' virtual
| | `-CompoundStmt 0x558928d63d30 <col:25, line:830:9>
| |-CXXMethodDecl 0x558928d3a080 <line:831:9, col:32> col:22 store 'void ()' virtual pure
| |-FieldDecl 0x558928d3a130 <line:832:9, col:15> col:15 _next 'Args::Slot *'
| |-CXXMethodDecl 0x558928d3a1d8 <line:826:12> col:12 implicit operator= 'Args::Slot &(const Args::Slot &)' inline default noexcept-unevaluated 0x558928d3a1d8
| | `-ParmVarDecl 0x558928d3a2e8 <col:12> col:12 'const Args::Slot &'
| `-CXXConstructorDecl 0x558928d3aaa8 <col:12> col:12 implicit constexpr Slot 'void (const Args::Slot &)' inline default noexcept-unevaluated 0x558928d3aaa8
|   `-ParmVarDecl 0x558928d3abb8 <col:12> col:12 'const Args::Slot &'
|-CXXRecordDecl 0x558928d3a358 <line:835:5, line:848:5> line:835:12 struct BytesSlot definition
| |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| | |-MoveAssignment needs_overload_resolution
| | `-Destructor non_trivial user_declared needs_overload_resolution
| |-public 'Args::Slot'
| |-CXXRecordDecl 0x558928d3a4b8 <col:5, col:12> col:12 implicit referenced struct BytesSlot
| |-CXXConstructorDecl 0x558928d3a6b0 <line:836:9, line:838:9> line:836:9 BytesSlot 'void (void *, size_t)'
| | |-ParmVarDecl 0x558928d3a560 <col:19, col:25> col:25 used ptr 'void *'
| | |-ParmVarDecl 0x558928d3a5d8 <col:30, col:37> col:37 used size 'size_t':'unsigned long'
| | |-CXXCtorInitializer 'Args::Slot'
| | | `-CXXConstructExpr 0x558928d63f40 <col:9> 'Args::Slot' 'void ()'
| | |-CXXCtorInitializer Field 0x558928d3a968 '_ptr' 'void *'
| | | `-ImplicitCastExpr 0x558928d63d80 <line:837:20> 'void *' <LValueToRValue>
| | |   `-DeclRefExpr 0x558928d63d40 <col:20> 'void *' lvalue ParmVar 0x558928d3a560 'ptr' 'void *'
| | |-CXXCtorInitializer Field 0x558928d3a9d0 '_slot' 'char *'
| | | `-CXXNewExpr 0x558928d63e38 <col:32, col:45> 'char *' array Function 0x55892892b768 'operator new[]' 'void *(std::size_t)'
| | |   `-ImplicitCastExpr 0x558928d63df0 <col:41> 'size_t':'unsigned long' <LValueToRValue>
| | |     `-DeclRefExpr 0x558928d63dc0 <col:41> 'size_t':'unsigned long' lvalue ParmVar 0x558928d3a5d8 'size' 'size_t':'unsigned long'
| | |-CXXCtorInitializer Field 0x558928d3aa30 '_size' 'size_t':'unsigned long'
| | | `-ImplicitCastExpr 0x558928d63f00 <col:55> 'size_t':'unsigned long' <LValueToRValue>
| | |   `-DeclRefExpr 0x558928d63ec0 <col:55> 'size_t':'unsigned long' lvalue ParmVar 0x558928d3a5d8 'size' 'size_t':'unsigned long'
| | `-CompoundStmt 0x558928d63fc0 <col:61, line:838:9>
| |-CXXDestructorDecl 0x558928d3a7b0 <line:839:9, line:841:9> line:839:9 ~BytesSlot 'void () noexcept'
| | |-Overrides: [ 0x558928d39f80 Slot::~Slot 'void () noexcept' ]
| | `-CompoundStmt 0x558928d64048 <col:22, line:841:9>
| |   `-CXXDeleteExpr 0x558928d64028 <line:840:13, col:22> 'void' array Function 0x55892892bac8 'operator delete[]' 'void (void *) noexcept'
| |     `-ImplicitCastExpr 0x558928d64010 <col:22> 'char *' <LValueToRValue>
| |       `-MemberExpr 0x558928d63fe0 <col:22> 'char *' lvalue ->_slot 0x558928d3a9d0
| |         `-CXXThisExpr 0x558928d63fd0 <col:22> 'Args::BytesSlot *' implicit this
| |-CXXMethodDecl 0x558928d3a8b0 <line:842:9, line:844:9> line:842:14 store 'void ()'
| | |-Overrides: [ 0x558928d3a080 Slot::store 'void ()' ]
| | `-CompoundStmt 0x558928d64238 <col:22, line:844:9>
| |   `-CallExpr 0x558928d641a0 <line:843:13, col:38> 'void *'
| |     |-ImplicitCastExpr 0x558928d64188 <col:13> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x558928d64168 <col:13> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x558928a63a38 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
| |     |-ImplicitCastExpr 0x558928d641d8 <col:20> 'void *' <LValueToRValue>
| |     | `-MemberExpr 0x558928d640b8 <col:20> 'void *' lvalue ->_ptr 0x558928d3a968
| |     |   `-CXXThisExpr 0x558928d640a8 <col:20> 'Args::BytesSlot *' implicit this
| |     |-ImplicitCastExpr 0x558928d64208 <col:26> 'const void *' <BitCast>
| |     | `-ImplicitCastExpr 0x558928d641f0 <col:26> 'char *' <LValueToRValue>
| |     |   `-MemberExpr 0x558928d640f8 <col:26> 'char *' lvalue ->_slot 0x558928d3a9d0
| |     |     `-CXXThisExpr 0x558928d640e8 <col:26> 'Args::BytesSlot *' implicit this
| |     `-ImplicitCastExpr 0x558928d64220 <col:33> 'size_t':'unsigned long' <LValueToRValue>
| |       `-MemberExpr 0x558928d64138 <col:33> 'size_t':'unsigned long' lvalue ->_size 0x558928d3aa30
| |         `-CXXThisExpr 0x558928d64128 <col:33> 'Args::BytesSlot *' implicit this
| |-FieldDecl 0x558928d3a968 <line:845:9, col:15> col:15 referenced _ptr 'void *'
| |-FieldDecl 0x558928d3a9d0 <line:846:9, col:15> col:15 referenced _slot 'char *'
| |-FieldDecl 0x558928d3aa30 <line:847:9, col:16> col:16 referenced _size 'size_t':'unsigned long'
| |-CXXConstructorDecl 0x558928d3ac28 <line:835:12> col:12 implicit constexpr BytesSlot 'void (const Args::BytesSlot &)' inline default noexcept-unevaluated 0x558928d3ac28
| | `-ParmVarDecl 0x558928d3ad38 <col:12> col:12 'const Args::BytesSlot &'
| `-CXXMethodDecl 0x558928d3add8 <col:12> col:12 implicit operator= 'Args::BytesSlot &(const Args::BytesSlot &)' inline default noexcept-unevaluated 0x558928d3add8
|   `-ParmVarDecl 0x558928d3aee8 <col:12> col:12 'const Args::BytesSlot &'
|-ClassTemplateDecl 0x558928d41060 <line:850:5, line:860:5> line:851:12 SlotT
| |-TemplateTypeParmDecl 0x558928d3af58 <line:850:14, col:23> col:23 referenced typename depth 0 index 0 T
| `-CXXRecordDecl 0x558928d40fd0 <line:851:5, line:860:5> line:851:12 struct SlotT definition
|   |-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
|   | |-DefaultConstructor
|   | |-CopyConstructor simple non_trivial has_const_param needs_implicit needs_overload_resolution implicit_has_const_param
|   | |-MoveConstructor exists simple non_trivial needs_implicit needs_overload_resolution
|   | |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
|   | |-MoveAssignment exists simple non_trivial needs_implicit needs_overload_resolution
|   | `-Destructor simple non_trivial needs_implicit needs_overload_resolution
|   |-public 'Args::Slot'
|   |-CXXRecordDecl 0x558928d412f0 <col:5, col:12> col:12 implicit referenced struct SlotT
|   |-CXXConstructorDecl 0x558928d414e8 <line:852:9, line:854:9> line:852:9 SlotT<T> 'void (T *)'
|   | |-ParmVarDecl 0x558928d413b8 <col:15, col:18> col:18 referenced ptr 'T *'
|   | |-CXXCtorInitializer Field 0x558928d41668 '_ptr' 'T *'
|   | | `-ParenListExpr 0x558928d64270 <line:853:19, col:23> 'NULL TYPE'
|   | |   `-DeclRefExpr 0x558928d64250 <col:20> 'T *' lvalue ParmVar 0x558928d413b8 'ptr' 'T *'
|   | `-CompoundStmt 0x558928d642c0 <col:25, line:854:9>
|   |-CXXMethodDecl 0x558928d415b8 <line:855:9, line:857:9> line:855:14 store 'void ()'
|   | |-Overrides: [ 0x558928d3a080 Slot::store 'void ()' ]
|   | `-CompoundStmt 0x558928d64470 <col:22, line:857:9>
|   |   `-CallExpr 0x558928d64440 <line:856:13, col:40> '<dependent type>'
|   |     |-UnresolvedLookupExpr 0x558928d642d0 <col:13> '<overloaded function type>' lvalue (ADL) = 'assign_consume' 0x558928aefc68 0x558928a19198
|   |     |-CXXOperatorCallExpr 0x558928d643d0 <col:28, col:29> '<dependent type>'
|   |     | |-UnresolvedLookupExpr 0x558928d64360 <col:28> '<overloaded function type>' lvalue (ADL) = 'operator*' 0x558928bdbc28 0x558928bdb848 0x558928bdb478 0x558928bdb098 0x558928bdacb8 0x558928bda8e8
|   |     | `-MemberExpr 0x558928d64330 <col:29> 'T *' lvalue ->_ptr 0x558928d41668
|   |     |   `-CXXThisExpr 0x558928d64320 <col:29> 'SlotT<T> *' implicit this
|   |     `-MemberExpr 0x558928d64410 <col:35> 'T' lvalue ->_slot 0x558928d416c8
|   |       `-CXXThisExpr 0x558928d64400 <col:35> 'SlotT<T> *' implicit this
|   |-FieldDecl 0x558928d41668 <line:858:9, col:12> col:12 referenced _ptr 'T *'
|   `-FieldDecl 0x558928d416c8 <line:859:9, col:11> col:11 referenced _slot 'T'
|-EnumDecl 0x558928d41730 <line:862:5, line:868:5> line:862:5
| `-EnumConstantDecl 0x558928d41830 <line:866:9, col:31> col:9 referenced simple_slotbuf_size 'Args::(anonymous enum at ../dummy_inc/click/args.hh:862:5)'
|   `-ImplicitCastExpr 0x558928d41880 <col:31> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558928d41810 <col:31> 'int' Int: 48
|       `-IntegerLiteral 0x558928d417f0 <col:31> 'int' 48
|-FieldDecl 0x558928d418a8 <line:871:5, col:10> col:10 _my_conf 'bool'
|-FieldDecl 0x558928d41908 <line:876:5, col:10> col:10 referenced _status 'bool'
|-FieldDecl 0x558928d41968 <line:877:5, col:13> col:13 _simple_slotpos 'uint8_t':'unsigned char'
|-FieldDecl 0x558928d41aa0 <line:879:5, col:21> col:21 referenced _conf 'Vector<String> *'
|-FieldDecl 0x558928d4ff20 <line:880:5, col:17> col:17 referenced _kwpos 'Vector<int>':'Vector<int>'
|-FieldDecl 0x558928d4ff80 <line:882:5, col:11> col:11 referenced _slots 'Args::Slot *'
|-FieldDecl 0x558928d500a8 <line:883:5, col:48> col:13 referenced _simple_slotbuf 'uint8_t [48]'
|-CXXMethodDecl 0x558928d502d8 <line:885:5, col:54> col:17 initialize 'void (const Vector<String> *)' inline
| `-ParmVarDecl 0x558928d501e0 <col:28, col:50> col:50 conf 'const Vector<String> *'
|-CXXMethodDecl 0x558928d50428 <line:886:5, col:26> col:10 used reset_from 'void (int)'
| `-ParmVarDecl 0x558928d50398 <col:21, col:25> col:25 i 'int'
|-CXXMethodDecl 0x558928d50ce8 <line:888:5, col:67> col:12 referenced find 'String (const char *, int, Args::Slot *&)'
| |-ParmVarDecl 0x558928d504e8 <col:17, col:29> col:29 keyword 'const char *'
| |-ParmVarDecl 0x558928d50568 <col:38, col:42> col:42 flags 'int'
| `-ParmVarDecl 0x558928d50c00 <col:49, col:56> col:56 slot_status 'Args::Slot *&'
|-CXXMethodDecl 0x558928d50ef8 <line:889:5, col:46> col:10 referenced postparse 'void (bool, Args::Slot *)'
| |-ParmVarDecl 0x558928d50db0 <col:20, col:25> col:25 ok 'bool'
| `-ParmVarDecl 0x558928d50e28 <col:29, col:35> col:35 slot_status 'Args::Slot *'
|-CXXMethodDecl 0x558928d50fc8 <line:890:5, col:25> col:10 check_complete 'void ()'
|-CXXMethodDecl 0x558928d51118 <line:892:5, col:48> col:23 simple_slot_size 'int (int)' static inline
| `-ParmVarDecl 0x558928d51080 <col:40, col:44> col:44 size 'int'
|-CXXMethodDecl 0x558928d514a8 <line:893:5, line:894:62> line:893:17 simple_slot_info 'void (int, int, void *&, void **&)' inline
| |-ParmVarDecl 0x558928d511d8 <col:34, col:38> col:38 offset 'int'
| |-ParmVarDecl 0x558928d51258 <col:46, col:50> col:50 size 'int'
| |-ParmVarDecl 0x558928d51300 <line:894:34, col:41> col:41 slot 'void *&'
| `-ParmVarDecl 0x558928d513b8 <col:47, col:55> col:55 pointer 'void **&'
|-CXXMethodDecl 0x558928d516d0 <line:895:5, col:46> col:11 referenced simple_slot 'void *(void *, size_t)'
| |-ParmVarDecl 0x558928d51580 <col:23, col:29> col:29 data 'void *'
| `-ParmVarDecl 0x558928d515f8 <col:35, col:42> col:42 size 'size_t':'unsigned long'
`-FunctionTemplateDecl 0x558928d519e8 <line:896:5, col:53> col:29 complex_slot
  |-TemplateTypeParmDecl 0x558928d51780 <col:14, col:23> col:23 referenced typename depth 0 index 0 T
  `-CXXMethodDecl 0x558928d51948 <col:26, col:53> col:29 complex_slot 'T *(T &)'
    `-ParmVarDecl 0x558928d51858 <col:42, col:45> col:45 variable 'T &'

Layout: <CGRecordLayout
  LLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.0*, %class.Vector.5, %"struct.Args::Slot"*, [48 x i8] }
  NonVirtualBaseLLVMType:%class.Args = type { %class.ArgContext.base, i8, i8, i8, %class.Vector.0*, %class.Vector.5, %"struct.Args::Slot"*, [48 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class NumArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class SecondsArg
         0 |   class NumArg (base) (empty)
         0 |   int fraction_digits
         4 |   int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928d6cb50 <../dummy_inc/click/args.hh:1013:1, line:1027:1> line:1013:7 referenced class NumArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558928d6cc68 <col:1, col:7> col:7 implicit class NumArg
|-AccessSpecDecl 0x558928d6ccf8 <col:16, col:22> col:16 public
|-EnumDecl 0x558928d6cd20 <line:1014:5, line:1026:5> line:1014:5
| |-EnumConstantDecl 0x558928d6ce20 <line:1015:9, col:21> col:9 status_ok 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x558928d6d070 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928d6ce00 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x558928d6cde0 <col:21> 'int' 0
| |-EnumConstantDecl 0x558928d6ceb0 <line:1016:9, col:24> col:9 referenced status_inval 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x558928d6d088 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928d6ce90 <col:24> 'int' Int: 22
| |     `-IntegerLiteral 0x558928d6ce70 <col:24> 'int' 22
| |-EnumConstantDecl 0x558928d6cf40 <line:1017:9, col:24> col:9 referenced status_range 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x558928d6d0a0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928d6cf20 <col:24> 'int' Int: 34
| |     `-IntegerLiteral 0x558928d6cf00 <col:24> 'int' 34
| |-EnumConstantDecl 0x558928d6cfd0 <line:1019:9, col:25> col:9 status_notsup 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x558928d6d0b8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928d6cfb0 <col:25> 'int' Int: 95
| |     `-IntegerLiteral 0x558928d6cf90 <col:25> 'int' 95
| `-EnumConstantDecl 0x558928d6d020 <line:1025:9> col:9 status_unitless 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|-CXXConstructorDecl 0x558928d6ea30 <line:1013:7> col:7 implicit used constexpr NumArg 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558928d6ee68 <col:7>
|-CXXConstructorDecl 0x558928d6eb38 <col:7> col:7 implicit constexpr NumArg 'void (const NumArg &)' inline default trivial noexcept-unevaluated 0x558928d6eb38
| `-ParmVarDecl 0x558928d6ec48 <col:7> col:7 'const NumArg &'
|-CXXConstructorDecl 0x558928d6ece8 <col:7> col:7 implicit used constexpr NumArg 'void (NumArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x558928d6edf8 <col:7> col:7 'NumArg &&'
| `-CompoundStmt 0x558928c07fd0 <col:7>
`-CXXDestructorDecl 0x558928d70f58 <col:7> col:7 implicit ~NumArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.NumArg = type { i8 }
  NonVirtualBaseLLVMType:%class.NumArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928d80bc8 <../dummy_inc/click/args.hh:1310:1, line:1321:1> line:1310:7 referenced class SecondsArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x558928d80d28 <col:1, col:7> col:7 implicit referenced class SecondsArg
|-AccessSpecDecl 0x558928d80db8 <col:36, col:42> col:36 public
|-CXXConstructorDecl 0x558928d80ec8 <line:1311:5, line:1313:5> line:1311:5 used SecondsArg 'void (int)'
| |-ParmVarDecl 0x558928d80df8 <col:16, col:24> col:20 used d 'int' cinit
| | `-IntegerLiteral 0x558928d81770 <col:24> 'int' 0
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x558928d81870 <col:5> 'NumArg' 'void () noexcept'
| |-CXXCtorInitializer Field 0x558928d816a0 'fraction_digits' 'int'
| | `-ImplicitCastExpr 0x558928d81830 <line:1312:27> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x558928d817f0 <col:27> 'int' lvalue ParmVar 0x558928d80df8 'd' 'int'
| `-CompoundStmt 0x558928d818e0 <col:30, line:1313:5>
|-CXXMethodDecl 0x558928d81118 <line:1314:5, col:99> col:10 parse_saturating 'bool (const String &, uint32_t &, const ArgContext &)'
| |-ParmVarDecl 0x558928d80f88 <col:27, col:41> col:41 str 'const String &'
| |-ParmVarDecl 0x558928d81000 <col:46, col:56> col:56 result 'uint32_t &'
| `-ParmVarDecl 0x558928d81078 <col:64, col:89> col:82 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x558928d81790 <col:89> 'const ArgContext' lvalue Var 0x558928d64498 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x558928d81370 <line:1315:5, col:88> col:10 parse 'bool (const String &, uint32_t &, const ArgContext &)'
| |-ParmVarDecl 0x558928d811e0 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x558928d81258 <col:35, col:45> col:45 result 'uint32_t &'
| `-ParmVarDecl 0x558928d812d0 <col:53, col:78> col:71 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x558928d817b0 <col:78> 'const ArgContext' lvalue Var 0x558928d64498 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x558928d815d0 <line:1317:5, col:86> col:10 parse 'bool (const String &, double &, const ArgContext &)'
| |-ParmVarDecl 0x558928d81438 <col:16, col:30> col:30 str 'const String &'
| |-ParmVarDecl 0x558928d814b8 <col:35, col:43> col:43 result 'double &'
| `-ParmVarDecl 0x558928d81530 <col:51, col:76> col:69 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x558928d817d0 <col:76> 'const ArgContext' lvalue Var 0x558928d64498 'blank_args' 'const ArgContext'
|-FieldDecl 0x558928d816a0 <line:1319:5, col:9> col:9 referenced fraction_digits 'int'
|-FieldDecl 0x558928d81708 <line:1320:5, col:9> col:9 referenced status 'int'
|-CXXConstructorDecl 0x558928c074d8 <line:1310:7> col:7 implicit constexpr SecondsArg 'void (const SecondsArg &)' inline default trivial noexcept-unevaluated 0x558928c074d8
| `-ParmVarDecl 0x558928c075e8 <col:7> col:7 'const SecondsArg &'
|-CXXConstructorDecl 0x558928c07688 <col:7> col:7 implicit used constexpr SecondsArg 'void (SecondsArg &&) noexcept' inline default trivial
| |-ParmVarDecl 0x558928c07798 <col:7> col:7 used 'SecondsArg &&'
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x558928c07fe0 <col:7> 'NumArg' 'void (NumArg &&) noexcept'
| |   `-ImplicitCastExpr 0x558928c07fb0 <col:7> 'NumArg' xvalue <UncheckedDerivedToBase (NumArg)>
| |     `-CXXStaticCastExpr 0x558928c07f80 <col:7> 'SecondsArg' xvalue static_cast<class SecondsArg &&> <NoOp>
| |       `-DeclRefExpr 0x558928c07f50 <col:7> 'SecondsArg' lvalue ParmVar 0x558928c07798 '' 'SecondsArg &&'
| |-CXXCtorInitializer Field 0x558928d816a0 'fraction_digits' 'int'
| | `-ImplicitCastExpr 0x558928c080d8 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x558928c080a8 <col:7> 'int' xvalue .fraction_digits 0x558928d816a0
| |     `-CXXStaticCastExpr 0x558928c08078 <col:7> 'SecondsArg' xvalue static_cast<class SecondsArg &&> <NoOp>
| |       `-DeclRefExpr 0x558928c08048 <col:7> 'SecondsArg' lvalue ParmVar 0x558928c07798 '' 'SecondsArg &&'
| |-CXXCtorInitializer Field 0x558928d81708 'status' 'int'
| | `-ImplicitCastExpr 0x558928f3d7f8 <col:7> 'int' <LValueToRValue>
| |   `-MemberExpr 0x558928f3d7c8 <col:7> 'int' xvalue .status 0x558928d81708
| |     `-CXXStaticCastExpr 0x558928f3d798 <col:7> 'SecondsArg' xvalue static_cast<class SecondsArg &&> <NoOp>
| |       `-DeclRefExpr 0x558928f3d768 <col:7> 'SecondsArg' lvalue ParmVar 0x558928c07798 '' 'SecondsArg &&'
| `-CompoundStmt 0x558928f3d850 <col:7>
`-CXXDestructorDecl 0x558928c07838 <col:7> col:7 implicit referenced ~SecondsArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.SecondsArg = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.SecondsArg = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class RouterVisitor
         0 |   (RouterVisitor vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Bitvector
         0 |   int _max
         8 |   Bitvector::word_type * _data
        16 |   Bitvector::word_type [2] _f
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class ElementTracker
         0 |   class RouterVisitor (primary base)
         0 |     (RouterVisitor vtable pointer)
         8 |   class Bitvector _reached
         8 |     int _max
        16 |     Bitvector::word_type * _data
        24 |     Bitvector::word_type [2] _f
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class ElementCastTracker
         0 |   class ElementTracker (primary base)
         0 |     class RouterVisitor (primary base)
         0 |       (RouterVisitor vtable pointer)
         8 |     class Bitvector _reached
         8 |       int _max
        16 |       Bitvector::word_type * _data
        24 |       Bitvector::word_type [2] _f
        32 |     class Vector<class Element *> _elements
        32 |       class vector_memory<class sized_array_memory<8> > vm_
        32 |         vector_memory<class sized_array_memory<8> >::type * l_
        40 |         vector_memory::size_type n_
        44 |         vector_memory::size_type capacity_
        48 |   class String _name
        48 |     struct String::rep_t _r
        48 |       const char * data
        56 |       int length
        64 |       struct String::memo_t * memo
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928e13150 <../dummy_inc/click/routervisitor.hh:15:1, line:53:1> line:15:7 referenced class RouterVisitor definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558928e13268 <col:1, col:7> col:7 implicit referenced class RouterVisitor
|-AccessSpecDecl 0x558928e132f8 <col:23, col:29> col:23 public
|-CXXConstructorDecl 0x558928e13380 <line:18:5, line:19:5> line:18:5 RouterVisitor 'void ()'
| `-CompoundStmt 0x558928e13b98 <col:21, line:19:5>
|-CXXDestructorDecl 0x558928e13470 <line:22:5, line:23:5> line:22:13 used ~RouterVisitor 'void () noexcept' virtual
| `-CompoundStmt 0x558928e13ba8 <col:30, line:23:5>
|-CXXMethodDecl 0x558928e138e8 <line:50:5, line:51:54> line:50:18 visit 'bool (Element *, bool, int, Element *, int, int)' virtual
| |-ParmVarDecl 0x558928e13560 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x558928e135d8 <col:36, col:41> col:41 isoutput 'bool'
| |-ParmVarDecl 0x558928e13658 <col:51, col:55> col:55 port 'int'
| |-ParmVarDecl 0x558928e136d0 <line:51:10, col:19> col:19 from_e 'Element *'
| |-ParmVarDecl 0x558928e13750 <col:27, col:31> col:31 from_port 'int'
| `-ParmVarDecl 0x558928e137d0 <col:42, col:46> col:46 distance 'int'
|-CXXMethodDecl 0x558928e13a18 <line:15:7> col:7 implicit operator= 'RouterVisitor &(const RouterVisitor &)' inline default noexcept-unevaluated 0x558928e13a18
| `-ParmVarDecl 0x558928e13b28 <col:7> col:7 'const RouterVisitor &'
`-CXXConstructorDecl 0x558928e20208 <col:7> col:7 implicit constexpr RouterVisitor 'void (const RouterVisitor &)' inline default noexcept-unevaluated 0x558928e20208
  `-ParmVarDecl 0x558928e20318 <col:7> col:7 'const RouterVisitor &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterVisitor = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.RouterVisitor = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928e026b8 prev 0x558928deae60 <../dummy_inc/click/bitvector.hh:20:1, line:95:1> line:20:7 referenced class Bitvector definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x558928e027b0 <col:1, col:7> col:7 implicit referenced class Bitvector
|-AccessSpecDecl 0x558928e02840 <line:21:3, col:9> col:3 public
|-CXXRecordDecl 0x558928e02868 <line:23:5, col:11> col:11 referenced class Bit
|-TypedefDecl 0x558928e02a28 <line:24:5, col:56> col:31 referenced unspecified_bool_type 'bool (Bitvector::*)() const'
| `-MemberPointerType 0x558928e029a0 'bool (Bitvector::*)() const'
|   |-RecordType 0x558928deaef0 'Bitvector'
|   | `-CXXRecord 0x558928e026b8 'Bitvector'
|   `-ParenType 0x558928e02940 'bool () const' sugar
|     `-FunctionProtoType 0x558928880550 'bool () const' const cdecl
|       `-BuiltinType 0x5589287d4500 'bool'
|-TypedefDecl 0x558928e02a90 <line:26:5, col:22> col:22 referenced word_type 'uint32_t':'unsigned int'
| `-TypedefType 0x55892892dac0 'uint32_t' sugar
|   |-Typedef 0x55892883d4c8 'uint32_t'
|   `-TypedefType 0x5589288165a0 '__uint32_t' sugar
|     |-Typedef 0x558928816198 '__uint32_t'
|     `-BuiltinType 0x5589287d4620 'unsigned int'
|-EnumDecl 0x558928e02ae8 <line:27:5, col:47> col:5
| |-EnumConstantDecl 0x558928e02bf0 <col:12, col:20> col:12 referenced wbits 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:27:5)'
| | `-ImplicitCastExpr 0x558928e02d60 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928e02bd0 <col:20> 'int' Int: 32
| |     `-IntegerLiteral 0x558928e02bb0 <col:20> 'int' 32
| |-EnumConstantDecl 0x558928e02c80 <col:24, col:33> col:24 referenced wshift 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:27:5)'
| | `-ImplicitCastExpr 0x558928e02d78 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928e02c60 <col:33> 'int' Int: 5
| |     `-IntegerLiteral 0x558928e02c40 <col:33> 'int' 5
| `-EnumConstantDecl 0x558928e02d10 <col:36, col:44> col:36 referenced wmask 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:27:5)'
|   `-ImplicitCastExpr 0x558928e02d90 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558928e02cf0 <col:44> 'int' Int: 31
|       `-IntegerLiteral 0x558928e02cd0 <col:44> 'int' 31
|-CXXConstructorDecl 0x558928e02de0 <line:29:5, col:22> col:12 Bitvector 'void ()' inline
|-CXXConstructorDecl 0x558928e02f30 <line:30:5, col:36> col:21 Bitvector 'void (int)' inline
| `-ParmVarDecl 0x558928e02ea0 <col:31, col:35> col:35 n 'int'
|-CXXConstructorDecl 0x558928e03080 <line:31:5, col:39> col:21 Bitvector 'void (bool)' inline
| `-ParmVarDecl 0x558928e02ff0 <col:31, col:36> col:36 bit 'bool'
|-CXXConstructorDecl 0x558928e03298 <line:32:5, col:37> col:12 Bitvector 'void (int, bool)' inline
| |-ParmVarDecl 0x558928e03148 <col:22, col:26> col:26 n 'int'
| `-ParmVarDecl 0x558928e031c0 <col:29, col:34> col:34 bit 'bool'
|-CXXConstructorDecl 0x558928e03448 <line:33:5, col:40> col:12 used Bitvector 'void (const Bitvector &)' inline
| `-ParmVarDecl 0x558928e03388 <col:22, col:39> col:39 x 'const Bitvector &'
|-CXXDestructorDecl 0x558928e03540 <line:34:5, col:23> col:12 used ~Bitvector 'void () noexcept' inline
|-CXXMethodDecl 0x558928e03670 <line:36:5, col:23> col:16 used size 'int () const' inline
|-CXXMethodDecl 0x558928e037e8 <line:37:5, col:32> col:16 used operator[] 'Bitvector::Bit (int)' inline
| `-ParmVarDecl 0x558928e03728 <col:27, col:31> col:31 i 'int'
|-CXXMethodDecl 0x558928e03938 <line:38:5, col:35> col:17 used operator[] 'bool (int) const' inline
| `-ParmVarDecl 0x558928e038a8 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x558928e03a88 <line:39:5, col:31> col:16 force_bit 'Bitvector::Bit (int)' inline
| `-ParmVarDecl 0x558928e039f8 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x558928e03b58 <line:41:5, col:28> col:16 used word_size 'int () const' inline
|-CXXMethodDecl 0x558928e03c20 <line:42:5, col:27> col:16 max_word 'int () const' inline
|-CXXMethodDecl 0x558928e03d58 <line:43:5, col:29> col:23 words 'Bitvector::word_type *()' inline
|-CXXMethodDecl 0x558928e03e78 <line:44:5, col:37> col:29 used words 'const Bitvector::word_type *() const' inline
|-CXXMethodDecl 0x558928e03f38 <line:46:5, col:17> col:10 used zero 'bool () const'
|-CXXConversionDecl 0x558928e040a8 <line:47:5, col:45> col:12 operator bool (Bitvector::*)() const 'Bitvector::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x558928e04178 <line:48:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x558928e043a8 <line:50:5, col:38> col:16 used assign 'Bitvector &(int, bool)'
| |-ParmVarDecl 0x558928e04230 <col:23, col:27> col:27 n 'int'
| `-ParmVarDecl 0x558928e042a8 <col:30, col:35> col:35 bit 'bool'
|-CXXMethodDecl 0x558928e04528 <line:51:5, col:44> col:16 operator= 'Bitvector &(const Bitvector &)'
| `-ParmVarDecl 0x558928e04468 <col:26, col:43> col:43 x 'const Bitvector &'
|-CXXMethodDecl 0x558928e045f0 <line:52:5, col:16> col:10 used clear 'void ()'
|-CXXMethodDecl 0x558928e04738 <line:53:5, col:22> col:10 used resize 'void (int)'
| `-ParmVarDecl 0x558928e046a8 <col:17, col:21> col:21 n 'int'
|-FriendDecl 0x558928e049f8 <line:55:5, col:73> col:24
| `-FunctionDecl 0x558928e04938 parent 0x5589287d4488 <col:5, col:73> col:24 used operator== 'bool (const Bitvector &, const Bitvector &)' inline
|   |-ParmVarDecl 0x558928e047f0 <col:35, col:52> col:52 a 'const Bitvector &'
|   `-ParmVarDecl 0x558928e04868 <col:55, col:72> col:72 b 'const Bitvector &'
|-FriendDecl 0x558928e04c18 <line:56:5, col:73> col:24
| `-FunctionDecl 0x558928e04b58 parent 0x5589287d4488 <col:5, col:73> col:24 operator!= 'bool (const Bitvector &, const Bitvector &)' inline
|   |-ParmVarDecl 0x558928e04a48 <col:35, col:52> col:52 a 'const Bitvector &'
|   `-ParmVarDecl 0x558928e04ac0 <col:55, col:72> col:72 b 'const Bitvector &'
|-CXXMethodDecl 0x558928e04d28 <line:57:5, col:51> col:10 nonzero_intersection 'bool (const Bitvector &) const'
| `-ParmVarDecl 0x558928e04c68 <col:31, col:48> col:48 x 'const Bitvector &'
|-CXXMethodDecl 0x558928e04e18 <line:59:5, col:34> col:22 used operator~ 'Bitvector () const' inline
|-FriendDecl 0x558928e050d8 <line:60:5, col:70> col:29
| `-FunctionDecl 0x558928e05018 parent 0x5589287d4488 <col:5, col:70> col:29 used operator& 'Bitvector (Bitvector, const Bitvector &)' inline
|   |-ParmVarDecl 0x558928e04ec8 <col:39, col:49> col:49 a 'Bitvector' destroyed
|   `-ParmVarDecl 0x558928e04f40 <col:52, col:69> col:69 b 'const Bitvector &'
|-FriendDecl 0x558928e052f8 <line:61:5, col:70> col:29
| `-FunctionDecl 0x558928e05238 parent 0x5589287d4488 <col:5, col:70> col:29 operator| 'Bitvector (Bitvector, const Bitvector &)' inline
|   |-ParmVarDecl 0x558928e05128 <col:39, col:49> col:49 a 'Bitvector' destroyed
|   `-ParmVarDecl 0x558928e051a0 <col:52, col:69> col:69 b 'const Bitvector &'
|-FriendDecl 0x558928e05518 <line:62:5, col:70> col:29
| `-FunctionDecl 0x558928e05458 parent 0x5589287d4488 <col:5, col:70> col:29 operator^ 'Bitvector (Bitvector, const Bitvector &)' inline
|   |-ParmVarDecl 0x558928e05348 <col:39, col:49> col:49 a 'Bitvector' destroyed
|   `-ParmVarDecl 0x558928e053c0 <col:52, col:69> col:69 b 'const Bitvector &'
|-FriendDecl 0x558928e05738 <line:63:5, col:70> col:29
| `-FunctionDecl 0x558928e05678 parent 0x5589287d4488 <col:5, col:70> col:29 operator- 'Bitvector (Bitvector, const Bitvector &)' inline
|   |-ParmVarDecl 0x558928e05568 <col:39, col:49> col:49 a 'Bitvector' destroyed
|   `-ParmVarDecl 0x558928e055e0 <col:52, col:69> col:69 b 'const Bitvector &'
|-CXXMethodDecl 0x558928e05798 <line:65:5, col:15> col:10 used flip 'void ()'
|-CXXMethodDecl 0x558928e05858 <line:66:5, col:24> col:17 negate 'void ()' inline
|-CXXMethodDecl 0x558928e05998 <line:67:5, col:45> col:16 used operator&= 'Bitvector &(const Bitvector &)'
| `-ParmVarDecl 0x558928e05908 <col:27, col:44> col:44 x 'const Bitvector &'
|-CXXMethodDecl 0x558928e05ae0 <line:68:5, col:45> col:16 used operator|= 'Bitvector &(const Bitvector &)'
| `-ParmVarDecl 0x558928e05a50 <col:27, col:44> col:44 x 'const Bitvector &'
|-CXXMethodDecl 0x558928e05c28 <line:69:5, col:45> col:16 used operator^= 'Bitvector &(const Bitvector &)'
| `-ParmVarDecl 0x558928e05b98 <col:27, col:44> col:44 x 'const Bitvector &'
|-CXXMethodDecl 0x558928e05d70 <line:70:5, col:52> col:23 operator-= 'Bitvector &(const Bitvector &)' inline
| `-ParmVarDecl 0x558928e05ce0 <col:34, col:51> col:51 x 'const Bitvector &'
|-CXXMethodDecl 0x558928e05f78 <line:71:5, col:50> col:10 offset_or 'void (const Bitvector &, int)'
| |-ParmVarDecl 0x558928e05e28 <col:20, col:37> col:37 x 'const Bitvector &'
| `-ParmVarDecl 0x558928e05ea8 <col:40, col:44> col:44 offset 'int'
|-CXXMethodDecl 0x558928e06188 <line:72:5, col:70> col:10 or_with_difference 'void (const Bitvector &, Bitvector &)'
| |-ParmVarDecl 0x558928e06038 <col:29, col:46> col:46 x 'const Bitvector &'
| `-ParmVarDecl 0x558928e060b0 <col:49, col:60> col:60 difference 'Bitvector &'
|-CXXMethodDecl 0x558928e06308 <line:74:5, col:27> col:10 used swap 'void (Bitvector &)'
| `-ParmVarDecl 0x558928e06248 <col:15, col:26> col:26 x 'Bitvector &'
|-TypedefDecl 0x558928e063c0 <line:77:5, col:23> col:23 data_word_type 'Bitvector::word_type':'unsigned int'
| |-TypedefType 0x558928e03cc0 'Bitvector::word_type' sugar
| | |-Typedef 0x558928e02a90 'word_type'
| | `-TypedefType 0x55892892dac0 'uint32_t' sugar
| |   |-Typedef 0x55892883d4c8 'uint32_t'
| |   `-TypedefType 0x5589288165a0 '__uint32_t' sugar
| |     |-Typedef 0x558928816198 '__uint32_t'
| |     `-BuiltinType 0x5589287d4620 'unsigned int'
| `-DeprecatedAttr 0x558928e06418 <col:53> "" ""
|-EnumDecl 0x558928e06488 <line:78:5, col:35> col:5
| `-EnumConstantDecl 0x558928e06590 <col:12, col:29> col:12 data_word_bits 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:78:5)'
|   `-ImplicitCastExpr 0x558928e065e0 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558928e06570 <col:29> 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:27:5)' Int: 32
|       `-DeclRefExpr 0x558928e06550 <col:29> 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:27:5)' EnumConstant 0x558928e02bf0 'wbits' 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:27:5)'
|-CXXMethodDecl 0x558928e06618 <line:79:5, col:62> col:23 data_words 'Bitvector::word_type *()' inline
| `-DeprecatedAttr 0x558928e066b8 <col:51> "" ""
|-CXXMethodDecl 0x558928e06748 <line:80:5, col:74> col:29 data_words 'const Bitvector::word_type *() const' inline
| `-DeprecatedAttr 0x558928e067e8 <col:63> "" ""
|-AccessSpecDecl 0x558928e06858 <line:83:3, col:10> col:3 private
|-EnumDecl 0x558928e06880 <line:85:5, col:54> col:5
| |-EnumConstantDecl 0x558928e06980 <col:12, col:22> col:12 referenced ninline 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:85:5)'
| | `-ImplicitCastExpr 0x558928e06ab8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x558928e06960 <col:22> 'int' Int: 2
| |     `-IntegerLiteral 0x558928e06940 <col:22> 'int' 2
| `-EnumConstantDecl 0x558928e06a68 <col:25, col:48> col:25 referenced inlinebits 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:85:5)'
|   `-ImplicitCastExpr 0x558928e06ad0 <col:38, col:48> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x558928e06a48 <col:38, col:48> 'int' Int: 64
|       `-BinaryOperator 0x558928e06a28 <col:38, col:48> 'int' '*'
|         |-DeclRefExpr 0x558928e069d0 <col:38> 'int' EnumConstant 0x558928e06980 'ninline' 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:85:5)'
|         `-ImplicitCastExpr 0x558928e06a10 <col:48> 'int' <IntegralCast>
|           `-DeclRefExpr 0x558928e069f0 <col:48> 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:27:5)' EnumConstant 0x558928e02bf0 'wbits' 'Bitvector::(anonymous enum at ../dummy_inc/click/bitvector.hh:27:5)'
|-FieldDecl 0x558928e06b00 <line:87:5, col:9> col:9 referenced _max 'int'
|-FieldDecl 0x558928e06b60 <line:88:5, col:16> col:16 referenced _data 'Bitvector::word_type *'
|-FieldDecl 0x558928e06c48 <line:89:5, col:25> col:15 referenced _f 'Bitvector::word_type [2]'
|-CXXMethodDecl 0x558928e06d38 <line:91:5, col:51> col:10 used finish_copy_constructor 'void (const Bitvector &)'
| `-ParmVarDecl 0x558928e06ca8 <col:34, col:50> col:51 'const Bitvector &'
|-CXXMethodDecl 0x558928e06e00 <line:92:5, col:28> col:17 clear_last 'void ()' inline
`-CXXMethodDecl 0x558928e06fc8 <line:93:5, col:31> col:10 hard_resize 'void (int, bool)'
  |-ParmVarDecl 0x558928e06eb8 <col:22> col:25 'int'
  `-ParmVarDecl 0x558928e06f30 <col:27> col:31 'bool'

Layout: <CGRecordLayout
  LLVMType:%class.Bitvector = type { i32, i32*, [2 x i32] }
  NonVirtualBaseLLVMType:%class.Bitvector = type { i32, i32*, [2 x i32] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928e13bb8 <../dummy_inc/click/routervisitor.hh:64:1, line:120:1> line:64:7 referenced class ElementTracker definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'RouterVisitor'
|-CXXRecordDecl 0x558928e13d18 <col:1, col:7> col:7 implicit referenced class ElementTracker
|-AccessSpecDecl 0x558928e13da8 <col:47, col:53> col:47 public
|-CXXConstructorDecl 0x558928e13ee8 <line:68:5, col:34> col:5 used ElementTracker 'void (Router *)'
| `-ParmVarDecl 0x558928e13de0 <col:20, col:28> col:28 router 'Router *'
|-CXXMethodDecl 0x558928e14250 <line:71:5, line:73:5> line:71:30 elements 'const Vector<Element *> &() const'
| `-CompoundStmt 0x558928e20b30 <col:47, line:73:5>
|   `-ReturnStmt 0x558928e20b20 <line:72:2, col:9>
|     `-MemberExpr 0x558928e20af0 <col:9> 'const Vector<Element *>':'const Vector<Element *>' lvalue ->_elements 0x558928e20190
|       `-CXXThisExpr 0x558928e20ae0 <col:9> 'const ElementTracker *' implicit this
|-CXXMethodDecl 0x558928e14318 <line:75:5, line:77:5> line:75:9 used size 'int () const'
| `-CompoundStmt 0x558928e20c18 <col:22, line:77:5>
|   `-ReturnStmt 0x558928e20c08 <line:76:2, col:24>
|     `-CXXMemberCallExpr 0x558928e20bb8 <col:9, col:24> 'Vector::size_type':'int'
|       `-MemberExpr 0x558928e20b88 <col:9, col:19> '<bound member function type>' .size 0x558928e1cb58
|         `-MemberExpr 0x558928e20b58 <col:9> 'const Vector<Element *>':'const Vector<Element *>' lvalue ->_elements 0x558928e20190
|           `-CXXThisExpr 0x558928e20b48 <col:9> 'const ElementTracker *' implicit this
|-CXXMethodDecl 0x558928e14498 <line:81:5, line:83:5> line:81:14 used operator[] 'Element *(int) const'
| |-ParmVarDecl 0x558928e143d0 <col:25, col:29> col:29 used i 'int'
| `-CompoundStmt 0x558928e20da0 <col:38, line:83:5>
|   `-ReturnStmt 0x558928e20d90 <line:82:2, col:20>
|     `-ImplicitCastExpr 0x558928e20d78 <col:9, col:20> 'Element *':'Element *' <LValueToRValue>
|       `-CXXOperatorCallExpr 0x558928e20d40 <col:9, col:20> 'Element *const':'Element *const' lvalue
|         |-ImplicitCastExpr 0x558928e20d28 <col:18, col:20> 'Element *const &(*)(Vector::size_type) const' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x558928e20ca8 <col:18, col:20> 'Element *const &(Vector::size_type) const' lvalue CXXMethod 0x558928e1d3a8 'operator[]' 'Element *const &(Vector::size_type) const'
|         |-MemberExpr 0x558928e20c40 <col:9> 'const Vector<Element *>':'const Vector<Element *>' lvalue ->_elements 0x558928e20190
|         | `-CXXThisExpr 0x558928e20c30 <col:9> 'const ElementTracker *' implicit this
|         `-ImplicitCastExpr 0x558928e20c90 <col:19> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x558928e20c70 <col:19> 'int' lvalue ParmVar 0x558928e143d0 'i' 'int'
|-TypedefDecl 0x558928e1fab0 <line:86:5, col:47> col:47 referenced const_iterator 'Vector<Element *>::const_iterator':'Element *const *'
| `-ElaboratedType 0x558928e1fa40 'Vector<Element *>::const_iterator' sugar
|   `-TypedefType 0x558928e1c5a0 'Vector<Element *>::const_iterator' sugar
|     |-Typedef 0x558928e1ae90 'const_iterator'
|     `-PointerType 0x558928e196b0 'Element *const *'
|       `-QualType 0x558928e146e1 'Element *const' const
|         `-SubstTemplateTypeParmType 0x558928e146e0 'Element *' sugar
|           |-TemplateTypeParmType 0x558928ad5af0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x558928ad5a98 'T'
|           `-PointerType 0x558928b45070 'Element *'
|             `-RecordType 0x558928b370c0 'Element'
|               `-CXXRecord 0x558928deafa0 'Element'
|-CXXMethodDecl 0x558928e1fb78 <line:88:5, line:90:5> line:88:20 begin 'ElementTracker::const_iterator () const'
| `-CompoundStmt 0x558928e20eb8 <col:34, line:90:5>
|   `-ReturnStmt 0x558928e20ea8 <line:89:2, col:25>
|     `-CXXMemberCallExpr 0x558928e20e88 <col:9, col:25> 'Vector<Element *>::const_iterator':'Element *const *'
|       `-MemberExpr 0x558928e20e58 <col:9, col:19> '<bound member function type>' .begin 0x558928e1c638
|         `-MemberExpr 0x558928e20dc8 <col:9> 'const Vector<Element *>':'const Vector<Element *>' lvalue ->_elements 0x558928e20190
|           `-CXXThisExpr 0x558928e20db8 <col:9> 'const ElementTracker *' implicit this
|-CXXMethodDecl 0x558928e1fc38 <line:92:5, line:94:5> line:92:20 end 'ElementTracker::const_iterator () const'
| `-CompoundStmt 0x558928e20fd0 <col:32, line:94:5>
|   `-ReturnStmt 0x558928e20fc0 <line:93:2, col:23>
|     `-CXXMemberCallExpr 0x558928e20fa0 <col:9, col:23> 'Vector<Element *>::const_iterator':'Element *const *'
|       `-MemberExpr 0x558928e20f70 <col:9, col:19> '<bound member function type>' .end 0x558928e1c788
|         `-MemberExpr 0x558928e20ee0 <col:9> 'const Vector<Element *>':'const Vector<Element *>' lvalue ->_elements 0x558928e20190
|           `-CXXThisExpr 0x558928e20ed0 <col:9> 'const ElementTracker *' implicit this
|-CXXMethodDecl 0x558928e1fda8 <line:97:5, line:99:5> line:97:10 contains 'bool (const Element *) const'
| |-ParmVarDecl 0x558928e1fce8 <col:19, col:34> col:34 used e 'const Element *'
| `-CompoundStmt 0x558928e211b8 <col:43, line:99:5>
|   `-ReturnStmt 0x558928e211a8 <line:98:2, col:29>
|     `-CXXOperatorCallExpr 0x558928e21170 <col:9, col:29> 'bool'
|       |-ImplicitCastExpr 0x558928e21158 <col:17, col:29> 'bool (*)(int) const' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x558928e21110 <col:17, col:29> 'bool (int) const' lvalue CXXMethod 0x558928e0b6c0 'operator[]' 'bool (int) const'
|       |-MemberExpr 0x558928e20ff8 <col:9> 'const Bitvector' lvalue ->_reached 0x558928e20090
|       | `-CXXThisExpr 0x558928e20fe8 <col:9> 'const ElementTracker *' implicit this
|       `-CXXMemberCallExpr 0x558928e210f0 <col:18, col:28> 'int'
|         `-MemberExpr 0x558928e210c0 <col:18, col:21> '<bound member function type>' ->eindex 0x558928dfc1f0
|           `-ImplicitCastExpr 0x558928e21048 <col:18> 'const Element *' <LValueToRValue>
|             `-DeclRefExpr 0x558928e21028 <col:18> 'const Element *' lvalue ParmVar 0x558928e1fce8 'e' 'const Element *'
|-CXXMethodDecl 0x558928e1fef0 <line:102:5, line:107:5> line:102:10 insert 'void (Element *)'
| |-ParmVarDecl 0x558928e1fe60 <col:17, col:26> col:26 used e 'Element *'
| `-CompoundStmt 0x558928e218c8 <col:29, line:107:5>
|   `-IfStmt 0x558928e218b0 <line:103:2, line:106:2>
|     |-ExprWithCleanups 0x558928e21488 <line:103:6, col:27> 'bool'
|     | `-UnaryOperator 0x558928e21470 <col:6, col:27> 'bool' prefix '!' cannot overflow
|     |   `-ImplicitCastExpr 0x558928e21458 <col:7, col:27> 'bool' <UserDefinedConversion>
|     |     `-CXXMemberCallExpr 0x558928e21438 <col:7, col:27> 'bool'
|     |       `-MemberExpr 0x558928e21408 <col:7, col:27> '<bound member function type>' .operator bool 0x558928e07618
|     |         `-ImplicitCastExpr 0x558928e213f0 <col:7, col:27> 'const Bitvector::Bit' lvalue <NoOp>
|     |           `-MaterializeTemporaryExpr 0x558928e213d8 <col:7, col:27> 'Bitvector::Bit':'Bitvector::Bit' lvalue
|     |             `-CXXOperatorCallExpr 0x558928e213a0 <col:7, col:27> 'Bitvector::Bit':'Bitvector::Bit'
|     |               |-ImplicitCastExpr 0x558928e21388 <col:15, col:27> 'Bitvector::Bit (*)(int)' <FunctionToPointerDecay>
|     |               | `-DeclRefExpr 0x558928e21310 <col:15, col:27> 'Bitvector::Bit (int)' lvalue CXXMethod 0x558928e0a9c8 'operator[]' 'Bitvector::Bit (int)'
|     |               |-MemberExpr 0x558928e211e0 <col:7> 'Bitvector' lvalue ->_reached 0x558928e20090
|     |               | `-CXXThisExpr 0x558928e211d0 <col:7> 'ElementTracker *' implicit this
|     |               `-CXXMemberCallExpr 0x558928e212d8 <col:16, col:26> 'int'
|     |                 `-MemberExpr 0x558928e212a8 <col:16, col:19> '<bound member function type>' ->eindex 0x558928dfc1f0
|     |                   `-ImplicitCastExpr 0x558928e212f8 <col:16> 'const Element *' <NoOp>
|     |                     `-ImplicitCastExpr 0x558928e21230 <col:16> 'Element *' <LValueToRValue>
|     |                       `-DeclRefExpr 0x558928e21210 <col:16> 'Element *' lvalue ParmVar 0x558928e1fe60 'e' 'Element *'
|     `-CompoundStmt 0x558928e21890 <col:30, line:106:2>
|       |-ExprWithCleanups 0x558928e21748 <line:104:6, col:30> 'Bitvector::Bit':'Bitvector::Bit' lvalue
|       | `-CXXOperatorCallExpr 0x558928e21710 <col:6, col:30> 'Bitvector::Bit':'Bitvector::Bit' lvalue
|       |   |-ImplicitCastExpr 0x558928e216f8 <col:28> 'Bitvector::Bit &(*)(bool)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x558928e21678 <col:28> 'Bitvector::Bit &(bool)' lvalue CXXMethod 0x558928e107f0 'operator=' 'Bitvector::Bit &(bool)'
|       |   |-MaterializeTemporaryExpr 0x558928e21660 <col:6, col:26> 'Bitvector::Bit':'Bitvector::Bit' lvalue
|       |   | `-CXXOperatorCallExpr 0x558928e21618 <col:6, col:26> 'Bitvector::Bit':'Bitvector::Bit'
|       |   |   |-ImplicitCastExpr 0x558928e21600 <col:14, col:26> 'Bitvector::Bit (*)(int)' <FunctionToPointerDecay>
|       |   |   | `-DeclRefExpr 0x558928e215e0 <col:14, col:26> 'Bitvector::Bit (int)' lvalue CXXMethod 0x558928e0a9c8 'operator[]' 'Bitvector::Bit (int)'
|       |   |   |-MemberExpr 0x558928e214b0 <col:6> 'Bitvector' lvalue ->_reached 0x558928e20090
|       |   |   | `-CXXThisExpr 0x558928e214a0 <col:6> 'ElementTracker *' implicit this
|       |   |   `-CXXMemberCallExpr 0x558928e215a8 <col:15, col:25> 'int'
|       |   |     `-MemberExpr 0x558928e21578 <col:15, col:18> '<bound member function type>' ->eindex 0x558928dfc1f0
|       |   |       `-ImplicitCastExpr 0x558928e215c8 <col:15> 'const Element *' <NoOp>
|       |   |         `-ImplicitCastExpr 0x558928e21500 <col:15> 'Element *' <LValueToRValue>
|       |   |           `-DeclRefExpr 0x558928e214e0 <col:15> 'Element *' lvalue ParmVar 0x558928e1fe60 'e' 'Element *'
|       |   `-CXXBoolLiteralExpr 0x558928e21650 <col:30> 'bool' true
|       `-CXXMemberCallExpr 0x558928e21850 <line:105:6, col:27> 'void'
|         |-MemberExpr 0x558928e21820 <col:6, col:16> '<bound member function type>' .push_back 0x558928e1e468
|         | `-MemberExpr 0x558928e21770 <col:6> 'Vector<Element *>':'Vector<Element *>' lvalue ->_elements 0x558928e20190
|         |   `-CXXThisExpr 0x558928e21760 <col:6> 'ElementTracker *' implicit this
|         `-ImplicitCastExpr 0x558928e21878 <col:26> 'Element *' <LValueToRValue>
|           `-DeclRefExpr 0x558928e21800 <col:26> 'Element *' lvalue ParmVar 0x558928e1fe60 'e' 'Element *'
|-CXXMethodDecl 0x558928e1ffb8 <line:110:5, line:113:5> line:110:10 clear 'void ()'
| `-CompoundStmt 0x558928e21a00 <col:18, line:113:5>
|   |-CXXMemberCallExpr 0x558928e21950 <line:111:2, col:17> 'void'
|   | `-MemberExpr 0x558928e21920 <col:2, col:11> '<bound member function type>' .clear 0x558928e045f0
|   |   `-MemberExpr 0x558928e218f0 <col:2> 'Bitvector' lvalue ->_reached 0x558928e20090
|   |     `-CXXThisExpr 0x558928e218e0 <col:2> 'ElementTracker *' implicit this
|   `-CXXMemberCallExpr 0x558928e219e0 <line:112:2, col:18> 'void'
|     `-MemberExpr 0x558928e219b0 <col:2, col:12> '<bound member function type>' .clear 0x558928e1f628
|       `-MemberExpr 0x558928e21980 <col:2> 'Vector<Element *>':'Vector<Element *>' lvalue ->_elements 0x558928e20190
|         `-CXXThisExpr 0x558928e21970 <col:2> 'ElementTracker *' implicit this
|-AccessSpecDecl 0x558928e20058 <line:115:3, col:10> col:3 private
|-FieldDecl 0x558928e20090 <line:117:5, col:15> col:15 referenced _reached 'Bitvector'
|-FieldDecl 0x558928e20190 <line:118:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-CXXConstructorDecl 0x558928e20388 <line:64:7> col:7 implicit ElementTracker 'void (const ElementTracker &)' inline default noexcept-unevaluated 0x558928e20388
| `-ParmVarDecl 0x558928e20498 <col:7> col:7 'const ElementTracker &'
|-CXXConstructorDecl 0x558928e20538 <col:7> col:7 implicit ElementTracker 'void (ElementTracker &&)' inline default noexcept-unevaluated 0x558928e20538
| `-ParmVarDecl 0x558928e20648 <col:7> col:7 'ElementTracker &&'
|-CXXMethodDecl 0x558928e206e8 <col:7> col:7 implicit operator= 'ElementTracker &(const ElementTracker &)' inline default noexcept-unevaluated 0x558928e206e8
| `-ParmVarDecl 0x558928e207f8 <col:7> col:7 'const ElementTracker &'
|-CXXMethodDecl 0x558928e20868 <col:7> col:7 implicit operator= 'ElementTracker &(ElementTracker &&)' inline default noexcept-unevaluated 0x558928e20868
| `-ParmVarDecl 0x558928e20978 <col:7> col:7 'ElementTracker &&'
`-CXXDestructorDecl 0x558928e20a00 <col:7> col:7 implicit used ~ElementTracker 'void () noexcept' inline default
  |-Overrides: [ 0x558928e13470 RouterVisitor::~RouterVisitor 'void () noexcept' ]
  `-CompoundStmt 0x558928e27bd0 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.ElementTracker = type { %class.RouterVisitor, %class.Bitvector, %class.Vector }
  NonVirtualBaseLLVMType:%class.ElementTracker = type { %class.RouterVisitor, %class.Bitvector, %class.Vector }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928e21a20 <../dummy_inc/click/routervisitor.hh:139:1, line:155:1> line:139:7 referenced class ElementCastTracker definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'ElementTracker'
|-CXXRecordDecl 0x558928e21b78 <col:1, col:7> col:7 implicit referenced class ElementCastTracker
|-AccessSpecDecl 0x558928e21c08 <col:52, col:58> col:52 public
|-CXXConstructorDecl 0x558928e21dc8 <line:144:5, line:146:5> line:144:5 used ElementCastTracker 'void (Router *, const String &)'
| |-ParmVarDecl 0x558928e21c40 <col:24, col:32> col:32 used router 'Router *'
| |-ParmVarDecl 0x558928e21cb8 <col:40, col:54> col:54 used name 'const String &'
| |-CXXCtorInitializer 'ElementTracker'
| | `-CXXConstructExpr 0x558928e22af8 <line:145:4, col:25> 'ElementTracker' 'void (Router *)'
| |   `-ImplicitCastExpr 0x558928e22ae0 <col:19> 'Router *' <LValueToRValue>
| |     `-DeclRefExpr 0x558928e22a90 <col:19> 'Router *' lvalue ParmVar 0x558928e21c40 'router' 'Router *'
| |-CXXCtorInitializer Field 0x558928e222c0 '_name' 'String'
| | `-CXXConstructExpr 0x558928e27b58 <col:28, col:38> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x558928e27b18 <col:34> 'const String' lvalue ParmVar 0x558928e21cb8 'name' 'const String &'
| `-CompoundStmt 0x558928e27be0 <col:40, line:146:5>
|-CXXMethodDecl 0x558928e221b8 <line:148:5, line:149:53> line:148:10 visit 'bool (Element *, bool, int, Element *, int, int)'
| |-Overrides: [ 0x558928e138e8 RouterVisitor::visit 'bool (Element *, bool, int, Element *, int, int)' ]
| |-ParmVarDecl 0x558928e21e90 <col:16, col:25> col:25 e 'Element *'
| |-ParmVarDecl 0x558928e21f08 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x558928e21f88 <col:43, col:47> col:47 port 'int'
| |-ParmVarDecl 0x558928e22000 <line:149:9, col:18> col:18 from_e 'Element *'
| |-ParmVarDecl 0x558928e22080 <col:26, col:30> col:30 from_port 'int'
| `-ParmVarDecl 0x558928e22100 <col:41, col:45> col:45 distance 'int'
|-AccessSpecDecl 0x558928e22288 <line:151:3, col:10> col:3 private
|-FieldDecl 0x558928e222c0 <line:153:5, col:12> col:12 _name 'String'
|-CXXConstructorDecl 0x558928e22338 <line:139:7> col:7 implicit ElementCastTracker 'void (const ElementCastTracker &)' inline default noexcept-unevaluated 0x558928e22338
| `-ParmVarDecl 0x558928e22448 <col:7> col:7 'const ElementCastTracker &'
|-CXXConstructorDecl 0x558928e224e8 <col:7> col:7 implicit ElementCastTracker 'void (ElementCastTracker &&)' inline default noexcept-unevaluated 0x558928e224e8
| `-ParmVarDecl 0x558928e225f8 <col:7> col:7 'ElementCastTracker &&'
|-CXXMethodDecl 0x558928e22698 <col:7> col:7 implicit operator= 'ElementCastTracker &(const ElementCastTracker &)' inline default noexcept-unevaluated 0x558928e22698
| `-ParmVarDecl 0x558928e227a8 <col:7> col:7 'const ElementCastTracker &'
|-CXXMethodDecl 0x558928e22818 <col:7> col:7 implicit operator= 'ElementCastTracker &(ElementCastTracker &&)' inline default noexcept-unevaluated 0x558928e22818
| `-ParmVarDecl 0x558928e22928 <col:7> col:7 'ElementCastTracker &&'
`-CXXDestructorDecl 0x558928e229b0 <col:7> col:7 implicit used ~ElementCastTracker 'void () noexcept' inline default
  |-Overrides: [ 0x558928e20a00 ElementTracker::~ElementTracker 'void () noexcept' ]
  `-CompoundStmt 0x558928f3fb70 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.ElementCastTracker = type { %class.ElementTracker, %class.String }
  NonVirtualBaseLLVMType:%class.ElementCastTracker = type { %class.ElementTracker, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_tcp
         0 |   uint16_t th_sport
         2 |   uint16_t th_dport
         4 |   tcp_seq_t th_seq
         8 |   tcp_seq_t th_ack
    12:0-3 |   unsigned int th_flags2
    12:4-7 |   unsigned int th_off
        13 |   uint8_t th_flags
        14 |   uint16_t th_win
        16 |   uint16_t th_sum
        18 |   uint16_t th_urp
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928d88f58 <../dummy_inc/clicknet/tcp.h:24:1, line:51:1> line:24:8 struct click_tcp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x558928d89078 <col:1, col:8> col:8 implicit struct click_tcp
|-FieldDecl 0x558928d89118 <line:25:5, col:14> col:14 th_sport 'uint16_t':'unsigned short'
|-FieldDecl 0x558928d89178 <line:26:5, col:14> col:14 th_dport 'uint16_t':'unsigned short'
|-FieldDecl 0x558928d89200 <line:27:5, col:15> col:15 referenced th_seq 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x558928d89260 <line:28:5, col:15> col:15 th_ack 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x558928d89308 <line:30:5, col:26> col:14 th_flags2 'unsigned int'
| `-ConstantExpr 0x558928d892e8 <col:26> 'int' Int: 4
|   `-IntegerLiteral 0x558928d892b0 <col:26> 'int' 4
|-FieldDecl 0x558928d893b0 <line:31:5, col:23> col:14 referenced th_off 'unsigned int'
| `-ConstantExpr 0x558928d89390 <col:23> 'int' Int: 4
|   `-IntegerLiteral 0x558928d89358 <col:23> 'int' 4
|-FieldDecl 0x558928d89410 <line:39:5, col:13> col:13 referenced th_flags 'uint8_t':'unsigned char'
|-FieldDecl 0x558928d89470 <line:48:5, col:14> col:14 th_win 'uint16_t':'unsigned short'
|-FieldDecl 0x558928d894d0 <line:49:5, col:14> col:14 th_sum 'uint16_t':'unsigned short'
`-FieldDecl 0x558928d89530 <line:50:5, col:14> col:14 th_urp 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
]>

*** Dumping AST Record Layout
         0 | class WritablePacket
         0 |   class Packet (base)
         0 |     class atomic_uint32_t _use_count
         0 |       uint32_t _val
         8 |     class Packet * _data_packet
        16 |     unsigned char * _head
        24 |     unsigned char * _data
        32 |     unsigned char * _tail
        40 |     unsigned char * _end
        48 |     struct Packet::AllAnno _aa
        48 |       union Packet::Anno cb
        48 |         char [48] c
        48 |         uint8_t [48] u8
        48 |         uint16_t [24] u16
        48 |         uint32_t [12] u32
        48 |         uint64_t [6] u64
        96 |       unsigned char * mac
       104 |       unsigned char * nh
       112 |       unsigned char * h
       120 |       enum Packet::PacketType pkt_type
       124 |       char [8] timestamp
       136 |       class Packet * next
       144 |       class Packet * prev
       152 |     Packet::buffer_destructor_type _destructor
       160 |     void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928dbceb0 prev 0x558928d95db0 <../dummy_inc/click/packet.hh:778:1, line:816:1> line:778:7 referenced class WritablePacket definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Packet'
|-CXXRecordDecl 0x558928dbcfe8 <col:1, col:7> col:7 implicit referenced class WritablePacket
|-AccessSpecDecl 0x558928dbd078 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x558928dbd120 <line:780:5, col:62> col:55 data 'unsigned char *() const'
| |-NoInlineAttr 0x558928dbd1c0 <col:20>
| `-OptimizeNoneAttr 0x558928dbd218 <col:30>
|-CXXMethodDecl 0x558928dbd268 <line:781:5, col:66> col:55 end_data 'unsigned char *() const'
| |-NoInlineAttr 0x558928dbd308 <col:20>
| `-OptimizeNoneAttr 0x558928dbd360 <col:30>
|-CXXMethodDecl 0x558928dbd3b0 <line:782:5, col:36> col:27 buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x558928dbd478 <line:783:5, col:40> col:27 end_buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x558928dbd540 <line:784:5, col:40> col:27 mac_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x558928dbd658 <line:785:5, col:40> col:25 ether_header 'click_ether *() const' inline
|-CXXMethodDecl 0x558928dbd720 <line:786:5, col:72> col:55 network_header 'unsigned char *() const'
| |-NoInlineAttr 0x558928dbd7c0 <col:20>
| `-OptimizeNoneAttr 0x558928dbd818 <col:30>
|-CXXMethodDecl 0x558928dbd888 <line:787:5, col:62> col:50 ip_header 'click_ip *() const'
| |-NoInlineAttr 0x558928dbd928 <col:20>
| `-OptimizeNoneAttr 0x558928dbd980 <col:30>
|-CXXMethodDecl 0x558928dbda28 <line:788:5, col:64> col:51 ip6_header 'click_ip6 *() const'
| |-NoInlineAttr 0x558928dbdac8 <col:20>
| `-OptimizeNoneAttr 0x558928dbdb20 <col:30>
|-CXXMethodDecl 0x558928dbdb70 <line:789:5, col:46> col:27 transport_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x558928dbdc88 <line:790:5, col:38> col:24 icmp_header 'click_icmp *() const' inline
|-CXXMethodDecl 0x558928dbdda8 <line:791:5, col:36> col:23 used tcp_header 'click_tcp *() const' inline
|-CXXMethodDecl 0x558928dbdec8 <line:792:5, col:36> col:23 udp_header 'click_udp *() const' inline
|-CXXMethodDecl 0x558928dbdf90 <line:795:5, col:73> col:27 buffer_data 'unsigned char *() const' inline
| `-DeprecatedAttr 0x558928dbe030 <col:62> "" ""
|-AccessSpecDecl 0x558928dbe0a0 <line:798:2, col:9> col:2 private
|-CXXConstructorDecl 0x558928dbe100 <line:800:5, col:31> col:12 WritablePacket 'void ()' inline
| |-CXXCtorInitializer 'Packet'
| | `-CXXConstructExpr 0x558928dbecf8 <col:12> 'Packet' 'void ()'
| `-CompoundStmt 0x558928dbef20 <col:29, col:31>
|-CXXMethodDecl 0x558928dbe1c8 <line:802:5, col:28> col:17 initialize 'void ()' inline
|-CXXConstructorDecl 0x558928dbe308 <line:804:5, col:35> col:5 WritablePacket 'void (const Packet &)'
| `-ParmVarDecl 0x558928dbe278 <col:20, col:34> col:34 x 'const Packet &'
|-CXXDestructorDecl 0x558928dbe400 <line:805:5, col:25> col:5 ~WritablePacket 'void () noexcept'
| `-CompoundStmt 0x558928dbef30 <col:23, col:25>
|-CXXMethodDecl 0x558928dbe5b8 <line:808:5, col:56> col:28 pool_allocate 'WritablePacket *(bool)' static
| `-ParmVarDecl 0x558928dbe4f0 <col:42, col:47> col:47 with_data 'bool'
|-CXXMethodDecl 0x558928dbe888 <line:809:5, line:810:24> line:809:28 pool_allocate 'WritablePacket *(uint32_t, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x558928dbe670 <col:42, col:51> col:51 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x558928dbe6e8 <col:61, col:70> col:70 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x558928dbe760 <line:810:7, col:16> col:16 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x558928dbea18 <line:811:5, col:42> col:17 recycle 'void (WritablePacket *)' static
| `-ParmVarDecl 0x558928dbe950 <col:25, col:41> col:41 p 'WritablePacket *'
|-FriendDecl 0x558928dbeb10 <line:814:5, col:18> col:12 'class Packet':'Packet'
`-CXXConstructorDecl 0x558928dbeb78 <line:778:7> col:7 implicit WritablePacket 'void (const WritablePacket &)' inline default noexcept-unevaluated 0x558928dbeb78
  `-ParmVarDecl 0x558928dbec88 <col:7> col:7 'const WritablePacket &'

Layout: <CGRecordLayout
  LLVMType:%class.WritablePacket = type { %class.Packet }
  NonVirtualBaseLLVMType:%class.WritablePacket = type { %class.Packet }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_ip
     0:0-3 |   unsigned int ip_hl
     0:4-7 |   unsigned int ip_v
         1 |   uint8_t ip_tos
         2 |   uint16_t ip_len
         4 |   uint16_t ip_id
         6 |   uint16_t ip_off
         8 |   uint8_t ip_ttl
         9 |   uint8_t ip_p
        10 |   uint16_t ip_sum
        12 |   struct in_addr ip_src
        12 |     in_addr_t s_addr
        16 |   struct in_addr ip_dst
        16 |     in_addr_t s_addr
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928aa0888 </usr/include/netinet/in.h:31:1, line:34:3> line:31:8 struct in_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x558928aa09a8 <col:1, col:8> col:8 implicit struct in_addr
|-FieldDecl 0x558928aa0a70 <line:33:5, col:15> col:15 referenced s_addr 'in_addr_t':'unsigned int'
|-CXXConstructorDecl 0x558928d8ccc0 <line:31:8> col:8 implicit used in_addr 'void () noexcept' inline default trivial
| `-CompoundStmt 0x558928d8ee48 <col:8>
|-CXXConstructorDecl 0x558928d8cdc8 <col:8> col:8 implicit constexpr in_addr 'void (const in_addr &)' inline default trivial noexcept-unevaluated 0x558928d8cdc8
| `-ParmVarDecl 0x558928d8ced8 <col:8> col:8 'const in_addr &'
|-CXXConstructorDecl 0x558928d8cf78 <col:8> col:8 implicit used constexpr in_addr 'void (in_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x558928d8d088 <col:8> col:8 used 'in_addr &&'
| |-CXXCtorInitializer Field 0x558928aa0a70 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x558928d8f060 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x558928d8f030 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x558928aa0a70
| |     `-CXXStaticCastExpr 0x558928d8f000 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
| |       `-DeclRefExpr 0x558928d8efd0 <col:8> 'in_addr' lvalue ParmVar 0x558928d8d088 '' 'in_addr &&'
| `-CompoundStmt 0x558928d8f0a8 <col:8>
`-CXXDestructorDecl 0x558928d8f2e0 <col:8> col:8 implicit referenced ~in_addr 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.in_addr = type { i32 }
  NonVirtualBaseLLVMType:%struct.in_addr = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x558928d863e0 <../dummy_inc/clicknet/ip.h:23:1, line:52:1> line:23:8 struct click_ip definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x558928d864f8 <col:1, col:8> col:8 implicit struct click_ip
|-FieldDecl 0x558928d865e0 <line:28:5, col:22> col:14 referenced ip_hl 'unsigned int'
| `-ConstantExpr 0x558928d865c0 <col:22> 'int' Int: 4
|   `-IntegerLiteral 0x558928d86588 <col:22> 'int' 4
|-FieldDecl 0x558928d86688 <line:29:5, col:21> col:14 referenced ip_v 'unsigned int'
| `-ConstantExpr 0x558928d86668 <col:21> 'int' Int: 4
|   `-IntegerLiteral 0x558928d86630 <col:21> 'int' 4
|-FieldDecl 0x558928d866e8 <line:33:5, col:13> col:13 referenced ip_tos 'uint8_t':'unsigned char'
|-FieldDecl 0x558928d86748 <line:40:5, col:14> col:14 referenced ip_len 'uint16_t':'unsigned short'
|-FieldDecl 0x558928d867a8 <line:41:5, col:14> col:14 referenced ip_id 'uint16_t':'unsigned short'
|-FieldDecl 0x558928d86808 <line:42:5, col:14> col:14 referenced ip_off 'uint16_t':'unsigned short'
|-FieldDecl 0x558928d86868 <line:47:5, col:13> col:13 referenced ip_ttl 'uint8_t':'unsigned char'
|-FieldDecl 0x558928d868c8 <line:48:5, col:13> col:13 referenced ip_p 'uint8_t':'unsigned char'
|-FieldDecl 0x558928d86928 <line:49:5, col:14> col:14 referenced ip_sum 'uint16_t':'unsigned short'
|-FieldDecl 0x558928d86998 <line:50:5, col:20> col:20 referenced ip_src 'struct in_addr':'in_addr'
`-FieldDecl 0x558928d86a08 <line:51:5, col:20> col:20 referenced ip_dst 'struct in_addr':'in_addr'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  NonVirtualBaseLLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
]>

*** Dumping AST Record Layout
         0 | struct char_array<8>
         0 |   char [8] x
           | [sizeof=8, dsize=8, align=1,
           |  nvsize=8, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558928e15cf0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 8
|-PackedAttr 0x558928f7b010 <line:167:18>
|-CXXRecordDecl 0x558928f7b0d0 prev 0x558928e15cf0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x558928f7b1e0 <line:166:5, col:13> col:10 x 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [8 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x558928e46760 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x558928f94018 <line:167:18>
|-CXXRecordDecl 0x558928f940d8 prev 0x558928e46760 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x558928f941e8 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.10 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.10 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Args::SlotT<unsigned int>
         0 |   struct Args::Slot (primary base)
         0 |     (Slot vtable pointer)
         8 |     struct Args::Slot * _next
        16 |   unsigned int * _ptr
        24 |   unsigned int _slot
           | [sizeof=32, dsize=28, align=8,
           |  nvsize=28, nvalign=8]

*** Dumping AST Record Layout
         0 | struct uninitialized_type (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55892892d738 <../dummy_inc/click/config.h:317:1, line:318:1> line:317:8 referenced struct uninitialized_type definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55892892d858 <col:1, col:8> col:8 implicit struct uninitialized_type
|-CXXConstructorDecl 0x558928cff7c0 <col:8> col:8 implicit referenced constexpr uninitialized_type 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x558928cff8a0 <col:8> col:8 implicit constexpr uninitialized_type 'void (const uninitialized_type &)' inline default trivial noexcept-unevaluated 0x558928cff8a0
| `-ParmVarDecl 0x558928cff988 <col:8> col:8 'const uninitialized_type &'
|-CXXConstructorDecl 0x558928cffa28 <col:8> col:8 implicit constexpr uninitialized_type 'void (uninitialized_type &&)' inline default trivial noexcept-unevaluated 0x558928cffa28
| `-ParmVarDecl 0x558928cffb38 <col:8> col:8 'uninitialized_type &&'
`-CXXDestructorDecl 0x558928d00b60 <col:8> col:8 implicit referenced ~uninitialized_type 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.uninitialized_type = type { i8 }
  NonVirtualBaseLLVMType:%struct.uninitialized_type = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>
