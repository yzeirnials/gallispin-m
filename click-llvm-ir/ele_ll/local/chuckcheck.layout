
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct ChuckCheck::Stat
         0 |   class Timestamp time
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int saddr
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct StringAccum::rep_t
         0 |   unsigned char * s
         8 |   int len
        12 |   int cap
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559d1f3602a8 prev 0x559d1f357a48 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559d1f3603a0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x559d1f360430 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x559d1f3604a8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x559d1f360568 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x559d1f360630 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x559d1f3607a8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x559d1f3606e0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x559d1f360850 <col:24>
| `-OptimizeNoneAttr 0x559d1f3608a8 <col:34>
|-CXXMethodDecl 0x559d1f3608f0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x559d1f360ba8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x559d1f3609a0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x559d1f360a18 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x559d1f360a98 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x559d1f360c60 <line:229:7, col:14> col:7 private
|-FieldDecl 0x559d1f360c98 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x559d1f360d00 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x559d1f360d88 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x559d1f3610a8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x559d1f360e40 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x559d1f360eb8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x559d1f360f30 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x559d1f360fb0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x559d1f3611c0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x559d1f368b38 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x559d1f368b38
| `-ParmVarDecl 0x559d1f368c48 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x559d1f368ce8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x559d1f368ce8
| `-ParmVarDecl 0x559d1f368df8 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x559d1f3948b8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559d1f3532c0 prev 0x559d1f353040 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x559d1f3533b8 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x559d1f353448 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x559d1f3534a8 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x559d1f353598 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x559d1f353698 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x559d1f353868 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x559d1f353718 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x559d1f353790 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x559d1f3539f8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x559d1f353930 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x559d1f353aa0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x559d1f353bd8 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x559d1f353b10 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x559d1f353d78 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x559d1f353cb8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x559d1f353f18 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x559d1f353e58 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x559d1f353fc0 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x559d1f3540c0 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x559d1f3541a0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f3540a0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x559d1f354080 <col:26> 'int' 1
| `-EnumConstantDecl 0x559d1f354150 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x559d1f3541b8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559d1f354130 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x559d1f354110 <col:44> 'int' 2
|-CXXMethodDecl 0x559d1f354300 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x559d1f3541e8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x559d1f354268 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x559d1f354458 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x559d1f3543c8 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x559d1f354698 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x559d1f354518 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x559d1f354590 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x559d1f354748 <col:20>
| `-OptimizeNoneAttr 0x559d1f3547a0 <col:30>
|-CXXMethodDecl 0x559d1f3548a8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x559d1f3547e0 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x559d1f354950 <col:20>
| `-OptimizeNoneAttr 0x559d1f3549a8 <col:30>
|-CXXMethodDecl 0x559d1f3549f8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x559d1f354ac0 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x559d1f354bd8 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x559d1f354c60 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x559d1f354ce8 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x559d1f354d70 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x559d1f354df8 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x559d1f354e88 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x559d1f354f48 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x559d1f354fd0 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x559d1f355058 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x559d1f3550e0 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x559d1f355168 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x559d1f3551f0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x559d1f355280 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x559d1f355340 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x559d1f3553d0 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x559d1f355520 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x559d1f355488 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x559d1f3556b0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x559d1f3555e0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x559d1f355960 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x559d1f355768 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x559d1f3557e8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x559d1f355868 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x559d1f355a18 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x559d1f355b20 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x559d1f355db0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f355b00 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x559d1f355ae0 <col:33> 'int' 0
| |-EnumConstantDecl 0x559d1f355bb0 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x559d1f355dc8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f355b90 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x559d1f355b70 <col:32> 'int' 20
| |-EnumConstantDecl 0x559d1f355c40 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x559d1f355de0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f355c20 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x559d1f355c00 <col:38> 'int' 90
| |-EnumConstantDecl 0x559d1f355cd0 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x559d1f355df8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f355cb0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x559d1f355c90 <col:35> 'int' 100
| `-EnumConstantDecl 0x559d1f355d60 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x559d1f355e10 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559d1f355d40 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x559d1f355d20 <col:32> 'int' 2000
|-CXXMethodDecl 0x559d1f355e50 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x559d1f356290 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x559d1f356100 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x559d1f356178 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x559d1f356360 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x559d1f3564e0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x559d1f356410 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x559d1f3566e8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x559d1f356598 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x559d1f356610 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x559d1f3567e8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x559d1f356888 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x559d1f356950 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x559d1f3569e0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x559d1f356c10 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f3569c0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x559d1f3569a0 <col:36> 'int' EnumConstant 0x559d1f356950 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x559d1f356a30 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x559d1f356a80 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x559d1f356ad0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x559d1f356b20 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x559d1f356b70 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x559d1f356bc0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x559d1f356cf8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x559d1f356c38 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x559d1f356dc0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x559d1f356e80 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x559d1f356f40 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x559d1f357000 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x559d1f357118 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x559d1f3571e0 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x559d1f357360 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x559d1f357290 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x559d1f357488 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x559d1f357688 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x559d1f357538 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x559d1f3575b8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x559d1f364fd8 <col:54, line:127:5>
|   |-ParenExpr 0x559d1f364e88 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x559d1f364e58 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x559d1f364b48 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x559d1f364b20 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x559d1f364b08 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x559d1f364af0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x559d1f364ac0 <col:31> 'Router *' lvalue ->_router 0x559d1f3629a0
|   |   |         `-CXXThisExpr 0x559d1f364ab0 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x559d1f364ba8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559d1f364b88 <col:48> 'int' 0
|   |   `-CallExpr 0x559d1f364db8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x559d1f364da0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559d1f364d80 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559d1ee8d940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559d1f364df8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f364c18 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x559d1f364e10 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f364c38 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x559d1f364e28 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559d1f364c70 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x559d1f364e40 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559d1f364d68 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559d1f364d50 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559d1f364d08 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x559d1f364f20 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x559d1f364eb8 <col:9> 'Router *' lvalue ->_router 0x559d1f3629a0
|   | | `-CXXThisExpr 0x559d1f364ea8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x559d1f364f08 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x559d1f364ee8 <col:19> 'Router *' lvalue ParmVar 0x559d1f357538 'r' 'Router *'
|   `-BinaryOperator 0x559d1f364fb8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x559d1f364f50 <col:9> 'int' lvalue ->_eindex 0x559d1f362a08
|     | `-CXXThisExpr 0x559d1f364f40 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x559d1f364fa0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x559d1f364f80 <col:19> 'int' lvalue ParmVar 0x559d1f3575b8 'eindex' 'int'
|-CXXMethodDecl 0x559d1f357810 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x559d1f357748 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x559d1f3578e0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x559d1f3579a8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x559d1f357a48 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x559d1f357c98 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x559d1f357b10 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x559d1f357b90 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x559d1f357d48 <col:20>
| `-OptimizeNoneAttr 0x559d1f357da0 <col:30>
|-CXXMethodDecl 0x559d1f357ea8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x559d1f357de0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x559d1f357f50 <col:20>
| `-OptimizeNoneAttr 0x559d1f357fa8 <col:30>
|-CXXMethodDecl 0x559d1f358078 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x559d1f357fe8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x559d1f358120 <col:20>
| `-OptimizeNoneAttr 0x559d1f358178 <col:30>
|-CXXMethodDecl 0x559d1f358308 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x559d1f3581b0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x559d1f358230 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x559d1f358498 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x559d1f3583d0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x559d1f3585e8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x559d1f358558 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x559d1f358738 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x559d1f3586a8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x559d1f358888 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x559d1f3587f8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x559d1f358b48 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x559d1f358940 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x559d1f3589c0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x559d1f358a68 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x559d1f358c20 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x559d1f358ce0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x559d1f358fb0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x559d1f358e60 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x559d1f358ed8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x559d1f3590d8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x559d1f3592b0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x559d1f359190 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x559d1f359210 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x559d1f359498 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x559d1f359378 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x559d1f3593f8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x559d1f359808 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x559d1f359558 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x559d1f3595d0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x559d1f359650 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x559d1f3645c0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x559d1f3645a0 <col:106> 'int' 0
| `-ParmVarDecl 0x559d1f3596c8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x559d1f3645f8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x559d1f3645d8 <col:126> 'int' 0
|-CXXMethodDecl 0x559d1f359ba8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x559d1f3598d8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x559d1f359970 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x559d1f3599f0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x559d1f359a68 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x559d1f364630 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x559d1f364610 <col:114> 'int' 0
|-CXXMethodDecl 0x559d1f359f38 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x559d1f359c80 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x559d1f359cf8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x559d1f359d78 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x559d1f364648 <col:96> 'int' 0
| `-ParmVarDecl 0x559d1f359df0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x559d1f364688 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x559d1f364668 <col:116> 'int' 0
|-CXXMethodDecl 0x559d1f35a2b8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x559d1f35a008 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x559d1f35a080 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x559d1f35a100 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x559d1f3646c0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x559d1f3646a0 <col:109> 'int' 0
| `-ParmVarDecl 0x559d1f35a178 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x559d1f3646f8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x559d1f3646d8 <col:129> 'int' 0
|-CXXMethodDecl 0x559d1f35a638 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x559d1f35a388 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x559d1f35a400 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x559d1f35a480 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x559d1f35a4f8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x559d1f364730 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x559d1f364710 <col:117> 'int' 0
|-CXXMethodDecl 0x559d1f35a9c8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x559d1f35a710 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559d1f35a788 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x559d1f35a808 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x559d1f364748 <col:99> 'int' 0
| `-ParmVarDecl 0x559d1f35a880 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x559d1f364788 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x559d1f364768 <col:119> 'int' 0
|-CXXMethodDecl 0x559d1f35ade8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x559d1f35aa98 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x559d1f35ab18 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x559d1f35ab90 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x559d1f35ac10 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x559d1f3647c0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x559d1f3647a0 <col:108> 'int' 0
| `-ParmVarDecl 0x559d1f35ac90 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x559d1f3647f8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x559d1f3647d8 <col:141> 'int' 0
|-CXXMethodDecl 0x559d1f35b208 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x559d1f35aec0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x559d1f35af40 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x559d1f35afb8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x559d1f35b038 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x559d1f35b0b8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x559d1f364810 <col:121> 'int' 0
|-CXXMethodDecl 0x559d1f35b638 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x559d1f35b2e8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x559d1f35b368 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x559d1f35b3e0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x559d1f35b460 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x559d1f364830 <col:98> 'int' 0
| `-ParmVarDecl 0x559d1f35b4e0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x559d1f364850 <col:123> 'int' 0
|-CXXMethodDecl 0x559d1f35b900 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x559d1f35b710 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x559d1f35b790 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x559d1f35b810 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x559d1f364870 <col:80> 'int' 0
|-EnumDecl 0x559d1f35b9b8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x559d1f35bac0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x559d1f35bd50 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f35baa0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x559d1f35ba80 <col:42> 'int' 1
| |-EnumConstantDecl 0x559d1f35bb50 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x559d1f35bd68 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f35bb30 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x559d1f35bb10 <col:40> 'int' 2
| |-EnumConstantDecl 0x559d1f35bbe0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x559d1f35bd80 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f35bbc0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x559d1f35bba0 <col:44> 'int' 4
| |-EnumConstantDecl 0x559d1f35bc70 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x559d1f35bd98 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f35bc50 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x559d1f35bc30 <col:36> 'int' 7
| `-EnumConstantDecl 0x559d1f35bd00 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x559d1f35bdb0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559d1f35bce0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x559d1f35bcc0 <col:34> 'int' 6
|-CXXMethodDecl 0x559d1f35c068 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x559d1f35bdd8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x559d1f35be78 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x559d1f35bef8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x559d1f35bf70 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x559d1f364928 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x559d1f364910 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x559d1f3648f8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x559d1f3648d8 <col:98, col:105> 'String' (CXXTemporary 0x559d1f3648d8)
|           `-CXXTemporaryObjectExpr 0x559d1f3648a0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x559d1f35c308 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x559d1f35c138 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x559d1f35c1b0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x559d1f35c228 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x559d1f3649d8 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x559d1f3649c0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x559d1f3649a8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x559d1f364988 <col:94, col:101> 'String' (CXXTemporary 0x559d1f364988)
| |         `-CXXTemporaryObjectExpr 0x559d1f364950 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x559d1f3651c0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x559d1f365138 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x559d1f365108 <col:9> '<bound member function type>' ->add_task_handlers 0x559d1f35c068
|     | `-CXXThisExpr 0x559d1f3650f8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x559d1f365178 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x559d1f365078 <col:27> 'Task *' lvalue ParmVar 0x559d1f35c138 'task' 'Task *'
|     |-ImplicitCastExpr 0x559d1f365190 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x559d1f365098 <col:33> 'NotifierSignal *' lvalue ParmVar 0x559d1f35c1b0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x559d1f3651a8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x559d1f3650b8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x559d1f35bd00 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x559d1f3650d8 <col:62> 'const String' lvalue ParmVar 0x559d1f35c228 'prefix' 'const String &'
|-CXXMethodDecl 0x559d1f35c518 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x559d1f35c3d0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x559d1f35c448 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x559d1f364a88 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x559d1f364a70 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x559d1f364a58 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x559d1f364a38 <col:70, col:77> 'String' (CXXTemporary 0x559d1f364a38)
| |         `-CXXTemporaryObjectExpr 0x559d1f364a00 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x559d1f365398 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x559d1f365310 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x559d1f3652e0 <col:9> '<bound member function type>' ->add_task_handlers 0x559d1f35c068
|     | `-CXXThisExpr 0x559d1f3652d0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x559d1f365350 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x559d1f365250 <col:27> 'Task *' lvalue ParmVar 0x559d1f35c3d0 'task' 'Task *'
|     |-ImplicitCastExpr 0x559d1f365368 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x559d1f365270 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x559d1f365380 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x559d1f365290 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x559d1f35bd00 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x559d1f3652b0 <col:57> 'const String' lvalue ParmVar 0x559d1f35c448 'prefix' 'const String &'
|-CXXMethodDecl 0x559d1f35c7f8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x559d1f35c5e0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559d1f35c660 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559d1f35c6d8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x559d1f35caa8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x559d1f35c8c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559d1f35c948 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559d1f35c9c8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x559d1f35cd98 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x559d1f35cb78 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559d1f35cbf8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559d1f35cc70 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x559d1f35d048 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x559d1f35ce68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559d1f35cee8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559d1f35cf68 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x559d1f35d2f8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x559d1f35d118 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559d1f35d198 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559d1f35d218 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x559d1f35d5a8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x559d1f35d3c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559d1f35d448 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559d1f35d4c0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x559d1f35d858 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x559d1f35d678 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559d1f35d6f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559d1f35d778 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x559d1f35db68 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x559d1f35d980 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559d1f35da00 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559d1f35da80 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x559d1f35de48 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x559d1f35dc38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559d1f35dcb8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559d1f35dd60 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x559d1f35e128 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x559d1f35df18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559d1f35df98 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559d1f35e040 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x559d1f35e390 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x559d1f35e1f8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x559d1f35e278 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x559d1f35e2f0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x559d1f35e638 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x559d1f35e460 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x559d1f35e4e0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x559d1f35e558 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x559d1f35e8e8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x559d1f35e708 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559d1f35e788 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559d1f35e808 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x559d1f35eb98 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x559d1f35e9b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559d1f35ea38 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559d1f35eab0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x559d1f35ee48 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x559d1f35ec68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559d1f35ece8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559d1f35ed60 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x559d1f35f118 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x559d1f35ef18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559d1f35ef98 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x559d1f35f038 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x559d1f35f448 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x559d1f35f1e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x559d1f35f268 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x559d1f35f2e0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x559d1f35f358 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x559d1f364aa0 <col:93> 'bool' false
|-CXXMethodDecl 0x559d1f35f630 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x559d1f35f518 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x559d1f35f598 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x559d1f35f808 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x559d1f35f6f0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x559d1f35f770 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x559d1f35fae8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x559d1f35f8c8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x559d1f35f940 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x559d1f35f9c0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x559d1f35fa38 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x559d1f35fdd8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x559d1f35fbb8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x559d1f35fc30 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x559d1f35fcb0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x559d1f35fd28 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x559d1f360010 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x559d1f35feb0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x559d1f35ff30 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x559d1f3601f8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x559d1f3600d8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x559d1f360158 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x559d1f3602a8 prev 0x559d1f357a48 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x559d1f3603a0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x559d1f360430 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x559d1f3604a8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x559d1f360568 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x559d1f360630 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x559d1f3607a8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x559d1f3606e0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x559d1f360850 <col:24>
| | `-OptimizeNoneAttr 0x559d1f3608a8 <col:34>
| |-CXXMethodDecl 0x559d1f3608f0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x559d1f360ba8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x559d1f3609a0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x559d1f360a18 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x559d1f360a98 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x559d1f360c60 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x559d1f360c98 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x559d1f360d00 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x559d1f360d88 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x559d1f3610a8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x559d1f360e40 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x559d1f360eb8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x559d1f360f30 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x559d1f360fb0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x559d1f3611c0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x559d1f368b38 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x559d1f368b38
| | `-ParmVarDecl 0x559d1f368c48 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x559d1f368ce8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x559d1f368ce8
| | `-ParmVarDecl 0x559d1f368df8 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x559d1f3948b8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x559d1f361238 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x559d1f3612d8 <col:38> "" ""
|-CXXMethodDecl 0x559d1f361368 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x559d1f361408 <col:44> "" ""
|-AccessSpecDecl 0x559d1f361478 <line:260:3, col:10> col:3 private
|-EnumDecl 0x559d1f3614a0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x559d1f3615a0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x559d1f3615f0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559d1f361580 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x559d1f361560 <col:27> 'int' 4
|-FieldDecl 0x559d1f3616a8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x559d1f361858 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x559d1f361910 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x559d1f3629a0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x559d1f362a08 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x559d1f362b58 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x559d1f362a98 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x559d1f362d08 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x559d1f362c18 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x559d1f362ee8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x559d1f362dc8 <col:20> col:23 'int'
| `-ParmVarDecl 0x559d1f362e48 <col:25> col:28 'int'
|-CXXMethodDecl 0x559d1f363190 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x559d1f362fb0 <col:23> col:26 'int'
| |-ParmVarDecl 0x559d1f363030 <col:28> col:31 'int'
| `-ParmVarDecl 0x559d1f3630a8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x559d1f363248 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x559d1f363310 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x559d1f363360 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x559d1f3633b0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x559d1f363590 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x559d1f363440 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x559d1f3634b8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x559d1f363838 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x559d1f363658 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x559d1f3636d8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x559d1f363750 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x559d1f363a58 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x559d1f363908 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x559d1f363988 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x559d1f363d90 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x559d1f363b18 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x559d1f363b98 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x559d1f363c10 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x559d1f363c90 <col:57> col:60 'int'
|-CXXMethodDecl 0x559d1f363f78 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x559d1f363e60 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x559d1f363ee0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x559d1f3640c8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x559d1f364038 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x559d1f364448 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x559d1f364188 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x559d1f364208 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x559d1f364280 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x559d1f364300 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x559d1f364560 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ChuckCheck
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   struct ChuckCheck::Stat [4096] _info
     65648 |   unsigned int _head
     65652 |   unsigned int _tail
     65656 |   unsigned int _head_id
           | [sizeof=65664, dsize=65660, align=8,
           |  nvsize=65660, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559d1f2ebbf0 prev 0x559d1f2e2a30 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559d1f2ebce8 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x559d1f2ebd88 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x559d1f2f2b50 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x559d1f2f2f38 <col:11>
|-CXXConstructorDecl 0x559d1f2f2c30 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x559d1f2f2d18 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x559d1f2f3680 <col:11>
|-CXXConstructorDecl 0x559d1f2f2db8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x559d1f2f2ec8 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x559d1f2f4ed8 <col:11>
|-CXXDestructorDecl 0x559d1f2f41e8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x559d1effad98 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x559d1effaea8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x559d1effb770 <col:11>
|   `-ReturnStmt 0x559d1effb760 <col:11>
|     `-UnaryOperator 0x559d1effb748 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x559d1effb738 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x559d1effaf18 <col:11> col:11 implicit constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&)' inline default trivial noexcept-unevaluated 0x559d1effaf18
  `-ParmVarDecl 0x559d1effb028 <col:11> col:11 'Timestamp::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559d1f2e1be8 prev 0x559d1f2e18f8 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559d1f2e1ce0 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x559d1f2e1d70 <col:19, col:25> col:19 public
|-TypedefDecl 0x559d1f2e1da8 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x559d1ef46f70 'int32_t' sugar
|   |-Typedef 0x559d1ee5c328 'int32_t'
|   `-TypedefType 0x559d1ee35510 '__int32_t' sugar
|     |-Typedef 0x559d1ee35128 '__int32_t'
|     `-BuiltinType 0x559d1edf3580 'int'
|-TypedefDecl 0x559d1f2e1e10 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x559d1ef47130 'int64_t' sugar
|   |-Typedef 0x559d1ee5c390 'int64_t'
|   `-TypedefType 0x559d1ee35630 '__int64_t' sugar
|     |-Typedef 0x559d1ee35208 '__int64_t'
|     `-BuiltinType 0x559d1edf35a0 'long'
|-EnumDecl 0x559d1f2e1e68 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x559d1f2e1fe0 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x559d1f2e1fc0 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x559d1f2e1f98 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x559d1f2e1f80 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x559d1f2e1f50 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x559d1f2e20d8 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x559d1f2e20b8 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x559d1f2e2090 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x559d1f2e2078 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x559d1f2e2050 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x559d1f2e2030 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x559d1f2e2128 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x559d1f2e2230 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x559d1f2e2780 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f2e2210 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x559d1f2e21f0 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x559d1f2e22c0 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x559d1f2e2798 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f2e22a0 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x559d1f2e2280 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x559d1f2e2350 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x559d1f2e27b0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f2e2330 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x559d1f2e2310 <col:25> 'int' 1000
| |-EnumConstantDecl 0x559d1f2e23e0 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x559d1f2e27c8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f2e23c0 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x559d1f2e23a0 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x559d1f2e2470 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x559d1f2e27e0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f2e2450 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x559d1f2e2430 <col:25> 'int' 1000
| |-EnumConstantDecl 0x559d1f2e2500 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x559d1f2e27f8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f2e24e0 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x559d1f2e24c0 <col:24> 'int' 1000
| |-EnumConstantDecl 0x559d1f2e2590 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x559d1f2e2810 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f2e2570 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x559d1f2e2550 <col:26> 'int' EnumConstant 0x559d1f2e2230 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x559d1f2e2660 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x559d1f2e2828 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f2e2640 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x559d1f2e2620 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x559d1f2e25e0 <col:27> 'int' EnumConstant 0x559d1f2e2590 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x559d1f2e2600 <col:44> 'int' EnumConstant 0x559d1f2e2500 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x559d1f2e2730 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x559d1f2e2840 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559d1f2e2710 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x559d1f2e26f0 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x559d1f2e26b0 <col:27> 'int' EnumConstant 0x559d1f2e2590 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x559d1f2e26d0 <col:44> 'int' EnumConstant 0x559d1f2e23e0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x559d1f2e2858 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x559d1f2e2960 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x559d1f2e29b0 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559d1f2e2940 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x559d1f2e2920 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e2590 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x559d1f2e29d8 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x559d1ef46ba0 'uninitialized_type'
|   `-CXXRecord 0x559d1ef46b08 'uninitialized_type'
|-CXXRecordDecl 0x559d1f2e2a30 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x559d1f2e2b40 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x559d1f2ecd38 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x559d1f2f2f48 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x559d1f2f3068 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x559d1f2f3020 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x559d1f2f2fb0 <col:9> '<bound member function type>' ->assign 0x559d1f2e7788
|     | `-CXXThisExpr 0x559d1f2f2fa0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x559d1f2f2fe0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x559d1f2f3050 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x559d1f2f3000 <col:19> 'int' 0
|-CXXConstructorDecl 0x559d1f2e2d88 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x559d1f2e2c00 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x559d1f2e2c78 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x559d1f2ee880 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x559d1f2ee860 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x559d1f2ecd38 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x559d1f2f3080 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x559d1f2f31d0 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x559d1f2f3158 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x559d1f2f30e8 <col:9> '<bound member function type>' ->assign 0x559d1f2e7788
|     | `-CXXThisExpr 0x559d1f2f30d8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x559d1f2f31a0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x559d1f2f3188 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x559d1f2f3118 <col:16> 'long' lvalue ParmVar 0x559d1f2e2c00 'sec' 'long'
|     `-ImplicitCastExpr 0x559d1f2f31b8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x559d1f2f3138 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x559d1f2e2c78 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x559d1f2e2fe8 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x559d1f2e2e58 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x559d1f2e2ed0 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x559d1f2ee8b8 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x559d1f2ee898 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x559d1f2ecd38 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x559d1f2f31e8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x559d1f2f3320 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x559d1f2f32c0 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x559d1f2f3250 <col:9> '<bound member function type>' ->assign 0x559d1f2e7788
|     | `-CXXThisExpr 0x559d1f2f3240 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x559d1f2f32f0 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x559d1f2f3280 <col:16> 'int' lvalue ParmVar 0x559d1f2e2e58 'sec' 'int'
|     `-ImplicitCastExpr 0x559d1f2f3308 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x559d1f2f32a0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x559d1f2e2ed0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x559d1f2e3248 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x559d1f2e30b8 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x559d1f2e3130 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x559d1f2ee8f0 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x559d1f2ee8d0 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x559d1f2ecd38 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x559d1f2f3338 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x559d1f2f3488 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x559d1f2f3410 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x559d1f2f33a0 <col:9> '<bound member function type>' ->assign 0x559d1f2e7788
|     | `-CXXThisExpr 0x559d1f2f3390 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x559d1f2f3458 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x559d1f2f3440 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x559d1f2f33d0 <col:16> 'unsigned long' lvalue ParmVar 0x559d1f2e30b8 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x559d1f2f3470 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x559d1f2f33f0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x559d1f2e3130 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x559d1f2e43e0 <line:199:5, line:201:5> line:199:21 Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x559d1f2e3318 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x559d1f2e3390 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x559d1f2ee928 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x559d1f2ee908 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x559d1f2ecd38 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x559d1f2f34a0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x559d1f2f35f0 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x559d1f2f3578 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x559d1f2f3508 <col:9> '<bound member function type>' ->assign 0x559d1f2e7788
|     | `-CXXThisExpr 0x559d1f2f34f8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x559d1f2f35c0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x559d1f2f35a8 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x559d1f2f3538 <col:16> 'unsigned int' lvalue ParmVar 0x559d1f2e3318 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x559d1f2f35d8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x559d1f2f3558 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x559d1f2e3390 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x559d1f2e4540 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x559d1f2e44b0 <col:31> col:37 'double'
|-CXXConstructorDecl 0x559d1f2e46d8 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x559d1f2e4618 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x559d1f2e4908 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x559d1f2e4810 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x559d1f2e4ab8 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x559d1f2e49f8 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x559d1f2ecd38 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x559d1f2f3690 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x559d1f2f3608 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x559d1f2e49f8 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x559d1f2f36f0 <col:19, line:214:5>
|-CXXConstructorDecl 0x559d1f2e4c88 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x559d1f2e4bc8 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x559d1f2ecd38 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x559d1f2f3700 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x559d1f2f37b0 <col:53, line:219:5>
|   `-CStyleCastExpr 0x559d1f2f3788 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x559d1f2f3758 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x559d1f2e4bc8 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x559d1f2e4e78 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x559d1f2e4df0 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x559d1f2e1990 'Timestamp'
|   | `-CXXRecord 0x559d1f2e1be8 'Timestamp'
|   `-ParenType 0x559d1f2e4d90 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x559d1f2e4d60 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x559d1f2e1f30 'Timestamp::seconds_type' sugar
|         |-Typedef 0x559d1f2e1da8 'seconds_type'
|         `-TypedefType 0x559d1ef46f70 'int32_t' sugar
|           |-Typedef 0x559d1ee5c328 'int32_t'
|           `-TypedefType 0x559d1ee35510 '__int32_t' sugar
|             |-Typedef 0x559d1ee35128 '__int32_t'
|             `-BuiltinType 0x559d1edf3580 'int'
|-CXXConversionDecl 0x559d1f2e4fb8 <line:222:5, col:45> col:12 operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x559d1f2e5088 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x559d1f2f38b8 <col:37, line:231:5>
|   `-ReturnStmt 0x559d1f2f38a8 <line:227:9, col:23>
|     `-BinaryOperator 0x559d1f2f3888 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x559d1f2f3858 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x559d1f2f3808 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x559d1f2ebd88
|       |   `-MemberExpr 0x559d1f2f37d8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x559d1f2ecd38
|       |     `-CXXThisExpr 0x559d1f2f37c8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x559d1f2f3870 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x559d1f2f3838 <col:23> 'int' 0
|-CXXMethodDecl 0x559d1f2e5148 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x559d1f2e5208 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x559d1f2e52c8 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x559d1f2e5388 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x559d1f2e5448 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x559d1f2e55b8 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x559d1f2e54f8 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x559d1f2e5700 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x559d1f2e5670 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559d1f2e57c8 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x559d1f2e5868 <col:54> "" ""
|-CXXMethodDecl 0x559d1f2e58f8 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x559d1f2e5998 <col:54> "" ""
|-CXXMethodDecl 0x559d1f2e5a28 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x559d1f2e5ac8 <col:54> "" ""
|-CXXMethodDecl 0x559d1f2e5bc8 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x559d1f2e5c98 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x559d1f2e5dc8 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x559d1f2e5ec0 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x559d1f2e5ff8 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x559d1f2f3ad0 <col:39, line:271:5>
|   `-ReturnStmt 0x559d1f2f3ac0 <line:267:9, col:61>
|     `-CallExpr 0x559d1f2f3a60 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x559d1f2f3a48 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x559d1f2f38d0 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x559d1f2ed068 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x559d1f2f3a90 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x559d1f2f3930 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x559d1f2ebd88
|       |   `-MemberExpr 0x559d1f2f3900 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x559d1f2ecd38
|       |     `-CXXThisExpr 0x559d1f2f38f0 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x559d1f2f3aa8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x559d1f2f39d0 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x559d1f2f39a0 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x559d1f2f3960 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e2590 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x559d1f2f39b8 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x559d1f2f3980 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e2500 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x559d1f2e60b8 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x559d1f2f3c90 <col:39, line:279:5>
|   `-ReturnStmt 0x559d1f2f3c80 <line:275:9, col:61>
|     `-CallExpr 0x559d1f2f3c20 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x559d1f2f3c08 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x559d1f2f3ae8 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x559d1f2ed068 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x559d1f2f3c50 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x559d1f2f3b48 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x559d1f2ebd88
|       |   `-MemberExpr 0x559d1f2f3b18 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x559d1f2ecd38
|       |     `-CXXThisExpr 0x559d1f2f3b08 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x559d1f2f3c68 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x559d1f2f3be8 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x559d1f2f3bb8 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x559d1f2f3b78 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e2590 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x559d1f2f3bd0 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x559d1f2f3b98 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e23e0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x559d1f2e6178 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x559d1f2f3e28 <col:39, line:287:5>
|   `-ReturnStmt 0x559d1f2f3e18 <line:283:9, col:53>
|     `-BinaryOperator 0x559d1f2f3df8 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x559d1f2f3dc8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x559d1f2f3ce8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x559d1f2ebd88
|       |   `-MemberExpr 0x559d1f2f3cb8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x559d1f2ecd38
|       |     `-CXXThisExpr 0x559d1f2f3ca8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x559d1f2f3de0 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x559d1f2f3da8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x559d1f2f3d88 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x559d1f2f3d58 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x559d1f2f3d18 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e2230 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x559d1f2f3d70 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x559d1f2f3d38 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e2590 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x559d1f2e6268 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x559d1f2f50c0 <col:40, line:293:5>
|   |-DeclStmt 0x559d1f2f3f70 <line:291:9, col:48>
|   | `-VarDecl 0x559d1f2f3e50 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x559d1f2f3f50 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x559d1f2f3ef8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x559d1f2f3ec8 <col:22> '<bound member function type>' ->subsec 0x559d1f2e5208
|   |     |   `-CXXThisExpr 0x559d1f2f3eb8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x559d1f2f3f38 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x559d1f2f3f18 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e2660 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x559d1f2f50b0 <line:292:9, col:70>
|     `-ExprWithCleanups 0x559d1f2f5098 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x559d1f2f5068 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x559d1f2f5050 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x559d1f2f5030 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x559d1f2f5000 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x559d1f2f4d98 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x559d1f2f4d80 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x559d1f2f3f88 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x559d1f2f3e50 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x559d1f2f4fa0 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x559d1f2f4f88 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x559d1f2f4f58 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x559d1f2f4db0 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x559d1f2f4d20 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x559d1f2f4d08 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x559d1f2f4cb8 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x559d1f2e1b38 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x559d1f2f4c58 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x559d1f2f3fb8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x559d1f2f3fa8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x559d1f2f4ca0 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x559d1f2f4c88 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x559d1f2f4478 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x559d1f2f3fe0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x559d1f2f4070 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x559d1f2f4040 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x559d1f2f4000 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e2660 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x559d1f2f4058 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x559d1f2f4020 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x559d1f2f3e50 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x559d1f2f4fd0 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x559d1f2f4d68 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x559d1f2f4d58 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x559d1f2e6328 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x559d1f2f5618 <col:40, line:302:5>
|   |-DeclStmt 0x559d1f2f5210 <line:297:9, col:48>
|   | `-VarDecl 0x559d1f2f50f0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x559d1f2f51f0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x559d1f2f5198 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x559d1f2f5168 <col:22> '<bound member function type>' ->subsec 0x559d1f2e5208
|   |     |   `-CXXThisExpr 0x559d1f2f5158 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x559d1f2f51d8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x559d1f2f51b8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e2730 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x559d1f2f5608 <line:298:9, col:70>
|     `-ExprWithCleanups 0x559d1f2f55f0 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x559d1f2f55c0 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x559d1f2f55a8 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x559d1f2f5588 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x559d1f2f5558 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x559d1f2f5480 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x559d1f2f5468 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x559d1f2f5228 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x559d1f2f50f0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x559d1f2f54f8 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x559d1f2f54e0 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x559d1f2f54b0 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x559d1f2f5498 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x559d1f2f5408 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x559d1f2f53f0 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x559d1f2f53d0 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x559d1f2e1b38 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x559d1f2f5370 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x559d1f2f5258 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x559d1f2f5248 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x559d1f2f53b8 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x559d1f2f53a0 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x559d1f2f5330 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x559d1f2f5280 <col:39> 'int' 0
|               |               `-BinaryOperator 0x559d1f2f5310 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x559d1f2f52e0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x559d1f2f52a0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e2730 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x559d1f2f52f8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x559d1f2f52c0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x559d1f2f50f0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x559d1f2f5528 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x559d1f2f5450 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x559d1f2f5440 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x559d1f2e63e8 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x559d1f2f56a0 <col:40, line:306:5>
|   `-ReturnStmt 0x559d1f2f5690 <line:305:9, col:17>
|     `-CXXConstructExpr 0x559d1f2f5660 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x559d1f2f5648 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x559d1f2f5638 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x559d1f2e6588 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x559d1f2e6498 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x559d1f2e6758 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x559d1f2e6660 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x559d1f2e6848 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x559d1f2e69b8 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x559d1f2e68f8 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x559d1f2f57e8 <col:56, line:320:5>
|   `-ReturnStmt 0x559d1f2f57d8 <line:319:9, col:32>
|     `-ExprWithCleanups 0x559d1f2f57c0 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x559d1f2f5790 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x559d1f2f5778 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x559d1f2f5738 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x559d1f2f5708 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x559d1f2f56c8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x559d1f2e68f8 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x559d1f2f5720 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x559d1f2f56e8 <col:31> 'int' 0
|-CXXMethodDecl 0x559d1f2e6bf8 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x559d1f2e6a70 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x559d1f2e6ae8 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559d1f2f59b8 <col:72, line:326:5>
|   `-ReturnStmt 0x559d1f2f59a8 <line:325:9, col:51>
|     `-ExprWithCleanups 0x559d1f2f5990 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x559d1f2f5960 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x559d1f2f5948 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x559d1f2f5908 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x559d1f2f58f0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x559d1f2f5810 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x559d1f2e6a70 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x559d1f2f58b0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x559d1f2f5898 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x559d1f2f5830 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x559d1f2eb4e0 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x559d1f2f58d8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x559d1f2f5850 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x559d1f2e6ae8 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559d1f2e6da8 <line:328:5, line:337:5> line:328:29 make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x559d1f2e6cb8 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x559d1f2f6080 <col:56, line:337:5>
|   |-DeclStmt 0x559d1f2f5cb8 <line:329:9, col:51>
|   | `-VarDecl 0x559d1f2f59e0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x559d1f2f5ca0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x559d1f2f5c70 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x559d1f2f5c58 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x559d1f2f5c40 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x559d1f2f5c10 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x559d1f2f5bf8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x559d1f2f5be0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x559d1f2f5ad0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x559d1f2f5e70 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x559d1f2f5d20 <col:9, col:14> 'int64_t':'long' lvalue .x 0x559d1f2ebd88
|   | | `-MemberExpr 0x559d1f2f5cf0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x559d1f2ecd38
|   | |   `-DeclRefExpr 0x559d1f2f5cd0 <col:9> 'Timestamp' lvalue Var 0x559d1f2f59e0 't' 'Timestamp'
|   | `-BinaryOperator 0x559d1f2f5e50 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x559d1f2f5e20 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559d1f2f5d50 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x559d1f2e6cb8 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x559d1f2f5e38 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x559d1f2f5e00 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x559d1f2f5de0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x559d1f2f5db0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x559d1f2f5d70 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e2590 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x559d1f2f5dc8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x559d1f2f5d90 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e2500 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x559d1f2f6068 <line:336:9, col:16>
|     `-CXXConstructExpr 0x559d1f2f6038 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x559d1f2f6020 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x559d1f2f6000 <col:16> 'Timestamp' lvalue Var 0x559d1f2f59e0 't' 'Timestamp'
|-CXXMethodDecl 0x559d1f2e6f70 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x559d1f2e6e60 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x559d1f2e6ed8 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559d1f2f6238 <col:72, line:343:5>
|   `-ReturnStmt 0x559d1f2f6228 <line:342:9, col:51>
|     `-ExprWithCleanups 0x559d1f2f6210 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x559d1f2f61e0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x559d1f2f61c8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x559d1f2f6188 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x559d1f2f6170 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x559d1f2f60b8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x559d1f2e6e60 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x559d1f2f6130 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x559d1f2f6118 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x559d1f2f60d8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x559d1f2eb628 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x559d1f2f6158 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x559d1f2f60f8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x559d1f2e6ed8 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559d1f2e70c0 <line:345:5, line:354:5> line:345:29 make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x559d1f2e7030 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x559d1f2f6680 <col:56, line:354:5>
|   |-DeclStmt 0x559d1f2f6428 <line:346:9, col:51>
|   | `-VarDecl 0x559d1f2f6260 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x559d1f2f6410 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x559d1f2f63e0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x559d1f2f63c8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x559d1f2f63b0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x559d1f2f6380 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x559d1f2f6368 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x559d1f2f6350 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x559d1f2f6320 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x559d1f2f65e0 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x559d1f2f6490 <col:9, col:14> 'int64_t':'long' lvalue .x 0x559d1f2ebd88
|   | | `-MemberExpr 0x559d1f2f6460 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x559d1f2ecd38
|   | |   `-DeclRefExpr 0x559d1f2f6440 <col:9> 'Timestamp' lvalue Var 0x559d1f2f6260 't' 'Timestamp'
|   | `-BinaryOperator 0x559d1f2f65c0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x559d1f2f6590 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559d1f2f64c0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x559d1f2e7030 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x559d1f2f65a8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x559d1f2f6570 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x559d1f2f6550 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x559d1f2f6520 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x559d1f2f64e0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e2590 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x559d1f2f6538 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x559d1f2f6500 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e23e0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x559d1f2f6668 <line:353:9, col:16>
|     `-CXXConstructExpr 0x559d1f2f6638 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x559d1f2f6620 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x559d1f2f6600 <col:16> 'Timestamp' lvalue Var 0x559d1f2f6260 't' 'Timestamp'
|-CXXMethodDecl 0x559d1f2e7288 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x559d1f2e7178 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x559d1f2e71f0 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559d1f2f6838 <col:72, line:360:5>
|   `-ReturnStmt 0x559d1f2f6828 <line:359:9, col:51>
|     `-ExprWithCleanups 0x559d1f2f6810 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x559d1f2f67e0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x559d1f2f67c8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x559d1f2f6788 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x559d1f2f6770 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x559d1f2f66b8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x559d1f2e7178 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x559d1f2f6730 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x559d1f2f6718 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x559d1f2f66d8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x559d1f2eb770 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x559d1f2f6758 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x559d1f2f66f8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x559d1f2e71f0 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559d1f2e73d8 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x559d1f2e7348 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x559d1f3031a8 <col:56, line:371:5>
|   |-DeclStmt 0x559d1f2f6a28 <line:363:9, col:51>
|   | `-VarDecl 0x559d1f2f6860 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x559d1f2f6a10 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x559d1f2f69e0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x559d1f2f69c8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x559d1f2f69b0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x559d1f2f6980 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x559d1f2f6968 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x559d1f2f6950 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x559d1f2f6920 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x559d1f303108 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x559d1f2f6a90 <col:9, col:14> 'int64_t':'long' lvalue .x 0x559d1f2ebd88
|   | | `-MemberExpr 0x559d1f2f6a60 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x559d1f2ecd38
|   | |   `-DeclRefExpr 0x559d1f2f6a40 <col:9> 'Timestamp' lvalue Var 0x559d1f2f6860 't' 'Timestamp'
|   | `-CallExpr 0x559d1f3030a8 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x559d1f303090 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x559d1f2f6ac0 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x559d1f2ed068 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x559d1f3030d8 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x559d1f2f6ae0 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x559d1f2e7348 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x559d1f3030f0 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x559d1f303070 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x559d1f303040 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x559d1f2f6b00 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e2230 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x559d1f303058 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x559d1f2f6b20 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e2590 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x559d1f303190 <line:370:9, col:16>
|     `-CXXConstructExpr 0x559d1f303160 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x559d1f303148 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x559d1f303128 <col:16> 'Timestamp' lvalue Var 0x559d1f2f6860 't' 'Timestamp'
|-CXXMethodDecl 0x559d1f2e74c8 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x559d1f3032e8 <col:39, line:377:5>
|   `-ReturnStmt 0x559d1f3032d8 <line:376:9, col:30>
|     `-ExprWithCleanups 0x559d1f3032c0 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x559d1f303290 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x559d1f303278 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x559d1f303238 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x559d1f3031e0 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x559d1f303220 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x559d1f303200 <col:29> 'int' 1
|-CXXMethodDecl 0x559d1f2e7588 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x559d1f3033c8 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x559d1f303380 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x559d1f303310 <col:9> '<bound member function type>' ->assign 0x559d1f2e7788
|     | `-CXXThisExpr 0x559d1f303300 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x559d1f303340 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x559d1f3033b0 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x559d1f303360 <col:19> 'int' 0
|-CXXMethodDecl 0x559d1f2e7788 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x559d1f2e7638 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x559d1f2e76b0 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x559d1f2ee960 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x559d1f2ee940 <col:60> 'int' 0
| `-CompoundStmt 0x559d1f3035c0 <col:63, line:395:5>
|   `-BinaryOperator 0x559d1f3035a0 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x559d1f303420 <col:9, col:12> 'int64_t':'long' lvalue .x 0x559d1f2ebd88
|     | `-MemberExpr 0x559d1f3033f0 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x559d1f2ecd38
|     |   `-CXXThisExpr 0x559d1f3033e0 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x559d1f303580 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x559d1f303510 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x559d1f3034b0 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x559d1f303498 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x559d1f303480 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x559d1f303450 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x559d1f2e7638 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x559d1f3034f8 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x559d1f3034d8 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e2590 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x559d1f303568 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x559d1f303550 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x559d1f303530 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x559d1f2e76b0 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559d1f2e7958 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x559d1f2e7848 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x559d1f2e78c0 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559d1f303718 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x559d1f3036d0 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x559d1f3035e8 <col:9> '<bound member function type>' ->assign 0x559d1f2e7788
|     | `-CXXThisExpr 0x559d1f3035d8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x559d1f303700 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x559d1f303618 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x559d1f2e7848 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x559d1f303690 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x559d1f303678 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x559d1f303638 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x559d1f2eb628 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x559d1f3036b8 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x559d1f303658 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x559d1f2e78c0 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559d1f2e7b28 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x559d1f2e7a18 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x559d1f2e7a90 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559d1f303870 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x559d1f303828 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x559d1f303740 <col:9> '<bound member function type>' ->assign 0x559d1f2e7788
|     | `-CXXThisExpr 0x559d1f303730 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x559d1f303858 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x559d1f303770 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x559d1f2e7a18 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x559d1f3037e8 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x559d1f3037d0 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x559d1f303790 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x559d1f2eb770 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x559d1f303810 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x559d1f3037b0 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x559d1f2e7a90 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559d1f2e7cf8 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x559d1f2e7be8 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x559d1f2e7c60 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x559d1f2ee998 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x559d1f2ee978 <col:57> 'int' 0
| `-DeprecatedAttr 0x559d1f2e7da8 <col:75> "" ""
|-CXXMethodDecl 0x559d1f2e7f38 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x559d1f2e7e28 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x559d1f2e7ea0 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x559d1f2e7fe8 <col:74> "" ""
|-CXXMethodDecl 0x559d1f2e8178 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x559d1f2e8068 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x559d1f2e80e0 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x559d1f2e8228 <col:74> "" ""
|-CXXMethodDecl 0x559d1f2e82b8 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x559d1f2e8358 <col:42> "" ""
|-CXXMethodDecl 0x559d1f2eab90 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x559d1f2eaa70 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x559d1f2eaaf0 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x559d1f2eac60 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x559d1f2ead20 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x559d1f2eadc0 <col:20>
| `-OptimizeNoneAttr 0x559d1f2eae18 <col:30>
|-CXXMethodDecl 0x559d1f2eae60 <line:446:5, col:36> col:29 recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x559d1f2eaf20 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x559d1f2eafe0 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x559d1f2eb0a0 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x559d1f2eb160 <line:481:5, col:43> col:29 recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x559d1f2eb220 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x559d1f2eb2e0 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x559d1f2eb3a0 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x559d1f2eb4e0 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x559d1f2eb450 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559d1f3039b8 <col:58, line:512:5>
|   `-ReturnStmt 0x559d1f3039a8 <line:511:9, col:53>
|     `-BinaryOperator 0x559d1f303988 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x559d1f303958 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x559d1f303888 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x559d1f2eb450 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x559d1f303970 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x559d1f303938 <col:23, col:53> 'int'
|           `-BinaryOperator 0x559d1f303918 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x559d1f3038e8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x559d1f3038a8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e2590 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x559d1f303900 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x559d1f3038c8 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e2500 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x559d1f2eb628 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x559d1f2eb598 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559d1f303b00 <col:58, line:516:5>
|   `-ReturnStmt 0x559d1f303af0 <line:515:9, col:53>
|     `-BinaryOperator 0x559d1f303ad0 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x559d1f303aa0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x559d1f3039d0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x559d1f2eb598 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x559d1f303ab8 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x559d1f303a80 <col:23, col:53> 'int'
|           `-BinaryOperator 0x559d1f303a60 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x559d1f303a30 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x559d1f3039f0 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e2590 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x559d1f303a48 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x559d1f303a10 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e23e0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x559d1f2eb770 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x559d1f2eb6e0 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559d1f303c48 <col:58, line:520:5>
|   `-ReturnStmt 0x559d1f303c38 <line:519:9, col:53>
|     `-BinaryOperator 0x559d1f303c18 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x559d1f303be8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x559d1f303b18 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x559d1f2eb6e0 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x559d1f303c00 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x559d1f303bc8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x559d1f303ba8 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x559d1f303b78 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x559d1f303b38 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e2230 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x559d1f303b90 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x559d1f303b58 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e2590 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x559d1f2eb8b8 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x559d1f2eb828 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559d1f303d90 <col:60, line:524:5>
|   `-ReturnStmt 0x559d1f303d80 <line:523:9, col:55>
|     `-BinaryOperator 0x559d1f303d60 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x559d1f303d30 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x559d1f303c60 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x559d1f2eb828 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x559d1f303d48 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x559d1f303d10 <col:25, col:55> 'int'
|           `-BinaryOperator 0x559d1f303cf0 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x559d1f303cc0 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x559d1f303c80 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e2590 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x559d1f303cd8 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x559d1f303ca0 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e2500 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x559d1f2eba00 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x559d1f2eb970 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559d1f303ed8 <col:60, line:528:5>
|   `-ReturnStmt 0x559d1f303ec8 <line:527:9, col:55>
|     `-BinaryOperator 0x559d1f303ea8 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x559d1f303e78 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x559d1f303da8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x559d1f2eb970 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x559d1f303e90 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x559d1f303e58 <col:25, col:55> 'int'
|           `-BinaryOperator 0x559d1f303e38 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x559d1f303e08 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x559d1f303dc8 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e2590 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x559d1f303e20 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x559d1f303de8 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e23e0 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x559d1f2ebb48 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x559d1f2ebab8 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559d1f304020 <col:60, line:532:5>
|   `-ReturnStmt 0x559d1f304010 <line:531:9, col:55>
|     `-BinaryOperator 0x559d1f303ff0 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x559d1f303fc0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x559d1f303ef0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x559d1f2ebab8 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x559d1f303fd8 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x559d1f303fa0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x559d1f303f80 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x559d1f303f50 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x559d1f303f10 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e2230 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x559d1f303f68 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x559d1f303f30 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x559d1f2e2590 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x559d1f2ebbf0 prev 0x559d1f2e2a30 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x559d1f2ebce8 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x559d1f2ebd88 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x559d1f2f2b50 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x559d1f2f2f38 <col:11>
| |-CXXConstructorDecl 0x559d1f2f2c30 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x559d1f2f2d18 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x559d1f2f3680 <col:11>
| |-CXXConstructorDecl 0x559d1f2f2db8 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x559d1f2f2ec8 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x559d1f2f4ed8 <col:11>
| |-CXXDestructorDecl 0x559d1f2f41e8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x559d1effad98 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x559d1effaea8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x559d1effb770 <col:11>
| |   `-ReturnStmt 0x559d1effb760 <col:11>
| |     `-UnaryOperator 0x559d1effb748 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x559d1effb738 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x559d1effaf18 <col:11> col:11 implicit constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&)' inline default trivial noexcept-unevaluated 0x559d1effaf18
|   `-ParmVarDecl 0x559d1effb028 <col:11> col:11 'Timestamp::rep_t &&'
|-EnumDecl 0x559d1f2ebdf0 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x559d1f2ebef0 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x559d1f2ec0f0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f2ebed0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x559d1f2ebeb0 <col:21> 'int' 0
| |-EnumConstantDecl 0x559d1f2ebf80 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x559d1f2ec108 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f2ebf60 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x559d1f2ebf40 <col:23> 'int' 1
| |-EnumConstantDecl 0x559d1f2ec010 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x559d1f2ec120 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f2ebff0 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x559d1f2ebfd0 <col:23> 'int' 2
| `-EnumConstantDecl 0x559d1f2ec0a0 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x559d1f2ec138 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559d1f2ec080 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x559d1f2ec060 <col:27> 'int' 3
|-CXXMethodDecl 0x559d1f2ec178 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x559d1f2ec240 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x559d1f2ec448 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x559d1f2ec2f0 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x559d1f2ec370 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x559d1f2ee9b0 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x559d1f2ec658 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x559d1f2ec508 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x559d1f2ec580 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x559d1f2ec728 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x559d1f2ec7e8 <line:635:5, col:37> col:24 warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x559d1f2ec958 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x559d1f2ec898 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x559d1f2eca20 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x559d1f2ecae0 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x559d1f2ecba0 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x559d1f2ecc60 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x559d1f2ecd00 <line:670:3, col:10> col:3 private
|-FieldDecl 0x559d1f2ecd38 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x559d1f2ecda8 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x559d1f304038 <col:27, line:684:5>
|-CXXMethodDecl 0x559d1f2ece68 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x559d1f304048 <col:27, line:696:5>
|-CXXMethodDecl 0x559d1f2ed068 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x559d1f2ecf18 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x559d1f2ecf90 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559d1f3041d0 <col:66, line:700:5>
|   `-ReturnStmt 0x559d1f3041c0 <line:699:9, col:31>
|     `-CallExpr 0x559d1f304160 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x559d1f304148 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x559d1f3040f8 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x559d1f16f418 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x559d1f304190 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x559d1f3040b8 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x559d1f2ecf18 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x559d1f3041a8 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x559d1f3040d8 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x559d1f2ecf90 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559d1f2ed3d8 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x559d1f2ed128 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x559d1f2ed1a0 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x559d1f2ed218 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x559d1f2ed290 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x559d1f304520 <col:64, line:707:5>
|   |-DeclStmt 0x559d1f304260 <line:704:9, col:24>
|   | `-VarDecl 0x559d1f3041f8 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x559d1f304470 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x559d1f304278 <col:9> 'int32_t':'int' lvalue ParmVar 0x559d1f2ed1a0 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x559d1f304458 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x559d1f3043f0 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x559d1f3043d8 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559d1f304358 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x559d1f1746e8 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x559d1f304428 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x559d1f3042f8 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x559d1f2ed218 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x559d1f304440 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x559d1f304318 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x559d1f2ed290 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x559d1f304338 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x559d1f3041f8 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x559d1f304500 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x559d1f304490 <col:9> 'int32_t':'int' lvalue ParmVar 0x559d1f2ed128 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x559d1f3044e8 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x559d1f3044d0 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x559d1f3044b0 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x559d1f3041f8 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x559d1f2ed678 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x559d1f2ed4a8 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x559d1f2ed520 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x559d1f2ed598 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x559d1f2ed918 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x559d1f2ed740 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x559d1f2ed7b8 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x559d1f2ed830 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x559d1f2edaa8 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x559d1f2ed9e0 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x559d1f2edca8 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x559d1f2edb60 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x559d1f2edbd8 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x559d1f2edf78 <line:717:5, col:73> col:24
| `-FunctionDecl 0x559d1f2edeb8 parent 0x559d1edf3488 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x559d1f2edd68 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x559d1f2edde0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x559d1f2ee198 <line:718:5, col:72> col:24
| `-FunctionDecl 0x559d1f2ee0d8 parent 0x559d1edf3488 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x559d1f2edfc8 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x559d1f2ee040 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x559d1f2ee360 <line:719:5, col:57> col:29
| `-FunctionDecl 0x559d1f2ee2a8 parent 0x559d1edf3488 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x559d1f2ee1e8 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x559d1f2ee5e8 <line:720:5, col:73> col:30
| `-FunctionDecl 0x559d1f2ee528 parent 0x559d1edf3488 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x559d1f2ee3d8 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x559d1f2ee450 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x559d1f2ee808 <line:721:5, col:73> col:30
| `-FunctionDecl 0x559d1f2ee748 parent 0x559d1edf3488 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x559d1f2ee638 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x559d1f2ee6b0 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x559d1f2f4090 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x559d1f2f4178 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x559d1f2ecd38 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x559d1f2f4be8 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x559d1f2f4ba0 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x559d1f2ecd38
| |     `-DeclRefExpr 0x559d1f2f4b80 <col:7> 'const Timestamp' lvalue ParmVar 0x559d1f2f4178 '' 'const Timestamp &'
| `-CompoundStmt 0x559d1f2f4c48 <col:7>
|-CXXConstructorDecl 0x559d1f2f42f8 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x559d1f2f4408 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x559d1f2ecd38 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x559d1f2f4ee8 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x559d1f2f4e90 <col:7> 'Timestamp::rep_t' xvalue ._t 0x559d1f2ecd38
| |     `-CXXStaticCastExpr 0x559d1f2f4e60 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x559d1f2f4e30 <col:7> 'Timestamp' lvalue ParmVar 0x559d1f2f4408 '' 'Timestamp &&'
| `-CompoundStmt 0x559d1f2f4f48 <col:7>
|-CXXDestructorDecl 0x559d1f2f44b8 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x559d1effabe8 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x559d1effacf8 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x559d1effb7e8 <col:7>
|   |-CXXMemberCallExpr 0x559d1effb788 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x559d1effb6c8 <col:7> '<bound member function type>' .operator= 0x559d1effad98
|   | | `-MemberExpr 0x559d1effb5d8 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x559d1f2ecd38
|   | |   `-CXXThisExpr 0x559d1effb5c8 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x559d1effb698 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x559d1f2ecd38
|   |   `-DeclRefExpr 0x559d1effb678 <col:7> 'const Timestamp' lvalue ParmVar 0x559d1effacf8 '' 'const Timestamp &'
|   `-ReturnStmt 0x559d1effb7d8 <col:7>
|     `-UnaryOperator 0x559d1effb7c0 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x559d1effb7b0 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x559d1effb098 <col:7> col:7 implicit operator= 'Timestamp &(Timestamp &&)' inline default trivial noexcept-unevaluated 0x559d1effb098
  `-ParmVarDecl 0x559d1effb1a8 <col:7> col:7 'Timestamp &&'

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559d1f36be98 <../elements/local/chuckcheck.hh:68:3, line:71:3> line:68:10 referenced struct Stat definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559d1f36bfb8 <col:3, col:10> col:10 implicit struct Stat
|-FieldDecl 0x559d1f36c058 <line:69:5, col:15> col:15 time 'Timestamp'
|-FieldDecl 0x559d1f36c0c0 <line:70:5, col:14> col:14 saddr 'unsigned int'
|-CXXConstructorDecl 0x559d1f394290 <line:68:10> col:10 implicit used Stat 'void () noexcept(false)' inline default
| |-CXXCtorInitializer Field 0x559d1f36c058 'time' 'Timestamp'
| | `-CXXConstructExpr 0x559d1f394710 <col:10> 'Timestamp' 'void ()'
| `-CompoundStmt 0x559d1f394768 <col:10>
|-CXXConstructorDecl 0x559d1f394398 <col:10> col:10 implicit constexpr Stat 'void (const ChuckCheck::Stat &)' inline default trivial noexcept-unevaluated 0x559d1f394398
| `-ParmVarDecl 0x559d1f3944a8 <col:10> col:10 'const ChuckCheck::Stat &'
|-CXXConstructorDecl 0x559d1f394548 <col:10> col:10 implicit constexpr Stat 'void (ChuckCheck::Stat &&)' inline default trivial noexcept-unevaluated 0x559d1f394548
| `-ParmVarDecl 0x559d1f394658 <col:10> col:10 'ChuckCheck::Stat &&'
`-CXXDestructorDecl 0x559d1f3947a0 <col:10> col:10 implicit referenced ~Stat 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.ChuckCheck::Stat" = type <{ %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"struct.ChuckCheck::Stat.base" = type <{ %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559d1f36bca8 <../elements/local/chuckcheck.hh:66:1, line:98:1> line:66:7 class ChuckCheck definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x559d1f36be08 <col:1, col:7> col:7 implicit referenced class ChuckCheck
|-CXXRecordDecl 0x559d1f36be98 <line:68:3, line:71:3> line:68:10 referenced struct Stat definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable
| | |-DefaultConstructor exists non_trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x559d1f36bfb8 <col:3, col:10> col:10 implicit struct Stat
| |-FieldDecl 0x559d1f36c058 <line:69:5, col:15> col:15 time 'Timestamp'
| |-FieldDecl 0x559d1f36c0c0 <line:70:5, col:14> col:14 saddr 'unsigned int'
| |-CXXConstructorDecl 0x559d1f394290 <line:68:10> col:10 implicit used Stat 'void () noexcept(false)' inline default
| | |-CXXCtorInitializer Field 0x559d1f36c058 'time' 'Timestamp'
| | | `-CXXConstructExpr 0x559d1f394710 <col:10> 'Timestamp' 'void ()'
| | `-CompoundStmt 0x559d1f394768 <col:10>
| |-CXXConstructorDecl 0x559d1f394398 <col:10> col:10 implicit constexpr Stat 'void (const ChuckCheck::Stat &)' inline default trivial noexcept-unevaluated 0x559d1f394398
| | `-ParmVarDecl 0x559d1f3944a8 <col:10> col:10 'const ChuckCheck::Stat &'
| |-CXXConstructorDecl 0x559d1f394548 <col:10> col:10 implicit constexpr Stat 'void (ChuckCheck::Stat &&)' inline default trivial noexcept-unevaluated 0x559d1f394548
| | `-ParmVarDecl 0x559d1f394658 <col:10> col:10 'ChuckCheck::Stat &&'
| `-CXXDestructorDecl 0x559d1f3947a0 <col:10> col:10 implicit referenced ~Stat 'void () noexcept' inline default trivial
|-EnumDecl 0x559d1f36c128 <line:73:3, col:25> col:3
| `-EnumConstantDecl 0x559d1f36c230 <col:10, col:20> col:10 referenced BUCKETS 'ChuckCheck::(anonymous enum at ../elements/local/chuckcheck.hh:73:3)'
|   `-ImplicitCastExpr 0x559d1f36c280 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559d1f36c210 <col:20> 'int' Int: 4096
|       `-IntegerLiteral 0x559d1f36c1f0 <col:20> 'int' 4096
|-FieldDecl 0x559d1f36c3f8 <line:75:3, col:21> col:8 _info 'ChuckCheck::Stat [4096]'
|-FieldDecl 0x559d1f36c460 <line:76:3, col:12> col:12 _head 'unsigned int'
|-FieldDecl 0x559d1f36c4c8 <line:77:3, col:12> col:12 _tail 'unsigned int'
|-FieldDecl 0x559d1f36c530 <line:78:3, col:12> col:12 _head_id 'unsigned int'
|-CXXMethodDecl 0x559d1f36c6d8 <line:80:3, col:47> col:17 read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x559d1f36c590 <col:30, col:38> col:39 'Element *'
| `-ParmVarDecl 0x559d1f36c610 <col:41, col:46> col:47 'void *'
|-CXXMethodDecl 0x559d1f36c828 <line:82:3, col:29> col:15 count 'void (Packet *)' inline
| `-ParmVarDecl 0x559d1f36c798 <col:21, col:28> col:29 'Packet *'
|-AccessSpecDecl 0x559d1f36c8d0 <line:84:2, col:8> col:2 public
|-CXXConstructorDecl 0x559d1f36c930 <line:86:3, col:14> col:3 ChuckCheck 'void ()'
|-CXXDestructorDecl 0x559d1f36ca20 <line:87:3, col:15> col:3 ~ChuckCheck 'void ()' noexcept-unevaluated 0x559d1f36ca20
| `-Overrides: [ 0x559d1f353598 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x559d1f36cb50 <line:89:3, col:57> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x559d1f3549f8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x559d1f36d598 <col:34, col:57>
|   `-ReturnStmt 0x559d1f36d588 <col:36, col:43>
|     `-ImplicitCastExpr 0x559d1f36d570 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x559d1f36d548 <col:43> 'const char [11]' lvalue "ChuckCheck"
|-CXXMethodDecl 0x559d1f36cc18 <line:90:3, col:54> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x559d1f354ac0 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x559d1f36d5f8 <col:34, col:54>
|   `-ReturnStmt 0x559d1f36d5e8 <col:36, col:43>
|     `-ImplicitCastExpr 0x559d1f36d5d0 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x559d1f36d5b0 <col:43> 'const char []' lvalue Var 0x559d1f354d70 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x559d1f36ccd8 <line:91:3, col:21> col:8 add_handlers 'void ()'
| `-Overrides: [ 0x559d1f356360 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x559d1f36ce20 <line:93:3, col:32> col:7 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x559d1f3564e0 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x559d1f36cd88 <col:18, col:31> col:32 'ErrorHandler *'
|-CXXMethodDecl 0x559d1f36cff0 <line:95:3, col:26> col:8 push 'void (int, Packet *)'
| |-Overrides: [ 0x559d1f353868 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x559d1f36cee0 <col:13> col:16 'int'
| `-ParmVarDecl 0x559d1f36cf58 <col:18, col:25> col:26 'Packet *'
|-CXXMethodDecl 0x559d1f36d148 <line:96:3, col:19> col:11 pull 'Packet *(int)'
| |-Overrides: [ 0x559d1f3539f8 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x559d1f36d0b8 <col:16> col:19 'int'
|-CXXConstructorDecl 0x559d1f36d218 <line:66:7> col:7 implicit ChuckCheck 'void (const ChuckCheck &)' inline default_delete noexcept-unevaluated 0x559d1f36d218
| `-ParmVarDecl 0x559d1f36d328 <col:7> col:7 'const ChuckCheck &'
`-CXXMethodDecl 0x559d1f36d3c8 <col:7> col:7 implicit operator= 'ChuckCheck &(const ChuckCheck &)' inline default_delete noexcept-unevaluated 0x559d1f36d3c8
  `-ParmVarDecl 0x559d1f36d4d8 <col:7> col:7 'const ChuckCheck &'

Layout: <CGRecordLayout
  LLVMType:%class.ChuckCheck = type { %class.Element.base, [4 x i8], [4096 x %"struct.ChuckCheck::Stat"], i32, i32, i32, [4 x i8] }
  NonVirtualBaseLLVMType:%class.ChuckCheck.base = type { %class.Element.base, [4 x i8], [4096 x %"struct.ChuckCheck::Stat"], i32, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559d1f111d70 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559d1f111e88 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x559d1f111f18 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x559d1f111fe8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x559d1f1120d0 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x559d1f1122e8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x559d1f112190 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559d1f112498 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x559d1f1123a0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x559d1f1125e0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x559d1f112550 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x559d1f112728 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x559d1f112698 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559d1f112870 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x559d1f1127e0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559d1f112938 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x559d1f112a80 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x559d1f1129f0 <col:28> col:31 'int'
|-CXXMethodDecl 0x559d1f112b48 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x559d1f112c90 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x559d1f112c00 <col:28> col:31 'int'
|-CXXMethodDecl 0x559d1f112e08 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x559d1f112d48 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559d1f112f50 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x559d1f112ec0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559d1f113018 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x559d1f1131d8 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x559d1f1130c8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x559d1f113140 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559d1f113428 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x559d1f113298 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x559d1f113310 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x559d1f1134d8 <col:86> "" ""
|-CXXMethodDecl 0x559d1f113748 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x559d1f1135b8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x559d1f113630 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559d1f1138f8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x559d1f113808 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x559d1f113aa8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x559d1f1139b0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x559d1f113d78 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x559d1f113b60 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x559d1f113bd8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x559d1f113c50 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559d1f114058 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x559d1f113e40 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x559d1f113eb8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x559d1f113f30 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x559d1f114110 <col:115> "" ""
|-AccessSpecDecl 0x559d1f114180 <line:84:3, col:10> col:3 private
|-FieldDecl 0x559d1f1141b8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559d1f1146c0 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x559d1f1146c0
| `-ParmVarDecl 0x559d1f1147c8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x559d1f114868 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x559d1f114868
| `-ParmVarDecl 0x559d1f114978 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x559d1f149fa8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x559d1f33cdb0 <col:7>
|-CXXConstructorDecl 0x559d1f14a080 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x559d1f14a080
| `-ParmVarDecl 0x559d1f14a198 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x559d1f14a208 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x559d1f14a208
| `-ParmVarDecl 0x559d1f14a318 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x559d1f33f7b0 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559d1f32b958 prev 0x559d1f320b60 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559d1f32ba50 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x559d1f32bb40 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x559d1f32bc68 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x559d1f32bde8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x559d1f32bf68 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x559d1f32c0e8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x559d1f33cf18 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x559d1f33d788 <col:11>
|-CXXDestructorDecl 0x559d1f33cff0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x559d1f33d128 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x559d1f33d128
| `-ParmVarDecl 0x559d1f33d238 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x559d1f33d2d8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x559d1f33d2d8
| `-ParmVarDecl 0x559d1f33d3e8 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x559d1f3401a8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x559d1f3402b8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x559d1f340538 <col:11>
|   `-ReturnStmt 0x559d1f340528 <col:11>
|     `-UnaryOperator 0x559d1f340510 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x559d1f340500 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x559d1f340328 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x559d1f340328
  `-ParmVarDecl 0x559d1f340438 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559d1f32c150 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559d1f32c268 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x559d1f32c308 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x559d1f32c370 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x559d1f32c3d8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x559d1f32c440 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x559d1f32c4a0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x559d1f32c560 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x559d1f32c5c0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x559d1f32c620 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x559d1f33ce28 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x559d1f32c308 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x559d1f33d798 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x559d1f33d7f0 <col:12>
|-CXXConstructorDecl 0x559d1f33d458 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x559d1f33d458
| `-ParmVarDecl 0x559d1f33d568 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x559d1f33d608 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x559d1f33d608
| `-ParmVarDecl 0x559d1f33d718 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x559d1f33f890 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559d1f31a270 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x559d1f31a388 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x559d1f31a418 <col:16, col:22> col:16 public
|-EnumDecl 0x559d1f31a440 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x559d1f31a540 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x559d1f31a620 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f31a520 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x559d1f31a500 <col:21> 'int' 28
| `-EnumConstantDecl 0x559d1f31a5d0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x559d1f31a638 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559d1f31a5b0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x559d1f31a590 <col:22> 'int' 64
|-CXXMethodDecl 0x559d1f31a978 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x559d1f31a660 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x559d1f31a6e0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x559d1f31a758 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x559d1f31a7d0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x559d1f31aa38 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x559d1f31ac38 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x559d1f31aab0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x559d1f31ab28 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x559d1f31ace8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x559d1f31ae48 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x559d1f31ad58 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x559d1f31aef0 <col:72> warn_unused_result ""
|-TypedefDecl 0x559d1f31b250 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x559d1f31b1e0 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x559d1f31b180 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x559d1f31b140 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x559d1edf34e0 'void'
|       |-PointerType 0x559d1f09a610 'unsigned char *'
|       | `-BuiltinType 0x559d1edf35e0 'unsigned char'
|       |-TypedefType 0x559d1ee96be0 'size_t' sugar
|       | |-Typedef 0x559d1ee63be0 'size_t'
|       | `-BuiltinType 0x559d1edf3640 'unsigned long'
|       `-PointerType 0x559d1edf3ce0 'void *'
|         `-BuiltinType 0x559d1edf34e0 'void'
|-CXXMethodDecl 0x559d1f31b6c8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x559d1f31b2c0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x559d1f31b338 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x559d1f31b3d0 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x559d1f31b450 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x559d1f335dc0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x559d1f335da8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x559d1f335d70 <col:58> 'int' 0
| |-ParmVarDecl 0x559d1f31b4d0 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x559d1f335de8 <col:76> 'int' 0
| |-ParmVarDecl 0x559d1f31b550 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x559d1f335e08 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x559d1f31b798 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x559d1f31b818 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x559d1f31b8d8 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x559d1f31b978 <col:20>
| `-OptimizeNoneAttr 0x559d1f31b9d0 <col:30>
|-CXXMethodDecl 0x559d1f31ba48 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x559d1f31bae8 <col:20>
| `-OptimizeNoneAttr 0x559d1f31bb40 <col:30>
|-CXXMethodDecl 0x559d1f31bbb8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x559d1f31bc58 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x559d1f31bd08 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x559d1f31bda8 <col:20>
| |-OptimizeNoneAttr 0x559d1f31be00 <col:30>
| `-WarnUnusedResultAttr 0x559d1f31be28 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x559d1f31be80 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x559d1f31bf20 <col:20>
| `-OptimizeNoneAttr 0x559d1f31bf78 <col:30>
|-CXXMethodDecl 0x559d1f31bfc8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x559d1f31c068 <col:20>
| `-OptimizeNoneAttr 0x559d1f31c0c0 <col:30>
|-CXXMethodDecl 0x559d1f31c108 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x559d1f31c1a8 <col:20>
| `-OptimizeNoneAttr 0x559d1f31c200 <col:30>
|-CXXMethodDecl 0x559d1f31c248 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x559d1f31c308 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x559d1f31c3d0 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x559d1f31c498 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x559d1f31c558 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x559d1f31c678 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x559d1f335ed0 <col:54, line:99:5>
|   `-ReturnStmt 0x559d1f335ec0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x559d1f335ea8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x559d1f335e78 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x559d1f32c958
|         `-CXXThisExpr 0x559d1f335e68 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x559d1f31c818 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x559d1f31c728 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x559d1f335f80 <col:67, line:103:5>
|   `-BinaryOperator 0x559d1f335f60 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x559d1f335ef8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x559d1f32c958
|     | `-CXXThisExpr 0x559d1f335ee8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x559d1f335f48 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x559d1f335f28 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x559d1f31c728 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x559d1f31c910 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x559d1f336000 <col:33, line:107:5>
|   `-ReturnStmt 0x559d1f335ff0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x559d1f335fd8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x559d1f335fa8 <col:16> 'void *' lvalue ->_destructor_argument 0x559d1f32c9c0
|         `-CXXThisExpr 0x559d1f335f98 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x559d1f31c9d0 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x559d1f336630 <col:25, line:113:5>
|   |-ParenExpr 0x559d1f336378 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x559d1f336348 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x559d1f3360b8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x559d1f336090 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x559d1f336058 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x559d1f336028 <col:24> '<bound member function type>' ->shared 0x559d1f31ba48
|   |   |       `-ImplicitCastExpr 0x559d1f336078 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x559d1f336018 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x559d1f336118 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559d1f3360f8 <col:42> 'int' 0
|   |   `-CallExpr 0x559d1f3362a8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x559d1f336290 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559d1f336270 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559d1ee8d940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559d1f3362e8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f336188 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x559d1f336300 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f3361b0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559d1f336318 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559d1f3361e8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x559d1f336330 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559d1f336258 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559d1f336240 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559d1f336208 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x559d1f336578 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x559d1f3363a8 <col:2> 'unsigned char *' lvalue ->_head 0x559d1f32c760
|   | | `-CXXThisExpr 0x559d1f336398 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x559d1f336560 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x559d1f336540 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x559d1f3363e8 <col:10> 'unsigned char *' lvalue ->_data 0x559d1f32c7c8
|   |     | `-CXXThisExpr 0x559d1f3363d8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x559d1f336528 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x559d1f336508 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x559d1f336428 <col:18> 'unsigned char *' lvalue ->_tail 0x559d1f32c830
|   |         | `-CXXThisExpr 0x559d1f336418 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x559d1f3364f0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x559d1f3364d0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x559d1f336468 <col:26> 'unsigned char *' lvalue ->_end 0x559d1f32c898
|   |             | `-CXXThisExpr 0x559d1f336458 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x559d1f3364b8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x559d1f336498 <col:33> 'int' 0
|   `-BinaryOperator 0x559d1f336610 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x559d1f3365a8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x559d1f32c958
|     | `-CXXThisExpr 0x559d1f336598 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x559d1f3365f8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x559d1f3365d8 <col:16> 'int' 0
|-CXXMethodDecl 0x559d1f31cb10 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x559d1f31ca80 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x559d1f31cbb8 <col:20>
| |-OptimizeNoneAttr 0x559d1f31cc10 <col:30>
| `-WarnUnusedResultAttr 0x559d1f31cc38 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x559d1f31cd08 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x559d1f31cc78 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x559d1f31cdb0 <col:20>
| |-OptimizeNoneAttr 0x559d1f31ce08 <col:30>
| `-WarnUnusedResultAttr 0x559d1f31ce30 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x559d1f31cf68 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x559d1f31ce70 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x559d1f31d010 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x559d1f31d110 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x559d1f31d080 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x559d1f31d1b8 <col:20>
| `-OptimizeNoneAttr 0x559d1f31d210 <col:30>
|-CXXMethodDecl 0x559d1f31d2d8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x559d1f31d248 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x559d1f31d380 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x559d1f31d480 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x559d1f31d3f0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x559d1f31d528 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x559d1f31d628 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x559d1f31d598 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x559d1f31d6d0 <col:20>
| `-OptimizeNoneAttr 0x559d1f31d728 <col:30>
|-CXXMethodDecl 0x559d1f31d8b8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x559d1f31d768 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x559d1f31d7e0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x559d1f335e28 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x559d1f31d968 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x559d1f31db68 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x559d1f31d9e0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x559d1f31da58 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559d1f31dd78 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x559d1f31dc28 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x559d1f31dca0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559d1f31df88 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x559d1f31de38 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x559d1f31deb8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x559d1f335e38 <col:39> 'int' 0
|-CXXMethodDecl 0x559d1f31e058 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x559d1f31e120 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x559d1f31e1e8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x559d1f31e2a8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x559d1f31e370 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x559d1f31e4b8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x559d1f31e428 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x559d1f31e688 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x559d1f31e578 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x559d1f31e5f0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559d1f31e758 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x559d1f31e818 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x559d1f31e8b8 <col:20>
| `-OptimizeNoneAttr 0x559d1f31e910 <col:30>
|-CXXMethodDecl 0x559d1f31e960 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x559d1f31ea00 <col:20>
| `-OptimizeNoneAttr 0x559d1f31ea58 <col:30>
|-CXXMethodDecl 0x559d1f31eaa8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x559d1f31eb68 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x559d1f31ec30 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x559d1f31ecd0 <col:20>
| `-OptimizeNoneAttr 0x559d1f31ed28 <col:30>
|-CXXMethodDecl 0x559d1f31ee78 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x559d1f31ed68 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x559d1f31ede0 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559d1f31efc8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x559d1f31ef38 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559d1f31f0a0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x559d1f31f160 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x559d1f31f200 <col:20>
| `-OptimizeNoneAttr 0x559d1f31f258 <col:30>
|-CXXMethodDecl 0x559d1f31f2a8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x559d1f31f348 <col:20>
| `-OptimizeNoneAttr 0x559d1f31f3a0 <col:30>
|-CXXMethodDecl 0x559d1f31f3f0 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x559d1f31f4b8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x559d1f31f558 <col:20>
| `-OptimizeNoneAttr 0x559d1f31f5b0 <col:30>
|-CXXMethodDecl 0x559d1f31f5f8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x559d1f31f718 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x559d1f31f888 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x559d1f31f7c8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x559d1f31f978 <line:307:5, col:68> col:56 used ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x559d1f31fa18 <col:20>
| `-OptimizeNoneAttr 0x559d1f31fa70 <col:30>
|-CXXMethodDecl 0x559d1f31fac0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x559d1f31fb80 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x559d1f31fdb8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x559d1f31fc30 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x559d1f31fca8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x559d1f31fe68 <col:20>
| `-OptimizeNoneAttr 0x559d1f31fec0 <col:30>
|-CXXMethodDecl 0x559d1f31ff68 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x559d1f320008 <col:20>
| `-OptimizeNoneAttr 0x559d1f320060 <col:30>
|-CXXMethodDecl 0x559d1f3200b0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x559d1f320150 <col:20>
| `-OptimizeNoneAttr 0x559d1f3201a8 <col:30>
|-CXXMethodDecl 0x559d1f3201f0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x559d1f320290 <col:20>
| `-OptimizeNoneAttr 0x559d1f3202e8 <col:30>
|-CXXMethodDecl 0x559d1f3203e8 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x559d1f320320 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x559d1f320490 <col:20>
| `-OptimizeNoneAttr 0x559d1f3204e8 <col:30>
|-CXXMethodDecl 0x559d1f3206a8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x559d1f320520 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x559d1f320598 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x559d1f320758 <col:20>
| `-OptimizeNoneAttr 0x559d1f3207b0 <col:30>
|-CXXMethodDecl 0x559d1f320858 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x559d1f320978 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x559d1f320a98 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x559d1f320b38 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x559d1f320b60 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x559d1f320c88 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x559d1f320d28 <col:20>
| `-OptimizeNoneAttr 0x559d1f320d80 <col:30>
|-CXXMethodDecl 0x559d1f320e28 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x559d1f320ec8 <col:20>
| `-OptimizeNoneAttr 0x559d1f320f20 <col:30>
|-AccessSpecDecl 0x559d1f320f48 <line:344:3, col:9> col:3 public
|-EnumDecl 0x559d1f320f70 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x559d1f321070 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x559d1f3210c0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559d1f321050 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x559d1f321030 <col:14> 'int' 48
|-CXXMethodDecl 0x559d1f321128 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x559d1f3211c8 <col:20>
| `-OptimizeNoneAttr 0x559d1f321220 <col:30>
|-CXXMethodDecl 0x559d1f321298 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x559d1f321338 <col:20>
| `-OptimizeNoneAttr 0x559d1f321390 <col:30>
|-CXXMethodDecl 0x559d1f321458 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x559d1f3213c8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x559d1f3215f8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x559d1f321798 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x559d1f3216a8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x559d1f321840 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x559d1f321940 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x559d1f321cf0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f321920 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x559d1f321900 <col:9> 'int' 0
| |-EnumConstantDecl 0x559d1f3219d0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x559d1f321d08 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f3219b0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x559d1f321990 <col:14> 'int' 1
| |-EnumConstantDecl 0x559d1f321a60 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x559d1f321d20 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f321a40 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x559d1f321a20 <col:14> 'int' 2
| |-EnumConstantDecl 0x559d1f321af0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x559d1f321d38 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f321ad0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x559d1f321ab0 <col:14> 'int' 3
| |-EnumConstantDecl 0x559d1f321b80 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x559d1f321d50 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f321b60 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x559d1f321b40 <col:13> 'int' 4
| |-EnumConstantDecl 0x559d1f321c10 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x559d1f321d68 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f321bf0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x559d1f321bd0 <col:13> 'int' 5
| `-EnumConstantDecl 0x559d1f321ca0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x559d1f321d80 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559d1f321c80 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x559d1f321c60 <col:14> 'int' 6
|-CXXMethodDecl 0x559d1f321de8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x559d1f321e88 <col:20>
| `-OptimizeNoneAttr 0x559d1f321ee0 <col:30>
|-CXXMethodDecl 0x559d1f321fd8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x559d1f321f18 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x559d1f322080 <col:20>
| `-OptimizeNoneAttr 0x559d1f3220d8 <col:30>
|-CXXMethodDecl 0x559d1f322148 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x559d1f322270 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x559d1f3223e8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x559d1f322320 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x559d1f3224b0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x559d1f322578 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x559d1f3226b8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x559d1f322628 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x559d1f322760 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x559d1f322860 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x559d1f322a60 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f322840 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x559d1f322820 <col:23> 'int' 0
| |-EnumConstantDecl 0x559d1f3228f0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x559d1f322a78 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f3228d0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x559d1f3228b0 <col:45> 'int' 4
| |-EnumConstantDecl 0x559d1f322980 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x559d1f322a90 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f322960 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x559d1f322940 <col:24> 'int' 0
| `-EnumConstantDecl 0x559d1f322a10 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x559d1f322aa8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559d1f3229f0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x559d1f3229d0 <col:47> 'int' 16
|-CXXMethodDecl 0x559d1f322b08 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x559d1f322c78 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x559d1f322bb8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x559d1f322d20 <col:20>
| `-OptimizeNoneAttr 0x559d1f322d78 <col:30>
|-CXXMethodDecl 0x559d1f322dc8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x559d1f336750 <col:18, col:36>
|   `-ReturnStmt 0x559d1f336740 <col:20, col:33>
|     `-ImplicitCastExpr 0x559d1f336728 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x559d1f336708 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x559d1f3366d8 <col:27> '<bound member function type>' ->xanno 0x559d1f320e28
|           `-CXXThisExpr 0x559d1f3366c8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x559d1f322ec0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x559d1f336860 <col:30, col:48>
|   `-ReturnStmt 0x559d1f336850 <col:32, col:45>
|     `-ImplicitCastExpr 0x559d1f336838 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x559d1f336818 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x559d1f3367e8 <col:39> '<bound member function type>' ->xanno 0x559d1f320c88
|           `-CXXThisExpr 0x559d1f3367d8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x559d1f322fa8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x559d1f3369f8 <col:24, col:50>
|   `-ReturnStmt 0x559d1f3369e8 <col:26, col:47>
|     `-UnaryOperator 0x559d1f3369d0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x559d1f3369b0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x559d1f336998 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x559d1f336948 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x559d1f32bc68
|         |   `-CXXMemberCallExpr 0x559d1f336928 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x559d1f3368f8 <col:34> '<bound member function type>' ->xanno 0x559d1f320e28
|         |       `-CXXThisExpr 0x559d1f3368e8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x559d1f336978 <col:46> 'int' 0
|-CXXMethodDecl 0x559d1f3230b0 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x559d1f336bc8 <col:36, col:62>
|   `-ReturnStmt 0x559d1f336bb8 <col:38, col:59>
|     `-UnaryOperator 0x559d1f336ba0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x559d1f336b80 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x559d1f336b68 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x559d1f336ae0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x559d1f32bc68
|         |   `-CXXMemberCallExpr 0x559d1f336ac0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x559d1f336a90 <col:46> '<bound member function type>' ->xanno 0x559d1f320c88
|         |       `-CXXThisExpr 0x559d1f336a80 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x559d1f336b10 <col:58> 'int' 0
|-CXXMethodDecl 0x559d1f3231c8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x559d1f336d60 <col:26, col:53>
|   `-ReturnStmt 0x559d1f336d50 <col:28, col:50>
|     `-UnaryOperator 0x559d1f336d38 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x559d1f336d18 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x559d1f336d00 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x559d1f336cb0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x559d1f32bf68
|         |   `-CXXMemberCallExpr 0x559d1f336c90 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x559d1f336c60 <col:36> '<bound member function type>' ->xanno 0x559d1f320e28
|         |       `-CXXThisExpr 0x559d1f336c50 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x559d1f336ce0 <col:49> 'int' 0
|-CXXMethodDecl 0x559d1f3232e8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x559d1f336f38 <col:38, col:65>
|   `-ReturnStmt 0x559d1f336f28 <col:40, col:62>
|     `-UnaryOperator 0x559d1f336f10 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x559d1f336ef0 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x559d1f336ed8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x559d1f336e48 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x559d1f32bf68
|         |   `-CXXMemberCallExpr 0x559d1f336e28 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x559d1f336df8 <col:48> '<bound member function type>' ->xanno 0x559d1f320c88
|         |       `-CXXThisExpr 0x559d1f336de8 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x559d1f336e78 <col:61> 'int' 0
|-CXXMethodDecl 0x559d1f323498 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x559d1f3233a0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x559d1f337608 <col:34, line:463:5>
|   |-ParenExpr 0x559d1f337450 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x559d1f337420 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x559d1f337088 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559d1f337058 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559d1f336fa8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559d1f336f90 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559d1f336f50 <col:23> 'int' lvalue ParmVar 0x559d1f3233a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559d1f336f70 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559d1f337038 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559d1f337008 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559d1f336fc8 <col:33> 'int' lvalue ParmVar 0x559d1f3233a0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x559d1f337020 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x559d1f336fe8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559d1f321070 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x559d1f3370e8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559d1f3370c8 <col:56> 'int' 0
|   |   `-CallExpr 0x559d1f337380 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x559d1f337368 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559d1f337348 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559d1ee8d940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559d1f3373c0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f3371d8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x559d1f3373d8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f337208 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559d1f3373f0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559d1f337240 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x559d1f337408 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559d1f337330 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559d1f337318 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559d1f3372d8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x559d1f3375f8 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x559d1f3375e0 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x559d1f3375c0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x559d1f337590 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x559d1f337540 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x559d1f32bc68
|         |   `-CXXMemberCallExpr 0x559d1f337520 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x559d1f3374f0 <col:9> '<bound member function type>' ->xanno 0x559d1f320c88
|         |       `-CXXThisExpr 0x559d1f3374e0 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x559d1f3375a8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x559d1f337570 <col:21> 'int' lvalue ParmVar 0x559d1f3233a0 'i' 'int'
|-CXXMethodDecl 0x559d1f3236e8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x559d1f323558 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x559d1f3235d0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x559d1f337c98 <col:40, line:472:5>
|   |-ParenExpr 0x559d1f337ab0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x559d1f337a80 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x559d1f337760 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559d1f337730 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559d1f337680 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559d1f337668 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559d1f337628 <col:23> 'int' lvalue ParmVar 0x559d1f323558 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559d1f337648 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559d1f337710 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559d1f3376e0 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559d1f3376a0 <col:33> 'int' lvalue ParmVar 0x559d1f323558 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x559d1f3376f8 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x559d1f3376c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559d1f321070 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x559d1f3377c0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559d1f3377a0 <col:56> 'int' 0
|   |   `-CallExpr 0x559d1f3379e0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x559d1f3379c8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559d1f3379a8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559d1ee8d940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559d1f337a20 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f337830 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x559d1f337a38 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f337860 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559d1f337a50 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559d1f337898 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x559d1f337a68 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559d1f337990 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559d1f337978 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559d1f337938 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x559d1f337c78 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x559d1f337c20 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x559d1f337bf0 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x559d1f337ba0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x559d1f32bc68
|     | |   `-CXXMemberCallExpr 0x559d1f337b80 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x559d1f337b50 <col:2> '<bound member function type>' ->xanno 0x559d1f320e28
|     | |       `-CXXThisExpr 0x559d1f337b40 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x559d1f337c08 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x559d1f337bd0 <col:14> 'int' lvalue ParmVar 0x559d1f323558 'i' 'int'
|     `-ImplicitCastExpr 0x559d1f337c60 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x559d1f337c40 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x559d1f3235d0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x559d1f3238a8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x559d1f3237b0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x559d1f338418 <col:36, line:485:5>
|   |-ParenExpr 0x559d1f338180 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x559d1f338150 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559d1f337e30 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559d1f337e00 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559d1f337d10 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559d1f337cf8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559d1f337cb8 <col:23> 'int' lvalue ParmVar 0x559d1f3237b0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559d1f337cd8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559d1f337de0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559d1f337dc8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559d1f337d30 <col:33> 'int' lvalue ParmVar 0x559d1f3237b0 'i' 'int'
|   |   |     `-BinaryOperator 0x559d1f337da8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559d1f337d90 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559d1f337d50 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559d1f321070 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559d1f337d70 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x559d1f337e90 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559d1f337e70 <col:60> 'int' 0
|   |   `-CallExpr 0x559d1f3380b0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559d1f338098 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559d1f338078 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559d1ee8d940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559d1f3380f0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f337f00 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x559d1f338108 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f337f38 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559d1f338120 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559d1f337f70 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x559d1f338138 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559d1f338060 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559d1f338048 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559d1f338008 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x559d1f338408 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x559d1f3383f0 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x559d1f3383d8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x559d1f3383a8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x559d1f338348 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x559d1f338318 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x559d1f338290 <col:61, col:70> 'char const[48]' lvalue ->c 0x559d1f32bb40
|             |   `-CXXMemberCallExpr 0x559d1f338270 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x559d1f338240 <col:61> '<bound member function type>' ->xanno 0x559d1f320c88
|             |       `-CXXThisExpr 0x559d1f338230 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x559d1f338330 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x559d1f3382c0 <col:74> 'int' lvalue ParmVar 0x559d1f3237b0 'i' 'int'
|-CXXMethodDecl 0x559d1f323af8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x559d1f323968 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x559d1f3239e0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x559d1f338b68 <col:42, line:500:5>
|   |-ParenExpr 0x559d1f338900 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x559d1f3388d0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559d1f3385b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559d1f338580 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559d1f338490 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559d1f338478 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559d1f338438 <col:23> 'int' lvalue ParmVar 0x559d1f323968 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559d1f338458 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559d1f338560 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559d1f338548 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559d1f3384b0 <col:33> 'int' lvalue ParmVar 0x559d1f323968 'i' 'int'
|   |   |     `-BinaryOperator 0x559d1f338528 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559d1f338510 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559d1f3384d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559d1f321070 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559d1f3384f0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x559d1f338610 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559d1f3385f0 <col:60> 'int' 0
|   |   `-CallExpr 0x559d1f338830 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559d1f338818 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559d1f3387f8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559d1ee8d940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559d1f338870 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f338680 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x559d1f338888 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f3386b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559d1f3388a0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559d1f3386f0 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x559d1f3388b8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559d1f3387e0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559d1f3387c8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559d1f338788 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x559d1f338b48 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x559d1f338af8 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x559d1f338ac8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x559d1f338a70 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x559d1f338a40 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x559d1f3389f0 <col:48, col:57> 'char [48]' lvalue ->c 0x559d1f32bb40
|     |     |   `-CXXMemberCallExpr 0x559d1f3389d0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x559d1f3389a0 <col:48> '<bound member function type>' ->xanno 0x559d1f320e28
|     |     |       `-CXXThisExpr 0x559d1f338990 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x559d1f338a58 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x559d1f338a20 <col:61> 'int' lvalue ParmVar 0x559d1f323968 'i' 'int'
|     `-ImplicitCastExpr 0x559d1f338b30 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x559d1f338b10 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x559d1f3239e0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x559d1f323cb8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x559d1f323bc0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x559d1f3392c8 <col:35, line:513:5>
|   |-ParenExpr 0x559d1f338fd8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x559d1f338fa8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559d1f338d00 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559d1f338cd0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559d1f338be0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559d1f338bc8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559d1f338b88 <col:23> 'int' lvalue ParmVar 0x559d1f323bc0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559d1f338ba8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559d1f338cb0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559d1f338c98 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559d1f338c00 <col:33> 'int' lvalue ParmVar 0x559d1f323bc0 'i' 'int'
|   |   |     `-BinaryOperator 0x559d1f338c78 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559d1f338c60 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559d1f338c20 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559d1f321070 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559d1f338c40 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x559d1f338d60 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559d1f338d40 <col:60> 'int' 0
|   |   `-CallExpr 0x559d1f338f08 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559d1f338ef0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559d1f338ed0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559d1ee8d940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559d1f338f48 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f338dd0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x559d1f338f60 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f338e08 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559d1f338f78 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559d1f338e40 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x559d1f338f90 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559d1f338eb8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559d1f338ea0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559d1f338e60 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x559d1f3392b8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x559d1f3392a0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x559d1f339288 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x559d1f339258 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x559d1f3391d0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x559d1f3391a0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x559d1f339150 <col:60, col:69> 'char const[48]' lvalue ->c 0x559d1f32bb40
|             |   `-CXXMemberCallExpr 0x559d1f339130 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x559d1f339100 <col:60> '<bound member function type>' ->xanno 0x559d1f320c88
|             |       `-CXXThisExpr 0x559d1f3390f0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x559d1f3391b8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x559d1f339180 <col:73> 'int' lvalue ParmVar 0x559d1f323bc0 'i' 'int'
|-CXXMethodDecl 0x559d1f323f08 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x559d1f323d78 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x559d1f323df0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x559d1f3399e8 <col:41, line:528:5>
|   |-ParenExpr 0x559d1f339770 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x559d1f339740 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559d1f339460 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559d1f339430 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559d1f339340 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559d1f339328 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559d1f3392e8 <col:23> 'int' lvalue ParmVar 0x559d1f323d78 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559d1f339308 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559d1f339410 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559d1f3393f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559d1f339360 <col:33> 'int' lvalue ParmVar 0x559d1f323d78 'i' 'int'
|   |   |     `-BinaryOperator 0x559d1f3393d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559d1f3393c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559d1f339380 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559d1f321070 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559d1f3393a0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x559d1f3394c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559d1f3394a0 <col:60> 'int' 0
|   |   `-CallExpr 0x559d1f3396a0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559d1f339688 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559d1f339668 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559d1ee8d940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559d1f3396e0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f339530 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x559d1f3396f8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f339568 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559d1f339710 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559d1f3395a0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x559d1f339728 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559d1f339650 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559d1f339638 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559d1f3395f8 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x559d1f3399c8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x559d1f339978 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x559d1f339948 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x559d1f3398f0 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x559d1f3398b0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x559d1f339860 <col:47, col:56> 'char [48]' lvalue ->c 0x559d1f32bb40
|     |     |   `-CXXMemberCallExpr 0x559d1f339840 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x559d1f339810 <col:47> '<bound member function type>' ->xanno 0x559d1f320e28
|     |     |       `-CXXThisExpr 0x559d1f339800 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x559d1f3398c8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x559d1f339890 <col:60> 'int' lvalue ParmVar 0x559d1f323d78 'i' 'int'
|     `-ImplicitCastExpr 0x559d1f3399b0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x559d1f339990 <col:65> 'int16_t':'short' lvalue ParmVar 0x559d1f323df0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x559d1f3240c8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x559d1f323fd0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x559d1f33a0b8 <col:36, line:541:5>
|   |-ParenExpr 0x559d1f339e58 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x559d1f339e28 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559d1f339b80 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559d1f339b50 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559d1f339a60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559d1f339a48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559d1f339a08 <col:23> 'int' lvalue ParmVar 0x559d1f323fd0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559d1f339a28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559d1f339b30 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559d1f339b18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559d1f339a80 <col:33> 'int' lvalue ParmVar 0x559d1f323fd0 'i' 'int'
|   |   |     `-BinaryOperator 0x559d1f339af8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559d1f339ae0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559d1f339aa0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559d1f321070 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559d1f339ac0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x559d1f339be0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559d1f339bc0 <col:60> 'int' 0
|   |   `-CallExpr 0x559d1f339d88 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559d1f339d70 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559d1f339d50 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559d1ee8d940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559d1f339dc8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f339c50 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x559d1f339de0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f339c88 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559d1f339df8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559d1f339cc0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x559d1f339e10 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559d1f339d38 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559d1f339d20 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559d1f339ce0 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x559d1f33a0a8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x559d1f33a090 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x559d1f33a078 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x559d1f33a048 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x559d1f339ff0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x559d1f339fc0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x559d1f339f70 <col:61, col:70> 'char const[48]' lvalue ->c 0x559d1f32bb40
|             |   `-CXXMemberCallExpr 0x559d1f339f50 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x559d1f339f20 <col:61> '<bound member function type>' ->xanno 0x559d1f320c88
|             |       `-CXXThisExpr 0x559d1f339f10 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x559d1f339fd8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x559d1f339fa0 <col:74> 'int' lvalue ParmVar 0x559d1f323fd0 'i' 'int'
|-CXXMethodDecl 0x559d1f324298 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x559d1f324188 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x559d1f324200 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x559d1f324348 <col:20>
| `-OptimizeNoneAttr 0x559d1f3243a0 <col:30>
|-CXXMethodDecl 0x559d1f3244d8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x559d1f3243e0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x559d1f33a788 <col:35, line:562:5>
|   |-ParenExpr 0x559d1f33a528 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x559d1f33a4f8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559d1f33a250 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559d1f33a220 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559d1f33a130 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559d1f33a118 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559d1f33a0d8 <col:23> 'int' lvalue ParmVar 0x559d1f3243e0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559d1f33a0f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559d1f33a200 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559d1f33a1e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559d1f33a150 <col:33> 'int' lvalue ParmVar 0x559d1f3243e0 'i' 'int'
|   |   |     `-BinaryOperator 0x559d1f33a1c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559d1f33a1b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559d1f33a170 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559d1f321070 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559d1f33a190 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x559d1f33a2b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559d1f33a290 <col:60> 'int' 0
|   |   `-CallExpr 0x559d1f33a458 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559d1f33a440 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559d1f33a420 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559d1ee8d940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559d1f33a498 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f33a320 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x559d1f33a4b0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f33a358 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559d1f33a4c8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559d1f33a390 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x559d1f33a4e0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559d1f33a408 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559d1f33a3f0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559d1f33a3b0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x559d1f33a778 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x559d1f33a760 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x559d1f33a748 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x559d1f33a718 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x559d1f33a6c0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x559d1f33a690 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x559d1f33a640 <col:60, col:69> 'char const[48]' lvalue ->c 0x559d1f32bb40
|             |   `-CXXMemberCallExpr 0x559d1f33a620 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x559d1f33a5f0 <col:60> '<bound member function type>' ->xanno 0x559d1f320c88
|             |       `-CXXThisExpr 0x559d1f33a5e0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x559d1f33a6a8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x559d1f33a670 <col:73> 'int' lvalue ParmVar 0x559d1f3243e0 'i' 'int'
|-CXXMethodDecl 0x559d1f3246e8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x559d1f324598 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x559d1f324610 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x559d1f33ae68 <col:41, line:577:5>
|   |-ParenExpr 0x559d1f33abf8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x559d1f33abc8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559d1f33a920 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559d1f33a8f0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559d1f33a800 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559d1f33a7e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559d1f33a7a8 <col:23> 'int' lvalue ParmVar 0x559d1f324598 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559d1f33a7c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559d1f33a8d0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559d1f33a8b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559d1f33a820 <col:33> 'int' lvalue ParmVar 0x559d1f324598 'i' 'int'
|   |   |     `-BinaryOperator 0x559d1f33a898 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559d1f33a880 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559d1f33a840 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559d1f321070 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559d1f33a860 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x559d1f33a980 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559d1f33a960 <col:60> 'int' 0
|   |   `-CallExpr 0x559d1f33ab28 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559d1f33ab10 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559d1f33aaf0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559d1ee8d940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559d1f33ab68 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f33a9f0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x559d1f33ab80 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f33aa28 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559d1f33ab98 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559d1f33aa60 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x559d1f33abb0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559d1f33aad8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559d1f33aac0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559d1f33aa80 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x559d1f33ae48 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x559d1f33adf8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x559d1f33adc8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x559d1f33ad68 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x559d1f33ad38 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x559d1f33ace8 <col:47, col:56> 'char [48]' lvalue ->c 0x559d1f32bb40
|     |     |   `-CXXMemberCallExpr 0x559d1f33acc8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x559d1f33ac98 <col:47> '<bound member function type>' ->xanno 0x559d1f320e28
|     |     |       `-CXXThisExpr 0x559d1f33ac88 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x559d1f33ad50 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x559d1f33ad18 <col:60> 'int' lvalue ParmVar 0x559d1f324598 'i' 'int'
|     `-ImplicitCastExpr 0x559d1f33ae30 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x559d1f33ae10 <col:65> 'int32_t':'int' lvalue ParmVar 0x559d1f324610 'x' 'int32_t':'int'
|-CXXMethodDecl 0x559d1f3248a8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x559d1f3247b0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x559d1f33b598 <col:36, line:591:5>
|   |-ParenExpr 0x559d1f33b2d8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x559d1f33b2a8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559d1f33b000 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559d1f33afd0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559d1f33aee0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559d1f33aec8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559d1f33ae88 <col:23> 'int' lvalue ParmVar 0x559d1f3247b0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559d1f33aea8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559d1f33afb0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559d1f33af98 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559d1f33af00 <col:33> 'int' lvalue ParmVar 0x559d1f3247b0 'i' 'int'
|   |   |     `-BinaryOperator 0x559d1f33af78 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559d1f33af60 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559d1f33af20 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559d1f321070 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559d1f33af40 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x559d1f33b060 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559d1f33b040 <col:60> 'int' 0
|   |   `-CallExpr 0x559d1f33b208 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559d1f33b1f0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559d1f33b1d0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559d1ee8d940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559d1f33b248 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f33b0d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x559d1f33b260 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f33b108 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559d1f33b278 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559d1f33b140 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x559d1f33b290 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559d1f33b1b8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559d1f33b1a0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559d1f33b160 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x559d1f33b588 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x559d1f33b570 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x559d1f33b558 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x559d1f33b528 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x559d1f33b4a0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x559d1f33b470 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x559d1f33b420 <col:61, col:70> 'char const[48]' lvalue ->c 0x559d1f32bb40
|             |   `-CXXMemberCallExpr 0x559d1f33b400 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x559d1f33b3d0 <col:61> '<bound member function type>' ->xanno 0x559d1f320c88
|             |       `-CXXThisExpr 0x559d1f33b3c0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x559d1f33b488 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x559d1f33b450 <col:74> 'int' lvalue ParmVar 0x559d1f3247b0 'i' 'int'
|-CXXMethodDecl 0x559d1f324af8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x559d1f324968 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x559d1f3249e0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x559d1f33bc78 <col:42, line:606:5>
|   |-ParenExpr 0x559d1f33ba08 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x559d1f33b9d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x559d1f33b730 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559d1f33b700 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559d1f33b610 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559d1f33b5f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559d1f33b5b8 <col:23> 'int' lvalue ParmVar 0x559d1f324968 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559d1f33b5d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559d1f33b6e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x559d1f33b6c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559d1f33b630 <col:33> 'int' lvalue ParmVar 0x559d1f324968 'i' 'int'
|   |   |     `-BinaryOperator 0x559d1f33b6a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559d1f33b690 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559d1f33b650 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559d1f321070 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x559d1f33b670 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x559d1f33b790 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559d1f33b770 <col:60> 'int' 0
|   |   `-CallExpr 0x559d1f33b938 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x559d1f33b920 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559d1f33b900 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559d1ee8d940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559d1f33b978 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f33b800 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x559d1f33b990 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f33b838 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559d1f33b9a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559d1f33b870 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x559d1f33b9c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559d1f33b8e8 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559d1f33b8d0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559d1f33b890 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x559d1f33bc58 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x559d1f33bc08 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x559d1f33bbd8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x559d1f33bb78 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x559d1f33bb48 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x559d1f33baf8 <col:48, col:57> 'char [48]' lvalue ->c 0x559d1f32bb40
|     |     |   `-CXXMemberCallExpr 0x559d1f33bad8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x559d1f33baa8 <col:48> '<bound member function type>' ->xanno 0x559d1f320e28
|     |     |       `-CXXThisExpr 0x559d1f33ba98 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x559d1f33bb60 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x559d1f33bb28 <col:61> 'int' lvalue ParmVar 0x559d1f324968 'i' 'int'
|     `-ImplicitCastExpr 0x559d1f33bc40 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x559d1f33bc20 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x559d1f3249e0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x559d1f324c90 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x559d1f324bc0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x559d1f33c4e8 <col:33, line:620:5>
|   |-ParenExpr 0x559d1f33c260 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x559d1f33c230 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x559d1f33be80 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559d1f33be50 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559d1f33bcf0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559d1f33bcd8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559d1f33bc98 <col:23> 'int' lvalue ParmVar 0x559d1f324bc0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559d1f33bcb8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559d1f33be30 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x559d1f33be18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559d1f33bd10 <col:33> 'int' lvalue ParmVar 0x559d1f324bc0 'i' 'int'
|   |   |     `-BinaryOperator 0x559d1f33bdf8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559d1f33bde0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559d1f33bd30 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559d1f321070 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x559d1f33bdb8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x559d1f33bda0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x559d1f33bd68 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x559d1f33bee0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559d1f33bec0 <col:79> 'int' 0
|   |   `-CallExpr 0x559d1f33c190 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x559d1f33c178 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559d1f33c158 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559d1ee8d940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559d1f33c1d0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f33bfc8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x559d1f33c1e8 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f33c010 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559d1f33c200 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559d1f33c048 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x559d1f33c218 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559d1f33c140 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559d1f33c128 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559d1f33c0e8 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x559d1f33c4d8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x559d1f33c4c0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x559d1f33c4a8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x559d1f33c478 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x559d1f33c3f0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x559d1f33c3c0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x559d1f33c370 <col:67, col:76> 'char const[48]' lvalue ->c 0x559d1f32bb40
|             |   `-CXXMemberCallExpr 0x559d1f33c350 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x559d1f33c320 <col:67> '<bound member function type>' ->xanno 0x559d1f320c88
|             |       `-CXXThisExpr 0x559d1f33c310 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x559d1f33c3d8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x559d1f33c3a0 <col:80> 'int' lvalue ParmVar 0x559d1f324bc0 'i' 'int'
|-CXXMethodDecl 0x559d1f324ea8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x559d1f324d50 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x559d1f324dd0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x559d1f33cd10 <col:45, line:635:5>
|   |-ParenExpr 0x559d1f33ca58 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x559d1f33ca28 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x559d1f33c6f0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x559d1f33c6c0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x559d1f33c560 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x559d1f33c548 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x559d1f33c508 <col:23> 'int' lvalue ParmVar 0x559d1f324d50 'i' 'int'
|   |   |   | `-IntegerLiteral 0x559d1f33c528 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x559d1f33c6a0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x559d1f33c688 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x559d1f33c580 <col:33> 'int' lvalue ParmVar 0x559d1f324d50 'i' 'int'
|   |   |     `-BinaryOperator 0x559d1f33c668 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x559d1f33c650 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x559d1f33c5a0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x559d1f321070 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x559d1f33c628 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x559d1f33c610 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x559d1f33c5d8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x559d1f33c750 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x559d1f33c730 <col:79> 'int' 0
|   |   `-CallExpr 0x559d1f33c988 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x559d1f33c970 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x559d1f33c950 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559d1ee8d940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x559d1f33c9c8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f33c7c0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x559d1f33c9e0 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x559d1f33c808 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x559d1f33c9f8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x559d1f33c840 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x559d1f33ca10 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x559d1f33c938 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x559d1f33c920 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x559d1f33c8d8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x559d1f33ccf0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x559d1f33cc58 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x559d1f33cc28 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x559d1f33cbc8 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x559d1f33cb98 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x559d1f33cb48 <col:54, col:63> 'char [48]' lvalue ->c 0x559d1f32bb40
|     |     |   `-CXXMemberCallExpr 0x559d1f33cb28 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x559d1f33caf8 <col:54> '<bound member function type>' ->xanno 0x559d1f320e28
|     |     |       `-CXXThisExpr 0x559d1f33cae8 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x559d1f33cbb0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x559d1f33cb78 <col:67> 'int' lvalue ParmVar 0x559d1f324d50 'i' 'int'
|     `-CXXConstCastExpr 0x559d1f33ccc0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x559d1f33cca8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x559d1f33cc70 <col:91> 'const void *' lvalue ParmVar 0x559d1f324dd0 'x' 'const void *'
|-CXXMethodDecl 0x559d1f324f78 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x559d1f33cd98 <col:34, line:640:5>
|   `-ReturnStmt 0x559d1f33cd88 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x559d1f33cd70 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x559d1f33cd40 <col:16> 'Packet *' lvalue ->_data_packet 0x559d1f32c6f8
|         `-CXXThisExpr 0x559d1f33cd30 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x559d1f3250b8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x559d1f325028 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x559d1f335e58 <col:46> 'bool' true
|-CXXMethodDecl 0x559d1f325238 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x559d1f325170 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x559d1f3252e0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x559d1f325a90 <line:660:22> "" ""
| |-EnumConstantDecl 0x559d1f3253e0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559d1f325b00 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f3253c0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x559d1f3253a0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x559d1f31a540 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x559d1f325470 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559d1f325b18 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f325450 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x559d1f325430 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x559d1f31a5d0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x559d1f325500 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559d1f325b30 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f3254e0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x559d1f3254c0 <col:21> 'int' 0
| |-EnumConstantDecl 0x559d1f325590 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559d1f325b48 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f325570 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x559d1f325550 <col:19> 'int' 16
| |-EnumConstantDecl 0x559d1f325620 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559d1f325b60 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f325600 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x559d1f3255e0 <col:21> 'int' 16
| |-EnumConstantDecl 0x559d1f3256b0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559d1f325b78 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f325690 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x559d1f325670 <col:19> 'int' 32
| |-EnumConstantDecl 0x559d1f325740 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559d1f325b90 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f325720 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x559d1f325700 <col:19> 'int' EnumConstant 0x559d1f325590 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x559d1f3257d0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559d1f325ba8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f3257b0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x559d1f325790 <col:19> 'int' EnumConstant 0x559d1f3256b0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x559d1f3258a0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559d1f325bc0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f325880 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x559d1f325860 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x559d1f325820 <col:23> 'int' EnumConstant 0x559d1f3257d0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x559d1f325840 <col:40> 'int' 2
| |-EnumConstantDecl 0x559d1f325970 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x559d1f325bd8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x559d1f325950 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x559d1f325930 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x559d1f3258f0 <col:23> 'int' EnumConstant 0x559d1f3257d0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x559d1f325910 <col:40> 'int' 4
| `-EnumConstantDecl 0x559d1f325a40 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x559d1f325bf0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559d1f325a20 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x559d1f325a00 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x559d1f3259c0 <col:23> 'int' EnumConstant 0x559d1f3257d0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x559d1f3259e0 <col:40> 'int' 8
|-CXXMethodDecl 0x559d1f325c30 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x559d1f325cd0 <col:68> "" ""
|-CXXMethodDecl 0x559d1f325d68 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x559d1f325e08 <col:45> "" ""
|-CXXMethodDecl 0x559d1f325ea0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x559d1f325f40 <col:57> "" ""
|-CXXMethodDecl 0x559d1f325fd8 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x559d1f326078 <col:45> "" ""
|-CXXMethodDecl 0x559d1f326110 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x559d1f3261b0 <col:57> "" ""
|-CXXMethodDecl 0x559d1f326240 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x559d1f3262e0 <col:51> "" ""
|-CXXMethodDecl 0x559d1f326370 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x559d1f326410 <col:63> "" ""
|-CXXMethodDecl 0x559d1f3264a0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x559d1f326540 <col:53> "" ""
|-CXXMethodDecl 0x559d1f3265d0 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x559d1f326670 <col:65> "" ""
|-CXXMethodDecl 0x559d1f326788 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x559d1f3266f8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x559d1f326830 <col:61> "" ""
|-CXXMethodDecl 0x559d1f3269c8 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x559d1f3268b8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x559d1f326930 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x559d1f326a78 <col:67> "" ""
|-CXXMethodDecl 0x559d1f326b90 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x559d1f326b00 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x559d1f326c38 <col:63> "" ""
|-CXXMethodDecl 0x559d1f326dd0 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x559d1f326cc0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x559d1f326d38 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x559d1f326e80 <col:69> "" ""
|-CXXMethodDecl 0x559d1f326f98 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x559d1f326f08 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x559d1f327040 <col:63> "" ""
|-CXXMethodDecl 0x559d1f329718 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x559d1f329608 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x559d1f329680 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x559d1f3297c8 <col:69> "" ""
|-CXXMethodDecl 0x559d1f3298e0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x559d1f329850 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x559d1f329988 <col:62> "" ""
|-CXXMethodDecl 0x559d1f329b20 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x559d1f329a10 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x559d1f329a88 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x559d1f329bd0 <col:68> "" ""
|-CXXMethodDecl 0x559d1f329ce8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x559d1f329c58 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x559d1f329d90 <col:63> "" ""
|-CXXMethodDecl 0x559d1f329f28 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x559d1f329e18 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x559d1f329e90 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x559d1f329fd8 <col:69> "" ""
|-CXXMethodDecl 0x559d1f32a068 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x559d1f32a108 <col:64> "" ""
|-CXXMethodDecl 0x559d1f32a198 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x559d1f32a238 <col:52> "" ""
|-CXXMethodDecl 0x559d1f32a2c8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x559d1f32a368 <col:67> "" ""
|-CXXMethodDecl 0x559d1f32a3f8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x559d1f32a498 <col:55> "" ""
|-CXXMethodDecl 0x559d1f32a5b0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x559d1f32a520 <col:32> col:35 'int'
| `-DeprecatedAttr 0x559d1f32a658 <col:58> "" ""
|-CXXMethodDecl 0x559d1f32a7f0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x559d1f32a6e0 <col:33> col:36 'int'
| |-ParmVarDecl 0x559d1f32a758 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x559d1f32a8a0 <col:62> "" ""
|-CXXMethodDecl 0x559d1f32a9b8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x559d1f32a928 <col:32> col:35 'int'
| `-DeprecatedAttr 0x559d1f32aa60 <col:58> "" ""
|-CXXMethodDecl 0x559d1f32abf8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x559d1f32aae8 <col:33> col:36 'int'
| |-ParmVarDecl 0x559d1f32ab60 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x559d1f32aca8 <col:62> "" ""
|-CXXMethodDecl 0x559d1f32adc0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x559d1f32ad30 <col:34> col:37 'int'
| `-DeprecatedAttr 0x559d1f32ae68 <col:60> "" ""
|-CXXMethodDecl 0x559d1f32b000 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x559d1f32aef0 <col:34> col:37 'int'
| |-ParmVarDecl 0x559d1f32af68 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x559d1f32b0b0 <col:64> "" ""
|-CXXMethodDecl 0x559d1f32b1c8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x559d1f32b138 <col:32> col:35 'int'
| `-DeprecatedAttr 0x559d1f32b270 <col:58> "" ""
|-CXXMethodDecl 0x559d1f32b408 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x559d1f32b2f8 <col:33> col:36 'int'
| |-ParmVarDecl 0x559d1f32b370 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x559d1f32b4b8 <col:62> "" ""
|-CXXMethodDecl 0x559d1f32b5d0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x559d1f32b540 <col:33> col:36 'int'
| `-DeprecatedAttr 0x559d1f32b678 <col:59> "" ""
|-CXXMethodDecl 0x559d1f32b810 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x559d1f32b700 <col:33> col:36 'int'
| |-ParmVarDecl 0x559d1f32b778 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x559d1f32b8c0 <col:63> "" ""
|-AccessSpecDecl 0x559d1f32b930 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x559d1f32b958 prev 0x559d1f320b60 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x559d1f32ba50 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x559d1f32bb40 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x559d1f32bc68 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x559d1f32bde8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x559d1f32bf68 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x559d1f32c0e8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x559d1f33cf18 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x559d1f33d788 <col:11>
| |-CXXDestructorDecl 0x559d1f33cff0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x559d1f33d128 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x559d1f33d128
| | `-ParmVarDecl 0x559d1f33d238 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x559d1f33d2d8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x559d1f33d2d8
| | `-ParmVarDecl 0x559d1f33d3e8 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x559d1f3401a8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x559d1f3402b8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x559d1f340538 <col:11>
| |   `-ReturnStmt 0x559d1f340528 <col:11>
| |     `-UnaryOperator 0x559d1f340510 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x559d1f340500 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x559d1f340328 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x559d1f340328
|   `-ParmVarDecl 0x559d1f340438 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x559d1f32c150 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x559d1f32c268 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x559d1f32c308 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x559d1f32c370 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x559d1f32c3d8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x559d1f32c440 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x559d1f32c4a0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x559d1f32c560 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x559d1f32c5c0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x559d1f32c620 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x559d1f33ce28 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x559d1f32c308 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x559d1f33d798 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x559d1f33d7f0 <col:12>
| |-CXXConstructorDecl 0x559d1f33d458 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x559d1f33d458
| | `-ParmVarDecl 0x559d1f33d568 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x559d1f33d608 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x559d1f33d608
| | `-ParmVarDecl 0x559d1f33d718 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x559d1f33f890 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x559d1f32c698 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x559d1f32c6f8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x559d1f32c760 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x559d1f32c7c8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x559d1f32c830 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x559d1f32c898 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x559d1f32c8f8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x559d1f32c958 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x559d1f32c9c0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x559d1f32ca48 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x559d1f32c698 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x559d1f33cdc0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x559d1f32c8f8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x559d1f33d800 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x559d1f33d860 <col:21, line:755:5>
|-CXXConstructorDecl 0x559d1f32cbe8 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x559d1f32cb28 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x559d1f32cce0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x559d1f32cec8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x559d1f32cdd0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x559d1f32d198 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x559d1f32cf80 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x559d1f32cff8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x559d1f32d070 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559d1f32d3b8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x559d1f32d268 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x559d1f32d2e0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x559d1f335998 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x559d1f32d478 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x559d1f32d4f0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x559d1f32d568 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x559d1f335af0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x559d1f335a60 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x559d1f335c38 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x559d1f335ba8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x559d1f335d30 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559d1f126150 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x559d1f126268 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x559d1f126308 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x559d1f126368 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x559d1f1263c8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x559d1f126478 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559d1f126780 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559d1f126898 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x559d1f126940 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x559d1f1269a8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x559d1f126a38 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x559d1f12cad0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x559d1f12cf08 <col:12>
|-CXXConstructorDecl 0x559d1f12cbd8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x559d1f12cce8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x559d1f126940 'data' 'const char *'
| | `-ImplicitCastExpr 0x559d1f12f490 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x559d1f12f460 <col:12> 'const char *const' lvalue .data 0x559d1f126940
| |     `-DeclRefExpr 0x559d1f12f440 <col:12> 'const String::rep_t' lvalue ParmVar 0x559d1f12cce8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x559d1f1269a8 'length' 'int'
| | `-ImplicitCastExpr 0x559d1f12f520 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x559d1f12f4f0 <col:12> 'const int' lvalue .length 0x559d1f1269a8
| |     `-DeclRefExpr 0x559d1f12f4d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x559d1f12cce8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x559d1f126a38 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x559d1f12f5b0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x559d1f12f580 <col:12> 'String::memo_t *const' lvalue .memo 0x559d1f126a38
| |     `-DeclRefExpr 0x559d1f12f560 <col:12> 'const String::rep_t' lvalue ParmVar 0x559d1f12cce8 '' 'const String::rep_t &'
| `-CompoundStmt 0x559d1f12f608 <col:12>
|-CXXConstructorDecl 0x559d1f12cd88 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x559d1f12cd88
| `-ParmVarDecl 0x559d1f12ce98 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x559d1f1323f0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x559d1f13de08 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x559d1f13df18 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x559d1f13e430 <col:12>
|   |-BinaryOperator 0x559d1f13e248 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x559d1f13e200 <col:12> 'const char *' lvalue ->data 0x559d1f126940
|   | | `-CXXThisExpr 0x559d1f13e1f0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x559d1f13e230 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x559d1f13e1c0 <col:12> 'const char *const' lvalue .data 0x559d1f126940
|   |     `-DeclRefExpr 0x559d1f13e1a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x559d1f13df18 '' 'const String::rep_t &'
|   |-BinaryOperator 0x559d1f13e310 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x559d1f13e2c8 <col:12> 'int' lvalue ->length 0x559d1f1269a8
|   | | `-CXXThisExpr 0x559d1f13e2b8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x559d1f13e2f8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x559d1f13e288 <col:12> 'const int' lvalue .length 0x559d1f1269a8
|   |     `-DeclRefExpr 0x559d1f13e268 <col:12> 'const String::rep_t' lvalue ParmVar 0x559d1f13df18 '' 'const String::rep_t &'
|   |-BinaryOperator 0x559d1f13e3d8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x559d1f13e390 <col:12> 'String::memo_t *' lvalue ->memo 0x559d1f126a38
|   | | `-CXXThisExpr 0x559d1f13e380 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x559d1f13e3c0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x559d1f13e350 <col:12> 'String::memo_t *const' lvalue .memo 0x559d1f126a38
|   |     `-DeclRefExpr 0x559d1f13e330 <col:12> 'const String::rep_t' lvalue ParmVar 0x559d1f13df18 '' 'const String::rep_t &'
|   `-ReturnStmt 0x559d1f13e420 <col:12>
|     `-UnaryOperator 0x559d1f13e408 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x559d1f13e3f8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x559d1f13df88 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x559d1f13df88
  `-ParmVarDecl 0x559d1f13e098 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559d1f11d6c0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x559d1f11d7d8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x559d1f11d868 <col:16, col:22> col:16 public
|-TypedefDecl 0x559d1f11d8a8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x559d1edf3fd0 'const char *'
|   `-QualType 0x559d1edf3521 'const char' const
|     `-BuiltinType 0x559d1edf3520 'char'
|-TypedefDecl 0x559d1f11d930 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x559d1f11d900 'String::const_iterator' sugar
|   |-Typedef 0x559d1f11d8a8 'const_iterator'
|   `-PointerType 0x559d1edf3fd0 'const char *'
|     `-QualType 0x559d1edf3521 'const char' const
|       `-BuiltinType 0x559d1edf3520 'char'
|-TypedefDecl 0x559d1f11daa0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x559d1f11da10 'int (String::*)() const'
|   |-RecordType 0x559d1f11d750 'String'
|   | `-CXXRecord 0x559d1f11d6c0 'String'
|   `-ParenType 0x559d1f11d9b0 'int () const' sugar
|     `-FunctionProtoType 0x559d1f0f2550 'int () const' const cdecl
|       `-BuiltinType 0x559d1edf3580 'int'
|-TypedefDecl 0x559d1f11db08 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x559d1ef47130 'int64_t' sugar
|   |-Typedef 0x559d1ee5c390 'int64_t'
|   `-TypedefType 0x559d1ee35630 '__int64_t' sugar
|     |-Typedef 0x559d1ee35208 '__int64_t'
|     `-BuiltinType 0x559d1edf35a0 'long'
|-TypedefDecl 0x559d1f11db70 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x559d1ef47050 'uint64_t' sugar
|   |-Typedef 0x559d1ee5c530 'uint64_t'
|   `-TypedefType 0x559d1ee356c0 '__uint64_t' sugar
|     |-Typedef 0x559d1ee35278 '__uint64_t'
|     `-BuiltinType 0x559d1edf3640 'unsigned long'
|-TypedefDecl 0x559d1f11dc00 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x559d1f11dbd0 'String::intmax_t' sugar
|   |-Typedef 0x559d1f11db08 'intmax_t'
|   `-TypedefType 0x559d1ef47130 'int64_t' sugar
|     |-Typedef 0x559d1ee5c390 'int64_t'
|     `-TypedefType 0x559d1ee35630 '__int64_t' sugar
|       |-Typedef 0x559d1ee35208 '__int64_t'
|       `-BuiltinType 0x559d1edf35a0 'long'
|-TypedefDecl 0x559d1f11dc90 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x559d1f11dc60 'String::uintmax_t' sugar
|   |-Typedef 0x559d1f11db70 'uintmax_t'
|   `-TypedefType 0x559d1ef47050 'uint64_t' sugar
|     |-Typedef 0x559d1ee5c530 'uint64_t'
|     `-TypedefType 0x559d1ee356c0 '__uint64_t' sugar
|       |-Typedef 0x559d1ee35278 '__uint64_t'
|       `-BuiltinType 0x559d1edf3640 'unsigned long'
|-CXXConstructorDecl 0x559d1f11dd50 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x559d1f11def8 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x559d1f11de38 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x559d1f11e0a8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x559d1f11dfe8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x559d1f11e200 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x559d1f11e170 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x559d1f11e418 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x559d1f11e2c8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x559d1f11e348 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x559d1f11e638 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x559d1f11e4e8 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x559d1f11e568 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x559d1f11e858 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x559d1f11e708 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x559d1f11e788 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x559d1f11ea78 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x559d1f11e928 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x559d1f11e9a8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x559d1f11ec08 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x559d1f11eb40 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x559d1f11ed88 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x559d1f11ecc8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x559d1f11ef18 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x559d1f11ee50 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x559d1f11f070 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x559d1f11efe0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x559d1f11f1c8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x559d1f11f138 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x559d1f11f320 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x559d1f11f290 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x559d1f11f4a8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x559d1f11f3e8 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x559d1f11f638 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x559d1f11f570 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x559d1f11f7c8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x559d1f11f700 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x559d1f11f958 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x559d1f11f890 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x559d1f11fa50 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x559d1f11fb78 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x559d1f11fcf8 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x559d1f11fc30 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x559d1f11fe48 <line:71:5, col:74> col:26 used make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x559d1f11fdb8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x559d1f11ff00 <col:63> "" ""
|-CXXMethodDecl 0x559d1f120048 <line:72:5, col:54> col:26 used make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x559d1f11ff88 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x559d1f120258 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x559d1f120108 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x559d1f120188 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x559d1f120478 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x559d1f120320 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x559d1f1203a0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x559d1f120758 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x559d1f120538 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x559d1f1205b8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x559d1f12c5a0 <col:55> 'int' 10
| `-ParmVarDecl 0x559d1f120630 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x559d1f12c5c0 <col:76> 'bool' true
|-CXXMethodDecl 0x559d1f120a38 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x559d1f120820 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x559d1f1208a0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x559d1f12c5d0 <col:56> 'int' 10
| `-ParmVarDecl 0x559d1f120918 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x559d1f12c5f0 <col:77> 'bool' true
|-CXXMethodDecl 0x559d1f120b40 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x559d1f120c08 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x559d1f120cd0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x559d1f120d70 <col:20>
| `-OptimizeNoneAttr 0x559d1f120dc8 <col:30>
|-CXXConversionDecl 0x559d1f120eb8 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x559d1f120f88 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x559d1f121048 <line:85:5, col:29> col:17 used operator! 'bool () const' inline
|-CXXMethodDecl 0x559d1f121138 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x559d1f1211f8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x559d1f121378 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x559d1f1212b0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x559d1f1214c8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x559d1f121438 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x559d1f1215b8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x559d1f121678 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x559d1f1218c8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x559d1f121730 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x559d1f1217b0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x559d1f121b28 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x559d1f121990 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x559d1f121a10 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x559d1f121bf8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x559d1f121e08 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x559d1f121cb0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x559d1f121d30 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x559d1f122028 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x559d1f121ed0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x559d1f121f50 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x559d1f1221b8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x559d1f1220f0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x559d1f1222a8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x559d1f122418 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x559d1f122358 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x559d1f122628 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x559d1f1224d8 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x559d1f122558 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x559d1f122840 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x559d1f1226e8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x559d1f122760 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x559d1f1229d0 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x559d1f122900 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x559d1f122bf0 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x559d1f122a90 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x559d1f122b10 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x559d1f122d40 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x559d1f122cb0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x559d1f122f18 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x559d1f122e00 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x559d1f122e80 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x559d1f123068 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x559d1f122fd8 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x559d1f123280 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x559d1f123120 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x559d1f1231a0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x559d1f12c600 <col:39> 'int' 0
|-CXXMethodDecl 0x559d1f1234a0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x559d1f123340 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x559d1f1233c0 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x559d1f12c620 <col:48> 'int' 0
|-CXXMethodDecl 0x559d1f123680 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x559d1f123560 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x559d1f1235e0 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x559d1f12c640 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x559d1f123750 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x559d1f123810 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x559d1f1238d0 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x559d1f123990 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x559d1f123a50 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x559d1f123bf8 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x559d1f123b00 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x559d1f123d78 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x559d1f123cb0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x559d1f123f50 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x559d1f123e38 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x559d1f1240c8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x559d1f124008 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x559d1f124210 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x559d1f124180 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x559d1f124360 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x559d1f1242d0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x559d1f124538 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x559d1f124420 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x559d1f1244a0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x559d1f124718 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x559d1f124600 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x559d1f124680 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x559d1f124868 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x559d1f1247d8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x559d1f124a78 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x559d1f124928 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x559d1f1249a8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x559d1f124bd8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x559d1f124b40 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x559d1f124d30 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x559d1f124c98 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x559d1f124dd8 <col:57> "" ""
|-CXXMethodDecl 0x559d1f124ee8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x559d1f124e58 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x559d1f125038 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x559d1f124fa8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x559d1f1251b8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x559d1f1250f0 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x559d1f125280 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x559d1f125340 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x559d1f125400 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x559d1f1254a0 <col:49> "" ""
|-CXXMethodDecl 0x559d1f125530 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x559d1f1255f0 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x559d1f1256e0 <line:167:5, col:24> col:11 used mutable_data 'char *()'
|-CXXMethodDecl 0x559d1f1257a8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x559d1f125868 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x559d1f125928 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x559d1f125a20 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x559d1f125ae8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x559d1f125bb0 <line:174:5, col:42> col:31 used empty_data 'const char *()' static inline
|-CXXMethodDecl 0x559d1f125d88 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x559d1f125c68 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x559d1f125ce8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x559d1f125fb0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x559d1f125e50 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x559d1f125ed0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x559d1f1260c0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x559d1f126128 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x559d1f126150 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x559d1f126268 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x559d1f126308 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x559d1f126368 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x559d1f1263c8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x559d1f126478 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x559d1f1264e0 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x559d1f126718 <line:201:2, col:32> col:2 referenced MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x559d1f126768 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559d1f1266f8 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x559d1f126608 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x559d1f1265b0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x559d1f1265f0 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x559d1f1265d0 <col:32> 'int' 8
|-CXXRecordDecl 0x559d1f126780 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x559d1f126898 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x559d1f126940 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x559d1f1269a8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x559d1f126a38 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x559d1f12cad0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x559d1f12cf08 <col:12>
| |-CXXConstructorDecl 0x559d1f12cbd8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x559d1f12cce8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x559d1f126940 'data' 'const char *'
| | | `-ImplicitCastExpr 0x559d1f12f490 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x559d1f12f460 <col:12> 'const char *const' lvalue .data 0x559d1f126940
| | |     `-DeclRefExpr 0x559d1f12f440 <col:12> 'const String::rep_t' lvalue ParmVar 0x559d1f12cce8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x559d1f1269a8 'length' 'int'
| | | `-ImplicitCastExpr 0x559d1f12f520 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x559d1f12f4f0 <col:12> 'const int' lvalue .length 0x559d1f1269a8
| | |     `-DeclRefExpr 0x559d1f12f4d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x559d1f12cce8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x559d1f126a38 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x559d1f12f5b0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x559d1f12f580 <col:12> 'String::memo_t *const' lvalue .memo 0x559d1f126a38
| | |     `-DeclRefExpr 0x559d1f12f560 <col:12> 'const String::rep_t' lvalue ParmVar 0x559d1f12cce8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x559d1f12f608 <col:12>
| |-CXXConstructorDecl 0x559d1f12cd88 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x559d1f12cd88
| | `-ParmVarDecl 0x559d1f12ce98 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x559d1f1323f0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x559d1f13de08 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x559d1f13df18 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x559d1f13e430 <col:12>
| |   |-BinaryOperator 0x559d1f13e248 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x559d1f13e200 <col:12> 'const char *' lvalue ->data 0x559d1f126940
| |   | | `-CXXThisExpr 0x559d1f13e1f0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x559d1f13e230 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x559d1f13e1c0 <col:12> 'const char *const' lvalue .data 0x559d1f126940
| |   |     `-DeclRefExpr 0x559d1f13e1a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x559d1f13df18 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x559d1f13e310 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x559d1f13e2c8 <col:12> 'int' lvalue ->length 0x559d1f1269a8
| |   | | `-CXXThisExpr 0x559d1f13e2b8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x559d1f13e2f8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x559d1f13e288 <col:12> 'const int' lvalue .length 0x559d1f1269a8
| |   |     `-DeclRefExpr 0x559d1f13e268 <col:12> 'const String::rep_t' lvalue ParmVar 0x559d1f13df18 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x559d1f13e3d8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x559d1f13e390 <col:12> 'String::memo_t *' lvalue ->memo 0x559d1f126a38
| |   | | `-CXXThisExpr 0x559d1f13e380 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x559d1f13e3c0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x559d1f13e350 <col:12> 'String::memo_t *const' lvalue .memo 0x559d1f126a38
| |   |     `-DeclRefExpr 0x559d1f13e330 <col:12> 'const String::rep_t' lvalue ParmVar 0x559d1f13df18 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x559d1f13e420 <col:12>
| |     `-UnaryOperator 0x559d1f13e408 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x559d1f13e3f8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x559d1f13df88 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x559d1f13df88
|   `-ParmVarDecl 0x559d1f13e098 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x559d1f126ab0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x559d1f126cf8 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x559d1f126b18 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x559d1f126b98 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x559d1f126c10 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x559d1f12ca90 <col:79, line:261:5>
|   |-BinaryOperator 0x559d1f12c708 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x559d1f12c6a0 <col:2, col:5> 'const char *' lvalue .data 0x559d1f126940
|   | | `-MemberExpr 0x559d1f12c670 <col:2> 'String::rep_t' lvalue ->_r 0x559d1f126ab0
|   | |   `-CXXThisExpr 0x559d1f12c660 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x559d1f12c6f0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x559d1f12c6d0 <col:12> 'const char *' lvalue ParmVar 0x559d1f126b18 'data' 'const char *'
|   |-BinaryOperator 0x559d1f12c7d0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x559d1f12c768 <col:2, col:5> 'int' lvalue .length 0x559d1f1269a8
|   | | `-MemberExpr 0x559d1f12c738 <col:2> 'String::rep_t' lvalue ->_r 0x559d1f126ab0
|   | |   `-CXXThisExpr 0x559d1f12c728 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x559d1f12c7b8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x559d1f12c798 <col:14> 'int' lvalue ParmVar 0x559d1f126b98 'length' 'int'
|   `-IfStmt 0x559d1f12ca78 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x559d1f12c8f0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x559d1f12c8d8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x559d1f12c8b8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x559d1f12c898 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x559d1f12c830 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x559d1f126a38
|     |       | `-MemberExpr 0x559d1f12c800 <col:7> 'String::rep_t' lvalue ->_r 0x559d1f126ab0
|     |       |   `-CXXThisExpr 0x559d1f12c7f0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x559d1f12c880 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x559d1f12c860 <col:17> 'String::memo_t *' lvalue ParmVar 0x559d1f126c10 'memo' 'String::memo_t *'
|     `-CallExpr 0x559d1f12ca50 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x559d1f12ca38 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x559d1f12c940 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x559d1f115728 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x559d1f12c9a8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x559d1f126308
|         `-ImplicitCastExpr 0x559d1f12c990 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x559d1f12c970 <col:27> 'String::memo_t *' lvalue ParmVar 0x559d1f126c10 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x559d1f126fa8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x559d1f126dc8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x559d1f126e48 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x559d1f126ec0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x559d1f126ab0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x559d1f12cf18 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x559d1f12d0a8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x559d1f12d010 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x559d1f12cf80 <col:2> '<bound member function type>' ->assign_memo 0x559d1f126cf8
|     | `-ImplicitCastExpr 0x559d1f12d048 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x559d1f12cf70 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x559d1f12d060 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x559d1f12cfb0 <col:14> 'const char *' lvalue ParmVar 0x559d1f126dc8 'data' 'const char *'
|     |-ImplicitCastExpr 0x559d1f12d078 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x559d1f12cfd0 <col:20> 'int' lvalue ParmVar 0x559d1f126e48 'length' 'int'
|     `-ImplicitCastExpr 0x559d1f12d090 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x559d1f12cff0 <col:28> 'String::memo_t *' lvalue ParmVar 0x559d1f126ec0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x559d1f127138 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x559d1f127078 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x559d1f12d300 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x559d1f12d280 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x559d1f12d0d0 <col:2> '<bound member function type>' ->assign_memo 0x559d1f126cf8
|     | `-CXXThisExpr 0x559d1f12d0c0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x559d1f12d2b8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x559d1f12d150 <col:14, col:19> 'const char *' lvalue .data 0x559d1f126940
|     |   `-MemberExpr 0x559d1f12d120 <col:14, col:16> 'String::rep_t' lvalue ._r 0x559d1f126ab0
|     |     `-DeclRefExpr 0x559d1f12d100 <col:14> 'const String' lvalue ParmVar 0x559d1f127078 'x' 'const String &'
|     |-ImplicitCastExpr 0x559d1f12d2d0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x559d1f12d1d0 <col:25, col:30> 'int' lvalue .length 0x559d1f1269a8
|     |   `-MemberExpr 0x559d1f12d1a0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x559d1f126ab0
|     |     `-DeclRefExpr 0x559d1f12d180 <col:25> 'const String' lvalue ParmVar 0x559d1f127078 'x' 'const String &'
|     `-ImplicitCastExpr 0x559d1f12d2e8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x559d1f12d250 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x559d1f126a38
|         `-MemberExpr 0x559d1f12d220 <col:38, col:40> 'String::rep_t' lvalue ._r 0x559d1f126ab0
|           `-DeclRefExpr 0x559d1f12d200 <col:38> 'const String' lvalue ParmVar 0x559d1f127078 'x' 'const String &'
|-CXXMethodDecl 0x559d1f127200 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x559d1f12dcc0 <col:31, line:278:5>
|   `-IfStmt 0x559d1f12dca8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x559d1f12d3a0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x559d1f12d388 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x559d1f12d358 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x559d1f126a38
|     |     `-MemberExpr 0x559d1f12d328 <col:6> 'String::rep_t' lvalue ->_r 0x559d1f126ab0
|     |       `-CXXThisExpr 0x559d1f12d318 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x559d1f12dc80 <col:15, line:277:2>
|       |-ParenExpr 0x559d1f12d850 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x559d1f12d820 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x559d1f12d4b0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x559d1f12d498 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x559d1f12d480 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x559d1f12d440 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x559d1f126308
|       |   |       `-ImplicitCastExpr 0x559d1f12d428 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x559d1f12d3f8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x559d1f126a38
|       |   |           `-MemberExpr 0x559d1f12d3c8 <col:27> 'String::rep_t' lvalue ->_r 0x559d1f126ab0
|       |   |             `-CXXThisExpr 0x559d1f12d3b8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x559d1f12d510 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x559d1f12d4f0 <col:54> 'int' 0
|       |   `-CallExpr 0x559d1f12d780 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x559d1f12d768 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x559d1f12d6e8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x559d1ee8d940 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x559d1f12d7c0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x559d1f12d5f8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x559d1f12d7d8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x559d1f12d628 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x559d1f12d7f0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x559d1f12d660 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x559d1f12d808 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x559d1f12d6d0 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x559d1f12d6b8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x559d1f12d680 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x559d1f12dba0 <line:274:6, line:275:22>
|       | |-CallExpr 0x559d1f12da60 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x559d1f12da48 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x559d1f12d9c0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x559d1f116b70 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x559d1f12d990 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x559d1f126308
|       | |   `-ImplicitCastExpr 0x559d1f12d978 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x559d1f12d948 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x559d1f126a38
|       | |       `-MemberExpr 0x559d1f12d918 <col:40> 'String::rep_t' lvalue ->_r 0x559d1f126ab0
|       | |         `-CXXThisExpr 0x559d1f12d908 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x559d1f12db60 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x559d1f12db48 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x559d1f12da88 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x559d1f12b9e0 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x559d1f12db88 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x559d1f12dae8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x559d1f126a38
|       |       `-MemberExpr 0x559d1f12dab8 <col:15> 'String::rep_t' lvalue ->_r 0x559d1f126ab0
|       |         `-CXXThisExpr 0x559d1f12daa8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x559d1f12dc60 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x559d1f12dbf8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x559d1f126a38
|         | `-MemberExpr 0x559d1f12dbc8 <col:6> 'String::rep_t' lvalue ->_r 0x559d1f126ab0
|         |   `-CXXThisExpr 0x559d1f12dbb8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x559d1f12dc48 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x559d1f12dc28 <col:16> 'int' 0
|-CXXMethodDecl 0x559d1f127498 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x559d1f1272b8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x559d1f127338 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x559d1f1273b0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x559d1f127570 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x559d1f1277c0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x559d1f127628 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x559d1f1276a8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x559d1f127720 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x559d1f1279a8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x559d1f127890 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x559d1f127910 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x559d1f127aa8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x559d1f12dd98 <col:41, line:286:5>
|   `-ReturnStmt 0x559d1f12dd88 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x559d1f12dd58 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x559d1f12dd20 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x559d1f12dd08 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x559d1f12dce8 <col:46> 'int' 1
|-CXXMethodDecl 0x559d1f127d48 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x559d1f127b60 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x559d1f127be0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x559d1f127c60 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x559d1f12b9e0 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x559d1f127e10 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x559d1f12bab0 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x559d1f12bc80 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x559d1f12bb68 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x559d1f12bbe8 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x559d1f12bd40 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x559d1f12be08 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x559d1f12bf08 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x559d1f12bf80 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x559d1f12bff8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x559d1f12c060 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x559d1f12c160 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x559d1f12c1b0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x559d1f12c140 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x559d1f12c120 <col:22> 'int' 14
|-CXXMethodDecl 0x559d1f12c3c8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x559d1f12c1e0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x559d1f12c260 <col:38> col:41 'int'
| `-ParmVarDecl 0x559d1f12c2e0 <col:43> col:46 'int'
|-FriendDecl 0x559d1f12c4d0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x559d1f12c560 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_ip
     0:0-3 |   unsigned int ip_hl
     0:4-7 |   unsigned int ip_v
         1 |   uint8_t ip_tos
         2 |   uint16_t ip_len
         4 |   uint16_t ip_id
         6 |   uint16_t ip_off
         8 |   uint8_t ip_ttl
         9 |   uint8_t ip_p
        10 |   uint16_t ip_sum
        12 |   struct in_addr ip_src
        12 |     in_addr_t s_addr
        16 |   struct in_addr ip_dst
        16 |     in_addr_t s_addr
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559d1f087e98 </usr/include/netinet/in.h:31:1, line:34:3> line:31:8 struct in_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x559d1f087fb8 <col:1, col:8> col:8 implicit struct in_addr
|-FieldDecl 0x559d1f088080 <line:33:5, col:15> col:15 referenced s_addr 'in_addr_t':'unsigned int'
|-CXXConstructorDecl 0x559d1f158650 <line:31:8> col:8 implicit used in_addr 'void () noexcept' inline default trivial
| `-CompoundStmt 0x559d1f15d968 <col:8>
|-CXXConstructorDecl 0x559d1f158758 <col:8> col:8 implicit constexpr in_addr 'void (const in_addr &)' inline default trivial noexcept-unevaluated 0x559d1f158758
| `-ParmVarDecl 0x559d1f158868 <col:8> col:8 'const in_addr &'
|-CXXConstructorDecl 0x559d1f158908 <col:8> col:8 implicit used constexpr in_addr 'void (in_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x559d1f158a18 <col:8> col:8 used 'in_addr &&'
| |-CXXCtorInitializer Field 0x559d1f088080 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x559d1f15db80 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x559d1f15db50 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x559d1f088080
| |     `-CXXStaticCastExpr 0x559d1f15db20 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
| |       `-DeclRefExpr 0x559d1f15daf0 <col:8> 'in_addr' lvalue ParmVar 0x559d1f158a18 '' 'in_addr &&'
| `-CompoundStmt 0x559d1f15dbc8 <col:8>
`-CXXDestructorDecl 0x559d1f15de00 <col:8> col:8 implicit referenced ~in_addr 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.in_addr = type { i32 }
  NonVirtualBaseLLVMType:%struct.in_addr = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x559d1f150338 <../dummy_inc/clicknet/ip.h:23:1, line:52:1> line:23:8 struct click_ip definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x559d1f150458 <col:1, col:8> col:8 implicit struct click_ip
|-FieldDecl 0x559d1f150540 <line:28:5, col:22> col:14 referenced ip_hl 'unsigned int'
| `-ConstantExpr 0x559d1f150520 <col:22> 'int' Int: 4
|   `-IntegerLiteral 0x559d1f1504e8 <col:22> 'int' 4
|-FieldDecl 0x559d1f1505e8 <line:29:5, col:21> col:14 ip_v 'unsigned int'
| `-ConstantExpr 0x559d1f1505c8 <col:21> 'int' Int: 4
|   `-IntegerLiteral 0x559d1f150590 <col:21> 'int' 4
|-FieldDecl 0x559d1f150648 <line:33:5, col:13> col:13 ip_tos 'uint8_t':'unsigned char'
|-FieldDecl 0x559d1f1506a8 <line:40:5, col:14> col:14 ip_len 'uint16_t':'unsigned short'
|-FieldDecl 0x559d1f150708 <line:41:5, col:14> col:14 ip_id 'uint16_t':'unsigned short'
|-FieldDecl 0x559d1f150768 <line:42:5, col:14> col:14 ip_off 'uint16_t':'unsigned short'
|-FieldDecl 0x559d1f1507c8 <line:47:5, col:13> col:13 ip_ttl 'uint8_t':'unsigned char'
|-FieldDecl 0x559d1f150828 <line:48:5, col:13> col:13 referenced ip_p 'uint8_t':'unsigned char'
|-FieldDecl 0x559d1f150888 <line:49:5, col:14> col:14 ip_sum 'uint16_t':'unsigned short'
|-FieldDecl 0x559d1f1508f8 <line:50:5, col:20> col:20 referenced ip_src 'struct in_addr':'in_addr'
`-FieldDecl 0x559d1f150968 <line:51:5, col:20> col:20 referenced ip_dst 'struct in_addr':'in_addr'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  NonVirtualBaseLLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
]>
