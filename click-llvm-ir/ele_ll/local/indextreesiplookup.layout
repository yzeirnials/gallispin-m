
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56379f643378 prev 0x56379f63abd8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56379f643480 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x56379f643510 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x56379f643588 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x56379f643648 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x56379f643710 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x56379f643888 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x56379f6437c0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x56379f643930 <col:24>
| `-OptimizeNoneAttr 0x56379f643988 <col:34>
|-CXXMethodDecl 0x56379f6439d0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x56379f643c88 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x56379f643a80 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x56379f643af8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x56379f643b78 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x56379f643d40 <line:229:7, col:14> col:7 private
|-FieldDecl 0x56379f643d78 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x56379f643de0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x56379f643e68 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x56379f644188 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x56379f643f20 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x56379f643f98 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x56379f644010 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x56379f644090 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x56379f6442a0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x56379f64ab88 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x56379f64ab88
| `-ParmVarDecl 0x56379f64ac98 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x56379f64ad38 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x56379f64ad38
| `-ParmVarDecl 0x56379f64ae48 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x56379f65c500 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56379f636650 prev 0x56379f6363f0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56379f636748 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x56379f6367d8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x56379f636838 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x56379f636928 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x56379f636a28 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x56379f636bf8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x56379f636aa8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x56379f636b20 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x56379f636d88 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x56379f636cc0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x56379f636e30 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x56379f636f68 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x56379f636ea0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x56379f637108 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x56379f637048 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x56379f6372a8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x56379f6371e8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x56379f637350 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x56379f637450 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x56379f637530 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f637430 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x56379f637410 <col:26> 'int' 1
| `-EnumConstantDecl 0x56379f6374e0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x56379f637548 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56379f6374c0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x56379f6374a0 <col:44> 'int' 2
|-CXXMethodDecl 0x56379f637690 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x56379f637578 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x56379f6375f8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x56379f6377e8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x56379f637758 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x56379f6379f8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x56379f6378a8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x56379f637920 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x56379f637aa8 <col:20>
| `-OptimizeNoneAttr 0x56379f637b00 <col:30>
|-CXXMethodDecl 0x56379f637c08 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x56379f637b40 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x56379f637cb0 <col:20>
| `-OptimizeNoneAttr 0x56379f637d08 <col:30>
|-CXXMethodDecl 0x56379f637d58 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x56379f637e20 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x56379f637ee0 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x56379f637f68 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x56379f637ff0 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x56379f638078 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x56379f638100 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x56379f638190 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x56379f638250 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x56379f6382d8 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x56379f638360 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x56379f6383e8 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x56379f638470 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x56379f6384f8 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x56379f638588 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x56379f638648 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x56379f6386d8 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x56379f638828 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x56379f638790 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x56379f6389b0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x56379f6388e8 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x56379f638c50 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x56379f638a68 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x56379f638ae8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x56379f638b68 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x56379f638d08 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x56379f638e10 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56379f6390a0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f638df0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x56379f638dd0 <col:33> 'int' 0
| |-EnumConstantDecl 0x56379f638ea0 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56379f6390b8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f638e80 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x56379f638e60 <col:32> 'int' 20
| |-EnumConstantDecl 0x56379f638f30 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56379f6390d0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f638f10 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x56379f638ef0 <col:38> 'int' 90
| |-EnumConstantDecl 0x56379f638fc0 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56379f6390e8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f638fa0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x56379f638f80 <col:35> 'int' 100
| `-EnumConstantDecl 0x56379f639050 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x56379f639100 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56379f639030 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x56379f639010 <col:32> 'int' 2000
|-CXXMethodDecl 0x56379f639140 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x56379f639450 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56379f6392c0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x56379f639338 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56379f639520 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x56379f6396a0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x56379f6395d0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56379f6398a8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56379f639758 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x56379f6397d0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56379f6399a8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x56379f639a48 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x56379f639b10 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x56379f639ba0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x56379f639dd0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f639b80 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x56379f639b60 <col:36> 'int' EnumConstant 0x56379f639b10 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x56379f639bf0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56379f639c40 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56379f639c90 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56379f639ce0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56379f639d30 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x56379f639d80 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x56379f639eb8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x56379f639df8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x56379f639f80 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x56379f63a040 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x56379f63a100 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x56379f63a1c0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x56379f63a2a8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x56379f63a370 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x56379f63a4f0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x56379f63a420 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x56379f63a618 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x56379f63a818 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x56379f63a6c8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x56379f63a748 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x56379f647058 <col:54, line:127:5>
|   |-ParenExpr 0x56379f646f08 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x56379f646ed8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x56379f646bc0 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x56379f646b98 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x56379f646b80 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x56379f646b68 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x56379f646b38 <col:31> 'Router *' lvalue ->_router 0x56379f644a50
|   |   |         `-CXXThisExpr 0x56379f646b28 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x56379f646c20 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56379f646c00 <col:48> 'int' 0
|   |   `-CallExpr 0x56379f646e38 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x56379f646e20 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56379f646e00 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56379f0ac1f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56379f646e78 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f646c90 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x56379f646e90 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f646cb0 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x56379f646ea8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56379f646ce8 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x56379f646ec0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56379f646de8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56379f646dd0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56379f646d88 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x56379f646fa0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x56379f646f38 <col:9> 'Router *' lvalue ->_router 0x56379f644a50
|   | | `-CXXThisExpr 0x56379f646f28 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x56379f646f88 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x56379f646f68 <col:19> 'Router *' lvalue ParmVar 0x56379f63a6c8 'r' 'Router *'
|   `-BinaryOperator 0x56379f647038 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x56379f646fd0 <col:9> 'int' lvalue ->_eindex 0x56379f644ab8
|     | `-CXXThisExpr 0x56379f646fc0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x56379f647020 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x56379f647000 <col:19> 'int' lvalue ParmVar 0x56379f63a748 'eindex' 'int'
|-CXXMethodDecl 0x56379f63a9a0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x56379f63a8d8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x56379f63aa70 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x56379f63ab38 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x56379f63abd8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x56379f63ae28 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x56379f63aca0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x56379f63ad20 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x56379f63aed8 <col:20>
| `-OptimizeNoneAttr 0x56379f63af30 <col:30>
|-CXXMethodDecl 0x56379f63b038 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x56379f63af70 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x56379f63b0e0 <col:20>
| `-OptimizeNoneAttr 0x56379f63b138 <col:30>
|-CXXMethodDecl 0x56379f63b208 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x56379f63b178 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x56379f63b2b0 <col:20>
| `-OptimizeNoneAttr 0x56379f63b308 <col:30>
|-CXXMethodDecl 0x56379f63b4d8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x56379f63b340 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x56379f63b3c0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x56379f63b668 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x56379f63b5a0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x56379f63b7b8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x56379f63b728 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x56379f63b908 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x56379f63b878 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x56379f63ba58 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x56379f63b9c8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x56379f63bd18 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x56379f63bb10 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x56379f63bb90 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x56379f63bc38 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x56379f63bdf0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x56379f63beb0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x56379f63c180 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56379f63c030 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x56379f63c0a8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x56379f63c2a8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x56379f63c480 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x56379f63c360 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x56379f63c3e0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x56379f63c668 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x56379f63c548 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x56379f63c5c8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x56379f63c9d8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x56379f63c728 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56379f63c7a0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56379f63c820 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56379f646638 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56379f646618 <col:106> 'int' 0
| `-ParmVarDecl 0x56379f63c898 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56379f646670 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56379f646650 <col:126> 'int' 0
|-CXXMethodDecl 0x56379f63cd58 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56379f63caa8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56379f63cb20 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56379f63cba0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x56379f63cc18 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56379f6466a8 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56379f646688 <col:114> 'int' 0
|-CXXMethodDecl 0x56379f63d0e8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56379f63ce30 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x56379f63cea8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56379f63cf28 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x56379f6466c0 <col:96> 'int' 0
| `-ParmVarDecl 0x56379f63cfa0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56379f646700 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56379f6466e0 <col:116> 'int' 0
|-CXXMethodDecl 0x56379f63d468 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x56379f63d1b8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x56379f63d230 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56379f63d2b0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56379f646738 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56379f646718 <col:109> 'int' 0
| `-ParmVarDecl 0x56379f63d328 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56379f646770 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56379f646750 <col:129> 'int' 0
|-CXXMethodDecl 0x56379f63d7e8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56379f63d538 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x56379f63d5b0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56379f63d630 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x56379f63d6a8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56379f6467a8 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56379f646788 <col:117> 'int' 0
|-CXXMethodDecl 0x56379f63db78 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56379f63d8c0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56379f63d938 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56379f63d9b8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x56379f6467c0 <col:99> 'int' 0
| `-ParmVarDecl 0x56379f63da30 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56379f646800 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56379f6467e0 <col:119> 'int' 0
|-CXXMethodDecl 0x56379f63df98 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x56379f63dc48 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x56379f63dcc8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x56379f63dd40 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56379f63ddc0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56379f646838 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56379f646818 <col:108> 'int' 0
| `-ParmVarDecl 0x56379f63de40 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x56379f646870 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x56379f646850 <col:141> 'int' 0
|-CXXMethodDecl 0x56379f63e3b8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x56379f63e070 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x56379f63e0f0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x56379f63e168 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56379f63e1e8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x56379f63e268 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x56379f646888 <col:121> 'int' 0
|-CXXMethodDecl 0x56379f63e7e8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x56379f63e498 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x56379f63e518 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x56379f63e590 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56379f63e610 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x56379f6468a8 <col:98> 'int' 0
| `-ParmVarDecl 0x56379f63e690 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x56379f6468c8 <col:123> 'int' 0
|-CXXMethodDecl 0x56379f63eab0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x56379f63e8c0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56379f63e940 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x56379f63e9c0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x56379f6468e8 <col:80> 'int' 0
|-EnumDecl 0x56379f63eb68 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x56379f63ec70 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56379f63ef00 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f63ec50 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x56379f63ec30 <col:42> 'int' 1
| |-EnumConstantDecl 0x56379f63ed00 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56379f63ef18 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f63ece0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x56379f63ecc0 <col:40> 'int' 2
| |-EnumConstantDecl 0x56379f63ed90 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56379f63ef30 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f63ed70 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x56379f63ed50 <col:44> 'int' 4
| |-EnumConstantDecl 0x56379f63ee20 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56379f63ef48 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f63ee00 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x56379f63ede0 <col:36> 'int' 7
| `-EnumConstantDecl 0x56379f63eeb0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x56379f63ef60 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56379f63ee90 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x56379f63ee70 <col:34> 'int' 6
|-CXXMethodDecl 0x56379f63f218 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x56379f63ef88 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x56379f63f028 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x56379f63f0a8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x56379f63f120 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x56379f6469a0 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x56379f646988 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x56379f646970 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x56379f646950 <col:98, col:105> 'String' (CXXTemporary 0x56379f646950)
|           `-CXXTemporaryObjectExpr 0x56379f646918 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x56379f63f4b8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x56379f63f2e8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x56379f63f360 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x56379f63f3d8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x56379f646a50 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x56379f646a38 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x56379f646a20 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x56379f646a00 <col:94, col:101> 'String' (CXXTemporary 0x56379f646a00)
| |         `-CXXTemporaryObjectExpr 0x56379f6469c8 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x56379f647240 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x56379f6471b8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x56379f647188 <col:9> '<bound member function type>' ->add_task_handlers 0x56379f63f218
|     | `-CXXThisExpr 0x56379f647178 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x56379f6471f8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x56379f6470f8 <col:27> 'Task *' lvalue ParmVar 0x56379f63f2e8 'task' 'Task *'
|     |-ImplicitCastExpr 0x56379f647210 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x56379f647118 <col:33> 'NotifierSignal *' lvalue ParmVar 0x56379f63f360 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x56379f647228 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x56379f647138 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x56379f63eeb0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x56379f647158 <col:62> 'const String' lvalue ParmVar 0x56379f63f3d8 'prefix' 'const String &'
|-CXXMethodDecl 0x56379f63f6c8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x56379f63f580 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x56379f63f5f8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x56379f646b00 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x56379f646ae8 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x56379f646ad0 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x56379f646ab0 <col:70, col:77> 'String' (CXXTemporary 0x56379f646ab0)
| |         `-CXXTemporaryObjectExpr 0x56379f646a78 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x56379f647418 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x56379f647390 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x56379f647360 <col:9> '<bound member function type>' ->add_task_handlers 0x56379f63f218
|     | `-CXXThisExpr 0x56379f647350 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x56379f6473d0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x56379f6472d0 <col:27> 'Task *' lvalue ParmVar 0x56379f63f580 'task' 'Task *'
|     |-ImplicitCastExpr 0x56379f6473e8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x56379f6472f0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x56379f647400 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x56379f647310 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x56379f63eeb0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x56379f647330 <col:57> 'const String' lvalue ParmVar 0x56379f63f5f8 'prefix' 'const String &'
|-CXXMethodDecl 0x56379f63f9a8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x56379f63f790 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56379f63f810 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56379f63f888 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x56379f63fc58 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x56379f63fa78 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56379f63faf8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56379f63fb78 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x56379f63ff48 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x56379f63fd28 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56379f63fda8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56379f63fe20 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x56379f6401f8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x56379f640018 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56379f640098 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56379f640118 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x56379f6404a8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x56379f6402c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56379f640348 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56379f6403c8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x56379f640758 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x56379f640578 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56379f6405f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56379f640670 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x56379f640a08 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x56379f640828 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56379f6408a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56379f640928 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x56379f640cb8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x56379f640ad8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56379f640b58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56379f640bd8 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x56379f640f68 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x56379f640d88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56379f640e08 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56379f640e88 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x56379f641218 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x56379f641038 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56379f6410b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56379f641138 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x56379f641480 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x56379f6412e8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x56379f641368 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x56379f6413e0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x56379f641728 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x56379f641550 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x56379f6415d0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x56379f641648 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x56379f6419d8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x56379f6417f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56379f641878 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56379f6418f8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x56379f641c88 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x56379f641aa8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56379f641b28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56379f641ba0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x56379f641f38 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x56379f641d58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56379f641dd8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56379f641e50 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x56379f6421e8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x56379f642008 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56379f642088 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56379f642100 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x56379f642518 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x56379f6422b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56379f642338 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x56379f6423b0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x56379f642428 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56379f646b18 <col:93> 'bool' false
|-CXXMethodDecl 0x56379f642700 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56379f6425e8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x56379f642668 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x56379f6428d8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56379f6427c0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x56379f642840 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x56379f642bb8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56379f642998 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x56379f642a10 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x56379f642a90 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x56379f642b08 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x56379f642ea8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56379f642c88 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x56379f642d00 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x56379f642d80 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x56379f642df8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x56379f6430e0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x56379f642f80 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x56379f643000 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x56379f6432c8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x56379f6431a8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x56379f643228 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x56379f643378 prev 0x56379f63abd8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56379f643480 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x56379f643510 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x56379f643588 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x56379f643648 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x56379f643710 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x56379f643888 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x56379f6437c0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x56379f643930 <col:24>
| | `-OptimizeNoneAttr 0x56379f643988 <col:34>
| |-CXXMethodDecl 0x56379f6439d0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x56379f643c88 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x56379f643a80 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x56379f643af8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x56379f643b78 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x56379f643d40 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x56379f643d78 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x56379f643de0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x56379f643e68 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x56379f644188 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x56379f643f20 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x56379f643f98 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x56379f644010 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x56379f644090 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x56379f6442a0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x56379f64ab88 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x56379f64ab88
| | `-ParmVarDecl 0x56379f64ac98 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x56379f64ad38 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x56379f64ad38
| | `-ParmVarDecl 0x56379f64ae48 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x56379f65c500 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56379f644318 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x56379f6443b8 <col:38> "" ""
|-CXXMethodDecl 0x56379f644448 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x56379f6444e8 <col:44> "" ""
|-AccessSpecDecl 0x56379f644558 <line:260:3, col:10> col:3 private
|-EnumDecl 0x56379f644580 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x56379f644680 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x56379f6446d0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56379f644660 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x56379f644640 <col:27> 'int' 4
|-FieldDecl 0x56379f644788 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x56379f644938 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x56379f6449f0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x56379f644a50 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x56379f644ab8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x56379f644c08 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x56379f644b48 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x56379f644db8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x56379f644cc8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x56379f644f98 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x56379f644e78 <col:20> col:23 'int'
| `-ParmVarDecl 0x56379f644ef8 <col:25> col:28 'int'
|-CXXMethodDecl 0x56379f645240 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x56379f645060 <col:23> col:26 'int'
| |-ParmVarDecl 0x56379f6450e0 <col:28> col:31 'int'
| `-ParmVarDecl 0x56379f645158 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x56379f6452f8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x56379f6453c0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x56379f645410 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x56379f645460 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x56379f645640 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x56379f6454f0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x56379f645568 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56379f6458e8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x56379f645708 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x56379f645788 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x56379f645800 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x56379f645b08 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x56379f6459b8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x56379f645a38 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x56379f645e40 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x56379f645bc8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x56379f645c48 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x56379f645cc0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x56379f645d40 <col:57> col:60 'int'
|-CXXMethodDecl 0x56379f646028 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56379f645f10 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x56379f645f90 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x56379f646178 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x56379f6460e8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x56379f6464f8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x56379f646238 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x56379f6462b8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x56379f646330 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x56379f6463b0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x56379f6465d8 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IndexTreesIPLookup
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class TreeNode *[256] _trees
           | [sizeof=2160, dsize=2160, align=8,
           |  nvsize=2160, nvalign=8]

*** Dumping AST Record Layout
         0 | class TreeNode
         0 |   class TreeNode * _left
         8 |   class TreeNode * _right
        16 |   class TreeNode * _middle
        24 |   class IPAddress _dst
        24 |     uint32_t _addr
        28 |   class IPAddress _mask
        28 |     uint32_t _addr
        32 |   class IPAddress _gw
        32 |     uint32_t _addr
        36 |   unsigned int _port
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56379f33f7f8 prev 0x56379f319208 <../dummy_inc/click/ipaddress.hh:15:1, line:154:1> line:15:7 referenced class IPAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56379f33f8f0 <col:1, col:7> col:7 implicit referenced class IPAddress
|-AccessSpecDecl 0x56379f33f980 <col:19, col:25> col:19 public
|-TypedefDecl 0x56379f33f9b8 <line:17:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x56379f1653f0 'uninitialized_type'
|   `-CXXRecord 0x56379f165358 'uninitialized_type'
|-CXXConstructorDecl 0x56379f33fa70 <line:20:5, line:22:5> line:20:12 used IPAddress 'void ()' inline
| |-CXXCtorInitializer Field 0x56379f3421f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56379f342298 <line:21:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x56379f342258 <col:10> 'int' 0
| `-CompoundStmt 0x56379f3422e0 <col:13, line:22:5>
|-CXXConstructorDecl 0x56379f33fbc0 <line:25:5, line:27:5> line:25:12 used IPAddress 'void (unsigned int)' inline
| |-ParmVarDecl 0x56379f33fb30 <col:22, col:31> col:31 used x 'unsigned int'
| |-CXXCtorInitializer Field 0x56379f3421f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56379f342330 <line:26:10> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x56379f3422f0 <col:10> 'unsigned int' lvalue ParmVar 0x56379f33fb30 'x' 'unsigned int'
| `-CompoundStmt 0x56379f342378 <col:13, line:27:5>
|-CXXConstructorDecl 0x56379f33fd18 <line:29:5, line:31:5> line:29:21 IPAddress 'void (int)' inline
| |-ParmVarDecl 0x56379f33fc88 <col:31, col:35> col:35 used x 'int'
| |-CXXCtorInitializer Field 0x56379f3421f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56379f3423e0 <line:30:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x56379f3423c8 <col:10> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x56379f342388 <col:10> 'int' lvalue ParmVar 0x56379f33fc88 'x' 'int'
| `-CompoundStmt 0x56379f342428 <col:13, line:31:5>
|-CXXConstructorDecl 0x56379f33fe70 <line:33:5, line:35:5> line:33:21 IPAddress 'void (unsigned long)' inline
| |-ParmVarDecl 0x56379f33fde0 <col:31, col:45> col:45 used x 'unsigned long'
| |-CXXCtorInitializer Field 0x56379f3421f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56379f342490 <line:34:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x56379f342478 <col:10> 'unsigned long' <LValueToRValue>
| |     `-DeclRefExpr 0x56379f342438 <col:10> 'unsigned long' lvalue ParmVar 0x56379f33fde0 'x' 'unsigned long'
| `-CompoundStmt 0x56379f3424d8 <col:13, line:35:5>
|-CXXConstructorDecl 0x56379f33ffc8 <line:37:5, line:39:5> line:37:21 IPAddress 'void (long)' inline
| |-ParmVarDecl 0x56379f33ff38 <col:31, col:36> col:36 used x 'long'
| |-CXXCtorInitializer Field 0x56379f3421f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56379f342540 <line:38:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x56379f342528 <col:10> 'long' <LValueToRValue>
| |     `-DeclRefExpr 0x56379f3424e8 <col:10> 'long' lvalue ParmVar 0x56379f33ff38 'x' 'long'
| `-CompoundStmt 0x56379f342588 <col:13, line:39:5>
|-CXXConstructorDecl 0x56379f340188 <line:42:5, line:44:5> line:42:12 IPAddress 'void (struct in_addr)' inline
| |-ParmVarDecl 0x56379f340098 <col:22, col:37> col:37 used x 'struct in_addr':'in_addr'
| |-CXXCtorInitializer Field 0x56379f3421f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56379f342608 <line:43:10, col:12> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x56379f3425b8 <col:10, col:12> 'in_addr_t':'unsigned int' lvalue .s_addr 0x56379f295870
| |     `-DeclRefExpr 0x56379f342598 <col:10> 'struct in_addr':'in_addr' lvalue ParmVar 0x56379f340098 'x' 'struct in_addr':'in_addr'
| `-CompoundStmt 0x56379f342650 <col:20, line:44:5>
|-CXXConstructorDecl 0x56379f340318 <line:50:5, line:56:5> line:50:14 IPAddress 'void (const unsigned char *)'
| |-ParmVarDecl 0x56379f340250 <col:24, col:45> col:45 used data 'const unsigned char *'
| `-CompoundStmt 0x56379f3427b8 <col:51, line:56:5>
|   `-BinaryOperator 0x56379f342798 <line:52:2, col:52> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x56379f342670 <col:2> 'uint32_t':'unsigned int' lvalue ->_addr 0x56379f3421f0
|     | `-CXXThisExpr 0x56379f342660 <col:2> 'IPAddress *' implicit this
|     `-ImplicitCastExpr 0x56379f342780 <col:10, col:52> 'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x56379f342768 <col:10, col:52> 'const unsigned int' lvalue prefix '*' cannot overflow
|         `-ParenExpr 0x56379f342748 <col:11, col:52> 'const unsigned int *'
|           `-CXXReinterpretCastExpr 0x56379f342718 <col:12, col:51> 'const unsigned int *' reinterpret_cast<const unsigned int *> <BitCast>
|             `-ImplicitCastExpr 0x56379f342700 <col:47> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|               `-DeclRefExpr 0x56379f3426a0 <col:47> 'const unsigned char *' lvalue ParmVar 0x56379f340250 'data' 'const unsigned char *'
|-CXXConstructorDecl 0x56379f340468 <line:63:5, col:39> col:14 IPAddress 'void (const String &)'
| `-ParmVarDecl 0x56379f3403d8 <col:24, col:38> col:38 x 'const String &'
|-CXXConstructorDecl 0x56379f340618 <line:66:5, line:68:5> line:66:12 IPAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x56379f340558 <col:22, col:48> col:48 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x56379f342828 <col:56, line:68:5>
|   `-CStyleCastExpr 0x56379f342800 <line:67:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x56379f3427d0 <col:9> 'const uninitialized_type' lvalue ParmVar 0x56379f340558 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x56379f3407a8 <line:78:5, col:48> col:22 make_prefix 'IPAddress (int)' static
| `-ParmVarDecl 0x56379f3406e0 <col:34, col:38> col:38 prefix_len 'int'
|-CXXMethodDecl 0x56379f340898 <line:81:5, line:83:5> line:81:29 make_broadcast 'IPAddress ()' static inline
| `-CompoundStmt 0x56379f346c68 <col:46, line:83:5>
|   `-ReturnStmt 0x56379f346c58 <line:82:2, col:29>
|     `-ExprWithCleanups 0x56379f346c40 <col:9, col:29> 'IPAddress'
|       `-CXXConstructExpr 0x56379f346c10 <col:9, col:29> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x56379f346ac8 <col:9, col:29> 'IPAddress' xvalue
|           `-CXXFunctionalCastExpr 0x56379f3469b0 <col:9, col:29> 'IPAddress' functional cast to class IPAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x56379f346898 <col:9, col:29> 'IPAddress' 'void (unsigned int)'
|               `-IntegerLiteral 0x56379f342850 <col:19> 'unsigned int' 4294967295
|-CXXMethodDecl 0x56379f340988 <line:86:5, line:88:5> line:86:17 empty 'bool () const' inline
| `-CompoundStmt 0x56379f346d18 <col:31, line:88:5>
|   `-ReturnStmt 0x56379f346d08 <line:87:2, col:10>
|     `-UnaryOperator 0x56379f346cf0 <col:9, col:10> 'bool' prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x56379f346cd8 <col:10> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x56379f346cc0 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x56379f346c90 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x56379f3421f0
|             `-CXXThisExpr 0x56379f346c80 <col:10> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x56379f340a48 <line:91:5, line:93:5> line:91:21 used addr 'uint32_t () const' inline
| `-CompoundStmt 0x56379f346d98 <col:34, line:93:5>
|   `-ReturnStmt 0x56379f346d88 <line:92:2, col:9>
|     `-ImplicitCastExpr 0x56379f346d70 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56379f346d40 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x56379f3421f0
|         `-CXXThisExpr 0x56379f346d30 <col:9> 'const IPAddress *' implicit this
|-CXXConversionDecl 0x56379f340b18 <line:99:5, line:101:5> line:99:12 operator unsigned int 'uint32_t () const' inline
| `-CompoundStmt 0x56379f346e18 <col:38, line:101:5>
|   `-ReturnStmt 0x56379f346e08 <line:100:2, col:9>
|     `-ImplicitCastExpr 0x56379f346df0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56379f346dc0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x56379f3421f0
|         `-CXXThisExpr 0x56379f346db0 <col:9> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x56379f340be8 <line:106:5, line:108:5> line:106:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x56379f3470e8 <col:38, line:108:5>
|   `-ReturnStmt 0x56379f3470d8 <line:107:2, col:58>
|     `-BinaryOperator 0x56379f3470b8 <col:9, col:58> 'bool' '=='
|       |-ParenExpr 0x56379f346fd0 <col:9, col:36> 'unsigned int'
|       | `-BinaryOperator 0x56379f346fb0 <col:10, col:35> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x56379f346f98 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x56379f346e40 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x56379f3421f0
|       |   |   `-CXXThisExpr 0x56379f346e30 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x56379f346f70 <col:18, col:35> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x56379f346f58 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x56379f346ed8 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x56379f2f9900 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x56379f346eb8 <col:24> 'unsigned int' 4026531840
|       `-CallExpr 0x56379f347090 <col:41, col:58> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x56379f347078 <col:41> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x56379f347058 <col:41> 'uint32_t (uint32_t) throw()' lvalue Function 0x56379f2f9900 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x56379f347038 <col:47> 'unsigned int' 3758096384
|-CXXMethodDecl 0x56379f340ca8 <line:110:5, line:112:5> line:110:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x56379f347358 <col:39, line:112:5>
|   `-ReturnStmt 0x56379f347348 <line:111:2, col:56>
|     `-BinaryOperator 0x56379f347328 <col:9, col:56> 'bool' '=='
|       |-ParenExpr 0x56379f347240 <col:9, col:35> 'unsigned int'
|       | `-BinaryOperator 0x56379f347220 <col:10, col:34> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x56379f347208 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x56379f347110 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x56379f3421f0
|       |   |   `-CXXThisExpr 0x56379f347100 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x56379f3471e0 <col:18, col:34> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x56379f3471c8 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x56379f3471a8 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x56379f2f9900 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x56379f347188 <col:24> 'unsigned int' 4294901760
|       `-CallExpr 0x56379f347300 <col:40, col:56> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x56379f3472e8 <col:40> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x56379f3472c8 <col:40> 'uint32_t (uint32_t) throw()' lvalue Function 0x56379f2f9900 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x56379f3472a8 <col:46> 'unsigned int' 2851995648
|-CXXMethodDecl 0x56379f340dd8 <line:114:5, col:37> col:27 used in_addr 'struct in_addr () const' inline
|-CXXConversionDecl 0x56379f340ee0 <line:115:5, col:38> col:12 operator in_addr 'struct in_addr () const' inline
|-CXXMethodDecl 0x56379f340ff0 <line:117:5, col:32> col:27 data 'unsigned char *()' inline
|-CXXMethodDecl 0x56379f3410e0 <line:118:5, col:40> col:33 data 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56379f3411a0 <line:120:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x56379f341268 <line:122:5, col:30> col:9 used mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x56379f341468 <line:123:5, col:64> col:17 used matches_prefix 'bool (IPAddress, IPAddress) const' inline
| |-ParmVarDecl 0x56379f341318 <col:32, col:42> col:42 addr 'IPAddress'
| `-ParmVarDecl 0x56379f341390 <col:48, col:58> col:58 mask 'IPAddress'
|-CXXMethodDecl 0x56379f3415e8 <line:124:5, col:50> col:17 used mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x56379f341528 <col:34, col:44> col:44 mask 'IPAddress'
|-CXXMethodDecl 0x56379f341730 <line:125:5, col:52> col:17 mask_more_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x56379f3416a0 <col:36, col:46> col:46 mask 'IPAddress'
|-CXXMethodDecl 0x56379f3418d8 <line:137:5, col:43> col:23 operator&= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x56379f3417e8 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x56379f341a20 <line:138:5, col:43> col:23 operator|= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x56379f341990 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x56379f341b68 <line:139:5, col:43> col:23 operator^= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x56379f341ad8 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x56379f341c30 <line:141:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x56379f341cf0 <line:142:5, col:27> col:12 unparse_mask 'String () const'
|-CXXMethodDecl 0x56379f341e68 <line:143:5, col:41> col:12 used unparse_with_mask 'String (IPAddress) const'
| `-ParmVarDecl 0x56379f341da0 <col:30> col:39 'IPAddress'
|-CXXMethodDecl 0x56379f341f30 <line:145:5, col:23> col:19 s 'String () const' inline
|-CXXConversionDecl 0x56379f342018 <line:146:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x56379f3420c0 <col:51> "" ""
|-TypedefDecl 0x56379f342160 <line:148:5, col:23> col:23 parameter_type 'IPAddress'
| `-RecordType 0x56379f3192a0 'IPAddress'
|   `-CXXRecord 0x56379f33f7f8 'IPAddress'
|-AccessSpecDecl 0x56379f3421b8 <line:150:3, col:10> col:3 private
|-FieldDecl 0x56379f3421f0 <line:152:5, col:14> col:14 referenced _addr 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x56379f342898 <line:15:7> col:7 implicit used constexpr IPAddress 'void (const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x56379f3429a8 <col:7> col:7 used 'const IPAddress &'
| |-CXXCtorInitializer Field 0x56379f3421f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56379f651478 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x56379f651430 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x56379f3421f0
| |     `-DeclRefExpr 0x56379f651410 <col:7> 'const IPAddress' lvalue ParmVar 0x56379f3429a8 '' 'const IPAddress &'
| `-CompoundStmt 0x56379f6514c0 <col:7>
|-CXXConstructorDecl 0x56379f342a48 <col:7> col:7 implicit used constexpr IPAddress 'void (IPAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x56379f342b58 <col:7> col:7 used 'IPAddress &&'
| |-CXXCtorInitializer Field 0x56379f3421f0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x56379f346bb8 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x56379f346b70 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x56379f3421f0
| |     `-CXXStaticCastExpr 0x56379f346b40 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
| |       `-DeclRefExpr 0x56379f346b10 <col:7> 'IPAddress' lvalue ParmVar 0x56379f342b58 '' 'IPAddress &&'
| `-CompoundStmt 0x56379f346c00 <col:7>
|-CXXDestructorDecl 0x56379f3468c8 <col:7> col:7 implicit referenced ~IPAddress 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56379f6518c0 <col:7> col:7 implicit operator= 'IPAddress &(const IPAddress &)' inline default trivial noexcept-unevaluated 0x56379f6518c0
| `-ParmVarDecl 0x56379f6519c8 <col:7> col:7 'const IPAddress &'
`-CXXMethodDecl 0x56379f651a38 <col:7> col:7 implicit used operator= 'IPAddress &(IPAddress &&) noexcept' inline default trivial
  |-ParmVarDecl 0x56379f651b48 <col:7> col:7 used 'IPAddress &&'
  `-CompoundStmt 0x56379f651db0 <col:7>
    |-BinaryOperator 0x56379f651d58 <col:7> 'uint32_t':'unsigned int' lvalue '='
    | |-MemberExpr 0x56379f651d10 <col:7> 'uint32_t':'unsigned int' lvalue ->_addr 0x56379f3421f0
    | | `-CXXThisExpr 0x56379f651d00 <col:7> 'IPAddress *' this
    | `-ImplicitCastExpr 0x56379f651d40 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
    |   `-MemberExpr 0x56379f651cd0 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x56379f3421f0
    |     `-CXXStaticCastExpr 0x56379f651ca0 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
    |       `-DeclRefExpr 0x56379f651c70 <col:7> 'IPAddress' lvalue ParmVar 0x56379f651b48 '' 'IPAddress &&'
    `-ReturnStmt 0x56379f651da0 <col:7>
      `-UnaryOperator 0x56379f651d88 <col:7> 'IPAddress' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x56379f651d78 <col:7> 'IPAddress *' this

Layout: <CGRecordLayout
  LLVMType:%class.IPAddress = type { i32 }
  NonVirtualBaseLLVMType:%class.IPAddress = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56379f6595a8 <../elements/local/indextreesiplookup.hh:23:1, line:46:1> line:23:7 referenced class TreeNode definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56379f6596c8 <col:1, col:7> col:7 implicit referenced class TreeNode
|-AccessSpecDecl 0x56379f659758 <line:24:1, col:7> col:1 public
|-CXXConstructorDecl 0x56379f659a38 <line:25:3, col:53> col:3 TreeNode 'void (IPAddress, IPAddress, IPAddress, unsigned int)'
| |-ParmVarDecl 0x56379f659790 <col:12> col:21 'IPAddress'
| |-ParmVarDecl 0x56379f659808 <col:23> col:32 'IPAddress'
| |-ParmVarDecl 0x56379f659880 <col:34> col:43 'IPAddress'
| `-ParmVarDecl 0x56379f659900 <col:45> col:53 'unsigned int'
|-CXXDestructorDecl 0x56379f659b48 <line:26:3, col:13> col:3 ~TreeNode 'void ()' noexcept-unevaluated 0x56379f659b48
|-CXXMethodDecl 0x56379f659e58 <line:28:3, col:56> col:8 insert 'void (IPAddress, IPAddress, IPAddress, unsigned int)'
| |-ParmVarDecl 0x56379f659c40 <col:15> col:24 'IPAddress'
| |-ParmVarDecl 0x56379f659cb8 <col:26> col:35 'IPAddress'
| |-ParmVarDecl 0x56379f659d30 <col:37> col:46 'IPAddress'
| `-ParmVarDecl 0x56379f659db0 <col:48> col:56 'unsigned int'
|-CXXMethodDecl 0x56379f65a078 <line:29:3, col:35> col:8 remove 'void (IPAddress, IPAddress)'
| |-ParmVarDecl 0x56379f659f28 <col:15> col:24 'IPAddress'
| `-ParmVarDecl 0x56379f659fa0 <col:26> col:35 'IPAddress'
|-CXXMethodDecl 0x56379f65a1f8 <line:30:3, col:29> col:13 search 'TreeNode *(IPAddress)'
| `-ParmVarDecl 0x56379f65a138 <col:20> col:29 'IPAddress'
|-CXXMethodDecl 0x56379f65a2e8 <line:32:3, col:40> col:13 dst 'IPAddress () const'
| `-CompoundStmt 0x56379f65a920 <col:25, col:40>
|   `-ReturnStmt 0x56379f65a910 <col:27, col:34>
|     `-CXXConstructExpr 0x56379f65a8e0 <col:34> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x56379f65a8b0 <col:34> 'const IPAddress' lvalue ->_dst 0x56379f65a728
|         `-CXXThisExpr 0x56379f65a8a0 <col:34> 'const TreeNode *' implicit this
|-CXXMethodDecl 0x56379f65a3a8 <line:33:3, col:42> col:13 mask 'IPAddress () const'
| `-CompoundStmt 0x56379f65a9b8 <col:26, col:42>
|   `-ReturnStmt 0x56379f65a9a8 <col:28, col:35>
|     `-CXXConstructExpr 0x56379f65a978 <col:35> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x56379f65a948 <col:35> 'const IPAddress' lvalue ->_mask 0x56379f65a788
|         `-CXXThisExpr 0x56379f65a938 <col:35> 'const TreeNode *' implicit this
|-CXXMethodDecl 0x56379f65a468 <line:34:3, col:38> col:13 gw 'IPAddress () const'
| `-CompoundStmt 0x56379f65aa50 <col:24, col:38>
|   `-ReturnStmt 0x56379f65aa40 <col:26, col:33>
|     `-CXXConstructExpr 0x56379f65aa10 <col:33> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x56379f65a9e0 <col:33> 'const IPAddress' lvalue ->_gw 0x56379f65a7e8
|         `-CXXThisExpr 0x56379f65a9d0 <col:33> 'const TreeNode *' implicit this
|-CXXMethodDecl 0x56379f65a530 <line:35:3, col:41> col:12 port 'unsigned int () const'
| `-CompoundStmt 0x56379f65aad0 <col:25, col:41>
|   `-ReturnStmt 0x56379f65aac0 <col:27, col:34>
|     `-ImplicitCastExpr 0x56379f65aaa8 <col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x56379f65aa78 <col:34> 'const unsigned int' lvalue ->_port 0x56379f65a850
|         `-CXXThisExpr 0x56379f65aa68 <col:34> 'const TreeNode *' implicit this
|-AccessSpecDecl 0x56379f65a5d0 <line:37:1, col:8> col:1 private
|-FieldDecl 0x56379f65a608 <line:38:3, col:13> col:13 _left 'TreeNode *'
|-FieldDecl 0x56379f65a668 <line:39:3, col:13> col:13 _right 'TreeNode *'
|-FieldDecl 0x56379f65a6c8 <line:40:3, col:13> col:13 _middle 'TreeNode *'
|-FieldDecl 0x56379f65a728 <line:42:3, col:13> col:13 referenced _dst 'IPAddress'
|-FieldDecl 0x56379f65a788 <line:43:3, col:13> col:13 referenced _mask 'IPAddress'
|-FieldDecl 0x56379f65a7e8 <line:44:3, col:13> col:13 referenced _gw 'IPAddress'
`-FieldDecl 0x56379f65a850 <line:45:3, col:12> col:12 referenced _port 'unsigned int'

Layout: <CGRecordLayout
  LLVMType:%class.TreeNode = type { %class.TreeNode*, %class.TreeNode*, %class.TreeNode*, %class.IPAddress, %class.IPAddress, %class.IPAddress, i32 }
  NonVirtualBaseLLVMType:%class.TreeNode = type { %class.TreeNode*, %class.TreeNode*, %class.TreeNode*, %class.IPAddress, %class.IPAddress, %class.IPAddress, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56379f65aae8 <../elements/local/indextreesiplookup.hh:48:1, line:66:1> line:48:7 class IndexTreesIPLookup definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x56379f65ac48 <col:1, col:7> col:7 implicit referenced class IndexTreesIPLookup
|-AccessSpecDecl 0x56379f65acd8 <line:49:1, col:7> col:1 public
|-CXXConstructorDecl 0x56379f65ad60 <line:50:3, col:22> col:3 IndexTreesIPLookup 'void ()'
|-CXXDestructorDecl 0x56379f65ae50 <line:51:3, col:23> col:3 ~IndexTreesIPLookup 'void ()' noexcept-unevaluated 0x56379f65ae50
| `-Overrides: [ 0x56379f636928 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x56379f65af80 <line:53:3, col:65> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x56379f637d58 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x56379f65c190 <col:34, col:65>
|   `-ReturnStmt 0x56379f65c180 <col:36, col:43>
|     `-ImplicitCastExpr 0x56379f65c168 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x56379f65c138 <col:43> 'const char [19]' lvalue "IndexTreesIPLookup"
|-CXXMethodDecl 0x56379f65b048 <line:54:3, col:54> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x56379f637e20 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x56379f65c1f0 <col:34, col:54>
|   `-ReturnStmt 0x56379f65c1e0 <col:36, col:43>
|     `-ImplicitCastExpr 0x56379f65c1c8 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x56379f65c1a8 <col:43> 'const char []' lvalue Var 0x56379f638078 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x56379f65b188 <line:55:3, col:28> col:8 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x56379f639eb8 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x56379f65b0f8 <col:16> col:28 'Element::CleanupStage'
|-CXXMethodDecl 0x56379f65b250 <line:57:3, col:22> col:10 dump_routes 'String ()'
|-CXXMethodDecl 0x56379f65b518 <line:58:3, col:54> col:8 add_route 'void (IPAddress, IPAddress, IPAddress, int)'
| |-ParmVarDecl 0x56379f65b300 <col:18> col:27 'IPAddress'
| |-ParmVarDecl 0x56379f65b378 <col:29> col:38 'IPAddress'
| |-ParmVarDecl 0x56379f65b3f0 <col:40> col:49 'IPAddress'
| `-ParmVarDecl 0x56379f65b470 <col:51> col:54 'int'
|-CXXMethodDecl 0x56379f65b6f8 <line:59:3, col:41> col:8 remove_route 'void (IPAddress, IPAddress)'
| |-ParmVarDecl 0x56379f65b5e8 <col:21> col:30 'IPAddress'
| `-ParmVarDecl 0x56379f65b660 <col:32> col:41 'IPAddress'
|-CXXMethodDecl 0x56379f65b910 <line:60:3, col:42> col:7 lookup_route 'int (IPAddress, IPAddress &)'
| |-ParmVarDecl 0x56379f65b7b8 <col:20> col:29 'IPAddress'
| `-ParmVarDecl 0x56379f65b830 <col:31, col:41> col:42 'IPAddress &'
|-AccessSpecDecl 0x56379f65b9c0 <line:62:1, col:8> col:1 private
|-VarDecl 0x56379f65ba00 <line:63:3, col:33> col:20 referenced INDEX_SIZE 'const int' static cinit
| `-IntegerLiteral 0x56379f65ba68 <col:33> 'int' 256
|-FieldDecl 0x56379f65bbb8 <line:64:3, col:30> col:13 referenced _trees 'TreeNode *[256]'
|-CXXMethodDecl 0x56379f65bcb8 <line:65:3, col:55> col:14 hash 'int (unsigned int)' static
| |-ParmVarDecl 0x56379f65bc20 <col:19, col:28> col:28 used a 'unsigned int'
| `-CompoundStmt 0x56379f65c340 <col:31, col:55>
|   `-ReturnStmt 0x56379f65c330 <col:33, col:52>
|     `-ImplicitCastExpr 0x56379f65c318 <col:40, col:52> 'int' <IntegralCast>
|       `-ParenExpr 0x56379f65c2f8 <col:40, col:52> 'unsigned int'
|         `-BinaryOperator 0x56379f65c2d8 <col:41, col:49> 'unsigned int' '&'
|           |-ParenExpr 0x56379f65c280 <col:41, col:47> 'unsigned int'
|           | `-BinaryOperator 0x56379f65c260 <col:42, col:45> 'unsigned int' '>>'
|           |   |-ImplicitCastExpr 0x56379f65c248 <col:42> 'unsigned int' <LValueToRValue>
|           |   | `-DeclRefExpr 0x56379f65c208 <col:42> 'unsigned int' lvalue ParmVar 0x56379f65bc20 'a' 'unsigned int'
|           |   `-IntegerLiteral 0x56379f65c228 <col:45> 'int' 24
|           `-ImplicitCastExpr 0x56379f65c2c0 <col:49> 'unsigned int' <IntegralCast>
|             `-IntegerLiteral 0x56379f65c2a0 <col:49> 'int' 255
|-CXXConstructorDecl 0x56379f65bd88 <line:48:7> col:7 implicit IndexTreesIPLookup 'void (const IndexTreesIPLookup &)' inline default_delete noexcept-unevaluated 0x56379f65bd88
| `-ParmVarDecl 0x56379f65be98 <col:7> col:7 'const IndexTreesIPLookup &'
`-CXXMethodDecl 0x56379f65bf38 <col:7> col:7 implicit operator= 'IndexTreesIPLookup &(const IndexTreesIPLookup &)' inline default_delete noexcept-unevaluated 0x56379f65bf38
  `-ParmVarDecl 0x56379f65c048 <col:7> col:7 'const IndexTreesIPLookup &'

Layout: <CGRecordLayout
  LLVMType:%class.IndexTreesIPLookup = type { %class.Element.base, [256 x %class.TreeNode*] }
  NonVirtualBaseLLVMType:%class.IndexTreesIPLookup = type { %class.Element.base, [256 x %class.TreeNode*] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56379f2540c0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56379f256360 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x56379f256400 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x56379f256460 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x56379f2564c0 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x56379f256570 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56379f256880 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56379f256998 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x56379f256a40 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x56379f256aa8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x56379f256b38 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x56379f25ad70 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56379f25b1a8 <col:12>
|-CXXConstructorDecl 0x56379f25ae78 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56379f25af88 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56379f256a40 'data' 'const char *'
| | `-ImplicitCastExpr 0x56379f25de60 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x56379f25de30 <col:12> 'const char *const' lvalue .data 0x56379f256a40
| |     `-DeclRefExpr 0x56379f25de10 <col:12> 'const String::rep_t' lvalue ParmVar 0x56379f25af88 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56379f256aa8 'length' 'int'
| | `-ImplicitCastExpr 0x56379f25def0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x56379f25dec0 <col:12> 'const int' lvalue .length 0x56379f256aa8
| |     `-DeclRefExpr 0x56379f25dea0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56379f25af88 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56379f256b38 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x56379f25df80 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x56379f25df50 <col:12> 'String::memo_t *const' lvalue .memo 0x56379f256b38
| |     `-DeclRefExpr 0x56379f25df30 <col:12> 'const String::rep_t' lvalue ParmVar 0x56379f25af88 '' 'const String::rep_t &'
| `-CompoundStmt 0x56379f25dfd8 <col:12>
|-CXXConstructorDecl 0x56379f25b028 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56379f25b028
| `-ParmVarDecl 0x56379f25b138 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x56379f2635b0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56379f26ef18 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56379f26f028 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x56379f26f540 <col:12>
|   |-BinaryOperator 0x56379f26f358 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x56379f26f310 <col:12> 'const char *' lvalue ->data 0x56379f256a40
|   | | `-CXXThisExpr 0x56379f26f300 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56379f26f340 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x56379f26f2d0 <col:12> 'const char *const' lvalue .data 0x56379f256a40
|   |     `-DeclRefExpr 0x56379f26f2b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56379f26f028 '' 'const String::rep_t &'
|   |-BinaryOperator 0x56379f26f420 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x56379f26f3d8 <col:12> 'int' lvalue ->length 0x56379f256aa8
|   | | `-CXXThisExpr 0x56379f26f3c8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56379f26f408 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x56379f26f398 <col:12> 'const int' lvalue .length 0x56379f256aa8
|   |     `-DeclRefExpr 0x56379f26f378 <col:12> 'const String::rep_t' lvalue ParmVar 0x56379f26f028 '' 'const String::rep_t &'
|   |-BinaryOperator 0x56379f26f4e8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x56379f26f4a0 <col:12> 'String::memo_t *' lvalue ->memo 0x56379f256b38
|   | | `-CXXThisExpr 0x56379f26f490 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56379f26f4d0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x56379f26f460 <col:12> 'String::memo_t *const' lvalue .memo 0x56379f256b38
|   |     `-DeclRefExpr 0x56379f26f440 <col:12> 'const String::rep_t' lvalue ParmVar 0x56379f26f028 '' 'const String::rep_t &'
|   `-ReturnStmt 0x56379f26f530 <col:12>
|     `-UnaryOperator 0x56379f26f518 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56379f26f508 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x56379f26f098 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56379f26f098
  `-ParmVarDecl 0x56379f26f1a8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56379f24a810 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56379f24a928 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x56379f24a9b8 <col:16, col:22> col:16 public
|-TypedefDecl 0x56379f24a9f8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x56379f010e00 'const char *'
|   `-QualType 0x56379f010351 'const char' const
|     `-BuiltinType 0x56379f010350 'char'
|-TypedefDecl 0x56379f24aa80 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x56379f24aa50 'String::const_iterator' sugar
|   |-Typedef 0x56379f24a9f8 'const_iterator'
|   `-PointerType 0x56379f010e00 'const char *'
|     `-QualType 0x56379f010351 'const char' const
|       `-BuiltinType 0x56379f010350 'char'
|-TypedefDecl 0x56379f24ac20 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x56379f24ab90 'int (String::*)() const'
|   |-RecordType 0x56379f24a8a0 'String'
|   | `-CXXRecord 0x56379f24a810 'String'
|   `-ParenType 0x56379f24ab30 'int () const' sugar
|     `-FunctionProtoType 0x56379f24ab00 'int () const' const cdecl
|       `-BuiltinType 0x56379f0103b0 'int'
|-TypedefDecl 0x56379f24ac88 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x56379f165980 'int64_t' sugar
|   |-Typedef 0x56379f0792a0 'int64_t'
|   `-TypedefType 0x56379f052510 '__int64_t' sugar
|     |-Typedef 0x56379f0520e8 '__int64_t'
|     `-BuiltinType 0x56379f0103d0 'long'
|-TypedefDecl 0x56379f24acf0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x56379f1658a0 'uint64_t' sugar
|   |-Typedef 0x56379f079440 'uint64_t'
|   `-TypedefType 0x56379f0525a0 '__uint64_t' sugar
|     |-Typedef 0x56379f052158 '__uint64_t'
|     `-BuiltinType 0x56379f010470 'unsigned long'
|-TypedefDecl 0x56379f24ad80 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x56379f24ad50 'String::intmax_t' sugar
|   |-Typedef 0x56379f24ac88 'intmax_t'
|   `-TypedefType 0x56379f165980 'int64_t' sugar
|     |-Typedef 0x56379f0792a0 'int64_t'
|     `-TypedefType 0x56379f052510 '__int64_t' sugar
|       |-Typedef 0x56379f0520e8 '__int64_t'
|       `-BuiltinType 0x56379f0103d0 'long'
|-TypedefDecl 0x56379f24ae10 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x56379f24ade0 'String::uintmax_t' sugar
|   |-Typedef 0x56379f24acf0 'uintmax_t'
|   `-TypedefType 0x56379f1658a0 'uint64_t' sugar
|     |-Typedef 0x56379f079440 'uint64_t'
|     `-TypedefType 0x56379f0525a0 '__uint64_t' sugar
|       |-Typedef 0x56379f052158 '__uint64_t'
|       `-BuiltinType 0x56379f010470 'unsigned long'
|-CXXConstructorDecl 0x56379f24aed0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x56379f24b078 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x56379f24afb8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x56379f24b228 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x56379f24b168 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x56379f24b380 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x56379f24b2f0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x56379f24b600 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x56379f24b448 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x56379f24b4c8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x56379f24b858 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x56379f24b700 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x56379f24b780 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x56379f24ba78 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x56379f24b928 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x56379f24b9a8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x56379f24bc98 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x56379f24bb48 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x56379f24bbc8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x56379f24be28 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x56379f24bd60 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x56379f24bfa8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x56379f24bee8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x56379f24c138 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x56379f24c070 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x56379f24c290 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x56379f24c200 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x56379f24c418 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x56379f24c358 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x56379f24c5a8 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x56379f24c4e0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x56379f24c738 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x56379f24c670 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x56379f24c8c8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x56379f24c800 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x56379f24ca58 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x56379f24c990 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x56379f24cbe8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x56379f24cb20 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x56379f24cce0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x56379f24ce08 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x56379f24cf88 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x56379f24cec0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x56379f24d0d8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x56379f24d048 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x56379f24d180 <col:63> "" ""
|-CXXMethodDecl 0x56379f24d2c8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x56379f24d208 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x56379f24d4d8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x56379f24d388 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x56379f24d408 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x56379f24db78 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x56379f24da20 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x56379f24daa0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x56379f24de58 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x56379f24dc38 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x56379f24dcb8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x56379f25a840 <col:55> 'int' 10
| `-ParmVarDecl 0x56379f24dd30 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56379f25a860 <col:76> 'bool' true
|-CXXMethodDecl 0x56379f24e138 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x56379f24df20 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x56379f24dfa0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x56379f25a870 <col:56> 'int' 10
| `-ParmVarDecl 0x56379f24e018 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56379f25a890 <col:77> 'bool' true
|-CXXMethodDecl 0x56379f24e240 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x56379f24e308 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x56379f24e3d0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x56379f24e470 <col:20>
| `-OptimizeNoneAttr 0x56379f24e4c8 <col:30>
|-CXXConversionDecl 0x56379f24e5b8 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x56379f24e688 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x56379f24e748 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x56379f24e838 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x56379f24e8f8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x56379f24ea78 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x56379f24e9b0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x56379f24ebc8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x56379f24eb38 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x56379f24ecb8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x56379f24ed78 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x56379f24efc8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x56379f24ee30 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x56379f24eeb0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x56379f24f228 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x56379f24f090 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x56379f24f110 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x56379f24f2f8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x56379f24f508 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x56379f24f3b0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x56379f24f430 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x56379f24f728 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x56379f24f5d0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x56379f24f650 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x56379f24f8b8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x56379f24f7f0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x56379f24ff00 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x56379f250078 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x56379f24ffb0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56379f250288 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x56379f250138 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x56379f2501b8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x56379f2504a0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x56379f250348 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x56379f2503c0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x56379f250630 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x56379f250560 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56379f250850 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x56379f2506f0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x56379f250770 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x56379f2509a0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x56379f250910 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x56379f250b78 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x56379f250a60 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x56379f250ae0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x56379f250cc8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x56379f250c38 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x56379f250ee0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x56379f250d80 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x56379f250e00 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x56379f25a8a0 <col:39> 'int' 0
|-CXXMethodDecl 0x56379f251100 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x56379f250fa0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x56379f251020 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x56379f25a8c0 <col:48> 'int' 0
|-CXXMethodDecl 0x56379f2512e0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x56379f2511c0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x56379f251240 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x56379f25a8e0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x56379f2513b0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x56379f251470 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x56379f251530 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x56379f2515f0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x56379f2516b0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x56379f251858 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x56379f251760 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x56379f2519d8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x56379f251910 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x56379f251b58 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x56379f251a98 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x56379f251cd8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x56379f251c10 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x56379f251e20 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x56379f251d90 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56379f2522d0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x56379f252240 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x56379f2524a8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x56379f252390 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x56379f252410 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x56379f252688 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x56379f252570 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x56379f2525f0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x56379f2527d8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x56379f252748 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x56379f2529e8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x56379f252898 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x56379f252918 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x56379f252b48 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x56379f252ab0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x56379f252ca0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x56379f252c08 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x56379f252d48 <col:57> "" ""
|-CXXMethodDecl 0x56379f252e58 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x56379f252dc8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x56379f252fa8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x56379f252f18 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x56379f253128 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x56379f253060 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x56379f2531f0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x56379f2532b0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x56379f253370 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x56379f253410 <col:49> "" ""
|-CXXMethodDecl 0x56379f2534a0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x56379f253560 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x56379f253650 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x56379f253718 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x56379f2537d8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x56379f253898 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x56379f253990 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x56379f253a58 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x56379f253b20 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x56379f253cf8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x56379f253bd8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x56379f253c58 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x56379f253f20 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x56379f253dc0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x56379f253e40 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x56379f254030 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x56379f254098 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x56379f2540c0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56379f256360 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x56379f256400 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x56379f256460 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x56379f2564c0 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x56379f256570 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x56379f2565d8 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x56379f256818 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x56379f256868 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56379f2567f8 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x56379f256708 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x56379f2566b0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x56379f2566f0 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x56379f2566d0 <col:32> 'int' 8
|-CXXRecordDecl 0x56379f256880 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56379f256998 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x56379f256a40 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x56379f256aa8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x56379f256b38 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x56379f25ad70 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56379f25b1a8 <col:12>
| |-CXXConstructorDecl 0x56379f25ae78 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56379f25af88 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56379f256a40 'data' 'const char *'
| | | `-ImplicitCastExpr 0x56379f25de60 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x56379f25de30 <col:12> 'const char *const' lvalue .data 0x56379f256a40
| | |     `-DeclRefExpr 0x56379f25de10 <col:12> 'const String::rep_t' lvalue ParmVar 0x56379f25af88 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56379f256aa8 'length' 'int'
| | | `-ImplicitCastExpr 0x56379f25def0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x56379f25dec0 <col:12> 'const int' lvalue .length 0x56379f256aa8
| | |     `-DeclRefExpr 0x56379f25dea0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56379f25af88 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56379f256b38 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x56379f25df80 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x56379f25df50 <col:12> 'String::memo_t *const' lvalue .memo 0x56379f256b38
| | |     `-DeclRefExpr 0x56379f25df30 <col:12> 'const String::rep_t' lvalue ParmVar 0x56379f25af88 '' 'const String::rep_t &'
| | `-CompoundStmt 0x56379f25dfd8 <col:12>
| |-CXXConstructorDecl 0x56379f25b028 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56379f25b028
| | `-ParmVarDecl 0x56379f25b138 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x56379f2635b0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x56379f26ef18 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56379f26f028 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x56379f26f540 <col:12>
| |   |-BinaryOperator 0x56379f26f358 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x56379f26f310 <col:12> 'const char *' lvalue ->data 0x56379f256a40
| |   | | `-CXXThisExpr 0x56379f26f300 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56379f26f340 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x56379f26f2d0 <col:12> 'const char *const' lvalue .data 0x56379f256a40
| |   |     `-DeclRefExpr 0x56379f26f2b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56379f26f028 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x56379f26f420 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x56379f26f3d8 <col:12> 'int' lvalue ->length 0x56379f256aa8
| |   | | `-CXXThisExpr 0x56379f26f3c8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56379f26f408 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x56379f26f398 <col:12> 'const int' lvalue .length 0x56379f256aa8
| |   |     `-DeclRefExpr 0x56379f26f378 <col:12> 'const String::rep_t' lvalue ParmVar 0x56379f26f028 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x56379f26f4e8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x56379f26f4a0 <col:12> 'String::memo_t *' lvalue ->memo 0x56379f256b38
| |   | | `-CXXThisExpr 0x56379f26f490 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56379f26f4d0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x56379f26f460 <col:12> 'String::memo_t *const' lvalue .memo 0x56379f256b38
| |   |     `-DeclRefExpr 0x56379f26f440 <col:12> 'const String::rep_t' lvalue ParmVar 0x56379f26f028 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x56379f26f530 <col:12>
| |     `-UnaryOperator 0x56379f26f518 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56379f26f508 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x56379f26f098 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56379f26f098
|   `-ParmVarDecl 0x56379f26f1a8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x56379f256bb0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x56379f256df8 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x56379f256c18 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x56379f256c98 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x56379f256d10 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x56379f25ad30 <col:79, line:261:5>
|   |-BinaryOperator 0x56379f25a9a8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x56379f25a940 <col:2, col:5> 'const char *' lvalue .data 0x56379f256a40
|   | | `-MemberExpr 0x56379f25a910 <col:2> 'String::rep_t' lvalue ->_r 0x56379f256bb0
|   | |   `-CXXThisExpr 0x56379f25a900 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x56379f25a990 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x56379f25a970 <col:12> 'const char *' lvalue ParmVar 0x56379f256c18 'data' 'const char *'
|   |-BinaryOperator 0x56379f25aa70 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x56379f25aa08 <col:2, col:5> 'int' lvalue .length 0x56379f256aa8
|   | | `-MemberExpr 0x56379f25a9d8 <col:2> 'String::rep_t' lvalue ->_r 0x56379f256bb0
|   | |   `-CXXThisExpr 0x56379f25a9c8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x56379f25aa58 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56379f25aa38 <col:14> 'int' lvalue ParmVar 0x56379f256c98 'length' 'int'
|   `-IfStmt 0x56379f25ad18 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x56379f25ab90 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x56379f25ab78 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x56379f25ab58 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x56379f25ab38 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x56379f25aad0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x56379f256b38
|     |       | `-MemberExpr 0x56379f25aaa0 <col:7> 'String::rep_t' lvalue ->_r 0x56379f256bb0
|     |       |   `-CXXThisExpr 0x56379f25aa90 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x56379f25ab20 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x56379f25ab00 <col:17> 'String::memo_t *' lvalue ParmVar 0x56379f256d10 'memo' 'String::memo_t *'
|     `-CallExpr 0x56379f25acf0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x56379f25acd8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56379f25abe0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x56379f231468 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x56379f25ac48 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56379f256400
|         `-ImplicitCastExpr 0x56379f25ac30 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x56379f25ac10 <col:27> 'String::memo_t *' lvalue ParmVar 0x56379f256d10 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x56379f2570a8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x56379f256ec8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x56379f256f48 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x56379f256fc0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x56379f256bb0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x56379f25b1b8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56379f25b348 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x56379f25b2b0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x56379f25b220 <col:2> '<bound member function type>' ->assign_memo 0x56379f256df8
|     | `-ImplicitCastExpr 0x56379f25b2e8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x56379f25b210 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x56379f25b300 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x56379f25b250 <col:14> 'const char *' lvalue ParmVar 0x56379f256ec8 'data' 'const char *'
|     |-ImplicitCastExpr 0x56379f25b318 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56379f25b270 <col:20> 'int' lvalue ParmVar 0x56379f256f48 'length' 'int'
|     `-ImplicitCastExpr 0x56379f25b330 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x56379f25b290 <col:28> 'String::memo_t *' lvalue ParmVar 0x56379f256fc0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x56379f257238 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x56379f257178 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x56379f25b5a0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x56379f25b520 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x56379f25b370 <col:2> '<bound member function type>' ->assign_memo 0x56379f256df8
|     | `-CXXThisExpr 0x56379f25b360 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x56379f25b558 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x56379f25b3f0 <col:14, col:19> 'const char *' lvalue .data 0x56379f256a40
|     |   `-MemberExpr 0x56379f25b3c0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x56379f256bb0
|     |     `-DeclRefExpr 0x56379f25b3a0 <col:14> 'const String' lvalue ParmVar 0x56379f257178 'x' 'const String &'
|     |-ImplicitCastExpr 0x56379f25b570 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x56379f25b470 <col:25, col:30> 'int' lvalue .length 0x56379f256aa8
|     |   `-MemberExpr 0x56379f25b440 <col:25, col:27> 'String::rep_t' lvalue ._r 0x56379f256bb0
|     |     `-DeclRefExpr 0x56379f25b420 <col:25> 'const String' lvalue ParmVar 0x56379f257178 'x' 'const String &'
|     `-ImplicitCastExpr 0x56379f25b588 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x56379f25b4f0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x56379f256b38
|         `-MemberExpr 0x56379f25b4c0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x56379f256bb0
|           `-DeclRefExpr 0x56379f25b4a0 <col:38> 'const String' lvalue ParmVar 0x56379f257178 'x' 'const String &'
|-CXXMethodDecl 0x56379f257300 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x56379f25c668 <col:31, line:278:5>
|   `-IfStmt 0x56379f25c650 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x56379f25b640 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x56379f25b628 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x56379f25b5f8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x56379f256b38
|     |     `-MemberExpr 0x56379f25b5c8 <col:6> 'String::rep_t' lvalue ->_r 0x56379f256bb0
|     |       `-CXXThisExpr 0x56379f25b5b8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x56379f25c628 <col:15, line:277:2>
|       |-ParenExpr 0x56379f25bbe0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x56379f25bbb0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x56379f25b750 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x56379f25b738 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x56379f25b720 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x56379f25b6e0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56379f256400
|       |   |       `-ImplicitCastExpr 0x56379f25b6c8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x56379f25b698 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x56379f256b38
|       |   |           `-MemberExpr 0x56379f25b668 <col:27> 'String::rep_t' lvalue ->_r 0x56379f256bb0
|       |   |             `-CXXThisExpr 0x56379f25b658 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x56379f25b7b0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x56379f25b790 <col:54> 'int' 0
|       |   `-CallExpr 0x56379f25bb10 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x56379f25baf8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x56379f25ba80 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56379f0ac1f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x56379f25bb50 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x56379f25b898 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x56379f25bb68 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x56379f25b948 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x56379f25bb80 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x56379f25b980 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x56379f25bb98 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x56379f25ba68 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x56379f25ba50 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x56379f25ba18 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x56379f25c548 <line:274:6, line:275:22>
|       | |-CallExpr 0x56379f25bdf0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x56379f25bdd8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x56379f25bd50 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x56379f236800 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x56379f25bd20 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56379f256400
|       | |   `-ImplicitCastExpr 0x56379f25bd08 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x56379f25bcd8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x56379f256b38
|       | |       `-MemberExpr 0x56379f25bca8 <col:40> 'String::rep_t' lvalue ->_r 0x56379f256bb0
|       | |         `-CXXThisExpr 0x56379f25bc98 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x56379f25bef0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x56379f25bed8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x56379f25be18 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x56379f257fd8 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x56379f25c530 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x56379f25be78 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x56379f256b38
|       |       `-MemberExpr 0x56379f25be48 <col:15> 'String::rep_t' lvalue ->_r 0x56379f256bb0
|       |         `-CXXThisExpr 0x56379f25be38 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x56379f25c608 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x56379f25c5a0 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x56379f256b38
|         | `-MemberExpr 0x56379f25c570 <col:6> 'String::rep_t' lvalue ->_r 0x56379f256bb0
|         |   `-CXXThisExpr 0x56379f25c560 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x56379f25c5f0 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x56379f25c5d0 <col:16> 'int' 0
|-CXXMethodDecl 0x56379f257598 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x56379f2573b8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x56379f257438 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x56379f2574b0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x56379f257670 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x56379f2578c0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x56379f257728 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x56379f2577a8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x56379f257820 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x56379f257aa8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x56379f257990 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x56379f257a10 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x56379f257ba8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x56379f25c760 <col:41, line:286:5>
|   `-ReturnStmt 0x56379f25c750 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x56379f25c720 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x56379f25c6e8 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x56379f25c6d0 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x56379f25c6b0 <col:46> 'int' 1
|-CXXMethodDecl 0x56379f257e48 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x56379f257c60 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x56379f257ce0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x56379f257d60 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x56379f257fd8 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x56379f257f10 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x56379f2580a8 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x56379f258278 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x56379f258160 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x56379f2581e0 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x56379f259f20 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x56379f25a068 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x56379f25a1a8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x56379f25a220 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x56379f25a298 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x56379f25a300 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x56379f25a400 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x56379f25a450 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56379f25a3e0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x56379f25a3c0 <col:22> 'int' 14
|-CXXMethodDecl 0x56379f25a668 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x56379f25a480 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x56379f25a500 <col:38> col:41 'int'
| `-ParmVarDecl 0x56379f25a580 <col:43> col:46 'int'
|-FriendDecl 0x56379f25a770 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x56379f25a800 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56379f22cd18 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56379f22ce38 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x56379f22cec8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x56379f22cf98 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x56379f22d080 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x56379f22df38 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56379f22dde0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56379f22e0e8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x56379f22dff0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x56379f22e230 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x56379f22e1a0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x56379f22e378 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56379f22e2e8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56379f22e4c0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56379f22e430 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56379f22e588 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x56379f22e708 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x56379f22e640 <col:28> col:31 'int'
|-CXXMethodDecl 0x56379f22e7d0 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x56379f22e918 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x56379f22e888 <col:28> col:31 'int'
|-CXXMethodDecl 0x56379f22ea98 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x56379f22e9d0 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56379f22ebe0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x56379f22eb50 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56379f22eca8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x56379f22eee8 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56379f22ed58 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56379f22edd0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56379f22f138 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56379f22efa8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56379f22f020 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56379f22f1e8 <col:86> "" ""
|-CXXMethodDecl 0x56379f22f458 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x56379f22f2c8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x56379f22f340 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56379f22f608 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x56379f22f518 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x56379f22f7b8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x56379f22f6c0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x56379f22fa88 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x56379f22f870 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x56379f22f8e8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56379f22f960 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56379f22fdf0 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x56379f22fb50 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x56379f22fbc8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56379f22fc40 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56379f22fea8 <col:115> "" ""
|-AccessSpecDecl 0x56379f22ff18 <line:84:3, col:10> col:3 private
|-FieldDecl 0x56379f22ff50 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56379f2303f8 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x56379f2303f8
| `-ParmVarDecl 0x56379f230508 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x56379f2305a8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x56379f2305a8
| `-ParmVarDecl 0x56379f2306b8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x56379f277dc8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56379f60a460 <col:7>
|-CXXConstructorDecl 0x56379f277ea0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x56379f277ea0
| `-ParmVarDecl 0x56379f277fb8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x56379f278028 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x56379f278028
| `-ParmVarDecl 0x56379f278138 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x56379f60cdd0 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56379f5f9fa0 prev 0x56379f5ebbf0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56379f5fa098 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x56379f5fa188 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x56379f5fa238 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x56379f5fa3b8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x56379f5fa538 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x56379f5fa6b8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x56379f60a5c8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56379f60ae38 <col:11>
|-CXXDestructorDecl 0x56379f60a6a0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x56379f60a7d8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x56379f60a7d8
| `-ParmVarDecl 0x56379f60a8e8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x56379f60a988 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56379f60a988
| `-ParmVarDecl 0x56379f60aa98 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x56379f60d7c8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x56379f60d8d8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x56379f60db58 <col:11>
|   `-ReturnStmt 0x56379f60db48 <col:11>
|     `-UnaryOperator 0x56379f60db30 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56379f60db20 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x56379f60d948 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56379f60d948
  `-ParmVarDecl 0x56379f60da58 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56379f5fa720 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56379f5fa838 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x56379f5fa8d8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x56379f5fa940 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x56379f5fa9a8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x56379f5faa10 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x56379f5faa70 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x56379f5fab30 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x56379f5fab90 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x56379f5fabf0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x56379f60a4d8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x56379f5fa8d8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x56379f60ae48 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x56379f60aea0 <col:12>
|-CXXConstructorDecl 0x56379f60ab08 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x56379f60ab08
| `-ParmVarDecl 0x56379f60ac18 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x56379f60acb8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x56379f60acb8
| `-ParmVarDecl 0x56379f60adc8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x56379f60ceb0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56379f5e5340 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56379f5e5458 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x56379f5e54e8 <col:16, col:22> col:16 public
|-EnumDecl 0x56379f5e5510 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x56379f5e5610 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x56379f5e56f0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5e55f0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x56379f5e55d0 <col:21> 'int' 28
| `-EnumConstantDecl 0x56379f5e56a0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x56379f5e5708 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56379f5e5680 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x56379f5e5660 <col:22> 'int' 64
|-CXXMethodDecl 0x56379f5e5a48 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x56379f5e5730 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56379f5e57b0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x56379f5e5828 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56379f5e58a0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56379f5e5b08 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x56379f5e5d08 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x56379f5e5b80 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x56379f5e5bf8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56379f5e5db8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x56379f5e5f18 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x56379f5e5e28 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56379f5e5fc0 <col:72> warn_unused_result ""
|-TypedefDecl 0x56379f5e62f0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x56379f5e6280 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x56379f5e6220 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x56379f5e61e0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x56379f010310 'void'
|       |-PointerType 0x56379f2632e0 'unsigned char *'
|       | `-BuiltinType 0x56379f010410 'unsigned char'
|       |-TypedefType 0x56379f0b5430 'size_t' sugar
|       | |-Typedef 0x56379f080af0 'size_t'
|       | `-BuiltinType 0x56379f010470 'unsigned long'
|       `-PointerType 0x56379f010b10 'void *'
|         `-BuiltinType 0x56379f010310 'void'
|-CXXMethodDecl 0x56379f5e6768 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x56379f5e6360 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x56379f5e63d8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56379f5e6470 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x56379f5e64f0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x56379f5fc080 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x56379f5fc068 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x56379f5fc030 <col:58> 'int' 0
| |-ParmVarDecl 0x56379f5e6570 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x56379f5fc0a8 <col:76> 'int' 0
| |-ParmVarDecl 0x56379f5e65f0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x56379f5fc0c8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x56379f5e6838 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x56379f5e68b8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x56379f5e6978 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x56379f5e6a18 <col:20>
| `-OptimizeNoneAttr 0x56379f5e6a70 <col:30>
|-CXXMethodDecl 0x56379f5e6ae8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x56379f5e6b88 <col:20>
| `-OptimizeNoneAttr 0x56379f5e6be0 <col:30>
|-CXXMethodDecl 0x56379f5e6c58 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x56379f5e6cf8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x56379f5e6da8 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x56379f5e6e48 <col:20>
| |-OptimizeNoneAttr 0x56379f5e6ea0 <col:30>
| `-WarnUnusedResultAttr 0x56379f5e6ec8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x56379f5e6f20 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x56379f5e6fc0 <col:20>
| `-OptimizeNoneAttr 0x56379f5e7018 <col:30>
|-CXXMethodDecl 0x56379f5e7068 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x56379f5e7108 <col:20>
| `-OptimizeNoneAttr 0x56379f5e7160 <col:30>
|-CXXMethodDecl 0x56379f5e71a8 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x56379f5e7248 <col:20>
| `-OptimizeNoneAttr 0x56379f5e72a0 <col:30>
|-CXXMethodDecl 0x56379f5e72e8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x56379f5e73a8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x56379f5e7470 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56379f5e7538 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56379f5e75f8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56379f5e7718 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x56379f5fc190 <col:54, line:99:5>
|   `-ReturnStmt 0x56379f5fc180 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x56379f5fc168 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x56379f5fc138 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56379f5faf28
|         `-CXXThisExpr 0x56379f5fc128 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x56379f5e78b8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x56379f5e77c8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x56379f5fc240 <col:67, line:103:5>
|   `-BinaryOperator 0x56379f5fc220 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x56379f5fc1b8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56379f5faf28
|     | `-CXXThisExpr 0x56379f5fc1a8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x56379f5fc208 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x56379f5fc1e8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x56379f5e77c8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x56379f5e79b0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x56379f5fc2c0 <col:33, line:107:5>
|   `-ReturnStmt 0x56379f5fc2b0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x56379f5fc298 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x56379f5fc268 <col:16> 'void *' lvalue ->_destructor_argument 0x56379f5faf90
|         `-CXXThisExpr 0x56379f5fc258 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x56379f5e7a70 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x56379f5fc8f0 <col:25, line:113:5>
|   |-ParenExpr 0x56379f5fc638 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x56379f5fc608 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x56379f5fc378 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x56379f5fc350 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x56379f5fc318 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x56379f5fc2e8 <col:24> '<bound member function type>' ->shared 0x56379f5e6ae8
|   |   |       `-ImplicitCastExpr 0x56379f5fc338 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x56379f5fc2d8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x56379f5fc3d8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56379f5fc3b8 <col:42> 'int' 0
|   |   `-CallExpr 0x56379f5fc568 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x56379f5fc550 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56379f5fc530 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56379f0ac1f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56379f5fc5a8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f5fc448 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x56379f5fc5c0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f5fc470 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56379f5fc5d8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56379f5fc4a8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x56379f5fc5f0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56379f5fc518 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56379f5fc500 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56379f5fc4c8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x56379f5fc838 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x56379f5fc668 <col:2> 'unsigned char *' lvalue ->_head 0x56379f5fad30
|   | | `-CXXThisExpr 0x56379f5fc658 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x56379f5fc820 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x56379f5fc800 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x56379f5fc6a8 <col:10> 'unsigned char *' lvalue ->_data 0x56379f5fad98
|   |     | `-CXXThisExpr 0x56379f5fc698 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x56379f5fc7e8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x56379f5fc7c8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x56379f5fc6e8 <col:18> 'unsigned char *' lvalue ->_tail 0x56379f5fae00
|   |         | `-CXXThisExpr 0x56379f5fc6d8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x56379f5fc7b0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x56379f5fc790 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x56379f5fc728 <col:26> 'unsigned char *' lvalue ->_end 0x56379f5fae68
|   |             | `-CXXThisExpr 0x56379f5fc718 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x56379f5fc778 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x56379f5fc758 <col:33> 'int' 0
|   `-BinaryOperator 0x56379f5fc8d0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x56379f5fc868 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56379f5faf28
|     | `-CXXThisExpr 0x56379f5fc858 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x56379f5fc8b8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x56379f5fc898 <col:16> 'int' 0
|-CXXMethodDecl 0x56379f5e7bb0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56379f5e7b20 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56379f5e7c58 <col:20>
| |-OptimizeNoneAttr 0x56379f5e7cb0 <col:30>
| `-WarnUnusedResultAttr 0x56379f5e7cd8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x56379f5e7da8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56379f5e7d18 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56379f5e7e50 <col:20>
| |-OptimizeNoneAttr 0x56379f5e7ea8 <col:30>
| `-WarnUnusedResultAttr 0x56379f5e7ed0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x56379f5e8008 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x56379f5e7f10 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56379f5e80b0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x56379f5e81b0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x56379f5e8120 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56379f5e8258 <col:20>
| `-OptimizeNoneAttr 0x56379f5e82b0 <col:30>
|-CXXMethodDecl 0x56379f5e8378 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56379f5e82e8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56379f5e8420 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x56379f5e8520 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x56379f5e8490 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56379f5e85c8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x56379f5e86c8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x56379f5e8638 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56379f5e8770 <col:20>
| `-OptimizeNoneAttr 0x56379f5e87c8 <col:30>
|-CXXMethodDecl 0x56379f5e8958 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x56379f5e8808 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x56379f5e8880 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x56379f5fc0e8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x56379f5e8a08 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x56379f5e8c08 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56379f5e8a80 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x56379f5e8af8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56379f5e8e18 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56379f5e8cc8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56379f5e8d40 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56379f5e9028 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x56379f5e8ed8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x56379f5e8f58 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x56379f5fc0f8 <col:39> 'int' 0
|-CXXMethodDecl 0x56379f5e90f8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x56379f5e91c0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56379f5e9288 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x56379f5e9348 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56379f5e9410 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x56379f5e9558 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x56379f5e94c8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x56379f5e9728 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56379f5e9618 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x56379f5e9690 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56379f5e97f8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x56379f5e98b8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x56379f5e9958 <col:20>
| `-OptimizeNoneAttr 0x56379f5e99b0 <col:30>
|-CXXMethodDecl 0x56379f5e9a00 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x56379f5e9aa0 <col:20>
| `-OptimizeNoneAttr 0x56379f5e9af8 <col:30>
|-CXXMethodDecl 0x56379f5e9b48 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x56379f5e9c08 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56379f5e9cd0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x56379f5e9d70 <col:20>
| `-OptimizeNoneAttr 0x56379f5e9dc8 <col:30>
|-CXXMethodDecl 0x56379f5e9f18 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56379f5e9e08 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x56379f5e9e80 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56379f5ea068 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x56379f5e9fd8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56379f5ea130 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x56379f5ea1f0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x56379f5ea290 <col:20>
| `-OptimizeNoneAttr 0x56379f5ea2e8 <col:30>
|-CXXMethodDecl 0x56379f5ea338 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x56379f5ea3d8 <col:20>
| `-OptimizeNoneAttr 0x56379f5ea430 <col:30>
|-CXXMethodDecl 0x56379f5ea480 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x56379f5ea548 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x56379f5ea5e8 <col:20>
| `-OptimizeNoneAttr 0x56379f5ea640 <col:30>
|-CXXMethodDecl 0x56379f5ea688 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x56379f5ea7a8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x56379f5ea918 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x56379f5ea858 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x56379f5eaa08 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x56379f5eaaa8 <col:20>
| `-OptimizeNoneAttr 0x56379f5eab00 <col:30>
|-CXXMethodDecl 0x56379f5eab50 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x56379f5eac10 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56379f5eae48 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x56379f5eacc0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x56379f5ead38 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56379f5eaef8 <col:20>
| `-OptimizeNoneAttr 0x56379f5eaf50 <col:30>
|-CXXMethodDecl 0x56379f5eaff8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x56379f5eb098 <col:20>
| `-OptimizeNoneAttr 0x56379f5eb0f0 <col:30>
|-CXXMethodDecl 0x56379f5eb140 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x56379f5eb1e0 <col:20>
| `-OptimizeNoneAttr 0x56379f5eb238 <col:30>
|-CXXMethodDecl 0x56379f5eb280 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x56379f5eb320 <col:20>
| `-OptimizeNoneAttr 0x56379f5eb378 <col:30>
|-CXXMethodDecl 0x56379f5eb478 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x56379f5eb3b0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x56379f5eb520 <col:20>
| `-OptimizeNoneAttr 0x56379f5eb578 <col:30>
|-CXXMethodDecl 0x56379f5eb738 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x56379f5eb5b0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x56379f5eb628 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56379f5eb7e8 <col:20>
| `-OptimizeNoneAttr 0x56379f5eb840 <col:30>
|-CXXMethodDecl 0x56379f5eb8e8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x56379f5eba08 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x56379f5ebb28 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x56379f5ebbc8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x56379f5ebbf0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x56379f5ebd18 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x56379f5ebdb8 <col:20>
| `-OptimizeNoneAttr 0x56379f5ebe10 <col:30>
|-CXXMethodDecl 0x56379f5ebeb8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x56379f5ebf58 <col:20>
| `-OptimizeNoneAttr 0x56379f5ebfb0 <col:30>
|-AccessSpecDecl 0x56379f5ebfd8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x56379f5ec000 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x56379f5ec100 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x56379f5ec150 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56379f5ec0e0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x56379f5ec0c0 <col:14> 'int' 48
|-CXXMethodDecl 0x56379f5ec1b8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x56379f5ec258 <col:20>
| `-OptimizeNoneAttr 0x56379f5ec2b0 <col:30>
|-CXXMethodDecl 0x56379f5ec328 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x56379f5ec3c8 <col:20>
| `-OptimizeNoneAttr 0x56379f5ec420 <col:30>
|-CXXMethodDecl 0x56379f5ec520 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x56379f5ec458 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x56379f5ec6c8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x56379f5ec868 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x56379f5ec778 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x56379f5ec910 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x56379f5eca10 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56379f5ecdc0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5ec9f0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x56379f5ec9d0 <col:9> 'int' 0
| |-EnumConstantDecl 0x56379f5ecaa0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56379f5ecdd8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5eca80 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x56379f5eca60 <col:14> 'int' 1
| |-EnumConstantDecl 0x56379f5ecb30 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56379f5ecdf0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5ecb10 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x56379f5ecaf0 <col:14> 'int' 2
| |-EnumConstantDecl 0x56379f5ecbc0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56379f5ece08 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5ecba0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x56379f5ecb80 <col:14> 'int' 3
| |-EnumConstantDecl 0x56379f5ecc50 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56379f5ece20 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5ecc30 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x56379f5ecc10 <col:13> 'int' 4
| |-EnumConstantDecl 0x56379f5ecce0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56379f5ece38 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5eccc0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x56379f5ecca0 <col:13> 'int' 5
| `-EnumConstantDecl 0x56379f5ecd70 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x56379f5ece50 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56379f5ecd50 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x56379f5ecd30 <col:14> 'int' 6
|-CXXMethodDecl 0x56379f5eceb8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x56379f5ecf58 <col:20>
| `-OptimizeNoneAttr 0x56379f5ecfb0 <col:30>
|-CXXMethodDecl 0x56379f5ed0a8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x56379f5ecfe8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x56379f5ed150 <col:20>
| `-OptimizeNoneAttr 0x56379f5ed1a8 <col:30>
|-CXXMethodDecl 0x56379f5ed218 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x56379f5ed340 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x56379f5ed4b8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x56379f5ed3f0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x56379f5ed580 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x56379f5ed648 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x56379f5ed788 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x56379f5ed6f8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x56379f5ed830 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x56379f5ed930 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56379f5edb30 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5ed910 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x56379f5ed8f0 <col:23> 'int' 0
| |-EnumConstantDecl 0x56379f5ed9c0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56379f5edb48 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5ed9a0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x56379f5ed980 <col:45> 'int' 4
| |-EnumConstantDecl 0x56379f5eda50 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56379f5edb60 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5eda30 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x56379f5eda10 <col:24> 'int' 0
| `-EnumConstantDecl 0x56379f5edae0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x56379f5edb78 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56379f5edac0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x56379f5edaa0 <col:47> 'int' 16
|-CXXMethodDecl 0x56379f5edbd8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x56379f5edd48 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x56379f5edc88 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x56379f5eddf0 <col:20>
| `-OptimizeNoneAttr 0x56379f5ede48 <col:30>
|-CXXMethodDecl 0x56379f5ede98 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x56379f5fca10 <col:18, col:36>
|   `-ReturnStmt 0x56379f5fca00 <col:20, col:33>
|     `-ImplicitCastExpr 0x56379f5fc9e8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x56379f5fc9c8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x56379f5fc998 <col:27> '<bound member function type>' ->xanno 0x56379f5ebeb8
|           `-CXXThisExpr 0x56379f5fc988 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x56379f5edf90 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x56379f5fcb20 <col:30, col:48>
|   `-ReturnStmt 0x56379f5fcb10 <col:32, col:45>
|     `-ImplicitCastExpr 0x56379f5fcaf8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x56379f5fcad8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x56379f5fcaa8 <col:39> '<bound member function type>' ->xanno 0x56379f5ebd18
|           `-CXXThisExpr 0x56379f5fca98 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x56379f5ee078 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x56379f5fccb8 <col:24, col:50>
|   `-ReturnStmt 0x56379f5fcca8 <col:26, col:47>
|     `-UnaryOperator 0x56379f5fcc90 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56379f5fcc70 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x56379f5fcc58 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56379f5fcc08 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x56379f5fa238
|         |   `-CXXMemberCallExpr 0x56379f5fcbe8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x56379f5fcbb8 <col:34> '<bound member function type>' ->xanno 0x56379f5ebeb8
|         |       `-CXXThisExpr 0x56379f5fcba8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x56379f5fcc38 <col:46> 'int' 0
|-CXXMethodDecl 0x56379f5ee168 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x56379f5fce50 <col:36, col:62>
|   `-ReturnStmt 0x56379f5fce40 <col:38, col:59>
|     `-UnaryOperator 0x56379f5fce28 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56379f5fce08 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x56379f5fcdf0 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56379f5fcda0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x56379f5fa238
|         |   `-CXXMemberCallExpr 0x56379f5fcd80 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56379f5fcd50 <col:46> '<bound member function type>' ->xanno 0x56379f5ebd18
|         |       `-CXXThisExpr 0x56379f5fcd40 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x56379f5fcdd0 <col:58> 'int' 0
|-CXXMethodDecl 0x56379f5ee288 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x56379f5fcfe8 <col:26, col:53>
|   `-ReturnStmt 0x56379f5fcfd8 <col:28, col:50>
|     `-UnaryOperator 0x56379f5fcfc0 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56379f5fcfa0 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x56379f5fcf88 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56379f5fcf38 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x56379f5fa538
|         |   `-CXXMemberCallExpr 0x56379f5fcf18 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x56379f5fcee8 <col:36> '<bound member function type>' ->xanno 0x56379f5ebeb8
|         |       `-CXXThisExpr 0x56379f5fced8 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x56379f5fcf68 <col:49> 'int' 0
|-CXXMethodDecl 0x56379f5ee3a8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x56379f5fd1b8 <col:38, col:65>
|   `-ReturnStmt 0x56379f5fd1a8 <col:40, col:62>
|     `-UnaryOperator 0x56379f5fd190 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56379f5fd170 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x56379f5fd158 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56379f5fd0d0 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x56379f5fa538
|         |   `-CXXMemberCallExpr 0x56379f5fd0b0 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56379f5fd080 <col:48> '<bound member function type>' ->xanno 0x56379f5ebd18
|         |       `-CXXThisExpr 0x56379f5fd070 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x56379f5fd100 <col:61> 'int' 0
|-CXXMethodDecl 0x56379f5ee558 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x56379f5ee460 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x56379f5fd888 <col:34, line:463:5>
|   |-ParenExpr 0x56379f5fd6d0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x56379f5fd6a0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x56379f5fd308 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56379f5fd2d8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56379f5fd228 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56379f5fd210 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56379f5fd1d0 <col:23> 'int' lvalue ParmVar 0x56379f5ee460 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56379f5fd1f0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56379f5fd2b8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56379f5fd288 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56379f5fd248 <col:33> 'int' lvalue ParmVar 0x56379f5ee460 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x56379f5fd2a0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x56379f5fd268 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56379f5ec100 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x56379f5fd368 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56379f5fd348 <col:56> 'int' 0
|   |   `-CallExpr 0x56379f5fd600 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x56379f5fd5e8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56379f5fd5c8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56379f0ac1f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56379f5fd640 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f5fd458 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x56379f5fd658 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f5fd488 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56379f5fd670 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56379f5fd4c0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x56379f5fd688 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56379f5fd5b0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56379f5fd598 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56379f5fd558 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x56379f5fd878 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x56379f5fd860 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x56379f5fd840 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x56379f5fd810 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56379f5fd7c0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x56379f5fa238
|         |   `-CXXMemberCallExpr 0x56379f5fd7a0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56379f5fd770 <col:9> '<bound member function type>' ->xanno 0x56379f5ebd18
|         |       `-CXXThisExpr 0x56379f5fd760 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x56379f5fd828 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x56379f5fd7f0 <col:21> 'int' lvalue ParmVar 0x56379f5ee460 'i' 'int'
|-CXXMethodDecl 0x56379f5ee7a8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x56379f5ee618 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x56379f5ee690 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x56379f5fdf18 <col:40, line:472:5>
|   |-ParenExpr 0x56379f5fdd30 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x56379f5fdd00 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x56379f5fd9e0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56379f5fd9b0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56379f5fd900 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56379f5fd8e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56379f5fd8a8 <col:23> 'int' lvalue ParmVar 0x56379f5ee618 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56379f5fd8c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56379f5fd990 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56379f5fd960 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56379f5fd920 <col:33> 'int' lvalue ParmVar 0x56379f5ee618 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x56379f5fd978 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x56379f5fd940 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56379f5ec100 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x56379f5fda40 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56379f5fda20 <col:56> 'int' 0
|   |   `-CallExpr 0x56379f5fdc60 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x56379f5fdc48 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56379f5fdc28 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56379f0ac1f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56379f5fdca0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f5fdab0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x56379f5fdcb8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f5fdae0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56379f5fdcd0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56379f5fdb18 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x56379f5fdce8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56379f5fdc10 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56379f5fdbf8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56379f5fdbb8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x56379f5fdef8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x56379f5fdea0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x56379f5fde70 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x56379f5fde20 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x56379f5fa238
|     | |   `-CXXMemberCallExpr 0x56379f5fde00 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x56379f5fddd0 <col:2> '<bound member function type>' ->xanno 0x56379f5ebeb8
|     | |       `-CXXThisExpr 0x56379f5fddc0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x56379f5fde88 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x56379f5fde50 <col:14> 'int' lvalue ParmVar 0x56379f5ee618 'i' 'int'
|     `-ImplicitCastExpr 0x56379f5fdee0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x56379f5fdec0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x56379f5ee690 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x56379f5ee968 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x56379f5ee870 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56379f5fe698 <col:36, line:485:5>
|   |-ParenExpr 0x56379f5fe400 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x56379f5fe3d0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56379f5fe0b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56379f5fe080 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56379f5fdf90 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56379f5fdf78 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56379f5fdf38 <col:23> 'int' lvalue ParmVar 0x56379f5ee870 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56379f5fdf58 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56379f5fe060 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56379f5fe048 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56379f5fdfb0 <col:33> 'int' lvalue ParmVar 0x56379f5ee870 'i' 'int'
|   |   |     `-BinaryOperator 0x56379f5fe028 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56379f5fe010 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56379f5fdfd0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56379f5ec100 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56379f5fdff0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56379f5fe110 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56379f5fe0f0 <col:60> 'int' 0
|   |   `-CallExpr 0x56379f5fe330 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56379f5fe318 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56379f5fe2f8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56379f0ac1f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56379f5fe370 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f5fe180 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56379f5fe388 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f5fe1b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56379f5fe3a0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56379f5fe1f0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x56379f5fe3b8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56379f5fe2e0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56379f5fe2c8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56379f5fe288 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x56379f5fe688 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x56379f5fe670 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x56379f5fe658 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56379f5fe628 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x56379f5fe5c8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56379f5fe598 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56379f5fe510 <col:61, col:70> 'char const[48]' lvalue ->c 0x56379f5fa188
|             |   `-CXXMemberCallExpr 0x56379f5fe4f0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56379f5fe4c0 <col:61> '<bound member function type>' ->xanno 0x56379f5ebd18
|             |       `-CXXThisExpr 0x56379f5fe4b0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56379f5fe5b0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56379f5fe540 <col:74> 'int' lvalue ParmVar 0x56379f5ee870 'i' 'int'
|-CXXMethodDecl 0x56379f5eebb8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x56379f5eea28 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56379f5eeaa0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x56379f5fede8 <col:42, line:500:5>
|   |-ParenExpr 0x56379f5feb80 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x56379f5feb50 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56379f5fe830 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56379f5fe800 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56379f5fe710 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56379f5fe6f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56379f5fe6b8 <col:23> 'int' lvalue ParmVar 0x56379f5eea28 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56379f5fe6d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56379f5fe7e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56379f5fe7c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56379f5fe730 <col:33> 'int' lvalue ParmVar 0x56379f5eea28 'i' 'int'
|   |   |     `-BinaryOperator 0x56379f5fe7a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56379f5fe790 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56379f5fe750 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56379f5ec100 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56379f5fe770 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56379f5fe890 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56379f5fe870 <col:60> 'int' 0
|   |   `-CallExpr 0x56379f5feab0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56379f5fea98 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56379f5fea78 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56379f0ac1f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56379f5feaf0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f5fe900 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56379f5feb08 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f5fe938 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56379f5feb20 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56379f5fe970 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x56379f5feb38 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56379f5fea60 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56379f5fea48 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56379f5fea08 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x56379f5fedc8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x56379f5fed78 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56379f5fed48 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x56379f5fecf0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56379f5fecc0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56379f5fec70 <col:48, col:57> 'char [48]' lvalue ->c 0x56379f5fa188
|     |     |   `-CXXMemberCallExpr 0x56379f5fec50 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56379f5fec20 <col:48> '<bound member function type>' ->xanno 0x56379f5ebeb8
|     |     |       `-CXXThisExpr 0x56379f5fec10 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56379f5fecd8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56379f5feca0 <col:61> 'int' lvalue ParmVar 0x56379f5eea28 'i' 'int'
|     `-ImplicitCastExpr 0x56379f5fedb0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x56379f5fed90 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x56379f5eeaa0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x56379f5eed78 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x56379f5eec80 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x56379f5ff548 <col:35, line:513:5>
|   |-ParenExpr 0x56379f5ff258 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x56379f5ff228 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56379f5fef80 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56379f5fef50 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56379f5fee60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56379f5fee48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56379f5fee08 <col:23> 'int' lvalue ParmVar 0x56379f5eec80 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56379f5fee28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56379f5fef30 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56379f5fef18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56379f5fee80 <col:33> 'int' lvalue ParmVar 0x56379f5eec80 'i' 'int'
|   |   |     `-BinaryOperator 0x56379f5feef8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56379f5feee0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56379f5feea0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56379f5ec100 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56379f5feec0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56379f5fefe0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56379f5fefc0 <col:60> 'int' 0
|   |   `-CallExpr 0x56379f5ff188 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56379f5ff170 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56379f5ff150 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56379f0ac1f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56379f5ff1c8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f5ff050 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56379f5ff1e0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f5ff088 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56379f5ff1f8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56379f5ff0c0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x56379f5ff210 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56379f5ff138 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56379f5ff120 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56379f5ff0e0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x56379f5ff538 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x56379f5ff520 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x56379f5ff508 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56379f5ff4d8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x56379f5ff450 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x56379f5ff420 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56379f5ff3d0 <col:60, col:69> 'char const[48]' lvalue ->c 0x56379f5fa188
|             |   `-CXXMemberCallExpr 0x56379f5ff3b0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56379f5ff380 <col:60> '<bound member function type>' ->xanno 0x56379f5ebd18
|             |       `-CXXThisExpr 0x56379f5ff370 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56379f5ff438 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56379f5ff400 <col:73> 'int' lvalue ParmVar 0x56379f5eec80 'i' 'int'
|-CXXMethodDecl 0x56379f5eefc8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x56379f5eee38 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56379f5eeeb0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x56379f5ffc28 <col:41, line:528:5>
|   |-ParenExpr 0x56379f5ff9b8 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x56379f5ff988 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56379f5ff6e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56379f5ff6b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56379f5ff5c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56379f5ff5a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56379f5ff568 <col:23> 'int' lvalue ParmVar 0x56379f5eee38 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56379f5ff588 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56379f5ff690 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56379f5ff678 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56379f5ff5e0 <col:33> 'int' lvalue ParmVar 0x56379f5eee38 'i' 'int'
|   |   |     `-BinaryOperator 0x56379f5ff658 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56379f5ff640 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56379f5ff600 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56379f5ec100 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56379f5ff620 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56379f5ff740 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56379f5ff720 <col:60> 'int' 0
|   |   `-CallExpr 0x56379f5ff8e8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56379f5ff8d0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56379f5ff8b0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56379f0ac1f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56379f5ff928 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f5ff7b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56379f5ff940 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f5ff7e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56379f5ff958 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56379f5ff820 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x56379f5ff970 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56379f5ff898 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56379f5ff880 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56379f5ff840 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x56379f5ffc08 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x56379f5ffbb8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56379f5ffb88 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x56379f5ffb28 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56379f5ffaf8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56379f5ffaa8 <col:47, col:56> 'char [48]' lvalue ->c 0x56379f5fa188
|     |     |   `-CXXMemberCallExpr 0x56379f5ffa88 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56379f5ffa58 <col:47> '<bound member function type>' ->xanno 0x56379f5ebeb8
|     |     |       `-CXXThisExpr 0x56379f5ffa48 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56379f5ffb10 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56379f5ffad8 <col:60> 'int' lvalue ParmVar 0x56379f5eee38 'i' 'int'
|     `-ImplicitCastExpr 0x56379f5ffbf0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x56379f5ffbd0 <col:65> 'int16_t':'short' lvalue ParmVar 0x56379f5eeeb0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x56379f5ef188 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x56379f5ef090 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56379f6002f8 <col:36, line:541:5>
|   |-ParenExpr 0x56379f600098 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x56379f600068 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56379f5ffdc0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56379f5ffd90 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56379f5ffca0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56379f5ffc88 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56379f5ffc48 <col:23> 'int' lvalue ParmVar 0x56379f5ef090 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56379f5ffc68 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56379f5ffd70 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56379f5ffd58 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56379f5ffcc0 <col:33> 'int' lvalue ParmVar 0x56379f5ef090 'i' 'int'
|   |   |     `-BinaryOperator 0x56379f5ffd38 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56379f5ffd20 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56379f5ffce0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56379f5ec100 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56379f5ffd00 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56379f5ffe20 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56379f5ffe00 <col:60> 'int' 0
|   |   `-CallExpr 0x56379f5fffc8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56379f5fffb0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56379f5fff90 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56379f0ac1f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56379f600008 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f5ffe90 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56379f600020 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f5ffec8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56379f600038 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56379f5fff00 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x56379f600050 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56379f5fff78 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56379f5fff60 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56379f5fff20 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x56379f6002e8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x56379f6002d0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x56379f6002b8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56379f600288 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x56379f600230 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56379f600200 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56379f6001b0 <col:61, col:70> 'char const[48]' lvalue ->c 0x56379f5fa188
|             |   `-CXXMemberCallExpr 0x56379f600190 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56379f600160 <col:61> '<bound member function type>' ->xanno 0x56379f5ebd18
|             |       `-CXXThisExpr 0x56379f600150 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56379f600218 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56379f6001e0 <col:74> 'int' lvalue ParmVar 0x56379f5ef090 'i' 'int'
|-CXXMethodDecl 0x56379f5ef358 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x56379f5ef248 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x56379f5ef2c0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56379f5ef408 <col:20>
| `-OptimizeNoneAttr 0x56379f5ef460 <col:30>
|-CXXMethodDecl 0x56379f5ef598 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x56379f5ef4a0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x56379f6009c8 <col:35, line:562:5>
|   |-ParenExpr 0x56379f600768 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x56379f600738 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56379f600490 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56379f600460 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56379f600370 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56379f600358 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56379f600318 <col:23> 'int' lvalue ParmVar 0x56379f5ef4a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56379f600338 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56379f600440 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56379f600428 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56379f600390 <col:33> 'int' lvalue ParmVar 0x56379f5ef4a0 'i' 'int'
|   |   |     `-BinaryOperator 0x56379f600408 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56379f6003f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56379f6003b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56379f5ec100 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56379f6003d0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56379f6004f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56379f6004d0 <col:60> 'int' 0
|   |   `-CallExpr 0x56379f600698 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56379f600680 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56379f600660 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56379f0ac1f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56379f6006d8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f600560 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56379f6006f0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f600598 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56379f600708 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56379f6005d0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x56379f600720 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56379f600648 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56379f600630 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56379f6005f0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x56379f6009b8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x56379f6009a0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x56379f600988 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56379f600958 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x56379f600900 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x56379f6008d0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56379f600880 <col:60, col:69> 'char const[48]' lvalue ->c 0x56379f5fa188
|             |   `-CXXMemberCallExpr 0x56379f600860 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56379f600830 <col:60> '<bound member function type>' ->xanno 0x56379f5ebd18
|             |       `-CXXThisExpr 0x56379f600820 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56379f6008e8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56379f6008b0 <col:73> 'int' lvalue ParmVar 0x56379f5ef4a0 'i' 'int'
|-CXXMethodDecl 0x56379f5ef7a8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x56379f5ef658 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56379f5ef6d0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x56379f6010a8 <col:41, line:577:5>
|   |-ParenExpr 0x56379f600e38 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x56379f600e08 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56379f600b60 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56379f600b30 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56379f600a40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56379f600a28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56379f6009e8 <col:23> 'int' lvalue ParmVar 0x56379f5ef658 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56379f600a08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56379f600b10 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56379f600af8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56379f600a60 <col:33> 'int' lvalue ParmVar 0x56379f5ef658 'i' 'int'
|   |   |     `-BinaryOperator 0x56379f600ad8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56379f600ac0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56379f600a80 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56379f5ec100 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56379f600aa0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56379f600bc0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56379f600ba0 <col:60> 'int' 0
|   |   `-CallExpr 0x56379f600d68 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56379f600d50 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56379f600d30 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56379f0ac1f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56379f600da8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f600c30 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56379f600dc0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f600c68 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56379f600dd8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56379f600ca0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x56379f600df0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56379f600d18 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56379f600d00 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56379f600cc0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x56379f601088 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x56379f601038 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56379f601008 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x56379f600fa8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56379f600f78 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56379f600f28 <col:47, col:56> 'char [48]' lvalue ->c 0x56379f5fa188
|     |     |   `-CXXMemberCallExpr 0x56379f600f08 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56379f600ed8 <col:47> '<bound member function type>' ->xanno 0x56379f5ebeb8
|     |     |       `-CXXThisExpr 0x56379f600ec8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56379f600f90 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56379f600f58 <col:60> 'int' lvalue ParmVar 0x56379f5ef658 'i' 'int'
|     `-ImplicitCastExpr 0x56379f601070 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x56379f601050 <col:65> 'int32_t':'int' lvalue ParmVar 0x56379f5ef6d0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x56379f5ef968 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x56379f5ef870 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56379f6017d8 <col:36, line:591:5>
|   |-ParenExpr 0x56379f601518 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x56379f6014e8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56379f601240 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56379f601210 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56379f601120 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56379f601108 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56379f6010c8 <col:23> 'int' lvalue ParmVar 0x56379f5ef870 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56379f6010e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56379f6011f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56379f6011d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56379f601140 <col:33> 'int' lvalue ParmVar 0x56379f5ef870 'i' 'int'
|   |   |     `-BinaryOperator 0x56379f6011b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56379f6011a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56379f601160 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56379f5ec100 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56379f601180 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x56379f6012a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56379f601280 <col:60> 'int' 0
|   |   `-CallExpr 0x56379f601448 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56379f601430 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56379f601410 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56379f0ac1f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56379f601488 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f601310 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x56379f6014a0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f601348 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56379f6014b8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56379f601380 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x56379f6014d0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56379f6013f8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56379f6013e0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56379f6013a0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x56379f6017c8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x56379f6017b0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x56379f601798 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56379f601768 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x56379f6016e0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56379f6016b0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56379f601660 <col:61, col:70> 'char const[48]' lvalue ->c 0x56379f5fa188
|             |   `-CXXMemberCallExpr 0x56379f601640 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56379f601610 <col:61> '<bound member function type>' ->xanno 0x56379f5ebd18
|             |       `-CXXThisExpr 0x56379f601600 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56379f6016c8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56379f601690 <col:74> 'int' lvalue ParmVar 0x56379f5ef870 'i' 'int'
|-CXXMethodDecl 0x56379f5efbb8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x56379f5efa28 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56379f5efaa0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x56379f601eb8 <col:42, line:606:5>
|   |-ParenExpr 0x56379f601c48 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x56379f601c18 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56379f601970 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56379f601940 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56379f601850 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56379f601838 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56379f6017f8 <col:23> 'int' lvalue ParmVar 0x56379f5efa28 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56379f601818 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56379f601920 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56379f601908 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56379f601870 <col:33> 'int' lvalue ParmVar 0x56379f5efa28 'i' 'int'
|   |   |     `-BinaryOperator 0x56379f6018e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56379f6018d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56379f601890 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56379f5ec100 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56379f6018b0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x56379f6019d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56379f6019b0 <col:60> 'int' 0
|   |   `-CallExpr 0x56379f601b78 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56379f601b60 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56379f601b40 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56379f0ac1f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56379f601bb8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f601a40 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x56379f601bd0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f601a78 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56379f601be8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56379f601ab0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x56379f601c00 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56379f601b28 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56379f601b10 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56379f601ad0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x56379f601e98 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x56379f601e48 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56379f601e18 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x56379f601db8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56379f601d88 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56379f601d38 <col:48, col:57> 'char [48]' lvalue ->c 0x56379f5fa188
|     |     |   `-CXXMemberCallExpr 0x56379f601d18 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56379f601ce8 <col:48> '<bound member function type>' ->xanno 0x56379f5ebeb8
|     |     |       `-CXXThisExpr 0x56379f601cd8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56379f601da0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56379f601d68 <col:61> 'int' lvalue ParmVar 0x56379f5efa28 'i' 'int'
|     `-ImplicitCastExpr 0x56379f601e80 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x56379f601e60 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x56379f5efaa0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x56379f5efd50 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x56379f5efc80 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x56379f609b98 <col:33, line:620:5>
|   |-ParenExpr 0x56379f609910 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x56379f6098e0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x56379f609530 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56379f609500 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56379f601f30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56379f601f18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56379f601ed8 <col:23> 'int' lvalue ParmVar 0x56379f5efc80 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56379f601ef8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56379f6094e0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x56379f6094c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56379f601f50 <col:33> 'int' lvalue ParmVar 0x56379f5efc80 'i' 'int'
|   |   |     `-BinaryOperator 0x56379f6094a8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56379f609490 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56379f601f70 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56379f5ec100 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x56379f609468 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x56379f609450 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x56379f609418 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x56379f609590 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56379f609570 <col:79> 'int' 0
|   |   `-CallExpr 0x56379f609840 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x56379f609828 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56379f609808 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56379f0ac1f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56379f609880 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f609678 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x56379f609898 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f6096c0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56379f6098b0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56379f6096f8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x56379f6098c8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56379f6097f0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56379f6097d8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56379f609798 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x56379f609b88 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x56379f609b70 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x56379f609b58 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56379f609b28 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x56379f609aa0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x56379f609a70 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56379f609a20 <col:67, col:76> 'char const[48]' lvalue ->c 0x56379f5fa188
|             |   `-CXXMemberCallExpr 0x56379f609a00 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56379f6099d0 <col:67> '<bound member function type>' ->xanno 0x56379f5ebd18
|             |       `-CXXThisExpr 0x56379f6099c0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56379f609a88 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56379f609a50 <col:80> 'int' lvalue ParmVar 0x56379f5efc80 'i' 'int'
|-CXXMethodDecl 0x56379f5eff68 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x56379f5efe10 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56379f5efe90 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x56379f60a3c0 <col:45, line:635:5>
|   |-ParenExpr 0x56379f60a108 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x56379f60a0d8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x56379f609da0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56379f609d70 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56379f609c10 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56379f609bf8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56379f609bb8 <col:23> 'int' lvalue ParmVar 0x56379f5efe10 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56379f609bd8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56379f609d50 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x56379f609d38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56379f609c30 <col:33> 'int' lvalue ParmVar 0x56379f5efe10 'i' 'int'
|   |   |     `-BinaryOperator 0x56379f609d18 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56379f609d00 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56379f609c50 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56379f5ec100 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x56379f609cd8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x56379f609cc0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x56379f609c88 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x56379f609e00 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56379f609de0 <col:79> 'int' 0
|   |   `-CallExpr 0x56379f60a038 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x56379f60a020 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56379f60a000 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56379f0ac1f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56379f60a078 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f609e70 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x56379f60a090 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56379f609eb8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56379f60a0a8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56379f609ef0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x56379f60a0c0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56379f609fe8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56379f609fd0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56379f609f88 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x56379f60a3a0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x56379f60a308 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56379f60a2d8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x56379f60a278 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56379f60a248 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56379f60a1f8 <col:54, col:63> 'char [48]' lvalue ->c 0x56379f5fa188
|     |     |   `-CXXMemberCallExpr 0x56379f60a1d8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56379f60a1a8 <col:54> '<bound member function type>' ->xanno 0x56379f5ebeb8
|     |     |       `-CXXThisExpr 0x56379f60a198 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56379f60a260 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56379f60a228 <col:67> 'int' lvalue ParmVar 0x56379f5efe10 'i' 'int'
|     `-CXXConstCastExpr 0x56379f60a370 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x56379f60a358 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x56379f60a320 <col:91> 'const void *' lvalue ParmVar 0x56379f5efe90 'x' 'const void *'
|-CXXMethodDecl 0x56379f5f0038 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x56379f60a448 <col:34, line:640:5>
|   `-ReturnStmt 0x56379f60a438 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x56379f60a420 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x56379f60a3f0 <col:16> 'Packet *' lvalue ->_data_packet 0x56379f5facc8
|         `-CXXThisExpr 0x56379f60a3e0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x56379f5f0178 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x56379f5f00e8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56379f5fc118 <col:46> 'bool' true
|-CXXMethodDecl 0x56379f5f02f8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x56379f5f0230 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x56379f5f03a0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x56379f5f0b50 <line:660:22> "" ""
| |-EnumConstantDecl 0x56379f5f04a0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56379f5f0bc0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5f0480 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x56379f5f0460 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x56379f5e5610 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x56379f5f0530 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56379f5f0bd8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5f0510 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x56379f5f04f0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x56379f5e56a0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x56379f5f05c0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56379f5f0bf0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5f05a0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x56379f5f0580 <col:21> 'int' 0
| |-EnumConstantDecl 0x56379f5f0650 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56379f5f0c08 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5f0630 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x56379f5f0610 <col:19> 'int' 16
| |-EnumConstantDecl 0x56379f5f06e0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56379f5f0c20 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5f06c0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x56379f5f06a0 <col:21> 'int' 16
| |-EnumConstantDecl 0x56379f5f0770 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56379f5f0c38 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5f0750 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x56379f5f0730 <col:19> 'int' 32
| |-EnumConstantDecl 0x56379f5f0800 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56379f5f0c50 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5f07e0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x56379f5f07c0 <col:19> 'int' EnumConstant 0x56379f5f0650 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x56379f5f0890 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56379f5f0c68 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5f0870 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x56379f5f0850 <col:19> 'int' EnumConstant 0x56379f5f0770 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x56379f5f0960 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56379f5f0c80 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5f0940 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x56379f5f0920 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x56379f5f08e0 <col:23> 'int' EnumConstant 0x56379f5f0890 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x56379f5f0900 <col:40> 'int' 2
| |-EnumConstantDecl 0x56379f5f0a30 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56379f5f0c98 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5f0a10 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x56379f5f09f0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x56379f5f09b0 <col:23> 'int' EnumConstant 0x56379f5f0890 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x56379f5f09d0 <col:40> 'int' 4
| `-EnumConstantDecl 0x56379f5f0b00 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x56379f5f0cb0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56379f5f0ae0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x56379f5f0ac0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x56379f5f0a80 <col:23> 'int' EnumConstant 0x56379f5f0890 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x56379f5f0aa0 <col:40> 'int' 8
|-CXXMethodDecl 0x56379f5f0cf0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x56379f5f0d90 <col:68> "" ""
|-CXXMethodDecl 0x56379f5f0e28 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x56379f5f0ec8 <col:45> "" ""
|-CXXMethodDecl 0x56379f5f0f60 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x56379f5f1000 <col:57> "" ""
|-CXXMethodDecl 0x56379f5f1098 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x56379f5f1138 <col:45> "" ""
|-CXXMethodDecl 0x56379f5f11d0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x56379f5f1270 <col:57> "" ""
|-CXXMethodDecl 0x56379f5f1300 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x56379f5f13a0 <col:51> "" ""
|-CXXMethodDecl 0x56379f5f1430 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x56379f5f14d0 <col:63> "" ""
|-CXXMethodDecl 0x56379f5f1560 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x56379f5f1600 <col:53> "" ""
|-CXXMethodDecl 0x56379f5f1690 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x56379f5f1730 <col:65> "" ""
|-CXXMethodDecl 0x56379f5f1848 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x56379f5f17b8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x56379f5f18f0 <col:61> "" ""
|-CXXMethodDecl 0x56379f5f1a88 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x56379f5f1978 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x56379f5f19f0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x56379f5f1b38 <col:67> "" ""
|-CXXMethodDecl 0x56379f5f1c50 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x56379f5f1bc0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56379f5f1cf8 <col:63> "" ""
|-CXXMethodDecl 0x56379f5f1e90 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x56379f5f1d80 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56379f5f1df8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x56379f5f1f40 <col:69> "" ""
|-CXXMethodDecl 0x56379f5f2058 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x56379f5f1fc8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56379f5f2100 <col:63> "" ""
|-CXXMethodDecl 0x56379f5f2298 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56379f5f2188 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56379f5f2200 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56379f5f2348 <col:69> "" ""
|-CXXMethodDecl 0x56379f5f2460 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x56379f5f23d0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x56379f5f2508 <col:62> "" ""
|-CXXMethodDecl 0x56379f5f26a0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x56379f5f2590 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56379f5f2608 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x56379f5f2750 <col:68> "" ""
|-CXXMethodDecl 0x56379f5f2868 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x56379f5f27d8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56379f5f2910 <col:63> "" ""
|-CXXMethodDecl 0x56379f5f2aa8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x56379f5f2998 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56379f5f2a10 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x56379f5f2b58 <col:69> "" ""
|-CXXMethodDecl 0x56379f5f2be8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x56379f5f2c88 <col:64> "" ""
|-CXXMethodDecl 0x56379f5f2d18 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x56379f5f2db8 <col:52> "" ""
|-CXXMethodDecl 0x56379f5f2e48 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x56379f5f2ee8 <col:67> "" ""
|-CXXMethodDecl 0x56379f5f2f78 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x56379f5f3018 <col:55> "" ""
|-CXXMethodDecl 0x56379f5f3130 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x56379f5f30a0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56379f5f31d8 <col:58> "" ""
|-CXXMethodDecl 0x56379f5f3370 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x56379f5f3260 <col:33> col:36 'int'
| |-ParmVarDecl 0x56379f5f32d8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x56379f5f3420 <col:62> "" ""
|-CXXMethodDecl 0x56379f5f3538 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x56379f5f34a8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56379f5f35e0 <col:58> "" ""
|-CXXMethodDecl 0x56379f5f3778 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x56379f5f3668 <col:33> col:36 'int'
| |-ParmVarDecl 0x56379f5f36e0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x56379f5f3828 <col:62> "" ""
|-CXXMethodDecl 0x56379f5f3940 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x56379f5f38b0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x56379f5f39e8 <col:60> "" ""
|-CXXMethodDecl 0x56379f5f3b80 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x56379f5f3a70 <col:34> col:37 'int'
| |-ParmVarDecl 0x56379f5f3ae8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x56379f5f3c30 <col:64> "" ""
|-CXXMethodDecl 0x56379f5f3d48 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x56379f5f3cb8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56379f5f3df0 <col:58> "" ""
|-CXXMethodDecl 0x56379f5f3f88 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x56379f5f3e78 <col:33> col:36 'int'
| |-ParmVarDecl 0x56379f5f3ef0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x56379f5f4038 <col:62> "" ""
|-CXXMethodDecl 0x56379f5f4150 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x56379f5f40c0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x56379f5f41f8 <col:59> "" ""
|-CXXMethodDecl 0x56379f5f4390 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56379f5f4280 <col:33> col:36 'int'
| |-ParmVarDecl 0x56379f5f42f8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56379f5f4440 <col:63> "" ""
|-AccessSpecDecl 0x56379f5f44b0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x56379f5f9fa0 prev 0x56379f5ebbf0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56379f5fa098 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x56379f5fa188 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x56379f5fa238 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x56379f5fa3b8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x56379f5fa538 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x56379f5fa6b8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x56379f60a5c8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56379f60ae38 <col:11>
| |-CXXDestructorDecl 0x56379f60a6a0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x56379f60a7d8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x56379f60a7d8
| | `-ParmVarDecl 0x56379f60a8e8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x56379f60a988 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56379f60a988
| | `-ParmVarDecl 0x56379f60aa98 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x56379f60d7c8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56379f60d8d8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x56379f60db58 <col:11>
| |   `-ReturnStmt 0x56379f60db48 <col:11>
| |     `-UnaryOperator 0x56379f60db30 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56379f60db20 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x56379f60d948 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56379f60d948
|   `-ParmVarDecl 0x56379f60da58 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x56379f5fa720 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56379f5fa838 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x56379f5fa8d8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x56379f5fa940 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x56379f5fa9a8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x56379f5faa10 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x56379f5faa70 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x56379f5fab30 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x56379f5fab90 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x56379f5fabf0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x56379f60a4d8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x56379f5fa8d8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x56379f60ae48 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x56379f60aea0 <col:12>
| |-CXXConstructorDecl 0x56379f60ab08 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x56379f60ab08
| | `-ParmVarDecl 0x56379f60ac18 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x56379f60acb8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x56379f60acb8
| | `-ParmVarDecl 0x56379f60adc8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x56379f60ceb0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x56379f5fac68 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x56379f5facc8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x56379f5fad30 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x56379f5fad98 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x56379f5fae00 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x56379f5fae68 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x56379f5faec8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x56379f5faf28 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x56379f5faf90 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x56379f5fb018 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x56379f5fac68 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x56379f60a470 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x56379f5faec8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x56379f60aeb0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x56379f60af10 <col:21, line:755:5>
|-CXXConstructorDecl 0x56379f5fb1b8 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x56379f5fb0f8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x56379f5fb2b0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x56379f5fb498 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x56379f5fb3a0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x56379f5fb768 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x56379f5fb550 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56379f5fb5c8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56379f5fb640 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56379f5fb988 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x56379f5fb838 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x56379f5fb8b0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x56379f5fbc58 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x56379f5fba48 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x56379f5fbac0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x56379f5fbb38 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x56379f5fbdb0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x56379f5fbd20 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56379f5fbef8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x56379f5fbe68 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x56379f5fbff0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56379f3a7680 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x56379f3a7858 prev 0x56379f3a7680 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x56379f3a78e8 <col:46, col:52> col:46 public
|-TypedefDecl 0x56379f3a7910 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56379f0103b0 'int'
|-TypedefDecl 0x56379f3a9860 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x56379f3a9810 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x56379f3a97f0 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x56379f3a7b28 'type'
|     `-SubstTemplateTypeParmType 0x56379f3a7af0 'String' sugar
|       |-TemplateTypeParmType 0x56379f3577f0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56379f3577a0 'T'
|       `-RecordType 0x56379f24a8a0 'String'
|         `-CXXRecord 0x56379f24a810 'String'
|-TypedefDecl 0x56379f3a9918 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x56379f3a98e0 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x56379f3a98c0 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x56379f3a9860 'type'
|     `-ElaboratedType 0x56379f3a9810 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x56379f3a97f0 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x56379f3a7b28 'type'
|         `-SubstTemplateTypeParmType 0x56379f3a7af0 'String' sugar
|           |-TemplateTypeParmType 0x56379f3577f0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56379f3577a0 'T'
|           `-RecordType 0x56379f24a8a0 'String'
|             `-CXXRecord 0x56379f24a810 'String'
|-CXXMethodDecl 0x56379f3a9a98 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x56379f3a99a8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x56379f3a9b88 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x56379f3a9c68 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x56379f3a9c68
|-CXXMethodDecl 0x56379f3a9f38 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x56379f3a9e40 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x56379f3aa178 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x56379f3a9ff0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56379f3aa068 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56379f3aa348 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x56379f3aa238 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56379f3aa2b0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56379f3aa4a8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x56379f3aa578 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x56379f3aa7c8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x56379f3aa638 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x56379f3aa6b0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56379f3aaa28 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x56379f3aa898 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x56379f3aa910 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56379f3aabe8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x56379f3aaaf8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56379f3aada8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x56379f3aacb0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56379f3aae60 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56379f3aaf10 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x56379f3ab148 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x56379f3aafc0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x56379f3ab038 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x56379f3ab3e8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x56379f3ab2f0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x56379f3ab4b0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x56379f3ab500 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x56379f3ab550 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x56379f388530 <../dummy_inc/click/vector.hh:110:1, line:197:1> line:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x56379f3a60e8 prev 0x56379f388530 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x56379f3a75f0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x56379f3a75a0 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x56379f3a7580 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x56379f3a7430 'type'
|     `-SubstTemplateTypeParmType 0x56379f3a72c0 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x56379f318620 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x56379f3185c8 'F'
|       `-RecordType 0x56379f3a6f20 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x56379f3a6e40 'typed_array_memory'
|-FieldDecl 0x56379f3ab5a0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x56379f3ab5f0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x56379f3ab628 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x56379f3a6180 'String' sugar
|   |-TemplateTypeParmType 0x56379f366610 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x56379f3665c0 'T'
|   `-RecordType 0x56379f24a8a0 'String'
|     `-CXXRecord 0x56379f24a810 'String'
|-TypedefDecl 0x56379f3ab6b8 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x56379f3ab680 'String &'
|   `-SubstTemplateTypeParmType 0x56379f3a6180 'String' sugar
|     |-TemplateTypeParmType 0x56379f366610 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56379f3665c0 'T'
|     `-RecordType 0x56379f24a8a0 'String'
|       `-CXXRecord 0x56379f24a810 'String'
|-TypedefDecl 0x56379f3ab748 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x56379f3ab710 'const String &'
|   `-QualType 0x56379f3a6181 'const String' const
|     `-SubstTemplateTypeParmType 0x56379f3a6180 'String' sugar
|       |-TemplateTypeParmType 0x56379f366610 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56379f3665c0 'T'
|       `-RecordType 0x56379f24a8a0 'String'
|         `-CXXRecord 0x56379f24a810 'String'
|-TypedefDecl 0x56379f3ab7d8 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x56379f3ab7a0 'String *'
|   `-SubstTemplateTypeParmType 0x56379f3a6180 'String' sugar
|     |-TemplateTypeParmType 0x56379f366610 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56379f3665c0 'T'
|     `-RecordType 0x56379f24a8a0 'String'
|       `-CXXRecord 0x56379f24a810 'String'
|-TypedefDecl 0x56379f3ab868 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x56379f3ab830 'const String *'
|   `-QualType 0x56379f3a6181 'const String' const
|     `-SubstTemplateTypeParmType 0x56379f3a6180 'String' sugar
|       |-TemplateTypeParmType 0x56379f366610 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56379f3665c0 'T'
|       `-RecordType 0x56379f24a8a0 'String'
|         `-CXXRecord 0x56379f24a810 'String'
|-TypedefDecl 0x56379f3ac4c0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x56379f3ac470 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x56379f3ac450 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x56379f3ac388 'type'
|     `-LValueReferenceType 0x56379f3ac350 'const String &'
|       `-QualType 0x56379f3ac0f1 'const String' const
|         `-SubstTemplateTypeParmType 0x56379f3ac0f0 'String' sugar
|           |-TemplateTypeParmType 0x56379f3212b0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x56379f321258 'T'
|           `-RecordType 0x56379f24a8a0 'String'
|             `-CXXRecord 0x56379f24a810 'String'
|-TypedefDecl 0x56379f3ac528 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x56379f3ab710 'const String &'
|   `-QualType 0x56379f3a6181 'const String' const
|     `-SubstTemplateTypeParmType 0x56379f3a6180 'String' sugar
|       |-TemplateTypeParmType 0x56379f366610 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56379f3665c0 'T'
|       `-RecordType 0x56379f24a8a0 'String'
|         `-CXXRecord 0x56379f24a810 'String'
|-TypedefDecl 0x56379f3ac580 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x56379f0103b0 'int'
|-TypedefDecl 0x56379f3ac5e8 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x56379f3ab7a0 'String *'
|   `-SubstTemplateTypeParmType 0x56379f3a6180 'String' sugar
|     |-TemplateTypeParmType 0x56379f366610 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x56379f3665c0 'T'
|     `-RecordType 0x56379f24a8a0 'String'
|       `-CXXRecord 0x56379f24a810 'String'
|-TypedefDecl 0x56379f3ac650 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x56379f3ab830 'const String *'
|   `-QualType 0x56379f3a6181 'const String' const
|     `-SubstTemplateTypeParmType 0x56379f3a6180 'String' sugar
|       |-TemplateTypeParmType 0x56379f366610 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x56379f3665c0 'T'
|       `-RecordType 0x56379f24a8a0 'String'
|         `-CXXRecord 0x56379f24a810 'String'
|-EnumDecl 0x56379f3ac6a8 <line:134:5> col:5
| `-EnumConstantDecl 0x56379f3ac7a0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x56379f3ac780 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x56379f367648 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x56379f367620 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x56379f367600 <col:40> 'int' 1
|-CXXConstructorDecl 0x56379f3ac828 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x56379f3acab8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x56379f3ac8e0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56379f3ac980 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x56379f3acd48 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x56379f3acc30 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x56379f3ada50 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x56379f3acef0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x56379f3add60 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x56379f3adc40 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x56379f3ae070 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x56379f3adf50 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x56379f3ae360 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x56379f3ae1a8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56379f3ae220 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x56379f3ae488 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x56379f3ae538 <col:20> Inherited
| `-OptimizeNoneAttr 0x56379f3ae590 <col:30> Inherited
|-CXXMethodDecl 0x56379f3ae5d8 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x56379f3ae688 <col:20> Inherited
| `-OptimizeNoneAttr 0x56379f3ae6e0 <col:30> Inherited
|-CXXMethodDecl 0x56379f3ae7a8 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x56379f3ae858 <col:20> Inherited
| `-OptimizeNoneAttr 0x56379f3ae8b0 <col:30> Inherited
|-CXXMethodDecl 0x56379f3ae8f8 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x56379f3ae9a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56379f3aea00 <col:30> Inherited
|-CXXMethodDecl 0x56379f3aea48 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x56379f3aeaf8 <col:20> Inherited
| `-OptimizeNoneAttr 0x56379f3aeb50 <col:30> Inherited
|-CXXMethodDecl 0x56379f3aeb98 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x56379f3aec48 <col:20> Inherited
| `-OptimizeNoneAttr 0x56379f3aeca0 <col:30> Inherited
|-CXXMethodDecl 0x56379f3aecc8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56379f3aed78 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x56379f3aee28 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x56379f3aefe8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x56379f3aeed8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x56379f3aef50 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x56379f3af138 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x56379f3af0a8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x56379f3af2e8 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x56379f3af1f0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56379f3af3a0 <col:20>
| `-OptimizeNoneAttr 0x56379f3af3f8 <col:30>
|-CXXMethodDecl 0x56379f3af518 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x56379f3af420 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x56379f3af5d0 <col:20>
| `-OptimizeNoneAttr 0x56379f3af628 <col:30>
|-CXXMethodDecl 0x56379f3af6e0 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x56379f3af650 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56379f3af828 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56379f3af798 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56379f3af958 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x56379f3afa88 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x56379f3afb58 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x56379f3afc28 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x56379f3afd68 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x56379f3afcd8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56379f3afeb0 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x56379f3afe20 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x56379f3afff8 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x56379f3aff68 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56379f3b00b0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x56379f3b01b0 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x56379f3b0120 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x56379f3b0268 <col:60> Inherited "" ""
|-CXXMethodDecl 0x56379f3b0328 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x56379f3b0428 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x56379f3b05a8 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x56379f3b04e8 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x56379f3b0d68 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x56379f3b0660 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x56379f3b0cc8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x56379f3b0bc8 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x56379f3b0e48 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x56379f3b0f98 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x56379f3b0f08 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x56379f3b1050 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x56379f3b1298 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x56379f3b1110 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x56379f3b1188 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x56379f3b1428 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x56379f3b1368 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x56379f3b1638 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x56379f3b14f0 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x56379f3b1568 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x56379f3b16f8 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x56379f3b1958 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x56379f3b1860 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x56379f3b1fd0 <line:111:7> col:7 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x56379f3b1fd0

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56379f5d0ad0 prev 0x56379f56a940 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56379f5d0bc8 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x56379f5d0c58 <col:22, col:28> col:22 public
|-EnumDecl 0x56379f5d0c80 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x56379f5d0d98 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x56379f5d0d78 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x56379f5d0d60 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x56379f5d0d40 <col:14> 'int' 999
| |-EnumConstantDecl 0x56379f5d0e40 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x56379f5d0e20 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x56379f5d0e08 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x56379f5d0de8 <col:14> 'int' 1
| |-EnumConstantDecl 0x56379f5d0ed0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x56379f5d0eb0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x56379f5d0e90 <col:17> 'int' 0
| |-EnumConstantDecl 0x56379f5d0f60 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x56379f5d0f40 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x56379f5d0f20 <col:13> 'int' 1
| |-EnumConstantDecl 0x56379f5d0ff0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x56379f5d0fd0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x56379f5d0fb0 <col:16> 'int' 2
| |-EnumConstantDecl 0x56379f5d1080 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x56379f5d1060 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x56379f5d1040 <col:13> 'int' 3
| |-EnumConstantDecl 0x56379f5d1110 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x56379f5d10f0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x56379f5d10d0 <col:15> 'int' 4
| |-EnumConstantDecl 0x56379f5d11a0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x56379f5d1180 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x56379f5d1160 <col:14> 'int' 5
| |-EnumConstantDecl 0x56379f5d1230 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x56379f5d1210 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x56379f5d11f0 <col:12> 'int' 6
| `-EnumConstantDecl 0x56379f5d12c0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x56379f5d12a0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x56379f5d1280 <col:13> 'int' 7
|-VarDecl 0x56379f5d1358 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x56379f5d13e0 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x56379f5d1468 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x56379f5d14f0 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x56379f5d1578 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x56379f5d1600 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x56379f5d1688 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x56379f5d1710 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x56379f5d1798 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x56379f5d1820 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x56379f5d18a8 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x56379f5d19a8 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x56379f5d6c98 '_nerrors' 'int'
| | `-IntegerLiteral 0x56379f5d7428 <line:128:13> 'int' 0
| `-CompoundStmt 0x56379f5d7498 <col:16, line:129:5>
|-CXXDestructorDecl 0x56379f5d1a98 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x56379f5d74a8 <col:29, line:132:5>
|-CXXMethodDecl 0x56379f5d1c58 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x56379f5d1b90 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56379f5d1d20 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x56379f5d1e08 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x56379f5d7500 <col:44, line:161:5>
|   `-ReturnStmt 0x56379f5d74f0 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x56379f5d74d8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x56379f5d74b8 <col:9> 'ErrorHandler *' lvalue Var 0x56379f5d6cf8 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x56379f5d1f48 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x56379f5d1eb8 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56379f5d2010 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x56379f5d7560 <col:43, line:173:5>
|   `-ReturnStmt 0x56379f5d7550 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x56379f5d7538 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x56379f5d7518 <col:9> 'ErrorHandler *' lvalue Var 0x56379f5d6d70 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x56379f5d20c8 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x56379f5d2148 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x56379f5d2258 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x56379f5d21c8 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x56379f5d23a8 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x56379f5d2318 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x56379f5d2500 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x56379f5d2468 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x56379f5d2658 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x56379f5d25c0 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x56379f5d27b0 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x56379f5d2718 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x56379f5d29c0 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x56379f5d2868 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x56379f5d28e8 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x56379f5d2b98 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x56379f5d2a80 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x56379f5d2b00 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x56379f5d2db8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x56379f5d2c58 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x56379f5d2cd8 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x56379f5d2f98 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x56379f5d2e78 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x56379f5d2ef8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x56379f5d3178 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x56379f5d3058 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x56379f5d30d8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x56379f5d3300 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x56379f5d3238 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x56379f5d34d0 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x56379f5d33b8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x56379f5d3430 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x56379f5d77b8 <col:57, line:234:5>
|   `-ReturnStmt 0x56379f5d77a8 <line:233:2, col:41>
|     `-ExprWithCleanups 0x56379f5d7790 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x56379f5d7738 <col:9, col:41> 'int'
|         |-MemberExpr 0x56379f5d7708 <col:9> '<bound member function type>' ->xmessage 0x56379f5d3300
|         | `-CXXThisExpr 0x56379f5d76f8 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x56379f5d7778 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x56379f5d7760 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x56379f5d76d8 <col:18, col:40> 'String' (CXXTemporary 0x56379f5d76d8)
|               `-CallExpr 0x56379f5d76a0 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x56379f5d7688 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x56379f5d7600 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x56379f5d54c8 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x56379f5d7620 <col:31> 'const String' lvalue ParmVar 0x56379f5d3430 'str' 'const String &'
|                 `-DeclRefExpr 0x56379f5d7640 <col:36> 'const String' lvalue ParmVar 0x56379f5d33b8 'anno' 'const String &'
|-CXXMethodDecl 0x56379f5d37b0 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x56379f5d3590 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x56379f5d3610 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x56379f5d3688 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x56379f5d7a48 <col:68, line:243:5>
|   `-ReturnStmt 0x56379f5d7a38 <line:242:2, col:41>
|     `-ExprWithCleanups 0x56379f5d7a20 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x56379f5d79c0 <col:9, col:41> 'int'
|         |-MemberExpr 0x56379f5d7990 <col:9> '<bound member function type>' ->xmessage 0x56379f5d34d0
|         | `-CXXThisExpr 0x56379f5d7980 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x56379f5d7858 <col:18> 'const String' lvalue ParmVar 0x56379f5d3590 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x56379f5d7a08 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x56379f5d79f0 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x56379f5d7960 <col:24, col:40> 'String' (CXXTemporary 0x56379f5d7960)
|               `-CXXMemberCallExpr 0x56379f5d78f8 <col:24, col:40> 'String'
|                 |-MemberExpr 0x56379f5d7888 <col:24> '<bound member function type>' ->vformat 0x56379f5d4990
|                 | `-CXXThisExpr 0x56379f5d7878 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x56379f5d7928 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x56379f5d78b8 <col:32> 'const char *' lvalue ParmVar 0x56379f5d3610 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x56379f5d7940 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x56379f5d78d8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x56379f5d3688 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56379f5d3a50 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x56379f5d3878 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x56379f5d38f0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x56379f5d3968 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x56379f5d7d88 <col:23, line:254:5>
|   `-ReturnStmt 0x56379f5d7d78 <line:253:2, col:71>
|     `-ExprWithCleanups 0x56379f5d7d60 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x56379f5d7d00 <col:9, col:71> 'int'
|         |-MemberExpr 0x56379f5d7cd0 <col:9> '<bound member function type>' ->xmessage 0x56379f5d34d0
|         | `-CXXThisExpr 0x56379f5d7cc0 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x56379f5d7d48 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x56379f5d7d30 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x56379f5d7c80 <col:18, col:65> 'String' (CXXTemporary 0x56379f5d7c80)
|         |     `-CallExpr 0x56379f5d7c18 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x56379f5d7c00 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x56379f5d7ae8 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x56379f5d54c8 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x56379f5d7b08 <col:31> 'const String' lvalue ParmVar 0x56379f5d38f0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x56379f5d7c60 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x56379f5d7c48 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x56379f5d7be0 <col:37, col:64> 'String' (CXXTemporary 0x56379f5d7be0)
|         |             `-CallExpr 0x56379f5d7bb0 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x56379f5d7b98 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x56379f5d7b28 <col:37> 'String (const String &)' lvalue CXXMethod 0x56379f5d5b18 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x56379f5d7b48 <col:56> 'const String' lvalue ParmVar 0x56379f5d3878 'landmark' 'const String &'
|         `-DeclRefExpr 0x56379f5d7ca0 <col:68> 'const String' lvalue ParmVar 0x56379f5d3968 'str' 'const String &'
|-CXXMethodDecl 0x56379f5d3dd0 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x56379f5d3b18 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x56379f5d3b90 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x56379f5d3c10 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x56379f5d3c88 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x56379f5d8040 <col:34, line:267:5>
|   `-ReturnStmt 0x56379f5d8030 <line:266:2, col:51>
|     `-ExprWithCleanups 0x56379f5d8018 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x56379f5d7fb0 <col:9, col:51> 'int'
|         |-MemberExpr 0x56379f5d7f80 <col:9> '<bound member function type>' ->xmessage 0x56379f5d3a50
|         | `-CXXThisExpr 0x56379f5d7f70 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x56379f5d7e28 <col:18> 'const String' lvalue ParmVar 0x56379f5d3b18 'landmark' 'const String &'
|         |-DeclRefExpr 0x56379f5d7e48 <col:28> 'const String' lvalue ParmVar 0x56379f5d3b90 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x56379f5d8000 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x56379f5d7fe8 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x56379f5d7f50 <col:34, col:50> 'String' (CXXTemporary 0x56379f5d7f50)
|               `-CXXMemberCallExpr 0x56379f5d7ee8 <col:34, col:50> 'String'
|                 |-MemberExpr 0x56379f5d7e78 <col:34> '<bound member function type>' ->vformat 0x56379f5d4990
|                 | `-CXXThisExpr 0x56379f5d7e68 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x56379f5d7f18 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x56379f5d7ea8 <col:42> 'const char *' lvalue ParmVar 0x56379f5d3c10 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x56379f5d7f30 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x56379f5d7ec8 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x56379f5d3c88 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56379f5d3ee0 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x56379f5d80c0 <col:25, line:288:5>
|   `-ReturnStmt 0x56379f5d80b0 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x56379f5d8098 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x56379f5d8068 <col:9> 'const int' lvalue ->_nerrors 0x56379f5d6c98
|         `-CXXThisExpr 0x56379f5d8058 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x56379f5d40f0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x56379f5d3f98 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x56379f5d4018 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x56379f5d43d8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x56379f5d41b8 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x56379f5d4238 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x56379f5d42b0 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56379f5d4570 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x56379f5d44a8 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x56379f5d47b8 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x56379f5d4630 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x56379f5d46a8 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x56379f5d8320 <col:58, line:357:5>
|   `-ReturnStmt 0x56379f5d8310 <line:356:2, col:29>
|     `-ExprWithCleanups 0x56379f5d82f8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x56379f5d82c8 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x56379f5d82b0 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x56379f5d8290 <col:9, col:29> 'String' (CXXTemporary 0x56379f5d8290)
|             `-CallExpr 0x56379f5d8220 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x56379f5d8208 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x56379f5d8188 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x56379f5d43d8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x56379f5d8128 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x56379f5d8258 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x56379f5d8148 <col:21> 'const char *' lvalue ParmVar 0x56379f5d4630 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x56379f5d8270 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x56379f5d8168 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x56379f5d46a8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56379f5d4990 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x56379f5d4880 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x56379f5d48f8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x56379f5d4ae8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x56379f5d4a58 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x56379f5d4c30 <line:393:5, col:46> col:20 used decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x56379f5d4ba0 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x56379f5d4ed0 <line:424:5, col:69> col:19 used emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x56379f5d4ce8 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x56379f5d4d68 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x56379f5d4de0 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x56379f5d5030 <line:438:5, line:441:5> line:438:18 used account 'void (int)' virtual
| |-ParmVarDecl 0x56379f5d4fa0 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x56379f5d8438 <col:37, line:441:5>
|   `-IfStmt 0x56379f5d8420 <line:439:2, line:440:8>
|     |-BinaryOperator 0x56379f5d83a8 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x56379f5d8378 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x56379f5d8338 <col:6> 'int' lvalue ParmVar 0x56379f5d4fa0 'level' 'int'
|     | `-ImplicitCastExpr 0x56379f5d8390 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x56379f5d8358 <col:15> 'ErrorHandler::Level' EnumConstant 0x56379f5d1080 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x56379f5d8408 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x56379f5d83d8 <col:8> 'int' lvalue ->_nerrors 0x56379f5d6c98
|         `-CXXThisExpr 0x56379f5d83c8 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x56379f5d50f8 <line:446:5, line:448:5> line:446:18 used clear 'void ()' virtual
| `-CompoundStmt 0x56379f5d84d0 <col:26, line:448:5>
|   `-BinaryOperator 0x56379f5d84b0 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x56379f5d8460 <col:2> 'int' lvalue ->_nerrors 0x56379f5d6c98
|     | `-CXXThisExpr 0x56379f5d8450 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x56379f5d8490 <col:13> 'int' 0
|-CXXMethodDecl 0x56379f5d52c0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x56379f5d51b0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x56379f5d5228 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x56379f5d54c8 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x56379f5d5380 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x56379f5d53f8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x56379f5d5778 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x56379f5d5588 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x56379f5d5608 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x56379f5d5688 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x56379f5d5830 <col:59> 0 0
|-CXXMethodDecl 0x56379f5d59c8 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x56379f5d58a8 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x56379f5d5928 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x56379f5dc580 <col:70, line:534:5>
|   |-DeclStmt 0x56379f5d8640 <line:528:2, col:20>
|   | |-VarDecl 0x56379f5d84f8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x56379f5d8560 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x56379f5d8598 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x56379f5d8600 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x56379f5d8710 <line:529:2, col:23>
|   | `-VarDecl 0x56379f5d8670 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x56379f5d86f8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x56379f5d86d8 <col:18> 'const char *' lvalue ParmVar 0x56379f5d58a8 'begin' 'const char *'
|   |-DoStmt 0x56379f5dc518 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x56379f5d8a08 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x56379f5d89f0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x56379f5d89d0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x56379f5d8728 <col:6> 'const char *' lvalue Var 0x56379f5d8670 'x' 'const char *'
|   | |     `-CallExpr 0x56379f5d8920 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x56379f5d8908 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x56379f5d88c0 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x56379f5d7170 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x56379f5d8988 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x56379f5d8970 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x56379f5d87e0 <col:20, col:27> 'String' (CXXTemporary 0x56379f5d87e0)
|   | |       |     `-CXXTemporaryObjectExpr 0x56379f5d87a8 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x56379f5d89a0 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x56379f5d8800 <col:30> 'const char *' lvalue Var 0x56379f5d8670 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x56379f5d89b8 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x56379f5d8820 <col:33> 'const char *' lvalue ParmVar 0x56379f5d5928 'end' 'const char *'
|   | |       |-UnaryOperator 0x56379f5d8860 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x56379f5d8840 <col:39> 'String' lvalue Var 0x56379f5d84f8 'name' 'String'
|   | |       |-UnaryOperator 0x56379f5d8898 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x56379f5d8878 <col:46> 'String' lvalue Var 0x56379f5d8598 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x56379f5d88b0 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x56379f5dc500 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x56379f5d8aa8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x56379f5d8a88 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x56379f5d8a58 <col:11> '<bound member function type>' .operator int (String::*)() const 0x56379f24e5b8
|   |         `-ImplicitCastExpr 0x56379f5d8a40 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x56379f5d8a20 <col:11> 'String' lvalue Var 0x56379f5d84f8 'name' 'String'
|   `-ReturnStmt 0x56379f5dc570 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x56379f5dc558 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x56379f5dc538 <col:9> 'const char *' lvalue Var 0x56379f5d8670 'x' 'const char *'
|-CXXMethodDecl 0x56379f5d5b18 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x56379f5d5a88 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x56379f5dcb88 <col:55, line:550:5>
|   `-IfStmt 0x56379f5dcb60 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x56379f5dc7c0 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x56379f5dc7a8 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x56379f5dc790 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x56379f5dc770 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x56379f5dc740 <col:6> '<bound member function type>' .operator int (String::*)() const 0x56379f24e5b8
|     | |       `-DeclRefExpr 0x56379f5dc5e0 <col:6> 'const String' lvalue ParmVar 0x56379f5d5a88 'x' 'const String &'
|     | `-BinaryOperator 0x56379f5dc720 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x56379f5dc6f0 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x56379f5dc6a0 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x56379f5dc688 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x56379f5dc640 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x56379f269500 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x56379f5dc600 <col:11> 'const String' lvalue ParmVar 0x56379f5d5a88 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x56379f5dc620 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x56379f5dc708 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x56379f5dc6d8 <col:19> 'char' 123
|     |-ReturnStmt 0x56379f5dc830 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x56379f5dc800 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x56379f5dc7e0 <col:13> 'const String' lvalue ParmVar 0x56379f5d5a88 'x' 'const String &'
|     `-IfStmt 0x56379f5dcb38 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x56379f5dc8c8 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x56379f5dc8b0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x56379f5dc890 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x56379f5dc860 <col:11> '<bound member function type>' .operator int (String::*)() const 0x56379f24e5b8
|       |       `-DeclRefExpr 0x56379f5dc840 <col:11> 'const String' lvalue ParmVar 0x56379f5d5a88 'x' 'const String &'
|       |-ReturnStmt 0x56379f5dca50 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x56379f5dca38 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x56379f5dca08 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x56379f5dc9f0 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x56379f5dc9d0 <col:13, col:29> 'String' (CXXTemporary 0x56379f5dc9d0)
|       |         `-CallExpr 0x56379f5dc980 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x56379f5dc968 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x56379f5dc8e0 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x56379f5d52c0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x56379f5dc9b0 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x56379f5dc900 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x56379f5dc920 <col:28> 'const String' lvalue ParmVar 0x56379f5d5a88 'x' 'const String &'
|       `-ReturnStmt 0x56379f5dcb28 <line:549:6, col:20>
|         `-ExprWithCleanups 0x56379f5dcb10 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x56379f5dcae0 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x56379f5dcac8 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x56379f5dcaa8 <col:13, col:20> 'String' (CXXTemporary 0x56379f5dcaa8)
|                 `-CXXTemporaryObjectExpr 0x56379f5dca70 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x56379f5d5ce0 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x56379f5d5bd0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x56379f5d5c48 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56379f5d7418 <col:71> 'bool' false
|-CXXRecordDecl 0x56379f5d5d90 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x56379f5d6088 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x56379f5d6020 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x56379f5d5fc0 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x56379f5d5f80 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x56379f24a8a0 'String'
|       | `-CXXRecord 0x56379f24a810 'String'
|       |-BuiltinType 0x56379f0103b0 'int'
|       `-DecayedType 0x56379f56b990 '__va_list_tag *' sugar
|         |-TypedefType 0x56379f56b960 'va_list' sugar
|         | |-Typedef 0x56379f281510 'va_list'
|         | `-TypedefType 0x56379f2814c0 '__gnuc_va_list' sugar
|         |   |-Typedef 0x56379f27c898 '__gnuc_va_list'
|         |   `-TypedefType 0x56379f27c800 '__builtin_va_list' sugar
|         |     |-Typedef 0x56379f051c18 '__builtin_va_list'
|         |     `-ConstantArrayType 0x56379f051bc0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x56379f011100 '__va_list_tag'
|         |         `-CXXRecord 0x56379f011068 '__va_list_tag'
|         `-PointerType 0x56379f287090 '__va_list_tag *'
|           `-RecordType 0x56379f011100 '__va_list_tag'
|             `-CXXRecord 0x56379f011068 '__va_list_tag'
|-EnumDecl 0x56379f5d60e0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x56379f5d61e0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56379f5d6740 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5d61c0 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x56379f5d61a0 <col:16> 'int' 1
| |-EnumConstantDecl 0x56379f5d6270 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56379f5d6758 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5d6250 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x56379f5d6230 <col:21> 'int' 2
| |-EnumConstantDecl 0x56379f5d6300 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56379f5d6770 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5d62e0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x56379f5d62c0 <col:22> 'int' 4
| |-EnumConstantDecl 0x56379f5d6390 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56379f5d6788 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5d6370 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x56379f5d6350 <col:17> 'int' 8
| |-EnumConstantDecl 0x56379f5d6420 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56379f5d67a0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5d6400 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x56379f5d63e0 <col:22> 'int' 16
| |-EnumConstantDecl 0x56379f5d64b0 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56379f5d67b8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5d6490 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x56379f5d6470 <col:19> 'int' 32
| |-EnumConstantDecl 0x56379f5d6540 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56379f5d67d0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5d6520 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x56379f5d6500 <col:17> 'int' 64
| |-EnumConstantDecl 0x56379f5d65d0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56379f5d67e8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5d65b0 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x56379f5d6590 <col:14> 'int' 128
| |-EnumConstantDecl 0x56379f5d6660 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x56379f5d6800 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56379f5d6640 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x56379f5d6620 <col:16> 'int' 256
| `-EnumConstantDecl 0x56379f5d66f0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x56379f5d6818 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56379f5d66d0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x56379f5d66b0 <col:12> 'int' 1024
|-CXXMethodDecl 0x56379f5d6a28 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x56379f5d6840 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x56379f5d68e0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x56379f5d6bb0 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x56379f5d6ae8 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x56379f5d6c58 <line:580:3, col:10> col:3 private
|-FieldDecl 0x56379f5d6c98 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x56379f5d6cf8 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x56379f5d6d70 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x56379f5d7170 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x56379f5d6de8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x56379f5d6e68 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x56379f5d6ee8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x56379f5d6f60 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x56379f5d6fd8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x56379f5d7050 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x56379f5d7298 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x56379f5d7298
| `-ParmVarDecl 0x56379f5d73a8 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x56379f5dcee8 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x56379f5dcee8
  `-ParmVarDecl 0x56379f5dcff8 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>
