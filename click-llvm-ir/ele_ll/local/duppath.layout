
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55778cba2ef8 prev 0x55778cb9a6f8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55778cba2ff0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55778cba3080 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55778cba30f8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55778cba31b8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55778cba3280 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55778cba33f8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55778cba3330 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55778cba34a0 <col:24>
| `-OptimizeNoneAttr 0x55778cba34f8 <col:34>
|-CXXMethodDecl 0x55778cba3540 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55778cba3848 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55778cba35f0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55778cba3668 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55778cba3730 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55778cba3900 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55778cba3938 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55778cba39a0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55778cba3a28 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55778cba3d48 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55778cba3ae0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55778cba3b58 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55778cba3bd0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55778cba3c50 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55778cba3e60 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55778cbaa778 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55778cbaa778
| `-ParmVarDecl 0x55778cbaa888 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55778cbaa928 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55778cbaa928
| `-ParmVarDecl 0x55778cbaaa38 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55778cb1b558 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55778cb90fb0 prev 0x55778cb90d30 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55778cb910a8 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55778cb91138 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55778cb91198 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55778cb91288 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55778cb91388 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55778cb91558 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55778cb91408 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55778cb91480 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55778cb916e8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55778cb91620 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55778cb91790 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55778cb918c8 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55778cb91800 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55778cb91a68 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55778cb919a8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55778cb91c08 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55778cb91b48 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55778cb91cb0 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55778cb91db0 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55778cb91e90 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778cb91d90 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55778cb91d70 <col:26> 'int' 1
| `-EnumConstantDecl 0x55778cb91e40 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55778cb91ea8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55778cb91e20 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55778cb91e00 <col:44> 'int' 2
|-CXXMethodDecl 0x55778cb91ff0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55778cb91ed8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55778cb91f58 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55778cb92148 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55778cb920b8 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55778cb92388 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55778cb92208 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55778cb92280 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55778cb92438 <col:20>
| `-OptimizeNoneAttr 0x55778cb92490 <col:30>
|-CXXMethodDecl 0x55778cb92598 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55778cb924d0 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55778cb92640 <col:20>
| `-OptimizeNoneAttr 0x55778cb92698 <col:30>
|-CXXMethodDecl 0x55778cb97710 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55778cb977d8 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55778cb97898 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55778cb97920 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55778cb979a8 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55778cb97a30 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55778cb97ab8 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55778cb97b48 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55778cb97c08 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55778cb97c90 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55778cb97d18 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55778cb97da0 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55778cb97e28 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55778cb97eb0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55778cb97f40 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55778cb98000 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55778cb98090 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55778cb981e0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55778cb98148 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55778cb98370 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55778cb982a0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55778cb98610 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55778cb98428 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55778cb984a8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55778cb98528 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55778cb986c8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55778cb987d0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55778cb98a60 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778cb987b0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55778cb98790 <col:33> 'int' 0
| |-EnumConstantDecl 0x55778cb98860 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55778cb98a78 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778cb98840 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55778cb98820 <col:32> 'int' 20
| |-EnumConstantDecl 0x55778cb988f0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55778cb98a90 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778cb988d0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55778cb988b0 <col:38> 'int' 90
| |-EnumConstantDecl 0x55778cb98980 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55778cb98aa8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778cb98960 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55778cb98940 <col:35> 'int' 100
| `-EnumConstantDecl 0x55778cb98a10 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55778cb98ac0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55778cb989f0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55778cb989d0 <col:32> 'int' 2000
|-CXXMethodDecl 0x55778cb98b00 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55778cb98f40 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55778cb98db0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55778cb98e28 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55778cb99010 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55778cb99190 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55778cb990c0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55778cb99398 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55778cb99248 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55778cb992c0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55778cb99498 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55778cb99538 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55778cb99600 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55778cb99690 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55778cb998c0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778cb99670 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55778cb99650 <col:36> 'int' EnumConstant 0x55778cb99600 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55778cb996e0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55778cb99730 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55778cb99780 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55778cb997d0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55778cb99820 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55778cb99870 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55778cb999a8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55778cb998e8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55778cb99a70 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55778cb99b30 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55778cb99bf0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55778cb99cb0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55778cb99dc8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55778cb99e90 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x55778cb9a010 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55778cb99f40 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55778cb9a138 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55778cb9a338 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55778cb9a1e8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55778cb9a268 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55778cba6c48 <col:54, line:127:5>
|   |-ParenExpr 0x55778cba6af8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55778cba6ac8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55778cba67b8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55778cba6790 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55778cba6778 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55778cba6760 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55778cba6730 <col:31> 'Router *' lvalue ->_router 0x55778cba4610
|   |   |         `-CXXThisExpr 0x55778cba6720 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55778cba6818 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55778cba67f8 <col:48> 'int' 0
|   |   `-CallExpr 0x55778cba6a28 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55778cba6a10 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55778cba69f0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778c6ba730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55778cba6a68 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cba6888 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55778cba6a80 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cba68a8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55778cba6a98 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55778cba68e0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55778cba6ab0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55778cba69d8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55778cba69c0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55778cba6978 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55778cba6b90 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55778cba6b28 <col:9> 'Router *' lvalue ->_router 0x55778cba4610
|   | | `-CXXThisExpr 0x55778cba6b18 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55778cba6b78 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55778cba6b58 <col:19> 'Router *' lvalue ParmVar 0x55778cb9a1e8 'r' 'Router *'
|   `-BinaryOperator 0x55778cba6c28 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55778cba6bc0 <col:9> 'int' lvalue ->_eindex 0x55778cba4678
|     | `-CXXThisExpr 0x55778cba6bb0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55778cba6c10 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55778cba6bf0 <col:19> 'int' lvalue ParmVar 0x55778cb9a268 'eindex' 'int'
|-CXXMethodDecl 0x55778cb9a4c0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55778cb9a3f8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55778cb9a590 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55778cb9a658 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55778cb9a6f8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55778cb9a948 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55778cb9a7c0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55778cb9a840 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55778cb9a9f8 <col:20>
| `-OptimizeNoneAttr 0x55778cb9aa50 <col:30>
|-CXXMethodDecl 0x55778cb9ab58 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55778cb9aa90 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55778cb9ac00 <col:20>
| `-OptimizeNoneAttr 0x55778cb9ac58 <col:30>
|-CXXMethodDecl 0x55778cb9ad28 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55778cb9ac98 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55778cb9add0 <col:20>
| `-OptimizeNoneAttr 0x55778cb9ae28 <col:30>
|-CXXMethodDecl 0x55778cb9afb8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55778cb9ae60 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55778cb9aee0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55778cb9b148 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55778cb9b080 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55778cb9b298 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55778cb9b208 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55778cb9b3e8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55778cb9b358 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55778cb9b538 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55778cb9b4a8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55778cb9b818 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55778cb9b5f0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55778cb9b670 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55778cb9b730 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55778cb9b8f0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55778cb9b9b0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55778cb9bc80 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55778cb9bb30 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55778cb9bba8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55778cb9bda8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55778cb9bf80 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55778cb9be60 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55778cb9bee0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55778cb9c168 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55778cb9c048 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55778cb9c0c8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55778cb9c4d8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55778cb9c228 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55778cb9c2a0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55778cb9c320 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55778cba6230 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55778cba6210 <col:106> 'int' 0
| `-ParmVarDecl 0x55778cb9c398 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55778cba6268 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55778cba6248 <col:126> 'int' 0
|-CXXMethodDecl 0x55778cb9c858 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55778cb9c5a8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55778cb9c620 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55778cb9c6a0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55778cb9c718 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55778cba62a0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55778cba6280 <col:114> 'int' 0
|-CXXMethodDecl 0x55778cb9cbe8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55778cb9c930 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55778cb9c9a8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55778cb9ca28 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55778cba62b8 <col:96> 'int' 0
| `-ParmVarDecl 0x55778cb9caa0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55778cba62f8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55778cba62d8 <col:116> 'int' 0
|-CXXMethodDecl 0x55778cb9cf68 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55778cb9ccb8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55778cb9cd30 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55778cb9cdb0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55778cba6330 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55778cba6310 <col:109> 'int' 0
| `-ParmVarDecl 0x55778cb9ce28 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55778cba6368 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55778cba6348 <col:129> 'int' 0
|-CXXMethodDecl 0x55778cb9d2e8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55778cb9d038 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55778cb9d0b0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55778cb9d130 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55778cb9d1a8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55778cba63a0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55778cba6380 <col:117> 'int' 0
|-CXXMethodDecl 0x55778cb9d678 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55778cb9d3c0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778cb9d438 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55778cb9d4b8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55778cba63b8 <col:99> 'int' 0
| `-ParmVarDecl 0x55778cb9d530 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55778cba63f8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55778cba63d8 <col:119> 'int' 0
|-CXXMethodDecl 0x55778cb9da98 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55778cb9d748 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55778cb9d7c8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55778cb9d840 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55778cb9d8c0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55778cba6430 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55778cba6410 <col:108> 'int' 0
| `-ParmVarDecl 0x55778cb9d940 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55778cba6468 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55778cba6448 <col:141> 'int' 0
|-CXXMethodDecl 0x55778cb9deb8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55778cb9db70 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55778cb9dbf0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55778cb9dc68 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55778cb9dce8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55778cb9dd68 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55778cba6480 <col:121> 'int' 0
|-CXXMethodDecl 0x55778cb9e2e8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55778cb9df98 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55778cb9e018 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55778cb9e090 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55778cb9e110 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55778cba64a0 <col:98> 'int' 0
| `-ParmVarDecl 0x55778cb9e190 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55778cba64c0 <col:123> 'int' 0
|-CXXMethodDecl 0x55778cb9e5b0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55778cb9e3c0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55778cb9e440 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55778cb9e4c0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55778cba64e0 <col:80> 'int' 0
|-EnumDecl 0x55778cb9e668 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55778cb9e770 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55778cb9ea00 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778cb9e750 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55778cb9e730 <col:42> 'int' 1
| |-EnumConstantDecl 0x55778cb9e800 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55778cb9ea18 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778cb9e7e0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55778cb9e7c0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55778cb9e890 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55778cb9ea30 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778cb9e870 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55778cb9e850 <col:44> 'int' 4
| |-EnumConstantDecl 0x55778cb9e920 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55778cb9ea48 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778cb9e900 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55778cb9e8e0 <col:36> 'int' 7
| `-EnumConstantDecl 0x55778cb9e9b0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55778cb9ea60 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55778cb9e990 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55778cb9e970 <col:34> 'int' 6
|-CXXMethodDecl 0x55778cb9ed18 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55778cb9ea88 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55778cb9eb28 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55778cb9eba8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55778cb9ec20 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55778cba6598 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55778cba6580 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55778cba6568 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55778cba6548 <col:98, col:105> 'String' (CXXTemporary 0x55778cba6548)
|           `-CXXTemporaryObjectExpr 0x55778cba6510 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55778cb9efb8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55778cb9ede8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55778cb9ee60 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55778cb9eed8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55778cba6648 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55778cba6630 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55778cba6618 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55778cba65f8 <col:94, col:101> 'String' (CXXTemporary 0x55778cba65f8)
| |         `-CXXTemporaryObjectExpr 0x55778cba65c0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55778cba6e30 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55778cba6da8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55778cba6d78 <col:9> '<bound member function type>' ->add_task_handlers 0x55778cb9ed18
|     | `-CXXThisExpr 0x55778cba6d68 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55778cba6de8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55778cba6ce8 <col:27> 'Task *' lvalue ParmVar 0x55778cb9ede8 'task' 'Task *'
|     |-ImplicitCastExpr 0x55778cba6e00 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55778cba6d08 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55778cb9ee60 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55778cba6e18 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55778cba6d28 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55778cb9e9b0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55778cba6d48 <col:62> 'const String' lvalue ParmVar 0x55778cb9eed8 'prefix' 'const String &'
|-CXXMethodDecl 0x55778cb9f1c8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55778cb9f080 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55778cb9f0f8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55778cba66f8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55778cba66e0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55778cba66c8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55778cba66a8 <col:70, col:77> 'String' (CXXTemporary 0x55778cba66a8)
| |         `-CXXTemporaryObjectExpr 0x55778cba6670 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55778cba7008 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55778cba6f80 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55778cba6f50 <col:9> '<bound member function type>' ->add_task_handlers 0x55778cb9ed18
|     | `-CXXThisExpr 0x55778cba6f40 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55778cba6fc0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55778cba6ec0 <col:27> 'Task *' lvalue ParmVar 0x55778cb9f080 'task' 'Task *'
|     |-ImplicitCastExpr 0x55778cba6fd8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55778cba6ee0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55778cba6ff0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55778cba6f00 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55778cb9e9b0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55778cba6f20 <col:57> 'const String' lvalue ParmVar 0x55778cb9f0f8 'prefix' 'const String &'
|-CXXMethodDecl 0x55778cb9f4a8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55778cb9f290 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778cb9f310 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55778cb9f388 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55778cb9f758 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55778cb9f578 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778cb9f5f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55778cb9f678 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55778cb9fa48 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55778cb9f828 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778cb9f8a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55778cb9f920 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55778cb9fcf8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55778cb9fb18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778cb9fb98 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55778cb9fc18 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55778cb9ffa8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55778cb9fdc8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778cb9fe48 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55778cb9fec8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55778cba0258 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55778cba0078 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778cba00f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55778cba0170 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55778cba0508 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55778cba0328 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778cba03a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55778cba0428 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55778cba07b8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55778cba05d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778cba0658 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55778cba06d8 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55778cba0a98 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55778cba0888 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778cba0908 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55778cba09b0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55778cba0d78 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55778cba0b68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778cba0be8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55778cba0c90 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55778cba0fe0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55778cba0e48 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55778cba0ec8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55778cba0f40 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55778cba1288 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55778cba10b0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55778cba1130 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55778cba11a8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55778cba1538 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55778cba1358 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778cba13d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55778cba1458 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55778cba17e8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55778cba1608 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778cba1688 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55778cba1700 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55778cba1a98 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55778cba18b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778cba1938 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55778cba19b0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55778cba1d68 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55778cba1b68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778cba1be8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55778cba1c88 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55778cba2098 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55778cba1e38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55778cba1eb8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55778cba1f30 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55778cba1fa8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55778cba6710 <col:93> 'bool' false
|-CXXMethodDecl 0x55778cba2280 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55778cba2168 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55778cba21e8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55778cba2458 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55778cba2340 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55778cba23c0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55778cba2738 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55778cba2518 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55778cba2590 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55778cba2610 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55778cba2688 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55778cba2a28 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55778cba2808 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55778cba2880 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55778cba2900 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55778cba2978 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55778cba2c60 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55778cba2b00 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55778cba2b80 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55778cba2e48 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55778cba2d28 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55778cba2da8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55778cba2ef8 prev 0x55778cb9a6f8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55778cba2ff0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55778cba3080 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55778cba30f8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55778cba31b8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55778cba3280 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55778cba33f8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55778cba3330 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55778cba34a0 <col:24>
| | `-OptimizeNoneAttr 0x55778cba34f8 <col:34>
| |-CXXMethodDecl 0x55778cba3540 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55778cba3848 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55778cba35f0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55778cba3668 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55778cba3730 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55778cba3900 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55778cba3938 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55778cba39a0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55778cba3a28 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55778cba3d48 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55778cba3ae0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55778cba3b58 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55778cba3bd0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55778cba3c50 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55778cba3e60 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55778cbaa778 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55778cbaa778
| | `-ParmVarDecl 0x55778cbaa888 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55778cbaa928 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55778cbaa928
| | `-ParmVarDecl 0x55778cbaaa38 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55778cb1b558 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55778cba3ed8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55778cba3f78 <col:38> "" ""
|-CXXMethodDecl 0x55778cba4008 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55778cba40a8 <col:44> "" ""
|-AccessSpecDecl 0x55778cba4118 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55778cba4140 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55778cba4240 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55778cba4290 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55778cba4220 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55778cba4200 <col:27> 'int' 4
|-FieldDecl 0x55778cba4348 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55778cba44f8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55778cba45b0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55778cba4610 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55778cba4678 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55778cba47c8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55778cba4708 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55778cba4978 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55778cba4888 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55778cba4b58 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55778cba4a38 <col:20> col:23 'int'
| `-ParmVarDecl 0x55778cba4ab8 <col:25> col:28 'int'
|-CXXMethodDecl 0x55778cba4e00 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55778cba4c20 <col:23> col:26 'int'
| |-ParmVarDecl 0x55778cba4ca0 <col:28> col:31 'int'
| `-ParmVarDecl 0x55778cba4d18 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55778cba4eb8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55778cba4f80 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55778cba4fd0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55778cba5020 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55778cba5200 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55778cba50b0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55778cba5128 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55778cba54a8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55778cba52c8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55778cba5348 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55778cba53c0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55778cba56c8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55778cba5578 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55778cba55f8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55778cba5a00 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55778cba5788 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55778cba5808 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55778cba5880 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55778cba5900 <col:57> col:60 'int'
|-CXXMethodDecl 0x55778cba5be8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55778cba5ad0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55778cba5b50 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55778cba5d38 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55778cba5ca8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55778cba60b8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55778cba5df8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55778cba5e78 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55778cba5ef0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55778cba5f70 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55778cba61d0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct DupPath::(anonymous at ../elements/local/duppath.hh:7:3)
         0 |   class Packet ** _q
         8 |   unsigned int _head
        12 |   unsigned int _tail
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class DupPath
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   struct DupPath::(anonymous at ../elements/local/duppath.hh:7:3) _q
       112 |     class Packet ** _q
       120 |     unsigned int _head
       124 |     unsigned int _tail
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55778c83b2b8 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55778c83b3d8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55778c83b468 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55778c83b538 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55778c83b620 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55778c83c4d8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55778c83c380 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55778c83c688 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55778c83c590 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55778c83c7d0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55778c83c740 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55778c83c918 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55778c83c888 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55778c83ca60 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55778c83c9d0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55778c83cb28 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x55778c83cca8 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x55778c83cbe0 <col:28> col:31 'int'
|-CXXMethodDecl 0x55778c83cd70 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x55778c83ceb8 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55778c83ce28 <col:28> col:31 'int'
|-CXXMethodDecl 0x55778c83d038 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55778c83cf70 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55778c83d180 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55778c83d0f0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55778c83d248 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55778c83d488 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55778c83d2f8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55778c83d370 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55778c83d6d8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55778c83d548 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55778c83d5c0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55778c83d788 <col:86> "" ""
|-CXXMethodDecl 0x55778c83d9f8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55778c83d868 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55778c83d8e0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55778c83dba8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55778c83dab8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55778c83dd58 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55778c83dc60 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55778c83e028 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55778c83de10 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55778c83de88 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55778c83df00 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55778c83e390 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55778c83e0f0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55778c83e168 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55778c83e1e0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55778c83e448 <col:115> "" ""
|-AccessSpecDecl 0x55778c83e4b8 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55778c83e4f0 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55778c83e998 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55778c83e998
| `-ParmVarDecl 0x55778c83eaa8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55778c83eb48 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55778c83eb48
| `-ParmVarDecl 0x55778c83ec58 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55778c886368 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55778cb6d1a0 <col:7>
|-CXXConstructorDecl 0x55778c886440 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55778c886440
| `-ParmVarDecl 0x55778c886558 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55778c8865c8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55778c8865c8
| `-ParmVarDecl 0x55778c8866d8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55778cb6fb10 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55778c833a78 prev 0x55778cb61210 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55778c833b70 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55778c833c60 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55778c833d88 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55778c833f08 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55778c834088 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55778c834208 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55778cb6d308 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55778cb6db78 <col:11>
|-CXXDestructorDecl 0x55778cb6d3e0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55778cb6d518 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55778cb6d518
| `-ParmVarDecl 0x55778cb6d628 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55778cb6d6c8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55778cb6d6c8
| `-ParmVarDecl 0x55778cb6d7d8 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55778cb70508 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55778cb70618 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55778cb70898 <col:11>
|   `-ReturnStmt 0x55778cb70888 <col:11>
|     `-UnaryOperator 0x55778cb70870 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55778cb70860 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55778cb70688 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55778cb70688
  `-ParmVarDecl 0x55778cb70798 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55778c834270 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55778c834388 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55778c834428 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55778c834490 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55778c8344f8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55778c834560 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55778c8345c0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55778c834680 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55778c8346e0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55778cb64d10 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55778cb6d218 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55778c834428 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55778cb6db88 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55778cb6dbe0 <col:12>
|-CXXConstructorDecl 0x55778cb6d848 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55778cb6d848
| `-ParmVarDecl 0x55778cb6d958 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55778cb6d9f8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55778cb6d9f8
| `-ParmVarDecl 0x55778cb6db08 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55778cb6fbf0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55778cb5a930 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55778cb5aa48 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55778cb5aad8 <col:16, col:22> col:16 public
|-EnumDecl 0x55778cb5ab00 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55778cb5ac00 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55778cb5ace0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778cb5abe0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55778cb5abc0 <col:21> 'int' 28
| `-EnumConstantDecl 0x55778cb5ac90 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55778cb5acf8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55778cb5ac70 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55778cb5ac50 <col:22> 'int' 64
|-CXXMethodDecl 0x55778cb5b038 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55778cb5ad20 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55778cb5ada0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55778cb5ae18 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55778cb5ae90 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55778cb5b0f8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55778cb5b2f8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55778cb5b170 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55778cb5b1e8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55778cb5b3a8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55778cb5b508 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55778cb5b418 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55778cb5b5b0 <col:72> warn_unused_result ""
|-TypedefDecl 0x55778cb5b8e0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55778cb5b870 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55778cb5b810 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55778cb5b7d0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55778c6204e0 'void'
|       |-PointerType 0x55778c871880 'unsigned char *'
|       | `-BuiltinType 0x55778c6205e0 'unsigned char'
|       |-TypedefType 0x55778c6c39d0 'size_t' sugar
|       | |-Typedef 0x55778c690be0 'size_t'
|       | `-BuiltinType 0x55778c620640 'unsigned long'
|       `-PointerType 0x55778c620ce0 'void *'
|         `-BuiltinType 0x55778c6204e0 'void'
|-CXXMethodDecl 0x55778cb5bd58 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55778cb5b950 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55778cb5b9c8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55778cb5ba60 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55778cb5bae0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55778cb661a0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55778cb66188 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55778cb66150 <col:58> 'int' 0
| |-ParmVarDecl 0x55778cb5bb60 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55778cb661c8 <col:76> 'int' 0
| |-ParmVarDecl 0x55778cb5bbe0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55778cb661e8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55778cb5be28 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55778cb5bea8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55778cb5bf68 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55778cb5c008 <col:20>
| `-OptimizeNoneAttr 0x55778cb5c060 <col:30>
|-CXXMethodDecl 0x55778cb5c0d8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55778cb5c178 <col:20>
| `-OptimizeNoneAttr 0x55778cb5c1d0 <col:30>
|-CXXMethodDecl 0x55778cb5c248 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55778cb5c2e8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55778cb5c398 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55778cb5c438 <col:20>
| |-OptimizeNoneAttr 0x55778cb5c490 <col:30>
| `-WarnUnusedResultAttr 0x55778cb5c4b8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55778cb5c510 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55778cb5c5b0 <col:20>
| `-OptimizeNoneAttr 0x55778cb5c608 <col:30>
|-CXXMethodDecl 0x55778cb5c658 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55778cb5c6f8 <col:20>
| `-OptimizeNoneAttr 0x55778cb5c750 <col:30>
|-CXXMethodDecl 0x55778cb5c798 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55778cb5c838 <col:20>
| `-OptimizeNoneAttr 0x55778cb5c890 <col:30>
|-CXXMethodDecl 0x55778cb5c8d8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55778cb5c998 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55778cb5ca60 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55778cb5cb28 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55778cb5cbe8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55778cb5cd08 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55778cb662b0 <col:54, line:99:5>
|   `-ReturnStmt 0x55778cb662a0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55778cb66288 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55778cb66258 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55778cb65048
|         `-CXXThisExpr 0x55778cb66248 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55778cb5cea8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55778cb5cdb8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55778cb66360 <col:67, line:103:5>
|   `-BinaryOperator 0x55778cb66340 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55778cb662d8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55778cb65048
|     | `-CXXThisExpr 0x55778cb662c8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55778cb66328 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55778cb66308 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55778cb5cdb8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55778cb5cfa0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55778cb663e0 <col:33, line:107:5>
|   `-ReturnStmt 0x55778cb663d0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55778cb663b8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55778cb66388 <col:16> 'void *' lvalue ->_destructor_argument 0x55778cb650b0
|         `-CXXThisExpr 0x55778cb66378 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55778cb5d060 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55778cb66a10 <col:25, line:113:5>
|   |-ParenExpr 0x55778cb66758 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55778cb66728 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55778cb66498 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55778cb66470 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55778cb66438 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55778cb66408 <col:24> '<bound member function type>' ->shared 0x55778cb5c0d8
|   |   |       `-ImplicitCastExpr 0x55778cb66458 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55778cb663f8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55778cb664f8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55778cb664d8 <col:42> 'int' 0
|   |   `-CallExpr 0x55778cb66688 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55778cb66670 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55778cb66650 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778c6ba730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55778cb666c8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cb66568 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55778cb666e0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cb66590 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55778cb666f8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55778cb665c8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55778cb66710 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55778cb66638 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55778cb66620 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55778cb665e8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55778cb66958 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55778cb66788 <col:2> 'unsigned char *' lvalue ->_head 0x55778cb64e50
|   | | `-CXXThisExpr 0x55778cb66778 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55778cb66940 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55778cb66920 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55778cb667c8 <col:10> 'unsigned char *' lvalue ->_data 0x55778cb64eb8
|   |     | `-CXXThisExpr 0x55778cb667b8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55778cb66908 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55778cb668e8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55778cb66808 <col:18> 'unsigned char *' lvalue ->_tail 0x55778cb64f20
|   |         | `-CXXThisExpr 0x55778cb667f8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55778cb668d0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55778cb668b0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55778cb66848 <col:26> 'unsigned char *' lvalue ->_end 0x55778cb64f88
|   |             | `-CXXThisExpr 0x55778cb66838 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55778cb66898 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55778cb66878 <col:33> 'int' 0
|   `-BinaryOperator 0x55778cb669f0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55778cb66988 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55778cb65048
|     | `-CXXThisExpr 0x55778cb66978 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55778cb669d8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55778cb669b8 <col:16> 'int' 0
|-CXXMethodDecl 0x55778cb5d1a0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55778cb5d110 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55778cb5d248 <col:20>
| |-OptimizeNoneAttr 0x55778cb5d2a0 <col:30>
| `-WarnUnusedResultAttr 0x55778cb5d2c8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55778cb5d398 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55778cb5d308 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55778cb5d440 <col:20>
| |-OptimizeNoneAttr 0x55778cb5d498 <col:30>
| `-WarnUnusedResultAttr 0x55778cb5d4c0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55778cb5d5f8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55778cb5d500 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55778cb5d6a0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55778cb5d7a0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55778cb5d710 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55778cb5d848 <col:20>
| `-OptimizeNoneAttr 0x55778cb5d8a0 <col:30>
|-CXXMethodDecl 0x55778cb5d968 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55778cb5d8d8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55778cb5da10 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55778cb5db10 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55778cb5da80 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55778cb5dbb8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55778cb5dcb8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55778cb5dc28 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55778cb5dd60 <col:20>
| `-OptimizeNoneAttr 0x55778cb5ddb8 <col:30>
|-CXXMethodDecl 0x55778cb5df48 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55778cb5ddf8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55778cb5de70 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55778cb66208 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55778cb5dff8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55778cb5e1f8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55778cb5e070 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55778cb5e0e8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55778cb5e408 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55778cb5e2b8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55778cb5e330 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55778cb5e618 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55778cb5e4c8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55778cb5e548 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55778cb66218 <col:39> 'int' 0
|-CXXMethodDecl 0x55778cb5e6e8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55778cb5e7e0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55778cb5e8a8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55778cb5e968 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55778cb5ea30 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55778cb5eb78 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55778cb5eae8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55778cb5ed48 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55778cb5ec38 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55778cb5ecb0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55778cb5ee18 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55778cb5eed8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55778cb5ef78 <col:20>
| `-OptimizeNoneAttr 0x55778cb5efd0 <col:30>
|-CXXMethodDecl 0x55778cb5f020 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55778cb5f0c0 <col:20>
| `-OptimizeNoneAttr 0x55778cb5f118 <col:30>
|-CXXMethodDecl 0x55778cb5f168 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55778cb5f228 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55778cb5f2f0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55778cb5f390 <col:20>
| `-OptimizeNoneAttr 0x55778cb5f3e8 <col:30>
|-CXXMethodDecl 0x55778cb5f538 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55778cb5f428 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55778cb5f4a0 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55778cb5f688 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55778cb5f5f8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55778cb5f750 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55778cb5f810 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55778cb5f8b0 <col:20>
| `-OptimizeNoneAttr 0x55778cb5f908 <col:30>
|-CXXMethodDecl 0x55778cb5f958 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55778cb5f9f8 <col:20>
| `-OptimizeNoneAttr 0x55778cb5fa50 <col:30>
|-CXXMethodDecl 0x55778cb5faa0 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55778cb5fb68 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55778cb5fc08 <col:20>
| `-OptimizeNoneAttr 0x55778cb5fc60 <col:30>
|-CXXMethodDecl 0x55778cb5fca8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55778cb5fdc8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55778cb5ff38 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55778cb5fe78 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55778cb60028 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55778cb600c8 <col:20>
| `-OptimizeNoneAttr 0x55778cb60120 <col:30>
|-CXXMethodDecl 0x55778cb60170 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55778cb60230 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55778cb60468 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55778cb602e0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55778cb60358 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55778cb60518 <col:20>
| `-OptimizeNoneAttr 0x55778cb60570 <col:30>
|-CXXMethodDecl 0x55778cb60618 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55778cb606b8 <col:20>
| `-OptimizeNoneAttr 0x55778cb60710 <col:30>
|-CXXMethodDecl 0x55778cb60760 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55778cb60800 <col:20>
| `-OptimizeNoneAttr 0x55778cb60858 <col:30>
|-CXXMethodDecl 0x55778cb608a0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55778cb60940 <col:20>
| `-OptimizeNoneAttr 0x55778cb60998 <col:30>
|-CXXMethodDecl 0x55778cb60a98 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55778cb609d0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55778cb60b40 <col:20>
| `-OptimizeNoneAttr 0x55778cb60b98 <col:30>
|-CXXMethodDecl 0x55778cb60d58 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55778cb60bd0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55778cb60c48 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55778cb60e08 <col:20>
| `-OptimizeNoneAttr 0x55778cb60e60 <col:30>
|-CXXMethodDecl 0x55778cb60f08 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55778cb61028 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55778cb61148 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55778cb611e8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55778cb61210 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55778cb61338 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55778cb613d8 <col:20>
| `-OptimizeNoneAttr 0x55778cb61430 <col:30>
|-CXXMethodDecl 0x55778cb614d8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55778cb61578 <col:20>
| `-OptimizeNoneAttr 0x55778cb615d0 <col:30>
|-AccessSpecDecl 0x55778cb615f8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55778cb61620 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55778cb61720 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55778cb61770 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55778cb61700 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55778cb616e0 <col:14> 'int' 48
|-CXXMethodDecl 0x55778cb617d8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55778cb61878 <col:20>
| `-OptimizeNoneAttr 0x55778cb618d0 <col:30>
|-CXXMethodDecl 0x55778cb61948 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55778cb619e8 <col:20>
| `-OptimizeNoneAttr 0x55778cb61a40 <col:30>
|-CXXMethodDecl 0x55778cb61b08 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55778cb61a78 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55778cb61ca8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55778cb61e48 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55778cb61d58 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55778cb61ef0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55778cb61ff0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55778cb623a0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778cb61fd0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55778cb61fb0 <col:9> 'int' 0
| |-EnumConstantDecl 0x55778cb62080 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55778cb623b8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778cb62060 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55778cb62040 <col:14> 'int' 1
| |-EnumConstantDecl 0x55778cb62110 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55778cb623d0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778cb620f0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55778cb620d0 <col:14> 'int' 2
| |-EnumConstantDecl 0x55778cb621a0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55778cb623e8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778cb62180 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55778cb62160 <col:14> 'int' 3
| |-EnumConstantDecl 0x55778cb62230 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55778cb62400 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778cb62210 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55778cb621f0 <col:13> 'int' 4
| |-EnumConstantDecl 0x55778cb622c0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55778cb62418 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778cb622a0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55778cb62280 <col:13> 'int' 5
| `-EnumConstantDecl 0x55778cb62350 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55778cb62430 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55778cb62330 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55778cb62310 <col:14> 'int' 6
|-CXXMethodDecl 0x55778cb62498 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55778cb62538 <col:20>
| `-OptimizeNoneAttr 0x55778cb62590 <col:30>
|-CXXMethodDecl 0x55778cb62688 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55778cb625c8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55778cb62730 <col:20>
| `-OptimizeNoneAttr 0x55778cb62788 <col:30>
|-CXXMethodDecl 0x55778c825720 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55778c825840 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55778c8259b8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55778c8258f0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55778c825a80 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55778c825b48 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55778c825c88 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55778c825bf8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55778c825d30 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55778c825e30 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55778c826030 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778c825e10 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55778c825df0 <col:23> 'int' 0
| |-EnumConstantDecl 0x55778c825ec0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55778c826048 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778c825ea0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55778c825e80 <col:45> 'int' 4
| |-EnumConstantDecl 0x55778c825f50 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55778c826060 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778c825f30 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55778c825f10 <col:24> 'int' 0
| `-EnumConstantDecl 0x55778c825fe0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55778c826078 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55778c825fc0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55778c825fa0 <col:47> 'int' 16
|-CXXMethodDecl 0x55778c8260d8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55778c826248 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55778c826188 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55778c8262f0 <col:20>
| `-OptimizeNoneAttr 0x55778c826348 <col:30>
|-CXXMethodDecl 0x55778c826398 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55778cb66b30 <col:18, col:36>
|   `-ReturnStmt 0x55778cb66b20 <col:20, col:33>
|     `-ImplicitCastExpr 0x55778cb66b08 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55778cb66ae8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55778cb66ab8 <col:27> '<bound member function type>' ->xanno 0x55778cb614d8
|           `-CXXThisExpr 0x55778cb66aa8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55778c826490 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55778cb66c40 <col:30, col:48>
|   `-ReturnStmt 0x55778cb66c30 <col:32, col:45>
|     `-ImplicitCastExpr 0x55778cb66c18 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55778cb66bf8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55778cb66bc8 <col:39> '<bound member function type>' ->xanno 0x55778cb61338
|           `-CXXThisExpr 0x55778cb66bb8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55778c826578 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55778cb66dd8 <col:24, col:50>
|   `-ReturnStmt 0x55778cb66dc8 <col:26, col:47>
|     `-UnaryOperator 0x55778cb66db0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55778cb66d90 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55778cb66d78 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55778cb66d28 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55778c833d88
|         |   `-CXXMemberCallExpr 0x55778cb66d08 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55778cb66cd8 <col:34> '<bound member function type>' ->xanno 0x55778cb614d8
|         |       `-CXXThisExpr 0x55778cb66cc8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55778cb66d58 <col:46> 'int' 0
|-CXXMethodDecl 0x55778c826668 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55778cb66fa8 <col:36, col:62>
|   `-ReturnStmt 0x55778cb66f98 <col:38, col:59>
|     `-UnaryOperator 0x55778cb66f80 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55778cb66f60 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55778cb66f48 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55778cb66ec0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55778c833d88
|         |   `-CXXMemberCallExpr 0x55778cb66ea0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55778cb66e70 <col:46> '<bound member function type>' ->xanno 0x55778cb61338
|         |       `-CXXThisExpr 0x55778cb66e60 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55778cb66ef0 <col:58> 'int' 0
|-CXXMethodDecl 0x55778c826788 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55778cb67140 <col:26, col:53>
|   `-ReturnStmt 0x55778cb67130 <col:28, col:50>
|     `-UnaryOperator 0x55778cb67118 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55778cb670f8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55778cb670e0 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55778cb67090 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55778c834088
|         |   `-CXXMemberCallExpr 0x55778cb67070 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55778cb67040 <col:36> '<bound member function type>' ->xanno 0x55778cb614d8
|         |       `-CXXThisExpr 0x55778cb67030 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55778cb670c0 <col:49> 'int' 0
|-CXXMethodDecl 0x55778c8268a8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55778cb67318 <col:38, col:65>
|   `-ReturnStmt 0x55778cb67308 <col:40, col:62>
|     `-UnaryOperator 0x55778cb672f0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55778cb672d0 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55778cb672b8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55778cb67228 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55778c834088
|         |   `-CXXMemberCallExpr 0x55778cb67208 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55778cb671d8 <col:48> '<bound member function type>' ->xanno 0x55778cb61338
|         |       `-CXXThisExpr 0x55778cb671c8 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55778cb67258 <col:61> 'int' 0
|-CXXMethodDecl 0x55778c826a58 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55778c826960 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55778cb679e8 <col:34, line:463:5>
|   |-ParenExpr 0x55778cb67830 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55778cb67800 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55778cb67468 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55778cb67438 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55778cb67388 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55778cb67370 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55778cb67330 <col:23> 'int' lvalue ParmVar 0x55778c826960 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55778cb67350 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55778cb67418 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55778cb673e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55778cb673a8 <col:33> 'int' lvalue ParmVar 0x55778c826960 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55778cb67400 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55778cb673c8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55778cb61720 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55778cb674c8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55778cb674a8 <col:56> 'int' 0
|   |   `-CallExpr 0x55778cb67760 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55778cb67748 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55778cb67728 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778c6ba730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55778cb677a0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cb675b8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55778cb677b8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cb675e8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55778cb677d0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55778cb67620 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55778cb677e8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55778cb67710 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55778cb676f8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55778cb676b8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55778cb679d8 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55778cb679c0 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55778cb679a0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55778cb67970 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55778cb67920 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55778c833d88
|         |   `-CXXMemberCallExpr 0x55778cb67900 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55778cb678d0 <col:9> '<bound member function type>' ->xanno 0x55778cb61338
|         |       `-CXXThisExpr 0x55778cb678c0 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55778cb67988 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55778cb67950 <col:21> 'int' lvalue ParmVar 0x55778c826960 'i' 'int'
|-CXXMethodDecl 0x55778c826ca8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55778c826b18 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55778c826b90 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55778cb68078 <col:40, line:472:5>
|   |-ParenExpr 0x55778cb67e90 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55778cb67e60 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55778cb67b40 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55778cb67b10 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55778cb67a60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55778cb67a48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55778cb67a08 <col:23> 'int' lvalue ParmVar 0x55778c826b18 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55778cb67a28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55778cb67af0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55778cb67ac0 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55778cb67a80 <col:33> 'int' lvalue ParmVar 0x55778c826b18 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55778cb67ad8 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55778cb67aa0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55778cb61720 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55778cb67ba0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55778cb67b80 <col:56> 'int' 0
|   |   `-CallExpr 0x55778cb67dc0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55778cb67da8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55778cb67d88 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778c6ba730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55778cb67e00 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cb67c10 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55778cb67e18 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cb67c40 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55778cb67e30 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55778cb67c78 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55778cb67e48 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55778cb67d70 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55778cb67d58 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55778cb67d18 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55778cb68058 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55778cb68000 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55778cb67fd0 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55778cb67f80 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55778c833d88
|     | |   `-CXXMemberCallExpr 0x55778cb67f60 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55778cb67f30 <col:2> '<bound member function type>' ->xanno 0x55778cb614d8
|     | |       `-CXXThisExpr 0x55778cb67f20 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55778cb67fe8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55778cb67fb0 <col:14> 'int' lvalue ParmVar 0x55778c826b18 'i' 'int'
|     `-ImplicitCastExpr 0x55778cb68040 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55778cb68020 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55778c826b90 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55778c826e68 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55778c826d70 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55778cb687f8 <col:36, line:485:5>
|   |-ParenExpr 0x55778cb68560 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55778cb68530 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55778cb68210 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55778cb681e0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55778cb680f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55778cb680d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55778cb68098 <col:23> 'int' lvalue ParmVar 0x55778c826d70 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55778cb680b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55778cb681c0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55778cb681a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55778cb68110 <col:33> 'int' lvalue ParmVar 0x55778c826d70 'i' 'int'
|   |   |     `-BinaryOperator 0x55778cb68188 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55778cb68170 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55778cb68130 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55778cb61720 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55778cb68150 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55778cb68270 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55778cb68250 <col:60> 'int' 0
|   |   `-CallExpr 0x55778cb68490 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55778cb68478 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55778cb68458 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778c6ba730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55778cb684d0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cb682e0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55778cb684e8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cb68318 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55778cb68500 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55778cb68350 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55778cb68518 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55778cb68440 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55778cb68428 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55778cb683e8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55778cb687e8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55778cb687d0 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55778cb687b8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55778cb68788 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55778cb68728 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55778cb686f8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55778cb68670 <col:61, col:70> 'char const[48]' lvalue ->c 0x55778c833c60
|             |   `-CXXMemberCallExpr 0x55778cb68650 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55778cb68620 <col:61> '<bound member function type>' ->xanno 0x55778cb61338
|             |       `-CXXThisExpr 0x55778cb68610 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55778cb68710 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55778cb686a0 <col:74> 'int' lvalue ParmVar 0x55778c826d70 'i' 'int'
|-CXXMethodDecl 0x55778c8270b8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55778c826f28 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55778c826fa0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55778cb68f58 <col:42, line:500:5>
|   |-ParenExpr 0x55778cb68ce0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55778cb68cb0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55778cb68990 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55778cb68960 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55778cb68870 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55778cb68858 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55778cb68818 <col:23> 'int' lvalue ParmVar 0x55778c826f28 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55778cb68838 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55778cb68940 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55778cb68928 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55778cb68890 <col:33> 'int' lvalue ParmVar 0x55778c826f28 'i' 'int'
|   |   |     `-BinaryOperator 0x55778cb68908 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55778cb688f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55778cb688b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55778cb61720 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55778cb688d0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55778cb689f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55778cb689d0 <col:60> 'int' 0
|   |   `-CallExpr 0x55778cb68c10 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55778cb68bf8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55778cb68bd8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778c6ba730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55778cb68c50 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cb68a60 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55778cb68c68 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cb68a98 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55778cb68c80 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55778cb68ad0 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55778cb68c98 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55778cb68bc0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55778cb68ba8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55778cb68b68 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55778cb68f38 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55778cb68ee8 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55778cb68eb8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55778cb68e60 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55778cb68e30 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55778cb68de0 <col:48, col:57> 'char [48]' lvalue ->c 0x55778c833c60
|     |     |   `-CXXMemberCallExpr 0x55778cb68dc0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55778cb68d90 <col:48> '<bound member function type>' ->xanno 0x55778cb614d8
|     |     |       `-CXXThisExpr 0x55778cb68d80 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55778cb68e48 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55778cb68e10 <col:61> 'int' lvalue ParmVar 0x55778c826f28 'i' 'int'
|     `-ImplicitCastExpr 0x55778cb68f20 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55778cb68f00 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55778c826fa0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55778c827278 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55778c827180 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55778cb696b8 <col:35, line:513:5>
|   |-ParenExpr 0x55778cb693c8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55778cb69398 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55778cb690f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55778cb690c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55778cb68fd0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55778cb68fb8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55778cb68f78 <col:23> 'int' lvalue ParmVar 0x55778c827180 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55778cb68f98 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55778cb690a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55778cb69088 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55778cb68ff0 <col:33> 'int' lvalue ParmVar 0x55778c827180 'i' 'int'
|   |   |     `-BinaryOperator 0x55778cb69068 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55778cb69050 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55778cb69010 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55778cb61720 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55778cb69030 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55778cb69150 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55778cb69130 <col:60> 'int' 0
|   |   `-CallExpr 0x55778cb692f8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55778cb692e0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55778cb692c0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778c6ba730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55778cb69338 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cb691c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55778cb69350 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cb691f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55778cb69368 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55778cb69230 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55778cb69380 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55778cb692a8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55778cb69290 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55778cb69250 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55778cb696a8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55778cb69690 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55778cb69678 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55778cb69648 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55778cb695c0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55778cb69590 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55778cb69540 <col:60, col:69> 'char const[48]' lvalue ->c 0x55778c833c60
|             |   `-CXXMemberCallExpr 0x55778cb69520 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55778cb694f0 <col:60> '<bound member function type>' ->xanno 0x55778cb61338
|             |       `-CXXThisExpr 0x55778cb694e0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55778cb695a8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55778cb69570 <col:73> 'int' lvalue ParmVar 0x55778c827180 'i' 'int'
|-CXXMethodDecl 0x55778c8274c8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55778c827338 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55778c8273b0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55778cb69dc8 <col:41, line:528:5>
|   |-ParenExpr 0x55778cb69b60 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55778cb69b30 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55778cb69850 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55778cb69820 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55778cb69730 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55778cb69718 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55778cb696d8 <col:23> 'int' lvalue ParmVar 0x55778c827338 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55778cb696f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55778cb69800 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55778cb697e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55778cb69750 <col:33> 'int' lvalue ParmVar 0x55778c827338 'i' 'int'
|   |   |     `-BinaryOperator 0x55778cb697c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55778cb697b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55778cb69770 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55778cb61720 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55778cb69790 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55778cb698b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55778cb69890 <col:60> 'int' 0
|   |   `-CallExpr 0x55778cb69a90 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55778cb69a78 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55778cb69a58 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778c6ba730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55778cb69ad0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cb69920 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55778cb69ae8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cb69958 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55778cb69b00 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55778cb69990 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55778cb69b18 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55778cb69a40 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55778cb69a28 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55778cb699e8 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55778cb69da8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55778cb69d58 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55778cb69d28 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55778cb69cd0 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55778cb69ca0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55778cb69c50 <col:47, col:56> 'char [48]' lvalue ->c 0x55778c833c60
|     |     |   `-CXXMemberCallExpr 0x55778cb69c30 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55778cb69c00 <col:47> '<bound member function type>' ->xanno 0x55778cb614d8
|     |     |       `-CXXThisExpr 0x55778cb69bf0 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55778cb69cb8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55778cb69c80 <col:60> 'int' lvalue ParmVar 0x55778c827338 'i' 'int'
|     `-ImplicitCastExpr 0x55778cb69d90 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55778cb69d70 <col:65> 'int16_t':'short' lvalue ParmVar 0x55778c8273b0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55778c827688 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55778c827590 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55778cb6a498 <col:36, line:541:5>
|   |-ParenExpr 0x55778cb6a238 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55778cb6a208 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55778cb69f60 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55778cb69f30 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55778cb69e40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55778cb69e28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55778cb69de8 <col:23> 'int' lvalue ParmVar 0x55778c827590 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55778cb69e08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55778cb69f10 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55778cb69ef8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55778cb69e60 <col:33> 'int' lvalue ParmVar 0x55778c827590 'i' 'int'
|   |   |     `-BinaryOperator 0x55778cb69ed8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55778cb69ec0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55778cb69e80 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55778cb61720 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55778cb69ea0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55778cb69fc0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55778cb69fa0 <col:60> 'int' 0
|   |   `-CallExpr 0x55778cb6a168 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55778cb6a150 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55778cb6a130 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778c6ba730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55778cb6a1a8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cb6a030 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55778cb6a1c0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cb6a068 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55778cb6a1d8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55778cb6a0a0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55778cb6a1f0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55778cb6a118 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55778cb6a100 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55778cb6a0c0 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55778cb6a488 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55778cb6a470 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55778cb6a458 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55778cb6a428 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55778cb6a3d0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55778cb6a3a0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55778cb6a350 <col:61, col:70> 'char const[48]' lvalue ->c 0x55778c833c60
|             |   `-CXXMemberCallExpr 0x55778cb6a330 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55778cb6a300 <col:61> '<bound member function type>' ->xanno 0x55778cb61338
|             |       `-CXXThisExpr 0x55778cb6a2f0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55778cb6a3b8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55778cb6a380 <col:74> 'int' lvalue ParmVar 0x55778c827590 'i' 'int'
|-CXXMethodDecl 0x55778c827858 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55778c827748 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55778c8277c0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55778c827908 <col:20>
| `-OptimizeNoneAttr 0x55778c827960 <col:30>
|-CXXMethodDecl 0x55778c827a98 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55778c8279a0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55778cb6ab68 <col:35, line:562:5>
|   |-ParenExpr 0x55778cb6a908 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55778cb6a8d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55778cb6a630 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55778cb6a600 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55778cb6a510 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55778cb6a4f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55778cb6a4b8 <col:23> 'int' lvalue ParmVar 0x55778c8279a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55778cb6a4d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55778cb6a5e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55778cb6a5c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55778cb6a530 <col:33> 'int' lvalue ParmVar 0x55778c8279a0 'i' 'int'
|   |   |     `-BinaryOperator 0x55778cb6a5a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55778cb6a590 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55778cb6a550 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55778cb61720 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55778cb6a570 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55778cb6a690 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55778cb6a670 <col:60> 'int' 0
|   |   `-CallExpr 0x55778cb6a838 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55778cb6a820 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55778cb6a800 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778c6ba730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55778cb6a878 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cb6a700 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55778cb6a890 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cb6a738 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55778cb6a8a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55778cb6a770 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55778cb6a8c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55778cb6a7e8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55778cb6a7d0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55778cb6a790 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55778cb6ab58 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55778cb6ab40 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55778cb6ab28 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55778cb6aaf8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55778cb6aaa0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55778cb6aa70 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55778cb6aa20 <col:60, col:69> 'char const[48]' lvalue ->c 0x55778c833c60
|             |   `-CXXMemberCallExpr 0x55778cb6aa00 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55778cb6a9d0 <col:60> '<bound member function type>' ->xanno 0x55778cb61338
|             |       `-CXXThisExpr 0x55778cb6a9c0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55778cb6aa88 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55778cb6aa50 <col:73> 'int' lvalue ParmVar 0x55778c8279a0 'i' 'int'
|-CXXMethodDecl 0x55778c827ca8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55778c827b58 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55778c827bd0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55778cb6b248 <col:41, line:577:5>
|   |-ParenExpr 0x55778cb6afd8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55778cb6afa8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55778cb6ad00 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55778cb6acd0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55778cb6abe0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55778cb6abc8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55778cb6ab88 <col:23> 'int' lvalue ParmVar 0x55778c827b58 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55778cb6aba8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55778cb6acb0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55778cb6ac98 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55778cb6ac00 <col:33> 'int' lvalue ParmVar 0x55778c827b58 'i' 'int'
|   |   |     `-BinaryOperator 0x55778cb6ac78 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55778cb6ac60 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55778cb6ac20 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55778cb61720 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55778cb6ac40 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55778cb6ad60 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55778cb6ad40 <col:60> 'int' 0
|   |   `-CallExpr 0x55778cb6af08 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55778cb6aef0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55778cb6aed0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778c6ba730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55778cb6af48 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cb6add0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55778cb6af60 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cb6ae08 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55778cb6af78 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55778cb6ae40 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55778cb6af90 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55778cb6aeb8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55778cb6aea0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55778cb6ae60 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55778cb6b228 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55778cb6b1d8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55778cb6b1a8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55778cb6b148 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55778cb6b118 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55778cb6b0c8 <col:47, col:56> 'char [48]' lvalue ->c 0x55778c833c60
|     |     |   `-CXXMemberCallExpr 0x55778cb6b0a8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55778cb6b078 <col:47> '<bound member function type>' ->xanno 0x55778cb614d8
|     |     |       `-CXXThisExpr 0x55778cb6b068 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55778cb6b130 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55778cb6b0f8 <col:60> 'int' lvalue ParmVar 0x55778c827b58 'i' 'int'
|     `-ImplicitCastExpr 0x55778cb6b210 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55778cb6b1f0 <col:65> 'int32_t':'int' lvalue ParmVar 0x55778c827bd0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55778c827e68 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55778c827d70 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55778cb6b978 <col:36, line:591:5>
|   |-ParenExpr 0x55778cb6b6b8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55778cb6b688 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55778cb6b3e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55778cb6b3b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55778cb6b2c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55778cb6b2a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55778cb6b268 <col:23> 'int' lvalue ParmVar 0x55778c827d70 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55778cb6b288 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55778cb6b390 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55778cb6b378 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55778cb6b2e0 <col:33> 'int' lvalue ParmVar 0x55778c827d70 'i' 'int'
|   |   |     `-BinaryOperator 0x55778cb6b358 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55778cb6b340 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55778cb6b300 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55778cb61720 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55778cb6b320 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55778cb6b440 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55778cb6b420 <col:60> 'int' 0
|   |   `-CallExpr 0x55778cb6b5e8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55778cb6b5d0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55778cb6b5b0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778c6ba730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55778cb6b628 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cb6b4b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55778cb6b640 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cb6b4e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55778cb6b658 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55778cb6b520 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55778cb6b670 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55778cb6b598 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55778cb6b580 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55778cb6b540 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55778cb6b968 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55778cb6b950 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55778cb6b938 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55778cb6b908 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55778cb6b880 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55778cb6b850 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55778cb6b800 <col:61, col:70> 'char const[48]' lvalue ->c 0x55778c833c60
|             |   `-CXXMemberCallExpr 0x55778cb6b7e0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55778cb6b7b0 <col:61> '<bound member function type>' ->xanno 0x55778cb61338
|             |       `-CXXThisExpr 0x55778cb6b7a0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55778cb6b868 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55778cb6b830 <col:74> 'int' lvalue ParmVar 0x55778c827d70 'i' 'int'
|-CXXMethodDecl 0x55778c8280b8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55778c827f28 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55778c827fa0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55778cb6c058 <col:42, line:606:5>
|   |-ParenExpr 0x55778cb6bde8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55778cb6bdb8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55778cb6bb10 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55778cb6bae0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55778cb6b9f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55778cb6b9d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55778cb6b998 <col:23> 'int' lvalue ParmVar 0x55778c827f28 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55778cb6b9b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55778cb6bac0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55778cb6baa8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55778cb6ba10 <col:33> 'int' lvalue ParmVar 0x55778c827f28 'i' 'int'
|   |   |     `-BinaryOperator 0x55778cb6ba88 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55778cb6ba70 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55778cb6ba30 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55778cb61720 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55778cb6ba50 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55778cb6bb70 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55778cb6bb50 <col:60> 'int' 0
|   |   `-CallExpr 0x55778cb6bd18 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55778cb6bd00 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55778cb6bce0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778c6ba730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55778cb6bd58 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cb6bbe0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55778cb6bd70 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cb6bc18 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55778cb6bd88 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55778cb6bc50 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55778cb6bda0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55778cb6bcc8 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55778cb6bcb0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55778cb6bc70 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55778cb6c038 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55778cb6bfe8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55778cb6bfb8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55778cb6bf58 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55778cb6bf28 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55778cb6bed8 <col:48, col:57> 'char [48]' lvalue ->c 0x55778c833c60
|     |     |   `-CXXMemberCallExpr 0x55778cb6beb8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55778cb6be88 <col:48> '<bound member function type>' ->xanno 0x55778cb614d8
|     |     |       `-CXXThisExpr 0x55778cb6be78 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55778cb6bf40 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55778cb6bf08 <col:61> 'int' lvalue ParmVar 0x55778c827f28 'i' 'int'
|     `-ImplicitCastExpr 0x55778cb6c020 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55778cb6c000 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55778c827fa0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55778c828250 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55778c828180 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55778cb6c8c8 <col:33, line:620:5>
|   |-ParenExpr 0x55778cb6c640 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55778cb6c610 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55778cb6c260 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55778cb6c230 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55778cb6c0d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55778cb6c0b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55778cb6c078 <col:23> 'int' lvalue ParmVar 0x55778c828180 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55778cb6c098 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55778cb6c210 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55778cb6c1f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55778cb6c0f0 <col:33> 'int' lvalue ParmVar 0x55778c828180 'i' 'int'
|   |   |     `-BinaryOperator 0x55778cb6c1d8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55778cb6c1c0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55778cb6c110 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55778cb61720 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55778cb6c198 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55778cb6c180 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55778cb6c148 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55778cb6c2c0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55778cb6c2a0 <col:79> 'int' 0
|   |   `-CallExpr 0x55778cb6c570 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55778cb6c558 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55778cb6c538 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778c6ba730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55778cb6c5b0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cb6c3a8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55778cb6c5c8 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cb6c3f0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55778cb6c5e0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55778cb6c428 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55778cb6c5f8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55778cb6c520 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55778cb6c508 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55778cb6c4c8 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55778cb6c8b8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55778cb6c8a0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55778cb6c888 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55778cb6c858 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55778cb6c7d0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55778cb6c7a0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55778cb6c750 <col:67, col:76> 'char const[48]' lvalue ->c 0x55778c833c60
|             |   `-CXXMemberCallExpr 0x55778cb6c730 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55778cb6c700 <col:67> '<bound member function type>' ->xanno 0x55778cb61338
|             |       `-CXXThisExpr 0x55778cb6c6f0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55778cb6c7b8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55778cb6c780 <col:80> 'int' lvalue ParmVar 0x55778c828180 'i' 'int'
|-CXXMethodDecl 0x55778c828468 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55778c828310 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55778c828390 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55778cb6d100 <col:45, line:635:5>
|   |-ParenExpr 0x55778cb6ce50 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55778cb6ce20 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55778cb6cad0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55778cb6caa0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55778cb6c940 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55778cb6c928 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55778cb6c8e8 <col:23> 'int' lvalue ParmVar 0x55778c828310 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55778cb6c908 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55778cb6ca80 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55778cb6ca68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55778cb6c960 <col:33> 'int' lvalue ParmVar 0x55778c828310 'i' 'int'
|   |   |     `-BinaryOperator 0x55778cb6ca48 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55778cb6ca30 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55778cb6c980 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55778cb61720 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55778cb6ca08 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55778cb6c9f0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55778cb6c9b8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55778cb6cb30 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55778cb6cb10 <col:79> 'int' 0
|   |   `-CallExpr 0x55778cb6cd80 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55778cb6cd68 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55778cb6cd48 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778c6ba730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55778cb6cdc0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cb6cba0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55778cb6cdd8 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55778cb6cbe8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55778cb6cdf0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55778cb6cc20 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55778cb6ce08 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55778cb6cd30 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55778cb6cd00 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55778cb6ccb8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55778cb6d0e0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55778cb6d048 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55778cb6d018 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55778cb6cfc0 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55778cb6cf90 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55778cb6cf40 <col:54, col:63> 'char [48]' lvalue ->c 0x55778c833c60
|     |     |   `-CXXMemberCallExpr 0x55778cb6cf20 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55778cb6cef0 <col:54> '<bound member function type>' ->xanno 0x55778cb614d8
|     |     |       `-CXXThisExpr 0x55778cb6cee0 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55778cb6cfa8 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55778cb6cf70 <col:67> 'int' lvalue ParmVar 0x55778c828310 'i' 'int'
|     `-CXXConstCastExpr 0x55778cb6d0b0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55778cb6d098 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55778cb6d060 <col:91> 'const void *' lvalue ParmVar 0x55778c828390 'x' 'const void *'
|-CXXMethodDecl 0x55778c828538 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55778cb6d188 <col:34, line:640:5>
|   `-ReturnStmt 0x55778cb6d178 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55778cb6d160 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55778cb6d130 <col:16> 'Packet *' lvalue ->_data_packet 0x55778cb64de8
|         `-CXXThisExpr 0x55778cb6d120 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55778c828678 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55778c8285e8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55778cb66238 <col:46> 'bool' true
|-CXXMethodDecl 0x55778c8287f8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55778c828730 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55778c8288a0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55778c829050 <line:660:22> "" ""
| |-EnumConstantDecl 0x55778c8289a0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55778c8290c0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778c828980 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55778c828960 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55778cb5ac00 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55778c828a30 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55778c8290d8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778c828a10 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55778c8289f0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55778cb5ac90 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55778c828ac0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55778c8290f0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778c828aa0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55778c828a80 <col:21> 'int' 0
| |-EnumConstantDecl 0x55778c828b50 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55778c829108 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778c828b30 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55778c828b10 <col:19> 'int' 16
| |-EnumConstantDecl 0x55778c828be0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55778c829120 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778c828bc0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55778c828ba0 <col:21> 'int' 16
| |-EnumConstantDecl 0x55778c828c70 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55778c829138 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778c828c50 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55778c828c30 <col:19> 'int' 32
| |-EnumConstantDecl 0x55778c828d00 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55778c829150 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778c828ce0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55778c828cc0 <col:19> 'int' EnumConstant 0x55778c828b50 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55778c828d90 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55778c829168 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778c828d70 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55778c828d50 <col:19> 'int' EnumConstant 0x55778c828c70 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55778c828e60 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55778c829180 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778c828e40 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55778c828e20 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55778c828de0 <col:23> 'int' EnumConstant 0x55778c828d90 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55778c828e00 <col:40> 'int' 2
| |-EnumConstantDecl 0x55778c828f30 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55778c829198 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778c828f10 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55778c828ef0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55778c828eb0 <col:23> 'int' EnumConstant 0x55778c828d90 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55778c828ed0 <col:40> 'int' 4
| `-EnumConstantDecl 0x55778c829000 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55778c8291b0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55778c828fe0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55778c828fc0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55778c828f80 <col:23> 'int' EnumConstant 0x55778c828d90 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55778c828fa0 <col:40> 'int' 8
|-CXXMethodDecl 0x55778c8291f0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55778c829290 <col:68> "" ""
|-CXXMethodDecl 0x55778c829328 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55778c8293c8 <col:45> "" ""
|-CXXMethodDecl 0x55778c829460 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55778c829500 <col:57> "" ""
|-CXXMethodDecl 0x55778c829598 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55778c829638 <col:45> "" ""
|-CXXMethodDecl 0x55778c830770 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55778c830810 <col:57> "" ""
|-CXXMethodDecl 0x55778c8308a0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55778c830940 <col:51> "" ""
|-CXXMethodDecl 0x55778c8309d0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55778c830a70 <col:63> "" ""
|-CXXMethodDecl 0x55778c830b00 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55778c830ba0 <col:53> "" ""
|-CXXMethodDecl 0x55778c830c30 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55778c830cd0 <col:65> "" ""
|-CXXMethodDecl 0x55778c830de8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55778c830d58 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55778c830e90 <col:61> "" ""
|-CXXMethodDecl 0x55778c831028 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55778c830f18 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55778c830f90 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55778c8310d8 <col:67> "" ""
|-CXXMethodDecl 0x55778c8311f0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55778c831160 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55778c831298 <col:63> "" ""
|-CXXMethodDecl 0x55778c831430 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55778c831320 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55778c831398 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55778c8314e0 <col:69> "" ""
|-CXXMethodDecl 0x55778c8315f8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55778c831568 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55778c8316a0 <col:63> "" ""
|-CXXMethodDecl 0x55778c831838 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55778c831728 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55778c8317a0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55778c8318e8 <col:69> "" ""
|-CXXMethodDecl 0x55778c831a00 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55778c831970 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55778c831aa8 <col:62> "" ""
|-CXXMethodDecl 0x55778c831c40 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55778c831b30 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55778c831ba8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55778c831cf0 <col:68> "" ""
|-CXXMethodDecl 0x55778c831e08 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55778c831d78 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55778c831eb0 <col:63> "" ""
|-CXXMethodDecl 0x55778c832048 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55778c831f38 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55778c831fb0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55778c8320f8 <col:69> "" ""
|-CXXMethodDecl 0x55778c832188 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55778c832228 <col:64> "" ""
|-CXXMethodDecl 0x55778c8322b8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55778c832358 <col:52> "" ""
|-CXXMethodDecl 0x55778c8323e8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55778c832488 <col:67> "" ""
|-CXXMethodDecl 0x55778c832518 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55778c8325b8 <col:55> "" ""
|-CXXMethodDecl 0x55778c8326d0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55778c832640 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55778c832778 <col:58> "" ""
|-CXXMethodDecl 0x55778c832910 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55778c832800 <col:33> col:36 'int'
| |-ParmVarDecl 0x55778c832878 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55778c8329c0 <col:62> "" ""
|-CXXMethodDecl 0x55778c832ad8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55778c832a48 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55778c832b80 <col:58> "" ""
|-CXXMethodDecl 0x55778c832d18 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55778c832c08 <col:33> col:36 'int'
| |-ParmVarDecl 0x55778c832c80 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55778c832dc8 <col:62> "" ""
|-CXXMethodDecl 0x55778c832ee0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55778c832e50 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55778c832f88 <col:60> "" ""
|-CXXMethodDecl 0x55778c833120 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55778c833010 <col:34> col:37 'int'
| |-ParmVarDecl 0x55778c833088 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55778c8331d0 <col:64> "" ""
|-CXXMethodDecl 0x55778c8332e8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55778c833258 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55778c833390 <col:58> "" ""
|-CXXMethodDecl 0x55778c833528 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55778c833418 <col:33> col:36 'int'
| |-ParmVarDecl 0x55778c833490 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55778c8335d8 <col:62> "" ""
|-CXXMethodDecl 0x55778c8336f0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55778c833660 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55778c833798 <col:59> "" ""
|-CXXMethodDecl 0x55778c833930 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55778c833820 <col:33> col:36 'int'
| |-ParmVarDecl 0x55778c833898 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55778c8339e0 <col:63> "" ""
|-AccessSpecDecl 0x55778c833a50 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55778c833a78 prev 0x55778cb61210 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55778c833b70 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55778c833c60 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55778c833d88 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55778c833f08 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55778c834088 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55778c834208 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55778cb6d308 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55778cb6db78 <col:11>
| |-CXXDestructorDecl 0x55778cb6d3e0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55778cb6d518 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55778cb6d518
| | `-ParmVarDecl 0x55778cb6d628 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55778cb6d6c8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55778cb6d6c8
| | `-ParmVarDecl 0x55778cb6d7d8 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55778cb70508 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55778cb70618 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55778cb70898 <col:11>
| |   `-ReturnStmt 0x55778cb70888 <col:11>
| |     `-UnaryOperator 0x55778cb70870 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55778cb70860 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55778cb70688 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55778cb70688
|   `-ParmVarDecl 0x55778cb70798 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55778c834270 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55778c834388 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55778c834428 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55778c834490 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55778c8344f8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55778c834560 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55778c8345c0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55778c834680 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55778c8346e0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55778cb64d10 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55778cb6d218 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55778c834428 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55778cb6db88 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55778cb6dbe0 <col:12>
| |-CXXConstructorDecl 0x55778cb6d848 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55778cb6d848
| | `-ParmVarDecl 0x55778cb6d958 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55778cb6d9f8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55778cb6d9f8
| | `-ParmVarDecl 0x55778cb6db08 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55778cb6fbf0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55778cb64d88 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55778cb64de8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55778cb64e50 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55778cb64eb8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55778cb64f20 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55778cb64f88 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55778cb64fe8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55778cb65048 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55778cb650b0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55778cb65138 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55778cb64d88 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55778cb6d1b0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55778cb64fe8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55778cb6dbf0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55778cb6dc50 <col:21, line:755:5>
|-CXXConstructorDecl 0x55778cb652d8 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55778cb65218 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55778cb653d0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55778cb655b8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55778cb654c0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55778cb65888 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55778cb65670 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55778cb656e8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55778cb65760 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55778cb65aa8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55778cb65958 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55778cb659d0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55778cb65d78 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55778cb65b68 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55778cb65be0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55778cb65c58 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55778cb65ed0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55778cb65e40 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55778cb66018 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55778cb65f88 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55778cb66110 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55778cb19858 <../elements/local/duppath.hh:7:3, line:11:3> line:7:3 struct definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x55778cb199c0 <line:8:5, col:14> col:14 referenced _q 'Packet **'
|-FieldDecl 0x55778cb19a28 <line:9:5, col:14> col:14 referenced _head 'unsigned int'
|-FieldDecl 0x55778cb19a90 <line:10:5, col:14> col:14 referenced _tail 'unsigned int'
|-CXXConstructorDecl 0x55778cb1b0b0 <line:7:3> col:3 implicit used  'void () noexcept' inline default trivial
| `-CompoundStmt 0x55778cb1b4e8 <col:3>
|-CXXConstructorDecl 0x55778cb1b1b8 <col:3> col:3 implicit constexpr  'void (const DupPath::(anonymous struct at ../elements/local/duppath.hh:7:3) &)' inline default trivial noexcept-unevaluated 0x55778cb1b1b8
| `-ParmVarDecl 0x55778cb1b2c8 <col:3> col:3 'const DupPath::(anonymous struct at ../elements/local/duppath.hh:7:3) &'
`-CXXConstructorDecl 0x55778cb1b368 <col:3> col:3 implicit constexpr  'void (DupPath::(anonymous struct at ../elements/local/duppath.hh:7:3) &&)' inline default trivial noexcept-unevaluated 0x55778cb1b368
  `-ParmVarDecl 0x55778cb1b478 <col:3> col:3 'DupPath::(anonymous struct at ../elements/local/duppath.hh:7:3) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { %class.Packet**, i32, i32 }
  NonVirtualBaseLLVMType:%struct.anon = type { %class.Packet**, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55778cb19668 <../elements/local/duppath.hh:6:1, line:29:1> line:6:7 class DupPath definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55778cb197c8 <col:1, col:7> col:7 implicit referenced class DupPath
|-CXXRecordDecl 0x55778cb19858 <line:7:3, line:11:3> line:7:3 struct definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x55778cb199c0 <line:8:5, col:14> col:14 referenced _q 'Packet **'
| |-FieldDecl 0x55778cb19a28 <line:9:5, col:14> col:14 referenced _head 'unsigned int'
| |-FieldDecl 0x55778cb19a90 <line:10:5, col:14> col:14 referenced _tail 'unsigned int'
| |-CXXConstructorDecl 0x55778cb1b0b0 <line:7:3> col:3 implicit used  'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55778cb1b4e8 <col:3>
| |-CXXConstructorDecl 0x55778cb1b1b8 <col:3> col:3 implicit constexpr  'void (const DupPath::(anonymous struct at ../elements/local/duppath.hh:7:3) &)' inline default trivial noexcept-unevaluated 0x55778cb1b1b8
| | `-ParmVarDecl 0x55778cb1b2c8 <col:3> col:3 'const DupPath::(anonymous struct at ../elements/local/duppath.hh:7:3) &'
| `-CXXConstructorDecl 0x55778cb1b368 <col:3> col:3 implicit constexpr  'void (DupPath::(anonymous struct at ../elements/local/duppath.hh:7:3) &&)' inline default trivial noexcept-unevaluated 0x55778cb1b368
|   `-ParmVarDecl 0x55778cb1b478 <col:3> col:3 'DupPath::(anonymous struct at ../elements/local/duppath.hh:7:3) &&'
|-FieldDecl 0x55778cb19b58 <col:3, line:11:5> col:5 referenced _q 'struct (anonymous struct at ../elements/local/duppath.hh:7:3)':'DupPath::(anonymous struct at ../elements/local/duppath.hh:7:3)'
|-CXXMethodDecl 0x55778cb19c98 <line:13:3, col:56> col:7 next_i 'int (int) const'
| |-ParmVarDecl 0x55778cb19bd8 <col:14, col:18> col:18 used i 'int'
| `-CompoundStmt 0x55778cb1ad48 <col:27, col:56>
|   `-ReturnStmt 0x55778cb1ad38 <col:29, col:53>
|     `-ParenExpr 0x55778cb1ad18 <col:36, col:53> 'int'
|       `-ConditionalOperator 0x55778cb1ace8 <col:37, col:52> 'int'
|         |-BinaryOperator 0x55778cb1ac30 <col:37, col:40> 'bool' '!='
|         | |-ImplicitCastExpr 0x55778cb1ac18 <col:37> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55778cb1abd8 <col:37> 'int' lvalue ParmVar 0x55778cb19bd8 'i' 'int'
|         | `-IntegerLiteral 0x55778cb1abf8 <col:40> 'int' 128
|         |-BinaryOperator 0x55778cb1aca8 <col:46, col:48> 'int' '+'
|         | |-ImplicitCastExpr 0x55778cb1ac90 <col:46> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x55778cb1ac50 <col:46> 'int' lvalue ParmVar 0x55778cb19bd8 'i' 'int'
|         | `-IntegerLiteral 0x55778cb1ac70 <col:48> 'int' 1
|         `-IntegerLiteral 0x55778cb1acc8 <col:52> 'int' 0
|-CXXMethodDecl 0x55778cb19d88 <line:14:3, col:15> col:11 deq 'Packet *()'
|-AccessSpecDecl 0x55778cb19e28 <line:16:2, col:8> col:2 public
|-CXXConstructorDecl 0x55778cb19e88 <line:18:3, col:11> col:3 DupPath 'void ()'
|-CXXDestructorDecl 0x55778cb19f78 <line:19:3, col:12> col:3 ~DupPath 'void ()' noexcept-unevaluated 0x55778cb19f78
| `-Overrides: [ 0x55778cb91288 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x55778cb1a088 <line:21:3, col:54> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x55778cb97710 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55778cb1ada8 <col:34, col:54>
|   `-ReturnStmt 0x55778cb1ad98 <col:36, col:43>
|     `-ImplicitCastExpr 0x55778cb1ad80 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55778cb1ad60 <col:43> 'const char [8]' lvalue "DupPath"
|-CXXMethodDecl 0x55778cb1a150 <line:22:3, col:50> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x55778cb977d8 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55778cb1ae08 <col:34, col:50>
|   `-ReturnStmt 0x55778cb1adf8 <col:36, col:43>
|     `-ImplicitCastExpr 0x55778cb1ade0 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55778cb1adc0 <col:43> 'const char [4]' lvalue "1/2"
|-CXXMethodDecl 0x55778cb1a218 <line:23:3, col:51> col:15 processing 'const char *() const'
| |-Overrides: [ 0x55778cb97b48 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x55778cb1aee0 <col:34, col:51>
|   `-ReturnStmt 0x55778cb1aed0 <col:36, col:43>
|     `-ImplicitCastExpr 0x55778cb1aeb8 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55778cb1ae98 <col:43> 'const char [5]' lvalue "h/hl"
|-CXXMethodDecl 0x55778cb1a360 <line:24:3, col:32> col:7 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x55778cb99190 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x55778cb1a2c8 <col:18, col:31> col:32 'ErrorHandler *'
|-CXXMethodDecl 0x55778cb1a4a8 <line:25:3, col:28> col:8 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x55778cb999a8 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x55778cb1a418 <col:16> col:28 'Element::CleanupStage'
|-CXXMethodDecl 0x55778cb1a678 <line:27:3, col:31> col:8 push 'void (int, Packet *)'
| |-Overrides: [ 0x55778cb91558 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x55778cb1a568 <col:13, col:17> col:17 port 'int'
| `-ParmVarDecl 0x55778cb1a5e0 <col:23, col:30> col:31 'Packet *'
|-CXXMethodDecl 0x55778cb1a7d0 <line:28:3, col:24> col:11 pull 'Packet *(int)'
| |-Overrides: [ 0x55778cb916e8 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x55778cb1a740 <col:16, col:20> col:20 port 'int'
|-CXXConstructorDecl 0x55778cb1a8a8 <line:6:7> col:7 implicit DupPath 'void (const DupPath &)' inline default_delete noexcept-unevaluated 0x55778cb1a8a8
| `-ParmVarDecl 0x55778cb1a9b8 <col:7> col:7 'const DupPath &'
`-CXXMethodDecl 0x55778cb1aa58 <col:7> col:7 implicit operator= 'DupPath &(const DupPath &)' inline default_delete noexcept-unevaluated 0x55778cb1aa58
  `-ParmVarDecl 0x55778cb1ab68 <col:7> col:7 'const DupPath &'

Layout: <CGRecordLayout
  LLVMType:%class.DupPath = type { %class.Element.base, %struct.anon }
  NonVirtualBaseLLVMType:%class.DupPath = type { %class.Element.base, %struct.anon }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55778c8a9600 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55778c8a9718 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x55778c8a97a8 <col:22, col:28> col:22 public
|-EnumDecl 0x55778c8a97d0 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x55778c8a98e8 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x55778c8a98c8 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x55778c8a98b0 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55778c8a9890 <col:14> 'int' 999
| |-EnumConstantDecl 0x55778c8a9990 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x55778c8a9970 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x55778c8a9958 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x55778c8a9938 <col:14> 'int' 1
| |-EnumConstantDecl 0x55778c8a9a20 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x55778c8a9a00 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x55778c8a99e0 <col:17> 'int' 0
| |-EnumConstantDecl 0x55778c8a9ab0 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x55778c8a9a90 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x55778c8a9a70 <col:13> 'int' 1
| |-EnumConstantDecl 0x55778c8a9b40 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x55778c8a9b20 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x55778c8a9b00 <col:16> 'int' 2
| |-EnumConstantDecl 0x55778c8a9bd0 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x55778c8a9bb0 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x55778c8a9b90 <col:13> 'int' 3
| |-EnumConstantDecl 0x55778c8a9c60 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x55778c8a9c40 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x55778c8a9c20 <col:15> 'int' 4
| |-EnumConstantDecl 0x55778c8a9cf0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x55778c8a9cd0 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x55778c8a9cb0 <col:14> 'int' 5
| |-EnumConstantDecl 0x55778c8a9d80 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x55778c8a9d60 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x55778c8a9d40 <col:12> 'int' 6
| `-EnumConstantDecl 0x55778c8a9e10 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x55778c8a9df0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x55778c8a9dd0 <col:13> 'int' 7
|-VarDecl 0x55778c8a9ed8 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x55778c8a9f60 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x55778c8a9fe8 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x55778c8aa070 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x55778c8aa0f8 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x55778c8aa180 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x55778c8aa230 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x55778c8aa2b8 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x55778c8aa340 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x55778c8aa3c8 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x55778c8aa450 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x55778c8aa580 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x55778c8afbc8 '_nerrors' 'int'
| | `-IntegerLiteral 0x55778c8b0358 <line:128:13> 'int' 0
| `-CompoundStmt 0x55778c8b2100 <col:16, line:129:5>
|-CXXDestructorDecl 0x55778c8aa670 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x55778c8b2110 <col:29, line:132:5>
|-CXXMethodDecl 0x55778c8aa828 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x55778c8aa760 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55778c8aa8f0 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55778c8aa9d8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55778c8b2168 <col:44, line:161:5>
|   `-ReturnStmt 0x55778c8b2158 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x55778c8b2140 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55778c8b2120 <col:9> 'ErrorHandler *' lvalue Var 0x55778c8afc28 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x55778c8aab48 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x55778c8aaa88 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55778c8aac10 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x55778c8b21c8 <col:43, line:173:5>
|   `-ReturnStmt 0x55778c8b21b8 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x55778c8b21a0 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x55778c8b2180 <col:9> 'ErrorHandler *' lvalue Var 0x55778c8afca0 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x55778c8aacc8 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x55778c8aad48 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x55778c8aae90 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x55778c8aadc8 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x55778c8aafe0 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x55778c8aaf50 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x55778c8ab138 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x55778c8ab0a0 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x55778c8ab290 <line:196:5, col:35> col:9 used error 'int (const char *, ...)'
| `-ParmVarDecl 0x55778c8ab1f8 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55778c8ab3e8 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x55778c8ab350 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x55778c8ab600 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55778c8ab4a0 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x55778c8ab520 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x55778c8ab7d8 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x55778c8ab6c0 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x55778c8ab740 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x55778c8ab9f8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55778c8ab898 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x55778c8ab918 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x55778c8abbd8 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55778c8abab8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55778c8abb38 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55778c8abdb8 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x55778c8abc98 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x55778c8abd18 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x55778c8abf40 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x55778c8abe78 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x55778c8ac110 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x55778c8abff8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55778c8ac070 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x55778c8b2428 <col:57, line:234:5>
|   `-ReturnStmt 0x55778c8b2418 <line:233:2, col:41>
|     `-ExprWithCleanups 0x55778c8b2400 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55778c8b23a8 <col:9, col:41> 'int'
|         |-MemberExpr 0x55778c8b2378 <col:9> '<bound member function type>' ->xmessage 0x55778c8abf40
|         | `-CXXThisExpr 0x55778c8b2368 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x55778c8b23e8 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55778c8b23d0 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55778c8b2348 <col:18, col:40> 'String' (CXXTemporary 0x55778c8b2348)
|               `-CallExpr 0x55778c8b2310 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x55778c8b22f8 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x55778c8b2268 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55778c8ae3b0 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x55778c8b2288 <col:31> 'const String' lvalue ParmVar 0x55778c8ac070 'str' 'const String &'
|                 `-DeclRefExpr 0x55778c8b22a8 <col:36> 'const String' lvalue ParmVar 0x55778c8abff8 'anno' 'const String &'
|-CXXMethodDecl 0x55778c8ac4c0 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55778c8ac240 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x55778c8ac2c0 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x55778c8ac390 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55778c8b26b8 <col:68, line:243:5>
|   `-ReturnStmt 0x55778c8b26a8 <line:242:2, col:41>
|     `-ExprWithCleanups 0x55778c8b2690 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x55778c8b2630 <col:9, col:41> 'int'
|         |-MemberExpr 0x55778c8b2600 <col:9> '<bound member function type>' ->xmessage 0x55778c8ac110
|         | `-CXXThisExpr 0x55778c8b25f0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55778c8b24c8 <col:18> 'const String' lvalue ParmVar 0x55778c8ac240 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55778c8b2678 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x55778c8b2660 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55778c8b25d0 <col:24, col:40> 'String' (CXXTemporary 0x55778c8b25d0)
|               `-CXXMemberCallExpr 0x55778c8b2568 <col:24, col:40> 'String'
|                 |-MemberExpr 0x55778c8b24f8 <col:24> '<bound member function type>' ->vformat 0x55778c8ad6a0
|                 | `-CXXThisExpr 0x55778c8b24e8 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55778c8b2598 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55778c8b2528 <col:32> 'const char *' lvalue ParmVar 0x55778c8ac2c0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55778c8b25b0 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55778c8b2548 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55778c8ac390 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55778c8ac760 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x55778c8ac588 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55778c8ac600 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55778c8ac678 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x55778c8b29f8 <col:23, line:254:5>
|   `-ReturnStmt 0x55778c8b29e8 <line:253:2, col:71>
|     `-ExprWithCleanups 0x55778c8b29d0 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x55778c8b2970 <col:9, col:71> 'int'
|         |-MemberExpr 0x55778c8b2940 <col:9> '<bound member function type>' ->xmessage 0x55778c8ac110
|         | `-CXXThisExpr 0x55778c8b2930 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x55778c8b29b8 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x55778c8b29a0 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x55778c8b28f0 <col:18, col:65> 'String' (CXXTemporary 0x55778c8b28f0)
|         |     `-CallExpr 0x55778c8b2888 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x55778c8b2870 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x55778c8b2758 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x55778c8ae3b0 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x55778c8b2778 <col:31> 'const String' lvalue ParmVar 0x55778c8ac600 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x55778c8b28d0 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x55778c8b28b8 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x55778c8b2850 <col:37, col:64> 'String' (CXXTemporary 0x55778c8b2850)
|         |             `-CallExpr 0x55778c8b2820 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x55778c8b2808 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x55778c8b2798 <col:37> 'String (const String &)' lvalue CXXMethod 0x55778c8aea08 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x55778c8b27b8 <col:56> 'const String' lvalue ParmVar 0x55778c8ac588 'landmark' 'const String &'
|         `-DeclRefExpr 0x55778c8b2910 <col:68> 'const String' lvalue ParmVar 0x55778c8ac678 'str' 'const String &'
|-CXXMethodDecl 0x55778c8acae0 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x55778c8ac828 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x55778c8ac8a0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x55778c8ac920 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x55778c8ac998 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55778c8b2cb0 <col:34, line:267:5>
|   `-ReturnStmt 0x55778c8b2ca0 <line:266:2, col:51>
|     `-ExprWithCleanups 0x55778c8b2c88 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x55778c8b2c20 <col:9, col:51> 'int'
|         |-MemberExpr 0x55778c8b2bf0 <col:9> '<bound member function type>' ->xmessage 0x55778c8ac760
|         | `-CXXThisExpr 0x55778c8b2be0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x55778c8b2a98 <col:18> 'const String' lvalue ParmVar 0x55778c8ac828 'landmark' 'const String &'
|         |-DeclRefExpr 0x55778c8b2ab8 <col:28> 'const String' lvalue ParmVar 0x55778c8ac8a0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x55778c8b2c70 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x55778c8b2c58 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x55778c8b2bc0 <col:34, col:50> 'String' (CXXTemporary 0x55778c8b2bc0)
|               `-CXXMemberCallExpr 0x55778c8b2b58 <col:34, col:50> 'String'
|                 |-MemberExpr 0x55778c8b2ae8 <col:34> '<bound member function type>' ->vformat 0x55778c8ad6a0
|                 | `-CXXThisExpr 0x55778c8b2ad8 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x55778c8b2b88 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x55778c8b2b18 <col:42> 'const char *' lvalue ParmVar 0x55778c8ac920 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x55778c8b2ba0 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x55778c8b2b38 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55778c8ac998 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55778c8acbf0 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x55778c8b2d30 <col:25, line:288:5>
|   `-ReturnStmt 0x55778c8b2d20 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x55778c8b2d08 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x55778c8b2cd8 <col:9> 'const int' lvalue ->_nerrors 0x55778c8afbc8
|         `-CXXThisExpr 0x55778c8b2cc8 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x55778c8ace00 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x55778c8acca8 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x55778c8acd28 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x55778c8ad0e8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55778c8acec8 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x55778c8acf48 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x55778c8acfc0 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55778c8ad280 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x55778c8ad1b8 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x55778c8ad4c8 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x55778c8ad340 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x55778c8ad3b8 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x55778c8b2f90 <col:58, line:357:5>
|   `-ReturnStmt 0x55778c8b2f80 <line:356:2, col:29>
|     `-ExprWithCleanups 0x55778c8b2f68 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x55778c8b2f38 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x55778c8b2f20 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x55778c8b2f00 <col:9, col:29> 'String' (CXXTemporary 0x55778c8b2f00)
|             `-CallExpr 0x55778c8b2e90 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x55778c8b2e78 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x55778c8b2df8 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x55778c8ad0e8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x55778c8b2d98 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x55778c8b2ec8 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x55778c8b2db8 <col:21> 'const char *' lvalue ParmVar 0x55778c8ad340 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x55778c8b2ee0 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x55778c8b2dd8 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x55778c8ad3b8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55778c8ad6a0 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x55778c8ad590 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x55778c8ad608 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x55778c8ad7f8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x55778c8ad768 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x55778c8ad978 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x55778c8ad8b0 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x55778c8adc10 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x55778c8ada30 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x55778c8adab0 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x55778c8adb28 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x55778c8add70 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x55778c8adce0 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x55778c8b30a8 <col:37, line:441:5>
|   `-IfStmt 0x55778c8b3090 <line:439:2, line:440:8>
|     |-BinaryOperator 0x55778c8b3018 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x55778c8b2fe8 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x55778c8b2fa8 <col:6> 'int' lvalue ParmVar 0x55778c8adce0 'level' 'int'
|     | `-ImplicitCastExpr 0x55778c8b3000 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x55778c8b2fc8 <col:15> 'ErrorHandler::Level' EnumConstant 0x55778c8a9bd0 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x55778c8b3078 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x55778c8b3048 <col:8> 'int' lvalue ->_nerrors 0x55778c8afbc8
|         `-CXXThisExpr 0x55778c8b3038 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x55778c8ade38 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x55778c8b3140 <col:26, line:448:5>
|   `-BinaryOperator 0x55778c8b3120 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x55778c8b30d0 <col:2> 'int' lvalue ->_nerrors 0x55778c8afbc8
|     | `-CXXThisExpr 0x55778c8b30c0 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x55778c8b3100 <col:13> 'int' 0
|-CXXMethodDecl 0x55778c8ae000 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x55778c8adef0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x55778c8adf68 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x55778c8ae3b0 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x55778c8ae0c0 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x55778c8ae138 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x55778c8ae668 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x55778c8ae470 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x55778c8ae4f0 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x55778c8ae570 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x55778c8ae720 <col:59> 0 0
|-CXXMethodDecl 0x55778c8ae8b8 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x55778c8ae798 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x55778c8ae818 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x55778c8b37b0 <col:70, line:534:5>
|   |-DeclStmt 0x55778c8b32b0 <line:528:2, col:20>
|   | |-VarDecl 0x55778c8b3168 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x55778c8b31d0 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x55778c8b3208 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x55778c8b3270 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x55778c8b3380 <line:529:2, col:23>
|   | `-VarDecl 0x55778c8b32e0 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x55778c8b3368 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x55778c8b3348 <col:18> 'const char *' lvalue ParmVar 0x55778c8ae798 'begin' 'const char *'
|   |-DoStmt 0x55778c8b3748 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x55778c8b3678 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x55778c8b3660 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x55778c8b3640 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x55778c8b3398 <col:6> 'const char *' lvalue Var 0x55778c8b32e0 'x' 'const char *'
|   | |     `-CallExpr 0x55778c8b3590 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x55778c8b3578 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x55778c8b3530 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x55778c8b00a0 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x55778c8b35f8 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x55778c8b35e0 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x55778c8b3450 <col:20, col:27> 'String' (CXXTemporary 0x55778c8b3450)
|   | |       |     `-CXXTemporaryObjectExpr 0x55778c8b3418 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x55778c8b3610 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55778c8b3470 <col:30> 'const char *' lvalue Var 0x55778c8b32e0 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x55778c8b3628 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x55778c8b3490 <col:33> 'const char *' lvalue ParmVar 0x55778c8ae818 'end' 'const char *'
|   | |       |-UnaryOperator 0x55778c8b34d0 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55778c8b34b0 <col:39> 'String' lvalue Var 0x55778c8b3168 'name' 'String'
|   | |       |-UnaryOperator 0x55778c8b3508 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x55778c8b34e8 <col:46> 'String' lvalue Var 0x55778c8b3208 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x55778c8b3520 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x55778c8b3730 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x55778c8b3718 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x55778c8b36f8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x55778c8b36c8 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55778c85cb58
|   |         `-ImplicitCastExpr 0x55778c8b36b0 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x55778c8b3690 <col:11> 'String' lvalue Var 0x55778c8b3168 'name' 'String'
|   `-ReturnStmt 0x55778c8b37a0 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x55778c8b3788 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x55778c8b3768 <col:9> 'const char *' lvalue Var 0x55778c8b32e0 'x' 'const char *'
|-CXXMethodDecl 0x55778c8aea08 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x55778c8ae978 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x55778c8b3db8 <col:55, line:550:5>
|   `-IfStmt 0x55778c8b3d90 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x55778c8b39f0 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x55778c8b39d8 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x55778c8b39c0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x55778c8b39a0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x55778c8b3970 <col:6> '<bound member function type>' .operator int (String::*)() const 0x55778c85cb58
|     | |       `-DeclRefExpr 0x55778c8b3810 <col:6> 'const String' lvalue ParmVar 0x55778c8ae978 'x' 'const String &'
|     | `-BinaryOperator 0x55778c8b3950 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x55778c8b3920 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x55778c8b38d0 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x55778c8b38b8 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x55778c8b3870 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x55778c877aa0 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x55778c8b3830 <col:11> 'const String' lvalue ParmVar 0x55778c8ae978 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x55778c8b3850 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x55778c8b3938 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x55778c8b3908 <col:19> 'char' 123
|     |-ReturnStmt 0x55778c8b3a60 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x55778c8b3a30 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x55778c8b3a10 <col:13> 'const String' lvalue ParmVar 0x55778c8ae978 'x' 'const String &'
|     `-IfStmt 0x55778c8b3d68 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x55778c8b3af8 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x55778c8b3ae0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x55778c8b3ac0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x55778c8b3a90 <col:11> '<bound member function type>' .operator int (String::*)() const 0x55778c85cb58
|       |       `-DeclRefExpr 0x55778c8b3a70 <col:11> 'const String' lvalue ParmVar 0x55778c8ae978 'x' 'const String &'
|       |-ReturnStmt 0x55778c8b3c80 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x55778c8b3c68 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x55778c8b3c38 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x55778c8b3c20 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x55778c8b3c00 <col:13, col:29> 'String' (CXXTemporary 0x55778c8b3c00)
|       |         `-CallExpr 0x55778c8b3bb0 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x55778c8b3b98 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x55778c8b3b10 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x55778c8ae000 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x55778c8b3be0 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x55778c8b3b30 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x55778c8b3b50 <col:28> 'const String' lvalue ParmVar 0x55778c8ae978 'x' 'const String &'
|       `-ReturnStmt 0x55778c8b3d58 <line:549:6, col:20>
|         `-ExprWithCleanups 0x55778c8b3d40 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x55778c8b3d10 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x55778c8b3cf8 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x55778c8b3cd8 <col:13, col:20> 'String' (CXXTemporary 0x55778c8b3cd8)
|                 `-CXXTemporaryObjectExpr 0x55778c8b3ca0 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x55778c8aec08 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x55778c8aeac0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x55778c8aeb38 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55778c8b0348 <col:71> 'bool' false
|-CXXRecordDecl 0x55778c8aecb8 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x55778c8aefb8 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x55778c8aef50 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x55778c8aeef0 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x55778c8aeeb0 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x55778c858e40 'String'
|       | `-CXXRecord 0x55778c858db0 'String'
|       |-BuiltinType 0x55778c620580 'int'
|       `-DecayedType 0x55778c8ac360 '__va_list_tag *' sugar
|         |-TypedefType 0x55778c8ac330 'va_list' sugar
|         | |-Typedef 0x55778c88fab0 'va_list'
|         | `-TypedefType 0x55778c88fa60 '__gnuc_va_list' sugar
|         |   |-Typedef 0x55778c88ae38 '__gnuc_va_list'
|         |   `-TypedefType 0x55778c88ada0 '__builtin_va_list' sugar
|         |     |-Typedef 0x55778c661d38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x55778c661ce0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x55778c6212d0 '__va_list_tag'
|         |         `-CXXRecord 0x55778c621238 '__va_list_tag'
|         `-PointerType 0x55778c895630 '__va_list_tag *'
|           `-RecordType 0x55778c6212d0 '__va_list_tag'
|             `-CXXRecord 0x55778c621238 '__va_list_tag'
|-EnumDecl 0x55778c8af010 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x55778c8af110 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55778c8af670 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778c8af0f0 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x55778c8af0d0 <col:16> 'int' 1
| |-EnumConstantDecl 0x55778c8af1a0 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55778c8af688 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778c8af180 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x55778c8af160 <col:21> 'int' 2
| |-EnumConstantDecl 0x55778c8af230 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55778c8af6a0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778c8af210 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x55778c8af1f0 <col:22> 'int' 4
| |-EnumConstantDecl 0x55778c8af2c0 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55778c8af6b8 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778c8af2a0 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x55778c8af280 <col:17> 'int' 8
| |-EnumConstantDecl 0x55778c8af350 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55778c8af6d0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778c8af330 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x55778c8af310 <col:22> 'int' 16
| |-EnumConstantDecl 0x55778c8af3e0 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55778c8af6e8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778c8af3c0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55778c8af3a0 <col:19> 'int' 32
| |-EnumConstantDecl 0x55778c8af470 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55778c8af700 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778c8af450 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x55778c8af430 <col:17> 'int' 64
| |-EnumConstantDecl 0x55778c8af500 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55778c8af718 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778c8af4e0 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x55778c8af4c0 <col:14> 'int' 128
| |-EnumConstantDecl 0x55778c8af590 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x55778c8af730 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55778c8af570 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x55778c8af550 <col:16> 'int' 256
| `-EnumConstantDecl 0x55778c8af620 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x55778c8af748 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55778c8af600 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x55778c8af5e0 <col:12> 'int' 1024
|-CXXMethodDecl 0x55778c8af958 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x55778c8af770 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x55778c8af810 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x55778c8afae0 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x55778c8afa18 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x55778c8afb88 <line:580:3, col:10> col:3 private
|-FieldDecl 0x55778c8afbc8 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x55778c8afc28 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x55778c8afca0 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x55778c8b00a0 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x55778c8afd18 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x55778c8afd98 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x55778c8afe18 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x55778c8afe90 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x55778c8aff08 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x55778c8aff80 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x55778c8b01c8 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x55778c8b01c8
| `-ParmVarDecl 0x55778c8b02d8 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x55778c8b9a48 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x55778c8b9a48
  `-ParmVarDecl 0x55778c8b9b58 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_ip
     0:0-3 |   unsigned int ip_hl
     0:4-7 |   unsigned int ip_v
         1 |   uint8_t ip_tos
         2 |   uint16_t ip_len
         4 |   uint16_t ip_id
         6 |   uint16_t ip_off
         8 |   uint8_t ip_ttl
         9 |   uint8_t ip_p
        10 |   uint16_t ip_sum
        12 |   struct in_addr ip_src
        12 |     in_addr_t s_addr
        16 |   struct in_addr ip_dst
        16 |     in_addr_t s_addr
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55778c8d22d8 </usr/include/netinet/in.h:31:1, line:34:3> line:31:8 struct in_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55778c8d23f8 <col:1, col:8> col:8 implicit struct in_addr
|-FieldDecl 0x55778c8d24c0 <line:33:5, col:15> col:15 referenced s_addr 'in_addr_t':'unsigned int'
|-CXXConstructorDecl 0x55778c99bda0 <line:31:8> col:8 implicit used in_addr 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55778c9a3c78 <col:8>
|-CXXConstructorDecl 0x55778c99bea8 <col:8> col:8 implicit constexpr in_addr 'void (const in_addr &)' inline default trivial noexcept-unevaluated 0x55778c99bea8
| `-ParmVarDecl 0x55778c99bfb8 <col:8> col:8 'const in_addr &'
|-CXXConstructorDecl 0x55778c99c058 <col:8> col:8 implicit used constexpr in_addr 'void (in_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x55778c99c168 <col:8> col:8 used 'in_addr &&'
| |-CXXCtorInitializer Field 0x55778c8d24c0 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x55778c9a3e90 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x55778c9a3e60 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x55778c8d24c0
| |     `-CXXStaticCastExpr 0x55778c9a3e30 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
| |       `-DeclRefExpr 0x55778c9a3e00 <col:8> 'in_addr' lvalue ParmVar 0x55778c99c168 '' 'in_addr &&'
| `-CompoundStmt 0x55778c9a3ed8 <col:8>
`-CXXDestructorDecl 0x55778c9a4110 <col:8> col:8 implicit referenced ~in_addr 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.in_addr = type { i32 }
  NonVirtualBaseLLVMType:%struct.in_addr = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55778c8e5a00 <../dummy_inc/clicknet/ip.h:23:1, line:52:1> line:23:8 struct click_ip definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55778c8e5b18 <col:1, col:8> col:8 implicit struct click_ip
|-FieldDecl 0x55778c8e5c00 <line:28:5, col:22> col:14 referenced ip_hl 'unsigned int'
| `-ConstantExpr 0x55778c8e5be0 <col:22> 'int' Int: 4
|   `-IntegerLiteral 0x55778c8e5ba8 <col:22> 'int' 4
|-FieldDecl 0x55778c8e5ca8 <line:29:5, col:21> col:14 ip_v 'unsigned int'
| `-ConstantExpr 0x55778c8e5c88 <col:21> 'int' Int: 4
|   `-IntegerLiteral 0x55778c8e5c50 <col:21> 'int' 4
|-FieldDecl 0x55778c8e5d08 <line:33:5, col:13> col:13 ip_tos 'uint8_t':'unsigned char'
|-FieldDecl 0x55778c8e5d68 <line:40:5, col:14> col:14 ip_len 'uint16_t':'unsigned short'
|-FieldDecl 0x55778c8e5dc8 <line:41:5, col:14> col:14 ip_id 'uint16_t':'unsigned short'
|-FieldDecl 0x55778c8e5e28 <line:42:5, col:14> col:14 ip_off 'uint16_t':'unsigned short'
|-FieldDecl 0x55778c8e5e88 <line:47:5, col:13> col:13 ip_ttl 'uint8_t':'unsigned char'
|-FieldDecl 0x55778c8e5ee8 <line:48:5, col:13> col:13 referenced ip_p 'uint8_t':'unsigned char'
|-FieldDecl 0x55778c8e5f48 <line:49:5, col:14> col:14 ip_sum 'uint16_t':'unsigned short'
|-FieldDecl 0x55778c8e5fb8 <line:50:5, col:20> col:20 referenced ip_src 'struct in_addr':'in_addr'
`-FieldDecl 0x55778c8e6028 <line:51:5, col:20> col:20 referenced ip_dst 'struct in_addr':'in_addr'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  NonVirtualBaseLLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55778c862660 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55778c864900 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55778c8649a0 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55778c864a00 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55778c864a60 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55778c864b10 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55778c864e20 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55778c864f38 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55778c864fe0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55778c865048 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55778c8650d8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55778c869310 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55778c869748 <col:12>
|-CXXConstructorDecl 0x55778c869418 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55778c869528 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55778c864fe0 'data' 'const char *'
| | `-ImplicitCastExpr 0x55778c86c400 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55778c86c3d0 <col:12> 'const char *const' lvalue .data 0x55778c864fe0
| |     `-DeclRefExpr 0x55778c86c3b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55778c869528 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55778c865048 'length' 'int'
| | `-ImplicitCastExpr 0x55778c86c490 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55778c86c460 <col:12> 'const int' lvalue .length 0x55778c865048
| |     `-DeclRefExpr 0x55778c86c440 <col:12> 'const String::rep_t' lvalue ParmVar 0x55778c869528 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55778c8650d8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55778c86c520 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55778c86c4f0 <col:12> 'String::memo_t *const' lvalue .memo 0x55778c8650d8
| |     `-DeclRefExpr 0x55778c86c4d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55778c869528 '' 'const String::rep_t &'
| `-CompoundStmt 0x55778c86c578 <col:12>
|-CXXConstructorDecl 0x55778c8695c8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55778c8695c8
| `-ParmVarDecl 0x55778c8696d8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55778c871b50 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55778c87d4b8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55778c87d5c8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55778c87dae0 <col:12>
|   |-BinaryOperator 0x55778c87d8f8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55778c87d8b0 <col:12> 'const char *' lvalue ->data 0x55778c864fe0
|   | | `-CXXThisExpr 0x55778c87d8a0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55778c87d8e0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55778c87d870 <col:12> 'const char *const' lvalue .data 0x55778c864fe0
|   |     `-DeclRefExpr 0x55778c87d850 <col:12> 'const String::rep_t' lvalue ParmVar 0x55778c87d5c8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55778c87d9c0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55778c87d978 <col:12> 'int' lvalue ->length 0x55778c865048
|   | | `-CXXThisExpr 0x55778c87d968 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55778c87d9a8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55778c87d938 <col:12> 'const int' lvalue .length 0x55778c865048
|   |     `-DeclRefExpr 0x55778c87d918 <col:12> 'const String::rep_t' lvalue ParmVar 0x55778c87d5c8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55778c87da88 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55778c87da40 <col:12> 'String::memo_t *' lvalue ->memo 0x55778c8650d8
|   | | `-CXXThisExpr 0x55778c87da30 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55778c87da70 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55778c87da00 <col:12> 'String::memo_t *const' lvalue .memo 0x55778c8650d8
|   |     `-DeclRefExpr 0x55778c87d9e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55778c87d5c8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55778c87dad0 <col:12>
|     `-UnaryOperator 0x55778c87dab8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55778c87daa8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55778c87d638 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55778c87d638
  `-ParmVarDecl 0x55778c87d748 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55778c858db0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55778c858ec8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55778c858f58 <col:16, col:22> col:16 public
|-TypedefDecl 0x55778c858f98 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55778c620fd0 'const char *'
|   `-QualType 0x55778c620521 'const char' const
|     `-BuiltinType 0x55778c620520 'char'
|-TypedefDecl 0x55778c859020 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55778c858ff0 'String::const_iterator' sugar
|   |-Typedef 0x55778c858f98 'const_iterator'
|   `-PointerType 0x55778c620fd0 'const char *'
|     `-QualType 0x55778c620521 'const char' const
|       `-BuiltinType 0x55778c620520 'char'
|-TypedefDecl 0x55778c8591c0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55778c859130 'int (String::*)() const'
|   |-RecordType 0x55778c858e40 'String'
|   | `-CXXRecord 0x55778c858db0 'String'
|   `-ParenType 0x55778c8590d0 'int () const' sugar
|     `-FunctionProtoType 0x55778c8590a0 'int () const' const cdecl
|       `-BuiltinType 0x55778c620580 'int'
|-TypedefDecl 0x55778c859228 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55778c773f20 'int64_t' sugar
|   |-Typedef 0x55778c689390 'int64_t'
|   `-TypedefType 0x55778c662630 '__int64_t' sugar
|     |-Typedef 0x55778c662208 '__int64_t'
|     `-BuiltinType 0x55778c6205a0 'long'
|-TypedefDecl 0x55778c859290 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55778c773e40 'uint64_t' sugar
|   |-Typedef 0x55778c689530 'uint64_t'
|   `-TypedefType 0x55778c6626c0 '__uint64_t' sugar
|     |-Typedef 0x55778c662278 '__uint64_t'
|     `-BuiltinType 0x55778c620640 'unsigned long'
|-TypedefDecl 0x55778c859320 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55778c8592f0 'String::intmax_t' sugar
|   |-Typedef 0x55778c859228 'intmax_t'
|   `-TypedefType 0x55778c773f20 'int64_t' sugar
|     |-Typedef 0x55778c689390 'int64_t'
|     `-TypedefType 0x55778c662630 '__int64_t' sugar
|       |-Typedef 0x55778c662208 '__int64_t'
|       `-BuiltinType 0x55778c6205a0 'long'
|-TypedefDecl 0x55778c8593b0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55778c859380 'String::uintmax_t' sugar
|   |-Typedef 0x55778c859290 'uintmax_t'
|   `-TypedefType 0x55778c773e40 'uint64_t' sugar
|     |-Typedef 0x55778c689530 'uint64_t'
|     `-TypedefType 0x55778c6626c0 '__uint64_t' sugar
|       |-Typedef 0x55778c662278 '__uint64_t'
|       `-BuiltinType 0x55778c620640 'unsigned long'
|-CXXConstructorDecl 0x55778c859470 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55778c859618 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55778c859558 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55778c8597c8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55778c859708 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55778c859920 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55778c859890 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55778c859ba0 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55778c8599e8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55778c859a68 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55778c859df8 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55778c859ca0 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55778c859d20 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55778c85a018 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55778c859ec8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55778c859f48 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55778c85a238 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55778c85a0e8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55778c85a168 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55778c85a3c8 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x55778c85a300 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55778c85a548 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55778c85a488 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55778c85a6d8 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55778c85a610 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55778c85a830 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55778c85a7a0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55778c85a9b8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55778c85a8f8 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55778c85ab48 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55778c85aa80 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55778c85acd8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55778c85ac10 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55778c85ae68 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55778c85ada0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55778c85aff8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55778c85af30 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55778c85b188 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55778c85b0c0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55778c85b280 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55778c85b3a8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55778c85b528 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55778c85b460 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55778c85b678 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55778c85b5e8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55778c85b720 <col:63> "" ""
|-CXXMethodDecl 0x55778c85b868 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55778c85b7a8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55778c85ba78 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55778c85b928 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55778c85b9a8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55778c85c118 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55778c85bfc0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55778c85c040 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55778c85c3f8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55778c85c1d8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55778c85c258 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55778c868de0 <col:55> 'int' 10
| `-ParmVarDecl 0x55778c85c2d0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55778c868e00 <col:76> 'bool' true
|-CXXMethodDecl 0x55778c85c6d8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55778c85c4c0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55778c85c540 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55778c868e10 <col:56> 'int' 10
| `-ParmVarDecl 0x55778c85c5b8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55778c868e30 <col:77> 'bool' true
|-CXXMethodDecl 0x55778c85c7e0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55778c85c8a8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55778c85c970 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55778c85ca10 <col:20>
| `-OptimizeNoneAttr 0x55778c85ca68 <col:30>
|-CXXConversionDecl 0x55778c85cb58 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55778c85cc28 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55778c85cce8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55778c85cdd8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55778c85ce98 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55778c85d018 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55778c85cf50 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55778c85d168 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55778c85d0d8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55778c85d258 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55778c85d318 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55778c85d568 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55778c85d3d0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55778c85d450 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55778c85d7c8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55778c85d630 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55778c85d6b0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55778c85d898 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55778c85daa8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55778c85d950 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55778c85d9d0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55778c85dcc8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55778c85db70 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55778c85dbf0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55778c85de58 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55778c85dd90 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55778c85e4a0 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55778c85e618 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55778c85e550 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55778c85e828 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55778c85e6d8 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55778c85e758 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55778c85ea40 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55778c85e8e8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55778c85e960 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55778c85ebd0 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55778c85eb00 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55778c85edf0 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55778c85ec90 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55778c85ed10 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55778c85ef40 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55778c85eeb0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55778c85f118 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55778c85f000 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55778c85f080 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55778c85f268 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55778c85f1d8 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55778c85f480 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55778c85f320 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55778c85f3a0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55778c868e40 <col:39> 'int' 0
|-CXXMethodDecl 0x55778c85f6a0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55778c85f540 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55778c85f5c0 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55778c868e60 <col:48> 'int' 0
|-CXXMethodDecl 0x55778c85f880 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55778c85f760 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55778c85f7e0 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55778c868e80 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55778c85f950 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55778c85fa10 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55778c85fad0 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55778c85fb90 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55778c85fc50 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55778c85fdf8 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55778c85fd00 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55778c85ff78 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55778c85feb0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55778c8600f8 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55778c860038 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55778c860278 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55778c8601b0 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55778c8603c0 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55778c860330 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55778c860870 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55778c8607e0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55778c860a48 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55778c860930 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55778c8609b0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55778c860c28 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55778c860b10 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55778c860b90 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55778c860d78 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55778c860ce8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55778c860f88 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55778c860e38 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55778c860eb8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55778c8610e8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55778c861050 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55778c861240 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55778c8611a8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55778c8612e8 <col:57> "" ""
|-CXXMethodDecl 0x55778c8613f8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55778c861368 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55778c861548 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55778c8614b8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55778c8616c8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55778c861600 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55778c861790 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55778c861850 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55778c861910 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55778c8619b0 <col:49> "" ""
|-CXXMethodDecl 0x55778c861a40 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55778c861b00 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55778c861bf0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55778c861cb8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55778c861d78 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55778c861e38 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55778c861f30 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55778c861ff8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55778c8620c0 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55778c862298 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55778c862178 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55778c8621f8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55778c8624c0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55778c862360 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55778c8623e0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55778c8625d0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55778c862638 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55778c862660 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55778c864900 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55778c8649a0 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55778c864a00 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55778c864a60 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55778c864b10 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55778c864b78 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55778c864db8 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55778c864e08 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55778c864d98 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55778c864ca8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55778c864c50 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55778c864c90 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55778c864c70 <col:32> 'int' 8
|-CXXRecordDecl 0x55778c864e20 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55778c864f38 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55778c864fe0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55778c865048 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55778c8650d8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55778c869310 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55778c869748 <col:12>
| |-CXXConstructorDecl 0x55778c869418 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55778c869528 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55778c864fe0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55778c86c400 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55778c86c3d0 <col:12> 'const char *const' lvalue .data 0x55778c864fe0
| | |     `-DeclRefExpr 0x55778c86c3b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55778c869528 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55778c865048 'length' 'int'
| | | `-ImplicitCastExpr 0x55778c86c490 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55778c86c460 <col:12> 'const int' lvalue .length 0x55778c865048
| | |     `-DeclRefExpr 0x55778c86c440 <col:12> 'const String::rep_t' lvalue ParmVar 0x55778c869528 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55778c8650d8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55778c86c520 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55778c86c4f0 <col:12> 'String::memo_t *const' lvalue .memo 0x55778c8650d8
| | |     `-DeclRefExpr 0x55778c86c4d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55778c869528 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55778c86c578 <col:12>
| |-CXXConstructorDecl 0x55778c8695c8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55778c8695c8
| | `-ParmVarDecl 0x55778c8696d8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55778c871b50 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55778c87d4b8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55778c87d5c8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55778c87dae0 <col:12>
| |   |-BinaryOperator 0x55778c87d8f8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55778c87d8b0 <col:12> 'const char *' lvalue ->data 0x55778c864fe0
| |   | | `-CXXThisExpr 0x55778c87d8a0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55778c87d8e0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55778c87d870 <col:12> 'const char *const' lvalue .data 0x55778c864fe0
| |   |     `-DeclRefExpr 0x55778c87d850 <col:12> 'const String::rep_t' lvalue ParmVar 0x55778c87d5c8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55778c87d9c0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55778c87d978 <col:12> 'int' lvalue ->length 0x55778c865048
| |   | | `-CXXThisExpr 0x55778c87d968 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55778c87d9a8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55778c87d938 <col:12> 'const int' lvalue .length 0x55778c865048
| |   |     `-DeclRefExpr 0x55778c87d918 <col:12> 'const String::rep_t' lvalue ParmVar 0x55778c87d5c8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55778c87da88 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55778c87da40 <col:12> 'String::memo_t *' lvalue ->memo 0x55778c8650d8
| |   | | `-CXXThisExpr 0x55778c87da30 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55778c87da70 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55778c87da00 <col:12> 'String::memo_t *const' lvalue .memo 0x55778c8650d8
| |   |     `-DeclRefExpr 0x55778c87d9e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55778c87d5c8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55778c87dad0 <col:12>
| |     `-UnaryOperator 0x55778c87dab8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55778c87daa8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55778c87d638 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55778c87d638
|   `-ParmVarDecl 0x55778c87d748 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55778c865150 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55778c865398 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55778c8651b8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55778c865238 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55778c8652b0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55778c8692d0 <col:79, line:261:5>
|   |-BinaryOperator 0x55778c868f48 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55778c868ee0 <col:2, col:5> 'const char *' lvalue .data 0x55778c864fe0
|   | | `-MemberExpr 0x55778c868eb0 <col:2> 'String::rep_t' lvalue ->_r 0x55778c865150
|   | |   `-CXXThisExpr 0x55778c868ea0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55778c868f30 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55778c868f10 <col:12> 'const char *' lvalue ParmVar 0x55778c8651b8 'data' 'const char *'
|   |-BinaryOperator 0x55778c869010 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55778c868fa8 <col:2, col:5> 'int' lvalue .length 0x55778c865048
|   | | `-MemberExpr 0x55778c868f78 <col:2> 'String::rep_t' lvalue ->_r 0x55778c865150
|   | |   `-CXXThisExpr 0x55778c868f68 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55778c868ff8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55778c868fd8 <col:14> 'int' lvalue ParmVar 0x55778c865238 'length' 'int'
|   `-IfStmt 0x55778c8692b8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55778c869130 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55778c869118 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55778c8690f8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55778c8690d8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55778c869070 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55778c8650d8
|     |       | `-MemberExpr 0x55778c869040 <col:7> 'String::rep_t' lvalue ->_r 0x55778c865150
|     |       |   `-CXXThisExpr 0x55778c869030 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55778c8690c0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55778c8690a0 <col:17> 'String::memo_t *' lvalue ParmVar 0x55778c8652b0 'memo' 'String::memo_t *'
|     `-CallExpr 0x55778c869290 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55778c869278 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55778c869180 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55778c83fa08 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55778c8691e8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55778c8649a0
|         `-ImplicitCastExpr 0x55778c8691d0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55778c8691b0 <col:27> 'String::memo_t *' lvalue ParmVar 0x55778c8652b0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55778c865648 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55778c865468 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55778c8654e8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55778c865560 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55778c865150 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55778c869758 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55778c8698e8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55778c869850 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55778c8697c0 <col:2> '<bound member function type>' ->assign_memo 0x55778c865398
|     | `-ImplicitCastExpr 0x55778c869888 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55778c8697b0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55778c8698a0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55778c8697f0 <col:14> 'const char *' lvalue ParmVar 0x55778c865468 'data' 'const char *'
|     |-ImplicitCastExpr 0x55778c8698b8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55778c869810 <col:20> 'int' lvalue ParmVar 0x55778c8654e8 'length' 'int'
|     `-ImplicitCastExpr 0x55778c8698d0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55778c869830 <col:28> 'String::memo_t *' lvalue ParmVar 0x55778c865560 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55778c8657d8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55778c865718 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55778c869b40 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55778c869ac0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55778c869910 <col:2> '<bound member function type>' ->assign_memo 0x55778c865398
|     | `-CXXThisExpr 0x55778c869900 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55778c869af8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55778c869990 <col:14, col:19> 'const char *' lvalue .data 0x55778c864fe0
|     |   `-MemberExpr 0x55778c869960 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55778c865150
|     |     `-DeclRefExpr 0x55778c869940 <col:14> 'const String' lvalue ParmVar 0x55778c865718 'x' 'const String &'
|     |-ImplicitCastExpr 0x55778c869b10 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55778c869a10 <col:25, col:30> 'int' lvalue .length 0x55778c865048
|     |   `-MemberExpr 0x55778c8699e0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55778c865150
|     |     `-DeclRefExpr 0x55778c8699c0 <col:25> 'const String' lvalue ParmVar 0x55778c865718 'x' 'const String &'
|     `-ImplicitCastExpr 0x55778c869b28 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55778c869a90 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55778c8650d8
|         `-MemberExpr 0x55778c869a60 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55778c865150
|           `-DeclRefExpr 0x55778c869a40 <col:38> 'const String' lvalue ParmVar 0x55778c865718 'x' 'const String &'
|-CXXMethodDecl 0x55778c8658a0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55778c86ac08 <col:31, line:278:5>
|   `-IfStmt 0x55778c86abf0 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55778c869be0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55778c869bc8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55778c869b98 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55778c8650d8
|     |     `-MemberExpr 0x55778c869b68 <col:6> 'String::rep_t' lvalue ->_r 0x55778c865150
|     |       `-CXXThisExpr 0x55778c869b58 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55778c86abc8 <col:15, line:277:2>
|       |-ParenExpr 0x55778c86a180 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55778c86a150 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55778c869cf0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55778c869cd8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55778c869cc0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55778c869c80 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55778c8649a0
|       |   |       `-ImplicitCastExpr 0x55778c869c68 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55778c869c38 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55778c8650d8
|       |   |           `-MemberExpr 0x55778c869c08 <col:27> 'String::rep_t' lvalue ->_r 0x55778c865150
|       |   |             `-CXXThisExpr 0x55778c869bf8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55778c869d50 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55778c869d30 <col:54> 'int' 0
|       |   `-CallExpr 0x55778c86a0b0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55778c86a098 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55778c86a020 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55778c6ba730 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55778c86a0f0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55778c869e38 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55778c86a108 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55778c869ee8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55778c86a120 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55778c869f20 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55778c86a138 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55778c86a008 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55778c869ff0 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55778c869fb8 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55778c86aae8 <line:274:6, line:275:22>
|       | |-CallExpr 0x55778c86a390 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55778c86a378 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55778c86a2f0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55778c844da0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55778c86a2c0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55778c8649a0
|       | |   `-ImplicitCastExpr 0x55778c86a2a8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55778c86a278 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55778c8650d8
|       | |       `-MemberExpr 0x55778c86a248 <col:40> 'String::rep_t' lvalue ->_r 0x55778c865150
|       | |         `-CXXThisExpr 0x55778c86a238 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55778c86a490 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55778c86a478 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55778c86a3b8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55778c866578 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55778c86aad0 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55778c86a418 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55778c8650d8
|       |       `-MemberExpr 0x55778c86a3e8 <col:15> 'String::rep_t' lvalue ->_r 0x55778c865150
|       |         `-CXXThisExpr 0x55778c86a3d8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55778c86aba8 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55778c86ab40 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55778c8650d8
|         | `-MemberExpr 0x55778c86ab10 <col:6> 'String::rep_t' lvalue ->_r 0x55778c865150
|         |   `-CXXThisExpr 0x55778c86ab00 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55778c86ab90 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55778c86ab70 <col:16> 'int' 0
|-CXXMethodDecl 0x55778c865b38 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55778c865958 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55778c8659d8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55778c865a50 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55778c865c10 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55778c865e60 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55778c865cc8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55778c865d48 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55778c865dc0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55778c866048 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55778c865f30 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55778c865fb0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55778c866148 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55778c86ad00 <col:41, line:286:5>
|   `-ReturnStmt 0x55778c86acf0 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55778c86acc0 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55778c86ac88 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55778c86ac70 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55778c86ac50 <col:46> 'int' 1
|-CXXMethodDecl 0x55778c8663e8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55778c866200 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55778c866280 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55778c866300 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55778c866578 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55778c8664b0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55778c866648 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55778c866818 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55778c866700 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55778c866780 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55778c8684c0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55778c868608 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55778c868748 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55778c8687c0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55778c868838 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55778c8688a0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55778c8689a0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55778c8689f0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55778c868980 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55778c868960 <col:22> 'int' 14
|-CXXMethodDecl 0x55778c868c08 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55778c868a20 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55778c868aa0 <col:38> col:41 'int'
| `-ParmVarDecl 0x55778c868b20 <col:43> col:46 'int'
|-FriendDecl 0x55778c868d10 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55778c868da0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>
