
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5653e37459c8 prev 0x5653e373d218 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5653e3745ac0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x5653e3745b50 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x5653e3745bc8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x5653e3745c88 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x5653e3745d50 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x5653e3745ec8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x5653e3745e00 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x5653e3745f70 <col:24>
| `-OptimizeNoneAttr 0x5653e3745fc8 <col:34>
|-CXXMethodDecl 0x5653e3746010 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x5653e37462c8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x5653e37460c0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5653e3746138 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x5653e37461b8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x5653e3746380 <line:229:7, col:14> col:7 private
|-FieldDecl 0x5653e37463b8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x5653e3746420 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x5653e37464a8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x5653e37467c8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x5653e3746560 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5653e37465d8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x5653e3746650 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x5653e37466d0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x5653e37468e0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x5653e374d1d8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5653e374d1d8
| `-ParmVarDecl 0x5653e374d2e8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x5653e374d388 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5653e374d388
| `-ParmVarDecl 0x5653e374d498 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x5653e375e3b8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5653e3738c60 prev 0x5653e3738a00 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5653e3738d58 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x5653e3738de8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x5653e3738e48 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x5653e3738f38 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x5653e3739038 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x5653e3739208 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x5653e37390b8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x5653e3739130 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x5653e3739398 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x5653e37392d0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x5653e3739440 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x5653e3739578 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x5653e37394b0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x5653e3739718 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x5653e3739658 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x5653e37398b8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x5653e37397f8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x5653e3739960 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x5653e3739a60 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x5653e3739b40 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e3739a40 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x5653e3739a20 <col:26> 'int' 1
| `-EnumConstantDecl 0x5653e3739af0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x5653e3739b58 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5653e3739ad0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x5653e3739ab0 <col:44> 'int' 2
|-CXXMethodDecl 0x5653e3739ca0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x5653e3739b88 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x5653e3739c08 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x5653e3739df8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x5653e3739d68 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x5653e373a008 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x5653e3739eb8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x5653e3739f30 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x5653e373a0b8 <col:20>
| `-OptimizeNoneAttr 0x5653e373a110 <col:30>
|-CXXMethodDecl 0x5653e373a218 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x5653e373a150 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x5653e373a2c0 <col:20>
| `-OptimizeNoneAttr 0x5653e373a318 <col:30>
|-CXXMethodDecl 0x5653e373a368 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x5653e373a430 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x5653e373a518 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x5653e373a5a0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x5653e373a628 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x5653e373a6b0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x5653e373a738 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x5653e373a7c8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x5653e373a888 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x5653e373a910 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x5653e373a998 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x5653e373aa20 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x5653e373aaa8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x5653e373ab30 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x5653e373abc0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x5653e373ac80 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x5653e373ad10 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x5653e373ae60 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x5653e373adc8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x5653e373aff0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x5653e373af20 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x5653e373b290 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x5653e373b0a8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x5653e373b128 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x5653e373b1a8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x5653e373b348 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x5653e373b450 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5653e373b6e0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e373b430 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x5653e373b410 <col:33> 'int' 0
| |-EnumConstantDecl 0x5653e373b4e0 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5653e373b6f8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e373b4c0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x5653e373b4a0 <col:32> 'int' 20
| |-EnumConstantDecl 0x5653e373b570 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5653e373b710 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e373b550 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x5653e373b530 <col:38> 'int' 90
| |-EnumConstantDecl 0x5653e373b600 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5653e373b728 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e373b5e0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x5653e373b5c0 <col:35> 'int' 100
| `-EnumConstantDecl 0x5653e373b690 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x5653e373b740 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5653e373b670 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x5653e373b650 <col:32> 'int' 2000
|-CXXMethodDecl 0x5653e373b780 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x5653e373ba90 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5653e373b900 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x5653e373b978 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5653e373bb60 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x5653e373bce0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x5653e373bc10 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5653e373bee8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5653e373bd98 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x5653e373be10 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5653e373bfe8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x5653e373c088 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x5653e373c150 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x5653e373c1e0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x5653e373c410 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e373c1c0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x5653e373c1a0 <col:36> 'int' EnumConstant 0x5653e373c150 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x5653e373c230 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5653e373c280 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5653e373c2d0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5653e373c320 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5653e373c370 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x5653e373c3c0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x5653e373c4f8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x5653e373c438 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x5653e373c5c0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x5653e373c680 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x5653e373c740 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x5653e373c800 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x5653e373c8e8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x5653e373c9b0 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x5653e373cb30 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x5653e373ca60 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x5653e373cc58 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x5653e373ce58 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x5653e373cd08 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x5653e373cd88 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x5653e37496a8 <col:54, line:127:5>
|   |-ParenExpr 0x5653e3749558 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x5653e3749528 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x5653e3749210 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5653e37491e8 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x5653e37491d0 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x5653e37491b8 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x5653e3749188 <col:31> 'Router *' lvalue ->_router 0x5653e37470a0
|   |   |         `-CXXThisExpr 0x5653e3749178 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5653e3749270 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5653e3749250 <col:48> 'int' 0
|   |   `-CallExpr 0x5653e3749488 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x5653e3749470 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5653e3749450 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5653e31c0f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5653e37494c8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e37492e0 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x5653e37494e0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e3749300 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x5653e37494f8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5653e3749338 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x5653e3749510 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5653e3749438 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5653e3749420 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5653e37493d8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x5653e37495f0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x5653e3749588 <col:9> 'Router *' lvalue ->_router 0x5653e37470a0
|   | | `-CXXThisExpr 0x5653e3749578 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x5653e37495d8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5653e37495b8 <col:19> 'Router *' lvalue ParmVar 0x5653e373cd08 'r' 'Router *'
|   `-BinaryOperator 0x5653e3749688 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x5653e3749620 <col:9> 'int' lvalue ->_eindex 0x5653e3747108
|     | `-CXXThisExpr 0x5653e3749610 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x5653e3749670 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x5653e3749650 <col:19> 'int' lvalue ParmVar 0x5653e373cd88 'eindex' 'int'
|-CXXMethodDecl 0x5653e373cfe0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x5653e373cf18 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x5653e373d0b0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x5653e373d178 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x5653e373d218 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x5653e373d468 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x5653e373d2e0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x5653e373d360 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x5653e373d518 <col:20>
| `-OptimizeNoneAttr 0x5653e373d570 <col:30>
|-CXXMethodDecl 0x5653e373d678 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5653e373d5b0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x5653e373d720 <col:20>
| `-OptimizeNoneAttr 0x5653e373d778 <col:30>
|-CXXMethodDecl 0x5653e373d848 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5653e373d7b8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x5653e373d8f0 <col:20>
| `-OptimizeNoneAttr 0x5653e373d948 <col:30>
|-CXXMethodDecl 0x5653e373dad8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x5653e373d980 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x5653e373da00 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x5653e373dc68 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5653e373dba0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5653e373ddb8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5653e373dd28 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5653e373df08 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5653e373de78 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5653e373e058 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5653e373dfc8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5653e373e318 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x5653e373e110 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x5653e373e190 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x5653e373e238 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x5653e373e3f0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x5653e373e4b0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x5653e373e780 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5653e373e630 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x5653e373e6a8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x5653e373e8a8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x5653e373ea80 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x5653e373e960 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x5653e373e9e0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x5653e373ec68 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x5653e373eb48 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x5653e373ebc8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x5653e373f028 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5653e373ed70 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5653e373ede8 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5653e373ee68 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5653e3748c88 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5653e3748c68 <col:106> 'int' 0
| `-ParmVarDecl 0x5653e373eee0 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5653e3748cc0 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5653e3748ca0 <col:126> 'int' 0
|-CXXMethodDecl 0x5653e373f3a8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5653e373f0f8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5653e373f170 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5653e373f1f0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x5653e373f268 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5653e3748cf8 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5653e3748cd8 <col:114> 'int' 0
|-CXXMethodDecl 0x5653e373f738 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5653e373f480 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x5653e373f4f8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5653e373f578 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x5653e3748d10 <col:96> 'int' 0
| `-ParmVarDecl 0x5653e373f5f0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5653e3748d50 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5653e3748d30 <col:116> 'int' 0
|-CXXMethodDecl 0x5653e373fab8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5653e373f808 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5653e373f880 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5653e373f900 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5653e3748d88 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5653e3748d68 <col:109> 'int' 0
| `-ParmVarDecl 0x5653e373f978 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5653e3748dc0 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5653e3748da0 <col:129> 'int' 0
|-CXXMethodDecl 0x5653e373fe38 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5653e373fb88 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5653e373fc00 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5653e373fc80 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x5653e373fcf8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5653e3748df8 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5653e3748dd8 <col:117> 'int' 0
|-CXXMethodDecl 0x5653e37401c8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5653e373ff10 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5653e373ff88 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5653e3740008 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x5653e3748e10 <col:99> 'int' 0
| `-ParmVarDecl 0x5653e3740080 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5653e3748e50 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5653e3748e30 <col:119> 'int' 0
|-CXXMethodDecl 0x5653e37405e8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x5653e3740298 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5653e3740318 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5653e3740390 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5653e3740410 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5653e3748e88 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5653e3748e68 <col:108> 'int' 0
| `-ParmVarDecl 0x5653e3740490 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x5653e3748ec0 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x5653e3748ea0 <col:141> 'int' 0
|-CXXMethodDecl 0x5653e3740a08 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5653e37406c0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5653e3740740 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5653e37407b8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5653e3740838 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x5653e37408b8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5653e3748ed8 <col:121> 'int' 0
|-CXXMethodDecl 0x5653e3740e38 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5653e3740ae8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x5653e3740b68 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x5653e3740be0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5653e3740c60 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x5653e3748ef8 <col:98> 'int' 0
| `-ParmVarDecl 0x5653e3740ce0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5653e3748f18 <col:123> 'int' 0
|-CXXMethodDecl 0x5653e3741100 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x5653e3740f10 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5653e3740f90 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x5653e3741010 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x5653e3748f38 <col:80> 'int' 0
|-EnumDecl 0x5653e37411b8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x5653e37412c0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5653e3741550 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e37412a0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x5653e3741280 <col:42> 'int' 1
| |-EnumConstantDecl 0x5653e3741350 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5653e3741568 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e3741330 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x5653e3741310 <col:40> 'int' 2
| |-EnumConstantDecl 0x5653e37413e0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5653e3741580 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e37413c0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x5653e37413a0 <col:44> 'int' 4
| |-EnumConstantDecl 0x5653e3741470 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5653e3741598 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e3741450 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x5653e3741430 <col:36> 'int' 7
| `-EnumConstantDecl 0x5653e3741500 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x5653e37415b0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5653e37414e0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x5653e37414c0 <col:34> 'int' 6
|-CXXMethodDecl 0x5653e3741868 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x5653e37415d8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x5653e3741678 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x5653e37416f8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x5653e3741770 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x5653e3748ff0 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5653e3748fd8 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x5653e3748fc0 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5653e3748fa0 <col:98, col:105> 'String' (CXXTemporary 0x5653e3748fa0)
|           `-CXXTemporaryObjectExpr 0x5653e3748f68 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x5653e3741b08 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x5653e3741938 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5653e37419b0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x5653e3741a28 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5653e37490a0 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5653e3749088 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5653e3749070 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5653e3749050 <col:94, col:101> 'String' (CXXTemporary 0x5653e3749050)
| |         `-CXXTemporaryObjectExpr 0x5653e3749018 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x5653e3749890 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x5653e3749808 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x5653e37497d8 <col:9> '<bound member function type>' ->add_task_handlers 0x5653e3741868
|     | `-CXXThisExpr 0x5653e37497c8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5653e3749848 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5653e3749748 <col:27> 'Task *' lvalue ParmVar 0x5653e3741938 'task' 'Task *'
|     |-ImplicitCastExpr 0x5653e3749860 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x5653e3749768 <col:33> 'NotifierSignal *' lvalue ParmVar 0x5653e37419b0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x5653e3749878 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5653e3749788 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5653e3741500 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5653e37497a8 <col:62> 'const String' lvalue ParmVar 0x5653e3741a28 'prefix' 'const String &'
|-CXXMethodDecl 0x5653e3741d18 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x5653e3741bd0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5653e3741c48 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5653e3749150 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5653e3749138 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5653e3749120 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5653e3749100 <col:70, col:77> 'String' (CXXTemporary 0x5653e3749100)
| |         `-CXXTemporaryObjectExpr 0x5653e37490c8 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x5653e3749a68 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x5653e37499e0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x5653e37499b0 <col:9> '<bound member function type>' ->add_task_handlers 0x5653e3741868
|     | `-CXXThisExpr 0x5653e37499a0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5653e3749a20 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5653e3749920 <col:27> 'Task *' lvalue ParmVar 0x5653e3741bd0 'task' 'Task *'
|     |-ImplicitCastExpr 0x5653e3749a38 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x5653e3749940 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x5653e3749a50 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5653e3749960 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5653e3741500 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5653e3749980 <col:57> 'const String' lvalue ParmVar 0x5653e3741c48 'prefix' 'const String &'
|-CXXMethodDecl 0x5653e3741ff8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x5653e3741de0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5653e3741e60 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5653e3741ed8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x5653e37422a8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x5653e37420c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5653e3742148 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5653e37421c8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x5653e3742598 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5653e3742378 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5653e37423f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5653e3742470 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x5653e3742848 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x5653e3742668 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5653e37426e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5653e3742768 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x5653e3742af8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x5653e3742918 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5653e3742998 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5653e3742a18 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x5653e3742da8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x5653e3742bc8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5653e3742c48 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5653e3742cc0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x5653e3743058 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x5653e3742e78 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5653e3742ef8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5653e3742f78 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x5653e3743308 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x5653e3743128 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5653e37431a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5653e3743228 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x5653e37435b8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x5653e37433d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5653e3743458 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5653e37434d8 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x5653e3743868 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x5653e3743688 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5653e3743708 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5653e3743788 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x5653e3743ad0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5653e3743938 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5653e37439b8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5653e3743a30 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x5653e3743d78 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x5653e3743ba0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5653e3743c20 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5653e3743c98 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x5653e3744028 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x5653e3743e48 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5653e3743ec8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5653e3743f48 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x5653e37442d8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x5653e37440f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5653e3744178 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5653e37441f0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x5653e3744588 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x5653e37443a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5653e3744428 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5653e37444a0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x5653e3744838 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x5653e3744658 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5653e37446d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5653e3744750 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x5653e3744b68 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x5653e3744908 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5653e3744988 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x5653e3744a00 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x5653e3744a78 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5653e3749168 <col:93> 'bool' false
|-CXXMethodDecl 0x5653e3744d50 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5653e3744c38 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x5653e3744cb8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x5653e3744f28 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5653e3744e10 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x5653e3744e90 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x5653e3745208 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5653e3744fe8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x5653e3745060 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x5653e37450e0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x5653e3745158 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x5653e37454f8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5653e37452d8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x5653e3745350 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x5653e37453d0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x5653e3745448 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x5653e3745730 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x5653e37455d0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x5653e3745650 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x5653e3745918 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x5653e37457f8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x5653e3745878 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x5653e37459c8 prev 0x5653e373d218 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5653e3745ac0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x5653e3745b50 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x5653e3745bc8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x5653e3745c88 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x5653e3745d50 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x5653e3745ec8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x5653e3745e00 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x5653e3745f70 <col:24>
| | `-OptimizeNoneAttr 0x5653e3745fc8 <col:34>
| |-CXXMethodDecl 0x5653e3746010 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x5653e37462c8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x5653e37460c0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5653e3746138 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x5653e37461b8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x5653e3746380 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x5653e37463b8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x5653e3746420 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x5653e37464a8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x5653e37467c8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x5653e3746560 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5653e37465d8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x5653e3746650 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x5653e37466d0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x5653e37468e0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x5653e374d1d8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5653e374d1d8
| | `-ParmVarDecl 0x5653e374d2e8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x5653e374d388 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5653e374d388
| | `-ParmVarDecl 0x5653e374d498 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x5653e375e3b8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5653e3746958 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x5653e37469f8 <col:38> "" ""
|-CXXMethodDecl 0x5653e3746a88 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x5653e3746b28 <col:44> "" ""
|-AccessSpecDecl 0x5653e3746b98 <line:260:3, col:10> col:3 private
|-EnumDecl 0x5653e3746bc0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x5653e3746cc0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x5653e3746d10 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5653e3746ca0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x5653e3746c80 <col:27> 'int' 4
|-FieldDecl 0x5653e3746dd8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x5653e3746f88 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x5653e3747040 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x5653e37470a0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x5653e3747108 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x5653e3747258 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x5653e3747198 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x5653e3747408 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x5653e3747318 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x5653e37475e8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x5653e37474c8 <col:20> col:23 'int'
| `-ParmVarDecl 0x5653e3747548 <col:25> col:28 'int'
|-CXXMethodDecl 0x5653e3747890 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x5653e37476b0 <col:23> col:26 'int'
| |-ParmVarDecl 0x5653e3747730 <col:28> col:31 'int'
| `-ParmVarDecl 0x5653e37477a8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x5653e3747948 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x5653e3747a10 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x5653e3747a60 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x5653e3747ab0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x5653e3747c90 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x5653e3747b40 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x5653e3747bb8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5653e3747f38 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x5653e3747d58 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x5653e3747dd8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x5653e3747e50 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x5653e3748158 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x5653e3748008 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x5653e3748088 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x5653e3748490 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x5653e3748218 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x5653e3748298 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x5653e3748310 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x5653e3748390 <col:57> col:60 'int'
|-CXXMethodDecl 0x5653e3748678 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5653e3748560 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x5653e37485e0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x5653e37487c8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x5653e3748738 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x5653e3748b48 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x5653e3748888 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x5653e3748908 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x5653e3748980 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x5653e3748a00 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x5653e3748c28 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class CopyTCPSeq
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   _Bool _start
       112 |   unsigned int _seq
           | [sizeof=120, dsize=116, align=8,
           |  nvsize=116, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5653e375c948 <../elements/local/copytcpseq.hh:19:1, line:44:1> line:19:7 class CopyTCPSeq definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x5653e375caa8 <col:1, col:7> col:7 implicit referenced class CopyTCPSeq
|-AccessSpecDecl 0x5653e375cb38 <line:20:1, col:8> col:1 private
|-CXXMethodDecl 0x5653e375cdc0 <line:21:3, line:22:55> line:21:14 reset_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5653e375cb70 <line:22:6, col:19> col:20 'const String &'
| |-ParmVarDecl 0x5653e375cbe8 <col:22, col:30> col:31 'Element *'
| |-ParmVarDecl 0x5653e375cc68 <col:33, col:38> col:39 'void *'
| `-ParmVarDecl 0x5653e375cce0 <col:41, col:54> col:55 'ErrorHandler *'
|-CXXMethodDecl 0x5653e375cf20 <line:24:3, col:24> col:8 monitor 'void (Packet *)'
| `-ParmVarDecl 0x5653e375ce90 <col:16, col:23> col:24 'Packet *'
|-CXXMethodDecl 0x5653e375d068 <line:25:3, col:23> col:11 set 'Packet *(Packet *)'
| `-ParmVarDecl 0x5653e375cfd8 <col:15, col:22> col:23 'Packet *'
|-FieldDecl 0x5653e375d120 <line:27:3, col:8> col:8 _start 'bool'
|-FieldDecl 0x5653e375d188 <line:28:3, col:12> col:12 _seq 'unsigned int'
|-AccessSpecDecl 0x5653e375d1d8 <line:30:1, col:7> col:1 public
|-CXXConstructorDecl 0x5653e375d238 <line:31:3, col:14> col:3 CopyTCPSeq 'void ()'
|-CXXDestructorDecl 0x5653e375d328 <line:32:3, col:15> col:3 ~CopyTCPSeq 'void ()' noexcept-unevaluated 0x5653e375d328
| `-Overrides: [ 0x5653e3738f38 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x5653e375d460 <line:34:3, col:57> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x5653e373a368 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x5653e375e198 <col:34, col:57>
|   `-ReturnStmt 0x5653e375e188 <col:36, col:43>
|     `-ImplicitCastExpr 0x5653e375e170 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5653e375e148 <col:43> 'const char [11]' lvalue "CopyTCPSeq"
|-CXXMethodDecl 0x5653e375d528 <line:35:3, col:50> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x5653e373a430 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x5653e375e1f8 <col:34, col:50>
|   `-ReturnStmt 0x5653e375e1e8 <col:36, col:43>
|     `-ImplicitCastExpr 0x5653e375e1d0 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5653e375e1b0 <col:43> 'const char [4]' lvalue "2/2"
|-CXXMethodDecl 0x5653e375d670 <line:37:3, col:32> col:7 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x5653e373bce0 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x5653e375d5d8 <col:18, col:31> col:32 'ErrorHandler *'
|-CXXMethodDecl 0x5653e375d950 <line:38:3, col:57> col:7 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x5653e373ba90 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x5653e375d800 <col:17, col:33> col:33 conf 'Vector<String> &'
| `-ParmVarDecl 0x5653e375d878 <col:39, col:53> col:53 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5653e375db28 <line:40:3, col:26> col:8 push 'void (int, Packet *)'
| |-Overrides: [ 0x5653e3739208 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x5653e375da18 <col:13> col:16 'int'
| `-ParmVarDecl 0x5653e375da90 <col:18, col:25> col:26 'Packet *'
|-CXXMethodDecl 0x5653e375dc80 <line:41:3, col:19> col:11 pull 'Packet *(int)'
| |-Overrides: [ 0x5653e3739398 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x5653e375dbf0 <col:16> col:19 'int'
|-CXXMethodDecl 0x5653e375dd48 <line:42:3, col:21> col:8 add_handlers 'void ()'
| `-Overrides: [ 0x5653e373bb60 Element::add_handlers 'void ()' ]
|-CXXConstructorDecl 0x5653e375de18 <line:19:7> col:7 implicit CopyTCPSeq 'void (const CopyTCPSeq &)' inline default_delete noexcept-unevaluated 0x5653e375de18
| `-ParmVarDecl 0x5653e375df28 <col:7> col:7 'const CopyTCPSeq &'
`-CXXMethodDecl 0x5653e375dfc8 <col:7> col:7 implicit operator= 'CopyTCPSeq &(const CopyTCPSeq &)' inline default_delete noexcept-unevaluated 0x5653e375dfc8
  `-ParmVarDecl 0x5653e375e0d8 <col:7> col:7 'const CopyTCPSeq &'

Layout: <CGRecordLayout
  LLVMType:%class.CopyTCPSeq = type { %class.Element.base, i8, i32, [4 x i8] }
  NonVirtualBaseLLVMType:%class.CopyTCPSeq.base = type { %class.Element.base, i8, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5653e3459730 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5653e3459848 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x5653e34598e8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x5653e3459948 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x5653e34599a8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x5653e3459a58 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5653e3459d60 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5653e3459e78 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x5653e3459f20 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x5653e3459f88 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x5653e345a018 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x5653e345ff10 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5653e3460348 <col:12>
|-CXXConstructorDecl 0x5653e3460018 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5653e3460128 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5653e3459f20 'data' 'const char *'
| | `-ImplicitCastExpr 0x5653e34628d0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x5653e34628a0 <col:12> 'const char *const' lvalue .data 0x5653e3459f20
| |     `-DeclRefExpr 0x5653e3462880 <col:12> 'const String::rep_t' lvalue ParmVar 0x5653e3460128 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5653e3459f88 'length' 'int'
| | `-ImplicitCastExpr 0x5653e3462960 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x5653e3462930 <col:12> 'const int' lvalue .length 0x5653e3459f88
| |     `-DeclRefExpr 0x5653e3462910 <col:12> 'const String::rep_t' lvalue ParmVar 0x5653e3460128 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5653e345a018 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x5653e34629f0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x5653e34629c0 <col:12> 'String::memo_t *const' lvalue .memo 0x5653e345a018
| |     `-DeclRefExpr 0x5653e34629a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5653e3460128 '' 'const String::rep_t &'
| `-CompoundStmt 0x5653e3462a48 <col:12>
|-CXXConstructorDecl 0x5653e34601c8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5653e34601c8
| `-ParmVarDecl 0x5653e34602d8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x5653e34657c0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5653e34711f8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5653e3471308 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x5653e3471820 <col:12>
|   |-BinaryOperator 0x5653e3471638 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5653e34715f0 <col:12> 'const char *' lvalue ->data 0x5653e3459f20
|   | | `-CXXThisExpr 0x5653e34715e0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5653e3471620 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x5653e34715b0 <col:12> 'const char *const' lvalue .data 0x5653e3459f20
|   |     `-DeclRefExpr 0x5653e3471590 <col:12> 'const String::rep_t' lvalue ParmVar 0x5653e3471308 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5653e3471700 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x5653e34716b8 <col:12> 'int' lvalue ->length 0x5653e3459f88
|   | | `-CXXThisExpr 0x5653e34716a8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5653e34716e8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x5653e3471678 <col:12> 'const int' lvalue .length 0x5653e3459f88
|   |     `-DeclRefExpr 0x5653e3471658 <col:12> 'const String::rep_t' lvalue ParmVar 0x5653e3471308 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5653e34717c8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x5653e3471780 <col:12> 'String::memo_t *' lvalue ->memo 0x5653e345a018
|   | | `-CXXThisExpr 0x5653e3471770 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5653e34717b0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x5653e3471740 <col:12> 'String::memo_t *const' lvalue .memo 0x5653e345a018
|   |     `-DeclRefExpr 0x5653e3471720 <col:12> 'const String::rep_t' lvalue ParmVar 0x5653e3471308 '' 'const String::rep_t &'
|   `-ReturnStmt 0x5653e3471810 <col:12>
|     `-UnaryOperator 0x5653e34717f8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5653e34717e8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x5653e3471378 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5653e3471378
  `-ParmVarDecl 0x5653e3471488 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5653e3450c10 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5653e3450d28 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x5653e3450db8 <col:16, col:22> col:16 public
|-TypedefDecl 0x5653e3450df8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x5653e3125fd0 'const char *'
|   `-QualType 0x5653e3125521 'const char' const
|     `-BuiltinType 0x5653e3125520 'char'
|-TypedefDecl 0x5653e3450e80 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x5653e3450e50 'String::const_iterator' sugar
|   |-Typedef 0x5653e3450df8 'const_iterator'
|   `-PointerType 0x5653e3125fd0 'const char *'
|     `-QualType 0x5653e3125521 'const char' const
|       `-BuiltinType 0x5653e3125520 'char'
|-TypedefDecl 0x5653e3450ff0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x5653e3450f60 'int (String::*)() const'
|   |-RecordType 0x5653e3450ca0 'String'
|   | `-CXXRecord 0x5653e3450c10 'String'
|   `-ParenType 0x5653e3450f00 'int () const' sugar
|     `-FunctionProtoType 0x5653e3425ae0 'int () const' const cdecl
|       `-BuiltinType 0x5653e3125580 'int'
|-TypedefDecl 0x5653e3451058 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x5653e327a760 'int64_t' sugar
|   |-Typedef 0x5653e318e390 'int64_t'
|   `-TypedefType 0x5653e3167630 '__int64_t' sugar
|     |-Typedef 0x5653e3167208 '__int64_t'
|     `-BuiltinType 0x5653e31255a0 'long'
|-TypedefDecl 0x5653e34510c0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x5653e327a680 'uint64_t' sugar
|   |-Typedef 0x5653e318e530 'uint64_t'
|   `-TypedefType 0x5653e31676c0 '__uint64_t' sugar
|     |-Typedef 0x5653e3167278 '__uint64_t'
|     `-BuiltinType 0x5653e3125640 'unsigned long'
|-TypedefDecl 0x5653e3451150 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x5653e3451120 'String::intmax_t' sugar
|   |-Typedef 0x5653e3451058 'intmax_t'
|   `-TypedefType 0x5653e327a760 'int64_t' sugar
|     |-Typedef 0x5653e318e390 'int64_t'
|     `-TypedefType 0x5653e3167630 '__int64_t' sugar
|       |-Typedef 0x5653e3167208 '__int64_t'
|       `-BuiltinType 0x5653e31255a0 'long'
|-TypedefDecl 0x5653e34511e0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x5653e34511b0 'String::uintmax_t' sugar
|   |-Typedef 0x5653e34510c0 'uintmax_t'
|   `-TypedefType 0x5653e327a680 'uint64_t' sugar
|     |-Typedef 0x5653e318e530 'uint64_t'
|     `-TypedefType 0x5653e31676c0 '__uint64_t' sugar
|       |-Typedef 0x5653e3167278 '__uint64_t'
|       `-BuiltinType 0x5653e3125640 'unsigned long'
|-CXXConstructorDecl 0x5653e34512a0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x5653e3451448 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x5653e3451388 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x5653e34515f8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x5653e3451538 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x5653e3451750 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x5653e34516c0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x5653e3451968 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x5653e3451818 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x5653e3451898 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x5653e3451b88 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x5653e3451a38 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x5653e3451ab8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x5653e3451da8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5653e3451c58 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x5653e3451cd8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x5653e3451fc8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x5653e3451e78 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x5653e3451ef8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x5653e3452158 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x5653e3452090 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x5653e34522d8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x5653e3452218 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x5653e3452468 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x5653e34523a0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x5653e34525c0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x5653e3452530 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x5653e3452718 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x5653e3452688 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x5653e3452870 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x5653e34527e0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x5653e34529f8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x5653e3452938 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x5653e3452b88 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x5653e3452ac0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x5653e3452d18 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x5653e3452c50 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x5653e3452ea8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x5653e3452de0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x5653e3452fa0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x5653e34530c8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x5653e3453248 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x5653e3453180 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x5653e3453398 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x5653e3453308 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x5653e3453440 <col:63> "" ""
|-CXXMethodDecl 0x5653e3453588 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x5653e34534c8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x5653e3453798 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x5653e3453648 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x5653e34536c8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x5653e3453a08 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x5653e3453860 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x5653e3453930 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x5653e3453ce8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x5653e3453ac8 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x5653e3453b48 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x5653e345f9e0 <col:55> 'int' 10
| `-ParmVarDecl 0x5653e3453bc0 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5653e345fa00 <col:76> 'bool' true
|-CXXMethodDecl 0x5653e3453fc8 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x5653e3453db0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x5653e3453e30 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x5653e345fa10 <col:56> 'int' 10
| `-ParmVarDecl 0x5653e3453ea8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5653e345fa30 <col:77> 'bool' true
|-CXXMethodDecl 0x5653e34540d0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x5653e3454198 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x5653e3454260 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x5653e3454300 <col:20>
| `-OptimizeNoneAttr 0x5653e3454358 <col:30>
|-CXXConversionDecl 0x5653e3454448 <line:83:5, col:45> col:12 referenced operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x5653e3454518 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x5653e34545d8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x5653e34546c8 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5653e3454788 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5653e3454908 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x5653e3454840 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x5653e3454a58 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x5653e34549c8 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x5653e3454b48 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x5653e3454c08 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x5653e3454e58 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x5653e3454cc0 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x5653e3454d40 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x5653e34550b8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x5653e3454f20 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x5653e3454fa0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x5653e3455188 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x5653e3455398 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x5653e3455240 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x5653e34552c0 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x5653e34555b8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x5653e3455460 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x5653e34554e0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x5653e3455748 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x5653e3455680 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x5653e3455838 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x5653e34559a8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x5653e34558e8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5653e3455bb8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x5653e3455a68 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5653e3455ae8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5653e3455dd0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x5653e3455c78 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x5653e3455cf0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x5653e3455f60 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x5653e3455e90 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5653e3456180 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x5653e3456020 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x5653e34560a0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5653e34562d0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x5653e3456240 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x5653e34564a8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x5653e3456390 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5653e3456410 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x5653e34565f8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x5653e3456568 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x5653e3456810 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x5653e34566b0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x5653e3456730 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x5653e345fa40 <col:39> 'int' 0
|-CXXMethodDecl 0x5653e3456a30 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x5653e34568d0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x5653e3456950 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x5653e345fa60 <col:48> 'int' 0
|-CXXMethodDecl 0x5653e3456c10 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x5653e3456af0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x5653e3456b70 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x5653e345fa80 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x5653e3456ce0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x5653e3456da0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x5653e3456e60 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x5653e3456f20 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x5653e3456fe0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x5653e3457188 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x5653e3457090 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x5653e3457308 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x5653e3457240 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x5653e3457488 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x5653e34573c8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x5653e3457608 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x5653e3457540 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x5653e3457750 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x5653e34576c0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5653e3457940 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x5653e3457810 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x5653e3457b18 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x5653e3457a00 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5653e3457a80 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5653e3457cf8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5653e3457be0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x5653e3457c60 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x5653e3457e48 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x5653e3457db8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x5653e3458058 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x5653e3457f08 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x5653e3457f88 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x5653e34581b8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x5653e3458120 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5653e3458310 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x5653e3458278 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x5653e34583b8 <col:57> "" ""
|-CXXMethodDecl 0x5653e34584c8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x5653e3458438 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x5653e3458618 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x5653e3458588 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x5653e3458798 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x5653e34586d0 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x5653e3458860 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x5653e3458920 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x5653e34589e0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x5653e3458a80 <col:49> "" ""
|-CXXMethodDecl 0x5653e3458b10 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x5653e3458bd0 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x5653e3458cc0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x5653e3458d88 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x5653e3458e48 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x5653e3458f08 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x5653e3459000 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x5653e34590c8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x5653e3459190 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x5653e3459368 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x5653e3459248 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x5653e34592c8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x5653e3459590 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x5653e3459430 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x5653e34594b0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x5653e34596a0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x5653e3459708 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x5653e3459730 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5653e3459848 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x5653e34598e8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x5653e3459948 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x5653e34599a8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x5653e3459a58 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x5653e3459ac0 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x5653e3459cf8 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x5653e3459d48 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5653e3459cd8 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x5653e3459be8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x5653e3459b90 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x5653e3459bd0 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x5653e3459bb0 <col:32> 'int' 8
|-CXXRecordDecl 0x5653e3459d60 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5653e3459e78 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x5653e3459f20 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x5653e3459f88 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x5653e345a018 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x5653e345ff10 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5653e3460348 <col:12>
| |-CXXConstructorDecl 0x5653e3460018 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5653e3460128 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5653e3459f20 'data' 'const char *'
| | | `-ImplicitCastExpr 0x5653e34628d0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x5653e34628a0 <col:12> 'const char *const' lvalue .data 0x5653e3459f20
| | |     `-DeclRefExpr 0x5653e3462880 <col:12> 'const String::rep_t' lvalue ParmVar 0x5653e3460128 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5653e3459f88 'length' 'int'
| | | `-ImplicitCastExpr 0x5653e3462960 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x5653e3462930 <col:12> 'const int' lvalue .length 0x5653e3459f88
| | |     `-DeclRefExpr 0x5653e3462910 <col:12> 'const String::rep_t' lvalue ParmVar 0x5653e3460128 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5653e345a018 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x5653e34629f0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x5653e34629c0 <col:12> 'String::memo_t *const' lvalue .memo 0x5653e345a018
| | |     `-DeclRefExpr 0x5653e34629a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5653e3460128 '' 'const String::rep_t &'
| | `-CompoundStmt 0x5653e3462a48 <col:12>
| |-CXXConstructorDecl 0x5653e34601c8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5653e34601c8
| | `-ParmVarDecl 0x5653e34602d8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x5653e34657c0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x5653e34711f8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5653e3471308 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x5653e3471820 <col:12>
| |   |-BinaryOperator 0x5653e3471638 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x5653e34715f0 <col:12> 'const char *' lvalue ->data 0x5653e3459f20
| |   | | `-CXXThisExpr 0x5653e34715e0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5653e3471620 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x5653e34715b0 <col:12> 'const char *const' lvalue .data 0x5653e3459f20
| |   |     `-DeclRefExpr 0x5653e3471590 <col:12> 'const String::rep_t' lvalue ParmVar 0x5653e3471308 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5653e3471700 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x5653e34716b8 <col:12> 'int' lvalue ->length 0x5653e3459f88
| |   | | `-CXXThisExpr 0x5653e34716a8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5653e34716e8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x5653e3471678 <col:12> 'const int' lvalue .length 0x5653e3459f88
| |   |     `-DeclRefExpr 0x5653e3471658 <col:12> 'const String::rep_t' lvalue ParmVar 0x5653e3471308 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5653e34717c8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x5653e3471780 <col:12> 'String::memo_t *' lvalue ->memo 0x5653e345a018
| |   | | `-CXXThisExpr 0x5653e3471770 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5653e34717b0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x5653e3471740 <col:12> 'String::memo_t *const' lvalue .memo 0x5653e345a018
| |   |     `-DeclRefExpr 0x5653e3471720 <col:12> 'const String::rep_t' lvalue ParmVar 0x5653e3471308 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x5653e3471810 <col:12>
| |     `-UnaryOperator 0x5653e34717f8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5653e34717e8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x5653e3471378 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5653e3471378
|   `-ParmVarDecl 0x5653e3471488 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x5653e345a090 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x5653e345a2d8 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x5653e345a0f8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x5653e345a178 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x5653e345a1f0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x5653e345fed0 <col:79, line:261:5>
|   |-BinaryOperator 0x5653e345fb48 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5653e345fae0 <col:2, col:5> 'const char *' lvalue .data 0x5653e3459f20
|   | | `-MemberExpr 0x5653e345fab0 <col:2> 'String::rep_t' lvalue ->_r 0x5653e345a090
|   | |   `-CXXThisExpr 0x5653e345faa0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5653e345fb30 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5653e345fb10 <col:12> 'const char *' lvalue ParmVar 0x5653e345a0f8 'data' 'const char *'
|   |-BinaryOperator 0x5653e345fc10 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x5653e345fba8 <col:2, col:5> 'int' lvalue .length 0x5653e3459f88
|   | | `-MemberExpr 0x5653e345fb78 <col:2> 'String::rep_t' lvalue ->_r 0x5653e345a090
|   | |   `-CXXThisExpr 0x5653e345fb68 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5653e345fbf8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5653e345fbd8 <col:14> 'int' lvalue ParmVar 0x5653e345a178 'length' 'int'
|   `-IfStmt 0x5653e345feb8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x5653e345fd30 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5653e345fd18 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x5653e345fcf8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x5653e345fcd8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x5653e345fc70 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x5653e345a018
|     |       | `-MemberExpr 0x5653e345fc40 <col:7> 'String::rep_t' lvalue ->_r 0x5653e345a090
|     |       |   `-CXXThisExpr 0x5653e345fc30 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x5653e345fcc0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x5653e345fca0 <col:17> 'String::memo_t *' lvalue ParmVar 0x5653e345a1f0 'memo' 'String::memo_t *'
|     `-CallExpr 0x5653e345fe90 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x5653e345fe78 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5653e345fd80 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x5653e344acd0 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x5653e345fde8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5653e34598e8
|         `-ImplicitCastExpr 0x5653e345fdd0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x5653e345fdb0 <col:27> 'String::memo_t *' lvalue ParmVar 0x5653e345a1f0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x5653e345a588 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x5653e345a3a8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x5653e345a428 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x5653e345a4a0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x5653e345a090 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x5653e3460358 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5653e34604e8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x5653e3460450 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x5653e34603c0 <col:2> '<bound member function type>' ->assign_memo 0x5653e345a2d8
|     | `-ImplicitCastExpr 0x5653e3460488 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x5653e34603b0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x5653e34604a0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x5653e34603f0 <col:14> 'const char *' lvalue ParmVar 0x5653e345a3a8 'data' 'const char *'
|     |-ImplicitCastExpr 0x5653e34604b8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5653e3460410 <col:20> 'int' lvalue ParmVar 0x5653e345a428 'length' 'int'
|     `-ImplicitCastExpr 0x5653e34604d0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x5653e3460430 <col:28> 'String::memo_t *' lvalue ParmVar 0x5653e345a4a0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x5653e345a718 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x5653e345a658 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x5653e3460740 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x5653e34606c0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x5653e3460510 <col:2> '<bound member function type>' ->assign_memo 0x5653e345a2d8
|     | `-CXXThisExpr 0x5653e3460500 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x5653e34606f8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x5653e3460590 <col:14, col:19> 'const char *' lvalue .data 0x5653e3459f20
|     |   `-MemberExpr 0x5653e3460560 <col:14, col:16> 'String::rep_t' lvalue ._r 0x5653e345a090
|     |     `-DeclRefExpr 0x5653e3460540 <col:14> 'const String' lvalue ParmVar 0x5653e345a658 'x' 'const String &'
|     |-ImplicitCastExpr 0x5653e3460710 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x5653e3460610 <col:25, col:30> 'int' lvalue .length 0x5653e3459f88
|     |   `-MemberExpr 0x5653e34605e0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x5653e345a090
|     |     `-DeclRefExpr 0x5653e34605c0 <col:25> 'const String' lvalue ParmVar 0x5653e345a658 'x' 'const String &'
|     `-ImplicitCastExpr 0x5653e3460728 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x5653e3460690 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x5653e345a018
|         `-MemberExpr 0x5653e3460660 <col:38, col:40> 'String::rep_t' lvalue ._r 0x5653e345a090
|           `-DeclRefExpr 0x5653e3460640 <col:38> 'const String' lvalue ParmVar 0x5653e345a658 'x' 'const String &'
|-CXXMethodDecl 0x5653e345a7e0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x5653e3461100 <col:31, line:278:5>
|   `-IfStmt 0x5653e34610e8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x5653e34607e0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5653e34607c8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x5653e3460798 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5653e345a018
|     |     `-MemberExpr 0x5653e3460768 <col:6> 'String::rep_t' lvalue ->_r 0x5653e345a090
|     |       `-CXXThisExpr 0x5653e3460758 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x5653e34610c0 <col:15, line:277:2>
|       |-ParenExpr 0x5653e3460c90 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x5653e3460c60 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x5653e34608f0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x5653e34608d8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x5653e34608c0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x5653e3460880 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5653e34598e8
|       |   |       `-ImplicitCastExpr 0x5653e3460868 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x5653e3460838 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x5653e345a018
|       |   |           `-MemberExpr 0x5653e3460808 <col:27> 'String::rep_t' lvalue ->_r 0x5653e345a090
|       |   |             `-CXXThisExpr 0x5653e34607f8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x5653e3460950 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x5653e3460930 <col:54> 'int' 0
|       |   `-CallExpr 0x5653e3460bc0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x5653e3460ba8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x5653e3460b28 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5653e31c0f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x5653e3460c00 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5653e3460a38 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x5653e3460c18 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5653e3460a68 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x5653e3460c30 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x5653e3460aa0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x5653e3460c48 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x5653e3460b10 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x5653e3460af8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x5653e3460ac0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x5653e3460fe0 <line:274:6, line:275:22>
|       | |-CallExpr 0x5653e3460ea0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x5653e3460e88 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x5653e3460e00 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x5653e344c110 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x5653e3460dd0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5653e34598e8
|       | |   `-ImplicitCastExpr 0x5653e3460db8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x5653e3460d88 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x5653e345a018
|       | |       `-MemberExpr 0x5653e3460d58 <col:40> 'String::rep_t' lvalue ->_r 0x5653e345a090
|       | |         `-CXXThisExpr 0x5653e3460d48 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x5653e3460fa0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x5653e3460f88 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x5653e3460ec8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x5653e345b4b8 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x5653e3460fc8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x5653e3460f28 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x5653e345a018
|       |       `-MemberExpr 0x5653e3460ef8 <col:15> 'String::rep_t' lvalue ->_r 0x5653e345a090
|       |         `-CXXThisExpr 0x5653e3460ee8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x5653e34610a0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x5653e3461038 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5653e345a018
|         | `-MemberExpr 0x5653e3461008 <col:6> 'String::rep_t' lvalue ->_r 0x5653e345a090
|         |   `-CXXThisExpr 0x5653e3460ff8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x5653e3461088 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x5653e3461068 <col:16> 'int' 0
|-CXXMethodDecl 0x5653e345aa78 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x5653e345a898 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5653e345a918 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5653e345a990 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x5653e345ab50 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x5653e345ada0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x5653e345ac08 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5653e345ac88 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5653e345ad00 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x5653e345af88 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x5653e345ae70 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x5653e345aef0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x5653e345b088 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x5653e34611d8 <col:41, line:286:5>
|   `-ReturnStmt 0x5653e34611c8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x5653e3461198 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x5653e3461160 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x5653e3461148 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x5653e3461128 <col:46> 'int' 1
|-CXXMethodDecl 0x5653e345b328 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x5653e345b140 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x5653e345b1c0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x5653e345b240 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x5653e345b4b8 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x5653e345b3f0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x5653e345b588 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x5653e345b758 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x5653e345b640 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5653e345b6c0 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x5653e345b818 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x5653e345f240 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x5653e345f348 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x5653e345f3c0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x5653e345f438 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x5653e345f4a0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x5653e345f5a0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x5653e345f5f0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5653e345f580 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x5653e345f560 <col:22> 'int' 14
|-CXXMethodDecl 0x5653e345f808 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x5653e345f620 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x5653e345f6a0 <col:38> col:41 'int'
| `-ParmVarDecl 0x5653e345f720 <col:43> col:46 'int'
|-FriendDecl 0x5653e345f910 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x5653e345f9a0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5653e34a31e0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x5653e34a33b8 prev 0x5653e34a31e0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5653e34a3448 <col:46, col:52> col:46 public
|-TypedefDecl 0x5653e34a3470 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5653e3125580 'int'
|-TypedefDecl 0x5653e34a5570 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x5653e34a5520 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x5653e34a5500 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x5653e34a3688 'type'
|     `-SubstTemplateTypeParmType 0x5653e34a3650 'String' sugar
|       |-TemplateTypeParmType 0x5653e3415790 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5653e3415740 'T'
|       `-RecordType 0x5653e3450ca0 'String'
|         `-CXXRecord 0x5653e3450c10 'String'
|-TypedefDecl 0x5653e34a5628 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x5653e34a55f0 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x5653e34a55d0 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x5653e34a5570 'type'
|     `-ElaboratedType 0x5653e34a5520 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x5653e34a5500 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x5653e34a3688 'type'
|         `-SubstTemplateTypeParmType 0x5653e34a3650 'String' sugar
|           |-TemplateTypeParmType 0x5653e3415790 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5653e3415740 'T'
|           `-RecordType 0x5653e3450ca0 'String'
|             `-CXXRecord 0x5653e3450c10 'String'
|-CXXMethodDecl 0x5653e34a57a8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x5653e34a56b8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x5653e34a5898 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5653e34a5978 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5653e34a5978
|-CXXMethodDecl 0x5653e34a5c48 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x5653e34a5b50 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x5653e34a5e88 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5653e34a5d00 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5653e34a5d78 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5653e34a6058 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5653e34a5f48 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5653e34a5fc0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5653e34a61b8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x5653e34a6288 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x5653e34a64d8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5653e34a6348 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x5653e34a63c0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5653e34a6738 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x5653e34a65a8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x5653e34a6620 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5653e34a68f8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x5653e34a6808 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5653e34a6ab8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x5653e34a69c0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5653e34a6b70 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5653e34a6c20 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5653e34a6e58 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5653e34a6cd0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5653e34a6d48 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5653e34a70f8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x5653e34a7000 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x5653e34a71c0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x5653e34a7210 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5653e34a7260 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5653e3485040 <../dummy_inc/click/vector.hh:110:1, line:197:1> line:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x5653e34a1c48 prev 0x5653e3485040 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5653e34a3150 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x5653e34a3100 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x5653e34a30e0 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x5653e34a2f90 'type'
|     `-SubstTemplateTypeParmType 0x5653e34a2e20 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x5653e333f000 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x5653e333efa8 'F'
|       `-RecordType 0x5653e34a2a80 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x5653e34a29a0 'typed_array_memory'
|-FieldDecl 0x5653e34a72b0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x5653e34a7300 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5653e34a7338 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x5653e34a1ce0 'String' sugar
|   |-TemplateTypeParmType 0x5653e34224c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5653e3422468 'T'
|   `-RecordType 0x5653e3450ca0 'String'
|     `-CXXRecord 0x5653e3450c10 'String'
|-TypedefDecl 0x5653e34a73c8 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x5653e34a7390 'String &'
|   `-SubstTemplateTypeParmType 0x5653e34a1ce0 'String' sugar
|     |-TemplateTypeParmType 0x5653e34224c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5653e3422468 'T'
|     `-RecordType 0x5653e3450ca0 'String'
|       `-CXXRecord 0x5653e3450c10 'String'
|-TypedefDecl 0x5653e34a7458 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x5653e34a7420 'const String &'
|   `-QualType 0x5653e34a1ce1 'const String' const
|     `-SubstTemplateTypeParmType 0x5653e34a1ce0 'String' sugar
|       |-TemplateTypeParmType 0x5653e34224c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5653e3422468 'T'
|       `-RecordType 0x5653e3450ca0 'String'
|         `-CXXRecord 0x5653e3450c10 'String'
|-TypedefDecl 0x5653e34a74e8 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x5653e34a74b0 'String *'
|   `-SubstTemplateTypeParmType 0x5653e34a1ce0 'String' sugar
|     |-TemplateTypeParmType 0x5653e34224c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5653e3422468 'T'
|     `-RecordType 0x5653e3450ca0 'String'
|       `-CXXRecord 0x5653e3450c10 'String'
|-TypedefDecl 0x5653e34a7578 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x5653e34a7540 'const String *'
|   `-QualType 0x5653e34a1ce1 'const String' const
|     `-SubstTemplateTypeParmType 0x5653e34a1ce0 'String' sugar
|       |-TemplateTypeParmType 0x5653e34224c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5653e3422468 'T'
|       `-RecordType 0x5653e3450ca0 'String'
|         `-CXXRecord 0x5653e3450c10 'String'
|-TypedefDecl 0x5653e34a81d0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x5653e34a8180 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x5653e34a8160 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x5653e34a8098 'type'
|     `-LValueReferenceType 0x5653e34a8060 'const String &'
|       `-QualType 0x5653e34a7e01 'const String' const
|         `-SubstTemplateTypeParmType 0x5653e34a7e00 'String' sugar
|           |-TemplateTypeParmType 0x5653e33472f0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5653e3347298 'T'
|           `-RecordType 0x5653e3450ca0 'String'
|             `-CXXRecord 0x5653e3450c10 'String'
|-TypedefDecl 0x5653e34a8238 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x5653e34a7420 'const String &'
|   `-QualType 0x5653e34a1ce1 'const String' const
|     `-SubstTemplateTypeParmType 0x5653e34a1ce0 'String' sugar
|       |-TemplateTypeParmType 0x5653e34224c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5653e3422468 'T'
|       `-RecordType 0x5653e3450ca0 'String'
|         `-CXXRecord 0x5653e3450c10 'String'
|-TypedefDecl 0x5653e34a8290 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5653e3125580 'int'
|-TypedefDecl 0x5653e34a82f8 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x5653e34a74b0 'String *'
|   `-SubstTemplateTypeParmType 0x5653e34a1ce0 'String' sugar
|     |-TemplateTypeParmType 0x5653e34224c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5653e3422468 'T'
|     `-RecordType 0x5653e3450ca0 'String'
|       `-CXXRecord 0x5653e3450c10 'String'
|-TypedefDecl 0x5653e34a8360 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x5653e34a7540 'const String *'
|   `-QualType 0x5653e34a1ce1 'const String' const
|     `-SubstTemplateTypeParmType 0x5653e34a1ce0 'String' sugar
|       |-TemplateTypeParmType 0x5653e34224c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5653e3422468 'T'
|       `-RecordType 0x5653e3450ca0 'String'
|         `-CXXRecord 0x5653e3450c10 'String'
|-EnumDecl 0x5653e34a83b8 <line:134:5> col:5
| `-EnumConstantDecl 0x5653e34a84b0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5653e34a8490 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5653e3423ea8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5653e3423e80 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5653e3423e60 <col:40> 'int' 1
|-CXXConstructorDecl 0x5653e34a8538 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5653e34a87c8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5653e34a85f0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5653e34a8690 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x5653e34a8a58 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x5653e34a8940 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x5653e34a8d18 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x5653e34a8c00 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x5653e34a9a00 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x5653e34a98e0 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x5653e34a9d10 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x5653e34a9bf0 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x5653e34aa000 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5653e34a9e48 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5653e34a9ec0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5653e34aa128 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x5653e34aa1d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5653e34aa230 <col:30> Inherited
|-CXXMethodDecl 0x5653e34aa278 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x5653e34aa328 <col:20> Inherited
| `-OptimizeNoneAttr 0x5653e34aa380 <col:30> Inherited
|-CXXMethodDecl 0x5653e34aa448 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5653e34aa4f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5653e34aa550 <col:30> Inherited
|-CXXMethodDecl 0x5653e34aa598 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5653e34aa648 <col:20> Inherited
| `-OptimizeNoneAttr 0x5653e34aa6a0 <col:30> Inherited
|-CXXMethodDecl 0x5653e34aa6e8 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5653e34aa798 <col:20> Inherited
| `-OptimizeNoneAttr 0x5653e34aa7f0 <col:30> Inherited
|-CXXMethodDecl 0x5653e34aa838 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5653e34aa8e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5653e34aa940 <col:30> Inherited
|-CXXMethodDecl 0x5653e34aa968 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5653e34aaa18 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5653e34aaac8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5653e34aac88 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5653e34aab78 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5653e34aabf0 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5653e34aadd8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5653e34aad48 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5653e34aaf88 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x5653e34aae90 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5653e34ab040 <col:20>
| `-OptimizeNoneAttr 0x5653e34ab098 <col:30>
|-CXXMethodDecl 0x5653e34ab1b8 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x5653e34ab0c0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5653e34ab270 <col:20>
| `-OptimizeNoneAttr 0x5653e34ab2c8 <col:30>
|-CXXMethodDecl 0x5653e34ab380 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x5653e34ab2f0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5653e34ab4c8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5653e34ab438 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5653e34ab5f8 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x5653e34ab728 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x5653e34ab7f8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x5653e34ab8c8 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x5653e34aba08 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x5653e34ab978 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5653e34abb50 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5653e34abac0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5653e34abc98 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x5653e34abc08 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5653e34abd50 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5653e34abe50 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5653e34abdc0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5653e34abf08 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5653e34abfc8 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x5653e34ac0c8 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x5653e34ac248 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x5653e34ac188 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x5653e34aca08 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5653e34ac300 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x5653e34ac968 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x5653e34ac868 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x5653e34acae8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5653e34acc38 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x5653e34acba8 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5653e34accf0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5653e34acf38 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5653e34acdb0 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x5653e34ace28 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5653e34ad0c8 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x5653e34ad008 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x5653e34ad2d8 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x5653e34ad190 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x5653e34ad208 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x5653e34ad398 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x5653e34ad5f8 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x5653e34ad500 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x5653e34ad6c8 <line:111:7> col:7 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5653e34ad6c8

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5653e3445340 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5653e3445458 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x5653e34454e8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x5653e34455b8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x5653e34456a0 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x5653e34458b8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5653e3445760 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5653e3445a68 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5653e3445970 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5653e3445bb0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5653e3445b20 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5653e3445cf8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5653e3445c68 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5653e3445e40 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5653e3445db0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5653e3445f08 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x5653e3446050 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x5653e3445fc0 <col:28> col:31 'int'
|-CXXMethodDecl 0x5653e3446118 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x5653e3446260 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x5653e34461d0 <col:28> col:31 'int'
|-CXXMethodDecl 0x5653e34463d8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5653e3446318 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5653e3446520 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5653e3446490 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5653e34465e8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x5653e34467a8 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5653e3446698 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5653e3446710 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5653e34469f8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5653e3446868 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5653e34468e0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5653e3446aa8 <col:86> "" ""
|-CXXMethodDecl 0x5653e3446d18 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x5653e3446b88 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x5653e3446c00 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5653e3446ec8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5653e3446dd8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5653e3447078 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5653e3446f80 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5653e3447348 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5653e3447130 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5653e34471a8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5653e3447220 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5653e3447628 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5653e3447410 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5653e3447488 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5653e3447500 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5653e34476e0 <col:115> "" ""
|-AccessSpecDecl 0x5653e3447750 <line:84:3, col:10> col:3 private
|-FieldDecl 0x5653e3447788 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5653e3447c38 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5653e3447c38
| `-ParmVarDecl 0x5653e3447d48 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x5653e3447de8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5653e3447de8
| `-ParmVarDecl 0x5653e3447ef8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x5653e347ebe8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5653e3709010 <col:7>
|-CXXConstructorDecl 0x5653e347ecc0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5653e347ecc0
| `-ParmVarDecl 0x5653e347edd8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x5653e347ee48 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5653e347ee48
| `-ParmVarDecl 0x5653e347ef58 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x5653e370ba10 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5653e36f1a38 prev 0x5653e36e9140 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5653e36f1b30 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x5653e36f1c20 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x5653e36f1cd0 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x5653e36f1e58 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x5653e36f1fd8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x5653e36f2158 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x5653e3709178 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5653e3709a78 <col:11>
|-CXXDestructorDecl 0x5653e37092e0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5653e3709418 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5653e3709418
| `-ParmVarDecl 0x5653e3709528 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x5653e37095c8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5653e37095c8
| `-ParmVarDecl 0x5653e37096d8 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x5653e370c408 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x5653e370c518 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x5653e370c798 <col:11>
|   `-ReturnStmt 0x5653e370c788 <col:11>
|     `-UnaryOperator 0x5653e370c770 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5653e370c760 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x5653e370c588 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5653e370c588
  `-ParmVarDecl 0x5653e370c698 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5653e36f21c0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5653e36f22d8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x5653e36f2378 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x5653e36f23e0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x5653e36f2448 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x5653e36f24b0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x5653e36f2510 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x5653e36f25d0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x5653e36f2630 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x5653e36f2690 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x5653e3709088 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x5653e36f2378 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x5653e3709a88 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x5653e3709ae0 <col:12>
|-CXXConstructorDecl 0x5653e3709748 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5653e3709748
| `-ParmVarDecl 0x5653e3709858 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x5653e37098f8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5653e37098f8
| `-ParmVarDecl 0x5653e3709a08 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x5653e370baf0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5653e36e2830 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5653e36e2948 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x5653e36e29d8 <col:16, col:22> col:16 public
|-EnumDecl 0x5653e36e2a00 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x5653e36e2b00 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x5653e36e2be0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e36e2ae0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x5653e36e2ac0 <col:21> 'int' 28
| `-EnumConstantDecl 0x5653e36e2b90 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x5653e36e2bf8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5653e36e2b70 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x5653e36e2b50 <col:22> 'int' 64
|-CXXMethodDecl 0x5653e36e2f98 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x5653e36e2c20 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5653e36e2ca0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x5653e36e2d80 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5653e36e2df8 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5653e36e3058 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5653e36e3258 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x5653e36e30d0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x5653e36e3148 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5653e36e3308 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5653e36e3468 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x5653e36e3378 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5653e36e3510 <col:72> warn_unused_result ""
|-TypedefDecl 0x5653e36e3840 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x5653e36e37d0 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x5653e36e3770 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x5653e36e3730 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x5653e31254e0 'void'
|       |-PointerType 0x5653e33f9500 'unsigned char *'
|       | `-BuiltinType 0x5653e31255e0 'unsigned char'
|       |-TypedefType 0x5653e31ca210 'size_t' sugar
|       | |-Typedef 0x5653e3195be0 'size_t'
|       | `-BuiltinType 0x5653e3125640 'unsigned long'
|       `-PointerType 0x5653e3125ce0 'void *'
|         `-BuiltinType 0x5653e31254e0 'void'
|-CXXMethodDecl 0x5653e36e3cb8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x5653e36e38b0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x5653e36e3928 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5653e36e39c0 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x5653e36e3a40 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x5653e37020a0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x5653e3702088 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x5653e3702050 <col:58> 'int' 0
| |-ParmVarDecl 0x5653e36e3ac0 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x5653e37020c8 <col:76> 'int' 0
| |-ParmVarDecl 0x5653e36e3b40 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x5653e37020e8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x5653e36e3d88 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x5653e36e3e08 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5653e36e3ec8 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x5653e36e3f68 <col:20>
| `-OptimizeNoneAttr 0x5653e36e3fc0 <col:30>
|-CXXMethodDecl 0x5653e36e4038 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x5653e36e40d8 <col:20>
| `-OptimizeNoneAttr 0x5653e36e4130 <col:30>
|-CXXMethodDecl 0x5653e36e41a8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x5653e36e4248 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x5653e36e42f8 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x5653e36e4398 <col:20>
| |-OptimizeNoneAttr 0x5653e36e43f0 <col:30>
| `-WarnUnusedResultAttr 0x5653e36e4418 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x5653e36e4470 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x5653e36e4510 <col:20>
| `-OptimizeNoneAttr 0x5653e36e4568 <col:30>
|-CXXMethodDecl 0x5653e36e45b8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x5653e36e4658 <col:20>
| `-OptimizeNoneAttr 0x5653e36e46b0 <col:30>
|-CXXMethodDecl 0x5653e36e46f8 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x5653e36e4798 <col:20>
| `-OptimizeNoneAttr 0x5653e36e47f0 <col:30>
|-CXXMethodDecl 0x5653e36e4838 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5653e36e48f8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5653e36e49c0 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5653e36e4a88 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5653e36e4b48 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5653e36e4c68 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x5653e37021b0 <col:54, line:99:5>
|   `-ReturnStmt 0x5653e37021a0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x5653e3702188 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x5653e3702158 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5653e36f29c8
|         `-CXXThisExpr 0x5653e3702148 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x5653e36e4e08 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x5653e36e4d18 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x5653e3702260 <col:67, line:103:5>
|   `-BinaryOperator 0x5653e3702240 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5653e37021d8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5653e36f29c8
|     | `-CXXThisExpr 0x5653e37021c8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5653e3702228 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x5653e3702208 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x5653e36e4d18 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x5653e36e4f00 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x5653e37022e0 <col:33, line:107:5>
|   `-ReturnStmt 0x5653e37022d0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x5653e37022b8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x5653e3702288 <col:16> 'void *' lvalue ->_destructor_argument 0x5653e36f2a30
|         `-CXXThisExpr 0x5653e3702278 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5653e36e4fc0 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x5653e3702910 <col:25, line:113:5>
|   |-ParenExpr 0x5653e3702658 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x5653e3702628 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x5653e3702398 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5653e3702370 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x5653e3702338 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x5653e3702308 <col:24> '<bound member function type>' ->shared 0x5653e36e4038
|   |   |       `-ImplicitCastExpr 0x5653e3702358 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x5653e37022f8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5653e37023f8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5653e37023d8 <col:42> 'int' 0
|   |   `-CallExpr 0x5653e3702588 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x5653e3702570 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5653e3702550 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5653e31c0f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5653e37025c8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e3702468 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x5653e37025e0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e3702490 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5653e37025f8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5653e37024c8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x5653e3702610 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5653e3702538 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5653e3702520 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5653e37024e8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x5653e3702858 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x5653e3702688 <col:2> 'unsigned char *' lvalue ->_head 0x5653e36f27d0
|   | | `-CXXThisExpr 0x5653e3702678 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x5653e3702840 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x5653e3702820 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x5653e37026c8 <col:10> 'unsigned char *' lvalue ->_data 0x5653e36f2838
|   |     | `-CXXThisExpr 0x5653e37026b8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x5653e3702808 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x5653e37027e8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x5653e3702708 <col:18> 'unsigned char *' lvalue ->_tail 0x5653e36f28a0
|   |         | `-CXXThisExpr 0x5653e37026f8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x5653e37027d0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x5653e37027b0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x5653e3702748 <col:26> 'unsigned char *' lvalue ->_end 0x5653e36f2908
|   |             | `-CXXThisExpr 0x5653e3702738 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x5653e3702798 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x5653e3702778 <col:33> 'int' 0
|   `-BinaryOperator 0x5653e37028f0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5653e3702888 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5653e36f29c8
|     | `-CXXThisExpr 0x5653e3702878 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5653e37028d8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x5653e37028b8 <col:16> 'int' 0
|-CXXMethodDecl 0x5653e36e5100 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5653e36e5070 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5653e36e51a8 <col:20>
| |-OptimizeNoneAttr 0x5653e36e5200 <col:30>
| `-WarnUnusedResultAttr 0x5653e36e5228 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5653e36e52f8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5653e36e5268 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5653e36e53a0 <col:20>
| |-OptimizeNoneAttr 0x5653e36e53f8 <col:30>
| `-WarnUnusedResultAttr 0x5653e36e5420 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x5653e36e5558 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5653e36e5460 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5653e36e5600 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x5653e36e5700 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x5653e36e5670 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5653e36e57a8 <col:20>
| `-OptimizeNoneAttr 0x5653e36e5800 <col:30>
|-CXXMethodDecl 0x5653e36e58c8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5653e36e5838 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5653e36e5970 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x5653e36e5a70 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5653e36e59e0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5653e36e5b18 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5653e36e5c18 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x5653e36e5b88 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5653e36e5cc0 <col:20>
| `-OptimizeNoneAttr 0x5653e36e5d18 <col:30>
|-CXXMethodDecl 0x5653e36e5ea8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x5653e36e5d58 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x5653e36e5dd0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x5653e3702108 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x5653e36e5f58 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x5653e36e6158 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5653e36e5fd0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x5653e36e6048 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5653e36e6368 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5653e36e6218 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5653e36e6290 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5653e36e6578 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x5653e36e6428 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x5653e36e64a8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x5653e3702118 <col:39> 'int' 0
|-CXXMethodDecl 0x5653e36e6648 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x5653e36e6710 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5653e36e67d8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x5653e36e6898 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5653e36e6960 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x5653e36e6aa8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x5653e36e6a18 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x5653e36e6c78 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5653e36e6b68 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x5653e36e6be0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5653e36e6d48 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x5653e36e6e08 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x5653e36e6ea8 <col:20>
| `-OptimizeNoneAttr 0x5653e36e6f00 <col:30>
|-CXXMethodDecl 0x5653e36e6f50 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5653e36e6ff0 <col:20>
| `-OptimizeNoneAttr 0x5653e36e7048 <col:30>
|-CXXMethodDecl 0x5653e36e7098 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x5653e36e7158 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5653e36e7220 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x5653e36e72c0 <col:20>
| `-OptimizeNoneAttr 0x5653e36e7318 <col:30>
|-CXXMethodDecl 0x5653e36e7468 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5653e36e7358 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x5653e36e73d0 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5653e36e75b8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x5653e36e7528 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5653e36e7680 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x5653e36e7740 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x5653e36e77e0 <col:20>
| `-OptimizeNoneAttr 0x5653e36e7838 <col:30>
|-CXXMethodDecl 0x5653e36e7888 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5653e36e7928 <col:20>
| `-OptimizeNoneAttr 0x5653e36e7980 <col:30>
|-CXXMethodDecl 0x5653e36e79d0 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x5653e36e7a98 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x5653e36e7b38 <col:20>
| `-OptimizeNoneAttr 0x5653e36e7b90 <col:30>
|-CXXMethodDecl 0x5653e36e7bd8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x5653e36e7cf8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x5653e36e7e68 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x5653e36e7da8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x5653e36e7f58 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x5653e36e7ff8 <col:20>
| `-OptimizeNoneAttr 0x5653e36e8050 <col:30>
|-CXXMethodDecl 0x5653e36e80a0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x5653e36e8160 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5653e36e8398 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x5653e36e8210 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x5653e36e8288 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5653e36e8448 <col:20>
| `-OptimizeNoneAttr 0x5653e36e84a0 <col:30>
|-CXXMethodDecl 0x5653e36e8548 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x5653e36e85e8 <col:20>
| `-OptimizeNoneAttr 0x5653e36e8640 <col:30>
|-CXXMethodDecl 0x5653e36e8690 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x5653e36e8730 <col:20>
| `-OptimizeNoneAttr 0x5653e36e8788 <col:30>
|-CXXMethodDecl 0x5653e36e87d0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x5653e36e8870 <col:20>
| `-OptimizeNoneAttr 0x5653e36e88c8 <col:30>
|-CXXMethodDecl 0x5653e36e89c8 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x5653e36e8900 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x5653e36e8a70 <col:20>
| `-OptimizeNoneAttr 0x5653e36e8ac8 <col:30>
|-CXXMethodDecl 0x5653e36e8c88 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x5653e36e8b00 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x5653e36e8b78 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5653e36e8d38 <col:20>
| `-OptimizeNoneAttr 0x5653e36e8d90 <col:30>
|-CXXMethodDecl 0x5653e36e8e38 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x5653e36e8f58 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x5653e36e9078 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x5653e36e9118 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x5653e36e9140 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x5653e36e9268 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x5653e36e9308 <col:20>
| `-OptimizeNoneAttr 0x5653e36e9360 <col:30>
|-CXXMethodDecl 0x5653e36e9408 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x5653e36e94a8 <col:20>
| `-OptimizeNoneAttr 0x5653e36e9500 <col:30>
|-AccessSpecDecl 0x5653e36e9528 <line:344:3, col:9> col:3 public
|-EnumDecl 0x5653e36e9550 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x5653e36e9650 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x5653e36e96a0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5653e36e9630 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x5653e36e9610 <col:14> 'int' 48
|-CXXMethodDecl 0x5653e36e9708 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x5653e36e97a8 <col:20>
| `-OptimizeNoneAttr 0x5653e36e9800 <col:30>
|-CXXMethodDecl 0x5653e36e9878 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x5653e36e9918 <col:20>
| `-OptimizeNoneAttr 0x5653e36e9970 <col:30>
|-CXXMethodDecl 0x5653e36e9a38 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x5653e36e99a8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x5653e36e9bd8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x5653e36e9d78 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x5653e36e9c88 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x5653e36e9e20 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x5653e36e9f20 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5653e36ea2d0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e36e9f00 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x5653e36e9ee0 <col:9> 'int' 0
| |-EnumConstantDecl 0x5653e36e9fb0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5653e36ea2e8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e36e9f90 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x5653e36e9f70 <col:14> 'int' 1
| |-EnumConstantDecl 0x5653e36ea040 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5653e36ea300 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e36ea020 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x5653e36ea000 <col:14> 'int' 2
| |-EnumConstantDecl 0x5653e36ea0d0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5653e36ea318 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e36ea0b0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x5653e36ea090 <col:14> 'int' 3
| |-EnumConstantDecl 0x5653e36ea160 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5653e36ea330 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e36ea140 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x5653e36ea120 <col:13> 'int' 4
| |-EnumConstantDecl 0x5653e36ea1f0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5653e36ea348 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e36ea1d0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x5653e36ea1b0 <col:13> 'int' 5
| `-EnumConstantDecl 0x5653e36ea280 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x5653e36ea360 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5653e36ea260 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x5653e36ea240 <col:14> 'int' 6
|-CXXMethodDecl 0x5653e36ea3c8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x5653e36ea468 <col:20>
| `-OptimizeNoneAttr 0x5653e36ea4c0 <col:30>
|-CXXMethodDecl 0x5653e36ea5b8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x5653e36ea4f8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x5653e36ea660 <col:20>
| `-OptimizeNoneAttr 0x5653e36ea6b8 <col:30>
|-CXXMethodDecl 0x5653e36ea728 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x5653e36ea850 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x5653e36ea9c8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x5653e36ea900 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x5653e36eaa90 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x5653e36eab58 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x5653e36eac98 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x5653e36eac08 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x5653e36ead90 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x5653e36eae90 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5653e36eb090 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e36eae70 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x5653e36eae50 <col:23> 'int' 0
| |-EnumConstantDecl 0x5653e36eaf20 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5653e36eb0a8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e36eaf00 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x5653e36eaee0 <col:45> 'int' 4
| |-EnumConstantDecl 0x5653e36eafb0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5653e36eb0c0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e36eaf90 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x5653e36eaf70 <col:24> 'int' 0
| `-EnumConstantDecl 0x5653e36eb040 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x5653e36eb0d8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5653e36eb020 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x5653e36eb000 <col:47> 'int' 16
|-CXXMethodDecl 0x5653e36eb138 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x5653e36eb2a8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x5653e36eb1e8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x5653e36eb350 <col:20>
| `-OptimizeNoneAttr 0x5653e36eb3a8 <col:30>
|-CXXMethodDecl 0x5653e36eb3f8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x5653e3702a30 <col:18, col:36>
|   `-ReturnStmt 0x5653e3702a20 <col:20, col:33>
|     `-ImplicitCastExpr 0x5653e3702a08 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x5653e37029e8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x5653e37029b8 <col:27> '<bound member function type>' ->xanno 0x5653e36e9408
|           `-CXXThisExpr 0x5653e37029a8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x5653e36eb4f0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x5653e3702b40 <col:30, col:48>
|   `-ReturnStmt 0x5653e3702b30 <col:32, col:45>
|     `-ImplicitCastExpr 0x5653e3702b18 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x5653e3702af8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x5653e3702ac8 <col:39> '<bound member function type>' ->xanno 0x5653e36e9268
|           `-CXXThisExpr 0x5653e3702ab8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x5653e36eb5d8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x5653e3702cd8 <col:24, col:50>
|   `-ReturnStmt 0x5653e3702cc8 <col:26, col:47>
|     `-UnaryOperator 0x5653e3702cb0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5653e3702c90 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x5653e3702c78 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5653e3702c28 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x5653e36f1cd0
|         |   `-CXXMemberCallExpr 0x5653e3702c08 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x5653e3702bd8 <col:34> '<bound member function type>' ->xanno 0x5653e36e9408
|         |       `-CXXThisExpr 0x5653e3702bc8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x5653e3702c58 <col:46> 'int' 0
|-CXXMethodDecl 0x5653e36eb6c8 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x5653e3702e70 <col:36, col:62>
|   `-ReturnStmt 0x5653e3702e60 <col:38, col:59>
|     `-UnaryOperator 0x5653e3702e48 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5653e3702e28 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5653e3702e10 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5653e3702dc0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x5653e36f1cd0
|         |   `-CXXMemberCallExpr 0x5653e3702da0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5653e3702d70 <col:46> '<bound member function type>' ->xanno 0x5653e36e9268
|         |       `-CXXThisExpr 0x5653e3702d60 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5653e3702df0 <col:58> 'int' 0
|-CXXMethodDecl 0x5653e36eb7e8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x5653e3703008 <col:26, col:53>
|   `-ReturnStmt 0x5653e3702ff8 <col:28, col:50>
|     `-UnaryOperator 0x5653e3702fe0 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5653e3702fc0 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x5653e3702fa8 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5653e3702f58 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x5653e36f1fd8
|         |   `-CXXMemberCallExpr 0x5653e3702f38 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x5653e3702f08 <col:36> '<bound member function type>' ->xanno 0x5653e36e9408
|         |       `-CXXThisExpr 0x5653e3702ef8 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x5653e3702f88 <col:49> 'int' 0
|-CXXMethodDecl 0x5653e36eb908 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x5653e37031d8 <col:38, col:65>
|   `-ReturnStmt 0x5653e37031c8 <col:40, col:62>
|     `-UnaryOperator 0x5653e37031b0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5653e3703190 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x5653e3703178 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5653e37030f0 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x5653e36f1fd8
|         |   `-CXXMemberCallExpr 0x5653e37030d0 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5653e37030a0 <col:48> '<bound member function type>' ->xanno 0x5653e36e9268
|         |       `-CXXThisExpr 0x5653e3703090 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5653e3703120 <col:61> 'int' 0
|-CXXMethodDecl 0x5653e36ebab8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x5653e36eb9c0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x5653e37038a8 <col:34, line:463:5>
|   |-ParenExpr 0x5653e37036f0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x5653e37036c0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5653e3703328 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5653e37032f8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5653e3703248 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5653e3703230 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5653e37031f0 <col:23> 'int' lvalue ParmVar 0x5653e36eb9c0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5653e3703210 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5653e37032d8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5653e37032a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5653e3703268 <col:33> 'int' lvalue ParmVar 0x5653e36eb9c0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5653e37032c0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5653e3703288 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5653e36e9650 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5653e3703388 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5653e3703368 <col:56> 'int' 0
|   |   `-CallExpr 0x5653e3703620 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5653e3703608 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5653e37035e8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5653e31c0f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5653e3703660 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e3703478 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5653e3703678 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e37034a8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5653e3703690 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5653e37034e0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x5653e37036a8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5653e37035d0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5653e37035b8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5653e3703578 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x5653e3703898 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x5653e3703880 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x5653e3703860 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5653e3703830 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5653e37037e0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x5653e36f1cd0
|         |   `-CXXMemberCallExpr 0x5653e37037c0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5653e3703790 <col:9> '<bound member function type>' ->xanno 0x5653e36e9268
|         |       `-CXXThisExpr 0x5653e3703780 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x5653e3703848 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x5653e3703810 <col:21> 'int' lvalue ParmVar 0x5653e36eb9c0 'i' 'int'
|-CXXMethodDecl 0x5653e36ebd08 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x5653e36ebb78 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x5653e36ebbf0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x5653e3703f38 <col:40, line:472:5>
|   |-ParenExpr 0x5653e3703d50 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x5653e3703d20 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5653e3703a00 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5653e37039d0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5653e3703920 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5653e3703908 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5653e37038c8 <col:23> 'int' lvalue ParmVar 0x5653e36ebb78 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5653e37038e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5653e37039b0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5653e3703980 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5653e3703940 <col:33> 'int' lvalue ParmVar 0x5653e36ebb78 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5653e3703998 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5653e3703960 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5653e36e9650 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5653e3703a60 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5653e3703a40 <col:56> 'int' 0
|   |   `-CallExpr 0x5653e3703c80 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5653e3703c68 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5653e3703c48 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5653e31c0f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5653e3703cc0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e3703ad0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5653e3703cd8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e3703b00 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5653e3703cf0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5653e3703b38 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x5653e3703d08 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5653e3703c30 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5653e3703c18 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5653e3703bd8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x5653e3703f18 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x5653e3703ec0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x5653e3703e90 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x5653e3703e40 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x5653e36f1cd0
|     | |   `-CXXMemberCallExpr 0x5653e3703e20 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x5653e3703df0 <col:2> '<bound member function type>' ->xanno 0x5653e36e9408
|     | |       `-CXXThisExpr 0x5653e3703de0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x5653e3703ea8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x5653e3703e70 <col:14> 'int' lvalue ParmVar 0x5653e36ebb78 'i' 'int'
|     `-ImplicitCastExpr 0x5653e3703f00 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x5653e3703ee0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x5653e36ebbf0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x5653e36ebec8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x5653e36ebdd0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5653e37046b8 <col:36, line:485:5>
|   |-ParenExpr 0x5653e3704420 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x5653e37043f0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5653e37040d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5653e37040a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5653e3703fb0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5653e3703f98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5653e3703f58 <col:23> 'int' lvalue ParmVar 0x5653e36ebdd0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5653e3703f78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5653e3704080 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5653e3704068 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5653e3703fd0 <col:33> 'int' lvalue ParmVar 0x5653e36ebdd0 'i' 'int'
|   |   |     `-BinaryOperator 0x5653e3704048 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5653e3704030 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5653e3703ff0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5653e36e9650 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5653e3704010 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5653e3704130 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5653e3704110 <col:60> 'int' 0
|   |   `-CallExpr 0x5653e3704350 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5653e3704338 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5653e3704318 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5653e31c0f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5653e3704390 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e37041a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5653e37043a8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e37041d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5653e37043c0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5653e3704210 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x5653e37043d8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5653e3704300 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5653e37042e8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5653e37042a8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x5653e37046a8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x5653e3704690 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x5653e3704678 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5653e3704648 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x5653e37045e8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5653e37045b8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5653e3704530 <col:61, col:70> 'char const[48]' lvalue ->c 0x5653e36f1c20
|             |   `-CXXMemberCallExpr 0x5653e3704510 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5653e37044e0 <col:61> '<bound member function type>' ->xanno 0x5653e36e9268
|             |       `-CXXThisExpr 0x5653e37044d0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5653e37045d0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5653e3704560 <col:74> 'int' lvalue ParmVar 0x5653e36ebdd0 'i' 'int'
|-CXXMethodDecl 0x5653e36ec118 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x5653e36ebf88 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5653e36ec000 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x5653e3704e08 <col:42, line:500:5>
|   |-ParenExpr 0x5653e3704ba0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x5653e3704b70 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5653e3704850 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5653e3704820 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5653e3704730 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5653e3704718 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5653e37046d8 <col:23> 'int' lvalue ParmVar 0x5653e36ebf88 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5653e37046f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5653e3704800 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5653e37047e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5653e3704750 <col:33> 'int' lvalue ParmVar 0x5653e36ebf88 'i' 'int'
|   |   |     `-BinaryOperator 0x5653e37047c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5653e37047b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5653e3704770 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5653e36e9650 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5653e3704790 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5653e37048b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5653e3704890 <col:60> 'int' 0
|   |   `-CallExpr 0x5653e3704ad0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5653e3704ab8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5653e3704a98 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5653e31c0f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5653e3704b10 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e3704920 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5653e3704b28 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e3704958 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5653e3704b40 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5653e3704990 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x5653e3704b58 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5653e3704a80 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5653e3704a68 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5653e3704a28 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x5653e3704de8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x5653e3704d98 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5653e3704d68 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x5653e3704d10 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5653e3704ce0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5653e3704c90 <col:48, col:57> 'char [48]' lvalue ->c 0x5653e36f1c20
|     |     |   `-CXXMemberCallExpr 0x5653e3704c70 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5653e3704c40 <col:48> '<bound member function type>' ->xanno 0x5653e36e9408
|     |     |       `-CXXThisExpr 0x5653e3704c30 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5653e3704cf8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5653e3704cc0 <col:61> 'int' lvalue ParmVar 0x5653e36ebf88 'i' 'int'
|     `-ImplicitCastExpr 0x5653e3704dd0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x5653e3704db0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x5653e36ec000 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x5653e36ec2d8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x5653e36ec1e0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5653e3705568 <col:35, line:513:5>
|   |-ParenExpr 0x5653e3705278 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x5653e3705248 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5653e3704fa0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5653e3704f70 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5653e3704e80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5653e3704e68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5653e3704e28 <col:23> 'int' lvalue ParmVar 0x5653e36ec1e0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5653e3704e48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5653e3704f50 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5653e3704f38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5653e3704ea0 <col:33> 'int' lvalue ParmVar 0x5653e36ec1e0 'i' 'int'
|   |   |     `-BinaryOperator 0x5653e3704f18 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5653e3704f00 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5653e3704ec0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5653e36e9650 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5653e3704ee0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5653e3705000 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5653e3704fe0 <col:60> 'int' 0
|   |   `-CallExpr 0x5653e37051a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5653e3705190 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5653e3705170 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5653e31c0f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5653e37051e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e3705070 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5653e3705200 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e37050a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5653e3705218 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5653e37050e0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x5653e3705230 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5653e3705158 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5653e3705140 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5653e3705100 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x5653e3705558 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x5653e3705540 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x5653e3705528 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5653e37054f8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x5653e3705470 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5653e3705440 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5653e37053f0 <col:60, col:69> 'char const[48]' lvalue ->c 0x5653e36f1c20
|             |   `-CXXMemberCallExpr 0x5653e37053d0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5653e37053a0 <col:60> '<bound member function type>' ->xanno 0x5653e36e9268
|             |       `-CXXThisExpr 0x5653e3705390 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5653e3705458 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5653e3705420 <col:73> 'int' lvalue ParmVar 0x5653e36ec1e0 'i' 'int'
|-CXXMethodDecl 0x5653e36ec528 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x5653e36ec398 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5653e36ec410 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x5653e3705c48 <col:41, line:528:5>
|   |-ParenExpr 0x5653e37059d8 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x5653e37059a8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5653e3705700 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5653e37056d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5653e37055e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5653e37055c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5653e3705588 <col:23> 'int' lvalue ParmVar 0x5653e36ec398 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5653e37055a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5653e37056b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5653e3705698 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5653e3705600 <col:33> 'int' lvalue ParmVar 0x5653e36ec398 'i' 'int'
|   |   |     `-BinaryOperator 0x5653e3705678 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5653e3705660 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5653e3705620 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5653e36e9650 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5653e3705640 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5653e3705760 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5653e3705740 <col:60> 'int' 0
|   |   `-CallExpr 0x5653e3705908 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5653e37058f0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5653e37058d0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5653e31c0f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5653e3705948 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e37057d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5653e3705960 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e3705808 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5653e3705978 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5653e3705840 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x5653e3705990 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5653e37058b8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5653e37058a0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5653e3705860 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x5653e3705c28 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x5653e3705bd8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5653e3705ba8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x5653e3705b48 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5653e3705b18 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5653e3705ac8 <col:47, col:56> 'char [48]' lvalue ->c 0x5653e36f1c20
|     |     |   `-CXXMemberCallExpr 0x5653e3705aa8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5653e3705a78 <col:47> '<bound member function type>' ->xanno 0x5653e36e9408
|     |     |       `-CXXThisExpr 0x5653e3705a68 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5653e3705b30 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5653e3705af8 <col:60> 'int' lvalue ParmVar 0x5653e36ec398 'i' 'int'
|     `-ImplicitCastExpr 0x5653e3705c10 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x5653e3705bf0 <col:65> 'int16_t':'short' lvalue ParmVar 0x5653e36ec410 'x' 'int16_t':'short'
|-CXXMethodDecl 0x5653e36ec6e8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x5653e36ec5f0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5653e3706318 <col:36, line:541:5>
|   |-ParenExpr 0x5653e37060b8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x5653e3706088 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5653e3705de0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5653e3705db0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5653e3705cc0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5653e3705ca8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5653e3705c68 <col:23> 'int' lvalue ParmVar 0x5653e36ec5f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5653e3705c88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5653e3705d90 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5653e3705d78 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5653e3705ce0 <col:33> 'int' lvalue ParmVar 0x5653e36ec5f0 'i' 'int'
|   |   |     `-BinaryOperator 0x5653e3705d58 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5653e3705d40 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5653e3705d00 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5653e36e9650 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5653e3705d20 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5653e3705e40 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5653e3705e20 <col:60> 'int' 0
|   |   `-CallExpr 0x5653e3705fe8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5653e3705fd0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5653e3705fb0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5653e31c0f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5653e3706028 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e3705eb0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5653e3706040 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e3705ee8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5653e3706058 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5653e3705f20 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x5653e3706070 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5653e3705f98 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5653e3705f80 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5653e3705f40 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x5653e3706308 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x5653e37062f0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x5653e37062d8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5653e37062a8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x5653e3706250 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5653e3706220 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5653e37061d0 <col:61, col:70> 'char const[48]' lvalue ->c 0x5653e36f1c20
|             |   `-CXXMemberCallExpr 0x5653e37061b0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5653e3706180 <col:61> '<bound member function type>' ->xanno 0x5653e36e9268
|             |       `-CXXThisExpr 0x5653e3706170 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5653e3706238 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5653e3706200 <col:74> 'int' lvalue ParmVar 0x5653e36ec5f0 'i' 'int'
|-CXXMethodDecl 0x5653e36ec8b8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x5653e36ec7a8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x5653e36ec820 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5653e36ec968 <col:20>
| `-OptimizeNoneAttr 0x5653e36ec9c0 <col:30>
|-CXXMethodDecl 0x5653e36ecaf8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x5653e36eca00 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5653e37069e8 <col:35, line:562:5>
|   |-ParenExpr 0x5653e3706788 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x5653e3706758 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5653e37064b0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5653e3706480 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5653e3706390 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5653e3706378 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5653e3706338 <col:23> 'int' lvalue ParmVar 0x5653e36eca00 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5653e3706358 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5653e3706460 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5653e3706448 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5653e37063b0 <col:33> 'int' lvalue ParmVar 0x5653e36eca00 'i' 'int'
|   |   |     `-BinaryOperator 0x5653e3706428 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5653e3706410 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5653e37063d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5653e36e9650 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5653e37063f0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5653e3706510 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5653e37064f0 <col:60> 'int' 0
|   |   `-CallExpr 0x5653e37066b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5653e37066a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5653e3706680 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5653e31c0f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5653e37066f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e3706580 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5653e3706710 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e37065b8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5653e3706728 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5653e37065f0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x5653e3706740 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5653e3706668 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5653e3706650 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5653e3706610 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x5653e37069d8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x5653e37069c0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x5653e37069a8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5653e3706978 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x5653e3706920 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5653e37068f0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5653e37068a0 <col:60, col:69> 'char const[48]' lvalue ->c 0x5653e36f1c20
|             |   `-CXXMemberCallExpr 0x5653e3706880 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5653e3706850 <col:60> '<bound member function type>' ->xanno 0x5653e36e9268
|             |       `-CXXThisExpr 0x5653e3706840 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5653e3706908 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5653e37068d0 <col:73> 'int' lvalue ParmVar 0x5653e36eca00 'i' 'int'
|-CXXMethodDecl 0x5653e36ecd08 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x5653e36ecbb8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5653e36ecc30 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x5653e37070c8 <col:41, line:577:5>
|   |-ParenExpr 0x5653e3706e58 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x5653e3706e28 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5653e3706b80 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5653e3706b50 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5653e3706a60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5653e3706a48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5653e3706a08 <col:23> 'int' lvalue ParmVar 0x5653e36ecbb8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5653e3706a28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5653e3706b30 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5653e3706b18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5653e3706a80 <col:33> 'int' lvalue ParmVar 0x5653e36ecbb8 'i' 'int'
|   |   |     `-BinaryOperator 0x5653e3706af8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5653e3706ae0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5653e3706aa0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5653e36e9650 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5653e3706ac0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5653e3706be0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5653e3706bc0 <col:60> 'int' 0
|   |   `-CallExpr 0x5653e3706d88 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5653e3706d70 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5653e3706d50 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5653e31c0f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5653e3706dc8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e3706c50 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5653e3706de0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e3706c88 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5653e3706df8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5653e3706cc0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x5653e3706e10 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5653e3706d38 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5653e3706d20 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5653e3706ce0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x5653e37070a8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x5653e3707058 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5653e3707028 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x5653e3706fc8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5653e3706f98 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5653e3706f48 <col:47, col:56> 'char [48]' lvalue ->c 0x5653e36f1c20
|     |     |   `-CXXMemberCallExpr 0x5653e3706f28 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5653e3706ef8 <col:47> '<bound member function type>' ->xanno 0x5653e36e9408
|     |     |       `-CXXThisExpr 0x5653e3706ee8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5653e3706fb0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5653e3706f78 <col:60> 'int' lvalue ParmVar 0x5653e36ecbb8 'i' 'int'
|     `-ImplicitCastExpr 0x5653e3707090 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x5653e3707070 <col:65> 'int32_t':'int' lvalue ParmVar 0x5653e36ecc30 'x' 'int32_t':'int'
|-CXXMethodDecl 0x5653e36ecec8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x5653e36ecdd0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5653e37077f8 <col:36, line:591:5>
|   |-ParenExpr 0x5653e3707538 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x5653e3707508 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5653e3707260 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5653e3707230 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5653e3707140 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5653e3707128 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5653e37070e8 <col:23> 'int' lvalue ParmVar 0x5653e36ecdd0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5653e3707108 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5653e3707210 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5653e37071f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5653e3707160 <col:33> 'int' lvalue ParmVar 0x5653e36ecdd0 'i' 'int'
|   |   |     `-BinaryOperator 0x5653e37071d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5653e37071c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5653e3707180 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5653e36e9650 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5653e37071a0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5653e37072c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5653e37072a0 <col:60> 'int' 0
|   |   `-CallExpr 0x5653e3707468 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5653e3707450 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5653e3707430 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5653e31c0f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5653e37074a8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e3707330 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5653e37074c0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e3707368 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5653e37074d8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5653e37073a0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x5653e37074f0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5653e3707418 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5653e3707400 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5653e37073c0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x5653e37077e8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x5653e37077d0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x5653e37077b8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5653e3707788 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x5653e3707700 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5653e37076d0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5653e3707680 <col:61, col:70> 'char const[48]' lvalue ->c 0x5653e36f1c20
|             |   `-CXXMemberCallExpr 0x5653e3707660 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5653e3707630 <col:61> '<bound member function type>' ->xanno 0x5653e36e9268
|             |       `-CXXThisExpr 0x5653e3707620 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5653e37076e8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5653e37076b0 <col:74> 'int' lvalue ParmVar 0x5653e36ecdd0 'i' 'int'
|-CXXMethodDecl 0x5653e36ed118 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x5653e36ecf88 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5653e36ed000 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x5653e3707ed8 <col:42, line:606:5>
|   |-ParenExpr 0x5653e3707c68 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x5653e3707c38 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5653e3707990 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5653e3707960 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5653e3707870 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5653e3707858 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5653e3707818 <col:23> 'int' lvalue ParmVar 0x5653e36ecf88 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5653e3707838 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5653e3707940 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5653e3707928 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5653e3707890 <col:33> 'int' lvalue ParmVar 0x5653e36ecf88 'i' 'int'
|   |   |     `-BinaryOperator 0x5653e3707908 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5653e37078f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5653e37078b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5653e36e9650 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5653e37078d0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5653e37079f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5653e37079d0 <col:60> 'int' 0
|   |   `-CallExpr 0x5653e3707b98 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5653e3707b80 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5653e3707b60 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5653e31c0f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5653e3707bd8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e3707a60 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5653e3707bf0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e3707a98 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5653e3707c08 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5653e3707ad0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x5653e3707c20 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5653e3707b48 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5653e3707b30 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5653e3707af0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x5653e3707eb8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x5653e3707e68 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5653e3707e38 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x5653e3707dd8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5653e3707da8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5653e3707d58 <col:48, col:57> 'char [48]' lvalue ->c 0x5653e36f1c20
|     |     |   `-CXXMemberCallExpr 0x5653e3707d38 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5653e3707d08 <col:48> '<bound member function type>' ->xanno 0x5653e36e9408
|     |     |       `-CXXThisExpr 0x5653e3707cf8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5653e3707dc0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5653e3707d88 <col:61> 'int' lvalue ParmVar 0x5653e36ecf88 'i' 'int'
|     `-ImplicitCastExpr 0x5653e3707ea0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x5653e3707e80 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x5653e36ed000 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x5653e36ed2b0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x5653e36ed1e0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x5653e3708748 <col:33, line:620:5>
|   |-ParenExpr 0x5653e37084c0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x5653e3708490 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5653e37080e0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5653e37080b0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5653e3707f50 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5653e3707f38 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5653e3707ef8 <col:23> 'int' lvalue ParmVar 0x5653e36ed1e0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5653e3707f18 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5653e3708090 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5653e3708078 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5653e3707f70 <col:33> 'int' lvalue ParmVar 0x5653e36ed1e0 'i' 'int'
|   |   |     `-BinaryOperator 0x5653e3708058 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5653e3708040 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5653e3707f90 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5653e36e9650 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5653e3708018 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5653e3708000 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5653e3707fc8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5653e3708140 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5653e3708120 <col:79> 'int' 0
|   |   `-CallExpr 0x5653e37083f0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5653e37083d8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5653e37083b8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5653e31c0f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5653e3708430 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e3708228 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5653e3708448 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e3708270 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5653e3708460 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5653e37082a8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x5653e3708478 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5653e37083a0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5653e3708388 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5653e3708348 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x5653e3708738 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x5653e3708720 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x5653e3708708 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5653e37086d8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x5653e3708650 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x5653e3708620 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5653e37085d0 <col:67, col:76> 'char const[48]' lvalue ->c 0x5653e36f1c20
|             |   `-CXXMemberCallExpr 0x5653e37085b0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5653e3708580 <col:67> '<bound member function type>' ->xanno 0x5653e36e9268
|             |       `-CXXThisExpr 0x5653e3708570 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5653e3708638 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5653e3708600 <col:80> 'int' lvalue ParmVar 0x5653e36ed1e0 'i' 'int'
|-CXXMethodDecl 0x5653e36ed4c8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x5653e36ed370 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5653e36ed3f0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x5653e3708f70 <col:45, line:635:5>
|   |-ParenExpr 0x5653e3708cb8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x5653e3708c88 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5653e3708950 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5653e3708920 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5653e37087c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5653e37087a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5653e3708768 <col:23> 'int' lvalue ParmVar 0x5653e36ed370 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5653e3708788 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5653e3708900 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5653e37088e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5653e37087e0 <col:33> 'int' lvalue ParmVar 0x5653e36ed370 'i' 'int'
|   |   |     `-BinaryOperator 0x5653e37088c8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5653e37088b0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5653e3708800 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5653e36e9650 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5653e3708888 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5653e3708870 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5653e3708838 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5653e37089b0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5653e3708990 <col:79> 'int' 0
|   |   `-CallExpr 0x5653e3708be8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5653e3708bd0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5653e3708bb0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5653e31c0f70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5653e3708c28 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e3708a20 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5653e3708c40 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5653e3708a68 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5653e3708c58 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5653e3708aa0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x5653e3708c70 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5653e3708b98 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5653e3708b80 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5653e3708b38 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x5653e3708f50 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x5653e3708eb8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5653e3708e88 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x5653e3708e28 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5653e3708df8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5653e3708da8 <col:54, col:63> 'char [48]' lvalue ->c 0x5653e36f1c20
|     |     |   `-CXXMemberCallExpr 0x5653e3708d88 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5653e3708d58 <col:54> '<bound member function type>' ->xanno 0x5653e36e9408
|     |     |       `-CXXThisExpr 0x5653e3708d48 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5653e3708e10 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5653e3708dd8 <col:67> 'int' lvalue ParmVar 0x5653e36ed370 'i' 'int'
|     `-CXXConstCastExpr 0x5653e3708f20 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x5653e3708f08 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x5653e3708ed0 <col:91> 'const void *' lvalue ParmVar 0x5653e36ed3f0 'x' 'const void *'
|-CXXMethodDecl 0x5653e36ed598 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x5653e3708ff8 <col:34, line:640:5>
|   `-ReturnStmt 0x5653e3708fe8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x5653e3708fd0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x5653e3708fa0 <col:16> 'Packet *' lvalue ->_data_packet 0x5653e36f2768
|         `-CXXThisExpr 0x5653e3708f90 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5653e36ed6d8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x5653e36ed648 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5653e3702138 <col:46> 'bool' true
|-CXXMethodDecl 0x5653e36ed858 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x5653e36ed790 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x5653e36ed900 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x5653e36ee0b0 <line:660:22> "" ""
| |-EnumConstantDecl 0x5653e36eda00 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5653e36ee120 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e36ed9e0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x5653e36ed9c0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5653e36e2b00 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5653e36eda90 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5653e36ee138 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e36eda70 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x5653e36eda50 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5653e36e2b90 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5653e36edb20 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5653e36ee150 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e36edb00 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x5653e36edae0 <col:21> 'int' 0
| |-EnumConstantDecl 0x5653e36edbb0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5653e36ee168 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e36edb90 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x5653e36edb70 <col:19> 'int' 16
| |-EnumConstantDecl 0x5653e36edc40 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5653e36ee180 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e36edc20 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x5653e36edc00 <col:21> 'int' 16
| |-EnumConstantDecl 0x5653e36edcd0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5653e36ee198 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e36edcb0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5653e36edc90 <col:19> 'int' 32
| |-EnumConstantDecl 0x5653e36edd60 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5653e36ee1b0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e36edd40 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x5653e36edd20 <col:19> 'int' EnumConstant 0x5653e36edbb0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5653e36eddf0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5653e36ee1c8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e36eddd0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x5653e36eddb0 <col:19> 'int' EnumConstant 0x5653e36edcd0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5653e36edec0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5653e36ee1e0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e36edea0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x5653e36ede80 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5653e36ede40 <col:23> 'int' EnumConstant 0x5653e36eddf0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5653e36ede60 <col:40> 'int' 2
| |-EnumConstantDecl 0x5653e36edf90 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5653e36ee1f8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5653e36edf70 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x5653e36edf50 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5653e36edf10 <col:23> 'int' EnumConstant 0x5653e36eddf0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5653e36edf30 <col:40> 'int' 4
| `-EnumConstantDecl 0x5653e36ee060 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x5653e36ee210 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5653e36ee040 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x5653e36ee020 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x5653e36edfe0 <col:23> 'int' EnumConstant 0x5653e36eddf0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x5653e36ee000 <col:40> 'int' 8
|-CXXMethodDecl 0x5653e36ee250 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x5653e36ee2f0 <col:68> "" ""
|-CXXMethodDecl 0x5653e36ee388 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x5653e36ee428 <col:45> "" ""
|-CXXMethodDecl 0x5653e36ee4c0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5653e36ee560 <col:57> "" ""
|-CXXMethodDecl 0x5653e36ee5f8 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x5653e36ee698 <col:45> "" ""
|-CXXMethodDecl 0x5653e36ee730 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5653e36ee7d0 <col:57> "" ""
|-CXXMethodDecl 0x5653e36ee860 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x5653e36ee900 <col:51> "" ""
|-CXXMethodDecl 0x5653e36ee990 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5653e36eea30 <col:63> "" ""
|-CXXMethodDecl 0x5653e36eeac0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x5653e36eeb60 <col:53> "" ""
|-CXXMethodDecl 0x5653e36eebf0 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5653e36eec90 <col:65> "" ""
|-CXXMethodDecl 0x5653e36eeda8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5653e36eed18 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x5653e36eee50 <col:61> "" ""
|-CXXMethodDecl 0x5653e36eefe8 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5653e36eeed8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x5653e36eef50 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5653e36ef098 <col:67> "" ""
|-CXXMethodDecl 0x5653e36ef1b0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5653e36ef120 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5653e36ef258 <col:63> "" ""
|-CXXMethodDecl 0x5653e36ef3f0 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5653e36ef2e0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5653e36ef358 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5653e36ef4a0 <col:69> "" ""
|-CXXMethodDecl 0x5653e36ef5b8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5653e36ef528 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5653e36ef660 <col:63> "" ""
|-CXXMethodDecl 0x5653e36ef7f8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5653e36ef6e8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5653e36ef760 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5653e36ef8a8 <col:69> "" ""
|-CXXMethodDecl 0x5653e36ef9c0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x5653e36ef930 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x5653e36efa68 <col:62> "" ""
|-CXXMethodDecl 0x5653e36efc00 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5653e36efaf0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5653e36efb68 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x5653e36efcb0 <col:68> "" ""
|-CXXMethodDecl 0x5653e36efdc8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x5653e36efd38 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5653e36efe70 <col:63> "" ""
|-CXXMethodDecl 0x5653e36f0008 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x5653e36efef8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5653e36eff70 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x5653e36f00b8 <col:69> "" ""
|-CXXMethodDecl 0x5653e36f0148 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5653e36f01e8 <col:64> "" ""
|-CXXMethodDecl 0x5653e36f0278 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x5653e36f0318 <col:52> "" ""
|-CXXMethodDecl 0x5653e36f03a8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5653e36f0448 <col:67> "" ""
|-CXXMethodDecl 0x5653e36f04d8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x5653e36f0578 <col:55> "" ""
|-CXXMethodDecl 0x5653e36f0690 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5653e36f0600 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5653e36f0738 <col:58> "" ""
|-CXXMethodDecl 0x5653e36f08d0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5653e36f07c0 <col:33> col:36 'int'
| |-ParmVarDecl 0x5653e36f0838 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5653e36f0980 <col:62> "" ""
|-CXXMethodDecl 0x5653e36f0a98 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x5653e36f0a08 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5653e36f0b40 <col:58> "" ""
|-CXXMethodDecl 0x5653e36f0cd8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x5653e36f0bc8 <col:33> col:36 'int'
| |-ParmVarDecl 0x5653e36f0c40 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x5653e36f0d88 <col:62> "" ""
|-CXXMethodDecl 0x5653e36f0ea0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5653e36f0e10 <col:34> col:37 'int'
| `-DeprecatedAttr 0x5653e36f0f48 <col:60> "" ""
|-CXXMethodDecl 0x5653e36f10e0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5653e36f0fd0 <col:34> col:37 'int'
| |-ParmVarDecl 0x5653e36f1048 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5653e36f1190 <col:64> "" ""
|-CXXMethodDecl 0x5653e36f12a8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x5653e36f1218 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5653e36f1350 <col:58> "" ""
|-CXXMethodDecl 0x5653e36f14e8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5653e36f13d8 <col:33> col:36 'int'
| |-ParmVarDecl 0x5653e36f1450 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x5653e36f1598 <col:62> "" ""
|-CXXMethodDecl 0x5653e36f16b0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5653e36f1620 <col:33> col:36 'int'
| `-DeprecatedAttr 0x5653e36f1758 <col:59> "" ""
|-CXXMethodDecl 0x5653e36f18f0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5653e36f17e0 <col:33> col:36 'int'
| |-ParmVarDecl 0x5653e36f1858 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5653e36f19a0 <col:63> "" ""
|-AccessSpecDecl 0x5653e36f1a10 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x5653e36f1a38 prev 0x5653e36e9140 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5653e36f1b30 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x5653e36f1c20 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x5653e36f1cd0 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x5653e36f1e58 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x5653e36f1fd8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x5653e36f2158 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x5653e3709178 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5653e3709a78 <col:11>
| |-CXXDestructorDecl 0x5653e37092e0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x5653e3709418 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5653e3709418
| | `-ParmVarDecl 0x5653e3709528 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x5653e37095c8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5653e37095c8
| | `-ParmVarDecl 0x5653e37096d8 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x5653e370c408 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5653e370c518 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x5653e370c798 <col:11>
| |   `-ReturnStmt 0x5653e370c788 <col:11>
| |     `-UnaryOperator 0x5653e370c770 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5653e370c760 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x5653e370c588 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5653e370c588
|   `-ParmVarDecl 0x5653e370c698 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x5653e36f21c0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5653e36f22d8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x5653e36f2378 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x5653e36f23e0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x5653e36f2448 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x5653e36f24b0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x5653e36f2510 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x5653e36f25d0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x5653e36f2630 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x5653e36f2690 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x5653e3709088 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x5653e36f2378 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x5653e3709a88 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x5653e3709ae0 <col:12>
| |-CXXConstructorDecl 0x5653e3709748 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5653e3709748
| | `-ParmVarDecl 0x5653e3709858 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x5653e37098f8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5653e37098f8
| | `-ParmVarDecl 0x5653e3709a08 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x5653e370baf0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x5653e36f2708 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x5653e36f2768 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x5653e36f27d0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x5653e36f2838 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x5653e36f28a0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x5653e36f2908 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x5653e36f2968 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x5653e36f29c8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x5653e36f2a30 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x5653e36f2ab8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x5653e36f2708 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x5653e3709020 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x5653e36f2968 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x5653e3709af0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x5653e3709b50 <col:21, line:755:5>
|-CXXConstructorDecl 0x5653e36f2c58 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x5653e36f2b98 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x5653e37012d0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x5653e37014b8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x5653e37013c0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x5653e3701788 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x5653e3701570 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5653e37015e8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5653e3701660 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5653e37019a8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x5653e3701858 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x5653e37018d0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x5653e3701c78 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x5653e3701a68 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x5653e3701ae0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x5653e3701b58 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x5653e3701dd0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5653e3701d40 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5653e3701f18 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5653e3701e88 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x5653e3702010 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_tcp
         0 |   uint16_t th_sport
         2 |   uint16_t th_dport
         4 |   tcp_seq_t th_seq
         8 |   tcp_seq_t th_ack
    12:0-3 |   unsigned int th_flags2
    12:4-7 |   unsigned int th_off
        13 |   uint8_t th_flags
        14 |   uint16_t th_win
        16 |   uint16_t th_sum
        18 |   uint16_t th_urp
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5653e36d2db8 <../dummy_inc/clicknet/tcp.h:24:1, line:51:1> line:24:8 struct click_tcp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5653e36d2ed8 <col:1, col:8> col:8 implicit struct click_tcp
|-FieldDecl 0x5653e36d2f78 <line:25:5, col:14> col:14 th_sport 'uint16_t':'unsigned short'
|-FieldDecl 0x5653e36d2fd8 <line:26:5, col:14> col:14 th_dport 'uint16_t':'unsigned short'
|-FieldDecl 0x5653e36d3060 <line:27:5, col:15> col:15 referenced th_seq 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x5653e36d30c0 <line:28:5, col:15> col:15 th_ack 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x5653e36d3168 <line:30:5, col:26> col:14 th_flags2 'unsigned int'
| `-ConstantExpr 0x5653e36d3148 <col:26> 'int' Int: 4
|   `-IntegerLiteral 0x5653e36d3110 <col:26> 'int' 4
|-FieldDecl 0x5653e36d3210 <line:31:5, col:23> col:14 th_off 'unsigned int'
| `-ConstantExpr 0x5653e36d31f0 <col:23> 'int' Int: 4
|   `-IntegerLiteral 0x5653e36d31b8 <col:23> 'int' 4
|-FieldDecl 0x5653e36d3270 <line:39:5, col:13> col:13 th_flags 'uint8_t':'unsigned char'
|-FieldDecl 0x5653e36d32d0 <line:48:5, col:14> col:14 th_win 'uint16_t':'unsigned short'
|-FieldDecl 0x5653e36d3330 <line:49:5, col:14> col:14 th_sum 'uint16_t':'unsigned short'
`-FieldDecl 0x5653e36d3390 <line:50:5, col:14> col:14 th_urp 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
]>

*** Dumping AST Record Layout
         0 | class WritablePacket
         0 |   class Packet (base)
         0 |     class atomic_uint32_t _use_count
         0 |       uint32_t _val
         8 |     class Packet * _data_packet
        16 |     unsigned char * _head
        24 |     unsigned char * _data
        32 |     unsigned char * _tail
        40 |     unsigned char * _end
        48 |     struct Packet::AllAnno _aa
        48 |       union Packet::Anno cb
        48 |         char [48] c
        48 |         uint8_t [48] u8
        48 |         uint16_t [24] u16
        48 |         uint32_t [12] u32
        48 |         uint64_t [6] u64
        96 |       unsigned char * mac
       104 |       unsigned char * nh
       112 |       unsigned char * h
       120 |       enum Packet::PacketType pkt_type
       124 |       char [8] timestamp
       136 |       class Packet * next
       144 |       class Packet * prev
       152 |     Packet::buffer_destructor_type _destructor
       160 |     void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5653e3709b60 prev 0x5653e36e2780 <../dummy_inc/click/packet.hh:778:1, line:816:1> line:778:7 referenced class WritablePacket definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Packet'
|-CXXRecordDecl 0x5653e3709c98 <col:1, col:7> col:7 implicit referenced class WritablePacket
|-AccessSpecDecl 0x5653e3709d28 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x5653e3709dd0 <line:780:5, col:62> col:55 data 'unsigned char *() const'
| |-NoInlineAttr 0x5653e3709e70 <col:20>
| `-OptimizeNoneAttr 0x5653e3709ec8 <col:30>
|-CXXMethodDecl 0x5653e3709f18 <line:781:5, col:66> col:55 end_data 'unsigned char *() const'
| |-NoInlineAttr 0x5653e3709fb8 <col:20>
| `-OptimizeNoneAttr 0x5653e370a010 <col:30>
|-CXXMethodDecl 0x5653e370a060 <line:782:5, col:36> col:27 buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x5653e370a128 <line:783:5, col:40> col:27 end_buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x5653e370a1f0 <line:784:5, col:40> col:27 mac_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x5653e370a308 <line:785:5, col:40> col:25 ether_header 'click_ether *() const' inline
|-CXXMethodDecl 0x5653e370a3d0 <line:786:5, col:72> col:55 network_header 'unsigned char *() const'
| |-NoInlineAttr 0x5653e370a470 <col:20>
| `-OptimizeNoneAttr 0x5653e370a4c8 <col:30>
|-CXXMethodDecl 0x5653e370a538 <line:787:5, col:62> col:50 ip_header 'click_ip *() const'
| |-NoInlineAttr 0x5653e370a5d8 <col:20>
| `-OptimizeNoneAttr 0x5653e370a630 <col:30>
|-CXXMethodDecl 0x5653e370a6d8 <line:788:5, col:64> col:51 ip6_header 'click_ip6 *() const'
| |-NoInlineAttr 0x5653e370a778 <col:20>
| `-OptimizeNoneAttr 0x5653e370a7d0 <col:30>
|-CXXMethodDecl 0x5653e370a820 <line:789:5, col:46> col:27 transport_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x5653e370a938 <line:790:5, col:38> col:24 icmp_header 'click_icmp *() const' inline
|-CXXMethodDecl 0x5653e370aa58 <line:791:5, col:36> col:23 used tcp_header 'click_tcp *() const' inline
|-CXXMethodDecl 0x5653e370ab78 <line:792:5, col:36> col:23 udp_header 'click_udp *() const' inline
|-CXXMethodDecl 0x5653e370ac40 <line:795:5, col:73> col:27 buffer_data 'unsigned char *() const' inline
| `-DeprecatedAttr 0x5653e370ace0 <col:62> "" ""
|-AccessSpecDecl 0x5653e370ad50 <line:798:2, col:9> col:2 private
|-CXXConstructorDecl 0x5653e370adb0 <line:800:5, col:31> col:12 WritablePacket 'void ()' inline
| |-CXXCtorInitializer 'Packet'
| | `-CXXConstructExpr 0x5653e370b9a8 <col:12> 'Packet' 'void ()'
| `-CompoundStmt 0x5653e370bbd0 <col:29, col:31>
|-CXXMethodDecl 0x5653e370ae78 <line:802:5, col:28> col:17 initialize 'void ()' inline
|-CXXConstructorDecl 0x5653e370afb8 <line:804:5, col:35> col:5 WritablePacket 'void (const Packet &)'
| `-ParmVarDecl 0x5653e370af28 <col:20, col:34> col:34 x 'const Packet &'
|-CXXDestructorDecl 0x5653e370b0b0 <line:805:5, col:25> col:5 ~WritablePacket 'void () noexcept'
| `-CompoundStmt 0x5653e370bbe0 <col:23, col:25>
|-CXXMethodDecl 0x5653e370b268 <line:808:5, col:56> col:28 pool_allocate 'WritablePacket *(bool)' static
| `-ParmVarDecl 0x5653e370b1a0 <col:42, col:47> col:47 with_data 'bool'
|-CXXMethodDecl 0x5653e370b538 <line:809:5, line:810:24> line:809:28 pool_allocate 'WritablePacket *(uint32_t, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x5653e370b320 <col:42, col:51> col:51 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5653e370b398 <col:61, col:70> col:70 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5653e370b410 <line:810:7, col:16> col:16 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5653e370b6c8 <line:811:5, col:42> col:17 recycle 'void (WritablePacket *)' static
| `-ParmVarDecl 0x5653e370b600 <col:25, col:41> col:41 p 'WritablePacket *'
|-FriendDecl 0x5653e370b7c0 <line:814:5, col:18> col:12 'class Packet':'Packet'
`-CXXConstructorDecl 0x5653e370b828 <line:778:7> col:7 implicit WritablePacket 'void (const WritablePacket &)' inline default noexcept-unevaluated 0x5653e370b828
  `-ParmVarDecl 0x5653e370b938 <col:7> col:7 'const WritablePacket &'

Layout: <CGRecordLayout
  LLVMType:%class.WritablePacket = type { %class.Packet }
  NonVirtualBaseLLVMType:%class.WritablePacket = type { %class.Packet }
  IsZeroInitializable:1
  BitFields:[
]>
