
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct TimerSet::heap_element
         0 |   class Timestamp expiry_s
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   class Timer * t
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct pollfd
         0 |   int fd
         4 |   short events
         6 |   short revents
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct SelectSet::SelectorInfo
         0 |   class Element * read
         8 |   class Element * write
        16 |   int pollfd
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Port
         0 |   int idx
         4 |   int port
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct Router::element_landmark_t
         0 |   uint32_t first_landmarkid
         8 |   class String filename
         8 |     struct String::rep_t _r
         8 |       const char * data
        16 |       int length
        24 |       struct String::memo_t * memo
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<4> >
         0 |   vector_memory<class sized_array_memory<4> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Router::Connection
         0 |   struct Router::Port [2] p
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41e04ba8 prev 0x560a41dfc3f8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x560a41e04ca0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x560a41e04d30 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x560a41e04da8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x560a41e04e68 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x560a41e04f30 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x560a41e050a8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x560a41e04fe0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x560a41e05150 <col:24>
| `-OptimizeNoneAttr 0x560a41e051a8 <col:34>
|-CXXMethodDecl 0x560a41e051f0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x560a41e054a8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x560a41e052a0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x560a41e05318 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x560a41e05398 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x560a41e05560 <line:229:7, col:14> col:7 private
|-FieldDecl 0x560a41e05598 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x560a41e05600 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x560a41e05688 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x560a41e059a8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x560a41e05740 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x560a41e057b8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x560a41e05830 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x560a41e058b0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x560a41e05ac0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x560a41e0c3b8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x560a41e0c3b8
| `-ParmVarDecl 0x560a41e0c4c8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x560a41e0c568 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x560a41e0c568
| `-ParmVarDecl 0x560a41e0c678 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x560a41f6ee88 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<8> >
         0 |   vector_memory<class sized_array_memory<8> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Element *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<unsigned int>
         0 |   class vector_memory<class sized_array_memory<4> > vm_
         0 |     vector_memory<class sized_array_memory<4> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<struct Router::element_landmark_t> >
         0 |   vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::element_landmark_t>
         0 |   class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
         0 |     vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<16> >
         0 |   vector_memory<class sized_array_memory<16> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct Router::Connection>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<void *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Router
         0 |   class Master * _master
         8 |   class atomic_uint32_t _runcount
         8 |     uint32_t _val
        12 |   volatile int _state
    16:0-0 |   _Bool _have_connections
    16:1-1 |   _Bool _conn_sorted
    16:2-2 |   _Bool _have_configuration
        20 |   volatile int _running
        24 |   class atomic_uint32_t _refcount
        24 |     uint32_t _val
        32 |   class Vector<class Element *> _elements
        32 |     class vector_memory<class sized_array_memory<8> > vm_
        32 |       vector_memory<class sized_array_memory<8> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
        48 |   class Vector<class String> _element_names
        48 |     class vector_memory<class typed_array_memory<class String> > vm_
        48 |       vector_memory<class typed_array_memory<class String> >::type * l_
        56 |       vector_memory::size_type n_
        60 |       vector_memory::size_type capacity_
        64 |   class Vector<class String> _element_configurations
        64 |     class vector_memory<class typed_array_memory<class String> > vm_
        64 |       vector_memory<class typed_array_memory<class String> >::type * l_
        72 |       vector_memory::size_type n_
        76 |       vector_memory::size_type capacity_
        80 |   class Vector<unsigned int> _element_landmarkids
        80 |     class vector_memory<class sized_array_memory<4> > vm_
        80 |       vector_memory<class sized_array_memory<4> >::type * l_
        88 |       vector_memory::size_type n_
        92 |       vector_memory::size_type capacity_
        96 |   class Vector<int> _element_home_thread_ids
        96 |     class vector_memory<class sized_array_memory<4> > vm_
        96 |       vector_memory<class sized_array_memory<4> >::type * l_
       104 |       vector_memory::size_type n_
       108 |       vector_memory::size_type capacity_
       112 |   class Vector<struct Router::element_landmark_t> _element_landmarks
       112 |     class vector_memory<class typed_array_memory<struct Router::element_landmark_t> > vm_
       112 |       vector_memory<class typed_array_memory<struct Router::element_landmark_t> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   uint32_t _last_landmarkid
       136 |   class Vector<int> _element_name_sorter
       136 |     class vector_memory<class sized_array_memory<4> > vm_
       136 |       vector_memory<class sized_array_memory<4> >::type * l_
       144 |       vector_memory::size_type n_
       148 |       vector_memory::size_type capacity_
       152 |   Vector<int> [2] _element_gport_offset
       184 |   class Vector<int> _element_configure_order
       184 |     class vector_memory<class sized_array_memory<4> > vm_
       184 |       vector_memory<class sized_array_memory<4> >::type * l_
       192 |       vector_memory::size_type n_
       196 |       vector_memory::size_type capacity_
       200 |   class Vector<struct Router::Connection> _conn
       200 |     class vector_memory<class sized_array_memory<16> > vm_
       200 |       vector_memory<class sized_array_memory<16> >::type * l_
       208 |       vector_memory::size_type n_
       212 |       vector_memory::size_type capacity_
       216 |   class Vector<int> _conn_output_sorter
       216 |     class vector_memory<class sized_array_memory<4> > vm_
       216 |       vector_memory<class sized_array_memory<4> >::type * l_
       224 |       vector_memory::size_type n_
       228 |       vector_memory::size_type capacity_
       232 |   class Vector<class String> _requirements
       232 |     class vector_memory<class typed_array_memory<class String> > vm_
       232 |       vector_memory<class typed_array_memory<class String> >::type * l_
       240 |       vector_memory::size_type n_
       244 |       vector_memory::size_type capacity_
       248 |   class Vector<int> _ehandler_first_by_element
       248 |     class vector_memory<class sized_array_memory<4> > vm_
       248 |       vector_memory<class sized_array_memory<4> >::type * l_
       256 |       vector_memory::size_type n_
       260 |       vector_memory::size_type capacity_
       264 |   class Vector<int> _ehandler_to_handler
       264 |     class vector_memory<class sized_array_memory<4> > vm_
       264 |       vector_memory<class sized_array_memory<4> >::type * l_
       272 |       vector_memory::size_type n_
       276 |       vector_memory::size_type capacity_
       280 |   class Vector<int> _ehandler_next
       280 |     class vector_memory<class sized_array_memory<4> > vm_
       280 |       vector_memory<class sized_array_memory<4> >::type * l_
       288 |       vector_memory::size_type n_
       292 |       vector_memory::size_type capacity_
       296 |   class Vector<int> _handler_first_by_name
       296 |     class vector_memory<class sized_array_memory<4> > vm_
       296 |       vector_memory<class sized_array_memory<4> >::type * l_
       304 |       vector_memory::size_type n_
       308 |       vector_memory::size_type capacity_
       312 |   class Handler ** _handler_bufs
       320 |   int _nhandlers_bufs
       324 |   int _free_handler
       328 |   class Vector<class String> _attachment_names
       328 |     class vector_memory<class typed_array_memory<class String> > vm_
       328 |       vector_memory<class typed_array_memory<class String> >::type * l_
       336 |       vector_memory::size_type n_
       340 |       vector_memory::size_type capacity_
       344 |   class Vector<void *> _attachments
       344 |     class vector_memory<class sized_array_memory<8> > vm_
       344 |       vector_memory<class sized_array_memory<8> >::type * l_
       352 |       vector_memory::size_type n_
       356 |       vector_memory::size_type capacity_
       360 |   class Element * _root_element
       368 |   class String _configuration
       368 |     struct String::rep_t _r
       368 |       const char * data
       376 |       int length
       384 |       struct String::memo_t * memo
       392 |   struct Router::notifier_signals_t * _notifier_signals
       400 |   class HashMap_ArenaFactory * _arena_factory
       408 |   class Router * _hotswap_router
       416 |   class ThreadSched * _thread_sched
       424 |   class NameInfo * _name_info
       432 |   class Vector<int> _flow_code_override_eindex
       432 |     class vector_memory<class sized_array_memory<4> > vm_
       432 |       vector_memory<class sized_array_memory<4> >::type * l_
       440 |       vector_memory::size_type n_
       444 |       vector_memory::size_type capacity_
       448 |   class Vector<class String> _flow_code_override
       448 |     class vector_memory<class typed_array_memory<class String> > vm_
       448 |       vector_memory<class typed_array_memory<class String> >::type * l_
       456 |       vector_memory::size_type n_
       460 |       vector_memory::size_type capacity_
       464 |   class Router * _next_router
           | [sizeof=472, dsize=472, align=8,
           |  nvsize=472, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41b05810 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x560a41b05928 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x560a41b059b8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x560a41b05a88 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x560a41b05b70 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x560a41b05d88 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x560a41b05c30 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a41b05f38 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x560a41b05e40 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x560a41b06080 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x560a41b05ff0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x560a41b061c8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x560a41b06138 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a41b06310 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x560a41b06280 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a41b063d8 <line:67:5, col:28> col:17 used operator++ 'void ()' inline
|-CXXMethodDecl 0x560a41b06520 <line:68:5, col:31> col:17 used operator++ 'void (int)' inline
| `-ParmVarDecl 0x560a41b06490 <col:28> col:31 'int'
|-CXXMethodDecl 0x560a41b065e8 <line:69:5, col:28> col:17 used operator-- 'void ()' inline
|-CXXMethodDecl 0x560a41b06730 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x560a41b066a0 <col:28> col:31 'int'
|-CXXMethodDecl 0x560a41b068a8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x560a41b067e8 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a41b069f0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x560a41b06960 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a41b06ab8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x560a41b06c78 <line:75:5, col:69> col:21 used compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x560a41b06b68 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x560a41b06be0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a41b06ec8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x560a41b06d38 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x560a41b06db0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x560a41b06f78 <col:86> "" ""
|-CXXMethodDecl 0x560a41b071e8 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x560a41b07058 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x560a41b070d0 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a41b07398 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x560a41b072a8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x560a41b07548 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x560a41b07450 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x560a41b07818 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x560a41b07600 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x560a41b07678 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x560a41b076f0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a41b07af8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x560a41b078e0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x560a41b07958 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x560a41b079d0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x560a41b07bb0 <col:115> "" ""
|-AccessSpecDecl 0x560a41b07c20 <line:84:3, col:10> col:3 private
|-FieldDecl 0x560a41b07c58 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a41b08108 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x560a41b08108
| `-ParmVarDecl 0x560a41b08218 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x560a41b082b8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x560a41b082b8
| `-ParmVarDecl 0x560a41b083c8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x560a41b3f0b8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x560a41dc9200 <col:7>
|-CXXConstructorDecl 0x560a41b3f190 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x560a41b3f190
| `-ParmVarDecl 0x560a41b3f2a8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x560a41b3f318 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x560a41b3f318
| `-ParmVarDecl 0x560a41b3f428 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x560a41dcbc00 <col:7> col:7 implicit referenced ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x560a41e37c10 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<8>'
|-CXXRecordDecl 0x560a41e37de8 prev 0x560a41e37c10 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x560a41e37e78 <col:46, col:52> col:46 public
|-TypedefDecl 0x560a41e37ea0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x560a417e0580 'int'
|-TypedefDecl 0x560a41e39a70 <line:13:5, col:31> col:31 type 'typename sized_array_memory<8>::type':'char_array<8>'
| `-ElaboratedType 0x560a41e39a20 'typename sized_array_memory<8>::type' sugar
|   `-TypedefType 0x560a41e38350 'sized_array_memory<8>::type' sugar
|     |-Typedef 0x560a41e38250 'type'
|     `-TemplateSpecializationType 0x560a41e381e0 'char_array<8UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x560a41e380c0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|       |   `-SubstNonTypeTemplateParmExpr 0x560a41e380a0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x560a41e38080 <col:24> 'unsigned long' 8
|       `-RecordType 0x560a41e381c0 'char_array<8>'
|         `-ClassTemplateSpecialization 0x560a41e380e0 'char_array'
|-TypedefDecl 0x560a41e39b28 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<8> >::type *'
| `-PointerType 0x560a41e39af0 'vector_memory<sized_array_memory<8> >::type *'
|   `-TypedefType 0x560a41e39ad0 'vector_memory<sized_array_memory<8> >::type' sugar
|     |-Typedef 0x560a41e39a70 'type'
|     `-ElaboratedType 0x560a41e39a20 'typename sized_array_memory<8>::type' sugar
|       `-TypedefType 0x560a41e38350 'sized_array_memory<8>::type' sugar
|         |-Typedef 0x560a41e38250 'type'
|         `-TemplateSpecializationType 0x560a41e381e0 'char_array<8UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x560a41e380c0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 8
|           |   `-SubstNonTypeTemplateParmExpr 0x560a41e380a0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x560a41e38080 <col:24> 'unsigned long' 8
|           `-RecordType 0x560a41e381c0 'char_array<8>'
|             `-ClassTemplateSpecialization 0x560a41e380e0 'char_array'
|-CXXMethodDecl 0x560a41e39ca8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<8> >::type *) const' inline
| `-ParmVarDecl 0x560a41e39bb8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXConstructorDecl 0x560a41e39d98 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x560a41e39e78 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x560a41e39e78
|-CXXMethodDecl 0x560a41e3a148 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x560a41e3a050 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<8> > &'
|-CXXMethodDecl 0x560a41e3a388 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x560a41e3a200 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x560a41e3a278 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x560a41e3a558 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x560a41e3a448 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x560a41e3a4c0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x560a41e3a6b8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x560a41e3a788 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<8> >::iterator ()'
|-CXXMethodDecl 0x560a41e3a9d8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x560a41e3a848 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x560a41e3a8c0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x560a41e3ac38 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<8> >::iterator (vector_memory<sized_array_memory<8> >::iterator, vector_memory<sized_array_memory<8> >::iterator)'
| |-ParmVarDecl 0x560a41e3aaa8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
| `-ParmVarDecl 0x560a41e3ab20 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<8> >::iterator':'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x560a41e3adf8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x560a41e3ad08 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x560a41e3afb8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<8> >::type *)' inline
| `-ParmVarDecl 0x560a41e3aec0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x560a41e3b070 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x560a41e3b120 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x560a41e3b358 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<8> >::type *)'
| |-ParmVarDecl 0x560a41e3b1d0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x560a41e3b248 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<8> >::type *'
|-CXXMethodDecl 0x560a41e3b5f8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<8> > &)'
| `-ParmVarDecl 0x560a41e3b500 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<8> > &'
|-FieldDecl 0x560a41e3b6c0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<8> >::type *'
|-FieldDecl 0x560a41e3b710 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x560a41e3b760 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x560a41e9e6b8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Element *'
|-CXXRecordDecl 0x560a41ea9028 prev 0x560a41e9e6b8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x560a41eaf580 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Element *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x560a41eaf530 'typename array_memory<Element *>::type' sugar
|   `-TypedefType 0x560a41eaf510 'conditional<true, sized_array_memory<8>, typed_array_memory<Element *> >::type' sugar
|     |-Typedef 0x560a41eaf3c0 'type'
|     `-SubstTemplateTypeParmType 0x560a41e377e0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x560a419feb40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a419feae8 'T'
|       `-RecordType 0x560a41e37330 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x560a41e37248 'sized_array_memory'
|-FieldDecl 0x560a41eaf680 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Element *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x560a41eaf6d0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x560a41eaf708 <line:118:5, col:15> col:15 value_type 'Element *':'Element *'
| `-SubstTemplateTypeParmType 0x560a41ea90c0 'Element *' sugar
|   |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x560a41ae2938 'T'
|   `-PointerType 0x560a41b51f10 'Element *'
|     `-RecordType 0x560a41b43f60 'Element'
|       `-CXXRecord 0x560a41df7e40 'Element'
|-TypedefDecl 0x560a41eaf798 <line:119:5, col:16> col:16 reference 'Element *&'
| `-LValueReferenceType 0x560a41eaf760 'Element *&'
|   `-SubstTemplateTypeParmType 0x560a41ea90c0 'Element *' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-PointerType 0x560a41b51f10 'Element *'
|       `-RecordType 0x560a41b43f60 'Element'
|         `-CXXRecord 0x560a41df7e40 'Element'
|-TypedefDecl 0x560a41eaf858 <line:120:5, col:22> col:22 const_reference 'Element *const &'
| `-LValueReferenceType 0x560a41eaf820 'Element *const &'
|   `-QualType 0x560a41ea90c1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x560a41ea90c0 'Element *' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-PointerType 0x560a41b51f10 'Element *'
|         `-RecordType 0x560a41b43f60 'Element'
|           `-CXXRecord 0x560a41df7e40 'Element'
|-TypedefDecl 0x560a41eaf8e8 <line:121:5, col:16> col:16 pointer 'Element **'
| `-PointerType 0x560a41eaf8b0 'Element **'
|   `-SubstTemplateTypeParmType 0x560a41ea90c0 'Element *' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-PointerType 0x560a41b51f10 'Element *'
|       `-RecordType 0x560a41b43f60 'Element'
|         `-CXXRecord 0x560a41df7e40 'Element'
|-TypedefDecl 0x560a41eaf9a8 <line:122:5, col:22> col:22 const_pointer 'Element *const *'
| `-PointerType 0x560a41eaf970 'Element *const *'
|   `-QualType 0x560a41ea90c1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x560a41ea90c0 'Element *' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-PointerType 0x560a41b51f10 'Element *'
|         `-RecordType 0x560a41b43f60 'Element'
|           `-CXXRecord 0x560a41df7e40 'Element'
|-TypedefDecl 0x560a41eb0580 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Element *>::type':'Element *'
| `-ElaboratedType 0x560a41eb0530 'typename fast_argument<Element *>::type' sugar
|   `-TypedefType 0x560a41eb0510 'fast_argument<Element *, false>::type' sugar
|     |-Typedef 0x560a41eb04a0 'type'
|     `-SubstTemplateTypeParmType 0x560a41eb0260 'Element *' sugar
|       |-TemplateTypeParmType 0x560a41a09100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41a090b0 'T'
|       `-PointerType 0x560a41b51f10 'Element *'
|         `-RecordType 0x560a41b43f60 'Element'
|           `-CXXRecord 0x560a41df7e40 'Element'
|-TypedefDecl 0x560a41eb05e8 <line:126:5, col:22> col:22 const_access_type 'Element *const &'
| `-LValueReferenceType 0x560a41eaf820 'Element *const &'
|   `-QualType 0x560a41ea90c1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x560a41ea90c0 'Element *' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-PointerType 0x560a41b51f10 'Element *'
|         `-RecordType 0x560a41b43f60 'Element'
|           `-CXXRecord 0x560a41df7e40 'Element'
|-TypedefDecl 0x560a41eb0640 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x560a417e0580 'int'
|-TypedefDecl 0x560a41eb06a8 <line:130:5, col:16> col:16 iterator 'Element **'
| `-PointerType 0x560a41eaf8b0 'Element **'
|   `-SubstTemplateTypeParmType 0x560a41ea90c0 'Element *' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-PointerType 0x560a41b51f10 'Element *'
|       `-RecordType 0x560a41b43f60 'Element'
|         `-CXXRecord 0x560a41df7e40 'Element'
|-TypedefDecl 0x560a41eb0710 <line:131:5, col:22> col:22 const_iterator 'Element *const *'
| `-PointerType 0x560a41eaf970 'Element *const *'
|   `-QualType 0x560a41ea90c1 'Element *const' const
|     `-SubstTemplateTypeParmType 0x560a41ea90c0 'Element *' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-PointerType 0x560a41b51f10 'Element *'
|         `-RecordType 0x560a41b43f60 'Element'
|           `-CXXRecord 0x560a41df7e40 'Element'
|-EnumDecl 0x560a41eb0768 <line:134:5> col:5
| `-EnumConstantDecl 0x560a41eb0860 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Element *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x560a41eb0840 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x560a41ae4378 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x560a41ae4350 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x560a41ae4330 <col:40> 'int' 1
|-CXXConstructorDecl 0x560a41eb08e8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x560a41eb0b78 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41eb09a0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41eb0a40 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXConstructorDecl 0x560a41eb0e08 <line:139:5, col:37> col:12 Vector 'void (const Vector<Element *> &)' inline
| `-ParmVarDecl 0x560a41eb0cf0 <col:19, col:36> col:36 x 'const Vector<Element *> &'
|-CXXConstructorDecl 0x560a41eb10c8 <line:141:5, col:32> col:12 Vector 'void (Vector<Element *> &&)' inline
| `-ParmVarDecl 0x560a41eb0fb0 <col:19, col:31> col:31 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x560a41eb13e0 <line:144:5, col:51> col:23 operator= 'Vector<Element *> &(const Vector<Element *> &)' inline
| `-ParmVarDecl 0x560a41eb12c0 <col:33, col:50> col:50 x 'const Vector<Element *> &'
|-CXXMethodDecl 0x560a41eb16f0 <line:146:5, col:46> col:23 operator= 'Vector<Element *> &(Vector<Element *> &&)' inline
| `-ParmVarDecl 0x560a41eb15d0 <col:33, col:45> col:45 x 'Vector<Element *> &&'
|-CXXMethodDecl 0x560a41eb19e0 <line:148:5, col:70> col:23 assign 'Vector<Element *> &(Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41eb1828 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41eb18a0 <col:43, col:69> col:63 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x560a41eb1b38 <line:150:5, col:55> col:49 begin 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x560a41eb1c18 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41eb1c70 <col:30> Inherited
|-CXXMethodDecl 0x560a41eb1cb8 <line:151:5, col:53> col:49 end 'Vector<Element *>::iterator ()'
| |-NoInlineAttr 0x560a41eb1d68 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41eb1dc0 <col:30> Inherited
|-CXXMethodDecl 0x560a41eb1e88 <line:152:5, col:63> col:55 begin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x560a41eb1f38 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41eb1f90 <col:30> Inherited
|-CXXMethodDecl 0x560a41eb1fd8 <line:153:5, col:61> col:55 end 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x560a41eb2088 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41eb20e0 <col:30> Inherited
|-CXXMethodDecl 0x560a41eb2128 <line:154:5, col:64> col:55 cbegin 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x560a41eb21d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41eb2230 <col:30> Inherited
|-CXXMethodDecl 0x560a41eb2278 <line:155:5, col:62> col:55 cend 'Vector<Element *>::const_iterator () const'
| |-NoInlineAttr 0x560a41eb2328 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41eb2380 <col:30> Inherited
|-CXXMethodDecl 0x560a41eb23a8 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x560a41eb2458 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x560a41eb2508 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x560a41eb26c8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41eb25b8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41eb2630 <col:37, col:63> col:57 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x560a41eb2818 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x560a41eb2788 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41eb29c8 <line:163:5, col:65> col:43 operator[] 'Element *&(Vector::size_type)'
| |-ParmVarDecl 0x560a41eb28d0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x560a41eb2a80 <col:20>
| `-OptimizeNoneAttr 0x560a41eb2ad8 <col:30>
|-CXXMethodDecl 0x560a41eb2bf8 <line:164:5, col:73> col:49 operator[] 'Element *const &(Vector::size_type) const'
| |-ParmVarDecl 0x560a41eb2b00 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x560a41eb2cb0 <col:20>
| `-OptimizeNoneAttr 0x560a41eb2d08 <col:30>
|-CXXMethodDecl 0x560a41eb2dc0 <line:165:5, col:29> col:15 at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x560a41eb2d30 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41eb2f08 <line:166:5, col:37> col:21 at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x560a41eb2e78 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41eb3038 <line:167:5, col:21> col:15 front 'Element *&()' inline
|-CXXMethodDecl 0x560a41eb3168 <line:168:5, col:29> col:21 front 'Element *const &() const' inline
|-CXXMethodDecl 0x560a41eb3238 <line:169:5, col:20> col:15 back 'Element *&()' inline
|-CXXMethodDecl 0x560a41eb3308 <line:170:5, col:28> col:21 back 'Element *const &() const' inline
|-CXXMethodDecl 0x560a41eb3448 <line:172:5, col:39> col:15 unchecked_at 'Element *&(Vector::size_type)' inline
| `-ParmVarDecl 0x560a41eb33b8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41eb3590 <line:173:5, col:47> col:21 unchecked_at 'Element *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x560a41eb3500 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41eb36d8 <line:174:5, col:59> col:15 at_u 'Element *&(Vector::size_type)' inline
| |-ParmVarDecl 0x560a41eb3648 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x560a41eb3790 <col:48> Inherited "" ""
|-CXXMethodDecl 0x560a41eb3890 <line:175:5, col:71> col:21 at_u 'Element *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x560a41eb3800 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x560a41eb3948 <col:60> Inherited "" ""
|-CXXMethodDecl 0x560a41eb3a08 <line:177:5, col:20> col:15 data 'Element **()' inline
|-CXXMethodDecl 0x560a41eb3b08 <line:178:5, col:28> col:21 data 'Element *const *() const' inline
|-CXXMethodDecl 0x560a41eb3c88 <line:180:5, col:48> col:17 push_back 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x560a41eb3bc8 <col:27, col:47> col:47 v 'Vector<Element *>::value_argument_type':'Element *'
|-FunctionTemplateDecl 0x560a41eb4448 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x560a41eb3d40 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Element *>':'fast_argument<Element *, false>'
| `-CXXMethodDecl 0x560a41eb43a8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Element *&&)' inline
|   `-ParmVarDecl 0x560a41eb42a8 <col:58, col:62> col:62 v 'Element *&&'
|-CXXMethodDecl 0x560a41eb4528 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x560a41eb4678 <line:186:5, col:49> col:17 push_front 'void (Vector<Element *>::value_argument_type)' inline
| `-ParmVarDecl 0x560a41eb45e8 <col:28, col:48> col:48 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x560a41eb4730 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x560a41eb4978 <line:189:5, col:62> col:21 insert 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41eb47f0 <col:28, col:37> col:37 it 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x560a41eb4868 <col:41, col:61> col:61 v 'Vector<Element *>::value_argument_type':'Element *'
|-CXXMethodDecl 0x560a41eb4b38 <line:190:5, col:38> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator)' inline
| `-ParmVarDecl 0x560a41eb4a48 <col:27, col:36> col:36 it 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x560a41eb4d88 <line:191:5, col:49> col:21 erase 'Vector<Element *>::iterator (Vector<Element *>::iterator, Vector<Element *>::iterator)' inline
| |-ParmVarDecl 0x560a41eb4c00 <col:27, col:36> col:36 a 'Vector<Element *>::iterator':'Element **'
| `-ParmVarDecl 0x560a41eb4c78 <col:39, col:48> col:48 b 'Vector<Element *>::iterator':'Element **'
|-CXXMethodDecl 0x560a41eb4e48 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x560a41eb50a8 <line:195:5, col:34> col:17 swap 'void (Vector<Element *> &)' inline
| `-ParmVarDecl 0x560a41eb4fb0 <col:22, col:33> col:33 x 'Vector<Element *> &'
`-CXXDestructorDecl 0x560a41eb5178 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x560a41eb5178

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41b19c00 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x560a41b19d18 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x560a41b19db8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x560a41b19e18 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x560a41b19e78 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x560a41b19f28 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41b1a230 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x560a41b1a348 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x560a41b1a3f0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x560a41b1a458 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x560a41b1a4e8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x560a41b203e0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x560a41b20818 <col:12>
|-CXXConstructorDecl 0x560a41b204e8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x560a41b205f8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x560a41b1a3f0 'data' 'const char *'
| | `-ImplicitCastExpr 0x560a41b22da0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x560a41b22d70 <col:12> 'const char *const' lvalue .data 0x560a41b1a3f0
| |     `-DeclRefExpr 0x560a41b22d50 <col:12> 'const String::rep_t' lvalue ParmVar 0x560a41b205f8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x560a41b1a458 'length' 'int'
| | `-ImplicitCastExpr 0x560a41b22e30 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x560a41b22e00 <col:12> 'const int' lvalue .length 0x560a41b1a458
| |     `-DeclRefExpr 0x560a41b22de0 <col:12> 'const String::rep_t' lvalue ParmVar 0x560a41b205f8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x560a41b1a4e8 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x560a41b22ec0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x560a41b22e90 <col:12> 'String::memo_t *const' lvalue .memo 0x560a41b1a4e8
| |     `-DeclRefExpr 0x560a41b22e70 <col:12> 'const String::rep_t' lvalue ParmVar 0x560a41b205f8 '' 'const String::rep_t &'
| `-CompoundStmt 0x560a41b22f18 <col:12>
|-CXXConstructorDecl 0x560a41b20698 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x560a41b20698
| `-ParmVarDecl 0x560a41b207a8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x560a41b25c90 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x560a41b316c8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x560a41b317d8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x560a41b31cf0 <col:12>
|   |-BinaryOperator 0x560a41b31b08 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x560a41b31ac0 <col:12> 'const char *' lvalue ->data 0x560a41b1a3f0
|   | | `-CXXThisExpr 0x560a41b31ab0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x560a41b31af0 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x560a41b31a80 <col:12> 'const char *const' lvalue .data 0x560a41b1a3f0
|   |     `-DeclRefExpr 0x560a41b31a60 <col:12> 'const String::rep_t' lvalue ParmVar 0x560a41b317d8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x560a41b31bd0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x560a41b31b88 <col:12> 'int' lvalue ->length 0x560a41b1a458
|   | | `-CXXThisExpr 0x560a41b31b78 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x560a41b31bb8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x560a41b31b48 <col:12> 'const int' lvalue .length 0x560a41b1a458
|   |     `-DeclRefExpr 0x560a41b31b28 <col:12> 'const String::rep_t' lvalue ParmVar 0x560a41b317d8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x560a41b31c98 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x560a41b31c50 <col:12> 'String::memo_t *' lvalue ->memo 0x560a41b1a4e8
|   | | `-CXXThisExpr 0x560a41b31c40 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x560a41b31c80 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x560a41b31c10 <col:12> 'String::memo_t *const' lvalue .memo 0x560a41b1a4e8
|   |     `-DeclRefExpr 0x560a41b31bf0 <col:12> 'const String::rep_t' lvalue ParmVar 0x560a41b317d8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x560a41b31ce0 <col:12>
|     `-UnaryOperator 0x560a41b31cc8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x560a41b31cb8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x560a41b31848 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x560a41b31848
  `-ParmVarDecl 0x560a41b31958 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41b110e0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x560a41b111f8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x560a41b11288 <col:16, col:22> col:16 public
|-TypedefDecl 0x560a41b112c8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x560a417e0fd0 'const char *'
|   `-QualType 0x560a417e0521 'const char' const
|     `-BuiltinType 0x560a417e0520 'char'
|-TypedefDecl 0x560a41b11350 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x560a41b11320 'String::const_iterator' sugar
|   |-Typedef 0x560a41b112c8 'const_iterator'
|   `-PointerType 0x560a417e0fd0 'const char *'
|     `-QualType 0x560a417e0521 'const char' const
|       `-BuiltinType 0x560a417e0520 'char'
|-TypedefDecl 0x560a41b114c0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x560a41b11430 'int (String::*)() const'
|   |-RecordType 0x560a41b11170 'String'
|   | `-CXXRecord 0x560a41b110e0 'String'
|   `-ParenType 0x560a41b113d0 'int () const' sugar
|     `-FunctionProtoType 0x560a41ae5fb0 'int () const' const cdecl
|       `-BuiltinType 0x560a417e0580 'int'
|-TypedefDecl 0x560a41b11528 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x560a4193aa20 'int64_t' sugar
|   |-Typedef 0x560a41849390 'int64_t'
|   `-TypedefType 0x560a41822630 '__int64_t' sugar
|     |-Typedef 0x560a41822208 '__int64_t'
|     `-BuiltinType 0x560a417e05a0 'long'
|-TypedefDecl 0x560a41b11590 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x560a4193a940 'uint64_t' sugar
|   |-Typedef 0x560a41849530 'uint64_t'
|   `-TypedefType 0x560a418226c0 '__uint64_t' sugar
|     |-Typedef 0x560a41822278 '__uint64_t'
|     `-BuiltinType 0x560a417e0640 'unsigned long'
|-TypedefDecl 0x560a41b11620 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x560a41b115f0 'String::intmax_t' sugar
|   |-Typedef 0x560a41b11528 'intmax_t'
|   `-TypedefType 0x560a4193aa20 'int64_t' sugar
|     |-Typedef 0x560a41849390 'int64_t'
|     `-TypedefType 0x560a41822630 '__int64_t' sugar
|       |-Typedef 0x560a41822208 '__int64_t'
|       `-BuiltinType 0x560a417e05a0 'long'
|-TypedefDecl 0x560a41b116b0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x560a41b11680 'String::uintmax_t' sugar
|   |-Typedef 0x560a41b11590 'uintmax_t'
|   `-TypedefType 0x560a4193a940 'uint64_t' sugar
|     |-Typedef 0x560a41849530 'uint64_t'
|     `-TypedefType 0x560a418226c0 '__uint64_t' sugar
|       |-Typedef 0x560a41822278 '__uint64_t'
|       `-BuiltinType 0x560a417e0640 'unsigned long'
|-CXXConstructorDecl 0x560a41b11770 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x560a41b11918 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x560a41b11858 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x560a41b11ac8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x560a41b11a08 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x560a41b11c20 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x560a41b11b90 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x560a41b11e38 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x560a41b11ce8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x560a41b11d68 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x560a41b12058 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x560a41b11f08 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x560a41b11f88 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x560a41b12278 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x560a41b12128 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x560a41b121a8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x560a41b12498 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x560a41b12348 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x560a41b123c8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x560a41b12628 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x560a41b12560 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x560a41b127a8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x560a41b126e8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x560a41b12938 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x560a41b12870 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x560a41b12a90 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x560a41b12a00 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x560a41b12be8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x560a41b12b58 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x560a41b12d40 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x560a41b12cb0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x560a41b12ec8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x560a41b12e08 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x560a41b13058 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x560a41b12f90 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x560a41b131e8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x560a41b13120 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x560a41b13378 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x560a41b132b0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x560a41b13470 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x560a41b13598 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x560a41b13718 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x560a41b13650 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x560a41b13868 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x560a41b137d8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x560a41b13910 <col:63> "" ""
|-CXXMethodDecl 0x560a41b13a58 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x560a41b13998 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x560a41b13c68 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x560a41b13b18 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x560a41b13b98 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x560a41b13ed8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x560a41b13d30 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x560a41b13e00 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x560a41b141b8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x560a41b13f98 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x560a41b14018 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x560a41b1feb0 <col:55> 'int' 10
| `-ParmVarDecl 0x560a41b14090 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x560a41b1fed0 <col:76> 'bool' true
|-CXXMethodDecl 0x560a41b14498 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x560a41b14280 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x560a41b14300 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x560a41b1fee0 <col:56> 'int' 10
| `-ParmVarDecl 0x560a41b14378 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x560a41b1ff00 <col:77> 'bool' true
|-CXXMethodDecl 0x560a41b145a0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x560a41b14668 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x560a41b14730 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x560a41b147d0 <col:20>
| `-OptimizeNoneAttr 0x560a41b14828 <col:30>
|-CXXConversionDecl 0x560a41b14918 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x560a41b149e8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x560a41b14aa8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x560a41b14b98 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x560a41b14c58 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x560a41b14dd8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x560a41b14d10 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x560a41b14f28 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x560a41b14e98 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x560a41b15018 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x560a41b150d8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x560a41b15328 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x560a41b15190 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x560a41b15210 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x560a41b15588 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x560a41b153f0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x560a41b15470 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x560a41b15658 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x560a41b15868 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x560a41b15710 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x560a41b15790 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x560a41b15a88 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x560a41b15930 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x560a41b159b0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x560a41b15c18 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x560a41b15b50 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x560a41b15d08 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x560a41b15e78 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x560a41b15db8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x560a41b16088 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x560a41b15f38 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x560a41b15fb8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x560a41b162a0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x560a41b16148 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x560a41b161c0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x560a41b16430 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x560a41b16360 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x560a41b16650 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x560a41b164f0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x560a41b16570 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x560a41b167a0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x560a41b16710 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x560a41b16978 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x560a41b16860 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x560a41b168e0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x560a41b16ac8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x560a41b16a38 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x560a41b16ce0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x560a41b16b80 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x560a41b16c00 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x560a41b1ff10 <col:39> 'int' 0
|-CXXMethodDecl 0x560a41b16f00 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x560a41b16da0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x560a41b16e20 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x560a41b1ff30 <col:48> 'int' 0
|-CXXMethodDecl 0x560a41b170e0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x560a41b16fc0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x560a41b17040 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x560a41b1ff50 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x560a41b171b0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x560a41b17270 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x560a41b17330 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x560a41b173f0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x560a41b174b0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x560a41b17658 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x560a41b17560 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x560a41b177d8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x560a41b17710 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x560a41b17958 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x560a41b17898 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x560a41b17ad8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x560a41b17a10 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x560a41b17c20 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x560a41b17b90 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x560a41b17e10 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x560a41b17ce0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x560a41b17fe8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x560a41b17ed0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x560a41b17f50 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x560a41b181c8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x560a41b180b0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x560a41b18130 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x560a41b18318 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x560a41b18288 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x560a41b18528 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x560a41b183d8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x560a41b18458 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x560a41b18688 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x560a41b185f0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x560a41b187e0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x560a41b18748 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x560a41b18888 <col:57> "" ""
|-CXXMethodDecl 0x560a41b18998 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x560a41b18908 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x560a41b18ae8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x560a41b18a58 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x560a41b18c68 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x560a41b18ba0 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x560a41b18d30 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x560a41b18df0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x560a41b18eb0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x560a41b18f50 <col:49> "" ""
|-CXXMethodDecl 0x560a41b18fe0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x560a41b190a0 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x560a41b19190 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x560a41b19258 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x560a41b19318 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x560a41b193d8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x560a41b194d0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x560a41b19598 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x560a41b19660 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x560a41b19838 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x560a41b19718 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x560a41b19798 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x560a41b19a60 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x560a41b19900 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x560a41b19980 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x560a41b19b70 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x560a41b19bd8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x560a41b19c00 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x560a41b19d18 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x560a41b19db8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x560a41b19e18 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x560a41b19e78 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x560a41b19f28 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x560a41b19f90 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x560a41b1a1c8 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x560a41b1a218 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a41b1a1a8 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x560a41b1a0b8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x560a41b1a060 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x560a41b1a0a0 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x560a41b1a080 <col:32> 'int' 8
|-CXXRecordDecl 0x560a41b1a230 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x560a41b1a348 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x560a41b1a3f0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x560a41b1a458 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x560a41b1a4e8 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x560a41b203e0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x560a41b20818 <col:12>
| |-CXXConstructorDecl 0x560a41b204e8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x560a41b205f8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x560a41b1a3f0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x560a41b22da0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x560a41b22d70 <col:12> 'const char *const' lvalue .data 0x560a41b1a3f0
| | |     `-DeclRefExpr 0x560a41b22d50 <col:12> 'const String::rep_t' lvalue ParmVar 0x560a41b205f8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x560a41b1a458 'length' 'int'
| | | `-ImplicitCastExpr 0x560a41b22e30 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x560a41b22e00 <col:12> 'const int' lvalue .length 0x560a41b1a458
| | |     `-DeclRefExpr 0x560a41b22de0 <col:12> 'const String::rep_t' lvalue ParmVar 0x560a41b205f8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x560a41b1a4e8 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x560a41b22ec0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x560a41b22e90 <col:12> 'String::memo_t *const' lvalue .memo 0x560a41b1a4e8
| | |     `-DeclRefExpr 0x560a41b22e70 <col:12> 'const String::rep_t' lvalue ParmVar 0x560a41b205f8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x560a41b22f18 <col:12>
| |-CXXConstructorDecl 0x560a41b20698 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x560a41b20698
| | `-ParmVarDecl 0x560a41b207a8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x560a41b25c90 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x560a41b316c8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x560a41b317d8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x560a41b31cf0 <col:12>
| |   |-BinaryOperator 0x560a41b31b08 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x560a41b31ac0 <col:12> 'const char *' lvalue ->data 0x560a41b1a3f0
| |   | | `-CXXThisExpr 0x560a41b31ab0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x560a41b31af0 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x560a41b31a80 <col:12> 'const char *const' lvalue .data 0x560a41b1a3f0
| |   |     `-DeclRefExpr 0x560a41b31a60 <col:12> 'const String::rep_t' lvalue ParmVar 0x560a41b317d8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x560a41b31bd0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x560a41b31b88 <col:12> 'int' lvalue ->length 0x560a41b1a458
| |   | | `-CXXThisExpr 0x560a41b31b78 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x560a41b31bb8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x560a41b31b48 <col:12> 'const int' lvalue .length 0x560a41b1a458
| |   |     `-DeclRefExpr 0x560a41b31b28 <col:12> 'const String::rep_t' lvalue ParmVar 0x560a41b317d8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x560a41b31c98 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x560a41b31c50 <col:12> 'String::memo_t *' lvalue ->memo 0x560a41b1a4e8
| |   | | `-CXXThisExpr 0x560a41b31c40 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x560a41b31c80 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x560a41b31c10 <col:12> 'String::memo_t *const' lvalue .memo 0x560a41b1a4e8
| |   |     `-DeclRefExpr 0x560a41b31bf0 <col:12> 'const String::rep_t' lvalue ParmVar 0x560a41b317d8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x560a41b31ce0 <col:12>
| |     `-UnaryOperator 0x560a41b31cc8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x560a41b31cb8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x560a41b31848 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x560a41b31848
|   `-ParmVarDecl 0x560a41b31958 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x560a41b1a560 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x560a41b1a7a8 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x560a41b1a5c8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x560a41b1a648 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x560a41b1a6c0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x560a41b203a0 <col:79, line:261:5>
|   |-BinaryOperator 0x560a41b20018 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x560a41b1ffb0 <col:2, col:5> 'const char *' lvalue .data 0x560a41b1a3f0
|   | | `-MemberExpr 0x560a41b1ff80 <col:2> 'String::rep_t' lvalue ->_r 0x560a41b1a560
|   | |   `-CXXThisExpr 0x560a41b1ff70 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x560a41b20000 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x560a41b1ffe0 <col:12> 'const char *' lvalue ParmVar 0x560a41b1a5c8 'data' 'const char *'
|   |-BinaryOperator 0x560a41b200e0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x560a41b20078 <col:2, col:5> 'int' lvalue .length 0x560a41b1a458
|   | | `-MemberExpr 0x560a41b20048 <col:2> 'String::rep_t' lvalue ->_r 0x560a41b1a560
|   | |   `-CXXThisExpr 0x560a41b20038 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x560a41b200c8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x560a41b200a8 <col:14> 'int' lvalue ParmVar 0x560a41b1a648 'length' 'int'
|   `-IfStmt 0x560a41b20388 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x560a41b20200 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x560a41b201e8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x560a41b201c8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x560a41b201a8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x560a41b20140 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x560a41b1a4e8
|     |       | `-MemberExpr 0x560a41b20110 <col:7> 'String::rep_t' lvalue ->_r 0x560a41b1a560
|     |       |   `-CXXThisExpr 0x560a41b20100 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x560a41b20190 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x560a41b20170 <col:17> 'String::memo_t *' lvalue ParmVar 0x560a41b1a6c0 'memo' 'String::memo_t *'
|     `-CallExpr 0x560a41b20360 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x560a41b20348 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x560a41b20250 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x560a41b0b1a0 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x560a41b202b8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x560a41b19db8
|         `-ImplicitCastExpr 0x560a41b202a0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x560a41b20280 <col:27> 'String::memo_t *' lvalue ParmVar 0x560a41b1a6c0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x560a41b1aa58 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x560a41b1a878 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x560a41b1a8f8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x560a41b1a970 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x560a41b1a560 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x560a41b20828 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x560a41b209b8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x560a41b20920 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x560a41b20890 <col:2> '<bound member function type>' ->assign_memo 0x560a41b1a7a8
|     | `-ImplicitCastExpr 0x560a41b20958 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x560a41b20880 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x560a41b20970 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x560a41b208c0 <col:14> 'const char *' lvalue ParmVar 0x560a41b1a878 'data' 'const char *'
|     |-ImplicitCastExpr 0x560a41b20988 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x560a41b208e0 <col:20> 'int' lvalue ParmVar 0x560a41b1a8f8 'length' 'int'
|     `-ImplicitCastExpr 0x560a41b209a0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x560a41b20900 <col:28> 'String::memo_t *' lvalue ParmVar 0x560a41b1a970 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x560a41b1abe8 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x560a41b1ab28 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x560a41b20c10 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x560a41b20b90 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x560a41b209e0 <col:2> '<bound member function type>' ->assign_memo 0x560a41b1a7a8
|     | `-CXXThisExpr 0x560a41b209d0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x560a41b20bc8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x560a41b20a60 <col:14, col:19> 'const char *' lvalue .data 0x560a41b1a3f0
|     |   `-MemberExpr 0x560a41b20a30 <col:14, col:16> 'String::rep_t' lvalue ._r 0x560a41b1a560
|     |     `-DeclRefExpr 0x560a41b20a10 <col:14> 'const String' lvalue ParmVar 0x560a41b1ab28 'x' 'const String &'
|     |-ImplicitCastExpr 0x560a41b20be0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x560a41b20ae0 <col:25, col:30> 'int' lvalue .length 0x560a41b1a458
|     |   `-MemberExpr 0x560a41b20ab0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x560a41b1a560
|     |     `-DeclRefExpr 0x560a41b20a90 <col:25> 'const String' lvalue ParmVar 0x560a41b1ab28 'x' 'const String &'
|     `-ImplicitCastExpr 0x560a41b20bf8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x560a41b20b60 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x560a41b1a4e8
|         `-MemberExpr 0x560a41b20b30 <col:38, col:40> 'String::rep_t' lvalue ._r 0x560a41b1a560
|           `-DeclRefExpr 0x560a41b20b10 <col:38> 'const String' lvalue ParmVar 0x560a41b1ab28 'x' 'const String &'
|-CXXMethodDecl 0x560a41b1acb0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x560a41b215d0 <col:31, line:278:5>
|   `-IfStmt 0x560a41b215b8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x560a41b20cb0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x560a41b20c98 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x560a41b20c68 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x560a41b1a4e8
|     |     `-MemberExpr 0x560a41b20c38 <col:6> 'String::rep_t' lvalue ->_r 0x560a41b1a560
|     |       `-CXXThisExpr 0x560a41b20c28 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x560a41b21590 <col:15, line:277:2>
|       |-ParenExpr 0x560a41b21160 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x560a41b21130 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x560a41b20dc0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x560a41b20da8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x560a41b20d90 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x560a41b20d50 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x560a41b19db8
|       |   |       `-ImplicitCastExpr 0x560a41b20d38 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x560a41b20d08 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x560a41b1a4e8
|       |   |           `-MemberExpr 0x560a41b20cd8 <col:27> 'String::rep_t' lvalue ->_r 0x560a41b1a560
|       |   |             `-CXXThisExpr 0x560a41b20cc8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x560a41b20e20 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x560a41b20e00 <col:54> 'int' 0
|       |   `-CallExpr 0x560a41b21090 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x560a41b21078 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x560a41b20ff8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a41881230 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x560a41b210d0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x560a41b20f08 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x560a41b210e8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x560a41b20f38 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x560a41b21100 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x560a41b20f70 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x560a41b21118 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x560a41b20fe0 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x560a41b20fc8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x560a41b20f90 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x560a41b214b0 <line:274:6, line:275:22>
|       | |-CallExpr 0x560a41b21370 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x560a41b21358 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x560a41b212d0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x560a41b0c5e0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x560a41b212a0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x560a41b19db8
|       | |   `-ImplicitCastExpr 0x560a41b21288 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x560a41b21258 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x560a41b1a4e8
|       | |       `-MemberExpr 0x560a41b21228 <col:40> 'String::rep_t' lvalue ->_r 0x560a41b1a560
|       | |         `-CXXThisExpr 0x560a41b21218 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x560a41b21470 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x560a41b21458 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x560a41b21398 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x560a41b1b988 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x560a41b21498 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x560a41b213f8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x560a41b1a4e8
|       |       `-MemberExpr 0x560a41b213c8 <col:15> 'String::rep_t' lvalue ->_r 0x560a41b1a560
|       |         `-CXXThisExpr 0x560a41b213b8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x560a41b21570 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x560a41b21508 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x560a41b1a4e8
|         | `-MemberExpr 0x560a41b214d8 <col:6> 'String::rep_t' lvalue ->_r 0x560a41b1a560
|         |   `-CXXThisExpr 0x560a41b214c8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x560a41b21558 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x560a41b21538 <col:16> 'int' 0
|-CXXMethodDecl 0x560a41b1af48 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x560a41b1ad68 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x560a41b1ade8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x560a41b1ae60 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x560a41b1b020 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x560a41b1b270 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x560a41b1b0d8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x560a41b1b158 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x560a41b1b1d0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x560a41b1b458 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x560a41b1b340 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x560a41b1b3c0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x560a41b1b558 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x560a41b216a8 <col:41, line:286:5>
|   `-ReturnStmt 0x560a41b21698 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x560a41b21668 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x560a41b21630 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x560a41b21618 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x560a41b215f8 <col:46> 'int' 1
|-CXXMethodDecl 0x560a41b1b7f8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x560a41b1b610 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x560a41b1b690 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x560a41b1b710 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x560a41b1b988 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x560a41b1b8c0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x560a41b1ba58 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x560a41b1bc28 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x560a41b1bb10 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x560a41b1bb90 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x560a41b1bce8 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x560a41b1f710 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x560a41b1f818 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x560a41b1f890 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x560a41b1f908 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x560a41b1f970 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x560a41b1fa70 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x560a41b1fac0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a41b1fa50 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x560a41b1fa30 <col:22> 'int' 14
|-CXXMethodDecl 0x560a41b1fcd8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x560a41b1faf0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x560a41b1fb70 <col:38> col:41 'int'
| `-ParmVarDecl 0x560a41b1fbf0 <col:43> col:46 'int'
|-FriendDecl 0x560a41b1fde0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x560a41b1fe70 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x560a41b636b0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x560a41b63888 prev 0x560a41b636b0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x560a41b63918 <col:46, col:52> col:46 public
|-TypedefDecl 0x560a41b63940 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x560a417e0580 'int'
|-TypedefDecl 0x560a41b65a40 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x560a41b659f0 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x560a41b659d0 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x560a41b63b58 'type'
|     `-SubstTemplateTypeParmType 0x560a41b63b20 'String' sugar
|       |-TemplateTypeParmType 0x560a41ad5c60 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ad5c10 'T'
|       `-RecordType 0x560a41b11170 'String'
|         `-CXXRecord 0x560a41b110e0 'String'
|-TypedefDecl 0x560a41b65af8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x560a41b65ac0 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x560a41b65aa0 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x560a41b65a40 'type'
|     `-ElaboratedType 0x560a41b659f0 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x560a41b659d0 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x560a41b63b58 'type'
|         `-SubstTemplateTypeParmType 0x560a41b63b20 'String' sugar
|           |-TemplateTypeParmType 0x560a41ad5c60 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x560a41ad5c10 'T'
|           `-RecordType 0x560a41b11170 'String'
|             `-CXXRecord 0x560a41b110e0 'String'
|-CXXMethodDecl 0x560a41b65c78 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x560a41b65b88 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x560a41b65d68 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x560a41b65e48 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x560a41b65e48
|-CXXMethodDecl 0x560a41b66118 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x560a41b66020 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x560a41b66358 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x560a41b661d0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x560a41b66248 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x560a41b66528 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x560a41b66418 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x560a41b66490 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x560a41b66688 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x560a41b66758 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x560a41b669a8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x560a41b66818 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x560a41b66890 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x560a41b66c08 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x560a41b66a78 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x560a41b66af0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x560a41b66dc8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x560a41b66cd8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x560a41b66f88 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x560a41b66e90 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x560a41b67040 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x560a41b670f0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x560a41b67328 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x560a41b671a0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x560a41b67218 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x560a41b675c8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x560a41b674d0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x560a41b67690 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x560a41b676e0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x560a41b67730 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x560a41b45510 <../dummy_inc/click/vector.hh:110:1, line:197:1> line:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x560a41b62118 prev 0x560a41b45510 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x560a41b63620 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x560a41b635d0 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x560a41b635b0 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x560a41b63460 'type'
|     `-SubstTemplateTypeParmType 0x560a41b632f0 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x560a419ff2c0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x560a419ff268 'F'
|       `-RecordType 0x560a41b62f50 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x560a41b62e70 'typed_array_memory'
|-FieldDecl 0x560a41b67780 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x560a41b677d0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x560a41b67808 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x560a41b621b0 'String' sugar
|   |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x560a41ae2938 'T'
|   `-RecordType 0x560a41b11170 'String'
|     `-CXXRecord 0x560a41b110e0 'String'
|-TypedefDecl 0x560a41b67898 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x560a41b67860 'String &'
|   `-SubstTemplateTypeParmType 0x560a41b621b0 'String' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-RecordType 0x560a41b11170 'String'
|       `-CXXRecord 0x560a41b110e0 'String'
|-TypedefDecl 0x560a41b67928 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x560a41b678f0 'const String &'
|   `-QualType 0x560a41b621b1 'const String' const
|     `-SubstTemplateTypeParmType 0x560a41b621b0 'String' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-RecordType 0x560a41b11170 'String'
|         `-CXXRecord 0x560a41b110e0 'String'
|-TypedefDecl 0x560a41b679b8 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x560a41b67980 'String *'
|   `-SubstTemplateTypeParmType 0x560a41b621b0 'String' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-RecordType 0x560a41b11170 'String'
|       `-CXXRecord 0x560a41b110e0 'String'
|-TypedefDecl 0x560a41b67a48 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x560a41b67a10 'const String *'
|   `-QualType 0x560a41b621b1 'const String' const
|     `-SubstTemplateTypeParmType 0x560a41b621b0 'String' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-RecordType 0x560a41b11170 'String'
|         `-CXXRecord 0x560a41b110e0 'String'
|-TypedefDecl 0x560a41b686a0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x560a41b68650 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x560a41b68630 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x560a41b68568 'type'
|     `-LValueReferenceType 0x560a41b68530 'const String &'
|       `-QualType 0x560a41b682d1 'const String' const
|         `-SubstTemplateTypeParmType 0x560a41b682d0 'String' sugar
|           |-TemplateTypeParmType 0x560a41a077c0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x560a41a07768 'T'
|           `-RecordType 0x560a41b11170 'String'
|             `-CXXRecord 0x560a41b110e0 'String'
|-TypedefDecl 0x560a41b68708 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x560a41b678f0 'const String &'
|   `-QualType 0x560a41b621b1 'const String' const
|     `-SubstTemplateTypeParmType 0x560a41b621b0 'String' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-RecordType 0x560a41b11170 'String'
|         `-CXXRecord 0x560a41b110e0 'String'
|-TypedefDecl 0x560a41b68760 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x560a417e0580 'int'
|-TypedefDecl 0x560a41b687c8 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x560a41b67980 'String *'
|   `-SubstTemplateTypeParmType 0x560a41b621b0 'String' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-RecordType 0x560a41b11170 'String'
|       `-CXXRecord 0x560a41b110e0 'String'
|-TypedefDecl 0x560a41b68830 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x560a41b67a10 'const String *'
|   `-QualType 0x560a41b621b1 'const String' const
|     `-SubstTemplateTypeParmType 0x560a41b621b0 'String' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-RecordType 0x560a41b11170 'String'
|         `-CXXRecord 0x560a41b110e0 'String'
|-EnumDecl 0x560a41b68888 <line:134:5> col:5
| `-EnumConstantDecl 0x560a41b68980 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x560a41b68960 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x560a41ae4378 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x560a41ae4350 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x560a41ae4330 <col:40> 'int' 1
|-CXXConstructorDecl 0x560a41b68a08 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x560a41b68c98 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41b68ac0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41b68b60 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x560a41b68f28 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x560a41b68e10 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x560a41b691e8 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x560a41b690d0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x560a41b69ed0 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x560a41b69db0 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x560a41b6a1e0 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x560a41b6a0c0 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x560a41b6a4d0 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41b6a318 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41b6a390 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x560a41b6a5f8 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x560a41b6a6a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41b6a700 <col:30> Inherited
|-CXXMethodDecl 0x560a41b6a748 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x560a41b6a7f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41b6a850 <col:30> Inherited
|-CXXMethodDecl 0x560a41b6a918 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x560a41b6a9c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41b6aa20 <col:30> Inherited
|-CXXMethodDecl 0x560a41b6aa68 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x560a41b6ab18 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41b6ab70 <col:30> Inherited
|-CXXMethodDecl 0x560a41b6abb8 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x560a41b6ac68 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41b6acc0 <col:30> Inherited
|-CXXMethodDecl 0x560a41b6ad08 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x560a41b6adb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41b6ae10 <col:30> Inherited
|-CXXMethodDecl 0x560a41b6ae38 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x560a41b6aee8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x560a41b6af98 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x560a41b6b158 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41b6b048 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41b6b0c0 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x560a41b6b2a8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x560a41b6b218 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41b6b458 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x560a41b6b360 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x560a41b6b510 <col:20>
| `-OptimizeNoneAttr 0x560a41b6b568 <col:30>
|-CXXMethodDecl 0x560a41b6b688 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x560a41b6b590 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x560a41b6b740 <col:20>
| `-OptimizeNoneAttr 0x560a41b6b798 <col:30>
|-CXXMethodDecl 0x560a41b6b850 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x560a41b6b7c0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41b6b998 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x560a41b6b908 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41b6bac8 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x560a41b6bbf8 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x560a41b6bcc8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x560a41b6bd98 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x560a41b6bed8 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x560a41b6be48 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41b6c020 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x560a41b6bf90 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41b6c168 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x560a41b6c0d8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x560a41b6c220 <col:48> Inherited "" ""
|-CXXMethodDecl 0x560a41b6c320 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x560a41b6c290 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x560a41b6c3d8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x560a41b6c498 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x560a41b6c598 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x560a41b6c718 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x560a41b6c658 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x560a41b6ced8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x560a41b6c7d0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x560a41b6ce38 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x560a41b6cd38 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x560a41b6cfb8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x560a41b6d108 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x560a41b6d078 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x560a41b6d1c0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x560a41b6d408 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41b6d280 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x560a41b6d2f8 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x560a41b6d598 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x560a41b6d4d8 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x560a41b6d7a8 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x560a41b6d660 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x560a41b6d6d8 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x560a41b6d868 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x560a41b6dac8 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x560a41b6d9d0 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x560a41b6db98 <line:111:7> col:7 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x560a41b6db98

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x560a41d4ffa0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<4>'
|-CXXRecordDecl 0x560a41d50178 prev 0x560a41d4ffa0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x560a41d50208 <col:46, col:52> col:46 public
|-TypedefDecl 0x560a41d50230 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x560a417e0580 'int'
|-TypedefDecl 0x560a41d51e00 <line:13:5, col:31> col:31 type 'typename sized_array_memory<4>::type':'char_array<4>'
| `-ElaboratedType 0x560a41d51db0 'typename sized_array_memory<4>::type' sugar
|   `-TypedefType 0x560a41d506e0 'sized_array_memory<4>::type' sugar
|     |-Typedef 0x560a41d505e0 'type'
|     `-TemplateSpecializationType 0x560a41d50570 'char_array<4UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x560a41d50450 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|       |   `-SubstNonTypeTemplateParmExpr 0x560a41d50430 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x560a41d50410 <col:24> 'unsigned long' 4
|       `-RecordType 0x560a41d50550 'char_array<4>'
|         `-ClassTemplateSpecialization 0x560a41d50470 'char_array'
|-TypedefDecl 0x560a41d54af8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<4> >::type *'
| `-PointerType 0x560a41d54ac0 'vector_memory<sized_array_memory<4> >::type *'
|   `-TypedefType 0x560a41d54aa0 'vector_memory<sized_array_memory<4> >::type' sugar
|     |-Typedef 0x560a41d51e00 'type'
|     `-ElaboratedType 0x560a41d51db0 'typename sized_array_memory<4>::type' sugar
|       `-TypedefType 0x560a41d506e0 'sized_array_memory<4>::type' sugar
|         |-Typedef 0x560a41d505e0 'type'
|         `-TemplateSpecializationType 0x560a41d50570 'char_array<4UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x560a41d50450 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 4
|           |   `-SubstNonTypeTemplateParmExpr 0x560a41d50430 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x560a41d50410 <col:24> 'unsigned long' 4
|           `-RecordType 0x560a41d50550 'char_array<4>'
|             `-ClassTemplateSpecialization 0x560a41d50470 'char_array'
|-CXXMethodDecl 0x560a41d54c78 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<4> >::type *) const' inline
| `-ParmVarDecl 0x560a41d54b88 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXConstructorDecl 0x560a41d54d68 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x560a41d54e48 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x560a41d54e48
|-CXXMethodDecl 0x560a41d55118 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x560a41d55020 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<4> > &'
|-CXXMethodDecl 0x560a41d55358 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x560a41d551d0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x560a41d55248 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x560a41d55528 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x560a41d55418 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x560a41d55490 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x560a41d55688 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x560a41d55758 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<4> >::iterator ()'
|-CXXMethodDecl 0x560a41d559a8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x560a41d55818 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x560a41d55890 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x560a41d55c08 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<4> >::iterator (vector_memory<sized_array_memory<4> >::iterator, vector_memory<sized_array_memory<4> >::iterator)'
| |-ParmVarDecl 0x560a41d55a78 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
| `-ParmVarDecl 0x560a41d55af0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<4> >::iterator':'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x560a41d55dc8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x560a41d55cd8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x560a41d55f88 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<4> >::type *)' inline
| `-ParmVarDecl 0x560a41d55e90 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x560a41d56040 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x560a41d560f0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x560a41d56328 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<4> >::type *)'
| |-ParmVarDecl 0x560a41d561a0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x560a41d56218 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<4> >::type *'
|-CXXMethodDecl 0x560a41d565c8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<4> > &)'
| `-ParmVarDecl 0x560a41d564d0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<4> > &'
|-FieldDecl 0x560a41d56690 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<4> >::type *'
|-FieldDecl 0x560a41d566e0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x560a41d56730 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %struct.char_array.4*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x560a41eb54c0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'unsigned int'
|-CXXRecordDecl 0x560a41eb56c8 prev 0x560a41eb54c0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x560a41eb66e0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<unsigned int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x560a41eb6690 'typename array_memory<unsigned int>::type' sugar
|   `-TypedefType 0x560a41eb6670 'conditional<true, sized_array_memory<4>, typed_array_memory<unsigned int> >::type' sugar
|     |-Typedef 0x560a41eb6520 'type'
|     `-SubstTemplateTypeParmType 0x560a41d4fb70 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x560a419feb40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a419feae8 'T'
|       `-RecordType 0x560a41d4f6c0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x560a41d4f5d8 'sized_array_memory'
|-FieldDecl 0x560a41eb67e0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<unsigned int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x560a41eb6830 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x560a41eb6868 <line:118:5, col:15> col:15 value_type 'unsigned int':'unsigned int'
| `-SubstTemplateTypeParmType 0x560a41eb5760 'unsigned int' sugar
|   |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x560a41ae2938 'T'
|   `-BuiltinType 0x560a417e0620 'unsigned int'
|-TypedefDecl 0x560a41eb68f8 <line:119:5, col:16> col:16 reference 'unsigned int &'
| `-LValueReferenceType 0x560a41eb68c0 'unsigned int &'
|   `-SubstTemplateTypeParmType 0x560a41eb5760 'unsigned int' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-BuiltinType 0x560a417e0620 'unsigned int'
|-TypedefDecl 0x560a41eb69b8 <line:120:5, col:22> col:22 const_reference 'const unsigned int &'
| `-LValueReferenceType 0x560a41eb6980 'const unsigned int &'
|   `-QualType 0x560a41eb5761 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x560a41eb5760 'unsigned int' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-BuiltinType 0x560a417e0620 'unsigned int'
|-TypedefDecl 0x560a41eb6a48 <line:121:5, col:16> col:16 pointer 'unsigned int *'
| `-PointerType 0x560a41eb6a10 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x560a41eb5760 'unsigned int' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-BuiltinType 0x560a417e0620 'unsigned int'
|-TypedefDecl 0x560a41eb6ad8 <line:122:5, col:22> col:22 const_pointer 'const unsigned int *'
| `-PointerType 0x560a41eb6aa0 'const unsigned int *'
|   `-QualType 0x560a41eb5761 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x560a41eb5760 'unsigned int' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-BuiltinType 0x560a417e0620 'unsigned int'
|-TypedefDecl 0x560a41eb90d0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<unsigned int>::type':'unsigned int'
| `-ElaboratedType 0x560a41eb9080 'typename fast_argument<unsigned int>::type' sugar
|   `-TypedefType 0x560a41eb9060 'fast_argument<unsigned int, false>::type' sugar
|     |-Typedef 0x560a41eb8ff0 'type'
|     `-SubstTemplateTypeParmType 0x560a41eb8db0 'unsigned int' sugar
|       |-TemplateTypeParmType 0x560a41a09100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41a090b0 'T'
|       `-BuiltinType 0x560a417e0620 'unsigned int'
|-TypedefDecl 0x560a41eb9138 <line:126:5, col:22> col:22 const_access_type 'const unsigned int &'
| `-LValueReferenceType 0x560a41eb6980 'const unsigned int &'
|   `-QualType 0x560a41eb5761 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x560a41eb5760 'unsigned int' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-BuiltinType 0x560a417e0620 'unsigned int'
|-TypedefDecl 0x560a41eb9190 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x560a417e0580 'int'
|-TypedefDecl 0x560a41eb91f8 <line:130:5, col:16> col:16 iterator 'unsigned int *'
| `-PointerType 0x560a41eb6a10 'unsigned int *'
|   `-SubstTemplateTypeParmType 0x560a41eb5760 'unsigned int' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-BuiltinType 0x560a417e0620 'unsigned int'
|-TypedefDecl 0x560a41eb9260 <line:131:5, col:22> col:22 const_iterator 'const unsigned int *'
| `-PointerType 0x560a41eb6aa0 'const unsigned int *'
|   `-QualType 0x560a41eb5761 'const unsigned int' const
|     `-SubstTemplateTypeParmType 0x560a41eb5760 'unsigned int' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-BuiltinType 0x560a417e0620 'unsigned int'
|-EnumDecl 0x560a41eb92b8 <line:134:5> col:5
| `-EnumConstantDecl 0x560a41eb93b0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<unsigned int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x560a41eb9390 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x560a41ae4378 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x560a41ae4350 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x560a41ae4330 <col:40> 'int' 1
|-CXXConstructorDecl 0x560a41eb9438 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x560a41eb9688 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41eb94f0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41eb9590 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXConstructorDecl 0x560a41eb9948 <line:139:5, col:37> col:12 Vector 'void (const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x560a41eb9830 <col:19, col:36> col:36 x 'const Vector<unsigned int> &'
|-CXXConstructorDecl 0x560a41eb9c08 <line:141:5, col:32> col:12 Vector 'void (Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x560a41eb9af0 <col:19, col:31> col:31 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x560a41eb9f50 <line:144:5, col:51> col:23 operator= 'Vector<unsigned int> &(const Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x560a41eb9e30 <col:33, col:50> col:50 x 'const Vector<unsigned int> &'
|-CXXMethodDecl 0x560a41eba260 <line:146:5, col:46> col:23 operator= 'Vector<unsigned int> &(Vector<unsigned int> &&)' inline
| `-ParmVarDecl 0x560a41eba140 <col:33, col:45> col:45 x 'Vector<unsigned int> &&'
|-CXXMethodDecl 0x560a41eba550 <line:148:5, col:70> col:23 assign 'Vector<unsigned int> &(Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41eba398 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41eba410 <col:43, col:69> col:63 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x560a41eba678 <line:150:5, col:55> col:49 begin 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x560a41eba758 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41eba7b0 <col:30> Inherited
|-CXXMethodDecl 0x560a41eba7f8 <line:151:5, col:53> col:49 end 'Vector<unsigned int>::iterator ()'
| |-NoInlineAttr 0x560a41eba8a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41eba900 <col:30> Inherited
|-CXXMethodDecl 0x560a41eba998 <line:152:5, col:63> col:55 begin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x560a41ebaa48 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41ebaaa0 <col:30> Inherited
|-CXXMethodDecl 0x560a41ebaae8 <line:153:5, col:61> col:55 end 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x560a41ebab98 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41ebabf0 <col:30> Inherited
|-CXXMethodDecl 0x560a41ebac38 <line:154:5, col:64> col:55 cbegin 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x560a41ebace8 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41ebad40 <col:30> Inherited
|-CXXMethodDecl 0x560a41ebad88 <line:155:5, col:62> col:55 cend 'Vector<unsigned int>::const_iterator () const'
| |-NoInlineAttr 0x560a41ebae38 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41ebae90 <col:30> Inherited
|-CXXMethodDecl 0x560a41ebaeb8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x560a41ebaf68 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x560a41ebb018 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x560a41ebb1d8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41ebb0c8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41ebb140 <col:37, col:63> col:57 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x560a41ebb328 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x560a41ebb298 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41ebb4d8 <line:163:5, col:65> col:43 operator[] 'unsigned int &(Vector::size_type)'
| |-ParmVarDecl 0x560a41ebb3e0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x560a41ebb590 <col:20>
| `-OptimizeNoneAttr 0x560a41ebb5e8 <col:30>
|-CXXMethodDecl 0x560a41ebb708 <line:164:5, col:73> col:49 operator[] 'const unsigned int &(Vector::size_type) const'
| |-ParmVarDecl 0x560a41ebb610 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x560a41ebb7c0 <col:20>
| `-OptimizeNoneAttr 0x560a41ebb818 <col:30>
|-CXXMethodDecl 0x560a41ebb8d0 <line:165:5, col:29> col:15 at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x560a41ebb840 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41ebba18 <line:166:5, col:37> col:21 at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x560a41ebb988 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41ebbb48 <line:167:5, col:21> col:15 front 'unsigned int &()' inline
|-CXXMethodDecl 0x560a41ebbc78 <line:168:5, col:29> col:21 front 'const unsigned int &() const' inline
|-CXXMethodDecl 0x560a41ebbd48 <line:169:5, col:20> col:15 back 'unsigned int &()' inline
|-CXXMethodDecl 0x560a41ebbe18 <line:170:5, col:28> col:21 back 'const unsigned int &() const' inline
|-CXXMethodDecl 0x560a41ebbf58 <line:172:5, col:39> col:15 unchecked_at 'unsigned int &(Vector::size_type)' inline
| `-ParmVarDecl 0x560a41ebbec8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41ebc0a0 <line:173:5, col:47> col:21 unchecked_at 'const unsigned int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x560a41ebc010 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41ebc1e8 <line:174:5, col:59> col:15 at_u 'unsigned int &(Vector::size_type)' inline
| |-ParmVarDecl 0x560a41ebc158 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x560a41ebc2a0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x560a41ebc3a0 <line:175:5, col:71> col:21 at_u 'const unsigned int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x560a41ebc310 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x560a41ebc458 <col:60> Inherited "" ""
|-CXXMethodDecl 0x560a41ebc518 <line:177:5, col:20> col:15 data 'unsigned int *()' inline
|-CXXMethodDecl 0x560a41ebc618 <line:178:5, col:28> col:21 data 'const unsigned int *() const' inline
|-CXXMethodDecl 0x560a41ebc798 <line:180:5, col:48> col:17 push_back 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x560a41ebc6d8 <col:27, col:47> col:47 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-FunctionTemplateDecl 0x560a41ebcf58 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x560a41ebc850 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<unsigned int>':'fast_argument<unsigned int, false>'
| `-CXXMethodDecl 0x560a41ebceb8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (unsigned int &&)' inline
|   `-ParmVarDecl 0x560a41ebcdb8 <col:58, col:62> col:62 v 'unsigned int &&'
|-CXXMethodDecl 0x560a41ebd038 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x560a41ebd188 <line:186:5, col:49> col:17 push_front 'void (Vector<unsigned int>::value_argument_type)' inline
| `-ParmVarDecl 0x560a41ebd0f8 <col:28, col:48> col:48 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x560a41ebd240 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x560a41ebd488 <line:189:5, col:62> col:21 insert 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41ebd300 <col:28, col:37> col:37 it 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x560a41ebd378 <col:41, col:61> col:61 v 'Vector<unsigned int>::value_argument_type':'unsigned int'
|-CXXMethodDecl 0x560a41ebd648 <line:190:5, col:38> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator)' inline
| `-ParmVarDecl 0x560a41ebd558 <col:27, col:36> col:36 it 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x560a41ebd898 <line:191:5, col:49> col:21 erase 'Vector<unsigned int>::iterator (Vector<unsigned int>::iterator, Vector<unsigned int>::iterator)' inline
| |-ParmVarDecl 0x560a41ebd710 <col:27, col:36> col:36 a 'Vector<unsigned int>::iterator':'unsigned int *'
| `-ParmVarDecl 0x560a41ebd788 <col:39, col:48> col:48 b 'Vector<unsigned int>::iterator':'unsigned int *'
|-CXXMethodDecl 0x560a41ebd958 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x560a41ebdbb8 <line:195:5, col:34> col:17 swap 'void (Vector<unsigned int> &)' inline
| `-ParmVarDecl 0x560a41ebdac0 <col:22, col:33> col:33 x 'Vector<unsigned int> &'
`-CXXDestructorDecl 0x560a41ebdc88 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x560a41ebdc88

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x560a41d4e9a8 <../dummy_inc/click/vector.hh:110:1, line:197:1> line:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x560a41d4ebb8 prev 0x560a41d4e9a8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x560a41d4ff10 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<int>::type':'sized_array_memory<4>'
| `-ElaboratedType 0x560a41d4fec0 'typename array_memory<int>::type' sugar
|   `-TypedefType 0x560a41d4fea0 'conditional<true, sized_array_memory<4>, typed_array_memory<int> >::type' sugar
|     |-Typedef 0x560a41d4fd50 'type'
|     `-SubstTemplateTypeParmType 0x560a41d4fb70 'sized_array_memory<4>' sugar
|       |-TemplateTypeParmType 0x560a419feb40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a419feae8 'T'
|       `-RecordType 0x560a41d4f6c0 'sized_array_memory<4>'
|         `-ClassTemplateSpecialization 0x560a41d4f5d8 'sized_array_memory'
|-FieldDecl 0x560a41d56780 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<int>::array_memory_type>':'vector_memory<sized_array_memory<4> >' mutable
|-AccessSpecDecl 0x560a41d567d0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x560a41d56808 <line:118:5, col:15> col:15 value_type 'int':'int'
| `-SubstTemplateTypeParmType 0x560a41d4ec50 'int' sugar
|   |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x560a41ae2938 'T'
|   `-BuiltinType 0x560a417e0580 'int'
|-TypedefDecl 0x560a41d56898 <line:119:5, col:16> col:16 reference 'int &'
| `-LValueReferenceType 0x560a41d56860 'int &'
|   `-SubstTemplateTypeParmType 0x560a41d4ec50 'int' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-BuiltinType 0x560a417e0580 'int'
|-TypedefDecl 0x560a41d56958 <line:120:5, col:22> col:22 const_reference 'const int &'
| `-LValueReferenceType 0x560a41d56920 'const int &'
|   `-QualType 0x560a41d4ec51 'const int' const
|     `-SubstTemplateTypeParmType 0x560a41d4ec50 'int' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-BuiltinType 0x560a417e0580 'int'
|-TypedefDecl 0x560a41d569e8 <line:121:5, col:16> col:16 pointer 'int *'
| `-PointerType 0x560a41d569b0 'int *'
|   `-SubstTemplateTypeParmType 0x560a41d4ec50 'int' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-BuiltinType 0x560a417e0580 'int'
|-TypedefDecl 0x560a41d56a78 <line:122:5, col:22> col:22 const_pointer 'const int *'
| `-PointerType 0x560a41d56a40 'const int *'
|   `-QualType 0x560a41d4ec51 'const int' const
|     `-SubstTemplateTypeParmType 0x560a41d4ec50 'int' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-BuiltinType 0x560a417e0580 'int'
|-TypedefDecl 0x560a41d57660 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<int>::type':'int'
| `-ElaboratedType 0x560a41d57610 'typename fast_argument<int>::type' sugar
|   `-TypedefType 0x560a41d575f0 'fast_argument<int, false>::type' sugar
|     |-Typedef 0x560a41d57580 'type'
|     `-SubstTemplateTypeParmType 0x560a41d57340 'int' sugar
|       |-TemplateTypeParmType 0x560a41a09100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41a090b0 'T'
|       `-BuiltinType 0x560a417e0580 'int'
|-TypedefDecl 0x560a41d576c8 <line:126:5, col:22> col:22 const_access_type 'const int &'
| `-LValueReferenceType 0x560a41d56920 'const int &'
|   `-QualType 0x560a41d4ec51 'const int' const
|     `-SubstTemplateTypeParmType 0x560a41d4ec50 'int' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-BuiltinType 0x560a417e0580 'int'
|-TypedefDecl 0x560a41d57720 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x560a417e0580 'int'
|-TypedefDecl 0x560a41d57788 <line:130:5, col:16> col:16 iterator 'int *'
| `-PointerType 0x560a41d569b0 'int *'
|   `-SubstTemplateTypeParmType 0x560a41d4ec50 'int' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-BuiltinType 0x560a417e0580 'int'
|-TypedefDecl 0x560a41d577f0 <line:131:5, col:22> col:22 const_iterator 'const int *'
| `-PointerType 0x560a41d56a40 'const int *'
|   `-QualType 0x560a41d4ec51 'const int' const
|     `-SubstTemplateTypeParmType 0x560a41d4ec50 'int' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-BuiltinType 0x560a417e0580 'int'
|-EnumDecl 0x560a41d57848 <line:134:5> col:5
| `-EnumConstantDecl 0x560a41d57940 <col:12, col:40> col:12 RESERVE_GROW 'Vector<int>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x560a41d57920 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x560a41ae4378 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x560a41ae4350 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x560a41ae4330 <col:40> 'int' 1
|-CXXConstructorDecl 0x560a41d579c8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x560a41d57c18 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41d57a80 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41d57b20 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXConstructorDecl 0x560a41d57ed8 <line:139:5, col:37> col:12 Vector 'void (const Vector<int> &)' inline
| `-ParmVarDecl 0x560a41d57dc0 <col:19, col:36> col:36 x 'const Vector<int> &'
|-CXXConstructorDecl 0x560a41d58198 <line:141:5, col:32> col:12 Vector 'void (Vector<int> &&)' inline
| `-ParmVarDecl 0x560a41d58080 <col:19, col:31> col:31 x 'Vector<int> &&'
|-CXXMethodDecl 0x560a41d584e0 <line:144:5, col:51> col:23 operator= 'Vector<int> &(const Vector<int> &)' inline
| `-ParmVarDecl 0x560a41d583c0 <col:33, col:50> col:50 x 'const Vector<int> &'
|-CXXMethodDecl 0x560a41d587f0 <line:146:5, col:46> col:23 operator= 'Vector<int> &(Vector<int> &&)' inline
| `-ParmVarDecl 0x560a41d586d0 <col:33, col:45> col:45 x 'Vector<int> &&'
|-CXXMethodDecl 0x560a41d59568 <line:148:5, col:70> col:23 assign 'Vector<int> &(Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41d58928 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41d589a0 <col:43, col:69> col:63 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x560a41d59698 <line:150:5, col:55> col:49 begin 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x560a41d59778 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41d597d0 <col:30> Inherited
|-CXXMethodDecl 0x560a41d59818 <line:151:5, col:53> col:49 end 'Vector<int>::iterator ()'
| |-NoInlineAttr 0x560a41d598c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41d59920 <col:30> Inherited
|-CXXMethodDecl 0x560a41d599e8 <line:152:5, col:63> col:55 begin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x560a41d59a98 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41d59af0 <col:30> Inherited
|-CXXMethodDecl 0x560a41d59b38 <line:153:5, col:61> col:55 end 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x560a41d59be8 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41d59c40 <col:30> Inherited
|-CXXMethodDecl 0x560a41d59c88 <line:154:5, col:64> col:55 cbegin 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x560a41d59d38 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41d59d90 <col:30> Inherited
|-CXXMethodDecl 0x560a41d59dd8 <line:155:5, col:62> col:55 cend 'Vector<int>::const_iterator () const'
| |-NoInlineAttr 0x560a41d59e88 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41d59ee0 <col:30> Inherited
|-CXXMethodDecl 0x560a41d59f08 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x560a41d59fb8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x560a41d5a068 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x560a41d5a228 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41d5a118 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41d5a190 <col:37, col:63> col:57 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x560a41d5a378 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x560a41d5a2e8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41d5a528 <line:163:5, col:65> col:43 used operator[] 'int &(Vector::size_type)'
| |-ParmVarDecl 0x560a41d5a430 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x560a41d5a5e0 <col:20>
| `-OptimizeNoneAttr 0x560a41d5a638 <col:30>
|-CXXMethodDecl 0x560a41d5a758 <line:164:5, col:73> col:49 operator[] 'const int &(Vector::size_type) const'
| |-ParmVarDecl 0x560a41d5a660 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x560a41d5a810 <col:20>
| `-OptimizeNoneAttr 0x560a41d5a868 <col:30>
|-CXXMethodDecl 0x560a41d5a920 <line:165:5, col:29> col:15 at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x560a41d5a890 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41d5aa68 <line:166:5, col:37> col:21 at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x560a41d5a9d8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41d5ab98 <line:167:5, col:21> col:15 front 'int &()' inline
|-CXXMethodDecl 0x560a41d5acc8 <line:168:5, col:29> col:21 front 'const int &() const' inline
|-CXXMethodDecl 0x560a41d5ad98 <line:169:5, col:20> col:15 back 'int &()' inline
|-CXXMethodDecl 0x560a41d5ae68 <line:170:5, col:28> col:21 used back 'const int &() const' inline
|-CXXMethodDecl 0x560a41d5afa8 <line:172:5, col:39> col:15 unchecked_at 'int &(Vector::size_type)' inline
| `-ParmVarDecl 0x560a41d5af18 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41d5b0f0 <line:173:5, col:47> col:21 unchecked_at 'const int &(Vector::size_type) const' inline
| `-ParmVarDecl 0x560a41d5b060 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41d5b238 <line:174:5, col:59> col:15 at_u 'int &(Vector::size_type)' inline
| |-ParmVarDecl 0x560a41d5b1a8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x560a41d5b2f0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x560a41d5b3f0 <line:175:5, col:71> col:21 at_u 'const int &(Vector::size_type) const' inline
| |-ParmVarDecl 0x560a41d5b360 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x560a41d5b4a8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x560a41d5b568 <line:177:5, col:20> col:15 data 'int *()' inline
|-CXXMethodDecl 0x560a41d5b668 <line:178:5, col:28> col:21 data 'const int *() const' inline
|-CXXMethodDecl 0x560a41d5b7e8 <line:180:5, col:48> col:17 push_back 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x560a41d5b728 <col:27, col:47> col:47 v 'Vector<int>::value_argument_type':'int'
|-FunctionTemplateDecl 0x560a41d5bfa8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x560a41d5b8a0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<int>':'fast_argument<int, false>'
| `-CXXMethodDecl 0x560a41d5bf08 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (int &&)' inline
|   `-ParmVarDecl 0x560a41d5be08 <col:58, col:62> col:62 v 'int &&'
|-CXXMethodDecl 0x560a41d5c088 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x560a41d5c1d8 <line:186:5, col:49> col:17 push_front 'void (Vector<int>::value_argument_type)' inline
| `-ParmVarDecl 0x560a41d5c148 <col:28, col:48> col:48 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x560a41d5c290 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x560a41d5c4d8 <line:189:5, col:62> col:21 insert 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41d5c350 <col:28, col:37> col:37 it 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x560a41d5c3c8 <col:41, col:61> col:61 v 'Vector<int>::value_argument_type':'int'
|-CXXMethodDecl 0x560a41d5c698 <line:190:5, col:38> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator)' inline
| `-ParmVarDecl 0x560a41d5c5a8 <col:27, col:36> col:36 it 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x560a41d5c8e8 <line:191:5, col:49> col:21 erase 'Vector<int>::iterator (Vector<int>::iterator, Vector<int>::iterator)' inline
| |-ParmVarDecl 0x560a41d5c760 <col:27, col:36> col:36 a 'Vector<int>::iterator':'int *'
| `-ParmVarDecl 0x560a41d5c7d8 <col:39, col:48> col:48 b 'Vector<int>::iterator':'int *'
|-CXXMethodDecl 0x560a41d5c9a8 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x560a41d5cc08 <line:195:5, col:34> col:17 swap 'void (Vector<int> &)' inline
| `-ParmVarDecl 0x560a41d5cb10 <col:22, col:33> col:33 x 'Vector<int> &'
`-CXXDestructorDecl 0x560a41d5ccd8 <line:111:7> col:7 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x560a41d5ccd8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.5 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41ebded0 <../dummy_inc/click/router.hh:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
|-DefinitionData aggregate standard_layout has_mutable_fields
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x560a41ebdfe8 <col:5, col:12> col:12 implicit struct element_landmark_t
|-FieldDecl 0x560a41ebe088 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x560a41ebe0e8 <line:249:9, col:16> col:16 filename 'String'
|-CXXConstructorDecl 0x560a41ebe180 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x560a41ebe180
| `-ParmVarDecl 0x560a41ebe298 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x560a41ebe338 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x560a41ebe338
| `-ParmVarDecl 0x560a41ebe448 <col:12> col:12 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x560a41ebe4e8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x560a41ebe4e8
| `-ParmVarDecl 0x560a41ebe5f8 <col:12> col:12 'const Router::element_landmark_t &'
|-CXXMethodDecl 0x560a41ebe668 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x560a41ebe668
| `-ParmVarDecl 0x560a41ebe778 <col:12> col:12 'Router::element_landmark_t &&'
`-CXXDestructorDecl 0x560a41ebe800 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x560a41ebe800

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  NonVirtualBaseLLVMType:%"struct.Router::element_landmark_t" = type { i32, %class.String }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x560a41ebfd90 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<Router::element_landmark_t>'
|-CXXRecordDecl 0x560a41ebff68 prev 0x560a41ebfd90 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x560a41ebfff8 <col:46, col:52> col:46 public
|-TypedefDecl 0x560a41ec0020 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x560a417e0580 'int'
|-TypedefDecl 0x560a41ec3d80 <line:13:5, col:31> col:31 type 'typename typed_array_memory<element_landmark_t>::type':'Router::element_landmark_t'
| `-ElaboratedType 0x560a41ec3d30 'typename typed_array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x560a41ec3d10 'typed_array_memory<Router::element_landmark_t>::type' sugar
|     |-Typedef 0x560a41ec0238 'type'
|     `-SubstTemplateTypeParmType 0x560a41ec0200 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x560a41ad5c60 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ad5c10 'T'
|       `-RecordType 0x560a41ebdf60 'Router::element_landmark_t'
|         `-CXXRecord 0x560a41ebded0 'element_landmark_t'
|-TypedefDecl 0x560a41ec3e38 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-PointerType 0x560a41ec3e00 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|   `-TypedefType 0x560a41ec3de0 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x560a41ec3d80 'type'
|     `-ElaboratedType 0x560a41ec3d30 'typename typed_array_memory<element_landmark_t>::type' sugar
|       `-TypedefType 0x560a41ec3d10 'typed_array_memory<Router::element_landmark_t>::type' sugar
|         |-Typedef 0x560a41ec0238 'type'
|         `-SubstTemplateTypeParmType 0x560a41ec0200 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x560a41ad5c60 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x560a41ad5c10 'T'
|           `-RecordType 0x560a41ebdf60 'Router::element_landmark_t'
|             `-CXXRecord 0x560a41ebded0 'element_landmark_t'
|-CXXMethodDecl 0x560a41ec3fb8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *) const' inline
| `-ParmVarDecl 0x560a41ec3ec8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXConstructorDecl 0x560a41ec40a8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x560a41ec4188 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x560a41ec4188
|-CXXMethodDecl 0x560a41ec4458 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x560a41ec4360 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-CXXMethodDecl 0x560a41ec4698 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x560a41ec4510 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x560a41ec4588 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x560a41ec4868 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x560a41ec4758 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x560a41ec47d0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x560a41ec49c8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x560a41ec4a98 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator ()'
|-CXXMethodDecl 0x560a41ec4ce8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x560a41ec4b58 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x560a41ec4bd0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x560a41ec4f48 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator (vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator, vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator)'
| |-ParmVarDecl 0x560a41ec4db8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
| `-ParmVarDecl 0x560a41ec4e30 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<Router::element_landmark_t> >::iterator':'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x560a41ec5108 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x560a41ec5018 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x560a41ec52c8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)' inline
| `-ParmVarDecl 0x560a41ec51d0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x560a41ec5380 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x560a41ec5430 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x560a41ec5668 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *)'
| |-ParmVarDecl 0x560a41ec54e0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x560a41ec5558 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-CXXMethodDecl 0x560a41ec5908 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<Router::element_landmark_t> > &)'
| `-ParmVarDecl 0x560a41ec5810 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<Router::element_landmark_t> > &'
|-FieldDecl 0x560a41ec59d0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<Router::element_landmark_t> >::type *'
|-FieldDecl 0x560a41ec5a20 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x560a41ec5a70 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.7 = type { %"struct.Router::element_landmark_t"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x560a41ebe8f0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::element_landmark_t'
|-CXXRecordDecl 0x560a41ebeaf8 prev 0x560a41ebe8f0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x560a41ebfd00 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<element_landmark_t>::type':'typed_array_memory<Router::element_landmark_t>'
| `-ElaboratedType 0x560a41ebfcb0 'typename array_memory<element_landmark_t>::type' sugar
|   `-TypedefType 0x560a41ebfc90 'conditional<false, sized_array_memory<32>, typed_array_memory<Router::element_landmark_t> >::type' sugar
|     |-Typedef 0x560a41ebfb40 'type'
|     `-SubstTemplateTypeParmType 0x560a41ebf9d0 'typed_array_memory<Router::element_landmark_t>' sugar
|       |-TemplateTypeParmType 0x560a419ff2c0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x560a419ff268 'F'
|       `-RecordType 0x560a41ebf630 'typed_array_memory<Router::element_landmark_t>'
|         `-ClassTemplateSpecialization 0x560a41ebf550 'typed_array_memory'
|-FieldDecl 0x560a41ec5ac0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::element_landmark_t>::array_memory_type>':'vector_memory<typed_array_memory<Router::element_landmark_t> >' mutable
|-AccessSpecDecl 0x560a41ec5b10 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x560a41ec5b48 <line:118:5, col:15> col:15 value_type 'Router::element_landmark_t':'Router::element_landmark_t'
| `-SubstTemplateTypeParmType 0x560a41ebeb90 'Router::element_landmark_t' sugar
|   |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x560a41ae2938 'T'
|   `-RecordType 0x560a41ebdf60 'Router::element_landmark_t'
|     `-CXXRecord 0x560a41ebded0 'element_landmark_t'
|-TypedefDecl 0x560a41ec5bd8 <line:119:5, col:16> col:16 reference 'Router::element_landmark_t &'
| `-LValueReferenceType 0x560a41ec5ba0 'Router::element_landmark_t &'
|   `-SubstTemplateTypeParmType 0x560a41ebeb90 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-RecordType 0x560a41ebdf60 'Router::element_landmark_t'
|       `-CXXRecord 0x560a41ebded0 'element_landmark_t'
|-TypedefDecl 0x560a41ec5c68 <line:120:5, col:22> col:22 const_reference 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x560a41ec5c30 'const Router::element_landmark_t &'
|   `-QualType 0x560a41ebeb91 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x560a41ebeb90 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-RecordType 0x560a41ebdf60 'Router::element_landmark_t'
|         `-CXXRecord 0x560a41ebded0 'element_landmark_t'
|-TypedefDecl 0x560a41ec5cf8 <line:121:5, col:16> col:16 pointer 'Router::element_landmark_t *'
| `-PointerType 0x560a41ec5cc0 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x560a41ebeb90 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-RecordType 0x560a41ebdf60 'Router::element_landmark_t'
|       `-CXXRecord 0x560a41ebded0 'element_landmark_t'
|-TypedefDecl 0x560a41ec5d88 <line:122:5, col:22> col:22 const_pointer 'const Router::element_landmark_t *'
| `-PointerType 0x560a41ec5d50 'const Router::element_landmark_t *'
|   `-QualType 0x560a41ebeb91 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x560a41ebeb90 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-RecordType 0x560a41ebdf60 'Router::element_landmark_t'
|         `-CXXRecord 0x560a41ebded0 'element_landmark_t'
|-TypedefDecl 0x560a41ec69e0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<element_landmark_t>::type':'const Router::element_landmark_t &'
| `-ElaboratedType 0x560a41ec6990 'typename fast_argument<element_landmark_t>::type' sugar
|   `-TypedefType 0x560a41ec6970 'fast_argument<Router::element_landmark_t, true>::type' sugar
|     |-Typedef 0x560a41ec68a8 'type'
|     `-LValueReferenceType 0x560a41ec6870 'const Router::element_landmark_t &'
|       `-QualType 0x560a41ec6611 'const Router::element_landmark_t' const
|         `-SubstTemplateTypeParmType 0x560a41ec6610 'Router::element_landmark_t' sugar
|           |-TemplateTypeParmType 0x560a41a077c0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x560a41a07768 'T'
|           `-RecordType 0x560a41ebdf60 'Router::element_landmark_t'
|             `-CXXRecord 0x560a41ebded0 'element_landmark_t'
|-TypedefDecl 0x560a41ec6a48 <line:126:5, col:22> col:22 const_access_type 'const Router::element_landmark_t &'
| `-LValueReferenceType 0x560a41ec5c30 'const Router::element_landmark_t &'
|   `-QualType 0x560a41ebeb91 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x560a41ebeb90 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-RecordType 0x560a41ebdf60 'Router::element_landmark_t'
|         `-CXXRecord 0x560a41ebded0 'element_landmark_t'
|-TypedefDecl 0x560a41ec6aa0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x560a417e0580 'int'
|-TypedefDecl 0x560a41ec6b08 <line:130:5, col:16> col:16 iterator 'Router::element_landmark_t *'
| `-PointerType 0x560a41ec5cc0 'Router::element_landmark_t *'
|   `-SubstTemplateTypeParmType 0x560a41ebeb90 'Router::element_landmark_t' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-RecordType 0x560a41ebdf60 'Router::element_landmark_t'
|       `-CXXRecord 0x560a41ebded0 'element_landmark_t'
|-TypedefDecl 0x560a41ec6b70 <line:131:5, col:22> col:22 const_iterator 'const Router::element_landmark_t *'
| `-PointerType 0x560a41ec5d50 'const Router::element_landmark_t *'
|   `-QualType 0x560a41ebeb91 'const Router::element_landmark_t' const
|     `-SubstTemplateTypeParmType 0x560a41ebeb90 'Router::element_landmark_t' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-RecordType 0x560a41ebdf60 'Router::element_landmark_t'
|         `-CXXRecord 0x560a41ebded0 'element_landmark_t'
|-EnumDecl 0x560a41ec6bc8 <line:134:5> col:5
| `-EnumConstantDecl 0x560a41ec6cc0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::element_landmark_t>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x560a41ec6ca0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x560a41ae4378 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x560a41ae4350 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x560a41ae4330 <col:40> 'int' 1
|-CXXConstructorDecl 0x560a41ec6d48 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x560a41ec6fd8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41ec6e00 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41ec6ea0 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXConstructorDecl 0x560a41ec7298 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x560a41ec7180 <col:19, col:36> col:36 x 'const Vector<Router::element_landmark_t> &'
|-CXXConstructorDecl 0x560a41ec7558 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x560a41ec7440 <col:19, col:31> col:31 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x560a41ec78a0 <line:144:5, col:51> col:23 operator= 'Vector<Router::element_landmark_t> &(const Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x560a41ec7780 <col:33, col:50> col:50 x 'const Vector<Router::element_landmark_t> &'
|-CXXMethodDecl 0x560a41ec7bb0 <line:146:5, col:46> col:23 operator= 'Vector<Router::element_landmark_t> &(Vector<Router::element_landmark_t> &&)' inline
| `-ParmVarDecl 0x560a41ec7a90 <col:33, col:45> col:45 x 'Vector<Router::element_landmark_t> &&'
|-CXXMethodDecl 0x560a41ec7ea0 <line:148:5, col:70> col:23 assign 'Vector<Router::element_landmark_t> &(Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41ec7ce8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41ec7d60 <col:43, col:69> col:63 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x560a41ec7fc8 <line:150:5, col:55> col:49 begin 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x560a41ec80a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41ec8100 <col:30> Inherited
|-CXXMethodDecl 0x560a41ec8148 <line:151:5, col:53> col:49 end 'Vector<Router::element_landmark_t>::iterator ()'
| |-NoInlineAttr 0x560a41ec81f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41ec8250 <col:30> Inherited
|-CXXMethodDecl 0x560a41ec8318 <line:152:5, col:63> col:55 begin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x560a41ec83c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41ec8420 <col:30> Inherited
|-CXXMethodDecl 0x560a41ec8468 <line:153:5, col:61> col:55 end 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x560a41ec8518 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41ec8570 <col:30> Inherited
|-CXXMethodDecl 0x560a41ec85b8 <line:154:5, col:64> col:55 cbegin 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x560a41ec8668 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41ec86c0 <col:30> Inherited
|-CXXMethodDecl 0x560a41ec8708 <line:155:5, col:62> col:55 cend 'Vector<Router::element_landmark_t>::const_iterator () const'
| |-NoInlineAttr 0x560a41ec87b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41ec8810 <col:30> Inherited
|-CXXMethodDecl 0x560a41ec8838 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x560a41ec88e8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x560a41ec8998 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x560a41ec8b58 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41ec8a48 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41ec8ac0 <col:37, col:63> col:57 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x560a41ec8ca8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x560a41ec8c18 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41ec8e58 <line:163:5, col:65> col:43 operator[] 'Router::element_landmark_t &(Vector::size_type)'
| |-ParmVarDecl 0x560a41ec8d60 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x560a41ec8f10 <col:20>
| `-OptimizeNoneAttr 0x560a41ec8f68 <col:30>
|-CXXMethodDecl 0x560a41ec9088 <line:164:5, col:73> col:49 operator[] 'const Router::element_landmark_t &(Vector::size_type) const'
| |-ParmVarDecl 0x560a41ec8f90 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x560a41ec9140 <col:20>
| `-OptimizeNoneAttr 0x560a41ec9198 <col:30>
|-CXXMethodDecl 0x560a41ec9250 <line:165:5, col:29> col:15 at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x560a41ec91c0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41ec9398 <line:166:5, col:37> col:21 at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x560a41ec9308 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41ec94c8 <line:167:5, col:21> col:15 front 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x560a41ec95f8 <line:168:5, col:29> col:21 front 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x560a41ec96c8 <line:169:5, col:20> col:15 back 'Router::element_landmark_t &()' inline
|-CXXMethodDecl 0x560a41ec9798 <line:170:5, col:28> col:21 back 'const Router::element_landmark_t &() const' inline
|-CXXMethodDecl 0x560a41ec98d8 <line:172:5, col:39> col:15 unchecked_at 'Router::element_landmark_t &(Vector::size_type)' inline
| `-ParmVarDecl 0x560a41ec9848 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41ec9a20 <line:173:5, col:47> col:21 unchecked_at 'const Router::element_landmark_t &(Vector::size_type) const' inline
| `-ParmVarDecl 0x560a41ec9990 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41ec9b68 <line:174:5, col:59> col:15 at_u 'Router::element_landmark_t &(Vector::size_type)' inline
| |-ParmVarDecl 0x560a41ec9ad8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x560a41ec9c20 <col:48> Inherited "" ""
|-CXXMethodDecl 0x560a41ec9d20 <line:175:5, col:71> col:21 at_u 'const Router::element_landmark_t &(Vector::size_type) const' inline
| |-ParmVarDecl 0x560a41ec9c90 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x560a41ec9dd8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x560a41ec9e98 <line:177:5, col:20> col:15 data 'Router::element_landmark_t *()' inline
|-CXXMethodDecl 0x560a41ec9f98 <line:178:5, col:28> col:21 data 'const Router::element_landmark_t *() const' inline
|-CXXMethodDecl 0x560a41eca118 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x560a41eca058 <col:27, col:47> col:47 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-FunctionTemplateDecl 0x560a41eca8a8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x560a41eca1d0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::element_landmark_t>':'fast_argument<Router::element_landmark_t, true>'
| `-CXXMethodDecl 0x560a41eca808 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::element_landmark_t &&)' inline
|   `-ParmVarDecl 0x560a41eca708 <col:58, col:62> col:62 v 'Router::element_landmark_t &&'
|-CXXMethodDecl 0x560a41eca988 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x560a41ecaad8 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::element_landmark_t>::value_argument_type)' inline
| `-ParmVarDecl 0x560a41ecaa48 <col:28, col:48> col:48 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x560a41ecab90 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x560a41ecbdc8 <line:189:5, col:62> col:21 insert 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41ecac50 <col:28, col:37> col:37 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x560a41ecacc8 <col:41, col:61> col:61 v 'Vector<Router::element_landmark_t>::value_argument_type':'const Router::element_landmark_t &'
|-CXXMethodDecl 0x560a41ecbf58 <line:190:5, col:38> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator)' inline
| `-ParmVarDecl 0x560a41ecbe98 <col:27, col:36> col:36 it 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x560a41ecc168 <line:191:5, col:49> col:21 erase 'Vector<Router::element_landmark_t>::iterator (Vector<Router::element_landmark_t>::iterator, Vector<Router::element_landmark_t>::iterator)' inline
| |-ParmVarDecl 0x560a41ecc020 <col:27, col:36> col:36 a 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
| `-ParmVarDecl 0x560a41ecc098 <col:39, col:48> col:48 b 'Vector<Router::element_landmark_t>::iterator':'Router::element_landmark_t *'
|-CXXMethodDecl 0x560a41ecc228 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x560a41ecc488 <line:195:5, col:34> col:17 swap 'void (Vector<Router::element_landmark_t> &)' inline
| `-ParmVarDecl 0x560a41ecc390 <col:22, col:33> col:33 x 'Vector<Router::element_landmark_t> &'
`-CXXDestructorDecl 0x560a41ecc558 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x560a41ecc558

Layout: <CGRecordLayout
  LLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  NonVirtualBaseLLVMType:%class.Vector.6 = type { %class.vector_memory.7 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x560a41e2c6a0 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<16>'
|-CXXRecordDecl 0x560a41e2c878 prev 0x560a41e2c6a0 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x560a41e2c908 <col:46, col:52> col:46 public
|-TypedefDecl 0x560a41e2c930 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x560a417e0580 'int'
|-TypedefDecl 0x560a41e2e540 <line:13:5, col:31> col:31 type 'typename sized_array_memory<16>::type':'char_array<16>'
| `-ElaboratedType 0x560a41e2e4f0 'typename sized_array_memory<16>::type' sugar
|   `-TypedefType 0x560a41e2cde0 'sized_array_memory<16>::type' sugar
|     |-Typedef 0x560a41e2cce0 'type'
|     `-TemplateSpecializationType 0x560a41e2cc70 'char_array<16UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x560a41e2cb50 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|       |   `-SubstNonTypeTemplateParmExpr 0x560a41e2cb30 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x560a41e2cb10 <col:24> 'unsigned long' 16
|       `-RecordType 0x560a41e2cc50 'char_array<16>'
|         `-ClassTemplateSpecialization 0x560a41e2cb70 'char_array'
|-TypedefDecl 0x560a41e2e5f8 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<16> >::type *'
| `-PointerType 0x560a41e2e5c0 'vector_memory<sized_array_memory<16> >::type *'
|   `-TypedefType 0x560a41e2e5a0 'vector_memory<sized_array_memory<16> >::type' sugar
|     |-Typedef 0x560a41e2e540 'type'
|     `-ElaboratedType 0x560a41e2e4f0 'typename sized_array_memory<16>::type' sugar
|       `-TypedefType 0x560a41e2cde0 'sized_array_memory<16>::type' sugar
|         |-Typedef 0x560a41e2cce0 'type'
|         `-TemplateSpecializationType 0x560a41e2cc70 'char_array<16UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x560a41e2cb50 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 16
|           |   `-SubstNonTypeTemplateParmExpr 0x560a41e2cb30 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x560a41e2cb10 <col:24> 'unsigned long' 16
|           `-RecordType 0x560a41e2cc50 'char_array<16>'
|             `-ClassTemplateSpecialization 0x560a41e2cb70 'char_array'
|-CXXMethodDecl 0x560a41e2e778 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<16> >::type *) const' inline
| `-ParmVarDecl 0x560a41e2e688 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXConstructorDecl 0x560a41e2e868 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x560a41e2e948 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x560a41e2e948
|-CXXMethodDecl 0x560a41e2ec18 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x560a41e2eb20 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<16> > &'
|-CXXMethodDecl 0x560a41e2ee58 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x560a41e2ecd0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x560a41e2ed48 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x560a41e2f028 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x560a41e2ef18 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x560a41e2ef90 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x560a41e2f188 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x560a41e2f258 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<16> >::iterator ()'
|-CXXMethodDecl 0x560a41e2f4a8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x560a41e2f318 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x560a41e2f390 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x560a41e2f708 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<16> >::iterator (vector_memory<sized_array_memory<16> >::iterator, vector_memory<sized_array_memory<16> >::iterator)'
| |-ParmVarDecl 0x560a41e2f578 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
| `-ParmVarDecl 0x560a41e2f5f0 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<16> >::iterator':'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x560a41e2f8c8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x560a41e2f7d8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x560a41e2fa88 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<16> >::type *)' inline
| `-ParmVarDecl 0x560a41e2f990 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x560a41e2fb40 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x560a41e2fbf0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x560a41e2fe28 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<16> >::type *)'
| |-ParmVarDecl 0x560a41e2fca0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x560a41e2fd18 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<16> >::type *'
|-CXXMethodDecl 0x560a41e300c8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<16> > &)'
| `-ParmVarDecl 0x560a41e2ffd0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<16> > &'
|-FieldDecl 0x560a41e30190 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<16> >::type *'
|-FieldDecl 0x560a41e301e0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x560a41e30230 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.9 = type { %struct.char_array.10*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x560a41eccc70 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Router::Connection'
|-CXXRecordDecl 0x560a41ecce78 prev 0x560a41eccc70 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x560a41ecdf40 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Connection>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x560a41ecdef0 'typename array_memory<Connection>::type' sugar
|   `-TypedefType 0x560a41ecded0 'conditional<true, sized_array_memory<16>, typed_array_memory<Router::Connection> >::type' sugar
|     |-Typedef 0x560a41ecdd80 'type'
|     `-SubstTemplateTypeParmType 0x560a41e2c270 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x560a419feb40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a419feae8 'T'
|       `-RecordType 0x560a41e2bdc0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x560a41e2bcd8 'sized_array_memory'
|-FieldDecl 0x560a41ece040 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Router::Connection>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x560a41ece090 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x560a41ece0c8 <line:118:5, col:15> col:15 value_type 'Router::Connection':'Router::Connection'
| `-SubstTemplateTypeParmType 0x560a41eccf10 'Router::Connection' sugar
|   |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x560a41ae2938 'T'
|   `-RecordType 0x560a41ea76c0 'Router::Connection'
|     `-CXXRecord 0x560a41ea7630 'Connection'
|-TypedefDecl 0x560a41ece188 <line:119:5, col:16> col:16 reference 'Router::Connection &'
| `-LValueReferenceType 0x560a41ece150 'Router::Connection &'
|   `-SubstTemplateTypeParmType 0x560a41eccf10 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-RecordType 0x560a41ea76c0 'Router::Connection'
|       `-CXXRecord 0x560a41ea7630 'Connection'
|-TypedefDecl 0x560a41ece218 <line:120:5, col:22> col:22 const_reference 'const Router::Connection &'
| `-LValueReferenceType 0x560a41ece1e0 'const Router::Connection &'
|   `-QualType 0x560a41eccf11 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x560a41eccf10 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-RecordType 0x560a41ea76c0 'Router::Connection'
|         `-CXXRecord 0x560a41ea7630 'Connection'
|-TypedefDecl 0x560a41ece2a8 <line:121:5, col:16> col:16 pointer 'Router::Connection *'
| `-PointerType 0x560a41ece270 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x560a41eccf10 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-RecordType 0x560a41ea76c0 'Router::Connection'
|       `-CXXRecord 0x560a41ea7630 'Connection'
|-TypedefDecl 0x560a41ece338 <line:122:5, col:22> col:22 const_pointer 'const Router::Connection *'
| `-PointerType 0x560a41ece300 'const Router::Connection *'
|   `-QualType 0x560a41eccf11 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x560a41eccf10 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-RecordType 0x560a41ea76c0 'Router::Connection'
|         `-CXXRecord 0x560a41ea7630 'Connection'
|-TypedefDecl 0x560a41ecef90 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Connection>::type':'const Router::Connection &'
| `-ElaboratedType 0x560a41ecef40 'typename fast_argument<Connection>::type' sugar
|   `-TypedefType 0x560a41ecef20 'fast_argument<Router::Connection, true>::type' sugar
|     |-Typedef 0x560a41ecee58 'type'
|     `-LValueReferenceType 0x560a41ecee20 'const Router::Connection &'
|       `-QualType 0x560a41ecebc1 'const Router::Connection' const
|         `-SubstTemplateTypeParmType 0x560a41ecebc0 'Router::Connection' sugar
|           |-TemplateTypeParmType 0x560a41a077c0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x560a41a07768 'T'
|           `-RecordType 0x560a41ea76c0 'Router::Connection'
|             `-CXXRecord 0x560a41ea7630 'Connection'
|-TypedefDecl 0x560a41eceff8 <line:126:5, col:22> col:22 const_access_type 'const Router::Connection &'
| `-LValueReferenceType 0x560a41ece1e0 'const Router::Connection &'
|   `-QualType 0x560a41eccf11 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x560a41eccf10 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-RecordType 0x560a41ea76c0 'Router::Connection'
|         `-CXXRecord 0x560a41ea7630 'Connection'
|-TypedefDecl 0x560a41ecf050 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x560a417e0580 'int'
|-TypedefDecl 0x560a41ecf0b8 <line:130:5, col:16> col:16 iterator 'Router::Connection *'
| `-PointerType 0x560a41ece270 'Router::Connection *'
|   `-SubstTemplateTypeParmType 0x560a41eccf10 'Router::Connection' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-RecordType 0x560a41ea76c0 'Router::Connection'
|       `-CXXRecord 0x560a41ea7630 'Connection'
|-TypedefDecl 0x560a41ecf120 <line:131:5, col:22> col:22 const_iterator 'const Router::Connection *'
| `-PointerType 0x560a41ece300 'const Router::Connection *'
|   `-QualType 0x560a41eccf11 'const Router::Connection' const
|     `-SubstTemplateTypeParmType 0x560a41eccf10 'Router::Connection' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-RecordType 0x560a41ea76c0 'Router::Connection'
|         `-CXXRecord 0x560a41ea7630 'Connection'
|-EnumDecl 0x560a41ecf178 <line:134:5> col:5
| `-EnumConstantDecl 0x560a41ecf270 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Router::Connection>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x560a41ecf250 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x560a41ae4378 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x560a41ae4350 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x560a41ae4330 <col:40> 'int' 1
|-CXXConstructorDecl 0x560a41ecf2f8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x560a41ecf588 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41ecf3b0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41ecf450 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXConstructorDecl 0x560a41ecf848 <line:139:5, col:37> col:12 Vector 'void (const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x560a41ecf730 <col:19, col:36> col:36 x 'const Vector<Router::Connection> &'
|-CXXConstructorDecl 0x560a41ecfb08 <line:141:5, col:32> col:12 Vector 'void (Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x560a41ecf9f0 <col:19, col:31> col:31 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x560a41ecfe50 <line:144:5, col:51> col:23 operator= 'Vector<Router::Connection> &(const Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x560a41ecfd30 <col:33, col:50> col:50 x 'const Vector<Router::Connection> &'
|-CXXMethodDecl 0x560a41ed0160 <line:146:5, col:46> col:23 operator= 'Vector<Router::Connection> &(Vector<Router::Connection> &&)' inline
| `-ParmVarDecl 0x560a41ed0040 <col:33, col:45> col:45 x 'Vector<Router::Connection> &&'
|-CXXMethodDecl 0x560a41ed0450 <line:148:5, col:70> col:23 assign 'Vector<Router::Connection> &(Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41ed0298 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41ed0310 <col:43, col:69> col:63 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x560a41ed05a8 <line:150:5, col:55> col:49 begin 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x560a41ed0688 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41ed06e0 <col:30> Inherited
|-CXXMethodDecl 0x560a41ed0728 <line:151:5, col:53> col:49 end 'Vector<Router::Connection>::iterator ()'
| |-NoInlineAttr 0x560a41ed07d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41ed0830 <col:30> Inherited
|-CXXMethodDecl 0x560a41ed08f8 <line:152:5, col:63> col:55 begin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x560a41ed09a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41ed0a00 <col:30> Inherited
|-CXXMethodDecl 0x560a41ed0a48 <line:153:5, col:61> col:55 end 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x560a41ed0af8 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41ed0b50 <col:30> Inherited
|-CXXMethodDecl 0x560a41ed0b98 <line:154:5, col:64> col:55 cbegin 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x560a41ed0c48 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41ed0ca0 <col:30> Inherited
|-CXXMethodDecl 0x560a41ed0ce8 <line:155:5, col:62> col:55 cend 'Vector<Router::Connection>::const_iterator () const'
| |-NoInlineAttr 0x560a41ed0d98 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41ed0df0 <col:30> Inherited
|-CXXMethodDecl 0x560a41ed0e18 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x560a41ed0ec8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x560a41ed0f78 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x560a41ed1138 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41ed1028 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41ed10a0 <col:37, col:63> col:57 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x560a41ed1288 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x560a41ed11f8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41ed1438 <line:163:5, col:65> col:43 operator[] 'Router::Connection &(Vector::size_type)'
| |-ParmVarDecl 0x560a41ed1340 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x560a41ed14f0 <col:20>
| `-OptimizeNoneAttr 0x560a41ed1548 <col:30>
|-CXXMethodDecl 0x560a41ed1668 <line:164:5, col:73> col:49 operator[] 'const Router::Connection &(Vector::size_type) const'
| |-ParmVarDecl 0x560a41ed1570 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x560a41ed1720 <col:20>
| `-OptimizeNoneAttr 0x560a41ed1778 <col:30>
|-CXXMethodDecl 0x560a41ed1830 <line:165:5, col:29> col:15 at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x560a41ed17a0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41ed1978 <line:166:5, col:37> col:21 at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x560a41ed18e8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41ed1aa8 <line:167:5, col:21> col:15 front 'Router::Connection &()' inline
|-CXXMethodDecl 0x560a41ed1bd8 <line:168:5, col:29> col:21 front 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x560a41ed1ca8 <line:169:5, col:20> col:15 back 'Router::Connection &()' inline
|-CXXMethodDecl 0x560a41ed1d78 <line:170:5, col:28> col:21 back 'const Router::Connection &() const' inline
|-CXXMethodDecl 0x560a41ed1eb8 <line:172:5, col:39> col:15 unchecked_at 'Router::Connection &(Vector::size_type)' inline
| `-ParmVarDecl 0x560a41ed1e28 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41ed2000 <line:173:5, col:47> col:21 unchecked_at 'const Router::Connection &(Vector::size_type) const' inline
| `-ParmVarDecl 0x560a41ed1f70 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41ed2148 <line:174:5, col:59> col:15 at_u 'Router::Connection &(Vector::size_type)' inline
| |-ParmVarDecl 0x560a41ed20b8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x560a41ed2200 <col:48> Inherited "" ""
|-CXXMethodDecl 0x560a41ed2300 <line:175:5, col:71> col:21 at_u 'const Router::Connection &(Vector::size_type) const' inline
| |-ParmVarDecl 0x560a41ed2270 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x560a41ed23b8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x560a41ed2478 <line:177:5, col:20> col:15 data 'Router::Connection *()' inline
|-CXXMethodDecl 0x560a41ed2578 <line:178:5, col:28> col:21 data 'const Router::Connection *() const' inline
|-CXXMethodDecl 0x560a41ed2728 <line:180:5, col:48> col:17 push_back 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x560a41ed2638 <col:27, col:47> col:47 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-FunctionTemplateDecl 0x560a41ed2ee8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x560a41ed27e0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Router::Connection>':'fast_argument<Router::Connection, true>'
| `-CXXMethodDecl 0x560a41ed2e48 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Router::Connection &&)' inline
|   `-ParmVarDecl 0x560a41ed2d48 <col:58, col:62> col:62 v 'Router::Connection &&'
|-CXXMethodDecl 0x560a41ed2fc8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x560a41ed3118 <line:186:5, col:49> col:17 push_front 'void (Vector<Router::Connection>::value_argument_type)' inline
| `-ParmVarDecl 0x560a41ed3088 <col:28, col:48> col:48 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x560a41ed31d0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x560a41ed3418 <line:189:5, col:62> col:21 insert 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41ed3290 <col:28, col:37> col:37 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x560a41ed3308 <col:41, col:61> col:61 v 'Vector<Router::Connection>::value_argument_type':'const Router::Connection &'
|-CXXMethodDecl 0x560a41ed35d8 <line:190:5, col:38> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator)' inline
| `-ParmVarDecl 0x560a41ed34e8 <col:27, col:36> col:36 it 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x560a41ed3828 <line:191:5, col:49> col:21 erase 'Vector<Router::Connection>::iterator (Vector<Router::Connection>::iterator, Vector<Router::Connection>::iterator)' inline
| |-ParmVarDecl 0x560a41ed36a0 <col:27, col:36> col:36 a 'Vector<Router::Connection>::iterator':'Router::Connection *'
| `-ParmVarDecl 0x560a41ed3718 <col:39, col:48> col:48 b 'Vector<Router::Connection>::iterator':'Router::Connection *'
|-CXXMethodDecl 0x560a41ed38e8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x560a41ed3b48 <line:195:5, col:34> col:17 swap 'void (Vector<Router::Connection> &)' inline
| `-ParmVarDecl 0x560a41ed3a50 <col:22, col:33> col:33 x 'Vector<Router::Connection> &'
`-CXXDestructorDecl 0x560a41ed3c18 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x560a41ed3c18

Layout: <CGRecordLayout
  LLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.8 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5)
         0 |   HandlerCallback h
         0 |   ReadHandlerCallback r
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5)
         0 |   HandlerCallback h
         0 |   WriteHandlerCallback w
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Handler
         0 |   class String _name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:290:5) _read_hook
        24 |     HandlerCallback h
        24 |     ReadHandlerCallback r
        32 |   union Handler::(anonymous at ../dummy_inc/click/handler.hh:294:5) _write_hook
        32 |     HandlerCallback h
        32 |     WriteHandlerCallback w
        40 |   void * _read_user_data
        48 |   void * _write_user_data
        56 |   uint32_t _flags
        60 |   int _use_count
        64 |   int _next_by_name
           | [sizeof=72, dsize=68, align=8,
           |  nvsize=68, nvalign=8]

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41eee410 prev 0x560a41df7c70 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x560a41eee508 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x560a41eee598 <col:22, col:28> col:22 public
|-EnumDecl 0x560a41eee5c0 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x560a41eee6d8 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x560a41eee6b8 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x560a41eee6a0 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x560a41eee680 <col:14> 'int' 999
| |-EnumConstantDecl 0x560a41eee780 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x560a41eee760 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x560a41eee748 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x560a41eee728 <col:14> 'int' 1
| |-EnumConstantDecl 0x560a41eee810 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x560a41eee7f0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x560a41eee7d0 <col:17> 'int' 0
| |-EnumConstantDecl 0x560a41eee8a0 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x560a41eee880 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x560a41eee860 <col:13> 'int' 1
| |-EnumConstantDecl 0x560a41eee930 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x560a41eee910 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x560a41eee8f0 <col:16> 'int' 2
| |-EnumConstantDecl 0x560a41eee9c0 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x560a41eee9a0 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x560a41eee980 <col:13> 'int' 3
| |-EnumConstantDecl 0x560a41eeea50 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x560a41eeea30 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x560a41eeea10 <col:15> 'int' 4
| |-EnumConstantDecl 0x560a41eeeae0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x560a41eeeac0 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x560a41eeeaa0 <col:14> 'int' 5
| |-EnumConstantDecl 0x560a41eeeb70 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x560a41eeeb50 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x560a41eeeb30 <col:12> 'int' 6
| `-EnumConstantDecl 0x560a41eeec00 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x560a41eeebe0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x560a41eeebc0 <col:13> 'int' 7
|-VarDecl 0x560a41eeec70 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x560a41eeecf8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x560a41eeed80 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x560a41eeee08 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x560a41eeee90 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x560a41eeef18 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x560a41eeefa0 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x560a41eef028 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x560a41eef0b0 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x560a41eef138 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x560a41eef1c0 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x560a41eef2c0 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x560a419f2eb8 '_nerrors' 'int'
| | `-IntegerLiteral 0x560a419f3648 <line:128:13> 'int' 0
| `-CompoundStmt 0x560a419f36b8 <col:16, line:129:5>
|-CXXDestructorDecl 0x560a41eef3b0 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x560a419f36c8 <col:29, line:132:5>
|-CXXMethodDecl 0x560a41eef568 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x560a41eef4a0 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x560a41eef630 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x560a41eef718 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x560a419f3720 <col:44, line:161:5>
|   `-ReturnStmt 0x560a419f3710 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x560a419f36f8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x560a419f36d8 <col:9> 'ErrorHandler *' lvalue Var 0x560a419f2f18 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x560a41eef858 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x560a41eef7c8 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x560a41eef920 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x560a419f3780 <col:43, line:173:5>
|   `-ReturnStmt 0x560a419f3770 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x560a419f3758 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x560a419f3738 <col:9> 'ErrorHandler *' lvalue Var 0x560a419f2f90 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x560a41eef9d8 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x560a41eefa58 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x560a41eefb68 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x560a41eefad8 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x560a41eefcb8 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x560a41eefc28 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x560a41eefe10 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x560a41eefd78 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x560a41eeff68 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x560a41eefed0 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x560a41ef00c0 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x560a41ef0028 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x560a41ef02d0 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x560a41ef0178 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x560a41ef01f8 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x560a41ef04a8 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x560a41ef0390 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x560a41ef0410 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x560a41ef06c8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x560a41ef0568 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x560a41ef05e8 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x560a41ef08a8 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x560a41ef0788 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x560a41ef0808 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x560a41ef0a88 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x560a41ef0968 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x560a41ef09e8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x560a41ef0c10 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x560a41ef0b48 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x560a41ef0de0 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x560a41ef0cc8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x560a41ef0d40 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x560a419f39d8 <col:57, line:234:5>
|   `-ReturnStmt 0x560a419f39c8 <line:233:2, col:41>
|     `-ExprWithCleanups 0x560a419f39b0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x560a419f3958 <col:9, col:41> 'int'
|         |-MemberExpr 0x560a419f3928 <col:9> '<bound member function type>' ->xmessage 0x560a41ef0c10
|         | `-CXXThisExpr 0x560a419f3918 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x560a419f3998 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x560a419f3980 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x560a419f38f8 <col:18, col:40> 'String' (CXXTemporary 0x560a419f38f8)
|               `-CallExpr 0x560a419f38c0 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x560a419f38a8 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x560a419f3820 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x560a419f16e8 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x560a419f3840 <col:31> 'const String' lvalue ParmVar 0x560a41ef0d40 'str' 'const String &'
|                 `-DeclRefExpr 0x560a419f3860 <col:36> 'const String' lvalue ParmVar 0x560a41ef0cc8 'anno' 'const String &'
|-CXXMethodDecl 0x560a41ef10c0 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x560a41ef0ea0 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x560a41ef0f20 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x560a41ef0f98 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x560a419f3c68 <col:68, line:243:5>
|   `-ReturnStmt 0x560a419f3c58 <line:242:2, col:41>
|     `-ExprWithCleanups 0x560a419f3c40 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x560a419f3be0 <col:9, col:41> 'int'
|         |-MemberExpr 0x560a419f3bb0 <col:9> '<bound member function type>' ->xmessage 0x560a41ef0de0
|         | `-CXXThisExpr 0x560a419f3ba0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x560a419f3a78 <col:18> 'const String' lvalue ParmVar 0x560a41ef0ea0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x560a419f3c28 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x560a419f3c10 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x560a419f3b80 <col:24, col:40> 'String' (CXXTemporary 0x560a419f3b80)
|               `-CXXMemberCallExpr 0x560a419f3b18 <col:24, col:40> 'String'
|                 |-MemberExpr 0x560a419f3aa8 <col:24> '<bound member function type>' ->vformat 0x560a419f0bb0
|                 | `-CXXThisExpr 0x560a419f3a98 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x560a419f3b48 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x560a419f3ad8 <col:32> 'const char *' lvalue ParmVar 0x560a41ef0f20 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x560a419f3b60 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x560a419f3af8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x560a41ef0f98 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x560a41ef1360 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x560a41ef1188 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x560a41ef1200 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x560a41ef1278 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x560a419f3fa8 <col:23, line:254:5>
|   `-ReturnStmt 0x560a419f3f98 <line:253:2, col:71>
|     `-ExprWithCleanups 0x560a419f3f80 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x560a419f3f20 <col:9, col:71> 'int'
|         |-MemberExpr 0x560a419f3ef0 <col:9> '<bound member function type>' ->xmessage 0x560a41ef0de0
|         | `-CXXThisExpr 0x560a419f3ee0 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x560a419f3f68 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x560a419f3f50 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x560a419f3ea0 <col:18, col:65> 'String' (CXXTemporary 0x560a419f3ea0)
|         |     `-CallExpr 0x560a419f3e38 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x560a419f3e20 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x560a419f3d08 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x560a419f16e8 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x560a419f3d28 <col:31> 'const String' lvalue ParmVar 0x560a41ef1200 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x560a419f3e80 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x560a419f3e68 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x560a419f3e00 <col:37, col:64> 'String' (CXXTemporary 0x560a419f3e00)
|         |             `-CallExpr 0x560a419f3dd0 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x560a419f3db8 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x560a419f3d48 <col:37> 'String (const String &)' lvalue CXXMethod 0x560a419f1d38 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x560a419f3d68 <col:56> 'const String' lvalue ParmVar 0x560a41ef1188 'landmark' 'const String &'
|         `-DeclRefExpr 0x560a419f3ec0 <col:68> 'const String' lvalue ParmVar 0x560a41ef1278 'str' 'const String &'
|-CXXMethodDecl 0x560a41ef16e0 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x560a41ef1428 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x560a41ef14a0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x560a41ef1520 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x560a41ef1598 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x560a419f4260 <col:34, line:267:5>
|   `-ReturnStmt 0x560a419f4250 <line:266:2, col:51>
|     `-ExprWithCleanups 0x560a419f4238 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x560a419f41d0 <col:9, col:51> 'int'
|         |-MemberExpr 0x560a419f41a0 <col:9> '<bound member function type>' ->xmessage 0x560a41ef1360
|         | `-CXXThisExpr 0x560a419f4190 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x560a419f4048 <col:18> 'const String' lvalue ParmVar 0x560a41ef1428 'landmark' 'const String &'
|         |-DeclRefExpr 0x560a419f4068 <col:28> 'const String' lvalue ParmVar 0x560a41ef14a0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x560a419f4220 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x560a419f4208 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x560a419f4170 <col:34, col:50> 'String' (CXXTemporary 0x560a419f4170)
|               `-CXXMemberCallExpr 0x560a419f4108 <col:34, col:50> 'String'
|                 |-MemberExpr 0x560a419f4098 <col:34> '<bound member function type>' ->vformat 0x560a419f0bb0
|                 | `-CXXThisExpr 0x560a419f4088 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x560a419f4138 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x560a419f40c8 <col:42> 'const char *' lvalue ParmVar 0x560a41ef1520 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x560a419f4150 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x560a419f40e8 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x560a41ef1598 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x560a41ef17f0 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x560a419f42e0 <col:25, line:288:5>
|   `-ReturnStmt 0x560a419f42d0 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x560a419f42b8 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x560a419f4288 <col:9> 'const int' lvalue ->_nerrors 0x560a419f2eb8
|         `-CXXThisExpr 0x560a419f4278 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x560a419f0310 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x560a41ef18a8 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x560a419f0238 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x560a419f05f8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x560a419f03d8 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x560a419f0458 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x560a419f04d0 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x560a419f0790 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x560a419f06c8 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x560a419f09d8 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x560a419f0850 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x560a419f08c8 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x560a419f4540 <col:58, line:357:5>
|   `-ReturnStmt 0x560a419f4530 <line:356:2, col:29>
|     `-ExprWithCleanups 0x560a419f4518 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x560a419f44e8 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x560a419f44d0 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x560a419f44b0 <col:9, col:29> 'String' (CXXTemporary 0x560a419f44b0)
|             `-CallExpr 0x560a419f4440 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x560a419f4428 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x560a419f43a8 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x560a419f05f8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x560a419f4348 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x560a419f4478 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x560a419f4368 <col:21> 'const char *' lvalue ParmVar 0x560a419f0850 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x560a419f4490 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x560a419f4388 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x560a419f08c8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x560a419f0bb0 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x560a419f0aa0 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x560a419f0b18 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x560a419f0d08 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x560a419f0c78 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x560a419f0e50 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x560a419f0dc0 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x560a419f10f0 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x560a419f0f08 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x560a419f0f88 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x560a419f1000 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x560a419f1250 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x560a419f11c0 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x560a419f4658 <col:37, line:441:5>
|   `-IfStmt 0x560a419f4640 <line:439:2, line:440:8>
|     |-BinaryOperator 0x560a419f45c8 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x560a419f4598 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x560a419f4558 <col:6> 'int' lvalue ParmVar 0x560a419f11c0 'level' 'int'
|     | `-ImplicitCastExpr 0x560a419f45b0 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x560a419f4578 <col:15> 'ErrorHandler::Level' EnumConstant 0x560a41eee9c0 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x560a419f4628 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x560a419f45f8 <col:8> 'int' lvalue ->_nerrors 0x560a419f2eb8
|         `-CXXThisExpr 0x560a419f45e8 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x560a419f1318 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x560a419f46f0 <col:26, line:448:5>
|   `-BinaryOperator 0x560a419f46d0 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x560a419f4680 <col:2> 'int' lvalue ->_nerrors 0x560a419f2eb8
|     | `-CXXThisExpr 0x560a419f4670 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x560a419f46b0 <col:13> 'int' 0
|-CXXMethodDecl 0x560a419f14e0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x560a419f13d0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x560a419f1448 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x560a419f16e8 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x560a419f15a0 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x560a419f1618 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x560a419f1998 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x560a419f17a8 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x560a419f1828 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x560a419f18a8 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x560a419f1a50 <col:59> 0 0
|-CXXMethodDecl 0x560a419f1be8 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x560a419f1ac8 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x560a419f1b48 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x560a419f4d60 <col:70, line:534:5>
|   |-DeclStmt 0x560a419f4860 <line:528:2, col:20>
|   | |-VarDecl 0x560a419f4718 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x560a419f4780 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x560a419f47b8 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x560a419f4820 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x560a419f4930 <line:529:2, col:23>
|   | `-VarDecl 0x560a419f4890 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x560a419f4918 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x560a419f48f8 <col:18> 'const char *' lvalue ParmVar 0x560a419f1ac8 'begin' 'const char *'
|   |-DoStmt 0x560a419f4cf8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x560a419f4c28 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x560a419f4c10 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x560a419f4bf0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x560a419f4948 <col:6> 'const char *' lvalue Var 0x560a419f4890 'x' 'const char *'
|   | |     `-CallExpr 0x560a419f4b40 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x560a419f4b28 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x560a419f4ae0 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x560a419f3390 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x560a419f4ba8 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x560a419f4b90 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x560a419f4a00 <col:20, col:27> 'String' (CXXTemporary 0x560a419f4a00)
|   | |       |     `-CXXTemporaryObjectExpr 0x560a419f49c8 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x560a419f4bc0 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x560a419f4a20 <col:30> 'const char *' lvalue Var 0x560a419f4890 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x560a419f4bd8 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x560a419f4a40 <col:33> 'const char *' lvalue ParmVar 0x560a419f1b48 'end' 'const char *'
|   | |       |-UnaryOperator 0x560a419f4a80 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x560a419f4a60 <col:39> 'String' lvalue Var 0x560a419f4718 'name' 'String'
|   | |       |-UnaryOperator 0x560a419f4ab8 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x560a419f4a98 <col:46> 'String' lvalue Var 0x560a419f47b8 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x560a419f4ad0 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x560a419f4ce0 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x560a419f4cc8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x560a419f4ca8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x560a419f4c78 <col:11> '<bound member function type>' .operator int (String::*)() const 0x560a41b14918
|   |         `-ImplicitCastExpr 0x560a419f4c60 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x560a419f4c40 <col:11> 'String' lvalue Var 0x560a419f4718 'name' 'String'
|   `-ReturnStmt 0x560a419f4d50 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x560a419f4d38 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x560a419f4d18 <col:9> 'const char *' lvalue Var 0x560a419f4890 'x' 'const char *'
|-CXXMethodDecl 0x560a419f1d38 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x560a419f1ca8 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x560a419f5368 <col:55, line:550:5>
|   `-IfStmt 0x560a419f5340 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x560a419f4fa0 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x560a419f4f88 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x560a419f4f70 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x560a419f4f50 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x560a419f4f20 <col:6> '<bound member function type>' .operator int (String::*)() const 0x560a41b14918
|     | |       `-DeclRefExpr 0x560a419f4dc0 <col:6> 'const String' lvalue ParmVar 0x560a419f1ca8 'x' 'const String &'
|     | `-BinaryOperator 0x560a419f4f00 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x560a419f4ed0 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x560a419f4e80 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x560a419f4e68 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x560a419f4e20 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x560a41b2dfb0 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x560a419f4de0 <col:11> 'const String' lvalue ParmVar 0x560a419f1ca8 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x560a419f4e00 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x560a419f4ee8 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x560a419f4eb8 <col:19> 'char' 123
|     |-ReturnStmt 0x560a419f5010 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x560a419f4fe0 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x560a419f4fc0 <col:13> 'const String' lvalue ParmVar 0x560a419f1ca8 'x' 'const String &'
|     `-IfStmt 0x560a419f5318 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x560a419f50a8 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x560a419f5090 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x560a419f5070 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x560a419f5040 <col:11> '<bound member function type>' .operator int (String::*)() const 0x560a41b14918
|       |       `-DeclRefExpr 0x560a419f5020 <col:11> 'const String' lvalue ParmVar 0x560a419f1ca8 'x' 'const String &'
|       |-ReturnStmt 0x560a419f5230 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x560a419f5218 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x560a419f51e8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x560a419f51d0 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x560a419f51b0 <col:13, col:29> 'String' (CXXTemporary 0x560a419f51b0)
|       |         `-CallExpr 0x560a419f5160 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x560a419f5148 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x560a419f50c0 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x560a419f14e0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x560a419f5190 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x560a419f50e0 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x560a419f5100 <col:28> 'const String' lvalue ParmVar 0x560a419f1ca8 'x' 'const String &'
|       `-ReturnStmt 0x560a419f5308 <line:549:6, col:20>
|         `-ExprWithCleanups 0x560a419f52f0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x560a419f52c0 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x560a419f52a8 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x560a419f5288 <col:13, col:20> 'String' (CXXTemporary 0x560a419f5288)
|                 `-CXXTemporaryObjectExpr 0x560a419f5250 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x560a419f1f00 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x560a419f1df0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x560a419f1e68 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x560a419f3638 <col:71> 'bool' false
|-CXXRecordDecl 0x560a419f1fb0 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x560a419f22a8 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x560a419f2240 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x560a419f21e0 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x560a419f21a0 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x560a41b11170 'String'
|       | `-CXXRecord 0x560a41b110e0 'String'
|       |-BuiltinType 0x560a417e0580 'int'
|       `-DecayedType 0x560a41d2fcd0 '__va_list_tag *' sugar
|         |-TypedefType 0x560a41d2fca0 'va_list' sugar
|         | |-Typedef 0x560a41a2f430 'va_list'
|         | `-TypedefType 0x560a41a2f3e0 '__gnuc_va_list' sugar
|         |   |-Typedef 0x560a41a281d8 '__gnuc_va_list'
|         |   `-TypedefType 0x560a41a28140 '__builtin_va_list' sugar
|         |     |-Typedef 0x560a41821d38 '__builtin_va_list'
|         |     `-ConstantArrayType 0x560a41821ce0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x560a417e12d0 '__va_list_tag'
|         |         `-CXXRecord 0x560a417e1238 '__va_list_tag'
|         `-PointerType 0x560a41a35130 '__va_list_tag *'
|           `-RecordType 0x560a417e12d0 '__va_list_tag'
|             `-CXXRecord 0x560a417e1238 '__va_list_tag'
|-EnumDecl 0x560a419f2300 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x560a419f2400 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x560a419f2960 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a419f23e0 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x560a419f23c0 <col:16> 'int' 1
| |-EnumConstantDecl 0x560a419f2490 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x560a419f2978 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a419f2470 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x560a419f2450 <col:21> 'int' 2
| |-EnumConstantDecl 0x560a419f2520 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x560a419f2990 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a419f2500 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x560a419f24e0 <col:22> 'int' 4
| |-EnumConstantDecl 0x560a419f25b0 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x560a419f29a8 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a419f2590 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x560a419f2570 <col:17> 'int' 8
| |-EnumConstantDecl 0x560a419f2640 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x560a419f29c0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a419f2620 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x560a419f2600 <col:22> 'int' 16
| |-EnumConstantDecl 0x560a419f26d0 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x560a419f29d8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a419f26b0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x560a419f2690 <col:19> 'int' 32
| |-EnumConstantDecl 0x560a419f2760 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x560a419f29f0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a419f2740 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x560a419f2720 <col:17> 'int' 64
| |-EnumConstantDecl 0x560a419f27f0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x560a419f2a08 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a419f27d0 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x560a419f27b0 <col:14> 'int' 128
| |-EnumConstantDecl 0x560a419f2880 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x560a419f2a20 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a419f2860 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x560a419f2840 <col:16> 'int' 256
| `-EnumConstantDecl 0x560a419f2910 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x560a419f2a38 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a419f28f0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x560a419f28d0 <col:12> 'int' 1024
|-CXXMethodDecl 0x560a419f2c48 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x560a419f2a60 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x560a419f2b00 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x560a419f2dd0 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x560a419f2d08 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x560a419f2e78 <line:580:3, col:10> col:3 private
|-FieldDecl 0x560a419f2eb8 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x560a419f2f18 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x560a419f2f90 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x560a419f3390 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x560a419f3008 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x560a419f3088 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x560a419f3108 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x560a419f3180 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x560a419f31f8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x560a419f3270 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x560a419f34b8 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x560a419f34b8
| `-ParmVarDecl 0x560a419f35c8 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x560a419f56c8 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x560a419f56c8
  `-ParmVarDecl 0x560a419f57d8 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41ceff30 <../dummy_inc/click/handler.hh:290:5, line:293:5> line:290:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x560a41cf0080 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x560a41cf0100 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
|-CXXConstructorDecl 0x560a41cf0e38 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x560a41cf0e38
| `-ParmVarDecl 0x560a41cf0f48 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXConstructorDecl 0x560a41cf0fe8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x560a41cf0fe8
| `-ParmVarDecl 0x560a41cf10f8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
|-CXXDestructorDecl 0x560a41cf1168 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x560a41cf1168
|-CXXMethodDecl 0x560a41cf1a38 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x560a41cf1a38
| `-ParmVarDecl 0x560a41cf1b48 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
|-CXXMethodDecl 0x560a41cf1bb8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x560a41cf1bb8
| `-ParmVarDecl 0x560a41cf1cc8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
`-CXXConstructorDecl 0x560a41eedfa0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x560a41eee080 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41cf0230 <../dummy_inc/click/handler.hh:294:5, line:297:5> line:294:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x560a41cf0358 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
|-FieldDecl 0x560a41cf03e0 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
|-CXXConstructorDecl 0x560a41cf1298 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x560a41cf1298
| `-ParmVarDecl 0x560a41cf13a8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXConstructorDecl 0x560a41cf1448 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x560a41cf1448
| `-ParmVarDecl 0x560a41cf1558 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
|-CXXDestructorDecl 0x560a41cf15c8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x560a41cf15c8
|-CXXMethodDecl 0x560a41cf1d68 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x560a41cf1d68
| `-ParmVarDecl 0x560a41cf1e78 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
|-CXXMethodDecl 0x560a41cf1ee8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x560a41cf1ee8
| `-ParmVarDecl 0x560a41cf1ff8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
`-CXXConstructorDecl 0x560a41eee0e0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
  `-CompoundStmt 0x560a41eee1c0 <col:5>

Layout: <CGRecordLayout
  LLVMType:%union.anon.11 = type { i32 (i32, %class.String*, %class.Element*, %class.Handler*, %class.ErrorHandler*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41ceb8f8 prev 0x560a41ceae98 <../dummy_inc/click/handler.hh:19:1, line:313:1> line:19:7 class Handler definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x560a41ceb9f0 <col:1, col:7> col:7 implicit referenced class Handler
|-AccessSpecDecl 0x560a41ceba80 <col:17, col:23> col:17 public
|-EnumDecl 0x560a41cebaa8 <line:21:5, line:59:5> line:21:10 Flags
| |-EnumConstantDecl 0x560a41cebbb0 <line:22:2, col:11> col:2 referenced f_read 'Handler::Flags'
| | `-ImplicitCastExpr 0x560a41cec900 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cebb90 <col:11> 'int' Int: 1
| |     `-IntegerLiteral 0x560a41cebb70 <col:11> 'int' 1
| |-EnumConstantDecl 0x560a41cebc40 <line:23:2, col:12> col:2 referenced f_write 'Handler::Flags'
| | `-ImplicitCastExpr 0x560a41cec918 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cebc20 <col:12> 'int' Int: 2
| |     `-IntegerLiteral 0x560a41cebc00 <col:12> 'int' 2
| |-EnumConstantDecl 0x560a41cebcd0 <line:24:2, col:17> col:2 referenced f_read_param 'Handler::Flags'
| | `-ImplicitCastExpr 0x560a41cec930 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cebcb0 <col:17> 'int' Int: 4
| |     `-IntegerLiteral 0x560a41cebc90 <col:17> 'int' 4
| |-EnumConstantDecl 0x560a41cebd60 <line:25:2, col:16> col:2 referenced f_exclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x560a41cec948 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cebd40 <col:16> 'int' Int: 0
| |     `-IntegerLiteral 0x560a41cebd20 <col:16> 'int' 0
| |-EnumConstantDecl 0x560a41cebdf0 <line:28:2, col:19> col:2 referenced f_nonexclusive 'Handler::Flags'
| | `-ImplicitCastExpr 0x560a41cec960 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cebdd0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x560a41cebdb0 <col:19> 'int' 32
| |-EnumConstantDecl 0x560a41cebe80 <line:31:2, col:10> col:2 referenced f_raw 'Handler::Flags'
| | `-ImplicitCastExpr 0x560a41cec978 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cebe60 <col:10> 'int' Int: 64
| |     `-IntegerLiteral 0x560a41cebe40 <col:10> 'int' 64
| |-EnumConstantDecl 0x560a41cebf10 <line:32:2, col:19> col:2 referenced f_read_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x560a41cec990 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cebef0 <col:19> 'int' Int: 128
| |     `-IntegerLiteral 0x560a41cebed0 <col:19> 'int' 128
| |-EnumConstantDecl 0x560a41cebfa0 <line:34:2, col:20> col:2 referenced f_write_private 'Handler::Flags'
| | `-ImplicitCastExpr 0x560a41cec9a8 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cebf80 <col:20> 'int' Int: 256
| |     `-IntegerLiteral 0x560a41cebf60 <col:20> 'int' 256
| |-EnumConstantDecl 0x560a41cec030 <line:36:2, col:17> col:2 referenced f_deprecated 'Handler::Flags'
| | `-ImplicitCastExpr 0x560a41cec9c0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cec010 <col:17> 'int' Int: 512
| |     `-IntegerLiteral 0x560a41cebff0 <col:17> 'int' 512
| |-EnumConstantDecl 0x560a41cec0c0 <line:38:2, col:15> col:2 referenced f_uncommon 'Handler::Flags'
| | `-ImplicitCastExpr 0x560a41cec9d8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cec0a0 <col:15> 'int' Int: 1024
| |     `-IntegerLiteral 0x560a41cec080 <col:15> 'int' 1024
| |-EnumConstantDecl 0x560a41cec150 <line:40:2, col:11> col:2 referenced f_calm 'Handler::Flags'
| | `-ImplicitCastExpr 0x560a41cec9f0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cec130 <col:11> 'int' Int: 2048
| |     `-IntegerLiteral 0x560a41cec110 <col:11> 'int' 2048
| |-EnumConstantDecl 0x560a41cec1e0 <line:41:2, col:16> col:2 referenced f_expensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x560a41ceca08 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cec1c0 <col:16> 'int' Int: 4096
| |     `-IntegerLiteral 0x560a41cec1a0 <col:16> 'int' 4096
| |-EnumConstantDecl 0x560a41cec270 <line:42:2, col:13> col:2 referenced f_button 'Handler::Flags'
| | `-ImplicitCastExpr 0x560a41ceca20 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cec250 <col:13> 'int' Int: 8192
| |     `-IntegerLiteral 0x560a41cec230 <col:13> 'int' 8192
| |-EnumConstantDecl 0x560a41cec300 <line:43:2, col:15> col:2 referenced f_checkbox 'Handler::Flags'
| | `-ImplicitCastExpr 0x560a41ceca38 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cec2e0 <col:15> 'int' Int: 16384
| |     `-IntegerLiteral 0x560a41cec2c0 <col:15> 'int' 16384
| |-EnumConstantDecl 0x560a41cec3d0 <line:45:2, col:20> col:2 referenced f_driver0 'Handler::Flags'
| | `-ConstantExpr 0x560a41cec3b0 <col:14, col:20> 'unsigned int' Int: 67108864
| |   `-BinaryOperator 0x560a41cec390 <col:14, col:20> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x560a41cec350 <col:14> 'unsigned int' 1
| |     `-IntegerLiteral 0x560a41cec370 <col:20> 'int' 26
| |-EnumConstantDecl 0x560a41cec4a0 <line:46:9, col:27> col:9 referenced f_driver1 'Handler::Flags'
| | `-ConstantExpr 0x560a41cec480 <col:21, col:27> 'unsigned int' Int: 134217728
| |   `-BinaryOperator 0x560a41cec460 <col:21, col:27> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x560a41cec420 <col:21> 'unsigned int' 1
| |     `-IntegerLiteral 0x560a41cec440 <col:27> 'int' 27
| |-EnumConstantDecl 0x560a41cec530 <line:48:2, col:17> col:2 referenced f_user_shift 'Handler::Flags'
| | `-ImplicitCastExpr 0x560a41ceca50 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cec510 <col:17> 'int' Int: 28
| |     `-IntegerLiteral 0x560a41cec4f0 <col:17> 'int' 28
| |-EnumConstantDecl 0x560a41cec600 <line:49:2, col:18> col:2 referenced f_user0 'Handler::Flags'
| | `-ConstantExpr 0x560a41cec5e0 <col:12, col:18> 'unsigned int' Int: 268435456
| |   `-BinaryOperator 0x560a41cec5c0 <col:12, col:18> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x560a41cec580 <col:12> 'unsigned int' 1
| |     `-DeclRefExpr 0x560a41cec5a0 <col:18> 'int' EnumConstant 0x560a41cec530 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x560a41cec690 <line:54:2, col:25> col:2 referenced f_read_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x560a41ceca68 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cec670 <col:25> 'int' Int: 8
| |     `-IntegerLiteral 0x560a41cec650 <col:25> 'int' 8
| |-EnumConstantDecl 0x560a41cec720 <line:55:2, col:26> col:2 referenced f_write_comprehensive 'Handler::Flags'
| | `-ImplicitCastExpr 0x560a41ceca80 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cec700 <col:26> 'int' Int: 16
| |     `-IntegerLiteral 0x560a41cec6e0 <col:26> 'int' 16
| `-EnumConstantDecl 0x560a41cec8b0 <line:56:2, col:71> col:2 referenced f_special 'Handler::Flags'
|   `-ImplicitCastExpr 0x560a41ceca98 <col:14, col:71> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a41cec890 <col:14, col:71> 'int' Int: 31
|       `-BinaryOperator 0x560a41cec870 <col:14, col:71> 'int' '|'
|         |-BinaryOperator 0x560a41cec830 <col:14, col:48> 'int' '|'
|         | |-BinaryOperator 0x560a41cec7f0 <col:14, col:33> 'int' '|'
|         | | |-BinaryOperator 0x560a41cec7b0 <col:14, col:23> 'int' '|'
|         | | | |-DeclRefExpr 0x560a41cec770 <col:14> 'int' EnumConstant 0x560a41cebbb0 'f_read' 'Handler::Flags'
|         | | | `-DeclRefExpr 0x560a41cec790 <col:23> 'int' EnumConstant 0x560a41cebc40 'f_write' 'Handler::Flags'
|         | | `-DeclRefExpr 0x560a41cec7d0 <col:33> 'int' EnumConstant 0x560a41cebcd0 'f_read_param' 'Handler::Flags'
|         | `-DeclRefExpr 0x560a41cec810 <col:48> 'int' EnumConstant 0x560a41cec690 'f_read_comprehensive' 'Handler::Flags'
|         `-DeclRefExpr 0x560a41cec850 <col:71> 'int' EnumConstant 0x560a41cec720 'f_write_comprehensive' 'Handler::Flags'
|-CXXMethodDecl 0x560a41cecad0 <line:62:5, line:64:5> line:62:26 name 'const String &() const' inline
| `-CompoundStmt 0x560a41cf2418 <col:39, line:64:5>
|   `-ReturnStmt 0x560a41cf2408 <line:63:2, col:9>
|     `-MemberExpr 0x560a41cf23d8 <col:9> 'const String' lvalue ->_name 0x560a41cefee0
|       `-CXXThisExpr 0x560a41cf23c8 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x560a41cecb90 <line:69:5, line:71:5> line:69:21 flags 'uint32_t () const' inline
| `-CompoundStmt 0x560a41cf2498 <col:35, line:71:5>
|   `-ReturnStmt 0x560a41cf2488 <line:70:2, col:9>
|     `-ImplicitCastExpr 0x560a41cf2470 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x560a41cf2440 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x560a41cf05f0
|         `-CXXThisExpr 0x560a41cf2430 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x560a41cecce0 <line:75:5, line:77:5> line:75:18 user_data 'void *(int) const' inline
| |-ParmVarDecl 0x560a41cecc48 <col:28, col:32> col:32 used op 'int'
| `-CompoundStmt 0x560a41cf2618 <col:42, line:77:5>
|   `-ReturnStmt 0x560a41cf2608 <line:76:2, col:44>
|     `-ImplicitCastExpr 0x560a41cf25f0 <col:9, col:44> 'void *' <LValueToRValue>
|       `-ConditionalOperator 0x560a41cf25c0 <col:9, col:44> 'void *const' lvalue
|         |-BinaryOperator 0x560a41cf2520 <col:9, col:15> 'bool' '=='
|         | |-ImplicitCastExpr 0x560a41cf24f0 <col:9> 'int' <LValueToRValue>
|         | | `-DeclRefExpr 0x560a41cf24b0 <col:9> 'int' lvalue ParmVar 0x560a41cecc48 'op' 'int'
|         | `-ImplicitCastExpr 0x560a41cf2508 <col:15> 'int' <IntegralCast>
|         |   `-DeclRefExpr 0x560a41cf24d0 <col:15> 'Handler::Flags' EnumConstant 0x560a41cebc40 'f_write' 'Handler::Flags'
|         |-MemberExpr 0x560a41cf2550 <col:25> 'void *const' lvalue ->_write_user_data 0x560a41cf0590
|         | `-CXXThisExpr 0x560a41cf2540 <col:25> 'const Handler *' implicit this
|         `-MemberExpr 0x560a41cf2590 <col:44> 'void *const' lvalue ->_read_user_data 0x560a41cf0528
|           `-CXXThisExpr 0x560a41cf2580 <col:44> 'const Handler *' implicit this
|-CXXMethodDecl 0x560a41cecdb0 <line:80:5, line:82:5> line:80:18 read_user_data 'void *() const' inline
| `-CompoundStmt 0x560a41cf2698 <col:41, line:82:5>
|   `-ReturnStmt 0x560a41cf2688 <line:81:2, col:9>
|     `-ImplicitCastExpr 0x560a41cf2670 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x560a41cf2640 <col:9> 'void *const' lvalue ->_read_user_data 0x560a41cf0528
|         `-CXXThisExpr 0x560a41cf2630 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x560a41cece78 <line:85:5, line:87:5> line:85:18 write_user_data 'void *() const' inline
| `-CompoundStmt 0x560a41cf2718 <col:42, line:87:5>
|   `-ReturnStmt 0x560a41cf2708 <line:86:2, col:9>
|     `-ImplicitCastExpr 0x560a41cf26f0 <col:9> 'void *' <LValueToRValue>
|       `-MemberExpr 0x560a41cf26c0 <col:9> 'void *const' lvalue ->_write_user_data 0x560a41cf0590
|         `-CXXThisExpr 0x560a41cf26b0 <col:9> 'const Handler *' implicit this
|-CXXMethodDecl 0x560a41cecf40 <line:90:5, col:63> col:18 user_data1 'void *() const' inline
| `-DeprecatedAttr 0x560a41cecfe0 <col:52> "" ""
|-CXXMethodDecl 0x560a41ced078 <line:91:5, col:63> col:18 user_data2 'void *() const' inline
| `-DeprecatedAttr 0x560a41ced118 <col:52> "" ""
|-CXXMethodDecl 0x560a41ced1a8 <line:96:5, line:98:5> line:96:17 readable 'bool () const' inline
| `-CompoundStmt 0x560a41cf2808 <col:34, line:98:5>
|   `-ReturnStmt 0x560a41cf27f8 <line:97:2, col:18>
|     `-ImplicitCastExpr 0x560a41cf27e0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x560a41cf27c0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x560a41cf2790 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x560a41cf2740 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x560a41cf05f0
|         |   `-CXXThisExpr 0x560a41cf2730 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x560a41cf27a8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x560a41cf2770 <col:18> 'Handler::Flags' EnumConstant 0x560a41cebbb0 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x560a41ced268 <line:102:5, line:104:5> line:102:17 read_param 'bool () const' inline
| `-CompoundStmt 0x560a41cf28f8 <col:36, line:104:5>
|   `-ReturnStmt 0x560a41cf28e8 <line:103:2, col:18>
|     `-ImplicitCastExpr 0x560a41cf28d0 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x560a41cf28b0 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x560a41cf2880 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x560a41cf2830 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x560a41cf05f0
|         |   `-CXXThisExpr 0x560a41cf2820 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x560a41cf2898 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x560a41cf2860 <col:18> 'Handler::Flags' EnumConstant 0x560a41cebcd0 'f_read_param' 'Handler::Flags'
|-CXXMethodDecl 0x560a41ced328 <line:111:5, line:113:5> line:111:17 used read_visible 'bool () const' inline
| `-CompoundStmt 0x560a41df6058 <col:38, line:113:5>
|   `-ReturnStmt 0x560a41df6048 <line:112:2, col:49>
|     `-BinaryOperator 0x560a41df6028 <col:9, col:49> 'bool' '=='
|       |-ParenExpr 0x560a41df5fd0 <col:9, col:44> 'unsigned int'
|       | `-BinaryOperator 0x560a41df5fb0 <col:10, col:43> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x560a41df5f80 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x560a41cf2920 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x560a41cf05f0
|       |   |   `-CXXThisExpr 0x560a41cf2910 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x560a41df5f98 <col:19, col:43> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x560a41df5f60 <col:19, col:43> 'int'
|       |       `-BinaryOperator 0x560a41df5f40 <col:20, col:29> 'int' '|'
|       |         |-ImplicitCastExpr 0x560a41cf2990 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x560a41cf2950 <col:20> 'Handler::Flags' EnumConstant 0x560a41cebbb0 'f_read' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x560a41cf29a8 <col:29> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x560a41cf2970 <col:29> 'Handler::Flags' EnumConstant 0x560a41cebf10 'f_read_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x560a41df6010 <col:49> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x560a41df5ff0 <col:49> 'Handler::Flags' EnumConstant 0x560a41cebbb0 'f_read' 'Handler::Flags'
|-CXXMethodDecl 0x560a41ced3e8 <line:116:5, line:118:5> line:116:17 writable 'bool () const' inline
| `-CompoundStmt 0x560a41df6148 <col:34, line:118:5>
|   `-ReturnStmt 0x560a41df6138 <line:117:2, col:18>
|     `-ImplicitCastExpr 0x560a41df6120 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x560a41df6100 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x560a41df60d0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x560a41df6080 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x560a41cf05f0
|         |   `-CXXThisExpr 0x560a41df6070 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x560a41df60e8 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x560a41df60b0 <col:18> 'Handler::Flags' EnumConstant 0x560a41cebc40 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x560a41ced4a8 <line:125:5, line:127:5> line:125:17 used write_visible 'bool () const' inline
| `-CompoundStmt 0x560a41df6328 <col:39, line:127:5>
|   `-ReturnStmt 0x560a41df6318 <line:126:2, col:51>
|     `-BinaryOperator 0x560a41df62f8 <col:9, col:51> 'bool' '=='
|       |-ParenExpr 0x560a41df62a0 <col:9, col:46> 'unsigned int'
|       | `-BinaryOperator 0x560a41df6280 <col:10, col:45> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x560a41df6250 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x560a41df6170 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x560a41cf05f0
|       |   |   `-CXXThisExpr 0x560a41df6160 <col:10> 'const Handler *' implicit this
|       |   `-ImplicitCastExpr 0x560a41df6268 <col:19, col:45> 'unsigned int' <IntegralCast>
|       |     `-ParenExpr 0x560a41df6230 <col:19, col:45> 'int'
|       |       `-BinaryOperator 0x560a41df6210 <col:20, col:30> 'int' '|'
|       |         |-ImplicitCastExpr 0x560a41df61e0 <col:20> 'int' <IntegralCast>
|       |         | `-DeclRefExpr 0x560a41df61a0 <col:20> 'Handler::Flags' EnumConstant 0x560a41cebc40 'f_write' 'Handler::Flags'
|       |         `-ImplicitCastExpr 0x560a41df61f8 <col:30> 'int' <IntegralCast>
|       |           `-DeclRefExpr 0x560a41df61c0 <col:30> 'Handler::Flags' EnumConstant 0x560a41cebfa0 'f_write_private' 'Handler::Flags'
|       `-ImplicitCastExpr 0x560a41df62e0 <col:51> 'unsigned int' <IntegralCast>
|         `-DeclRefExpr 0x560a41df62c0 <col:51> 'Handler::Flags' EnumConstant 0x560a41cebc40 'f_write' 'Handler::Flags'
|-CXXMethodDecl 0x560a41ced568 <line:130:5, line:132:5> line:130:17 visible 'bool () const' inline
| `-CompoundStmt 0x560a41df6430 <col:33, line:132:5>
|   `-ReturnStmt 0x560a41df6420 <line:131:2, col:41>
|     `-BinaryOperator 0x560a41df6400 <col:9, col:41> 'bool' '||'
|       |-CXXMemberCallExpr 0x560a41df6380 <col:9, col:22> 'bool'
|       | `-MemberExpr 0x560a41df6350 <col:9> '<bound member function type>' ->read_visible 0x560a41ced328
|       |   `-CXXThisExpr 0x560a41df6340 <col:9> 'const Handler *' implicit this
|       `-CXXMemberCallExpr 0x560a41df63e0 <col:27, col:41> 'bool'
|         `-MemberExpr 0x560a41df63b0 <col:27> '<bound member function type>' ->write_visible 0x560a41ced4a8
|           `-CXXThisExpr 0x560a41df63a0 <col:27> 'const Handler *' implicit this
|-CXXMethodDecl 0x560a41ced628 <line:136:5, line:138:5> line:136:17 allow_concurrent_handlers 'bool () const' inline
| `-CompoundStmt 0x560a41df6540 <col:51, line:138:5>
|   `-ReturnStmt 0x560a41df6530 <line:137:9, col:40>
|     `-ImplicitCastExpr 0x560a41df6518 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x560a41df64f8 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x560a41df64d8 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x560a41df64a8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x560a41df6458 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x560a41cf05f0
|           |   `-CXXThisExpr 0x560a41df6448 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x560a41df64c0 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x560a41df6488 <col:26> 'Handler::Flags' EnumConstant 0x560a41cebdf0 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x560a41ced6e8 <line:142:5, line:144:5> line:142:17 allow_concurrent_threads 'bool () const' inline
| `-CompoundStmt 0x560a41df6650 <col:50, line:144:5>
|   `-ReturnStmt 0x560a41df6640 <line:143:9, col:40>
|     `-ImplicitCastExpr 0x560a41df6628 <col:16, col:40> 'bool' <IntegralToBoolean>
|       `-ParenExpr 0x560a41df6608 <col:16, col:40> 'unsigned int'
|         `-BinaryOperator 0x560a41df65e8 <col:17, col:26> 'unsigned int' '&'
|           |-ImplicitCastExpr 0x560a41df65b8 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|           | `-MemberExpr 0x560a41df6568 <col:17> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x560a41cf05f0
|           |   `-CXXThisExpr 0x560a41df6558 <col:17> 'const Handler *' implicit this
|           `-ImplicitCastExpr 0x560a41df65d0 <col:26> 'unsigned int' <IntegralCast>
|             `-DeclRefExpr 0x560a41df6598 <col:26> 'Handler::Flags' EnumConstant 0x560a41cebdf0 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x560a41ced7a8 <line:164:5, line:166:5> line:164:17 raw 'bool () const' inline
| `-CompoundStmt 0x560a41df6740 <col:29, line:166:5>
|   `-ReturnStmt 0x560a41df6730 <line:165:2, col:18>
|     `-ImplicitCastExpr 0x560a41df6718 <col:9, col:18> 'bool' <IntegralToBoolean>
|       `-BinaryOperator 0x560a41df66f8 <col:9, col:18> 'unsigned int' '&'
|         |-ImplicitCastExpr 0x560a41df66c8 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-MemberExpr 0x560a41df6678 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x560a41cf05f0
|         |   `-CXXThisExpr 0x560a41df6668 <col:9> 'const Handler *' implicit this
|         `-ImplicitCastExpr 0x560a41df66e0 <col:18> 'unsigned int' <IntegralCast>
|           `-DeclRefExpr 0x560a41df66a8 <col:18> 'Handler::Flags' EnumConstant 0x560a41cebe80 'f_raw' 'Handler::Flags'
|-CXXMethodDecl 0x560a41ceda28 <line:177:5, col:75> col:12 used call_read 'String (Element *, const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x560a41ced858 <col:22, col:31> col:31 e 'Element *'
| |-ParmVarDecl 0x560a41ced8d0 <col:34, col:48> col:48 param 'const String &'
| `-ParmVarDecl 0x560a41ced948 <col:55, col:69> col:69 errh 'ErrorHandler *'
|-CXXMethodDecl 0x560a41cedc38 <line:186:5, line:188:5> line:186:19 call_read 'String (Element *, ErrorHandler *) const' inline
| |-ParmVarDecl 0x560a41cedaf0 <col:29, col:38> col:38 used e 'Element *'
| |-ParmVarDecl 0x560a41cedb68 <col:41, col:62> col:55 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x560a41cf2300 <col:62> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x560a41cf22e0 <col:62> 'int' 0
| `-CompoundStmt 0x560a41df69e0 <col:71, line:188:5>
|   `-ReturnStmt 0x560a41df69d0 <line:187:2, col:36>
|     `-ExprWithCleanups 0x560a41df69b8 <col:9, col:36> 'String'
|       `-CXXConstructExpr 0x560a41df6988 <col:9, col:36> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x560a41df6970 <col:9, col:36> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x560a41df6950 <col:9, col:36> 'String' (CXXTemporary 0x560a41df6950)
|             `-CXXMemberCallExpr 0x560a41df68b0 <col:9, col:36> 'String'
|               |-MemberExpr 0x560a41df6880 <col:9> '<bound member function type>' ->call_read 0x560a41ceda28
|               | `-CXXThisExpr 0x560a41df6870 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x560a41df68e8 <col:19> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x560a41df67c8 <col:19> 'Element *' lvalue ParmVar 0x560a41cedaf0 'e' 'Element *'
|               |-MaterializeTemporaryExpr 0x560a41df6918 <col:22, col:29> 'const String' lvalue
|               | `-ImplicitCastExpr 0x560a41df6900 <col:22, col:29> 'const String' <NoOp>
|               |   `-CXXBindTemporaryExpr 0x560a41df6830 <col:22, col:29> 'String' (CXXTemporary 0x560a41df6830)
|               |     `-CXXTemporaryObjectExpr 0x560a41df67f8 <col:22, col:29> 'String' 'void ()'
|               `-ImplicitCastExpr 0x560a41df6930 <col:32> 'ErrorHandler *' <LValueToRValue>
|                 `-DeclRefExpr 0x560a41df6850 <col:32> 'ErrorHandler *' lvalue ParmVar 0x560a41cedb68 'errh' 'ErrorHandler *'
|-CXXMethodDecl 0x560a41ceded0 <line:198:5, col:73> col:9 call_write 'int (const String &, Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x560a41cedcf8 <col:20, col:34> col:34 value 'const String &'
| |-ParmVarDecl 0x560a41cedd70 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x560a41cedde8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x560a41cee058 <line:207:5, col:37> col:12 unparse_name 'String (Element *) const'
| `-ParmVarDecl 0x560a41cedf98 <col:25, col:34> col:34 e 'Element *'
|-CXXMethodDecl 0x560a41cee288 <line:216:5, col:63> col:19 unparse_name 'String (Element *, const String &)' static
| |-ParmVarDecl 0x560a41cee110 <col:32, col:41> col:41 e 'Element *'
| `-ParmVarDecl 0x560a41cee188 <col:44, col:58> col:58 hname 'const String &'
|-CXXMethodDecl 0x560a41cee388 <line:223:5, line:225:5> line:223:34 blank_handler 'const Handler *()' static inline
| `-CompoundStmt 0x560a41df6a40 <col:50, line:225:5>
|   `-ReturnStmt 0x560a41df6a30 <line:224:2, col:9>
|     `-ImplicitCastExpr 0x560a41df6a18 <col:9> 'const Handler *' <LValueToRValue>
|       `-DeclRefExpr 0x560a41df69f8 <col:9> 'const Handler *' lvalue Var 0x560a41cf0720 'the_blank_handler' 'const Handler *'
|-EnumDecl 0x560a41cee428 <line:229:5, line:251:5> line:229:5
| |-EnumConstantDecl 0x560a41cee530 <line:230:2, col:11> col:2 h_read 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x560a41cef0c0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cee510 <col:11> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x560a41cee4f0 <col:11> 'Handler::Flags' EnumConstant 0x560a41cebbb0 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x560a41cee5c0 <line:231:2, col:12> col:2 h_write 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x560a41cef0d8 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cee5a0 <col:12> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x560a41cee580 <col:12> 'Handler::Flags' EnumConstant 0x560a41cebc40 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x560a41cee650 <line:232:2, col:17> col:2 h_read_param 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x560a41cef0f0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cee630 <col:17> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x560a41cee610 <col:17> 'Handler::Flags' EnumConstant 0x560a41cebcd0 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x560a41cee6e0 <line:233:2, col:16> col:2 h_exclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x560a41cef108 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cee6c0 <col:16> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x560a41cee6a0 <col:16> 'Handler::Flags' EnumConstant 0x560a41cebd60 'f_exclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x560a41cee770 <line:234:2, col:19> col:2 h_nonexclusive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x560a41cef120 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cee750 <col:19> 'Handler::Flags' Int: 32
| |     `-DeclRefExpr 0x560a41cee730 <col:19> 'Handler::Flags' EnumConstant 0x560a41cebdf0 'f_nonexclusive' 'Handler::Flags'
| |-EnumConstantDecl 0x560a41cee800 <line:235:2, col:10> col:2 h_raw 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x560a41cef138 <col:10> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cee7e0 <col:10> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x560a41cee7c0 <col:10> 'Handler::Flags' EnumConstant 0x560a41cebe80 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x560a41cee890 <line:236:2, col:19> col:2 h_read_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x560a41cef150 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cee870 <col:19> 'Handler::Flags' Int: 128
| |     `-DeclRefExpr 0x560a41cee850 <col:19> 'Handler::Flags' EnumConstant 0x560a41cebf10 'f_read_private' 'Handler::Flags'
| |-EnumConstantDecl 0x560a41cee920 <line:237:2, col:20> col:2 h_write_private 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x560a41cef168 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cee900 <col:20> 'Handler::Flags' Int: 256
| |     `-DeclRefExpr 0x560a41cee8e0 <col:20> 'Handler::Flags' EnumConstant 0x560a41cebfa0 'f_write_private' 'Handler::Flags'
| |-EnumConstantDecl 0x560a41cee9b0 <line:238:2, col:17> col:2 h_deprecated 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x560a41cef180 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cee990 <col:17> 'Handler::Flags' Int: 512
| |     `-DeclRefExpr 0x560a41cee970 <col:17> 'Handler::Flags' EnumConstant 0x560a41cec030 'f_deprecated' 'Handler::Flags'
| |-EnumConstantDecl 0x560a41ceea40 <line:239:2, col:15> col:2 h_uncommon 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x560a41cef198 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41ceea20 <col:15> 'Handler::Flags' Int: 1024
| |     `-DeclRefExpr 0x560a41ceea00 <col:15> 'Handler::Flags' EnumConstant 0x560a41cec0c0 'f_uncommon' 'Handler::Flags'
| |-EnumConstantDecl 0x560a41ceead0 <line:240:2, col:11> col:2 h_calm 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x560a41cef1b0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41ceeab0 <col:11> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x560a41ceea90 <col:11> 'Handler::Flags' EnumConstant 0x560a41cec150 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x560a41ceeb60 <line:241:2, col:16> col:2 h_expensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x560a41cef1c8 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41ceeb40 <col:16> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x560a41ceeb20 <col:16> 'Handler::Flags' EnumConstant 0x560a41cec1e0 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x560a41ceebf0 <line:242:2, col:13> col:2 h_button 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x560a41cef1e0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41ceebd0 <col:13> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x560a41ceebb0 <col:13> 'Handler::Flags' EnumConstant 0x560a41cec270 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x560a41ceec80 <line:243:2, col:15> col:2 h_checkbox 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x560a41cef1f8 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41ceec60 <col:15> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x560a41ceec40 <col:15> 'Handler::Flags' EnumConstant 0x560a41cec300 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x560a41ceed10 <line:244:2, col:20> col:2 h_driver_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x560a41cef210 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41ceecf0 <col:20> 'Handler::Flags' Int: 67108864
| |     `-DeclRefExpr 0x560a41ceecd0 <col:20> 'Handler::Flags' EnumConstant 0x560a41cec3d0 'f_driver0' 'Handler::Flags'
| |-EnumConstantDecl 0x560a41ceeda0 <line:245:9, col:27> col:9 h_driver_flag_1 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x560a41cef228 <col:27> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41ceed80 <col:27> 'Handler::Flags' Int: 134217728
| |     `-DeclRefExpr 0x560a41ceed60 <col:27> 'Handler::Flags' EnumConstant 0x560a41cec4a0 'f_driver1' 'Handler::Flags'
| |-EnumConstantDecl 0x560a41ceee30 <line:246:2, col:22> col:2 h_user_flag_shift 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x560a41cef240 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41ceee10 <col:22> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x560a41ceedf0 <col:22> 'Handler::Flags' EnumConstant 0x560a41cec530 'f_user_shift' 'Handler::Flags'
| |-EnumConstantDecl 0x560a41ceeec0 <line:247:2, col:18> col:2 h_user_flag_0 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x560a41cef258 <col:18> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41ceeea0 <col:18> 'Handler::Flags' Int: 268435456
| |     `-DeclRefExpr 0x560a41ceee80 <col:18> 'Handler::Flags' EnumConstant 0x560a41cec600 'f_user0' 'Handler::Flags'
| |-EnumConstantDecl 0x560a41ceef50 <line:248:2, col:25> col:2 h_read_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x560a41cef270 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41ceef30 <col:25> 'Handler::Flags' Int: 8
| |     `-DeclRefExpr 0x560a41ceef10 <col:25> 'Handler::Flags' EnumConstant 0x560a41cec690 'f_read_comprehensive' 'Handler::Flags'
| |-EnumConstantDecl 0x560a41ceefe0 <line:249:2, col:26> col:2 h_write_comprehensive 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
| | `-ImplicitCastExpr 0x560a41cef288 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41ceefc0 <col:26> 'Handler::Flags' Int: 16
| |     `-DeclRefExpr 0x560a41ceefa0 <col:26> 'Handler::Flags' EnumConstant 0x560a41cec720 'f_write_comprehensive' 'Handler::Flags'
| `-EnumConstantDecl 0x560a41cef070 <line:250:2, col:20> col:2 h_special_flags 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:229:5)'
|   `-ImplicitCastExpr 0x560a41cef2a0 <col:20> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a41cef050 <col:20> 'Handler::Flags' Int: 31
|       `-DeclRefExpr 0x560a41cef030 <col:20> 'Handler::Flags' EnumConstant 0x560a41cec8b0 'f_special' 'Handler::Flags'
|-EnumDecl 0x560a41cef2b8 <line:252:5, line:267:5> line:252:10 DeprecatedFlags
| |-EnumConstantDecl 0x560a41cef3c0 <line:253:2, col:12> col:2 OP_READ 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x560a41cef920 <col:12> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cef3a0 <col:12> 'Handler::Flags' Int: 1
| |     `-DeclRefExpr 0x560a41cef380 <col:12> 'Handler::Flags' EnumConstant 0x560a41cebbb0 'f_read' 'Handler::Flags'
| |-EnumConstantDecl 0x560a41cef450 <line:254:2, col:13> col:2 OP_WRITE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x560a41cef938 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cef430 <col:13> 'Handler::Flags' Int: 2
| |     `-DeclRefExpr 0x560a41cef410 <col:13> 'Handler::Flags' EnumConstant 0x560a41cebc40 'f_write' 'Handler::Flags'
| |-EnumConstantDecl 0x560a41cef4e0 <line:255:2, col:15> col:2 READ_PARAM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x560a41cef950 <col:15> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cef4c0 <col:15> 'Handler::Flags' Int: 4
| |     `-DeclRefExpr 0x560a41cef4a0 <col:15> 'Handler::Flags' EnumConstant 0x560a41cebcd0 'f_read_param' 'Handler::Flags'
| |-EnumConstantDecl 0x560a41cef570 <line:256:2, col:8> col:2 RAW 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x560a41cef968 <col:8> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cef550 <col:8> 'Handler::Flags' Int: 64
| |     `-DeclRefExpr 0x560a41cef530 <col:8> 'Handler::Flags' EnumConstant 0x560a41cebe80 'f_raw' 'Handler::Flags'
| |-EnumConstantDecl 0x560a41cef600 <line:261:2, col:9> col:2 CALM 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x560a41cef980 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cef5e0 <col:9> 'Handler::Flags' Int: 2048
| |     `-DeclRefExpr 0x560a41cef5c0 <col:9> 'Handler::Flags' EnumConstant 0x560a41cec150 'f_calm' 'Handler::Flags'
| |-EnumConstantDecl 0x560a41cef690 <line:262:2, col:14> col:2 EXPENSIVE 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x560a41cef998 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cef670 <col:14> 'Handler::Flags' Int: 4096
| |     `-DeclRefExpr 0x560a41cef650 <col:14> 'Handler::Flags' EnumConstant 0x560a41cec1e0 'f_expensive' 'Handler::Flags'
| |-EnumConstantDecl 0x560a41cef720 <line:263:2, col:11> col:2 BUTTON 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x560a41cef9b0 <col:11> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cef700 <col:11> 'Handler::Flags' Int: 8192
| |     `-DeclRefExpr 0x560a41cef6e0 <col:11> 'Handler::Flags' EnumConstant 0x560a41cec270 'f_button' 'Handler::Flags'
| |-EnumConstantDecl 0x560a41cef7b0 <line:264:2, col:13> col:2 CHECKBOX 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x560a41cef9c8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cef790 <col:13> 'Handler::Flags' Int: 16384
| |     `-DeclRefExpr 0x560a41cef770 <col:13> 'Handler::Flags' EnumConstant 0x560a41cec300 'f_checkbox' 'Handler::Flags'
| |-EnumConstantDecl 0x560a41cef840 <line:265:2, col:20> col:2 USER_FLAG_SHIFT 'Handler::DeprecatedFlags'
| | `-ImplicitCastExpr 0x560a41cef9e0 <col:20> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cef820 <col:20> 'Handler::Flags' Int: 28
| |     `-DeclRefExpr 0x560a41cef800 <col:20> 'Handler::Flags' EnumConstant 0x560a41cec530 'f_user_shift' 'Handler::Flags'
| `-EnumConstantDecl 0x560a41cef8d0 <line:266:2, col:16> col:2 USER_FLAG_0 'Handler::DeprecatedFlags'
|   `-ImplicitCastExpr 0x560a41cef9f8 <col:16> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a41cef8b0 <col:16> 'Handler::Flags' Int: 268435456
|       `-DeclRefExpr 0x560a41cef890 <col:16> 'Handler::Flags' EnumConstant 0x560a41cec600 'f_user0' 'Handler::Flags'
|-EnumDecl 0x560a41cefa10 <line:268:5, line:271:5> line:268:5
| |-DeprecatedAttr 0x560a41cefad0 <col:25> "" ""
| |-EnumConstantDecl 0x560a41cefb80 <line:269:2, col:14> col:2 EXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
| | `-ImplicitCastExpr 0x560a41cefc60 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cefb60 <col:14> 'Handler::Flags' Int: 0
| |     `-DeclRefExpr 0x560a41cefb40 <col:14> 'Handler::Flags' EnumConstant 0x560a41cebd60 'f_exclusive' 'Handler::Flags'
| `-EnumConstantDecl 0x560a41cefc10 <line:270:2, col:17> col:2 NONEXCLUSIVE 'Handler::(anonymous enum at ../dummy_inc/click/handler.hh:268:5)'
|   `-ImplicitCastExpr 0x560a41cefc78 <col:17> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a41cefbf0 <col:17> 'Handler::Flags' Int: 32
|       `-DeclRefExpr 0x560a41cefbd0 <col:17> 'Handler::Flags' EnumConstant 0x560a41cebdf0 'f_nonexclusive' 'Handler::Flags'
|-CXXMethodDecl 0x560a41cefdf8 <line:281:5, line:284:5> line:281:19 __call_read 'String (Element *, void *) const' inline
| |-ParmVarDecl 0x560a41cefca0 <col:31, col:40> col:40 used e 'Element *'
| |-ParmVarDecl 0x560a41cefd20 <col:43, col:49> col:49 used new_user_data 'void *'
| `-CompoundStmt 0x560a41df7100 <col:70, line:284:5>
|   |-ParenExpr 0x560a41df6f20 <line:282:2, col:233> 'void'
|   | `-ConditionalOperator 0x560a41df6ef0 <col:3, col:232> 'void'
|   |   |-CXXStaticCastExpr 0x560a41df6c20 <col:3, col:75> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x560a41df6bf0 <col:23, col:69> 'bool' '=='
|   |   |   |-ParenExpr 0x560a41df6b98 <col:23, col:64> 'unsigned int'
|   |   |   | `-BinaryOperator 0x560a41df6b78 <col:24, col:63> 'unsigned int' '&'
|   |   |   |   |-ImplicitCastExpr 0x560a41df6b48 <col:24> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   |   |   | `-MemberExpr 0x560a41df6a68 <col:24> 'const uint32_t':'const unsigned int' lvalue ->_flags 0x560a41cf05f0
|   |   |   |   |   `-CXXThisExpr 0x560a41df6a58 <col:24> 'const Handler *' implicit this
|   |   |   |   `-ImplicitCastExpr 0x560a41df6b60 <col:33, col:63> 'unsigned int' <IntegralCast>
|   |   |   |     `-ParenExpr 0x560a41df6b28 <col:33, col:63> 'int'
|   |   |   |       `-BinaryOperator 0x560a41df6b08 <col:34, col:43> 'int' '|'
|   |   |   |         |-ImplicitCastExpr 0x560a41df6ad8 <col:34> 'int' <IntegralCast>
|   |   |   |         | `-DeclRefExpr 0x560a41df6a98 <col:34> 'Handler::Flags' EnumConstant 0x560a41cebbb0 'f_read' 'Handler::Flags'
|   |   |   |         `-ImplicitCastExpr 0x560a41df6af0 <col:43> 'int' <IntegralCast>
|   |   |   |           `-DeclRefExpr 0x560a41df6ab8 <col:43> 'Handler::Flags' EnumConstant 0x560a41cec690 'f_read_comprehensive' 'Handler::Flags'
|   |   |   `-ImplicitCastExpr 0x560a41df6bd8 <col:69> 'unsigned int' <IntegralCast>
|   |   |     `-DeclRefExpr 0x560a41df6bb8 <col:69> 'Handler::Flags' EnumConstant 0x560a41cebbb0 'f_read' 'Handler::Flags'
|   |   |-CXXFunctionalCastExpr 0x560a41df6c80 <col:79, col:86> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a41df6c60 <col:85> 'int' 0
|   |   `-CallExpr 0x560a41df6e50 <col:90, col:232> 'void'
|   |     |-ImplicitCastExpr 0x560a41df6e38 <col:90> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a41df6e18 <col:90> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a41881230 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a41df6e90 <col:105> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41df6cf0 <col:105> 'const char [53]' lvalue "(_flags & (f_read | f_read_comprehensive)) == f_read"
|   |     |-ImplicitCastExpr 0x560a41df6ea8 <col:161> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41df6d40 <col:161> 'const char [30]' lvalue "../dummy_inc/click/handler.hh"
|   |     |-ImplicitCastExpr 0x560a41df6ec0 <col:194> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a41df6d78 <col:194> 'int' 282
|   |     `-ImplicitCastExpr 0x560a41df6ed8 <col:199, col:213> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a41df6e00 <col:199, col:213> 'const char [53]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a41df6de8 <col:213> 'const char [53]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a41df6d98 <col:213> 'const char [53]' lvalue "String Handler::__call_read(Element *, void *) const"
|   `-ReturnStmt 0x560a41df70f0 <line:283:2, col:38>
|     `-ExprWithCleanups 0x560a41df70d8 <col:9, col:38> 'String'
|       `-CXXConstructExpr 0x560a41df70a8 <col:9, col:38> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x560a41df7090 <col:9, col:38> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x560a41df7070 <col:9, col:38> 'String' (CXXTemporary 0x560a41df7070)
|             `-CallExpr 0x560a41df7008 <col:9, col:38> 'String'
|               |-ImplicitCastExpr 0x560a41df6ff0 <col:9, col:20> 'ReadHandlerCallback':'String (*)(Element *, void *)' <LValueToRValue>
|               | `-MemberExpr 0x560a41df6f80 <col:9, col:20> 'const ReadHandlerCallback':'String (*const)(Element *, void *)' lvalue .r 0x560a41cf0100
|               |   `-MemberExpr 0x560a41df6f50 <col:9> 'const union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)' lvalue ->_read_hook 0x560a41cf01c8
|               |     `-CXXThisExpr 0x560a41df6f40 <col:9> 'const Handler *' implicit this
|               |-ImplicitCastExpr 0x560a41df7038 <col:22> 'Element *' <LValueToRValue>
|               | `-DeclRefExpr 0x560a41df6fb0 <col:22> 'Element *' lvalue ParmVar 0x560a41cefca0 'e' 'Element *'
|               `-ImplicitCastExpr 0x560a41df7050 <col:25> 'void *' <LValueToRValue>
|                 `-DeclRefExpr 0x560a41df6fd0 <col:25> 'void *' lvalue ParmVar 0x560a41cefd20 'new_user_data' 'void *'
|-AccessSpecDecl 0x560a41cefea8 <line:287:3, col:10> col:3 private
|-FieldDecl 0x560a41cefee0 <line:289:5, col:12> col:12 referenced _name 'String'
|-CXXRecordDecl 0x560a41ceff30 <line:290:5, line:293:5> line:290:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x560a41cf0080 <line:291:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x560a41cf0100 <line:292:2, col:22> col:22 referenced r 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-CXXConstructorDecl 0x560a41cf0e38 <line:290:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x560a41cf0e38
| | `-ParmVarDecl 0x560a41cf0f48 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXConstructorDecl 0x560a41cf0fe8 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x560a41cf0fe8
| | `-ParmVarDecl 0x560a41cf10f8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| |-CXXDestructorDecl 0x560a41cf1168 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x560a41cf1168
| |-CXXMethodDecl 0x560a41cf1a38 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &)' inline default trivial noexcept-unevaluated 0x560a41cf1a38
| | `-ParmVarDecl 0x560a41cf1b48 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &'
| |-CXXMethodDecl 0x560a41cf1bb8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&)' inline default trivial noexcept-unevaluated 0x560a41cf1bb8
| | `-ParmVarDecl 0x560a41cf1cc8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5) &&'
| `-CXXConstructorDecl 0x560a41eedfa0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x560a41eee080 <col:5>
|-FieldDecl 0x560a41cf01c8 <col:5, line:293:7> col:7 referenced _read_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:290:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:290:5)'
|-CXXRecordDecl 0x560a41cf0230 <line:294:5, line:297:5> line:294:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x560a41cf0358 <line:295:2, col:18> col:18 h 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-FieldDecl 0x560a41cf03e0 <line:296:2, col:23> col:23 referenced w 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-CXXConstructorDecl 0x560a41cf1298 <line:294:5> col:5 implicit constexpr  'void (const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x560a41cf1298
| | `-ParmVarDecl 0x560a41cf13a8 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXConstructorDecl 0x560a41cf1448 <col:5> col:5 implicit constexpr  'void (Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x560a41cf1448
| | `-ParmVarDecl 0x560a41cf1558 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| |-CXXDestructorDecl 0x560a41cf15c8 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x560a41cf15c8
| |-CXXMethodDecl 0x560a41cf1d68 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &)' inline default trivial noexcept-unevaluated 0x560a41cf1d68
| | `-ParmVarDecl 0x560a41cf1e78 <col:5> col:5 'const Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &'
| |-CXXMethodDecl 0x560a41cf1ee8 <col:5> col:5 implicit constexpr operator= 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &(Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&)' inline default trivial noexcept-unevaluated 0x560a41cf1ee8
| | `-ParmVarDecl 0x560a41cf1ff8 <col:5> col:5 'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5) &&'
| `-CXXConstructorDecl 0x560a41eee0e0 <col:5> col:5 implicit used  'void () noexcept' inline default trivial
|   `-CompoundStmt 0x560a41eee1c0 <col:5>
|-FieldDecl 0x560a41cf04a8 <col:5, line:297:7> col:7 referenced _write_hook 'union (anonymous union at ../dummy_inc/click/handler.hh:294:5)':'Handler::(anonymous union at ../dummy_inc/click/handler.hh:294:5)'
|-FieldDecl 0x560a41cf0528 <line:298:5, col:11> col:11 referenced _read_user_data 'void *'
|-FieldDecl 0x560a41cf0590 <line:299:5, col:11> col:11 referenced _write_user_data 'void *'
|-FieldDecl 0x560a41cf05f0 <line:300:5, col:14> col:14 referenced _flags 'uint32_t':'unsigned int'
|-FieldDecl 0x560a41cf0658 <line:301:5, col:9> col:9 _use_count 'int'
|-FieldDecl 0x560a41cf06c0 <line:302:5, col:9> col:9 _next_by_name 'int'
|-VarDecl 0x560a41cf0720 <line:304:5, col:27> col:27 used the_blank_handler 'const Handler *' static
|-CXXConstructorDecl 0x560a41cf0840 <line:306:5, col:38> col:5 Handler 'void (const String &)'
| `-ParmVarDecl 0x560a41cf0798 <col:13, col:37> col:28 'const String &' cinit
|   `-ExprWithCleanups 0x560a41cf23b0 <col:30, col:37> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x560a41cf2398 <col:30, col:37> 'const String' lvalue
|       `-ImplicitCastExpr 0x560a41cf2380 <col:30, col:37> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x560a41cf2360 <col:30, col:37> 'String' (CXXTemporary 0x560a41cf2360)
|           `-CXXTemporaryObjectExpr 0x560a41cf2328 <col:30, col:37> 'String' 'void ()'
|-CXXMethodDecl 0x560a41cf09e8 <line:308:5, col:41> col:17 combine 'void (const Handler &)' inline
| `-ParmVarDecl 0x560a41cf0928 <col:25, col:40> col:40 x 'const Handler &'
|-CXXMethodDecl 0x560a41cf0b68 <line:309:5, col:46> col:17 compatible 'bool (const Handler &) const' inline
| `-ParmVarDecl 0x560a41cf0aa0 <col:28, col:43> col:43 x 'const Handler &'
|-FriendDecl 0x560a41cf0c60 <line:311:5, col:18> col:12 'class Router':'Router'
|-CXXConstructorDecl 0x560a41cf0ca0 <line:19:7> col:7 implicit Handler 'void (const Handler &)' inline default noexcept-unevaluated 0x560a41cf0ca0
| `-ParmVarDecl 0x560a41cf0d88 <col:7> col:7 'const Handler &'
|-CXXConstructorDecl 0x560a41cf16d8 <col:7> col:7 implicit Handler 'void (Handler &&)' inline default noexcept-unevaluated 0x560a41cf16d8
| `-ParmVarDecl 0x560a41cf17e8 <col:7> col:7 'Handler &&'
|-CXXMethodDecl 0x560a41cf1888 <col:7> col:7 implicit operator= 'Handler &(const Handler &)' inline default noexcept-unevaluated 0x560a41cf1888
| `-ParmVarDecl 0x560a41cf1998 <col:7> col:7 'const Handler &'
|-CXXMethodDecl 0x560a41cf2068 <col:7> col:7 implicit operator= 'Handler &(Handler &&)' inline default noexcept-unevaluated 0x560a41cf2068
| `-ParmVarDecl 0x560a41cf2178 <col:7> col:7 'Handler &&'
`-CXXDestructorDecl 0x560a41cf2200 <col:7> col:7 implicit ~Handler 'void ()' inline default noexcept-unevaluated 0x560a41cf2200

Layout: <CGRecordLayout
  LLVMType:%class.Handler = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Handler.base = type <{ %class.String, %union.anon, %union.anon.11, i8*, i8*, i32, i32, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x560a41ed59a8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x560a41ed5bb8 prev 0x560a41ed59a8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x560a41ed6bd0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<void *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x560a41ed6b80 'typename array_memory<void *>::type' sugar
|   `-TypedefType 0x560a41ed6b60 'conditional<true, sized_array_memory<8>, typed_array_memory<void *> >::type' sugar
|     |-Typedef 0x560a41ed6a10 'type'
|     `-SubstTemplateTypeParmType 0x560a41e377e0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x560a419feb40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a419feae8 'T'
|       `-RecordType 0x560a41e37330 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x560a41e37248 'sized_array_memory'
|-FieldDecl 0x560a41ed6cd0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<void *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x560a41ed6d20 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x560a41ed6d58 <line:118:5, col:15> col:15 value_type 'void *':'void *'
| `-SubstTemplateTypeParmType 0x560a41ed5c50 'void *' sugar
|   |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x560a41ae2938 'T'
|   `-PointerType 0x560a417e0ce0 'void *'
|     `-BuiltinType 0x560a417e04e0 'void'
|-TypedefDecl 0x560a41ed6de8 <line:119:5, col:16> col:16 reference 'void *&'
| `-LValueReferenceType 0x560a41ed6db0 'void *&'
|   `-SubstTemplateTypeParmType 0x560a41ed5c50 'void *' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-PointerType 0x560a417e0ce0 'void *'
|       `-BuiltinType 0x560a417e04e0 'void'
|-TypedefDecl 0x560a41ed6ea8 <line:120:5, col:22> col:22 const_reference 'void *const &'
| `-LValueReferenceType 0x560a41ed6e70 'void *const &'
|   `-QualType 0x560a41ed5c51 'void *const' const
|     `-SubstTemplateTypeParmType 0x560a41ed5c50 'void *' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-PointerType 0x560a417e0ce0 'void *'
|         `-BuiltinType 0x560a417e04e0 'void'
|-TypedefDecl 0x560a41ed6f38 <line:121:5, col:16> col:16 pointer 'void **'
| `-PointerType 0x560a41ed6f00 'void **'
|   `-SubstTemplateTypeParmType 0x560a41ed5c50 'void *' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-PointerType 0x560a417e0ce0 'void *'
|       `-BuiltinType 0x560a417e04e0 'void'
|-TypedefDecl 0x560a41ed6fc8 <line:122:5, col:22> col:22 const_pointer 'void *const *'
| `-PointerType 0x560a41ed6f90 'void *const *'
|   `-QualType 0x560a41ed5c51 'void *const' const
|     `-SubstTemplateTypeParmType 0x560a41ed5c50 'void *' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-PointerType 0x560a417e0ce0 'void *'
|         `-BuiltinType 0x560a417e04e0 'void'
|-TypedefDecl 0x560a41ed7bb0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<void *>::type':'void *'
| `-ElaboratedType 0x560a41ed7b60 'typename fast_argument<void *>::type' sugar
|   `-TypedefType 0x560a41ed7b40 'fast_argument<void *, false>::type' sugar
|     |-Typedef 0x560a41ed7ad0 'type'
|     `-SubstTemplateTypeParmType 0x560a41ed7890 'void *' sugar
|       |-TemplateTypeParmType 0x560a41a09100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41a090b0 'T'
|       `-PointerType 0x560a417e0ce0 'void *'
|         `-BuiltinType 0x560a417e04e0 'void'
|-TypedefDecl 0x560a41ed7c18 <line:126:5, col:22> col:22 const_access_type 'void *const &'
| `-LValueReferenceType 0x560a41ed6e70 'void *const &'
|   `-QualType 0x560a41ed5c51 'void *const' const
|     `-SubstTemplateTypeParmType 0x560a41ed5c50 'void *' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-PointerType 0x560a417e0ce0 'void *'
|         `-BuiltinType 0x560a417e04e0 'void'
|-TypedefDecl 0x560a41ed7c70 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x560a417e0580 'int'
|-TypedefDecl 0x560a41ed7cd8 <line:130:5, col:16> col:16 iterator 'void **'
| `-PointerType 0x560a41ed6f00 'void **'
|   `-SubstTemplateTypeParmType 0x560a41ed5c50 'void *' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-PointerType 0x560a417e0ce0 'void *'
|       `-BuiltinType 0x560a417e04e0 'void'
|-TypedefDecl 0x560a41ed7d40 <line:131:5, col:22> col:22 const_iterator 'void *const *'
| `-PointerType 0x560a41ed6f90 'void *const *'
|   `-QualType 0x560a41ed5c51 'void *const' const
|     `-SubstTemplateTypeParmType 0x560a41ed5c50 'void *' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-PointerType 0x560a417e0ce0 'void *'
|         `-BuiltinType 0x560a417e04e0 'void'
|-EnumDecl 0x560a41ed7d98 <line:134:5> col:5
| `-EnumConstantDecl 0x560a41ed7e90 <col:12, col:40> col:12 RESERVE_GROW 'Vector<void *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x560a41ed7e70 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x560a41ae4378 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x560a41ae4350 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x560a41ae4330 <col:40> 'int' 1
|-CXXConstructorDecl 0x560a41ed7f18 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x560a41ed8168 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41ed7fd0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41ed8070 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXConstructorDecl 0x560a41ed8428 <line:139:5, col:37> col:12 Vector 'void (const Vector<void *> &)' inline
| `-ParmVarDecl 0x560a41ed8310 <col:19, col:36> col:36 x 'const Vector<void *> &'
|-CXXConstructorDecl 0x560a41ed86e8 <line:141:5, col:32> col:12 Vector 'void (Vector<void *> &&)' inline
| `-ParmVarDecl 0x560a41ed85d0 <col:19, col:31> col:31 x 'Vector<void *> &&'
|-CXXMethodDecl 0x560a41ed8a30 <line:144:5, col:51> col:23 operator= 'Vector<void *> &(const Vector<void *> &)' inline
| `-ParmVarDecl 0x560a41ed8910 <col:33, col:50> col:50 x 'const Vector<void *> &'
|-CXXMethodDecl 0x560a41ed8d40 <line:146:5, col:46> col:23 operator= 'Vector<void *> &(Vector<void *> &&)' inline
| `-ParmVarDecl 0x560a41ed8c20 <col:33, col:45> col:45 x 'Vector<void *> &&'
|-CXXMethodDecl 0x560a41ed9030 <line:148:5, col:70> col:23 assign 'Vector<void *> &(Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41ed8e78 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41ed8ef0 <col:43, col:69> col:63 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x560a41ed9188 <line:150:5, col:55> col:49 begin 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x560a41ed9268 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41ed92c0 <col:30> Inherited
|-CXXMethodDecl 0x560a41ed9308 <line:151:5, col:53> col:49 end 'Vector<void *>::iterator ()'
| |-NoInlineAttr 0x560a41ed93b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41ed9410 <col:30> Inherited
|-CXXMethodDecl 0x560a41ed94d8 <line:152:5, col:63> col:55 begin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x560a41ed9588 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41ed95e0 <col:30> Inherited
|-CXXMethodDecl 0x560a41ed9628 <line:153:5, col:61> col:55 end 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x560a41ed96d8 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41ed9730 <col:30> Inherited
|-CXXMethodDecl 0x560a41ed9778 <line:154:5, col:64> col:55 cbegin 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x560a41ed9828 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41ed9880 <col:30> Inherited
|-CXXMethodDecl 0x560a41ed98c8 <line:155:5, col:62> col:55 cend 'Vector<void *>::const_iterator () const'
| |-NoInlineAttr 0x560a41ed9978 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41ed99d0 <col:30> Inherited
|-CXXMethodDecl 0x560a41ed99f8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x560a41ed9aa8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x560a41ed9b58 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x560a41ed9d18 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41ed9c08 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41ed9c80 <col:37, col:63> col:57 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x560a41ed9e68 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x560a41ed9dd8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41eda018 <line:163:5, col:65> col:43 operator[] 'void *&(Vector::size_type)'
| |-ParmVarDecl 0x560a41ed9f20 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x560a41eda0d0 <col:20>
| `-OptimizeNoneAttr 0x560a41eda128 <col:30>
|-CXXMethodDecl 0x560a41eda248 <line:164:5, col:73> col:49 operator[] 'void *const &(Vector::size_type) const'
| |-ParmVarDecl 0x560a41eda150 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x560a41eda300 <col:20>
| `-OptimizeNoneAttr 0x560a41eda358 <col:30>
|-CXXMethodDecl 0x560a41eda410 <line:165:5, col:29> col:15 at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x560a41eda380 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41eda558 <line:166:5, col:37> col:21 at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x560a41eda4c8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41eda688 <line:167:5, col:21> col:15 front 'void *&()' inline
|-CXXMethodDecl 0x560a41eda7b8 <line:168:5, col:29> col:21 front 'void *const &() const' inline
|-CXXMethodDecl 0x560a41eda888 <line:169:5, col:20> col:15 back 'void *&()' inline
|-CXXMethodDecl 0x560a41eda958 <line:170:5, col:28> col:21 back 'void *const &() const' inline
|-CXXMethodDecl 0x560a41edaa98 <line:172:5, col:39> col:15 unchecked_at 'void *&(Vector::size_type)' inline
| `-ParmVarDecl 0x560a41edaa08 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41edabe0 <line:173:5, col:47> col:21 unchecked_at 'void *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x560a41edab50 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41edad28 <line:174:5, col:59> col:15 at_u 'void *&(Vector::size_type)' inline
| |-ParmVarDecl 0x560a41edac98 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x560a41edade0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x560a41edaee0 <line:175:5, col:71> col:21 at_u 'void *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x560a41edae50 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x560a41edaf98 <col:60> Inherited "" ""
|-CXXMethodDecl 0x560a41edb058 <line:177:5, col:20> col:15 data 'void **()' inline
|-CXXMethodDecl 0x560a41edb158 <line:178:5, col:28> col:21 data 'void *const *() const' inline
|-CXXMethodDecl 0x560a41edb2d8 <line:180:5, col:48> col:17 push_back 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x560a41edb218 <col:27, col:47> col:47 v 'Vector<void *>::value_argument_type':'void *'
|-FunctionTemplateDecl 0x560a41edba98 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x560a41edb390 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<void *>':'fast_argument<void *, false>'
| `-CXXMethodDecl 0x560a41edb9f8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (void *&&)' inline
|   `-ParmVarDecl 0x560a41edb8f8 <col:58, col:62> col:62 v 'void *&&'
|-CXXMethodDecl 0x560a41edbb78 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x560a41edbcc8 <line:186:5, col:49> col:17 push_front 'void (Vector<void *>::value_argument_type)' inline
| `-ParmVarDecl 0x560a41edbc38 <col:28, col:48> col:48 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x560a41edbd80 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x560a41edbfc8 <line:189:5, col:62> col:21 insert 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41edbe40 <col:28, col:37> col:37 it 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x560a41edbeb8 <col:41, col:61> col:61 v 'Vector<void *>::value_argument_type':'void *'
|-CXXMethodDecl 0x560a41edc188 <line:190:5, col:38> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator)' inline
| `-ParmVarDecl 0x560a41edc098 <col:27, col:36> col:36 it 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x560a41edc3d8 <line:191:5, col:49> col:21 erase 'Vector<void *>::iterator (Vector<void *>::iterator, Vector<void *>::iterator)' inline
| |-ParmVarDecl 0x560a41edc250 <col:27, col:36> col:36 a 'Vector<void *>::iterator':'void **'
| `-ParmVarDecl 0x560a41edc2c8 <col:39, col:48> col:48 b 'Vector<void *>::iterator':'void **'
|-CXXMethodDecl 0x560a41edc498 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x560a41edc6f8 <line:195:5, col:34> col:17 swap 'void (Vector<void *> &)' inline
| `-ParmVarDecl 0x560a41edc600 <col:22, col:33> col:33 x 'Vector<void *> &'
`-CXXDestructorDecl 0x560a41edc7c8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x560a41edc7c8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.12 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.12 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Router::notifier_signals_t
         0 |   class String name
         0 |     struct String::rep_t _r
         0 |       const char * data
         8 |       int length
        16 |       struct String::memo_t * memo
        24 |   int nsig
        28 |   class atomic_uint32_t [128] sig
       544 |   struct Router::notifier_signals_t * next
           | [sizeof=552, dsize=552, align=8,
           |  nvsize=552, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41edc9c0 <../dummy_inc/click/router.hh:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x560a41edcad8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
|-EnumDecl 0x560a41edcb68 <line:281:9, col:32> col:9
| `-EnumConstantDecl 0x560a41edcc70 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
|   `-ImplicitCastExpr 0x560a41edccc0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a41edcc50 <col:27> 'int' Int: 4096
|       `-IntegerLiteral 0x560a41edcc30 <col:27> 'int' 4096
|-FieldDecl 0x560a41edcce8 <line:282:9, col:16> col:16 name 'String'
|-FieldDecl 0x560a41edcd50 <line:283:9, col:13> col:13 nsig 'int'
|-FieldDecl 0x560a41ee1498 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
|-FieldDecl 0x560a41ee1528 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
|-CXXConstructorDecl 0x560a41ee16e8 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| |-ParmVarDecl 0x560a41ee1588 <col:28, col:42> col:42 used n 'const String &'
| |-ParmVarDecl 0x560a41ee1600 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| |-CXXCtorInitializer Field 0x560a41edcce8 'name' 'String'
| | `-CXXConstructExpr 0x560a41ee8a98 <line:287:15, col:21> 'String' 'void (const String &)'
| |   `-DeclRefExpr 0x560a41ee8a58 <col:20> 'const String' lvalue ParmVar 0x560a41ee1588 'n' 'const String &'
| |-CXXCtorInitializer Field 0x560a41edcd50 'nsig' 'int'
| | `-IntegerLiteral 0x560a41ee8af0 <col:29> 'int' 0
| |-CXXCtorInitializer Field 0x560a41ee1498 'sig' 'atomic_uint32_t [128]'
| | `-CXXConstructExpr 0x560a41ee8bd8 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| |-CXXCtorInitializer Field 0x560a41ee1528 'next' 'Router::notifier_signals_t *'
| | `-ImplicitCastExpr 0x560a41ee8b98 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| |   `-DeclRefExpr 0x560a41ee8b58 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x560a41ee1600 'nx' 'Router::notifier_signals_t *'
| `-CompoundStmt 0x560a41ee8e68 <col:42, line:289:9>
|   `-CallExpr 0x560a41ee8e18 <line:288:13, col:43> 'void *'
|     |-ImplicitCastExpr 0x560a41ee8e00 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x560a41ee8de0 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x560a41a71cc8 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x560a41ee8e50 <col:20, col:26> 'void *' <BitCast>
|     | `-UnaryOperator 0x560a41ee8d28 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
|     |   `-ArraySubscriptExpr 0x560a41ee8d08 <col:21, col:26> 'atomic_uint32_t' lvalue
|     |     |-ImplicitCastExpr 0x560a41ee8cf0 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x560a41ee8ca0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x560a41ee1498
|     |     |   `-CXXThisExpr 0x560a41ee8c90 <col:21> 'Router::notifier_signals_t *' implicit this
|     |     `-IntegerLiteral 0x560a41ee8cd0 <col:25> 'int' 0
|     |-IntegerLiteral 0x560a41ee8d40 <col:29> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x560a41ee8dc0 <col:32, col:42> 'unsigned long' sizeof
|       `-ParenExpr 0x560a41ee8da0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
|         `-MemberExpr 0x560a41ee8d70 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x560a41ee1498 non_odr_use_unevaluated
|           `-CXXThisExpr 0x560a41ee8d60 <col:39> 'Router::notifier_signals_t *' implicit this
|-CXXConstructorDecl 0x560a41ee17c8 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x560a41ee17c8
| `-ParmVarDecl 0x560a41ee18d8 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXConstructorDecl 0x560a41ee1978 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x560a41ee1978
| `-ParmVarDecl 0x560a41ee1a88 <col:12> col:12 'Router::notifier_signals_t &&'
|-CXXMethodDecl 0x560a41ee1b28 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x560a41ee1b28
| `-ParmVarDecl 0x560a41ee1c38 <col:12> col:12 'const Router::notifier_signals_t &'
|-CXXMethodDecl 0x560a41ee1ca8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x560a41ee1ca8
| `-ParmVarDecl 0x560a41ee1db8 <col:12> col:12 'Router::notifier_signals_t &&'
`-CXXDestructorDecl 0x560a41ee1e40 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x560a41ee1e40

Layout: <CGRecordLayout
  LLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  NonVirtualBaseLLVMType:%"struct.Router::notifier_signals_t" = type { %class.String, i32, [128 x %class.atomic_uint32_t], %"struct.Router::notifier_signals_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HashMap_ArenaFactory
         0 |   (HashMap_ArenaFactory vtable pointer)
         8 |   class HashMap_Arena **[2] _arenas
        24 |   int [2] _narenas
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashMap_Arena
         0 |   struct HashMap_Arena::Link * _free
         8 |   char * _cur_buffer
        16 |   int _buffer_pos
        20 |   uint32_t _element_size
        24 |   char ** _buffers
        32 |   int _nbuffers
        36 |   int _buffers_cap
        40 |   uint32_t _refcount
        44 |   _Bool _detached
           | [sizeof=48, dsize=45, align=8,
           |  nvsize=45, nvalign=8]

*** Dumping AST Record Layout
         0 | struct HashMap_Arena::Link
         0 |   struct HashMap_Arena::Link * next
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41f32bc8 <../dummy_inc/click/bighashmap_arena.hh:21:5, line:23:5> line:21:12 referenced struct Link definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x560a41f32ce8 <col:5, col:12> col:12 implicit referenced struct Link
`-FieldDecl 0x560a41f32db8 <line:22:2, col:8> col:8 referenced next 'HashMap_Arena::Link *'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashMap_Arena::Link" = type { %"struct.HashMap_Arena::Link"* }
  NonVirtualBaseLLVMType:%"struct.HashMap_Arena::Link" = type { %"struct.HashMap_Arena::Link"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41f32348 prev 0x560a41c08ed8 <../dummy_inc/click/bighashmap_arena.hh:6:1, line:48:1> line:6:7 referenced class HashMap_Arena definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x560a41f32440 <col:1, col:7> col:7 implicit referenced class HashMap_Arena
|-AccessSpecDecl 0x560a41f324d0 <col:23, col:29> col:23 public
|-CXXConstructorDecl 0x560a41f325b0 <line:8:5, col:40> col:5 HashMap_Arena 'void (uint32_t)'
| `-ParmVarDecl 0x560a41f32508 <col:19, col:28> col:28 element_size 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a41f32680 <line:10:5, col:31> col:10 referenced use 'void ()'
| `-CompoundStmt 0x560a41f33948 <col:16, col:31>
|   `-UnaryOperator 0x560a41f33930 <col:18, col:27> 'uint32_t':'unsigned int' postfix '++'
|     `-MemberExpr 0x560a41f33900 <col:18> 'uint32_t':'unsigned int' lvalue ->_refcount 0x560a41f33260
|       `-CXXThisExpr 0x560a41f338f0 <col:18> 'HashMap_Arena *' implicit this
|-CXXMethodDecl 0x560a41f32740 <line:11:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x560a41f32828 <line:13:5, col:47> col:10 detached 'bool () const'
| `-CompoundStmt 0x560a41f339c8 <col:27, col:47>
|   `-ReturnStmt 0x560a41f339b8 <col:29, col:36>
|     `-ImplicitCastExpr 0x560a41f339a0 <col:36> 'bool' <LValueToRValue>
|       `-MemberExpr 0x560a41f33970 <col:36> 'const bool' lvalue ->_detached 0x560a41f332c0
|         `-CXXThisExpr 0x560a41f33960 <col:36> 'const HashMap_Arena *' implicit this
|-CXXMethodDecl 0x560a41f328e8 <line:14:5, col:39> col:10 detach 'void ()'
| `-CompoundStmt 0x560a41f33a50 <col:19, col:39>
|   `-BinaryOperator 0x560a41f33a30 <col:21, col:33> 'bool' lvalue '='
|     |-MemberExpr 0x560a41f339f0 <col:21> 'bool' lvalue ->_detached 0x560a41f332c0
|     | `-CXXThisExpr 0x560a41f339e0 <col:21> 'HashMap_Arena *' implicit this
|     `-CXXBoolLiteralExpr 0x560a41f33a20 <col:33> 'bool' true
|-CXXMethodDecl 0x560a41f329b0 <line:16:5, col:17> col:11 alloc 'void *()'
|-CXXMethodDecl 0x560a41f32af8 <line:17:5, col:21> col:10 free 'void (void *)'
| `-ParmVarDecl 0x560a41f32a68 <col:15, col:20> col:21 'void *'
|-AccessSpecDecl 0x560a41f32ba0 <line:19:3, col:10> col:3 private
|-CXXRecordDecl 0x560a41f32bc8 <line:21:5, line:23:5> line:21:12 referenced struct Link definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x560a41f32ce8 <col:5, col:12> col:12 implicit referenced struct Link
| `-FieldDecl 0x560a41f32db8 <line:22:2, col:8> col:8 referenced next 'HashMap_Arena::Link *'
|-FieldDecl 0x560a41f32e30 <line:24:5, col:11> col:11 referenced _free 'HashMap_Arena::Link *'
|-EnumDecl 0x560a41f32e80 <line:26:5, col:28> col:5
| `-EnumConstantDecl 0x560a41f32f80 <col:12, col:24> col:12 NELEMENTS 'HashMap_Arena::(anonymous enum at ../dummy_inc/click/bighashmap_arena.hh:26:5)'
|   `-ImplicitCastExpr 0x560a41f32fd0 <col:24> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a41f32f60 <col:24> 'int' Int: 127
|       `-IntegerLiteral 0x560a41f32f40 <col:24> 'int' 127
|-FieldDecl 0x560a41f33000 <line:28:5, col:11> col:11 referenced _cur_buffer 'char *'
|-FieldDecl 0x560a41f33068 <line:29:5, col:9> col:9 referenced _buffer_pos 'int'
|-FieldDecl 0x560a41f330c8 <line:31:5, col:14> col:14 referenced _element_size 'uint32_t':'unsigned int'
|-FieldDecl 0x560a41f33130 <line:33:5, col:12> col:12 _buffers 'char **'
|-FieldDecl 0x560a41f33198 <line:34:5, col:9> col:9 _nbuffers 'int'
|-FieldDecl 0x560a41f33200 <line:35:5, col:9> col:9 _buffers_cap 'int'
|-FieldDecl 0x560a41f33260 <line:37:5, col:14> col:14 referenced _refcount 'uint32_t':'unsigned int'
|-FieldDecl 0x560a41f332c0 <line:38:5, col:10> col:10 referenced _detached 'bool'
|-CXXConstructorDecl 0x560a41f33408 <line:40:5, col:40> col:5 HashMap_Arena 'void (const HashMap_Arena &)'
| `-ParmVarDecl 0x560a41f33348 <col:19, col:39> col:40 'const HashMap_Arena &'
|-CXXDestructorDecl 0x560a41f33500 <line:41:5, col:20> col:5 used ~HashMap_Arena 'void () noexcept'
|-CXXMethodDecl 0x560a41f336e8 <line:42:5, col:51> col:20 operator= 'HashMap_Arena &(const HashMap_Arena &)'
| `-ParmVarDecl 0x560a41f335f0 <col:30, col:50> col:51 'const HashMap_Arena &'
|-CXXMethodDecl 0x560a41f337b8 <line:44:5, col:22> col:11 used hard_alloc 'void *()'
`-FriendDecl 0x560a41f338b0 <line:46:5, col:19> col:12 'struct Link':'HashMap_Arena::Link'

Layout: <CGRecordLayout
  LLVMType:%class.HashMap_Arena = type <{ %"struct.HashMap_Arena::Link"*, i8*, i32, i32, i8**, i32, i32, i32, i8, [3 x i8] }>
  NonVirtualBaseLLVMType:%class.HashMap_Arena.base = type <{ %"struct.HashMap_Arena::Link"*, i8*, i32, i32, i8**, i32, i32, i32, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41f33a68 prev 0x560a41c08f90 <../dummy_inc/click/bighashmap_arena.hh:50:1, line:68:1> line:50:7 referenced class HashMap_ArenaFactory definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x560a41f33b60 <col:1, col:7> col:7 implicit referenced class HashMap_ArenaFactory
|-AccessSpecDecl 0x560a41f33bf0 <col:30, col:36> col:30 public
|-CXXConstructorDecl 0x560a41f33c50 <line:52:5, col:26> col:5 HashMap_ArenaFactory 'void ()'
|-CXXDestructorDecl 0x560a41f33d40 <line:53:5, col:35> col:13 ~HashMap_ArenaFactory 'void ()' virtual noexcept-unevaluated 0x560a41f33d40
|-CXXMethodDecl 0x560a41f33e40 <line:55:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x560a41f33f00 <line:56:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x560a41f34138 <line:58:5, col:72> col:27 referenced get_arena 'HashMap_Arena *(uint32_t, HashMap_ArenaFactory *)' static
| |-ParmVarDecl 0x560a41f33fb0 <col:37> col:45 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x560a41f34028 <col:47, col:71> col:70 'HashMap_ArenaFactory *' cinit
|   `-ImplicitCastExpr 0x560a41f34808 <col:71> 'HashMap_ArenaFactory *' <NullToPointer>
|     `-IntegerLiteral 0x560a41f347e8 <col:71> 'int' 0
|-CXXMethodDecl 0x560a41f342e8 <line:59:5, col:51> col:28 get_arena_func 'HashMap_Arena *(uint32_t)' virtual
| `-ParmVarDecl 0x560a41f341f8 <col:43> col:51 'uint32_t':'unsigned int'
|-AccessSpecDecl 0x560a41f34390 <line:61:3, col:10> col:3 private
|-FieldDecl 0x560a41f34490 <line:63:5, col:30> col:21 _arenas 'HashMap_Arena **[2]'
|-FieldDecl 0x560a41f34548 <line:64:5, col:19> col:9 _narenas 'int [2]'
|-VarDecl 0x560a41f345a8 <line:66:5, col:34> col:34 the_factory 'HashMap_ArenaFactory *' static
`-CXXMethodDecl 0x560a41f34668 <line:50:7> col:7 implicit operator= 'HashMap_ArenaFactory &(const HashMap_ArenaFactory &)' inline default noexcept-unevaluated 0x560a41f34668
  `-ParmVarDecl 0x560a41f34778 <col:7> col:7 'const HashMap_ArenaFactory &'

Layout: <CGRecordLayout
  LLVMType:%class.HashMap_ArenaFactory = type { i32 (...)**, [2 x %class.HashMap_Arena**], [2 x i32] }
  NonVirtualBaseLLVMType:%class.HashMap_ArenaFactory = type { i32 (...)**, [2 x %class.HashMap_Arena**], [2 x i32] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ThreadSched
         0 |   (ThreadSched vtable pointer)
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41e9cbc0 <../dummy_inc/click/standard/threadsched.hh:6:1, line:15:1> line:6:7 class ThreadSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x560a41e9ccd8 <col:1, col:7> col:7 implicit referenced class ThreadSched
|-AccessSpecDecl 0x560a41e9cd68 <col:21, col:27> col:21 public
|-EnumDecl 0x560a41e9cd90 <line:8:5, col:58> col:5
| |-EnumConstantDecl 0x560a41e9cea8 <col:12, col:32> col:12 THREAD_QUIESCENT 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
| | `-ConstantExpr 0x560a41e9ce88 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x560a41e9ce70 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x560a41e9ce50 <col:32> 'int' 1
| `-EnumConstantDecl 0x560a41e9cf50 <col:35, col:53> col:35 THREAD_UNKNOWN 'ThreadSched::(anonymous enum at ../dummy_inc/click/standard/threadsched.hh:8:5)'
|   `-ConstantExpr 0x560a41e9cf30 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x560a41e9cf18 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x560a41e9cef8 <col:53> 'int' 1000
|-CXXConstructorDecl 0x560a41e9d000 <line:10:5, col:21> col:5 ThreadSched 'void ()'
| `-CompoundStmt 0x560a41e9d538 <col:19, col:21>
|-CXXDestructorDecl 0x560a41e9d0f0 <line:11:5, col:30> col:13 ~ThreadSched 'void () noexcept' virtual
| `-CompoundStmt 0x560a41e9d548 <col:28, col:30>
|-CXXMethodDecl 0x560a41e9d2b0 <line:13:5, col:56> col:17 initial_home_thread_id 'int (const Element *)' virtual
| `-ParmVarDecl 0x560a41e9d1e0 <col:40, col:55> col:55 e 'const Element *'
`-CXXMethodDecl 0x560a41e9d3b8 <line:6:7> col:7 implicit operator= 'ThreadSched &(const ThreadSched &)' inline default noexcept-unevaluated 0x560a41e9d3b8
  `-ParmVarDecl 0x560a41e9d4c8 <col:7> col:7 'const ThreadSched &'

Layout: <CGRecordLayout
  LLVMType:%class.ThreadSched = type { i32 (...)** }
  NonVirtualBaseLLVMType:%class.ThreadSched = type { i32 (...)** }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41e9daf0 prev 0x560a41e65900 <../dummy_inc/click/router.hh:23:1, line:352:1> line:23:7 referenced class Router definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x560a41e9dbe8 <col:1, col:7> col:7 implicit referenced class Router
|-AccessSpecDecl 0x560a41e9dc78 <col:16, col:22> col:16 public
|-CXXMethodDecl 0x560a41e9dce8 <line:28:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x560a41e9dda8 <line:31:5, col:31> col:17 used initialized 'bool () const' inline
|-CXXMethodDecl 0x560a41e9de68 <line:32:5, col:34> col:17 handlers_ready 'bool () const' inline
|-CXXMethodDecl 0x560a41e9df28 <line:33:5, col:27> col:17 running 'bool () const' inline
|-CXXMethodDecl 0x560a41e9dfe8 <line:34:5, col:25> col:17 dying 'bool () const' inline
|-EnumDecl 0x560a41e9e088 <line:37:5, col:44> col:5
| `-EnumConstantDecl 0x560a41e9e1e8 <col:12, col:42> col:12 STOP_RUNCOUNT 'Router::(anonymous enum at ../dummy_inc/click/router.hh:37:5)'
|   `-ConstantExpr 0x560a41e9e1c8 <col:28, col:42> 'int' Int: -2147483648
|     `-BinaryOperator 0x560a41e9e1a8 <col:28, col:42> 'int' '-'
|       |-UnaryOperator 0x560a41e9e170 <col:28, col:29> 'int' prefix '-'
|       | `-IntegerLiteral 0x560a41e9e150 <col:29> 'int' 2147483647
|       `-IntegerLiteral 0x560a41e9e188 <col:42> 'int' 1
|-CXXMethodDecl 0x560a41e9e288 <line:38:5, col:31> col:20 runcount 'int32_t () const' inline
|-CXXMethodDecl 0x560a41e9e3f8 <line:39:5, col:39> col:10 used adjust_runcount 'void (int32_t)'
| `-ParmVarDecl 0x560a41e9e338 <col:26, col:34> col:34 delta 'int32_t':'int'
|-CXXMethodDecl 0x560a41e9e540 <line:40:5, col:33> col:10 set_runcount 'void (int32_t)'
| `-ParmVarDecl 0x560a41e9e4b0 <col:23, col:31> col:31 rc 'int32_t':'int'
|-CXXMethodDecl 0x560a41e9e608 <line:41:5, col:36> col:17 please_stop_driver 'void ()' inline
|-CXXMethodDecl 0x560a41e9e930 <line:44:5, col:47> col:36 elements 'const Vector<Element *> &() const' inline
|-CXXMethodDecl 0x560a41e9e9f8 <line:45:5, col:28> col:16 nelements 'int () const' inline
|-CXXMethodDecl 0x560a41e9eb78 <line:46:5, col:36> col:21 element 'Element *(int) const' inline
| `-ParmVarDecl 0x560a41e9eab0 <col:29, col:33> col:33 i 'int'
|-CXXMethodDecl 0x560a41e9ec40 <line:47:5, col:36> col:21 root_element 'Element *() const' inline
|-CXXMethodDecl 0x560a41e9ee48 <line:48:5, col:56> col:21 used element 'Element *(const Router *, int)' static
| |-ParmVarDecl 0x560a41e9ecf0 <col:29, col:43> col:43 router 'const Router *'
| `-ParmVarDecl 0x560a41e9ed70 <col:51, col:55> col:55 i 'int'
|-CXXMethodDecl 0x560a41e9efa0 <line:50:5, col:32> col:19 ename 'const String &(int) const'
| `-ParmVarDecl 0x560a41e9ef10 <col:25, col:29> col:29 i 'int'
|-CXXMethodDecl 0x560a41e9f0f0 <line:51:5, col:33> col:12 ename_context 'String (int) const'
| `-ParmVarDecl 0x560a41e9f060 <col:26, col:30> col:30 i 'int'
|-CXXMethodDecl 0x560a41e9f240 <line:52:5, col:29> col:12 elandmark 'String (int) const'
| `-ParmVarDecl 0x560a41e9f1b0 <col:22, col:26> col:26 i 'int'
|-CXXMethodDecl 0x560a41e9f390 <line:53:5, col:41> col:19 econfiguration 'const String &(int) const'
| `-ParmVarDecl 0x560a41e9f300 <col:34, col:38> col:38 i 'int'
|-CXXMethodDecl 0x560a41e9f560 <line:54:5, col:54> col:10 set_econfiguration 'void (int, const String &)'
| |-ParmVarDecl 0x560a41e9f450 <col:29, col:33> col:33 i 'int'
| `-ParmVarDecl 0x560a41e9f4c8 <col:36, col:50> col:50 conf 'const String &'
|-CXXMethodDecl 0x560a41e9f768 <line:56:5, col:63> col:14 find 'Element *(const String &, ErrorHandler *) const'
| |-ParmVarDecl 0x560a41e9f620 <col:19, col:33> col:33 name 'const String &'
| `-ParmVarDecl 0x560a41e9f698 <col:39, col:60> col:53 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x560a41ee56e0 <col:60> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x560a41ee56c0 <col:60> 'int' 0
|-CXXMethodDecl 0x560a41e9f9f8 <line:57:5, col:79> col:14 used find 'Element *(const String &, String, ErrorHandler *) const'
| |-ParmVarDecl 0x560a41e9f828 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x560a41e9f8a0 <col:39, col:46> col:46 context 'String' destroyed
| `-ParmVarDecl 0x560a41e9f918 <col:55, col:76> col:69 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x560a41ee5718 <col:76> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x560a41ee56f8 <col:76> 'int' 0
|-CXXMethodDecl 0x560a41e9fc98 <line:58:5, col:87> col:14 find 'Element *(const String &, const Element *, ErrorHandler *) const'
| |-ParmVarDecl 0x560a41e9fac0 <col:19, col:33> col:33 name 'const String &'
| |-ParmVarDecl 0x560a41e9fb38 <col:39, col:54> col:54 context 'const Element *'
| `-ParmVarDecl 0x560a41e9fbb0 <col:63, col:84> col:77 errh 'ErrorHandler *' cinit
|   `-ImplicitCastExpr 0x560a41ee5750 <col:84> 'ErrorHandler *' <NullToPointer>
|     `-IntegerLiteral 0x560a41ee5730 <col:84> 'int' 0
|-CXXMethodDecl 0x560a41e9fff0 <line:60:5, col:76> col:9 used visit 'int (Element *, bool, int, RouterVisitor *) const'
| |-ParmVarDecl 0x560a41e9fd60 <col:15, col:24> col:24 e 'Element *'
| |-ParmVarDecl 0x560a41e9fdd8 <col:27, col:32> col:32 isoutput 'bool'
| |-ParmVarDecl 0x560a41e9fe58 <col:42, col:46> col:46 port 'int'
| `-ParmVarDecl 0x560a41e9fef8 <col:52, col:67> col:67 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x560a41ea02a0 <line:61:5, col:72> col:9 visit_downstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x560a41ea00c0 <col:26, col:35> col:35 e 'Element *'
| |-ParmVarDecl 0x560a41ea0140 <col:38, col:42> col:42 port 'int'
| `-ParmVarDecl 0x560a41ea01b8 <col:48, col:63> col:63 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x560a41ea0508 <line:62:5, col:70> col:9 visit_upstream 'int (Element *, int, RouterVisitor *) const'
| |-ParmVarDecl 0x560a41ea0368 <col:24, col:33> col:33 e 'Element *'
| |-ParmVarDecl 0x560a41ea03e8 <col:36, col:40> col:40 port 'int'
| `-ParmVarDecl 0x560a41ea0460 <col:46, col:61> col:61 visitor 'RouterVisitor *'
|-CXXMethodDecl 0x560a41ea09c0 <line:64:5, col:126> col:9 downstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x560a41ea05d0 <col:29, col:38> col:38 e 'Element *'
| |-ParmVarDecl 0x560a41ea0650 <col:41, col:45> col:45 port 'int'
| |-ParmVarDecl 0x560a41ea06f8 <col:51, col:66> col:66 filter 'ElementFilter *'
| |-ParmVarDecl 0x560a41ea0870 <col:74, col:92> col:92 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x560a41ea0a80 <col:115> "" ""
|-CXXMethodDecl 0x560a41ea0e40 <line:65:5, col:124> col:9 upstream_elements 'int (Element *, int, ElementFilter *, Vector<Element *> &)'
| |-ParmVarDecl 0x560a41ea0b00 <col:27, col:36> col:36 e 'Element *'
| |-ParmVarDecl 0x560a41ea0b80 <col:39, col:43> col:43 port 'int'
| |-ParmVarDecl 0x560a41ea0bf8 <col:49, col:64> col:64 filter 'ElementFilter *'
| |-ParmVarDecl 0x560a41ea0d40 <col:72, col:90> col:90 result 'Vector<Element *> &'
| `-DeprecatedAttr 0x560a41ea0f00 <col:113> "" ""
|-CXXMethodDecl 0x560a41ea1050 <line:67:5, col:55> col:24 flow_code_override 'const char *(int) const' inline
| `-ParmVarDecl 0x560a41ea0f88 <col:43, col:47> col:47 eindex 'int'
|-CXXMethodDecl 0x560a41ea1220 <line:68:5, col:68> col:10 set_flow_code_override 'void (int, const String &)'
| |-ParmVarDecl 0x560a41ea1110 <col:33, col:37> col:37 eindex 'int'
| `-ParmVarDecl 0x560a41ea1188 <col:45, col:59> col:59 flow_code 'const String &'
|-CXXMethodDecl 0x560a41ea1c58 <line:72:5, col:72> col:27 handler 'const Handler *(const Element *, const String &)' static
| |-ParmVarDecl 0x560a41ea1b10 <col:35, col:50> col:50 e 'const Element *'
| `-ParmVarDecl 0x560a41ea1b88 <col:53, col:67> col:67 hname 'const String &'
|-CXXMethodDecl 0x560a41ea2058 <line:73:5, col:138> col:17 add_read_handler 'void (const Element *, const String &, ReadHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x560a41ea1d18 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x560a41ea1d90 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x560a41ea1e08 <col:73, col:93> col:93 callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x560a41ea1e88 <col:103, col:109> col:109 user_data 'void *'
| `-ParmVarDecl 0x560a41ea1f00 <col:120, col:137> col:129 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x560a41ee5788 <col:137> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x560a41ee5768 <col:137> 'int' 0
|-CXXMethodDecl 0x560a41ea2468 <line:74:5, col:140> col:17 add_write_handler 'void (const Element *, const String &, WriteHandlerCallback, void *, uint32_t)' static
| |-ParmVarDecl 0x560a41ea2130 <col:35, col:50> col:50 e 'const Element *'
| |-ParmVarDecl 0x560a41ea21a8 <col:53, col:67> col:67 hname 'const String &'
| |-ParmVarDecl 0x560a41ea2220 <col:74, col:95> col:95 callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x560a41ea22a0 <col:105, col:111> col:111 user_data 'void *'
| `-ParmVarDecl 0x560a41ea2318 <col:122, col:139> col:131 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x560a41ee57c0 <col:139> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x560a41ee57a0 <col:139> 'int' 0
|-CXXMethodDecl 0x560a41ea2918 <line:75:5, col:161> col:17 set_handler 'void (const Element *, const String &, uint32_t, HandlerCallback, void *, void *)' static
| |-ParmVarDecl 0x560a41ea2540 <col:29, col:44> col:44 e 'const Element *'
| |-ParmVarDecl 0x560a41ea25b8 <col:47, col:61> col:61 hname 'const String &'
| |-ParmVarDecl 0x560a41ea2630 <col:68, col:77> col:77 flags 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x560a41ea26a8 <col:84, col:100> col:100 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x560a41ea2728 <col:110, col:133> col:116 read_user_data 'void *' cinit
| | `-ImplicitCastExpr 0x560a41ee57f8 <col:133> 'void *' <NullToPointer>
| |   `-IntegerLiteral 0x560a41ee57d8 <col:133> 'int' 0
| `-ParmVarDecl 0x560a41ea27a8 <col:136, col:160> col:142 write_user_data 'void *' cinit
|   `-ImplicitCastExpr 0x560a41ee5830 <col:160> 'void *' <NullToPointer>
|     `-IntegerLiteral 0x560a41ee5810 <col:160> 'int' 0
|-CXXMethodDecl 0x560a41ea2cb0 <line:76:5, col:117> col:16 set_handler_flags 'int (const Element *, const String &, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x560a41ea29f8 <col:34, col:49> col:49 e 'const Element *'
| |-ParmVarDecl 0x560a41ea2a70 <col:52, col:66> col:66 hname 'const String &'
| |-ParmVarDecl 0x560a41ea2ae8 <col:73, col:82> col:82 set_flags 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x560a41ea2b60 <col:93, col:116> col:102 clear_flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x560a41ee5868 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x560a41ee5848 <col:116> 'int' 0
|-EnumDecl 0x560a41ea2d70 <line:78:5, col:46> col:5
| `-EnumConstantDecl 0x560a41ea2e70 <col:12, col:35> col:12 FIRST_GLOBAL_HANDLER 'Router::(anonymous enum at ../dummy_inc/click/router.hh:78:5)'
|   `-ImplicitCastExpr 0x560a41ea2ec0 <col:35> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a41ea2e50 <col:35> 'int' Int: 1073741824
|       `-IntegerLiteral 0x560a41ea2e30 <col:35> 'int' 1073741824
|-CXXMethodDecl 0x560a41ea3040 <line:79:5, col:60> col:16 hindex 'int (const Element *, const String &)' static
| |-ParmVarDecl 0x560a41ea2ee8 <col:23, col:38> col:38 e 'const Element *'
| `-ParmVarDecl 0x560a41ea2f60 <col:41, col:55> col:55 hname 'const String &'
|-CXXMethodDecl 0x560a41ea3258 <line:80:5, col:67> col:27 handler 'const Handler *(const Router *, int)' static
| |-ParmVarDecl 0x560a41ea3100 <col:35, col:49> col:49 router 'const Router *'
| `-ParmVarDecl 0x560a41ea3180 <col:57, col:61> col:61 hindex 'int'
|-CXXMethodDecl 0x560a41ea3588 <line:81:5, col:71> col:17 element_hindexes 'void (const Element *, Vector<int> &)' static
| |-ParmVarDecl 0x560a41ea3318 <col:34, col:49> col:49 e 'const Element *'
| `-ParmVarDecl 0x560a41ea3470 <col:52, col:65> col:65 result 'Vector<int> &'
|-CXXMethodDecl 0x560a41ea3710 <line:84:5, col:43> col:11 attachment 'void *(const String &) const'
| `-ParmVarDecl 0x560a41ea3648 <col:22, col:36> col:36 aname 'const String &'
|-CXXMethodDecl 0x560a41ea3890 <line:85:5, col:48> col:12 force_attachment 'void *&(const String &)'
| `-ParmVarDecl 0x560a41ea37c8 <col:29, col:43> col:43 aname 'const String &'
|-CXXMethodDecl 0x560a41ea3aa0 <line:86:5, col:58> col:11 set_attachment 'void *(const String &, void *)'
| |-ParmVarDecl 0x560a41ea3948 <col:26, col:40> col:40 aname 'const String &'
| `-ParmVarDecl 0x560a41ea39c8 <col:47, col:53> col:53 value 'void *'
|-CXXMethodDecl 0x560a41ea3c28 <line:88:5, col:63> col:19 chatter_channel 'ErrorHandler *(const String &) const'
| `-ParmVarDecl 0x560a41ea3b60 <col:35, col:49> col:49 channel_name 'const String &'
|-CXXMethodDecl 0x560a41ea3d48 <line:89:5, col:43> col:27 arena_factory 'HashMap_ArenaFactory *() const'
|-CXXMethodDecl 0x560a41ea3e38 <line:91:5, col:40> col:25 thread_sched 'ThreadSched *() const' inline
|-CXXMethodDecl 0x560a41ea3fa8 <line:92:5, col:56> col:17 set_thread_sched 'void (ThreadSched *)' inline
| `-ParmVarDecl 0x560a41ea3ee8 <col:34, col:47> col:47 scheduler 'ThreadSched *'
|-CXXMethodDecl 0x560a41ea4130 <line:93:5, col:49> col:16 home_thread_id 'int (const Element *) const' inline
| `-ParmVarDecl 0x560a41ea4060 <col:31, col:46> col:46 e 'const Element *'
|-CXXMethodDecl 0x560a41ea4338 <line:94:5, col:69> col:17 set_home_thread_id 'void (const Element *, int)' inline
| |-ParmVarDecl 0x560a41ea41e8 <col:36, col:51> col:51 e 'const Element *'
| `-ParmVarDecl 0x560a41ea4268 <col:54, col:58> col:58 home_thread 'int'
|-CXXMethodDecl 0x560a41ea4468 <line:98:5, col:34> col:22 name_info 'NameInfo *() const' inline
|-CXXMethodDecl 0x560a41ea4558 <line:99:5, col:31> col:15 force_name_info 'NameInfo *()'
|-CXXMethodDecl 0x560a41ea4618 <line:103:5, col:35> col:12 configuration_string 'String () const'
|-CXXMethodDecl 0x560a41ea4818 <line:104:5, col:68> col:10 unparse 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x560a41ea46c8 <col:18, col:31> col:31 sa 'StringAccum &'
| `-ParmVarDecl 0x560a41ea4740 <col:35, col:65> col:49 indent 'const String &' cinit
|   `-ExprWithCleanups 0x560a41ee5918 <col:58, col:65> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x560a41ee5900 <col:58, col:65> 'const String' lvalue
|       `-ImplicitCastExpr 0x560a41ee58e8 <col:58, col:65> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x560a41ee58c8 <col:58, col:65> 'String' (CXXTemporary 0x560a41ee58c8)
|           `-CXXTemporaryObjectExpr 0x560a41ee5890 <col:58, col:65> 'String' 'void ()'
|-CXXMethodDecl 0x560a41ea49e8 <line:105:5, col:81> col:10 unparse_requirements 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x560a41ea48d8 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x560a41ea4950 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x560a41ee59c8 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x560a41ee59b0 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x560a41ee5998 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x560a41ee5978 <col:71, col:78> 'String' (CXXTemporary 0x560a41ee5978)
|           `-CXXTemporaryObjectExpr 0x560a41ee5940 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x560a41ea4bb8 <line:106:5, col:81> col:10 unparse_declarations 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x560a41ea4aa8 <col:31, col:44> col:44 sa 'StringAccum &'
| `-ParmVarDecl 0x560a41ea4b20 <col:48, col:78> col:62 indent 'const String &' cinit
|   `-ExprWithCleanups 0x560a41ee5a78 <col:71, col:78> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x560a41ee5a60 <col:71, col:78> 'const String' lvalue
|       `-ImplicitCastExpr 0x560a41ee5a48 <col:71, col:78> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x560a41ee5a28 <col:71, col:78> 'String' (CXXTemporary 0x560a41ee5a28)
|           `-CXXTemporaryObjectExpr 0x560a41ee59f0 <col:71, col:78> 'String' 'void ()'
|-CXXMethodDecl 0x560a41ea4d88 <line:107:5, col:80> col:10 unparse_connections 'void (StringAccum &, const String &) const'
| |-ParmVarDecl 0x560a41ea4c78 <col:30, col:43> col:43 sa 'StringAccum &'
| `-ParmVarDecl 0x560a41ea4cf0 <col:47, col:77> col:61 indent 'const String &' cinit
|   `-ExprWithCleanups 0x560a41ee5b28 <col:70, col:77> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x560a41ee5b10 <col:70, col:77> 'const String' lvalue
|       `-ImplicitCastExpr 0x560a41ee5af8 <col:70, col:77> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x560a41ee5ad8 <col:70, col:77> 'String' (CXXTemporary 0x560a41ee5ad8)
|           `-CXXTemporaryObjectExpr 0x560a41ee5aa0 <col:70, col:77> 'String' 'void ()'
|-CXXMethodDecl 0x560a41ea4f08 <line:109:5, col:51> col:12 element_ports_string 'String (const Element *) const'
| `-ParmVarDecl 0x560a41ea4e48 <col:33, col:48> col:48 e 'const Element *'
|-CXXConstructorDecl 0x560a41ea5128 <line:115:5, col:55> col:5 Router 'void (const String &, Master *)'
| |-ParmVarDecl 0x560a41ea4fc0 <col:12, col:26> col:26 configuration 'const String &'
| `-ParmVarDecl 0x560a41ea5038 <col:41, col:49> col:49 master 'Master *'
|-CXXDestructorDecl 0x560a41ea5228 <line:116:5, col:13> col:5 ~Router 'void ()' noexcept-unevaluated 0x560a41ea5228
|-CXXMethodDecl 0x560a41ea5330 <line:118:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x560a41ea53f0 <line:119:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x560a41ea54b0 <line:121:5, col:21> col:17 use 'void ()' inline
|-CXXMethodDecl 0x560a41ea5570 <line:122:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x560a41ea5768 <line:124:5, col:65> col:10 add_requirement 'void (const String &, const String &)'
| |-ParmVarDecl 0x560a41ea5620 <col:26, col:40> col:40 type 'const String &'
| `-ParmVarDecl 0x560a41ea5698 <col:46, col:60> col:60 value 'const String &'
|-CXXMethodDecl 0x560a41ea5b20 <line:125:5, col:112> col:9 add_element 'int (Element *, const String &, const String &, const String &, unsigned int)'
| |-ParmVarDecl 0x560a41ea5828 <col:21, col:30> col:30 e 'Element *'
| |-ParmVarDecl 0x560a41ea58a0 <col:33, col:47> col:47 name 'const String &'
| |-ParmVarDecl 0x560a41ea5918 <col:53, col:67> col:67 conf 'const String &'
| |-ParmVarDecl 0x560a41ea5990 <col:73, col:87> col:87 filename 'const String &'
| `-ParmVarDecl 0x560a41ea5a10 <col:97, col:106> col:106 lineno 'unsigned int'
|-CXXMethodDecl 0x560a41ea5e80 <line:126:5, col:76> col:9 add_connection 'int (int, int, int, int)'
| |-ParmVarDecl 0x560a41ea5c00 <col:24, col:28> col:28 from_idx 'int'
| |-ParmVarDecl 0x560a41ea5c80 <col:38, col:42> col:42 from_port 'int'
| |-ParmVarDecl 0x560a41ea5d00 <col:53, col:57> col:57 to_idx 'int'
| `-ParmVarDecl 0x560a41ea5d80 <col:65, col:69> col:69 to_port 'int'
|-CXXMethodDecl 0x560a41ea5f60 <line:131:5, col:37> col:20 hotswap_router 'Router *() const' inline
|-CXXMethodDecl 0x560a41ea60a0 <line:132:5, col:43> col:10 set_hotswap_router 'void (Router *)'
| `-ParmVarDecl 0x560a41ea6010 <col:29, col:37> col:37 router 'Router *'
|-CXXMethodDecl 0x560a41ea61f0 <line:134:5, col:38> col:9 initialize 'int (ErrorHandler *)'
| `-ParmVarDecl 0x560a41ea6158 <col:20, col:34> col:34 errh 'ErrorHandler *'
|-CXXMethodDecl 0x560a41ea63f8 <line:135:5, col:54> col:10 used activate 'void (bool, ErrorHandler *)'
| |-ParmVarDecl 0x560a41ea62a8 <col:19, col:24> col:24 foreground 'bool'
| `-ParmVarDecl 0x560a41ea6320 <col:36, col:50> col:50 errh 'ErrorHandler *'
|-CXXMethodDecl 0x560a41ea6548 <line:136:5, col:44> col:17 activate 'void (ErrorHandler *)' inline
| `-ParmVarDecl 0x560a41ea64b8 <col:26, col:40> col:40 errh 'ErrorHandler *'
|-CXXMethodDecl 0x560a41ea6690 <line:137:5, col:47> col:17 set_foreground 'void (bool)' inline
| `-ParmVarDecl 0x560a41ea6600 <col:32, col:37> col:37 foreground 'bool'
|-CXXMethodDecl 0x560a41ea68d0 <line:139:5, col:69> col:9 new_notifier_signal 'int (const char *, NotifierSignal &)'
| |-ParmVarDecl 0x560a41ea6750 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x560a41ea67f8 <col:47, col:63> col:63 signal 'NotifierSignal &'
|-CXXMethodDecl 0x560a41ea6a58 <line:140:5, col:64> col:12 notifier_signal_name 'String (const atomic_uint32_t *) const'
| `-ParmVarDecl 0x560a41ea6990 <col:33, col:56> col:56 signal 'const atomic_uint32_t *'
|-CXXRecordDecl 0x560a41ea6b00 <line:145:5, line:167:5> line:145:12 referenced struct Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x560a41ea6c18 <col:5, col:12> col:12 implicit referenced struct Port
| |-FieldDecl 0x560a41ea6cc0 <line:146:9, col:13> col:13 referenced idx 'int'
| |-FieldDecl 0x560a41ea6d28 <line:147:9, col:13> col:13 referenced port 'int'
| |-CXXConstructorDecl 0x560a41ea6de0 <line:149:9, line:150:9> line:149:9 used Port 'void ()'
| | `-CompoundStmt 0x560a41ee5b50 <col:16, line:150:9>
| |-CXXConstructorDecl 0x560a41ea6fb8 <line:151:9, line:153:9> line:151:9 used Port 'void (int, int)'
| | |-ParmVarDecl 0x560a41ea6ea0 <col:14, col:18> col:18 used i 'int'
| | |-ParmVarDecl 0x560a41ea6f20 <col:21, col:25> col:25 used p 'int'
| | |-CXXCtorInitializer Field 0x560a41ea6cc0 'idx' 'int'
| | | `-ImplicitCastExpr 0x560a41ee5ba0 <line:152:19> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x560a41ee5b60 <col:19> 'int' lvalue ParmVar 0x560a41ea6ea0 'i' 'int'
| | |-CXXCtorInitializer Field 0x560a41ea6d28 'port' 'int'
| | | `-ImplicitCastExpr 0x560a41ee5c20 <col:28> 'int' <LValueToRValue>
| | |   `-DeclRefExpr 0x560a41ee5be0 <col:28> 'int' lvalue ParmVar 0x560a41ea6f20 'p' 'int'
| | `-CompoundStmt 0x560a41ee5c70 <col:31, line:153:9>
| |-CXXMethodDecl 0x560a41ea7198 <line:155:9, line:157:9> line:155:14 used operator== 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x560a41ea70a8 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x560a41ee5e70 <col:46, line:157:9>
| |   `-ReturnStmt 0x560a41ee5e60 <line:156:13, col:46>
| |     `-BinaryOperator 0x560a41ee5e40 <col:20, col:46> 'bool' '&&'
| |       |-BinaryOperator 0x560a41ee5d40 <col:20, col:29> 'bool' '=='
| |       | |-ImplicitCastExpr 0x560a41ee5d10 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x560a41ee5c90 <col:20> 'const int' lvalue ->idx 0x560a41ea6cc0
| |       | |   `-CXXThisExpr 0x560a41ee5c80 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x560a41ee5d28 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x560a41ee5ce0 <col:27, col:29> 'const int' lvalue .idx 0x560a41ea6cc0
| |       |     `-DeclRefExpr 0x560a41ee5cc0 <col:27> 'const Router::Port' lvalue ParmVar 0x560a41ea70a8 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x560a41ee5e20 <col:36, col:46> 'bool' '=='
| |         |-ImplicitCastExpr 0x560a41ee5df0 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x560a41ee5d70 <col:36> 'const int' lvalue ->port 0x560a41ea6d28
| |         |   `-CXXThisExpr 0x560a41ee5d60 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x560a41ee5e08 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x560a41ee5dc0 <col:44, col:46> 'const int' lvalue .port 0x560a41ea6d28
| |             `-DeclRefExpr 0x560a41ee5da0 <col:44> 'const Router::Port' lvalue ParmVar 0x560a41ea70a8 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x560a41ea72e0 <line:158:9, line:160:9> line:158:14 operator!= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x560a41ea7250 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x560a41ee6078 <col:46, line:160:9>
| |   `-ReturnStmt 0x560a41ee6068 <line:159:13, col:46>
| |     `-BinaryOperator 0x560a41ee6048 <col:20, col:46> 'bool' '||'
| |       |-BinaryOperator 0x560a41ee5f48 <col:20, col:29> 'bool' '!='
| |       | |-ImplicitCastExpr 0x560a41ee5f18 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x560a41ee5e98 <col:20> 'const int' lvalue ->idx 0x560a41ea6cc0
| |       | |   `-CXXThisExpr 0x560a41ee5e88 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x560a41ee5f30 <col:27, col:29> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x560a41ee5ee8 <col:27, col:29> 'const int' lvalue .idx 0x560a41ea6cc0
| |       |     `-DeclRefExpr 0x560a41ee5ec8 <col:27> 'const Router::Port' lvalue ParmVar 0x560a41ea7250 'x' 'const Router::Port &'
| |       `-BinaryOperator 0x560a41ee6028 <col:36, col:46> 'bool' '!='
| |         |-ImplicitCastExpr 0x560a41ee5ff8 <col:36> 'int' <LValueToRValue>
| |         | `-MemberExpr 0x560a41ee5f78 <col:36> 'const int' lvalue ->port 0x560a41ea6d28
| |         |   `-CXXThisExpr 0x560a41ee5f68 <col:36> 'const Router::Port *' implicit this
| |         `-ImplicitCastExpr 0x560a41ee6010 <col:44, col:46> 'int' <LValueToRValue>
| |           `-MemberExpr 0x560a41ee5fc8 <col:44, col:46> 'const int' lvalue .port 0x560a41ea6d28
| |             `-DeclRefExpr 0x560a41ee5fa8 <col:44> 'const Router::Port' lvalue ParmVar 0x560a41ea7250 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x560a41ea7428 <line:161:9, line:163:9> line:161:14 used operator< 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x560a41ea7398 <col:24, col:36> col:36 used x 'const Router::Port &'
| | `-CompoundStmt 0x560a41ee63a0 <col:45, line:163:9>
| |   `-ReturnStmt 0x560a41ee6390 <line:162:13, col:65>
| |     `-BinaryOperator 0x560a41ee6370 <col:20, col:65> 'bool' '||'
| |       |-BinaryOperator 0x560a41ee6150 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x560a41ee6120 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x560a41ee60a0 <col:20> 'const int' lvalue ->idx 0x560a41ea6cc0
| |       | |   `-CXXThisExpr 0x560a41ee6090 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x560a41ee6138 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x560a41ee60f0 <col:26, col:28> 'const int' lvalue .idx 0x560a41ea6cc0
| |       |     `-DeclRefExpr 0x560a41ee60d0 <col:26> 'const Router::Port' lvalue ParmVar 0x560a41ea7398 'x' 'const Router::Port &'
| |       `-ParenExpr 0x560a41ee6350 <col:35, col:65> 'bool'
| |         `-BinaryOperator 0x560a41ee6330 <col:36, col:61> 'bool' '&&'
| |           |-BinaryOperator 0x560a41ee6230 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x560a41ee6200 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x560a41ee6180 <col:36> 'const int' lvalue ->idx 0x560a41ea6cc0
| |           | |   `-CXXThisExpr 0x560a41ee6170 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x560a41ee6218 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x560a41ee61d0 <col:43, col:45> 'const int' lvalue .idx 0x560a41ea6cc0
| |           |     `-DeclRefExpr 0x560a41ee61b0 <col:43> 'const Router::Port' lvalue ParmVar 0x560a41ea7398 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x560a41ee6310 <col:52, col:61> 'bool' '<'
| |             |-ImplicitCastExpr 0x560a41ee62e0 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x560a41ee6260 <col:52> 'const int' lvalue ->port 0x560a41ea6d28
| |             |   `-CXXThisExpr 0x560a41ee6250 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x560a41ee62f8 <col:59, col:61> 'int' <LValueToRValue>
| |               `-MemberExpr 0x560a41ee62b0 <col:59, col:61> 'const int' lvalue .port 0x560a41ea6d28
| |                 `-DeclRefExpr 0x560a41ee6290 <col:59> 'const Router::Port' lvalue ParmVar 0x560a41ea7398 'x' 'const Router::Port &'
| |-CXXMethodDecl 0x560a41ea7570 <line:164:9, line:166:9> line:164:14 operator<= 'bool (const Router::Port &) const'
| | |-ParmVarDecl 0x560a41ea74e0 <col:25, col:37> col:37 used x 'const Router::Port &'
| | `-CompoundStmt 0x560a41ee66c8 <col:46, line:166:9>
| |   `-ReturnStmt 0x560a41ee66b8 <line:165:13, col:66>
| |     `-BinaryOperator 0x560a41ee6698 <col:20, col:66> 'bool' '||'
| |       |-BinaryOperator 0x560a41ee6478 <col:20, col:28> 'bool' '<'
| |       | |-ImplicitCastExpr 0x560a41ee6448 <col:20> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x560a41ee63c8 <col:20> 'const int' lvalue ->idx 0x560a41ea6cc0
| |       | |   `-CXXThisExpr 0x560a41ee63b8 <col:20> 'const Router::Port *' implicit this
| |       | `-ImplicitCastExpr 0x560a41ee6460 <col:26, col:28> 'int' <LValueToRValue>
| |       |   `-MemberExpr 0x560a41ee6418 <col:26, col:28> 'const int' lvalue .idx 0x560a41ea6cc0
| |       |     `-DeclRefExpr 0x560a41ee63f8 <col:26> 'const Router::Port' lvalue ParmVar 0x560a41ea74e0 'x' 'const Router::Port &'
| |       `-ParenExpr 0x560a41ee6678 <col:35, col:66> 'bool'
| |         `-BinaryOperator 0x560a41ee6658 <col:36, col:62> 'bool' '&&'
| |           |-BinaryOperator 0x560a41ee6558 <col:36, col:45> 'bool' '=='
| |           | |-ImplicitCastExpr 0x560a41ee6528 <col:36> 'int' <LValueToRValue>
| |           | | `-MemberExpr 0x560a41ee64a8 <col:36> 'const int' lvalue ->idx 0x560a41ea6cc0
| |           | |   `-CXXThisExpr 0x560a41ee6498 <col:36> 'const Router::Port *' implicit this
| |           | `-ImplicitCastExpr 0x560a41ee6540 <col:43, col:45> 'int' <LValueToRValue>
| |           |   `-MemberExpr 0x560a41ee64f8 <col:43, col:45> 'const int' lvalue .idx 0x560a41ea6cc0
| |           |     `-DeclRefExpr 0x560a41ee64d8 <col:43> 'const Router::Port' lvalue ParmVar 0x560a41ea74e0 'x' 'const Router::Port &'
| |           `-BinaryOperator 0x560a41ee6638 <col:52, col:62> 'bool' '<='
| |             |-ImplicitCastExpr 0x560a41ee6608 <col:52> 'int' <LValueToRValue>
| |             | `-MemberExpr 0x560a41ee6588 <col:52> 'const int' lvalue ->port 0x560a41ea6d28
| |             |   `-CXXThisExpr 0x560a41ee6578 <col:52> 'const Router::Port *' implicit this
| |             `-ImplicitCastExpr 0x560a41ee6620 <col:60, col:62> 'int' <LValueToRValue>
| |               `-MemberExpr 0x560a41ee65d8 <col:60, col:62> 'const int' lvalue .port 0x560a41ea6d28
| |                 `-DeclRefExpr 0x560a41ee65b8 <col:60> 'const Router::Port' lvalue ParmVar 0x560a41ea74e0 'x' 'const Router::Port &'
| |-CXXConstructorDecl 0x560a41ee66e0 <line:145:12> col:12 implicit constexpr Port 'void (const Router::Port &)' inline default trivial noexcept-unevaluated 0x560a41ee66e0
| | `-ParmVarDecl 0x560a41ee67f8 <col:12> col:12 'const Router::Port &'
| |-CXXConstructorDecl 0x560a41ee6898 <col:12> col:12 implicit constexpr Port 'void (Router::Port &&)' inline default trivial noexcept-unevaluated 0x560a41ee6898
| | `-ParmVarDecl 0x560a41ee69a8 <col:12> col:12 'Router::Port &&'
| |-CXXDestructorDecl 0x560a41ee6a40 <col:12> col:12 implicit referenced ~Port 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x560a41ee6d10 <col:12> col:12 implicit operator= 'Router::Port &(const Router::Port &)' inline default trivial noexcept-unevaluated 0x560a41ee6d10
| | `-ParmVarDecl 0x560a41ee6e18 <col:12> col:12 'const Router::Port &'
| `-CXXMethodDecl 0x560a41ee6e88 <col:12> col:12 implicit used operator= 'Router::Port &(Router::Port &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x560a41ee6f98 <col:12> col:12 used 'Router::Port &&'
|   `-CompoundStmt 0x560a41ee72b8 <col:12>
|     |-BinaryOperator 0x560a41ee7158 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x560a41ee7110 <col:12> 'int' lvalue ->idx 0x560a41ea6cc0
|     | | `-CXXThisExpr 0x560a41ee7100 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x560a41ee7140 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x560a41ee70d0 <col:12> 'int' xvalue .idx 0x560a41ea6cc0
|     |     `-CXXStaticCastExpr 0x560a41ee70a0 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x560a41ee7070 <col:12> 'Router::Port' lvalue ParmVar 0x560a41ee6f98 '' 'Router::Port &&'
|     |-BinaryOperator 0x560a41ee7260 <col:12> 'int' lvalue '='
|     | |-MemberExpr 0x560a41ee7218 <col:12> 'int' lvalue ->port 0x560a41ea6d28
|     | | `-CXXThisExpr 0x560a41ee7208 <col:12> 'Router::Port *' this
|     | `-ImplicitCastExpr 0x560a41ee7248 <col:12> 'int' <LValueToRValue>
|     |   `-MemberExpr 0x560a41ee71d8 <col:12> 'int' xvalue .port 0x560a41ea6d28
|     |     `-CXXStaticCastExpr 0x560a41ee71a8 <col:12> 'Router::Port' xvalue static_cast<struct Router::Port &&> <NoOp>
|     |       `-DeclRefExpr 0x560a41ee7178 <col:12> 'Router::Port' lvalue ParmVar 0x560a41ee6f98 '' 'Router::Port &&'
|     `-ReturnStmt 0x560a41ee72a8 <col:12>
|       `-UnaryOperator 0x560a41ee7290 <col:12> 'Router::Port' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x560a41ee7280 <col:12> 'Router::Port *' this
|-CXXRecordDecl 0x560a41ea7630 <line:169:5, line:194:5> line:169:12 referenced struct Connection definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x560a41ea7748 <col:5, col:12> col:12 implicit referenced struct Connection
| |-FieldDecl 0x560a41ea7938 <line:170:9, col:17> col:14 referenced p 'Router::Port [2]'
| |-CXXConstructorDecl 0x560a41ea79f0 <line:172:9, line:173:9> line:172:9 Connection 'void ()'
| | |-CXXCtorInitializer Field 0x560a41ea7938 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x560a41ee6a18 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x560a41ee6b50 <col:22, line:173:9>
| |-CXXConstructorDecl 0x560a41ea7d28 <line:174:9, line:177:9> line:174:9 Connection 'void (int, int, int, int)'
| | |-ParmVarDecl 0x560a41ea7ab0 <col:20, col:24> col:24 used from_idx 'int'
| | |-ParmVarDecl 0x560a41ea7b30 <col:34, col:38> col:38 used from_port 'int'
| | |-ParmVarDecl 0x560a41ea7bb0 <col:49, col:53> col:53 used to_idx 'int'
| | |-ParmVarDecl 0x560a41ea7c30 <col:61, col:65> col:65 used to_port 'int'
| | |-CXXCtorInitializer Field 0x560a41ea7938 'p' 'Router::Port [2]'
| | | `-CXXConstructExpr 0x560a41ee6b60 <col:9> 'Router::Port [2]' 'void ()'
| | `-CompoundStmt 0x560a41ee7598 <col:74, line:177:9>
| |   |-ExprWithCleanups 0x560a41ee7388 <line:175:13, col:40> 'Router::Port' lvalue
| |   | `-CXXOperatorCallExpr 0x560a41ee7350 <col:13, col:40> 'Router::Port' lvalue
| |   |   |-ImplicitCastExpr 0x560a41ee7338 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |   |   | `-DeclRefExpr 0x560a41ee7020 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x560a41ee6e88 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |   |   |-ArraySubscriptExpr 0x560a41ee6c30 <col:13, col:16> 'Router::Port' lvalue
| |   |   | |-ImplicitCastExpr 0x560a41ee6c18 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |   |   | | `-MemberExpr 0x560a41ee6bc8 <col:13> 'Router::Port [2]' lvalue ->p 0x560a41ea7938
| |   |   | |   `-CXXThisExpr 0x560a41ee6bb8 <col:13> 'Router::Connection *' implicit this
| |   |   | `-IntegerLiteral 0x560a41ee6bf8 <col:15> 'int' 0
| |   |   `-MaterializeTemporaryExpr 0x560a41ee7008 <col:20, col:40> 'Router::Port' xvalue
| |   |     `-CXXTemporaryObjectExpr 0x560a41ee6cd0 <col:20, col:40> 'Router::Port' 'void (int, int)'
| |   |       |-ImplicitCastExpr 0x560a41ee6ca0 <col:25> 'int' <LValueToRValue>
| |   |       | `-DeclRefExpr 0x560a41ee6c60 <col:25> 'int' lvalue ParmVar 0x560a41ea7bb0 'to_idx' 'int'
| |   |       `-ImplicitCastExpr 0x560a41ee6cb8 <col:33> 'int' <LValueToRValue>
| |   |         `-DeclRefExpr 0x560a41ee6c80 <col:33> 'int' lvalue ParmVar 0x560a41ea7c30 'to_port' 'int'
| |   `-ExprWithCleanups 0x560a41ee7580 <line:176:13, col:44> 'Router::Port' lvalue
| |     `-CXXOperatorCallExpr 0x560a41ee7548 <col:13, col:44> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x560a41ee7530 <col:18> 'Router::Port &(*)(Router::Port &&) noexcept' <FunctionToPointerDecay>
| |       | `-DeclRefExpr 0x560a41ee7510 <col:18> 'Router::Port &(Router::Port &&) noexcept' lvalue CXXMethod 0x560a41ee6e88 'operator=' 'Router::Port &(Router::Port &&) noexcept'
| |       |-ArraySubscriptExpr 0x560a41ee7418 <col:13, col:16> 'Router::Port' lvalue
| |       | |-ImplicitCastExpr 0x560a41ee7400 <col:13> 'Router::Port *' <ArrayToPointerDecay>
| |       | | `-MemberExpr 0x560a41ee73b0 <col:13> 'Router::Port [2]' lvalue ->p 0x560a41ea7938
| |       | |   `-CXXThisExpr 0x560a41ee73a0 <col:13> 'Router::Connection *' implicit this
| |       | `-IntegerLiteral 0x560a41ee73e0 <col:15> 'int' 1
| |       `-MaterializeTemporaryExpr 0x560a41ee74f8 <col:20, col:44> 'Router::Port' xvalue
| |         `-CXXTemporaryObjectExpr 0x560a41ee74b8 <col:20, col:44> 'Router::Port' 'void (int, int)'
| |           |-ImplicitCastExpr 0x560a41ee7488 <col:25> 'int' <LValueToRValue>
| |           | `-DeclRefExpr 0x560a41ee7448 <col:25> 'int' lvalue ParmVar 0x560a41ea7ab0 'from_idx' 'int'
| |           `-ImplicitCastExpr 0x560a41ee74a0 <col:35> 'int' <LValueToRValue>
| |             `-DeclRefExpr 0x560a41ee7468 <col:35> 'int' lvalue ParmVar 0x560a41ea7b30 'from_port' 'int'
| |-CXXMethodDecl 0x560a41ea7ef8 <line:179:9, line:182:9> line:179:21 operator[] 'const Router::Port &(int) const'
| | |-ParmVarDecl 0x560a41ea7e08 <col:32, col:36> col:36 used i 'int'
| | `-CompoundStmt 0x560a41ee7b58 <col:45, line:182:9>
| |   |-ParenExpr 0x560a41ee7a38 <line:180:13, col:169> 'void'
| |   | `-ConditionalOperator 0x560a41ee7a08 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x560a41ee76d8 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x560a41ee76a8 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x560a41ee7610 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x560a41ee75f8 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x560a41ee75b8 <col:34> 'int' lvalue ParmVar 0x560a41ea7e08 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x560a41ee75d8 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x560a41ee7688 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x560a41ee7670 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x560a41ee7630 <col:44> 'int' lvalue ParmVar 0x560a41ea7e08 'i' 'int'
| |   |   |     `-IntegerLiteral 0x560a41ee7650 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x560a41ee7738 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x560a41ee7718 <col:59> 'int' 0
| |   |   `-CallExpr 0x560a41ee7968 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x560a41ee7950 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x560a41ee7930 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a41881230 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x560a41ee79a8 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x560a41ee77a8 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x560a41ee79c0 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x560a41ee77d0 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x560a41ee79d8 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x560a41ee7808 <col:130> 'int' 180
| |   |     `-ImplicitCastExpr 0x560a41ee79f0 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x560a41ee7918 <col:135, col:149> 'const char [62]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x560a41ee7900 <col:149> 'const char [62]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x560a41ee78a8 <col:149> 'const char [62]' lvalue "const Router::Port &Router::Connection::operator[](int) const"
| |   `-ReturnStmt 0x560a41ee7b48 <line:181:13, col:23>
| |     `-ArraySubscriptExpr 0x560a41ee7b28 <col:20, col:23> 'const Router::Port' lvalue
| |       |-ImplicitCastExpr 0x560a41ee7af8 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x560a41ee7a68 <col:20> 'Router::Port const[2]' lvalue ->p 0x560a41ea7938
| |       |   `-CXXThisExpr 0x560a41ee7a58 <col:20> 'const Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x560a41ee7b10 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x560a41ee7a98 <col:22> 'int' lvalue ParmVar 0x560a41ea7e08 'i' 'int'
| |-CXXMethodDecl 0x560a41ea80a8 <line:183:9, line:186:9> line:183:15 operator[] 'Router::Port &(int)'
| | |-ParmVarDecl 0x560a41ea7fb8 <col:26, col:30> col:30 used i 'int'
| | `-CompoundStmt 0x560a41ee80d0 <col:33, line:186:9>
| |   |-ParenExpr 0x560a41ee7ff0 <line:184:13, col:169> 'void'
| |   | `-ConditionalOperator 0x560a41ee7fc0 <col:14, col:168> 'void'
| |   |   |-CXXStaticCastExpr 0x560a41ee7c98 <col:14, col:49> 'bool' static_cast<_Bool> <NoOp>
| |   |   | `-BinaryOperator 0x560a41ee7c68 <col:34, col:48> 'bool' '&&'
| |   |   |   |-BinaryOperator 0x560a41ee7bd0 <col:34, col:39> 'bool' '>='
| |   |   |   | |-ImplicitCastExpr 0x560a41ee7bb8 <col:34> 'int' <LValueToRValue>
| |   |   |   | | `-DeclRefExpr 0x560a41ee7b78 <col:34> 'int' lvalue ParmVar 0x560a41ea7fb8 'i' 'int'
| |   |   |   | `-IntegerLiteral 0x560a41ee7b98 <col:39> 'int' 0
| |   |   |   `-BinaryOperator 0x560a41ee7c48 <col:44, col:48> 'bool' '<'
| |   |   |     |-ImplicitCastExpr 0x560a41ee7c30 <col:44> 'int' <LValueToRValue>
| |   |   |     | `-DeclRefExpr 0x560a41ee7bf0 <col:44> 'int' lvalue ParmVar 0x560a41ea7fb8 'i' 'int'
| |   |   |     `-IntegerLiteral 0x560a41ee7c10 <col:48> 'int' 2
| |   |   |-CXXFunctionalCastExpr 0x560a41ee7cf8 <col:53, col:60> 'void' functional cast to void <ToVoid>
| |   |   | `-IntegerLiteral 0x560a41ee7cd8 <col:59> 'int' 0
| |   |   `-CallExpr 0x560a41ee7f20 <col:64, col:168> 'void'
| |   |     |-ImplicitCastExpr 0x560a41ee7f08 <col:64> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
| |   |     | `-DeclRefExpr 0x560a41ee7ee8 <col:64> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a41881230 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
| |   |     |-ImplicitCastExpr 0x560a41ee7f60 <col:79> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x560a41ee7d68 <col:79> 'const char [16]' lvalue "i >= 0 && i < 2"
| |   |     |-ImplicitCastExpr 0x560a41ee7f78 <col:98> 'const char *' <ArrayToPointerDecay>
| |   |     | `-StringLiteral 0x560a41ee7d90 <col:98> 'const char [29]' lvalue "../dummy_inc/click/router.hh"
| |   |     |-ImplicitCastExpr 0x560a41ee7f90 <col:130> 'unsigned int' <IntegralCast>
| |   |     | `-IntegerLiteral 0x560a41ee7dc8 <col:130> 'int' 184
| |   |     `-ImplicitCastExpr 0x560a41ee7fa8 <col:135, col:149> 'const char *' <ArrayToPointerDecay>
| |   |       `-UnaryOperator 0x560a41ee7ed0 <col:135, col:149> 'const char [50]' lvalue prefix '__extension__' cannot overflow
| |   |         `-PredefinedExpr 0x560a41ee7eb8 <col:149> 'const char [50]' lvalue __PRETTY_FUNCTION__
| |   |           `-StringLiteral 0x560a41ee7e68 <col:149> 'const char [50]' lvalue "Router::Port &Router::Connection::operator[](int)"
| |   `-ReturnStmt 0x560a41ee80c0 <line:185:13, col:23>
| |     `-ArraySubscriptExpr 0x560a41ee80a0 <col:20, col:23> 'Router::Port' lvalue
| |       |-ImplicitCastExpr 0x560a41ee8070 <col:20> 'Router::Port *' <ArrayToPointerDecay>
| |       | `-MemberExpr 0x560a41ee8020 <col:20> 'Router::Port [2]' lvalue ->p 0x560a41ea7938
| |       |   `-CXXThisExpr 0x560a41ee8010 <col:20> 'Router::Connection *' implicit this
| |       `-ImplicitCastExpr 0x560a41ee8088 <col:22> 'int' <LValueToRValue>
| |         `-DeclRefExpr 0x560a41ee8050 <col:22> 'int' lvalue ParmVar 0x560a41ea7fb8 'i' 'int'
| |-CXXMethodDecl 0x560a41ea8248 <line:188:9, line:190:9> line:188:14 operator== 'bool (const Router::Connection &) const'
| | |-ParmVarDecl 0x560a41ea8188 <col:25, col:43> col:43 used x 'const Router::Connection &'
| | `-CompoundStmt 0x560a41ee84a8 <col:52, line:190:9>
| |   `-ReturnStmt 0x560a41ee8498 <line:189:13, col:51>
| |     `-BinaryOperator 0x560a41ee8478 <col:20, col:51> 'bool' '&&'
| |       |-CXXOperatorCallExpr 0x560a41ee8290 <col:20, col:33> 'bool'
| |       | |-ImplicitCastExpr 0x560a41ee8278 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |       | | `-DeclRefExpr 0x560a41ee8230 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x560a41ea7198 'operator==' 'bool (const Router::Port &) const'
| |       | |-ArraySubscriptExpr 0x560a41ee8168 <col:20, col:23> 'const Router::Port' lvalue
| |       | | |-ImplicitCastExpr 0x560a41ee8150 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
| |       | | | `-MemberExpr 0x560a41ee8100 <col:20> 'Router::Port const[2]' lvalue ->p 0x560a41ea7938
| |       | | |   `-CXXThisExpr 0x560a41ee80f0 <col:20> 'const Router::Connection *' implicit this
| |       | | `-IntegerLiteral 0x560a41ee8130 <col:22> 'int' 0
| |       | `-ArraySubscriptExpr 0x560a41ee8210 <col:28, col:33> 'const Router::Port' lvalue
| |       |   |-ImplicitCastExpr 0x560a41ee81f8 <col:28, col:30> 'const Router::Port *' <ArrayToPointerDecay>
| |       |   | `-MemberExpr 0x560a41ee81a8 <col:28, col:30> 'Router::Port const[2]' lvalue .p 0x560a41ea7938
| |       |   |   `-DeclRefExpr 0x560a41ee8188 <col:28> 'const Router::Connection' lvalue ParmVar 0x560a41ea8188 'x' 'const Router::Connection &'
| |       |   `-IntegerLiteral 0x560a41ee81d8 <col:32> 'int' 0
| |       `-CXXOperatorCallExpr 0x560a41ee8440 <col:38, col:51> 'bool'
| |         |-ImplicitCastExpr 0x560a41ee8428 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
| |         | `-DeclRefExpr 0x560a41ee8408 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x560a41ea7198 'operator==' 'bool (const Router::Port &) const'
| |         |-ArraySubscriptExpr 0x560a41ee8340 <col:38, col:41> 'const Router::Port' lvalue
| |         | |-ImplicitCastExpr 0x560a41ee8328 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
| |         | | `-MemberExpr 0x560a41ee82d8 <col:38> 'Router::Port const[2]' lvalue ->p 0x560a41ea7938
| |         | |   `-CXXThisExpr 0x560a41ee82c8 <col:38> 'const Router::Connection *' implicit this
| |         | `-IntegerLiteral 0x560a41ee8308 <col:40> 'int' 1
| |         `-ArraySubscriptExpr 0x560a41ee83e8 <col:46, col:51> 'const Router::Port' lvalue
| |           |-ImplicitCastExpr 0x560a41ee83d0 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
| |           | `-MemberExpr 0x560a41ee8380 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x560a41ea7938
| |           |   `-DeclRefExpr 0x560a41ee8360 <col:46> 'const Router::Connection' lvalue ParmVar 0x560a41ea8188 'x' 'const Router::Connection &'
| |           `-IntegerLiteral 0x560a41ee83b0 <col:50> 'int' 1
| `-CXXMethodDecl 0x560a41ea8390 <line:191:9, line:193:9> line:191:14 operator< 'bool (const Router::Connection &) const'
|   |-ParmVarDecl 0x560a41ea8300 <col:24, col:42> col:42 used x 'const Router::Connection &'
|   `-CompoundStmt 0x560a41ee8a40 <col:51, line:193:9>
|     `-ReturnStmt 0x560a41ee8a30 <line:192:13, col:69>
|       `-BinaryOperator 0x560a41ee8a10 <col:20, col:69> 'bool' '||'
|         |-CXXOperatorCallExpr 0x560a41ee8638 <col:20, col:32> 'bool'
|         | |-ImplicitCastExpr 0x560a41ee8620 <col:25> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|         | | `-DeclRefExpr 0x560a41ee8600 <col:25> 'bool (const Router::Port &) const' lvalue CXXMethod 0x560a41ea7428 'operator<' 'bool (const Router::Port &) const'
|         | |-ArraySubscriptExpr 0x560a41ee8538 <col:20, col:23> 'const Router::Port' lvalue
|         | | |-ImplicitCastExpr 0x560a41ee8520 <col:20> 'const Router::Port *' <ArrayToPointerDecay>
|         | | | `-MemberExpr 0x560a41ee84d0 <col:20> 'Router::Port const[2]' lvalue ->p 0x560a41ea7938
|         | | |   `-CXXThisExpr 0x560a41ee84c0 <col:20> 'const Router::Connection *' implicit this
|         | | `-IntegerLiteral 0x560a41ee8500 <col:22> 'int' 0
|         | `-ArraySubscriptExpr 0x560a41ee85e0 <col:27, col:32> 'const Router::Port' lvalue
|         |   |-ImplicitCastExpr 0x560a41ee85c8 <col:27, col:29> 'const Router::Port *' <ArrayToPointerDecay>
|         |   | `-MemberExpr 0x560a41ee8578 <col:27, col:29> 'Router::Port const[2]' lvalue .p 0x560a41ea7938
|         |   |   `-DeclRefExpr 0x560a41ee8558 <col:27> 'const Router::Connection' lvalue ParmVar 0x560a41ea8300 'x' 'const Router::Connection &'
|         |   `-IntegerLiteral 0x560a41ee85a8 <col:31> 'int' 0
|         `-ParenExpr 0x560a41ee89f0 <col:37, col:69> 'bool'
|           `-BinaryOperator 0x560a41ee89d0 <col:38, col:68> 'bool' '&&'
|             |-CXXOperatorCallExpr 0x560a41ee87e8 <col:38, col:51> 'bool'
|             | |-ImplicitCastExpr 0x560a41ee87d0 <col:43> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|             | | `-DeclRefExpr 0x560a41ee87b0 <col:43> 'bool (const Router::Port &) const' lvalue CXXMethod 0x560a41ea7198 'operator==' 'bool (const Router::Port &) const'
|             | |-ArraySubscriptExpr 0x560a41ee86e8 <col:38, col:41> 'const Router::Port' lvalue
|             | | |-ImplicitCastExpr 0x560a41ee86d0 <col:38> 'const Router::Port *' <ArrayToPointerDecay>
|             | | | `-MemberExpr 0x560a41ee8680 <col:38> 'Router::Port const[2]' lvalue ->p 0x560a41ea7938
|             | | |   `-CXXThisExpr 0x560a41ee8670 <col:38> 'const Router::Connection *' implicit this
|             | | `-IntegerLiteral 0x560a41ee86b0 <col:40> 'int' 0
|             | `-ArraySubscriptExpr 0x560a41ee8790 <col:46, col:51> 'const Router::Port' lvalue
|             |   |-ImplicitCastExpr 0x560a41ee8778 <col:46, col:48> 'const Router::Port *' <ArrayToPointerDecay>
|             |   | `-MemberExpr 0x560a41ee8728 <col:46, col:48> 'Router::Port const[2]' lvalue .p 0x560a41ea7938
|             |   |   `-DeclRefExpr 0x560a41ee8708 <col:46> 'const Router::Connection' lvalue ParmVar 0x560a41ea8300 'x' 'const Router::Connection &'
|             |   `-IntegerLiteral 0x560a41ee8758 <col:50> 'int' 0
|             `-CXXOperatorCallExpr 0x560a41ee8998 <col:56, col:68> 'bool'
|               |-ImplicitCastExpr 0x560a41ee8980 <col:61> 'bool (*)(const Router::Port &) const' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x560a41ee8960 <col:61> 'bool (const Router::Port &) const' lvalue CXXMethod 0x560a41ea7428 'operator<' 'bool (const Router::Port &) const'
|               |-ArraySubscriptExpr 0x560a41ee8898 <col:56, col:59> 'const Router::Port' lvalue
|               | |-ImplicitCastExpr 0x560a41ee8880 <col:56> 'const Router::Port *' <ArrayToPointerDecay>
|               | | `-MemberExpr 0x560a41ee8830 <col:56> 'Router::Port const[2]' lvalue ->p 0x560a41ea7938
|               | |   `-CXXThisExpr 0x560a41ee8820 <col:56> 'const Router::Connection *' implicit this
|               | `-IntegerLiteral 0x560a41ee8860 <col:58> 'int' 1
|               `-ArraySubscriptExpr 0x560a41ee8940 <col:63, col:68> 'const Router::Port' lvalue
|                 |-ImplicitCastExpr 0x560a41ee8928 <col:63, col:65> 'const Router::Port *' <ArrayToPointerDecay>
|                 | `-MemberExpr 0x560a41ee88d8 <col:63, col:65> 'Router::Port const[2]' lvalue .p 0x560a41ea7938
|                 |   `-DeclRefExpr 0x560a41ee88b8 <col:63> 'const Router::Connection' lvalue ParmVar 0x560a41ea8300 'x' 'const Router::Connection &'
|                 `-IntegerLiteral 0x560a41ee8908 <col:67> 'int' 1
|-AccessSpecDecl 0x560a41ea8450 <line:216:3, col:10> col:3 private
|-CXXRecordDecl 0x560a41ea8478 <line:218:5, col:11> col:11 class RouterContextErrh
|-EnumDecl 0x560a41ea8530 <line:220:5, line:223:5> line:220:5
| |-EnumConstantDecl 0x560a41ea85f0 <line:221:9> col:9 ROUTER_NEW 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x560a41ea8640 <col:21> col:21 referenced ROUTER_PRECONFIGURE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x560a41ea8690 <col:42> col:42 ROUTER_PREINITIALIZE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| |-EnumConstantDecl 0x560a41ea86e0 <line:222:9> col:9 referenced ROUTER_LIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
| `-EnumConstantDecl 0x560a41ea8730 <col:22> col:22 ROUTER_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:220:5)'
|-EnumDecl 0x560a41ea8780 <line:224:5, line:227:5> line:224:5
| |-EnumConstantDecl 0x560a41ea8898 <line:225:9, col:25> col:9 referenced RUNNING_DEAD 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x560a41ea8878 <col:24, col:25> 'int' Int: -2
| |   `-UnaryOperator 0x560a41ea8860 <col:24, col:25> 'int' prefix '-'
| |     `-IntegerLiteral 0x560a41ea8840 <col:25> 'int' 2
| |-EnumConstantDecl 0x560a41ea8940 <col:28, col:48> col:28 RUNNING_INACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x560a41ea8920 <col:47, col:48> 'int' Int: -1
| |   `-UnaryOperator 0x560a41ea8908 <col:47, col:48> 'int' prefix '-'
| |     `-IntegerLiteral 0x560a41ea88e8 <col:48> 'int' 1
| |-EnumConstantDecl 0x560a41ea89d0 <col:51, col:71> col:51 RUNNING_PREPARING 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x560a41ea89b0 <col:71> 'int' Int: 0
| |   `-IntegerLiteral 0x560a41ea8990 <col:71> 'int' 0
| |-EnumConstantDecl 0x560a41ea8a60 <line:226:9, col:30> col:9 referenced RUNNING_BACKGROUND 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
| | `-ConstantExpr 0x560a41ea8a40 <col:30> 'int' Int: 1
| |   `-IntegerLiteral 0x560a41ea8a20 <col:30> 'int' 1
| `-EnumConstantDecl 0x560a41ea8af0 <col:33, col:50> col:33 referenced RUNNING_ACTIVE 'Router::(anonymous enum at ../dummy_inc/click/router.hh:224:5)'
|   `-ConstantExpr 0x560a41ea8ad0 <col:50> 'int' Int: 2
|     `-IntegerLiteral 0x560a41ea8ab0 <col:50> 'int' 2
|-FieldDecl 0x560a41ea8b50 <line:229:5, col:13> col:13 referenced _master 'Master *'
|-FieldDecl 0x560a41ea8bb0 <line:231:5, col:21> col:21 referenced _runcount 'atomic_uint32_t'
|-FieldDecl 0x560a41ea8c18 <line:233:5, col:18> col:18 referenced _state 'volatile int'
|-FieldDecl 0x560a41ea8cb8 <line:234:5, col:30> col:10 _have_connections 'bool'
| `-ConstantExpr 0x560a41ea8c98 <col:30> 'int' Int: 1
|   `-IntegerLiteral 0x560a41ea8c68 <col:30> 'int' 1
|-FieldDecl 0x560a41ea8d58 <line:235:5, col:33> col:18 _conn_sorted 'bool' mutable
| `-ConstantExpr 0x560a41ea8d38 <col:33> 'int' Int: 1
|   `-IntegerLiteral 0x560a41ea8d08 <col:33> 'int' 1
|-FieldDecl 0x560a41ea8df8 <line:236:5, col:32> col:10 _have_configuration 'bool'
| `-ConstantExpr 0x560a41ea8dd8 <col:32> 'int' Int: 1
|   `-IntegerLiteral 0x560a41ea8da8 <col:32> 'int' 1
|-FieldDecl 0x560a41ea8e60 <line:237:5, col:18> col:18 referenced _running 'volatile int'
|-FieldDecl 0x560a41ea8ec0 <line:239:5, col:21> col:21 referenced _refcount 'atomic_uint32_t'
|-FieldDecl 0x560a41eb5260 <line:241:5, col:23> col:23 referenced _elements 'Vector<Element *>':'Vector<Element *>'
|-FieldDecl 0x560a41eb5360 <line:242:5, col:20> col:20 _element_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x560a41eb5460 <line:243:5, col:20> col:20 _element_configurations 'Vector<String>':'Vector<String>'
|-FieldDecl 0x560a41ebdd70 <line:244:5, col:22> col:22 _element_landmarkids 'Vector<uint32_t>':'Vector<unsigned int>'
|-FieldDecl 0x560a41ebde80 <line:245:5, col:25> col:25 referenced _element_home_thread_ids 'Vector<int>':'Vector<int>' mutable
|-CXXRecordDecl 0x560a41ebded0 <line:247:5, line:250:5> line:247:12 referenced struct element_landmark_t definition
| |-DefinitionData aggregate standard_layout has_mutable_fields
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x560a41ebdfe8 <col:5, col:12> col:12 implicit struct element_landmark_t
| |-FieldDecl 0x560a41ebe088 <line:248:9, col:18> col:18 first_landmarkid 'uint32_t':'unsigned int'
| |-FieldDecl 0x560a41ebe0e8 <line:249:9, col:16> col:16 filename 'String'
| |-CXXConstructorDecl 0x560a41ebe180 <line:247:12> col:12 implicit element_landmark_t 'void (const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x560a41ebe180
| | `-ParmVarDecl 0x560a41ebe298 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXConstructorDecl 0x560a41ebe338 <col:12> col:12 implicit element_landmark_t 'void (Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x560a41ebe338
| | `-ParmVarDecl 0x560a41ebe448 <col:12> col:12 'Router::element_landmark_t &&'
| |-CXXMethodDecl 0x560a41ebe4e8 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(const Router::element_landmark_t &)' inline default noexcept-unevaluated 0x560a41ebe4e8
| | `-ParmVarDecl 0x560a41ebe5f8 <col:12> col:12 'const Router::element_landmark_t &'
| |-CXXMethodDecl 0x560a41ebe668 <col:12> col:12 implicit operator= 'Router::element_landmark_t &(Router::element_landmark_t &&)' inline default noexcept-unevaluated 0x560a41ebe668
| | `-ParmVarDecl 0x560a41ebe778 <col:12> col:12 'Router::element_landmark_t &&'
| `-CXXDestructorDecl 0x560a41ebe800 <col:12> col:12 implicit ~element_landmark_t 'void ()' inline default noexcept-unevaluated 0x560a41ebe800
|-FieldDecl 0x560a41ecc640 <line:251:5, col:32> col:32 _element_landmarks 'Vector<Router::element_landmark_t>':'Vector<Router::element_landmark_t>'
|-FieldDecl 0x560a41ecc6a0 <line:252:5, col:14> col:14 _last_landmarkid 'uint32_t':'unsigned int'
|-FieldDecl 0x560a41ecc7b0 <line:254:5, col:25> col:25 _element_name_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x560a41eccb08 <line:255:5, col:40> col:17 referenced _element_gport_offset 'Vector<int> [2]'
|-FieldDecl 0x560a41eccc10 <line:256:5, col:17> col:17 _element_configure_order 'Vector<int>':'Vector<int>'
|-FieldDecl 0x560a41ed4f20 <line:258:5, col:32> col:32 _conn 'Vector<Router::Connection>':'Vector<Router::Connection>' mutable
|-FieldDecl 0x560a41ed5030 <line:259:5, col:25> col:25 _conn_output_sorter 'Vector<int>':'Vector<int>' mutable
|-FieldDecl 0x560a41ed5130 <line:261:5, col:20> col:20 _requirements 'Vector<String>':'Vector<String>'
|-FieldDecl 0x560a41ed5240 <line:263:5, col:17> col:17 _ehandler_first_by_element 'Vector<int>':'Vector<int>'
|-FieldDecl 0x560a41ed5350 <line:264:5, col:17> col:17 _ehandler_to_handler 'Vector<int>':'Vector<int>'
|-FieldDecl 0x560a41ed5460 <line:265:5, col:17> col:17 _ehandler_next 'Vector<int>':'Vector<int>'
|-FieldDecl 0x560a41ed5570 <line:267:5, col:17> col:17 _handler_first_by_name 'Vector<int>':'Vector<int>'
|-EnumDecl 0x560a41ed55c0 <line:269:5, col:33> col:5
| `-EnumConstantDecl 0x560a41ed56c0 <col:12, col:29> col:12 HANDLER_BUFSIZ 'Router::(anonymous enum at ../dummy_inc/click/router.hh:269:5)'
|   `-ImplicitCastExpr 0x560a41ed5710 <col:29> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a41ed56a0 <col:29> 'int' Int: 256
|       `-IntegerLiteral 0x560a41ed5680 <col:29> 'int' 256
|-FieldDecl 0x560a41ed5770 <line:270:5, col:15> col:15 _handler_bufs 'Handler **'
|-FieldDecl 0x560a41ed57d8 <line:271:5, col:9> col:9 _nhandlers_bufs 'int'
|-FieldDecl 0x560a41ed5840 <line:272:5, col:9> col:9 _free_handler 'int'
|-FieldDecl 0x560a41ed5940 <line:274:5, col:20> col:20 _attachment_names 'Vector<String>':'Vector<String>'
|-FieldDecl 0x560a41edc8b0 <line:275:5, col:19> col:19 _attachments 'Vector<void *>':'Vector<void *>'
|-FieldDecl 0x560a41edc910 <line:277:5, col:14> col:14 referenced _root_element 'Element *'
|-FieldDecl 0x560a41edc970 <line:278:5, col:12> col:12 _configuration 'String'
|-CXXRecordDecl 0x560a41edc9c0 <line:280:5, line:290:5> line:280:12 referenced struct notifier_signals_t definition
| |-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveConstructor exists simple non_trivial needs_overload_resolution
| | |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| | |-MoveAssignment exists simple non_trivial needs_overload_resolution
| | `-Destructor simple non_trivial needs_overload_resolution
| |-CXXRecordDecl 0x560a41edcad8 <col:5, col:12> col:12 implicit referenced struct notifier_signals_t
| |-EnumDecl 0x560a41edcb68 <line:281:9, col:32> col:9
| | `-EnumConstantDecl 0x560a41edcc70 <col:16, col:27> col:16 referenced capacity 'Router::notifier_signals_t::(anonymous enum at ../dummy_inc/click/router.hh:281:9)'
| |   `-ImplicitCastExpr 0x560a41edccc0 <col:27> 'unsigned int' <IntegralCast>
| |     `-ConstantExpr 0x560a41edcc50 <col:27> 'int' Int: 4096
| |       `-IntegerLiteral 0x560a41edcc30 <col:27> 'int' 4096
| |-FieldDecl 0x560a41edcce8 <line:282:9, col:16> col:16 name 'String'
| |-FieldDecl 0x560a41edcd50 <line:283:9, col:13> col:13 nsig 'int'
| |-FieldDecl 0x560a41ee1498 <line:284:9, col:42> col:25 referenced sig 'atomic_uint32_t [128]'
| |-FieldDecl 0x560a41ee1528 <line:285:9, col:29> col:29 next 'Router::notifier_signals_t *'
| |-CXXConstructorDecl 0x560a41ee16e8 <line:286:9, line:289:9> line:286:9 notifier_signals_t 'void (const String &, Router::notifier_signals_t *)'
| | |-ParmVarDecl 0x560a41ee1588 <col:28, col:42> col:42 used n 'const String &'
| | |-ParmVarDecl 0x560a41ee1600 <col:45, col:65> col:65 used nx 'Router::notifier_signals_t *'
| | |-CXXCtorInitializer Field 0x560a41edcce8 'name' 'String'
| | | `-CXXConstructExpr 0x560a41ee8a98 <line:287:15, col:21> 'String' 'void (const String &)'
| | |   `-DeclRefExpr 0x560a41ee8a58 <col:20> 'const String' lvalue ParmVar 0x560a41ee1588 'n' 'const String &'
| | |-CXXCtorInitializer Field 0x560a41edcd50 'nsig' 'int'
| | | `-IntegerLiteral 0x560a41ee8af0 <col:29> 'int' 0
| | |-CXXCtorInitializer Field 0x560a41ee1498 'sig' 'atomic_uint32_t [128]'
| | | `-CXXConstructExpr 0x560a41ee8bd8 <line:286:9> 'atomic_uint32_t [128]' 'void () noexcept'
| | |-CXXCtorInitializer Field 0x560a41ee1528 'next' 'Router::notifier_signals_t *'
| | | `-ImplicitCastExpr 0x560a41ee8b98 <line:287:38> 'Router::notifier_signals_t *' <LValueToRValue>
| | |   `-DeclRefExpr 0x560a41ee8b58 <col:38> 'Router::notifier_signals_t *' lvalue ParmVar 0x560a41ee1600 'nx' 'Router::notifier_signals_t *'
| | `-CompoundStmt 0x560a41ee8e68 <col:42, line:289:9>
| |   `-CallExpr 0x560a41ee8e18 <line:288:13, col:43> 'void *'
| |     |-ImplicitCastExpr 0x560a41ee8e00 <col:13> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
| |     | `-DeclRefExpr 0x560a41ee8de0 <col:13> 'void *(void *, int, size_t) throw()' lvalue Function 0x560a41a71cc8 'memset' 'void *(void *, int, size_t) throw()'
| |     |-ImplicitCastExpr 0x560a41ee8e50 <col:20, col:26> 'void *' <BitCast>
| |     | `-UnaryOperator 0x560a41ee8d28 <col:20, col:26> 'atomic_uint32_t *' prefix '&' cannot overflow
| |     |   `-ArraySubscriptExpr 0x560a41ee8d08 <col:21, col:26> 'atomic_uint32_t' lvalue
| |     |     |-ImplicitCastExpr 0x560a41ee8cf0 <col:21> 'atomic_uint32_t *' <ArrayToPointerDecay>
| |     |     | `-MemberExpr 0x560a41ee8ca0 <col:21> 'atomic_uint32_t [128]' lvalue ->sig 0x560a41ee1498
| |     |     |   `-CXXThisExpr 0x560a41ee8c90 <col:21> 'Router::notifier_signals_t *' implicit this
| |     |     `-IntegerLiteral 0x560a41ee8cd0 <col:25> 'int' 0
| |     |-IntegerLiteral 0x560a41ee8d40 <col:29> 'int' 0
| |     `-UnaryExprOrTypeTraitExpr 0x560a41ee8dc0 <col:32, col:42> 'unsigned long' sizeof
| |       `-ParenExpr 0x560a41ee8da0 <col:38, col:42> 'atomic_uint32_t [128]' lvalue
| |         `-MemberExpr 0x560a41ee8d70 <col:39> 'atomic_uint32_t [128]' lvalue ->sig 0x560a41ee1498 non_odr_use_unevaluated
| |           `-CXXThisExpr 0x560a41ee8d60 <col:39> 'Router::notifier_signals_t *' implicit this
| |-CXXConstructorDecl 0x560a41ee17c8 <line:280:12> col:12 implicit notifier_signals_t 'void (const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x560a41ee17c8
| | `-ParmVarDecl 0x560a41ee18d8 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXConstructorDecl 0x560a41ee1978 <col:12> col:12 implicit notifier_signals_t 'void (Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x560a41ee1978
| | `-ParmVarDecl 0x560a41ee1a88 <col:12> col:12 'Router::notifier_signals_t &&'
| |-CXXMethodDecl 0x560a41ee1b28 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(const Router::notifier_signals_t &)' inline default noexcept-unevaluated 0x560a41ee1b28
| | `-ParmVarDecl 0x560a41ee1c38 <col:12> col:12 'const Router::notifier_signals_t &'
| |-CXXMethodDecl 0x560a41ee1ca8 <col:12> col:12 implicit operator= 'Router::notifier_signals_t &(Router::notifier_signals_t &&)' inline default noexcept-unevaluated 0x560a41ee1ca8
| | `-ParmVarDecl 0x560a41ee1db8 <col:12> col:12 'Router::notifier_signals_t &&'
| `-CXXDestructorDecl 0x560a41ee1e40 <col:12> col:12 implicit ~notifier_signals_t 'void ()' inline default noexcept-unevaluated 0x560a41ee1e40
|-FieldDecl 0x560a41ee1f30 <line:291:5, col:25> col:25 _notifier_signals 'Router::notifier_signals_t *'
|-FieldDecl 0x560a41ee1f90 <line:292:5, col:27> col:27 referenced _arena_factory 'HashMap_ArenaFactory *'
|-FieldDecl 0x560a41ee1ff0 <line:293:5, col:13> col:13 referenced _hotswap_router 'Router *'
|-FieldDecl 0x560a41ee2050 <line:294:5, col:18> col:18 referenced _thread_sched 'ThreadSched *'
|-FieldDecl 0x560a41ee20b0 <line:295:5, col:23> col:23 referenced _name_info 'NameInfo *' mutable
|-FieldDecl 0x560a41ee21c0 <line:296:5, col:17> col:17 _flow_code_override_eindex 'Vector<int>':'Vector<int>'
|-FieldDecl 0x560a41ee22c0 <line:297:5, col:20> col:20 referenced _flow_code_override 'Vector<String>':'Vector<String>'
|-FieldDecl 0x560a41ee2320 <line:299:5, col:13> col:13 _next_router 'Router *'
|-CXXConstructorDecl 0x560a41ee2468 <line:305:5, col:25> col:5 Router 'void (const Router &)'
| `-ParmVarDecl 0x560a41ee23a8 <col:12, col:24> col:25 'const Router &'
|-CXXMethodDecl 0x560a41ee2618 <line:306:5, col:36> col:13 operator= 'Router &(const Router &)'
| `-ParmVarDecl 0x560a41ee2528 <col:23, col:35> col:36 'const Router &'
|-CXXMethodDecl 0x560a41ee2760 <line:308:5, col:49> col:17 remove_connection 'Router::Connection *(Router::Connection *)'
| `-ParmVarDecl 0x560a41ee26d0 <col:35, col:47> col:47 cp 'Router::Connection *'
|-CXXMethodDecl 0x560a41ee2b08 <line:309:5, line:310:62> line:309:10 hookup_error 'void (const Router::Port &, bool, const char *, ErrorHandler *, bool)'
| |-ParmVarDecl 0x560a41ee2818 <col:23, col:35> col:35 p 'const Router::Port &'
| |-ParmVarDecl 0x560a41ee2890 <col:38, col:43> col:43 isoutput 'bool'
| |-ParmVarDecl 0x560a41ee2910 <col:53, col:65> col:65 message 'const char *'
| |-ParmVarDecl 0x560a41ee2988 <line:310:23, col:37> col:37 errh 'ErrorHandler *'
| `-ParmVarDecl 0x560a41ee2a00 <col:43, col:57> col:48 active 'bool' cinit
|   `-CXXBoolLiteralExpr 0x560a41ee5b40 <col:57> 'bool' false
|-CXXMethodDecl 0x560a41ee2c78 <line:311:5, col:44> col:9 check_hookup_elements 'int (ErrorHandler *)'
| `-ParmVarDecl 0x560a41ee2be0 <col:31, col:43> col:44 'ErrorHandler *'
|-CXXMethodDecl 0x560a41ee2dc8 <line:312:5, col:41> col:9 check_hookup_range 'int (ErrorHandler *)'
| `-ParmVarDecl 0x560a41ee2d30 <col:28, col:40> col:41 'ErrorHandler *'
|-CXXMethodDecl 0x560a41ee2f18 <line:313:5, col:48> col:9 check_hookup_completeness 'int (ErrorHandler *)'
| `-ParmVarDecl 0x560a41ee2e80 <col:35, col:47> col:48 'ErrorHandler *'
|-CXXMethodDecl 0x560a41ee3070 <line:315:5, col:48> col:17 used hard_flow_code_override 'const char *(int) const'
| `-ParmVarDecl 0x560a41ee2fd8 <col:41, col:45> col:45 e 'int'
|-CXXMethodDecl 0x560a41ee3390 <line:316:5, col:74> col:9 processing_error 'int (const Router::Connection &, bool, int, ErrorHandler *)'
| |-ParmVarDecl 0x560a41ee3128 <col:26, col:44> col:44 conn 'const Router::Connection &'
| |-ParmVarDecl 0x560a41ee31a0 <col:50> col:54 'bool'
| |-ParmVarDecl 0x560a41ee3220 <col:56> col:59 'int'
| `-ParmVarDecl 0x560a41ee3298 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x560a41ee34f8 <line:317:5, col:42> col:9 check_push_and_pull 'int (ErrorHandler *)'
| `-ParmVarDecl 0x560a41ee3460 <col:29, col:41> col:42 'ErrorHandler *'
|-CXXMethodDecl 0x560a41ee35c0 <line:319:5, col:26> col:10 set_connections 'void ()'
|-CXXMethodDecl 0x560a41ee3680 <line:320:5, col:29> col:10 sort_connections 'void () const'
|-CXXMethodDecl 0x560a41ee3880 <line:321:5, col:64> col:9 connindex_lower_bound 'int (bool, const Router::Port &) const'
| |-ParmVarDecl 0x560a41ee3730 <col:31, col:36> col:36 isoutput 'bool'
| `-ParmVarDecl 0x560a41ee37a8 <col:46, col:58> col:58 port 'const Router::Port &'
|-CXXMethodDecl 0x560a41ee3950 <line:323:5, col:22> col:10 make_gports 'void ()'
|-CXXMethodDecl 0x560a41ee3a98 <line:324:5, line:326:5> line:324:16 ngports 'int (bool) const' inline
| |-ParmVarDecl 0x560a41ee3a00 <col:24, col:29> col:29 used isout 'bool'
| `-CompoundStmt 0x560a41ee90a0 <col:42, line:326:5>
|   `-ReturnStmt 0x560a41ee9090 <line:325:9, col:50>
|     `-ImplicitCastExpr 0x560a41ee9078 <col:16, col:50> 'int':'int' <LValueToRValue>
|       `-CXXMemberCallExpr 0x560a41ee9058 <col:16, col:50> 'const int':'const int' lvalue
|         `-MemberExpr 0x560a41ee9028 <col:16, col:45> '<bound member function type>' .back 0x560a41d5ae68
|           `-ArraySubscriptExpr 0x560a41ee8fa8 <col:16, col:43> 'const Vector<int>':'const Vector<int>' lvalue
|             |-ImplicitCastExpr 0x560a41ee8f78 <col:16> 'const Vector<int> *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x560a41ee8e90 <col:16> 'Vector<int> const[2]' lvalue ->_element_gport_offset 0x560a41eccb08
|             |   `-CXXThisExpr 0x560a41ee8e80 <col:16> 'const Router *' implicit this
|             `-ImplicitCastExpr 0x560a41ee8f90 <col:38> 'bool' <LValueToRValue>
|               `-DeclRefExpr 0x560a41ee8ec0 <col:38> 'bool' lvalue ParmVar 0x560a41ee3a00 'isout' 'bool'
|-CXXMethodDecl 0x560a41ee3c68 <line:327:5, col:55> col:16 gport 'int (bool, const Router::Port &) const' inline
| |-ParmVarDecl 0x560a41ee3b50 <col:22, col:27> col:27 isoutput 'bool'
| `-ParmVarDecl 0x560a41ee3bc8 <col:37, col:49> col:49 port 'const Router::Port &'
|-CXXMethodDecl 0x560a41ee3dc0 <line:329:5, col:47> col:9 used hard_home_thread_id 'int (const Element *) const'
| `-ParmVarDecl 0x560a41ee3d28 <col:29, col:44> col:44 e 'const Element *'
|-CXXMethodDecl 0x560a41ee4068 <line:331:5, col:67> col:9 element_lerror 'int (ErrorHandler *, Element *, const char *, ...) const'
| |-ParmVarDecl 0x560a41ee3e78 <col:24, col:36> col:37 'ErrorHandler *'
| |-ParmVarDecl 0x560a41ee3ef0 <col:39, col:46> col:47 'Element *'
| `-ParmVarDecl 0x560a41ee3f70 <col:49, col:59> col:60 'const char *'
|-CXXMethodDecl 0x560a41ee4240 <line:334:5, col:40> col:10 initialize_handlers 'void (bool, bool)'
| |-ParmVarDecl 0x560a41ee4130 <col:30> col:34 'bool'
| `-ParmVarDecl 0x560a41ee41a8 <col:36> col:40 'bool'
|-CXXMethodDecl 0x560a41ee43c8 <line:335:5, col:35> col:21 xhandler 'Handler *(int) const' inline
| `-ParmVarDecl 0x560a41ee4308 <col:30> col:33 'int'
|-CXXMethodDecl 0x560a41ee4660 <line:336:5, col:60> col:9 find_ehandler 'int (int, const String &, bool) const'
| |-ParmVarDecl 0x560a41ee4488 <col:23> col:26 'int'
| |-ParmVarDecl 0x560a41ee4500 <col:28, col:40> col:41 'const String &'
| `-ParmVarDecl 0x560a41ee4578 <col:43, col:48> col:48 allow_star 'bool'
|-CXXMethodDecl 0x560a41ee4878 <line:337:5, col:70> col:27 fetch_handler 'Handler (const Element *, const String &)' static inline
| |-ParmVarDecl 0x560a41ee4728 <col:41, col:54> col:55 'const Element *'
| `-ParmVarDecl 0x560a41ee47a0 <col:57, col:69> col:70 'const String &'
|-CXXMethodDecl 0x560a41ee4a88 <line:338:5, col:52> col:10 store_local_handler 'void (int, Handler &)'
| |-ParmVarDecl 0x560a41ee4940 <col:30, col:34> col:34 eindex 'int'
| `-ParmVarDecl 0x560a41ee49b8 <col:42, col:51> col:51 h 'Handler &'
|-CXXMethodDecl 0x560a41ee4c08 <line:339:5, col:48> col:17 store_global_handler 'void (Handler &)' static
| `-ParmVarDecl 0x560a41ee4b48 <col:38, col:47> col:47 h 'Handler &'
|-CXXMethodDecl 0x560a41ee4e08 <line:340:5, col:72> col:24 store_handler 'void (const Element *, Handler &)' static inline
| |-ParmVarDecl 0x560a41ee4cc0 <col:38, col:53> col:53 element 'const Element *'
| `-ParmVarDecl 0x560a41ee4d38 <col:62, col:71> col:71 h 'Handler &'
|-CXXMethodDecl 0x560a41ee4fe0 <line:343:5, col:66> col:19 router_read_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x560a41ee4ec8 <col:39, col:48> col:48 e 'Element *'
| `-ParmVarDecl 0x560a41ee4f48 <col:51, col:57> col:57 user_data 'void *'
|-CXXMethodDecl 0x560a41ee52c0 <line:344:5, col:103> col:16 router_write_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x560a41ee50a0 <col:37, col:51> col:51 str 'const String &'
| |-ParmVarDecl 0x560a41ee5118 <col:56, col:65> col:65 e 'Element *'
| |-ParmVarDecl 0x560a41ee5198 <col:68, col:74> col:74 user_data 'void *'
| `-ParmVarDecl 0x560a41ee5210 <col:85, col:99> col:99 errh 'ErrorHandler *'
|-FriendDecl 0x560a41ee53a0 <line:347:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x560a41ee5400 <line:348:5, col:18> col:12 'class Task':'Task'
`-FriendDecl 0x560a41ee5680 <line:349:5, col:44> col:25
  `-CXXMethodDecl 0x560a41ee5580 parent 0x560a41df7e40 prev 0x560a41e067c8 <col:5, col:44> col:25 set_nports 'int (int, int)'
    |-ParmVarDecl 0x560a41ee5460 <col:36> col:39 'int'
    `-ParmVarDecl 0x560a41ee54e0 <col:41> col:44 'int'

Layout: <CGRecordLayout
  LLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  NonVirtualBaseLLVMType:%class.Router = type { %class.Master*, %class.atomic_uint32_t, i32, i8, i32, %class.atomic_uint32_t, %class.Vector, %class.Vector.0, %class.Vector.0, %class.Vector.2, %class.Vector.5, %class.Vector.6, i32, %class.Vector.5, [2 x %class.Vector.5], %class.Vector.5, %class.Vector.8, %class.Vector.5, %class.Vector.0, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Vector.5, %class.Handler**, i32, i32, %class.Vector.0, %class.Vector.12, %class.Element*, %class.String, %"struct.Router::notifier_signals_t"*, %class.HashMap_ArenaFactory*, %class.Router*, %class.ThreadSched*, %class.NameInfo*, %class.Vector.5, %class.Vector.0, %class.Router* }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:1 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
    <CGBitFieldInfo Offset:2 Size:1 IsSigned:0 StorageSize:8 StorageOffset:16>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41df7e40 prev 0x560a41df7be0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x560a41df7f38 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x560a41df7fc8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x560a41df8028 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x560a41df8118 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x560a41df8218 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x560a41df83e8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x560a41df8298 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x560a41df8310 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x560a41df8578 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x560a41df84b0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x560a41df8620 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x560a41df8758 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x560a41df8690 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x560a41df88f8 <line:40:5, col:37> col:18 used run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x560a41df8838 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x560a41df8a98 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x560a41df89d8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x560a41df8b40 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x560a41df8c40 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x560a41df8d20 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41df8c20 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x560a41df8c00 <col:26> 'int' 1
| `-EnumConstantDecl 0x560a41df8cd0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x560a41df8d38 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a41df8cb0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x560a41df8c90 <col:44> 'int' 2
|-CXXMethodDecl 0x560a41df8e80 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x560a41df8d68 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x560a41df8de8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x560a41df8fd8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x560a41df8f48 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x560a41df91e8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x560a41df9098 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x560a41df9110 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x560a41df9298 <col:20>
| `-OptimizeNoneAttr 0x560a41df92f0 <col:30>
|-CXXMethodDecl 0x560a41df93f8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x560a41df9330 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x560a41df94a0 <col:20>
| `-OptimizeNoneAttr 0x560a41df94f8 <col:30>
|-CXXMethodDecl 0x560a41df9548 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x560a41df9610 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x560a41df96f8 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x560a41df9780 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x560a41df9808 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x560a41df9890 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x560a41df9918 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x560a41df99a8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x560a41df9a68 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x560a41df9af0 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x560a41df9b78 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x560a41df9c00 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x560a41df9c88 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x560a41df9d10 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x560a41df9da0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x560a41df9e60 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x560a41df9ef0 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x560a41dfa040 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x560a41df9fa8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x560a41dfa1d0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x560a41dfa100 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x560a41dfa470 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x560a41dfa288 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x560a41dfa308 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x560a41dfa388 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x560a41dfa528 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x560a41dfa630 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x560a41dfa8c0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41dfa610 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x560a41dfa5f0 <col:33> 'int' 0
| |-EnumConstantDecl 0x560a41dfa6c0 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x560a41dfa8d8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41dfa6a0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x560a41dfa680 <col:32> 'int' 20
| |-EnumConstantDecl 0x560a41dfa750 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x560a41dfa8f0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41dfa730 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x560a41dfa710 <col:38> 'int' 90
| |-EnumConstantDecl 0x560a41dfa7e0 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x560a41dfa908 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41dfa7c0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x560a41dfa7a0 <col:35> 'int' 100
| `-EnumConstantDecl 0x560a41dfa870 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x560a41dfa920 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a41dfa850 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x560a41dfa830 <col:32> 'int' 2000
|-CXXMethodDecl 0x560a41dfa960 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x560a41dfac70 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x560a41dfaae0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x560a41dfab58 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x560a41dfad40 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x560a41dfaec0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x560a41dfadf0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x560a41dfb0c8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x560a41dfaf78 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x560a41dfaff0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x560a41dfb1c8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x560a41dfb268 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x560a41dfb330 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x560a41dfb3c0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x560a41dfb5f0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41dfb3a0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x560a41dfb380 <col:36> 'int' EnumConstant 0x560a41dfb330 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x560a41dfb410 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x560a41dfb460 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x560a41dfb4b0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x560a41dfb500 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x560a41dfb550 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x560a41dfb5a0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x560a41dfb6d8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x560a41dfb618 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x560a41dfb7a0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x560a41dfb860 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x560a41dfb920 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x560a41dfb9e0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x560a41dfbac8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x560a41dfbb90 <line:117:5, col:25> col:16 used eindex 'int () const' inline
|-CXXMethodDecl 0x560a41dfbd10 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x560a41dfbc40 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x560a41dfbe38 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x560a41dfc038 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x560a41dfbee8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x560a41dfbf68 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x560a41e08888 <col:54, line:127:5>
|   |-ParenExpr 0x560a41e08738 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x560a41e08708 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x560a41e083f0 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x560a41e083c8 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x560a41e083b0 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x560a41e08398 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x560a41e08368 <col:31> 'Router *' lvalue ->_router 0x560a41e06280
|   |   |         `-CXXThisExpr 0x560a41e08358 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x560a41e08450 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a41e08430 <col:48> 'int' 0
|   |   `-CallExpr 0x560a41e08668 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x560a41e08650 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a41e08630 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a41881230 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a41e086a8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41e084c0 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x560a41e086c0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41e084e0 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x560a41e086d8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a41e08518 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x560a41e086f0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a41e08618 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a41e08600 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a41e085b8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x560a41e087d0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x560a41e08768 <col:9> 'Router *' lvalue ->_router 0x560a41e06280
|   | | `-CXXThisExpr 0x560a41e08758 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x560a41e087b8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x560a41e08798 <col:19> 'Router *' lvalue ParmVar 0x560a41dfbee8 'r' 'Router *'
|   `-BinaryOperator 0x560a41e08868 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x560a41e08800 <col:9> 'int' lvalue ->_eindex 0x560a41e062e8
|     | `-CXXThisExpr 0x560a41e087f0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x560a41e08850 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x560a41e08830 <col:19> 'int' lvalue ParmVar 0x560a41dfbf68 'eindex' 'int'
|-CXXMethodDecl 0x560a41dfc1c0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x560a41dfc0f8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x560a41dfc290 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x560a41dfc358 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x560a41dfc3f8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x560a41dfc648 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x560a41dfc4c0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x560a41dfc540 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x560a41dfc6f8 <col:20>
| `-OptimizeNoneAttr 0x560a41dfc750 <col:30>
|-CXXMethodDecl 0x560a41dfc858 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x560a41dfc790 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x560a41dfc900 <col:20>
| `-OptimizeNoneAttr 0x560a41dfc958 <col:30>
|-CXXMethodDecl 0x560a41dfca28 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x560a41dfc998 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x560a41dfcad0 <col:20>
| `-OptimizeNoneAttr 0x560a41dfcb28 <col:30>
|-CXXMethodDecl 0x560a41dfccb8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x560a41dfcb60 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x560a41dfcbe0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x560a41dfce48 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x560a41dfcd80 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x560a41dfcf98 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x560a41dfcf08 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x560a41dfd0e8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x560a41dfd058 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x560a41dfd238 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x560a41dfd1a8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x560a41dfd4f8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x560a41dfd2f0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x560a41dfd370 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x560a41dfd418 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x560a41dfd5d0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x560a41dfd690 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x560a41dfd960 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x560a41dfd810 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x560a41dfd888 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x560a41dfda88 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x560a41dfdc60 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x560a41dfdb40 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x560a41dfdbc0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x560a41dfde48 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x560a41dfdd28 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x560a41dfdda8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x560a41dfe208 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x560a41dfdf50 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x560a41dfdfc8 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x560a41dfe048 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x560a41e07e68 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x560a41e07e48 <col:106> 'int' 0
| `-ParmVarDecl 0x560a41dfe0c0 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x560a41e07ea0 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x560a41e07e80 <col:126> 'int' 0
|-CXXMethodDecl 0x560a41dfe588 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x560a41dfe2d8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x560a41dfe350 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x560a41dfe3d0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x560a41dfe448 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x560a41e07ed8 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x560a41e07eb8 <col:114> 'int' 0
|-CXXMethodDecl 0x560a41dfe918 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x560a41dfe660 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x560a41dfe6d8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x560a41dfe758 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x560a41e07ef0 <col:96> 'int' 0
| `-ParmVarDecl 0x560a41dfe7d0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x560a41e07f30 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x560a41e07f10 <col:116> 'int' 0
|-CXXMethodDecl 0x560a41dfec98 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x560a41dfe9e8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x560a41dfea60 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x560a41dfeae0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x560a41e07f68 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x560a41e07f48 <col:109> 'int' 0
| `-ParmVarDecl 0x560a41dfeb58 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x560a41e07fa0 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x560a41e07f80 <col:129> 'int' 0
|-CXXMethodDecl 0x560a41dff018 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x560a41dfed68 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x560a41dfede0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x560a41dfee60 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x560a41dfeed8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x560a41e07fd8 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x560a41e07fb8 <col:117> 'int' 0
|-CXXMethodDecl 0x560a41dff3a8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x560a41dff0f0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a41dff168 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x560a41dff1e8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x560a41e07ff0 <col:99> 'int' 0
| `-ParmVarDecl 0x560a41dff260 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x560a41e08030 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x560a41e08010 <col:119> 'int' 0
|-CXXMethodDecl 0x560a41dff7c8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x560a41dff478 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x560a41dff4f8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x560a41dff570 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x560a41dff5f0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x560a41e08068 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x560a41e08048 <col:108> 'int' 0
| `-ParmVarDecl 0x560a41dff670 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x560a41e080a0 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x560a41e08080 <col:141> 'int' 0
|-CXXMethodDecl 0x560a41dffbe8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x560a41dff8a0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x560a41dff920 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x560a41dff998 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x560a41dffa18 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x560a41dffa98 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x560a41e080b8 <col:121> 'int' 0
|-CXXMethodDecl 0x560a41e00018 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x560a41dffcc8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x560a41dffd48 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x560a41dffdc0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x560a41dffe40 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x560a41e080d8 <col:98> 'int' 0
| `-ParmVarDecl 0x560a41dffec0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x560a41e080f8 <col:123> 'int' 0
|-CXXMethodDecl 0x560a41e002e0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x560a41e000f0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x560a41e00170 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x560a41e001f0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x560a41e08118 <col:80> 'int' 0
|-EnumDecl 0x560a41e00398 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x560a41e004a0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x560a41e00730 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41e00480 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x560a41e00460 <col:42> 'int' 1
| |-EnumConstantDecl 0x560a41e00530 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x560a41e00748 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41e00510 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x560a41e004f0 <col:40> 'int' 2
| |-EnumConstantDecl 0x560a41e005c0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x560a41e00760 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41e005a0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x560a41e00580 <col:44> 'int' 4
| |-EnumConstantDecl 0x560a41e00650 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x560a41e00778 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41e00630 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x560a41e00610 <col:36> 'int' 7
| `-EnumConstantDecl 0x560a41e006e0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x560a41e00790 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a41e006c0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x560a41e006a0 <col:34> 'int' 6
|-CXXMethodDecl 0x560a41e00a48 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x560a41e007b8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x560a41e00858 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x560a41e008d8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x560a41e00950 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x560a41e081d0 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x560a41e081b8 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x560a41e081a0 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x560a41e08180 <col:98, col:105> 'String' (CXXTemporary 0x560a41e08180)
|           `-CXXTemporaryObjectExpr 0x560a41e08148 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x560a41e00ce8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x560a41e00b18 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x560a41e00b90 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x560a41e00c08 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x560a41e08280 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x560a41e08268 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x560a41e08250 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x560a41e08230 <col:94, col:101> 'String' (CXXTemporary 0x560a41e08230)
| |         `-CXXTemporaryObjectExpr 0x560a41e081f8 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x560a41e08a70 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x560a41e089e8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x560a41e089b8 <col:9> '<bound member function type>' ->add_task_handlers 0x560a41e00a48
|     | `-CXXThisExpr 0x560a41e089a8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x560a41e08a28 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x560a41e08928 <col:27> 'Task *' lvalue ParmVar 0x560a41e00b18 'task' 'Task *'
|     |-ImplicitCastExpr 0x560a41e08a40 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x560a41e08948 <col:33> 'NotifierSignal *' lvalue ParmVar 0x560a41e00b90 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x560a41e08a58 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x560a41e08968 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x560a41e006e0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x560a41e08988 <col:62> 'const String' lvalue ParmVar 0x560a41e00c08 'prefix' 'const String &'
|-CXXMethodDecl 0x560a41e00ef8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x560a41e00db0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x560a41e00e28 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x560a41e08330 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x560a41e08318 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x560a41e08300 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x560a41e082e0 <col:70, col:77> 'String' (CXXTemporary 0x560a41e082e0)
| |         `-CXXTemporaryObjectExpr 0x560a41e082a8 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x560a41e08c48 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x560a41e08bc0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x560a41e08b90 <col:9> '<bound member function type>' ->add_task_handlers 0x560a41e00a48
|     | `-CXXThisExpr 0x560a41e08b80 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x560a41e08c00 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x560a41e08b00 <col:27> 'Task *' lvalue ParmVar 0x560a41e00db0 'task' 'Task *'
|     |-ImplicitCastExpr 0x560a41e08c18 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x560a41e08b20 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x560a41e08c30 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x560a41e08b40 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x560a41e006e0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x560a41e08b60 <col:57> 'const String' lvalue ParmVar 0x560a41e00e28 'prefix' 'const String &'
|-CXXMethodDecl 0x560a41e011d8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x560a41e00fc0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a41e01040 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x560a41e010b8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x560a41e01488 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x560a41e012a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a41e01328 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x560a41e013a8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x560a41e01778 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x560a41e01558 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a41e015d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x560a41e01650 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x560a41e01a28 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x560a41e01848 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a41e018c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x560a41e01948 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x560a41e01cd8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x560a41e01af8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a41e01b78 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x560a41e01bf8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x560a41e01f88 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x560a41e01da8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a41e01e28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x560a41e01ea0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x560a41e02238 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x560a41e02058 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a41e020d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x560a41e02158 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x560a41e024e8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x560a41e02308 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a41e02388 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x560a41e02408 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x560a41e02798 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x560a41e025b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a41e02638 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x560a41e026b8 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x560a41e02a48 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x560a41e02868 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a41e028e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x560a41e02968 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x560a41e02cb0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x560a41e02b18 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x560a41e02b98 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x560a41e02c10 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x560a41e02f58 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x560a41e02d80 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x560a41e02e00 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x560a41e02e78 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x560a41e03208 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x560a41e03028 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a41e030a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x560a41e03128 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x560a41e034b8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x560a41e032d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a41e03358 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x560a41e033d0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x560a41e03768 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x560a41e03588 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a41e03608 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x560a41e03680 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x560a41e03a18 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x560a41e03838 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a41e038b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x560a41e03930 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x560a41e03d48 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x560a41e03ae8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x560a41e03b68 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x560a41e03be0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x560a41e03c58 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x560a41e08348 <col:93> 'bool' false
|-CXXMethodDecl 0x560a41e03f30 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x560a41e03e18 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x560a41e03e98 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x560a41e04108 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x560a41e03ff0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x560a41e04070 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x560a41e043e8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x560a41e041c8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x560a41e04240 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x560a41e042c0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x560a41e04338 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x560a41e046d8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x560a41e044b8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x560a41e04530 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x560a41e045b0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x560a41e04628 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x560a41e04910 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x560a41e047b0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x560a41e04830 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x560a41e04af8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x560a41e049d8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x560a41e04a58 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x560a41e04ba8 prev 0x560a41dfc3f8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x560a41e04ca0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x560a41e04d30 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x560a41e04da8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x560a41e04e68 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x560a41e04f30 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x560a41e050a8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x560a41e04fe0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x560a41e05150 <col:24>
| | `-OptimizeNoneAttr 0x560a41e051a8 <col:34>
| |-CXXMethodDecl 0x560a41e051f0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x560a41e054a8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x560a41e052a0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x560a41e05318 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x560a41e05398 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x560a41e05560 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x560a41e05598 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x560a41e05600 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x560a41e05688 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x560a41e059a8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x560a41e05740 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x560a41e057b8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x560a41e05830 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x560a41e058b0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x560a41e05ac0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x560a41e0c3b8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x560a41e0c3b8
| | `-ParmVarDecl 0x560a41e0c4c8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x560a41e0c568 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x560a41e0c568
| | `-ParmVarDecl 0x560a41e0c678 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x560a41f6ee88 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x560a41e05b38 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x560a41e05bd8 <col:38> "" ""
|-CXXMethodDecl 0x560a41e05c68 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x560a41e05d08 <col:44> "" ""
|-AccessSpecDecl 0x560a41e05d78 <line:260:3, col:10> col:3 private
|-EnumDecl 0x560a41e05da0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x560a41e05ea0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x560a41e05ef0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a41e05e80 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x560a41e05e60 <col:27> 'int' 4
|-FieldDecl 0x560a41e05fb8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x560a41e06168 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x560a41e06220 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x560a41e06280 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x560a41e062e8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x560a41e06438 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x560a41e06378 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x560a41e065e8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x560a41e064f8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x560a41e067c8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x560a41e066a8 <col:20> col:23 'int'
| `-ParmVarDecl 0x560a41e06728 <col:25> col:28 'int'
|-CXXMethodDecl 0x560a41e06a70 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x560a41e06890 <col:23> col:26 'int'
| |-ParmVarDecl 0x560a41e06910 <col:28> col:31 'int'
| `-ParmVarDecl 0x560a41e06988 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x560a41e06b28 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x560a41e06bf0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x560a41e06c40 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x560a41e06c90 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x560a41e06e70 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x560a41e06d20 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x560a41e06d98 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x560a41e07118 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x560a41e06f38 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x560a41e06fb8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x560a41e07030 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x560a41e07338 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x560a41e071e8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x560a41e07268 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x560a41e07670 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x560a41e073f8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x560a41e07478 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x560a41e074f0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x560a41e07570 <col:57> col:60 'int'
|-CXXMethodDecl 0x560a41e07858 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x560a41e07740 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x560a41e077c0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x560a41e079a8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x560a41e07918 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x560a41e07d28 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x560a41e07a68 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x560a41e07ae8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x560a41e07b60 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x560a41e07be0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x560a41e07e08 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HashMap<class IPFlowID, int>
         0 |   struct HashMap<class IPFlowID, int>::Elt ** _buckets
         8 |   size_t _nbuckets
        16 |   int _default_value
        24 |   size_t _n
        32 |   size_t _capacity
        40 |   class HashMap_Arena * _arena
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class TCPDemux
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class HashMap<class IPFlowID, int> _flows
       112 |     struct HashMap<class IPFlowID, int>::Elt ** _buckets
       120 |     size_t _nbuckets
       128 |     int _default_value
       136 |     size_t _n
       144 |     size_t _capacity
       152 |     class HashMap_Arena * _arena
           | [sizeof=160, dsize=160, align=8,
           |  nvsize=160, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x560a41f68388 <../dummy_inc/click/hashmap.hh:25:1, line:116:1> line:26:7 class HashMap definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'IPFlowID'
|-TemplateArgument type 'int'
|-CXXRecordDecl 0x560a41f688e8 prev 0x560a41f68388 <col:1, col:7> col:7 implicit class HashMap
|-AccessSpecDecl 0x560a41f68978 <col:17, col:23> col:17 public
|-TypedefDecl 0x560a41f689d8 <line:28:5, col:15> col:15 key_type 'IPFlowID':'IPFlowID'
| `-SubstTemplateTypeParmType 0x560a41f689a0 'IPFlowID' sugar
|   |-TemplateTypeParmType 0x560a41c09c40 'K' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x560a41c09be8 'K'
|   `-RecordType 0x560a41f5bc60 'IPFlowID'
|     `-CXXRecord 0x560a41f5bbc8 'IPFlowID'
|-TypedefDecl 0x560a41f68a68 <line:29:5, col:15> col:15 mapped_type 'int':'int'
| `-SubstTemplateTypeParmType 0x560a41f68a30 'int' sugar
|   |-TemplateTypeParmType 0x560a41c09cc0 'V' dependent depth 0 index 1
|   | `-TemplateTypeParm 0x560a41c09c68 'V'
|   `-BuiltinType 0x560a417e0580 'int'
|-CXXRecordDecl 0x560a41f68ac0 <line:30:5, col:12> col:12 struct Pair
|-CXXConstructorDecl 0x560a41f68bb8 <line:32:5, col:13> col:5 used HashMap 'void ()'
|-CXXConstructorDecl 0x560a41f68e48 <line:33:5, col:59> col:14 HashMap 'void (const int &, HashMap_ArenaFactory *)'
| |-ParmVarDecl 0x560a41f68ca8 <col:22, col:30> col:31 'const int &'
| `-ParmVarDecl 0x560a41f68d10 <col:33, col:58> col:56 'HashMap_ArenaFactory *'
|-CXXConstructorDecl 0x560a41f69148 <line:34:5, col:34> col:5 HashMap 'void (const HashMap<IPFlowID, int> &)'
| `-ParmVarDecl 0x560a41f69038 <col:13, col:33> col:34 'const HashMap<IPFlowID, int> &'
|-CXXDestructorDecl 0x560a41f69230 <line:35:5, col:14> col:5 used ~HashMap 'void () noexcept'
|-CXXMethodDecl 0x560a41f693b0 <line:37:3, col:40> col:8 set_arena 'void (HashMap_ArenaFactory *)'
| `-ParmVarDecl 0x560a41f69320 <col:18, col:39> col:40 'HashMap_ArenaFactory *'
|-CXXMethodDecl 0x560a41f69468 <line:39:3, col:36> col:10 size 'size_t () const'
|-CXXMethodDecl 0x560a41f69518 <line:40:3, col:40> col:8 empty 'bool () const'
|-CXXMethodDecl 0x560a41f695c8 <line:41:3, col:47> col:10 nbuckets 'size_t () const'
|-CXXMethodDecl 0x560a41f697d8 <line:43:3, col:30> col:9 find_pair 'HashMap<IPFlowID, int>::Pair *(const IPFlowID &) const'
| `-ParmVarDecl 0x560a41f696e8 <col:19, col:27> col:28 'const IPFlowID &'
|-CXXMethodDecl 0x560a41f699b8 <line:44:3, col:58> col:41 findp 'int *(const IPFlowID &) const'
| |-ParmVarDecl 0x560a41f698c8 <col:47, col:55> col:56 'const IPFlowID &'
| |-NoInlineAttr 0x560a41f69a98 <col:18> Inherited
| `-OptimizeNoneAttr 0x560a41f69af0 <col:28> Inherited
|-CXXMethodDecl 0x560a41f69cb8 <line:45:3, col:46> col:19 find 'const int &(const IPFlowID &, const int &) const' inline
| |-ParmVarDecl 0x560a41f69b28 <col:24, col:32> col:33 'const IPFlowID &'
| `-ParmVarDecl 0x560a41f69ba0 <col:35, col:43> col:44 'const int &'
|-CXXMethodDecl 0x560a41f69e78 <line:46:3, col:35> col:19 find 'const int &(const IPFlowID &) const' inline
| `-ParmVarDecl 0x560a41f69d88 <col:24, col:32> col:33 'const IPFlowID &'
|-CXXMethodDecl 0x560a41f69fd0 <line:47:3, col:41> col:19 operator[] 'const int &(const IPFlowID &) const' inline
| `-ParmVarDecl 0x560a41f69f40 <col:30, col:38> col:39 'const IPFlowID &'
|-CXXMethodDecl 0x560a41f6a228 <line:49:3, col:45> col:9 find_pair_force 'HashMap<IPFlowID, int>::Pair *(const IPFlowID &, const int &)'
| |-ParmVarDecl 0x560a41f6a098 <col:25, col:33> col:34 'const IPFlowID &'
| `-ParmVarDecl 0x560a41f6a110 <col:36, col:44> col:45 'const int &'
|-CXXMethodDecl 0x560a41f6a3e8 <line:50:3, col:82> col:9 find_pair_force 'HashMap<IPFlowID, int>::Pair *(const IPFlowID &)'
| `-ParmVarDecl 0x560a41f6a2f8 <col:25, col:34> col:34 k 'const IPFlowID &'
|-CXXMethodDecl 0x560a41f6a638 <line:51:3, col:114> col:6 findp_force 'int *(const IPFlowID &, const int &)'
| |-ParmVarDecl 0x560a41f6a4b0 <col:18, col:27> col:27 k 'const IPFlowID &'
| `-ParmVarDecl 0x560a41f6a528 <col:30, col:39> col:39 v 'const int &'
|-CXXMethodDecl 0x560a41f6a8c8 <line:52:3, col:70> col:6 find_force 'int &(const IPFlowID &, const int &)'
| |-ParmVarDecl 0x560a41f6a738 <col:17, col:26> col:26 k 'const IPFlowID &'
| `-ParmVarDecl 0x560a41f6a7b0 <col:29, col:38> col:38 v 'const int &'
|-CXXMethodDecl 0x560a41f6aa88 <line:53:3, col:71> col:6 findp_force 'int *(const IPFlowID &)'
| `-ParmVarDecl 0x560a41f6a998 <col:18, col:27> col:27 k 'const IPFlowID &'
|-CXXMethodDecl 0x560a41f6ac48 <line:54:3, col:71> col:6 find_force 'int &(const IPFlowID &)'
| `-ParmVarDecl 0x560a41f6ab50 <col:17, col:26> col:26 k 'const IPFlowID &'
|-CXXMethodDecl 0x560a41f6ae98 <line:56:3, col:35> col:8 insert 'bool (const IPFlowID &, const int &)'
| |-ParmVarDecl 0x560a41f6ad10 <col:15, col:23> col:24 'const IPFlowID &'
| `-ParmVarDecl 0x560a41f6ad88 <col:26, col:34> col:35 'const int &'
|-CXXMethodDecl 0x560a41f6b058 <line:57:3, col:23> col:8 erase 'bool (const IPFlowID &)'
| `-ParmVarDecl 0x560a41f6af68 <col:14, col:22> col:23 'const IPFlowID &'
|-CXXMethodDecl 0x560a41f6b1b0 <line:58:3, line:60:3> line:58:8 remove 'bool (const IPFlowID &)'
| `-ParmVarDecl 0x560a41f6b120 <col:15, col:24> col:24 key 'const IPFlowID &'
|-CXXMethodDecl 0x560a41f6b268 <line:61:3, col:14> col:8 clear 'void ()'
|-CXXMethodDecl 0x560a41f6b538 <line:63:3, col:28> col:8 swap 'void (HashMap<IPFlowID, int> &)'
| `-ParmVarDecl 0x560a41f6b448 <col:13, col:27> col:28 'HashMap<IPFlowID, int> &'
|-TypedefDecl 0x560a41f6b7d0 <line:66:3, col:41> col:41 const_iterator '_HashMap_const_iterator<IPFlowID, int>':'_HashMap_const_iterator<IPFlowID, int>'
| `-TemplateSpecializationType 0x560a41f6b730 '_HashMap_const_iterator<IPFlowID, int>' sugar _HashMap_const_iterator
|   |-TemplateArgument type 'IPFlowID':'IPFlowID'
|   |-TemplateArgument type 'int':'int'
|   `-RecordType 0x560a41f6b710 '_HashMap_const_iterator<IPFlowID, int>'
|     `-ClassTemplateSpecialization 0x560a41f6b610 '_HashMap_const_iterator'
|-TypedefDecl 0x560a41f6ba00 <line:67:3, col:35> col:35 iterator '_HashMap_iterator<IPFlowID, int>':'_HashMap_iterator<IPFlowID, int>'
| `-TemplateSpecializationType 0x560a41f6b960 '_HashMap_iterator<IPFlowID, int>' sugar _HashMap_iterator
|   |-TemplateArgument type 'IPFlowID':'IPFlowID'
|   |-TemplateArgument type 'int':'int'
|   `-RecordType 0x560a41f6b940 '_HashMap_iterator<IPFlowID, int>'
|     `-ClassTemplateSpecialization 0x560a41f6b848 '_HashMap_iterator'
|-CXXMethodDecl 0x560a41f6baf8 <line:68:3, col:33> col:25 begin 'HashMap<IPFlowID, int>::const_iterator () const' inline
|-CXXMethodDecl 0x560a41f6bc48 <line:69:3, col:25> col:19 begin 'HashMap<IPFlowID, int>::iterator ()' inline
|-CXXMethodDecl 0x560a41f6bd18 <line:70:3, col:31> col:25 end 'HashMap<IPFlowID, int>::const_iterator () const' inline
|-CXXMethodDecl 0x560a41f6bde8 <line:71:3, col:23> col:19 end 'HashMap<IPFlowID, int>::iterator ()' inline
|-CXXMethodDecl 0x560a41f6bf28 <line:74:3, col:21> col:8 resize 'void (size_t)'
| `-ParmVarDecl 0x560a41f6be98 <col:15> col:21 'size_t':'unsigned long'
|-CXXMethodDecl 0x560a41f6bfe0 <line:75:3, col:66> col:8 dynamic_resizing 'bool () const'
|-CXXMethodDecl 0x560a41f6c120 <line:76:3, col:33> col:8 set_dynamic_resizing 'void (bool)'
| `-ParmVarDecl 0x560a41f6c090 <col:29> col:33 'bool'
|-CXXMethodDecl 0x560a41f6c4b8 <line:78:3, col:49> col:18 operator= 'HashMap<IPFlowID, int> &(const HashMap<IPFlowID, int> &)'
| `-ParmVarDecl 0x560a41f6c388 <col:28, col:48> col:49 'const HashMap<IPFlowID, int> &'
|-CXXRecordDecl 0x560a41f6c570 prev 0x560a41f68ac0 <line:80:3, col:10> col:10 struct Pair
|-EnumDecl 0x560a41f6c610 <line:85:3> col:3
| |-EnumConstantDecl 0x560a41f6c700 <col:10, col:25> col:10 MAX_NBUCKETS 'HashMap<IPFlowID, int>::(anonymous enum at ../dummy_inc/click/hashmap.hh:85:3)'
| | `-ImplicitCastExpr 0x560a41f6c830 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41f6c6e0 <col:25> 'int' Int: 4194303
| |     `-IntegerLiteral 0x560a41c0dc60 <col:25> 'int' 4194303
| |-EnumConstantDecl 0x560a41f6c770 <line:86:3, col:30> col:3 DEFAULT_INITIAL_NBUCKETS 'HashMap<IPFlowID, int>::(anonymous enum at ../dummy_inc/click/hashmap.hh:85:3)'
| | `-ImplicitCastExpr 0x560a41f6c848 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41f6c750 <col:30> 'int' Int: 127
| |     `-IntegerLiteral 0x560a41c0dcd0 <col:30> 'int' 127
| `-EnumConstantDecl 0x560a41f6c7e0 <line:87:3, col:30> col:3 DEFAULT_RESIZE_THRESHOLD 'HashMap<IPFlowID, int>::(anonymous enum at ../dummy_inc/click/hashmap.hh:85:3)'
|   `-ImplicitCastExpr 0x560a41f6c860 <col:30> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a41f6c7c0 <col:30> 'int' Int: 2
|       `-IntegerLiteral 0x560a41c0dd40 <col:30> 'int' 2
|-AccessSpecDecl 0x560a41f6c878 <line:89:2, col:9> col:2 private
|-CXXRecordDecl 0x560a41f6c8a0 <line:91:5, col:12> col:12 struct Elt
|-FieldDecl 0x560a41f6c9d0 <line:99:3, col:9> col:9 _buckets 'HashMap<IPFlowID, int>::Elt **'
|-FieldDecl 0x560a41f6ca20 <line:100:3, col:10> col:10 _nbuckets 'size_t':'unsigned long'
|-FieldDecl 0x560a41f6ca80 <line:101:3, col:5> col:5 _default_value 'int':'int'
|-FieldDecl 0x560a41f6cad0 <line:103:3, col:10> col:10 _n 'size_t':'unsigned long'
|-FieldDecl 0x560a41f6cb20 <line:104:3, col:10> col:10 _capacity 'size_t':'unsigned long'
|-FieldDecl 0x560a41f6cb70 <line:106:3, col:18> col:18 _arena 'HashMap_Arena *'
|-CXXMethodDecl 0x560a41f6ccc0 <line:108:3, col:49> col:8 initialize 'void (HashMap_ArenaFactory *, size_t)'
| |-ParmVarDecl 0x560a41f6cbc0 <col:19, col:40> col:41 'HashMap_ArenaFactory *'
| `-ParmVarDecl 0x560a41f6cc28 <col:43> col:49 'size_t':'unsigned long'
|-CXXMethodDecl 0x560a41f6cf38 <line:109:3, col:39> col:8 copy_from 'void (const HashMap<IPFlowID, int> &)'
| `-ParmVarDecl 0x560a41f6ce78 <col:18, col:38> col:39 'const HashMap<IPFlowID, int> &'
|-CXXMethodDecl 0x560a41f6d080 <line:110:3, col:22> col:8 resize0 'void (size_t)'
| `-ParmVarDecl 0x560a41f6cff0 <col:16> col:22 'size_t':'unsigned long'
|-CXXMethodDecl 0x560a41f6d238 <line:111:3, col:28> col:10 bucket 'size_t (const IPFlowID &) const'
| `-ParmVarDecl 0x560a41f6d148 <col:17, col:25> col:26 'const IPFlowID &'
|-FriendDecl 0x560a41f6d3f8 <line:113:3, col:38> col:10 'class _HashMap_iterator<IPFlowID, int>':'_HashMap_iterator<IPFlowID, int>'
`-FriendDecl 0x560a41f6d548 <line:114:3, col:44> col:10 'class _HashMap_const_iterator<IPFlowID, int>':'_HashMap_const_iterator<IPFlowID, int>'

Layout: <CGRecordLayout
  LLVMType:%class.HashMap = type { %"struct.HashMap<IPFlowID, int>::Elt"**, i64, i32, i64, i64, %class.HashMap_Arena* }
  NonVirtualBaseLLVMType:%class.HashMap = type { %"struct.HashMap<IPFlowID, int>::Elt"**, i64, i32, i64, i64, %class.HashMap_Arena* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41f685e0 <../elements/local/tcpdemux.hh:26:1, line:51:1> line:26:7 class TCPDemux definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x560a41f68738 <col:1, col:7> col:7 implicit referenced class TCPDemux
|-AccessSpecDecl 0x560a41f687c8 <line:27:1, col:8> col:1 private
|-FieldDecl 0x560a41f6d588 <line:28:3, col:13> col:13 _flows 'FlowTable':'HashMap<IPFlowID, int>'
|-CXXMethodDecl 0x560a41f6d6e0 <line:29:3, col:26> col:7 find_flow 'int (Packet *)'
| `-ParmVarDecl 0x560a41f6d5e8 <col:17, col:25> col:25 p 'Packet *'
|-AccessSpecDecl 0x560a41f6d788 <line:31:1, col:7> col:1 public
|-CXXConstructorDecl 0x560a41f6d7e8 <line:32:3, col:12> col:3 TCPDemux 'void ()'
|-CXXDestructorDecl 0x560a41f6d8d8 <line:33:3, col:13> col:3 ~TCPDemux 'void ()' noexcept-unevaluated 0x560a41f6d8d8
| `-Overrides: [ 0x560a41df8118 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x560a41f6da10 <line:35:3, col:55> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x560a41df9548 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x560a41f6ebb0 <col:34, col:55>
|   `-ReturnStmt 0x560a41f6eba0 <col:36, col:43>
|     `-ImplicitCastExpr 0x560a41f6eb88 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x560a41f6eb68 <col:43> 'const char [9]' lvalue "TCPDemux"
|-CXXMethodDecl 0x560a41f6dad8 <line:36:3, col:54> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x560a41df9610 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x560a41f6ec10 <col:34, col:54>
|   `-ReturnStmt 0x560a41f6ec00 <col:36, col:43>
|     `-ImplicitCastExpr 0x560a41f6ebe8 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x560a41f6ebc8 <col:43> 'const char []' lvalue Var 0x560a41df9890 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x560a41f6dba0 <line:37:3, col:49> col:15 processing 'const char *() const'
| |-Overrides: [ 0x560a41df99a8 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x560a41f6ec70 <col:34, col:49>
|   `-ReturnStmt 0x560a41f6ec60 <col:36, col:43>
|     `-ImplicitCastExpr 0x560a41f6ec48 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x560a41f6ec28 <col:43> 'const char []' lvalue Var 0x560a41df9af0 'PUSH' 'const char []'
|-CXXMethodDecl 0x560a41f6de70 <line:39:3, col:57> col:7 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x560a41dfac70 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x560a41f6dd20 <col:17, col:33> col:33 conf 'Vector<String> &'
| `-ParmVarDecl 0x560a41f6dd98 <col:39, col:53> col:53 errh 'ErrorHandler *'
|-CXXMethodDecl 0x560a41f6e048 <line:41:3, col:26> col:8 push 'void (int, Packet *)'
| |-Overrides: [ 0x560a41df83e8 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x560a41f6df38 <col:13> col:16 'int'
| `-ParmVarDecl 0x560a41f6dfb0 <col:18, col:25> col:26 'Packet *'
|-CXXMethodDecl 0x560a41f6e408 <line:45:3, line:46:63> line:45:8 add_flow 'bool (IPAddress, unsigned short, IPAddress, unsigned short, unsigned int)'
| |-ParmVarDecl 0x560a41f6e108 <col:17, col:27> col:27 sa 'IPAddress'
| |-ParmVarDecl 0x560a41f6e188 <col:31, col:46> col:46 sp 'unsigned short'
| |-ParmVarDecl 0x560a41f6e200 <line:46:17, col:27> col:27 da 'IPAddress'
| |-ParmVarDecl 0x560a41f6e280 <col:31, col:46> col:46 dp 'unsigned short'
| `-ParmVarDecl 0x560a41f6e300 <col:50, col:59> col:59 port 'unsigned int'
|-CXXMethodDecl 0x560a41f6e748 <line:49:3, line:50:51> line:49:8 remove_flow 'bool (IPAddress, unsigned short, IPAddress, unsigned short)'
| |-ParmVarDecl 0x560a41f6e4e0 <col:20, col:30> col:30 sa 'IPAddress'
| |-ParmVarDecl 0x560a41f6e560 <col:34, col:49> col:49 sp 'unsigned short'
| |-ParmVarDecl 0x560a41f6e5d8 <line:50:20, col:30> col:30 da 'IPAddress'
| `-ParmVarDecl 0x560a41f6e658 <col:34, col:49> col:49 dp 'unsigned short'
|-CXXConstructorDecl 0x560a41f6e838 <line:26:7> col:7 implicit TCPDemux 'void (const TCPDemux &)' inline default_delete noexcept-unevaluated 0x560a41f6e838
| `-ParmVarDecl 0x560a41f6e948 <col:7> col:7 'const TCPDemux &'
`-CXXMethodDecl 0x560a41f6e9e8 <col:7> col:7 implicit operator= 'TCPDemux &(const TCPDemux &)' inline default_delete noexcept-unevaluated 0x560a41f6e9e8
  `-ParmVarDecl 0x560a41f6eaf8 <col:7> col:7 'const TCPDemux &'

Layout: <CGRecordLayout
  LLVMType:%class.TCPDemux = type { %class.Element.base, %class.HashMap }
  NonVirtualBaseLLVMType:%class.TCPDemux = type { %class.Element.base, %class.HashMap }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41db1f08 prev 0x560a41da9610 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x560a41db2000 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x560a41db20f0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x560a41db21a0 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x560a41db2328 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x560a41db24a8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x560a41db2628 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x560a41dc9368 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x560a41dc9c68 <col:11>
|-CXXDestructorDecl 0x560a41dc94d0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x560a41dc9608 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x560a41dc9608
| `-ParmVarDecl 0x560a41dc9718 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x560a41dc97b8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x560a41dc97b8
| `-ParmVarDecl 0x560a41dc98c8 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x560a41dcc5f8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x560a41dcc708 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x560a41dcc988 <col:11>
|   `-ReturnStmt 0x560a41dcc978 <col:11>
|     `-UnaryOperator 0x560a41dcc960 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x560a41dcc950 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x560a41dcc778 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x560a41dcc778
  `-ParmVarDecl 0x560a41dcc888 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41db2690 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x560a41db27a8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x560a41db2848 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x560a41db28b0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x560a41db2918 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x560a41db2980 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x560a41db29e0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x560a41db2aa0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x560a41db2b00 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x560a41db2b60 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x560a41dc9278 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x560a41db2848 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x560a41dc9c78 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x560a41dc9cd0 <col:12>
|-CXXConstructorDecl 0x560a41dc9938 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x560a41dc9938
| `-ParmVarDecl 0x560a41dc9a48 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x560a41dc9ae8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x560a41dc9ae8
| `-ParmVarDecl 0x560a41dc9bf8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x560a41dcbce0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41da2d00 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x560a41da2e18 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x560a41da2ea8 <col:16, col:22> col:16 public
|-EnumDecl 0x560a41da2ed0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x560a41da2fd0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x560a41da30b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41da2fb0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x560a41da2f90 <col:21> 'int' 28
| `-EnumConstantDecl 0x560a41da3060 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x560a41da30c8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a41da3040 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x560a41da3020 <col:22> 'int' 64
|-CXXMethodDecl 0x560a41da3468 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x560a41da30f0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x560a41da3170 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x560a41da3250 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x560a41da32c8 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x560a41da3528 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x560a41da3728 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x560a41da35a0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x560a41da3618 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x560a41da37d8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x560a41da3938 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x560a41da3848 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x560a41da39e0 <col:72> warn_unused_result ""
|-TypedefDecl 0x560a41da3d10 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x560a41da3ca0 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x560a41da3c40 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x560a41da3c00 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x560a417e04e0 'void'
|       |-PointerType 0x560a41ab99d0 'unsigned char *'
|       | `-BuiltinType 0x560a417e05e0 'unsigned char'
|       |-TypedefType 0x560a4188a4d0 'size_t' sugar
|       | |-Typedef 0x560a41850be0 'size_t'
|       | `-BuiltinType 0x560a417e0640 'unsigned long'
|       `-PointerType 0x560a417e0ce0 'void *'
|         `-BuiltinType 0x560a417e04e0 'void'
|-CXXMethodDecl 0x560a41da4188 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x560a41da3d80 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x560a41da3df8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x560a41da3e90 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x560a41da3f10 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x560a41dc2290 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x560a41dc2278 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x560a41dc2240 <col:58> 'int' 0
| |-ParmVarDecl 0x560a41da3f90 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x560a41dc22b8 <col:76> 'int' 0
| |-ParmVarDecl 0x560a41da4010 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x560a41dc22d8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x560a41da4258 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x560a41da42d8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x560a41da4398 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x560a41da4438 <col:20>
| `-OptimizeNoneAttr 0x560a41da4490 <col:30>
|-CXXMethodDecl 0x560a41da4508 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x560a41da45a8 <col:20>
| `-OptimizeNoneAttr 0x560a41da4600 <col:30>
|-CXXMethodDecl 0x560a41da4678 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x560a41da4718 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x560a41da47c8 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x560a41da4868 <col:20>
| |-OptimizeNoneAttr 0x560a41da48c0 <col:30>
| `-WarnUnusedResultAttr 0x560a41da48e8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x560a41da4940 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x560a41da49e0 <col:20>
| `-OptimizeNoneAttr 0x560a41da4a38 <col:30>
|-CXXMethodDecl 0x560a41da4a88 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x560a41da4b28 <col:20>
| `-OptimizeNoneAttr 0x560a41da4b80 <col:30>
|-CXXMethodDecl 0x560a41da4bc8 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x560a41da4c68 <col:20>
| `-OptimizeNoneAttr 0x560a41da4cc0 <col:30>
|-CXXMethodDecl 0x560a41da4d08 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x560a41da4dc8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x560a41da4e90 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x560a41da4f58 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x560a41da5018 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x560a41da5138 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x560a41dc23a0 <col:54, line:99:5>
|   `-ReturnStmt 0x560a41dc2390 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x560a41dc2378 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x560a41dc2348 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x560a41db2e98
|         `-CXXThisExpr 0x560a41dc2338 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x560a41da52d8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x560a41da51e8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x560a41dc2450 <col:67, line:103:5>
|   `-BinaryOperator 0x560a41dc2430 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x560a41dc23c8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x560a41db2e98
|     | `-CXXThisExpr 0x560a41dc23b8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x560a41dc2418 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x560a41dc23f8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x560a41da51e8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x560a41da53d0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x560a41dc24d0 <col:33, line:107:5>
|   `-ReturnStmt 0x560a41dc24c0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x560a41dc24a8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x560a41dc2478 <col:16> 'void *' lvalue ->_destructor_argument 0x560a41db2f00
|         `-CXXThisExpr 0x560a41dc2468 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x560a41da5490 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x560a41dc2b00 <col:25, line:113:5>
|   |-ParenExpr 0x560a41dc2848 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x560a41dc2818 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x560a41dc2588 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x560a41dc2560 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x560a41dc2528 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x560a41dc24f8 <col:24> '<bound member function type>' ->shared 0x560a41da4508
|   |   |       `-ImplicitCastExpr 0x560a41dc2548 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x560a41dc24e8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x560a41dc25e8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a41dc25c8 <col:42> 'int' 0
|   |   `-CallExpr 0x560a41dc2778 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x560a41dc2760 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a41dc2740 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a41881230 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a41dc27b8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41dc2658 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x560a41dc27d0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41dc2680 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x560a41dc27e8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a41dc26b8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x560a41dc2800 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a41dc2728 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a41dc2710 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a41dc26d8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x560a41dc2a48 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x560a41dc2878 <col:2> 'unsigned char *' lvalue ->_head 0x560a41db2ca0
|   | | `-CXXThisExpr 0x560a41dc2868 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x560a41dc2a30 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x560a41dc2a10 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x560a41dc28b8 <col:10> 'unsigned char *' lvalue ->_data 0x560a41db2d08
|   |     | `-CXXThisExpr 0x560a41dc28a8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x560a41dc29f8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x560a41dc29d8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x560a41dc28f8 <col:18> 'unsigned char *' lvalue ->_tail 0x560a41db2d70
|   |         | `-CXXThisExpr 0x560a41dc28e8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x560a41dc29c0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x560a41dc29a0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x560a41dc2938 <col:26> 'unsigned char *' lvalue ->_end 0x560a41db2dd8
|   |             | `-CXXThisExpr 0x560a41dc2928 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x560a41dc2988 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x560a41dc2968 <col:33> 'int' 0
|   `-BinaryOperator 0x560a41dc2ae0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x560a41dc2a78 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x560a41db2e98
|     | `-CXXThisExpr 0x560a41dc2a68 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x560a41dc2ac8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x560a41dc2aa8 <col:16> 'int' 0
|-CXXMethodDecl 0x560a41da55d0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x560a41da5540 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x560a41da5678 <col:20>
| |-OptimizeNoneAttr 0x560a41da56d0 <col:30>
| `-WarnUnusedResultAttr 0x560a41da56f8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x560a41da57c8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x560a41da5738 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x560a41da5870 <col:20>
| |-OptimizeNoneAttr 0x560a41da58c8 <col:30>
| `-WarnUnusedResultAttr 0x560a41da58f0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x560a41da5a28 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x560a41da5930 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x560a41da5ad0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x560a41da5bd0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x560a41da5b40 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x560a41da5c78 <col:20>
| `-OptimizeNoneAttr 0x560a41da5cd0 <col:30>
|-CXXMethodDecl 0x560a41da5d98 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x560a41da5d08 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x560a41da5e40 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x560a41da5f40 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x560a41da5eb0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x560a41da5fe8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x560a41da60e8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x560a41da6058 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x560a41da6190 <col:20>
| `-OptimizeNoneAttr 0x560a41da61e8 <col:30>
|-CXXMethodDecl 0x560a41da6378 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x560a41da6228 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x560a41da62a0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x560a41dc22f8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x560a41da6428 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x560a41da6628 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x560a41da64a0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x560a41da6518 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a41da6838 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x560a41da66e8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x560a41da6760 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a41da6a48 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x560a41da68f8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x560a41da6978 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x560a41dc2308 <col:39> 'int' 0
|-CXXMethodDecl 0x560a41da6b18 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x560a41da6be0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x560a41da6ca8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x560a41da6d68 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x560a41da6e30 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x560a41da6f78 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x560a41da6ee8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x560a41da7148 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x560a41da7038 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x560a41da70b0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a41da7218 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x560a41da72d8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x560a41da7378 <col:20>
| `-OptimizeNoneAttr 0x560a41da73d0 <col:30>
|-CXXMethodDecl 0x560a41da7420 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x560a41da74c0 <col:20>
| `-OptimizeNoneAttr 0x560a41da7518 <col:30>
|-CXXMethodDecl 0x560a41da7568 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x560a41da7628 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x560a41da76f0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x560a41da7790 <col:20>
| `-OptimizeNoneAttr 0x560a41da77e8 <col:30>
|-CXXMethodDecl 0x560a41da7938 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x560a41da7828 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x560a41da78a0 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a41da7a88 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x560a41da79f8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a41da7b50 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x560a41da7c10 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x560a41da7cb0 <col:20>
| `-OptimizeNoneAttr 0x560a41da7d08 <col:30>
|-CXXMethodDecl 0x560a41da7d58 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x560a41da7df8 <col:20>
| `-OptimizeNoneAttr 0x560a41da7e50 <col:30>
|-CXXMethodDecl 0x560a41da7ea0 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x560a41da7f68 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x560a41da8008 <col:20>
| `-OptimizeNoneAttr 0x560a41da8060 <col:30>
|-CXXMethodDecl 0x560a41da80a8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x560a41da81c8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x560a41da8338 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x560a41da8278 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x560a41da8428 <line:307:5, col:68> col:56 used ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x560a41da84c8 <col:20>
| `-OptimizeNoneAttr 0x560a41da8520 <col:30>
|-CXXMethodDecl 0x560a41da8570 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x560a41da8630 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x560a41da8868 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x560a41da86e0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x560a41da8758 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x560a41da8918 <col:20>
| `-OptimizeNoneAttr 0x560a41da8970 <col:30>
|-CXXMethodDecl 0x560a41da8a18 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x560a41da8ab8 <col:20>
| `-OptimizeNoneAttr 0x560a41da8b10 <col:30>
|-CXXMethodDecl 0x560a41da8b60 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x560a41da8c00 <col:20>
| `-OptimizeNoneAttr 0x560a41da8c58 <col:30>
|-CXXMethodDecl 0x560a41da8ca0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x560a41da8d40 <col:20>
| `-OptimizeNoneAttr 0x560a41da8d98 <col:30>
|-CXXMethodDecl 0x560a41da8e98 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x560a41da8dd0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x560a41da8f40 <col:20>
| `-OptimizeNoneAttr 0x560a41da8f98 <col:30>
|-CXXMethodDecl 0x560a41da9158 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x560a41da8fd0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x560a41da9048 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x560a41da9208 <col:20>
| `-OptimizeNoneAttr 0x560a41da9260 <col:30>
|-CXXMethodDecl 0x560a41da9308 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x560a41da9428 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x560a41da9548 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x560a41da95e8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x560a41da9610 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x560a41da9738 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x560a41da97d8 <col:20>
| `-OptimizeNoneAttr 0x560a41da9830 <col:30>
|-CXXMethodDecl 0x560a41da98d8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x560a41da9978 <col:20>
| `-OptimizeNoneAttr 0x560a41da99d0 <col:30>
|-AccessSpecDecl 0x560a41da99f8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x560a41da9a20 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x560a41da9b20 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x560a41da9b70 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a41da9b00 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x560a41da9ae0 <col:14> 'int' 48
|-CXXMethodDecl 0x560a41da9bd8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x560a41da9c78 <col:20>
| `-OptimizeNoneAttr 0x560a41da9cd0 <col:30>
|-CXXMethodDecl 0x560a41da9d48 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x560a41da9de8 <col:20>
| `-OptimizeNoneAttr 0x560a41da9e40 <col:30>
|-CXXMethodDecl 0x560a41da9f08 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x560a41da9e78 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x560a41daa0a8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x560a41daa248 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x560a41daa158 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x560a41daa2f0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x560a41daa3f0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x560a41daa7a0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41daa3d0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x560a41daa3b0 <col:9> 'int' 0
| |-EnumConstantDecl 0x560a41daa480 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x560a41daa7b8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41daa460 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x560a41daa440 <col:14> 'int' 1
| |-EnumConstantDecl 0x560a41daa510 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x560a41daa7d0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41daa4f0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x560a41daa4d0 <col:14> 'int' 2
| |-EnumConstantDecl 0x560a41daa5a0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x560a41daa7e8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41daa580 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x560a41daa560 <col:14> 'int' 3
| |-EnumConstantDecl 0x560a41daa630 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x560a41daa800 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41daa610 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x560a41daa5f0 <col:13> 'int' 4
| |-EnumConstantDecl 0x560a41daa6c0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x560a41daa818 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41daa6a0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x560a41daa680 <col:13> 'int' 5
| `-EnumConstantDecl 0x560a41daa750 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x560a41daa830 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a41daa730 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x560a41daa710 <col:14> 'int' 6
|-CXXMethodDecl 0x560a41daa898 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x560a41daa938 <col:20>
| `-OptimizeNoneAttr 0x560a41daa990 <col:30>
|-CXXMethodDecl 0x560a41daaa88 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x560a41daa9c8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x560a41daab30 <col:20>
| `-OptimizeNoneAttr 0x560a41daab88 <col:30>
|-CXXMethodDecl 0x560a41daabf8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x560a41daad20 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x560a41daae98 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x560a41daadd0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x560a41daaf60 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x560a41dab028 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x560a41dab168 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x560a41dab0d8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x560a41dab260 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x560a41dab360 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x560a41dab560 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41dab340 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x560a41dab320 <col:23> 'int' 0
| |-EnumConstantDecl 0x560a41dab3f0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x560a41dab578 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41dab3d0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x560a41dab3b0 <col:45> 'int' 4
| |-EnumConstantDecl 0x560a41dab480 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x560a41dab590 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41dab460 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x560a41dab440 <col:24> 'int' 0
| `-EnumConstantDecl 0x560a41dab510 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x560a41dab5a8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a41dab4f0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x560a41dab4d0 <col:47> 'int' 16
|-CXXMethodDecl 0x560a41dab608 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x560a41dab778 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x560a41dab6b8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x560a41dab820 <col:20>
| `-OptimizeNoneAttr 0x560a41dab878 <col:30>
|-CXXMethodDecl 0x560a41dab8c8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x560a41dc2c20 <col:18, col:36>
|   `-ReturnStmt 0x560a41dc2c10 <col:20, col:33>
|     `-ImplicitCastExpr 0x560a41dc2bf8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x560a41dc2bd8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x560a41dc2ba8 <col:27> '<bound member function type>' ->xanno 0x560a41da98d8
|           `-CXXThisExpr 0x560a41dc2b98 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x560a41dab9c0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x560a41dc2d30 <col:30, col:48>
|   `-ReturnStmt 0x560a41dc2d20 <col:32, col:45>
|     `-ImplicitCastExpr 0x560a41dc2d08 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x560a41dc2ce8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x560a41dc2cb8 <col:39> '<bound member function type>' ->xanno 0x560a41da9738
|           `-CXXThisExpr 0x560a41dc2ca8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x560a41dabaa8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x560a41dc2ec8 <col:24, col:50>
|   `-ReturnStmt 0x560a41dc2eb8 <col:26, col:47>
|     `-UnaryOperator 0x560a41dc2ea0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x560a41dc2e80 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x560a41dc2e68 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x560a41dc2e18 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x560a41db21a0
|         |   `-CXXMemberCallExpr 0x560a41dc2df8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x560a41dc2dc8 <col:34> '<bound member function type>' ->xanno 0x560a41da98d8
|         |       `-CXXThisExpr 0x560a41dc2db8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x560a41dc2e48 <col:46> 'int' 0
|-CXXMethodDecl 0x560a41dabb98 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x560a41dc3060 <col:36, col:62>
|   `-ReturnStmt 0x560a41dc3050 <col:38, col:59>
|     `-UnaryOperator 0x560a41dc3038 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x560a41dc3018 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x560a41dc3000 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x560a41dc2fb0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x560a41db21a0
|         |   `-CXXMemberCallExpr 0x560a41dc2f90 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x560a41dc2f60 <col:46> '<bound member function type>' ->xanno 0x560a41da9738
|         |       `-CXXThisExpr 0x560a41dc2f50 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x560a41dc2fe0 <col:58> 'int' 0
|-CXXMethodDecl 0x560a41dabcb8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x560a41dc31f8 <col:26, col:53>
|   `-ReturnStmt 0x560a41dc31e8 <col:28, col:50>
|     `-UnaryOperator 0x560a41dc31d0 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x560a41dc31b0 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x560a41dc3198 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x560a41dc3148 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x560a41db24a8
|         |   `-CXXMemberCallExpr 0x560a41dc3128 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x560a41dc30f8 <col:36> '<bound member function type>' ->xanno 0x560a41da98d8
|         |       `-CXXThisExpr 0x560a41dc30e8 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x560a41dc3178 <col:49> 'int' 0
|-CXXMethodDecl 0x560a41dabdd8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x560a41dc33c8 <col:38, col:65>
|   `-ReturnStmt 0x560a41dc33b8 <col:40, col:62>
|     `-UnaryOperator 0x560a41dc33a0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x560a41dc3380 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x560a41dc3368 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x560a41dc32e0 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x560a41db24a8
|         |   `-CXXMemberCallExpr 0x560a41dc32c0 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x560a41dc3290 <col:48> '<bound member function type>' ->xanno 0x560a41da9738
|         |       `-CXXThisExpr 0x560a41dc3280 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x560a41dc3310 <col:61> 'int' 0
|-CXXMethodDecl 0x560a41dabf88 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x560a41dabe90 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x560a41dc3a98 <col:34, line:463:5>
|   |-ParenExpr 0x560a41dc38e0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x560a41dc38b0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x560a41dc3518 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x560a41dc34e8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x560a41dc3438 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x560a41dc3420 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x560a41dc33e0 <col:23> 'int' lvalue ParmVar 0x560a41dabe90 'i' 'int'
|   |   |   | `-IntegerLiteral 0x560a41dc3400 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x560a41dc34c8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x560a41dc3498 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x560a41dc3458 <col:33> 'int' lvalue ParmVar 0x560a41dabe90 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x560a41dc34b0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x560a41dc3478 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x560a41da9b20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x560a41dc3578 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a41dc3558 <col:56> 'int' 0
|   |   `-CallExpr 0x560a41dc3810 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x560a41dc37f8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a41dc37d8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a41881230 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a41dc3850 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41dc3668 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x560a41dc3868 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41dc3698 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x560a41dc3880 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a41dc36d0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x560a41dc3898 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a41dc37c0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a41dc37a8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a41dc3768 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x560a41dc3a88 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x560a41dc3a70 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x560a41dc3a50 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x560a41dc3a20 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x560a41dc39d0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x560a41db21a0
|         |   `-CXXMemberCallExpr 0x560a41dc39b0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x560a41dc3980 <col:9> '<bound member function type>' ->xanno 0x560a41da9738
|         |       `-CXXThisExpr 0x560a41dc3970 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x560a41dc3a38 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x560a41dc3a00 <col:21> 'int' lvalue ParmVar 0x560a41dabe90 'i' 'int'
|-CXXMethodDecl 0x560a41dac1d8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x560a41dac048 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x560a41dac0c0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x560a41dc4128 <col:40, line:472:5>
|   |-ParenExpr 0x560a41dc3f40 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x560a41dc3f10 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x560a41dc3bf0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x560a41dc3bc0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x560a41dc3b10 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x560a41dc3af8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x560a41dc3ab8 <col:23> 'int' lvalue ParmVar 0x560a41dac048 'i' 'int'
|   |   |   | `-IntegerLiteral 0x560a41dc3ad8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x560a41dc3ba0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x560a41dc3b70 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x560a41dc3b30 <col:33> 'int' lvalue ParmVar 0x560a41dac048 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x560a41dc3b88 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x560a41dc3b50 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x560a41da9b20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x560a41dc3c50 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a41dc3c30 <col:56> 'int' 0
|   |   `-CallExpr 0x560a41dc3e70 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x560a41dc3e58 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a41dc3e38 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a41881230 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a41dc3eb0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41dc3cc0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x560a41dc3ec8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41dc3cf0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x560a41dc3ee0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a41dc3d28 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x560a41dc3ef8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a41dc3e20 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a41dc3e08 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a41dc3dc8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x560a41dc4108 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x560a41dc40b0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x560a41dc4080 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x560a41dc4030 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x560a41db21a0
|     | |   `-CXXMemberCallExpr 0x560a41dc4010 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x560a41dc3fe0 <col:2> '<bound member function type>' ->xanno 0x560a41da98d8
|     | |       `-CXXThisExpr 0x560a41dc3fd0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x560a41dc4098 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x560a41dc4060 <col:14> 'int' lvalue ParmVar 0x560a41dac048 'i' 'int'
|     `-ImplicitCastExpr 0x560a41dc40f0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x560a41dc40d0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x560a41dac0c0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x560a41dac398 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x560a41dac2a0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x560a41dc48a8 <col:36, line:485:5>
|   |-ParenExpr 0x560a41dc4610 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x560a41dc45e0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x560a41dc42c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x560a41dc4290 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x560a41dc41a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x560a41dc4188 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x560a41dc4148 <col:23> 'int' lvalue ParmVar 0x560a41dac2a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x560a41dc4168 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x560a41dc4270 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x560a41dc4258 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x560a41dc41c0 <col:33> 'int' lvalue ParmVar 0x560a41dac2a0 'i' 'int'
|   |   |     `-BinaryOperator 0x560a41dc4238 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x560a41dc4220 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x560a41dc41e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x560a41da9b20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x560a41dc4200 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x560a41dc4320 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a41dc4300 <col:60> 'int' 0
|   |   `-CallExpr 0x560a41dc4540 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x560a41dc4528 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a41dc4508 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a41881230 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a41dc4580 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41dc4390 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x560a41dc4598 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41dc43c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x560a41dc45b0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a41dc4400 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x560a41dc45c8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a41dc44f0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a41dc44d8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a41dc4498 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x560a41dc4898 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x560a41dc4880 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x560a41dc4868 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x560a41dc4838 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x560a41dc47d8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x560a41dc47a8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x560a41dc4720 <col:61, col:70> 'char const[48]' lvalue ->c 0x560a41db20f0
|             |   `-CXXMemberCallExpr 0x560a41dc4700 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x560a41dc46d0 <col:61> '<bound member function type>' ->xanno 0x560a41da9738
|             |       `-CXXThisExpr 0x560a41dc46c0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x560a41dc47c0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x560a41dc4750 <col:74> 'int' lvalue ParmVar 0x560a41dac2a0 'i' 'int'
|-CXXMethodDecl 0x560a41dac5e8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x560a41dac458 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x560a41dac4d0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x560a41dc4ff8 <col:42, line:500:5>
|   |-ParenExpr 0x560a41dc4d90 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x560a41dc4d60 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x560a41dc4a40 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x560a41dc4a10 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x560a41dc4920 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x560a41dc4908 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x560a41dc48c8 <col:23> 'int' lvalue ParmVar 0x560a41dac458 'i' 'int'
|   |   |   | `-IntegerLiteral 0x560a41dc48e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x560a41dc49f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x560a41dc49d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x560a41dc4940 <col:33> 'int' lvalue ParmVar 0x560a41dac458 'i' 'int'
|   |   |     `-BinaryOperator 0x560a41dc49b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x560a41dc49a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x560a41dc4960 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x560a41da9b20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x560a41dc4980 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x560a41dc4aa0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a41dc4a80 <col:60> 'int' 0
|   |   `-CallExpr 0x560a41dc4cc0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x560a41dc4ca8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a41dc4c88 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a41881230 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a41dc4d00 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41dc4b10 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x560a41dc4d18 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41dc4b48 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x560a41dc4d30 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a41dc4b80 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x560a41dc4d48 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a41dc4c70 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a41dc4c58 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a41dc4c18 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x560a41dc4fd8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x560a41dc4f88 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x560a41dc4f58 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x560a41dc4f00 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x560a41dc4ed0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x560a41dc4e80 <col:48, col:57> 'char [48]' lvalue ->c 0x560a41db20f0
|     |     |   `-CXXMemberCallExpr 0x560a41dc4e60 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x560a41dc4e30 <col:48> '<bound member function type>' ->xanno 0x560a41da98d8
|     |     |       `-CXXThisExpr 0x560a41dc4e20 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x560a41dc4ee8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x560a41dc4eb0 <col:61> 'int' lvalue ParmVar 0x560a41dac458 'i' 'int'
|     `-ImplicitCastExpr 0x560a41dc4fc0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x560a41dc4fa0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x560a41dac4d0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x560a41dac7a8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x560a41dac6b0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x560a41dc5758 <col:35, line:513:5>
|   |-ParenExpr 0x560a41dc5468 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x560a41dc5438 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x560a41dc5190 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x560a41dc5160 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x560a41dc5070 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x560a41dc5058 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x560a41dc5018 <col:23> 'int' lvalue ParmVar 0x560a41dac6b0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x560a41dc5038 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x560a41dc5140 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x560a41dc5128 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x560a41dc5090 <col:33> 'int' lvalue ParmVar 0x560a41dac6b0 'i' 'int'
|   |   |     `-BinaryOperator 0x560a41dc5108 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x560a41dc50f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x560a41dc50b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x560a41da9b20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x560a41dc50d0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x560a41dc51f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a41dc51d0 <col:60> 'int' 0
|   |   `-CallExpr 0x560a41dc5398 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x560a41dc5380 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a41dc5360 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a41881230 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a41dc53d8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41dc5260 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x560a41dc53f0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41dc5298 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x560a41dc5408 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a41dc52d0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x560a41dc5420 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a41dc5348 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a41dc5330 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a41dc52f0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x560a41dc5748 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x560a41dc5730 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x560a41dc5718 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x560a41dc56e8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x560a41dc5660 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x560a41dc5630 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x560a41dc55e0 <col:60, col:69> 'char const[48]' lvalue ->c 0x560a41db20f0
|             |   `-CXXMemberCallExpr 0x560a41dc55c0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x560a41dc5590 <col:60> '<bound member function type>' ->xanno 0x560a41da9738
|             |       `-CXXThisExpr 0x560a41dc5580 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x560a41dc5648 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x560a41dc5610 <col:73> 'int' lvalue ParmVar 0x560a41dac6b0 'i' 'int'
|-CXXMethodDecl 0x560a41dac9f8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x560a41dac868 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x560a41dac8e0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x560a41dc5e38 <col:41, line:528:5>
|   |-ParenExpr 0x560a41dc5bc8 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x560a41dc5b98 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x560a41dc58f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x560a41dc58c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x560a41dc57d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x560a41dc57b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x560a41dc5778 <col:23> 'int' lvalue ParmVar 0x560a41dac868 'i' 'int'
|   |   |   | `-IntegerLiteral 0x560a41dc5798 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x560a41dc58a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x560a41dc5888 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x560a41dc57f0 <col:33> 'int' lvalue ParmVar 0x560a41dac868 'i' 'int'
|   |   |     `-BinaryOperator 0x560a41dc5868 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x560a41dc5850 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x560a41dc5810 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x560a41da9b20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x560a41dc5830 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x560a41dc5950 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a41dc5930 <col:60> 'int' 0
|   |   `-CallExpr 0x560a41dc5af8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x560a41dc5ae0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a41dc5ac0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a41881230 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a41dc5b38 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41dc59c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x560a41dc5b50 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41dc59f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x560a41dc5b68 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a41dc5a30 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x560a41dc5b80 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a41dc5aa8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a41dc5a90 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a41dc5a50 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x560a41dc5e18 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x560a41dc5dc8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x560a41dc5d98 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x560a41dc5d38 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x560a41dc5d08 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x560a41dc5cb8 <col:47, col:56> 'char [48]' lvalue ->c 0x560a41db20f0
|     |     |   `-CXXMemberCallExpr 0x560a41dc5c98 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x560a41dc5c68 <col:47> '<bound member function type>' ->xanno 0x560a41da98d8
|     |     |       `-CXXThisExpr 0x560a41dc5c58 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x560a41dc5d20 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x560a41dc5ce8 <col:60> 'int' lvalue ParmVar 0x560a41dac868 'i' 'int'
|     `-ImplicitCastExpr 0x560a41dc5e00 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x560a41dc5de0 <col:65> 'int16_t':'short' lvalue ParmVar 0x560a41dac8e0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x560a41dacbb8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x560a41dacac0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x560a41dc6508 <col:36, line:541:5>
|   |-ParenExpr 0x560a41dc62a8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x560a41dc6278 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x560a41dc5fd0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x560a41dc5fa0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x560a41dc5eb0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x560a41dc5e98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x560a41dc5e58 <col:23> 'int' lvalue ParmVar 0x560a41dacac0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x560a41dc5e78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x560a41dc5f80 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x560a41dc5f68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x560a41dc5ed0 <col:33> 'int' lvalue ParmVar 0x560a41dacac0 'i' 'int'
|   |   |     `-BinaryOperator 0x560a41dc5f48 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x560a41dc5f30 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x560a41dc5ef0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x560a41da9b20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x560a41dc5f10 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x560a41dc6030 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a41dc6010 <col:60> 'int' 0
|   |   `-CallExpr 0x560a41dc61d8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x560a41dc61c0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a41dc61a0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a41881230 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a41dc6218 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41dc60a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x560a41dc6230 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41dc60d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x560a41dc6248 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a41dc6110 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x560a41dc6260 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a41dc6188 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a41dc6170 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a41dc6130 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x560a41dc64f8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x560a41dc64e0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x560a41dc64c8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x560a41dc6498 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x560a41dc6440 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x560a41dc6410 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x560a41dc63c0 <col:61, col:70> 'char const[48]' lvalue ->c 0x560a41db20f0
|             |   `-CXXMemberCallExpr 0x560a41dc63a0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x560a41dc6370 <col:61> '<bound member function type>' ->xanno 0x560a41da9738
|             |       `-CXXThisExpr 0x560a41dc6360 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x560a41dc6428 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x560a41dc63f0 <col:74> 'int' lvalue ParmVar 0x560a41dacac0 'i' 'int'
|-CXXMethodDecl 0x560a41dacd88 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x560a41dacc78 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x560a41daccf0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x560a41dace38 <col:20>
| `-OptimizeNoneAttr 0x560a41dace90 <col:30>
|-CXXMethodDecl 0x560a41dacfc8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x560a41daced0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x560a41dc6bd8 <col:35, line:562:5>
|   |-ParenExpr 0x560a41dc6978 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x560a41dc6948 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x560a41dc66a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x560a41dc6670 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x560a41dc6580 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x560a41dc6568 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x560a41dc6528 <col:23> 'int' lvalue ParmVar 0x560a41daced0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x560a41dc6548 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x560a41dc6650 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x560a41dc6638 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x560a41dc65a0 <col:33> 'int' lvalue ParmVar 0x560a41daced0 'i' 'int'
|   |   |     `-BinaryOperator 0x560a41dc6618 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x560a41dc6600 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x560a41dc65c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x560a41da9b20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x560a41dc65e0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x560a41dc6700 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a41dc66e0 <col:60> 'int' 0
|   |   `-CallExpr 0x560a41dc68a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x560a41dc6890 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a41dc6870 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a41881230 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a41dc68e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41dc6770 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x560a41dc6900 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41dc67a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x560a41dc6918 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a41dc67e0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x560a41dc6930 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a41dc6858 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a41dc6840 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a41dc6800 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x560a41dc6bc8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x560a41dc6bb0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x560a41dc6b98 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x560a41dc6b68 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x560a41dc6b10 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x560a41dc6ae0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x560a41dc6a90 <col:60, col:69> 'char const[48]' lvalue ->c 0x560a41db20f0
|             |   `-CXXMemberCallExpr 0x560a41dc6a70 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x560a41dc6a40 <col:60> '<bound member function type>' ->xanno 0x560a41da9738
|             |       `-CXXThisExpr 0x560a41dc6a30 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x560a41dc6af8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x560a41dc6ac0 <col:73> 'int' lvalue ParmVar 0x560a41daced0 'i' 'int'
|-CXXMethodDecl 0x560a41dad1d8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x560a41dad088 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x560a41dad100 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x560a41dc72b8 <col:41, line:577:5>
|   |-ParenExpr 0x560a41dc7048 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x560a41dc7018 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x560a41dc6d70 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x560a41dc6d40 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x560a41dc6c50 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x560a41dc6c38 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x560a41dc6bf8 <col:23> 'int' lvalue ParmVar 0x560a41dad088 'i' 'int'
|   |   |   | `-IntegerLiteral 0x560a41dc6c18 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x560a41dc6d20 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x560a41dc6d08 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x560a41dc6c70 <col:33> 'int' lvalue ParmVar 0x560a41dad088 'i' 'int'
|   |   |     `-BinaryOperator 0x560a41dc6ce8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x560a41dc6cd0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x560a41dc6c90 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x560a41da9b20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x560a41dc6cb0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x560a41dc6dd0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a41dc6db0 <col:60> 'int' 0
|   |   `-CallExpr 0x560a41dc6f78 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x560a41dc6f60 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a41dc6f40 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a41881230 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a41dc6fb8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41dc6e40 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x560a41dc6fd0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41dc6e78 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x560a41dc6fe8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a41dc6eb0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x560a41dc7000 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a41dc6f28 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a41dc6f10 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a41dc6ed0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x560a41dc7298 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x560a41dc7248 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x560a41dc7218 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x560a41dc71b8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x560a41dc7188 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x560a41dc7138 <col:47, col:56> 'char [48]' lvalue ->c 0x560a41db20f0
|     |     |   `-CXXMemberCallExpr 0x560a41dc7118 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x560a41dc70e8 <col:47> '<bound member function type>' ->xanno 0x560a41da98d8
|     |     |       `-CXXThisExpr 0x560a41dc70d8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x560a41dc71a0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x560a41dc7168 <col:60> 'int' lvalue ParmVar 0x560a41dad088 'i' 'int'
|     `-ImplicitCastExpr 0x560a41dc7280 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x560a41dc7260 <col:65> 'int32_t':'int' lvalue ParmVar 0x560a41dad100 'x' 'int32_t':'int'
|-CXXMethodDecl 0x560a41dad398 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x560a41dad2a0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x560a41dc79e8 <col:36, line:591:5>
|   |-ParenExpr 0x560a41dc7728 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x560a41dc76f8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x560a41dc7450 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x560a41dc7420 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x560a41dc7330 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x560a41dc7318 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x560a41dc72d8 <col:23> 'int' lvalue ParmVar 0x560a41dad2a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x560a41dc72f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x560a41dc7400 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x560a41dc73e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x560a41dc7350 <col:33> 'int' lvalue ParmVar 0x560a41dad2a0 'i' 'int'
|   |   |     `-BinaryOperator 0x560a41dc73c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x560a41dc73b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x560a41dc7370 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x560a41da9b20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x560a41dc7390 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x560a41dc74b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a41dc7490 <col:60> 'int' 0
|   |   `-CallExpr 0x560a41dc7658 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x560a41dc7640 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a41dc7620 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a41881230 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a41dc7698 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41dc7520 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x560a41dc76b0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41dc7558 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x560a41dc76c8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a41dc7590 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x560a41dc76e0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a41dc7608 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a41dc75f0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a41dc75b0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x560a41dc79d8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x560a41dc79c0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x560a41dc79a8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x560a41dc7978 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x560a41dc78f0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x560a41dc78c0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x560a41dc7870 <col:61, col:70> 'char const[48]' lvalue ->c 0x560a41db20f0
|             |   `-CXXMemberCallExpr 0x560a41dc7850 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x560a41dc7820 <col:61> '<bound member function type>' ->xanno 0x560a41da9738
|             |       `-CXXThisExpr 0x560a41dc7810 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x560a41dc78d8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x560a41dc78a0 <col:74> 'int' lvalue ParmVar 0x560a41dad2a0 'i' 'int'
|-CXXMethodDecl 0x560a41dad5e8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x560a41dad458 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x560a41dad4d0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x560a41dc80c8 <col:42, line:606:5>
|   |-ParenExpr 0x560a41dc7e58 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x560a41dc7e28 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x560a41dc7b80 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x560a41dc7b50 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x560a41dc7a60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x560a41dc7a48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x560a41dc7a08 <col:23> 'int' lvalue ParmVar 0x560a41dad458 'i' 'int'
|   |   |   | `-IntegerLiteral 0x560a41dc7a28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x560a41dc7b30 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x560a41dc7b18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x560a41dc7a80 <col:33> 'int' lvalue ParmVar 0x560a41dad458 'i' 'int'
|   |   |     `-BinaryOperator 0x560a41dc7af8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x560a41dc7ae0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x560a41dc7aa0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x560a41da9b20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x560a41dc7ac0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x560a41dc7be0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a41dc7bc0 <col:60> 'int' 0
|   |   `-CallExpr 0x560a41dc7d88 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x560a41dc7d70 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a41dc7d50 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a41881230 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a41dc7dc8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41dc7c50 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x560a41dc7de0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41dc7c88 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x560a41dc7df8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a41dc7cc0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x560a41dc7e10 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a41dc7d38 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a41dc7d20 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a41dc7ce0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x560a41dc80a8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x560a41dc8058 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x560a41dc8028 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x560a41dc7fc8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x560a41dc7f98 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x560a41dc7f48 <col:48, col:57> 'char [48]' lvalue ->c 0x560a41db20f0
|     |     |   `-CXXMemberCallExpr 0x560a41dc7f28 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x560a41dc7ef8 <col:48> '<bound member function type>' ->xanno 0x560a41da98d8
|     |     |       `-CXXThisExpr 0x560a41dc7ee8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x560a41dc7fb0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x560a41dc7f78 <col:61> 'int' lvalue ParmVar 0x560a41dad458 'i' 'int'
|     `-ImplicitCastExpr 0x560a41dc8090 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x560a41dc8070 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x560a41dad4d0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x560a41dad780 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x560a41dad6b0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x560a41dc8938 <col:33, line:620:5>
|   |-ParenExpr 0x560a41dc86b0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x560a41dc8680 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x560a41dc82d0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x560a41dc82a0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x560a41dc8140 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x560a41dc8128 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x560a41dc80e8 <col:23> 'int' lvalue ParmVar 0x560a41dad6b0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x560a41dc8108 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x560a41dc8280 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x560a41dc8268 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x560a41dc8160 <col:33> 'int' lvalue ParmVar 0x560a41dad6b0 'i' 'int'
|   |   |     `-BinaryOperator 0x560a41dc8248 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x560a41dc8230 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x560a41dc8180 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x560a41da9b20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x560a41dc8208 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x560a41dc81f0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x560a41dc81b8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x560a41dc8330 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a41dc8310 <col:79> 'int' 0
|   |   `-CallExpr 0x560a41dc85e0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x560a41dc85c8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a41dc85a8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a41881230 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a41dc8620 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41dc8418 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x560a41dc8638 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41dc8460 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x560a41dc8650 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a41dc8498 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x560a41dc8668 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a41dc8590 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a41dc8578 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a41dc8538 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x560a41dc8928 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x560a41dc8910 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x560a41dc88f8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x560a41dc88c8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x560a41dc8840 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x560a41dc8810 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x560a41dc87c0 <col:67, col:76> 'char const[48]' lvalue ->c 0x560a41db20f0
|             |   `-CXXMemberCallExpr 0x560a41dc87a0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x560a41dc8770 <col:67> '<bound member function type>' ->xanno 0x560a41da9738
|             |       `-CXXThisExpr 0x560a41dc8760 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x560a41dc8828 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x560a41dc87f0 <col:80> 'int' lvalue ParmVar 0x560a41dad6b0 'i' 'int'
|-CXXMethodDecl 0x560a41dad998 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x560a41dad840 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x560a41dad8c0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x560a41dc9160 <col:45, line:635:5>
|   |-ParenExpr 0x560a41dc8ea8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x560a41dc8e78 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x560a41dc8b40 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x560a41dc8b10 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x560a41dc89b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x560a41dc8998 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x560a41dc8958 <col:23> 'int' lvalue ParmVar 0x560a41dad840 'i' 'int'
|   |   |   | `-IntegerLiteral 0x560a41dc8978 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x560a41dc8af0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x560a41dc8ad8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x560a41dc89d0 <col:33> 'int' lvalue ParmVar 0x560a41dad840 'i' 'int'
|   |   |     `-BinaryOperator 0x560a41dc8ab8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x560a41dc8aa0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x560a41dc89f0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x560a41da9b20 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x560a41dc8a78 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x560a41dc8a60 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x560a41dc8a28 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x560a41dc8ba0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x560a41dc8b80 <col:79> 'int' 0
|   |   `-CallExpr 0x560a41dc8dd8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x560a41dc8dc0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a41dc8da0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a41881230 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x560a41dc8e18 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41dc8c10 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x560a41dc8e30 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x560a41dc8c58 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x560a41dc8e48 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x560a41dc8c90 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x560a41dc8e60 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x560a41dc8d88 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x560a41dc8d70 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x560a41dc8d28 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x560a41dc9140 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x560a41dc90a8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x560a41dc9078 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x560a41dc9018 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x560a41dc8fe8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x560a41dc8f98 <col:54, col:63> 'char [48]' lvalue ->c 0x560a41db20f0
|     |     |   `-CXXMemberCallExpr 0x560a41dc8f78 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x560a41dc8f48 <col:54> '<bound member function type>' ->xanno 0x560a41da98d8
|     |     |       `-CXXThisExpr 0x560a41dc8f38 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x560a41dc9000 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x560a41dc8fc8 <col:67> 'int' lvalue ParmVar 0x560a41dad840 'i' 'int'
|     `-CXXConstCastExpr 0x560a41dc9110 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x560a41dc90f8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x560a41dc90c0 <col:91> 'const void *' lvalue ParmVar 0x560a41dad8c0 'x' 'const void *'
|-CXXMethodDecl 0x560a41dada68 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x560a41dc91e8 <col:34, line:640:5>
|   `-ReturnStmt 0x560a41dc91d8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x560a41dc91c0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x560a41dc9190 <col:16> 'Packet *' lvalue ->_data_packet 0x560a41db2c38
|         `-CXXThisExpr 0x560a41dc9180 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x560a41dadba8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x560a41dadb18 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x560a41dc2328 <col:46> 'bool' true
|-CXXMethodDecl 0x560a41dadd28 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x560a41dadc60 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x560a41daddd0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x560a41dae580 <line:660:22> "" ""
| |-EnumConstantDecl 0x560a41daded0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x560a41dae5f0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41dadeb0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x560a41dade90 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x560a41da2fd0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x560a41dadf60 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x560a41dae608 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41dadf40 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x560a41dadf20 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x560a41da3060 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x560a41dadff0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x560a41dae620 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41dadfd0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x560a41dadfb0 <col:21> 'int' 0
| |-EnumConstantDecl 0x560a41dae080 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x560a41dae638 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41dae060 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x560a41dae040 <col:19> 'int' 16
| |-EnumConstantDecl 0x560a41dae110 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x560a41dae650 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41dae0f0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x560a41dae0d0 <col:21> 'int' 16
| |-EnumConstantDecl 0x560a41dae1a0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x560a41dae668 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41dae180 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x560a41dae160 <col:19> 'int' 32
| |-EnumConstantDecl 0x560a41dae230 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x560a41dae680 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41dae210 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x560a41dae1f0 <col:19> 'int' EnumConstant 0x560a41dae080 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x560a41dae2c0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x560a41dae698 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41dae2a0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x560a41dae280 <col:19> 'int' EnumConstant 0x560a41dae1a0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x560a41dae390 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x560a41dae6b0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41dae370 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x560a41dae350 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x560a41dae310 <col:23> 'int' EnumConstant 0x560a41dae2c0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x560a41dae330 <col:40> 'int' 2
| |-EnumConstantDecl 0x560a41dae460 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x560a41dae6c8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41dae440 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x560a41dae420 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x560a41dae3e0 <col:23> 'int' EnumConstant 0x560a41dae2c0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x560a41dae400 <col:40> 'int' 4
| `-EnumConstantDecl 0x560a41dae530 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x560a41dae6e0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a41dae510 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x560a41dae4f0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x560a41dae4b0 <col:23> 'int' EnumConstant 0x560a41dae2c0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x560a41dae4d0 <col:40> 'int' 8
|-CXXMethodDecl 0x560a41dae720 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x560a41dae7c0 <col:68> "" ""
|-CXXMethodDecl 0x560a41dae858 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x560a41dae8f8 <col:45> "" ""
|-CXXMethodDecl 0x560a41dae990 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x560a41daea30 <col:57> "" ""
|-CXXMethodDecl 0x560a41daeac8 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x560a41daeb68 <col:45> "" ""
|-CXXMethodDecl 0x560a41daec00 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x560a41daeca0 <col:57> "" ""
|-CXXMethodDecl 0x560a41daed30 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x560a41daedd0 <col:51> "" ""
|-CXXMethodDecl 0x560a41daee60 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x560a41daef00 <col:63> "" ""
|-CXXMethodDecl 0x560a41daef90 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x560a41daf030 <col:53> "" ""
|-CXXMethodDecl 0x560a41daf0c0 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x560a41daf160 <col:65> "" ""
|-CXXMethodDecl 0x560a41daf278 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x560a41daf1e8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x560a41daf320 <col:61> "" ""
|-CXXMethodDecl 0x560a41daf4b8 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x560a41daf3a8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x560a41daf420 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x560a41daf568 <col:67> "" ""
|-CXXMethodDecl 0x560a41daf680 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x560a41daf5f0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x560a41daf728 <col:63> "" ""
|-CXXMethodDecl 0x560a41daf8c0 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x560a41daf7b0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x560a41daf828 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x560a41daf970 <col:69> "" ""
|-CXXMethodDecl 0x560a41dafa88 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x560a41daf9f8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x560a41dafb30 <col:63> "" ""
|-CXXMethodDecl 0x560a41dafcc8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x560a41dafbb8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x560a41dafc30 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x560a41dafd78 <col:69> "" ""
|-CXXMethodDecl 0x560a41dafe90 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x560a41dafe00 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x560a41daff38 <col:62> "" ""
|-CXXMethodDecl 0x560a41db00d0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x560a41daffc0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x560a41db0038 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x560a41db0180 <col:68> "" ""
|-CXXMethodDecl 0x560a41db0298 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x560a41db0208 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x560a41db0340 <col:63> "" ""
|-CXXMethodDecl 0x560a41db04d8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x560a41db03c8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x560a41db0440 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x560a41db0588 <col:69> "" ""
|-CXXMethodDecl 0x560a41db0618 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x560a41db06b8 <col:64> "" ""
|-CXXMethodDecl 0x560a41db0748 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x560a41db07e8 <col:52> "" ""
|-CXXMethodDecl 0x560a41db0878 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x560a41db0918 <col:67> "" ""
|-CXXMethodDecl 0x560a41db09a8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x560a41db0a48 <col:55> "" ""
|-CXXMethodDecl 0x560a41db0b60 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x560a41db0ad0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x560a41db0c08 <col:58> "" ""
|-CXXMethodDecl 0x560a41db0da0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x560a41db0c90 <col:33> col:36 'int'
| |-ParmVarDecl 0x560a41db0d08 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x560a41db0e50 <col:62> "" ""
|-CXXMethodDecl 0x560a41db0f68 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x560a41db0ed8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x560a41db1010 <col:58> "" ""
|-CXXMethodDecl 0x560a41db11a8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x560a41db1098 <col:33> col:36 'int'
| |-ParmVarDecl 0x560a41db1110 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x560a41db1258 <col:62> "" ""
|-CXXMethodDecl 0x560a41db1370 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x560a41db12e0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x560a41db1418 <col:60> "" ""
|-CXXMethodDecl 0x560a41db15b0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x560a41db14a0 <col:34> col:37 'int'
| |-ParmVarDecl 0x560a41db1518 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x560a41db1660 <col:64> "" ""
|-CXXMethodDecl 0x560a41db1778 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x560a41db16e8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x560a41db1820 <col:58> "" ""
|-CXXMethodDecl 0x560a41db19b8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x560a41db18a8 <col:33> col:36 'int'
| |-ParmVarDecl 0x560a41db1920 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x560a41db1a68 <col:62> "" ""
|-CXXMethodDecl 0x560a41db1b80 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x560a41db1af0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x560a41db1c28 <col:59> "" ""
|-CXXMethodDecl 0x560a41db1dc0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x560a41db1cb0 <col:33> col:36 'int'
| |-ParmVarDecl 0x560a41db1d28 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x560a41db1e70 <col:63> "" ""
|-AccessSpecDecl 0x560a41db1ee0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x560a41db1f08 prev 0x560a41da9610 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x560a41db2000 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x560a41db20f0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x560a41db21a0 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x560a41db2328 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x560a41db24a8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x560a41db2628 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x560a41dc9368 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x560a41dc9c68 <col:11>
| |-CXXDestructorDecl 0x560a41dc94d0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x560a41dc9608 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x560a41dc9608
| | `-ParmVarDecl 0x560a41dc9718 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x560a41dc97b8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x560a41dc97b8
| | `-ParmVarDecl 0x560a41dc98c8 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x560a41dcc5f8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x560a41dcc708 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x560a41dcc988 <col:11>
| |   `-ReturnStmt 0x560a41dcc978 <col:11>
| |     `-UnaryOperator 0x560a41dcc960 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x560a41dcc950 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x560a41dcc778 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x560a41dcc778
|   `-ParmVarDecl 0x560a41dcc888 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x560a41db2690 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x560a41db27a8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x560a41db2848 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x560a41db28b0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x560a41db2918 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x560a41db2980 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x560a41db29e0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x560a41db2aa0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x560a41db2b00 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x560a41db2b60 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x560a41dc9278 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x560a41db2848 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x560a41dc9c78 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x560a41dc9cd0 <col:12>
| |-CXXConstructorDecl 0x560a41dc9938 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x560a41dc9938
| | `-ParmVarDecl 0x560a41dc9a48 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x560a41dc9ae8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x560a41dc9ae8
| | `-ParmVarDecl 0x560a41dc9bf8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x560a41dcbce0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x560a41db2bd8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x560a41db2c38 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x560a41db2ca0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x560a41db2d08 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x560a41db2d70 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x560a41db2dd8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x560a41db2e38 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x560a41db2e98 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x560a41db2f00 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x560a41db2f88 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x560a41db2bd8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x560a41dc9210 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x560a41db2e38 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x560a41dc9ce0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x560a41dc9d40 <col:21, line:755:5>
|-CXXConstructorDecl 0x560a41db3128 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x560a41db3068 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x560a41dc14c0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x560a41dc16a8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x560a41dc15b0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x560a41dc1978 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x560a41dc1760 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x560a41dc17d8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x560a41dc1850 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a41dc1b98 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x560a41dc1a48 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x560a41dc1ac0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x560a41dc1e68 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x560a41dc1c58 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x560a41dc1cd0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x560a41dc1d48 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x560a41dc1fc0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x560a41dc1f30 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a41dc2108 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x560a41dc2078 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x560a41dc2200 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_ip
     0:0-3 |   unsigned int ip_hl
     0:4-7 |   unsigned int ip_v
         1 |   uint8_t ip_tos
         2 |   uint16_t ip_len
         4 |   uint16_t ip_id
         6 |   uint16_t ip_off
         8 |   uint8_t ip_ttl
         9 |   uint8_t ip_p
        10 |   uint16_t ip_sum
        12 |   struct in_addr ip_src
        12 |     in_addr_t s_addr
        16 |   struct in_addr ip_dst
        16 |     in_addr_t s_addr
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41aad728 </usr/include/netinet/in.h:31:1, line:34:3> line:31:8 struct in_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x560a41aad848 <col:1, col:8> col:8 implicit struct in_addr
|-FieldDecl 0x560a41aad910 <line:33:5, col:15> col:15 referenced s_addr 'in_addr_t':'unsigned int'
|-CXXConstructorDecl 0x560a41d99b60 <line:31:8> col:8 implicit used in_addr 'void () noexcept' inline default trivial
| `-CompoundStmt 0x560a41d9bce8 <col:8>
|-CXXConstructorDecl 0x560a41d99c68 <col:8> col:8 implicit used constexpr in_addr 'void (const in_addr &) noexcept' inline default trivial
| |-ParmVarDecl 0x560a41d99d78 <col:8> col:8 used 'const in_addr &'
| |-CXXCtorInitializer Field 0x560a41aad910 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x560a41f79840 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x560a41f79810 <col:8> 'const in_addr_t':'const unsigned int' lvalue .s_addr 0x560a41aad910
| |     `-DeclRefExpr 0x560a41f797f0 <col:8> 'const in_addr' lvalue ParmVar 0x560a41d99d78 '' 'const in_addr &'
| `-CompoundStmt 0x560a41f79888 <col:8>
|-CXXConstructorDecl 0x560a41d99e18 <col:8> col:8 implicit used constexpr in_addr 'void (in_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x560a41d99f28 <col:8> col:8 used 'in_addr &&'
| |-CXXCtorInitializer Field 0x560a41aad910 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x560a41d9bf00 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x560a41d9bed0 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x560a41aad910
| |     `-CXXStaticCastExpr 0x560a41d9bea0 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
| |       `-DeclRefExpr 0x560a41d9be70 <col:8> 'in_addr' lvalue ParmVar 0x560a41d99f28 '' 'in_addr &&'
| `-CompoundStmt 0x560a41d9bf48 <col:8>
`-CXXDestructorDecl 0x560a41d9c180 <col:8> col:8 implicit referenced ~in_addr 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.in_addr = type { i32 }
  NonVirtualBaseLLVMType:%struct.in_addr = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41d93280 <../dummy_inc/clicknet/ip.h:23:1, line:52:1> line:23:8 struct click_ip definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x560a41d93398 <col:1, col:8> col:8 implicit struct click_ip
|-FieldDecl 0x560a41d93480 <line:28:5, col:22> col:14 referenced ip_hl 'unsigned int'
| `-ConstantExpr 0x560a41d93460 <col:22> 'int' Int: 4
|   `-IntegerLiteral 0x560a41d93428 <col:22> 'int' 4
|-FieldDecl 0x560a41d93528 <line:29:5, col:21> col:14 ip_v 'unsigned int'
| `-ConstantExpr 0x560a41d93508 <col:21> 'int' Int: 4
|   `-IntegerLiteral 0x560a41d934d0 <col:21> 'int' 4
|-FieldDecl 0x560a41d93588 <line:33:5, col:13> col:13 ip_tos 'uint8_t':'unsigned char'
|-FieldDecl 0x560a41d935e8 <line:40:5, col:14> col:14 ip_len 'uint16_t':'unsigned short'
|-FieldDecl 0x560a41d93648 <line:41:5, col:14> col:14 ip_id 'uint16_t':'unsigned short'
|-FieldDecl 0x560a41d936a8 <line:42:5, col:14> col:14 ip_off 'uint16_t':'unsigned short'
|-FieldDecl 0x560a41d93708 <line:47:5, col:13> col:13 ip_ttl 'uint8_t':'unsigned char'
|-FieldDecl 0x560a41d93768 <line:48:5, col:13> col:13 referenced ip_p 'uint8_t':'unsigned char'
|-FieldDecl 0x560a41d937c8 <line:49:5, col:14> col:14 ip_sum 'uint16_t':'unsigned short'
|-FieldDecl 0x560a41d93838 <line:50:5, col:20> col:20 referenced ip_src 'struct in_addr':'in_addr'
`-FieldDecl 0x560a41d938a8 <line:51:5, col:20> col:20 referenced ip_dst 'struct in_addr':'in_addr'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  NonVirtualBaseLLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
]>

*** Dumping AST Record Layout
         0 | struct click_tcp
         0 |   uint16_t th_sport
         2 |   uint16_t th_dport
         4 |   tcp_seq_t th_seq
         8 |   tcp_seq_t th_ack
    12:0-3 |   unsigned int th_flags2
    12:4-7 |   unsigned int th_off
        13 |   uint8_t th_flags
        14 |   uint16_t th_win
        16 |   uint16_t th_sum
        18 |   uint16_t th_urp
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41d95df8 <../dummy_inc/clicknet/tcp.h:24:1, line:51:1> line:24:8 struct click_tcp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x560a41d95f18 <col:1, col:8> col:8 implicit struct click_tcp
|-FieldDecl 0x560a41d95fb8 <line:25:5, col:14> col:14 th_sport 'uint16_t':'unsigned short'
|-FieldDecl 0x560a41d96018 <line:26:5, col:14> col:14 referenced th_dport 'uint16_t':'unsigned short'
|-FieldDecl 0x560a41d960a0 <line:27:5, col:15> col:15 th_seq 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x560a41d96100 <line:28:5, col:15> col:15 th_ack 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x560a41d961a8 <line:30:5, col:26> col:14 th_flags2 'unsigned int'
| `-ConstantExpr 0x560a41d96188 <col:26> 'int' Int: 4
|   `-IntegerLiteral 0x560a41d96150 <col:26> 'int' 4
|-FieldDecl 0x560a41d96250 <line:31:5, col:23> col:14 th_off 'unsigned int'
| `-ConstantExpr 0x560a41d96230 <col:23> 'int' Int: 4
|   `-IntegerLiteral 0x560a41d961f8 <col:23> 'int' 4
|-FieldDecl 0x560a41d962b0 <line:39:5, col:13> col:13 th_flags 'uint8_t':'unsigned char'
|-FieldDecl 0x560a41d96310 <line:48:5, col:14> col:14 th_win 'uint16_t':'unsigned short'
|-FieldDecl 0x560a41d96370 <line:49:5, col:14> col:14 th_sum 'uint16_t':'unsigned short'
`-FieldDecl 0x560a41d963d0 <line:50:5, col:14> col:14 th_urp 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
]>

*** Dumping AST Record Layout
         0 | class IPFlowID
         0 |   class IPAddress _saddr
         0 |     uint32_t _addr
         4 |   class IPAddress _daddr
         4 |     uint32_t _addr
         8 |   uint16_t _sport
        10 |   uint16_t _dport
           | [sizeof=12, dsize=12, align=4,
           |  nvsize=12, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41d96800 prev 0x560a419ffea8 <../dummy_inc/click/ipaddress.hh:15:1, line:154:1> line:15:7 referenced class IPAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x560a41d968f8 <col:1, col:7> col:7 implicit referenced class IPAddress
|-AccessSpecDecl 0x560a41d96988 <col:19, col:25> col:19 public
|-TypedefDecl 0x560a41d969c0 <line:17:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x560a4193a490 'uninitialized_type'
|   `-CXXRecord 0x560a4193a3f8 'uninitialized_type'
|-CXXConstructorDecl 0x560a41d96a50 <line:20:5, line:22:5> line:20:12 used IPAddress 'void ()' inline
| |-CXXCtorInitializer Field 0x560a41d99170 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x560a41d99218 <line:21:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x560a41d991d8 <col:10> 'int' 0
| `-CompoundStmt 0x560a41d99260 <col:13, line:22:5>
|-CXXConstructorDecl 0x560a41d96ba0 <line:25:5, line:27:5> line:25:12 used IPAddress 'void (unsigned int)' inline
| |-ParmVarDecl 0x560a41d96b10 <col:22, col:31> col:31 used x 'unsigned int'
| |-CXXCtorInitializer Field 0x560a41d99170 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x560a41d992b0 <line:26:10> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x560a41d99270 <col:10> 'unsigned int' lvalue ParmVar 0x560a41d96b10 'x' 'unsigned int'
| `-CompoundStmt 0x560a41d992f8 <col:13, line:27:5>
|-CXXConstructorDecl 0x560a41d96cf8 <line:29:5, line:31:5> line:29:21 IPAddress 'void (int)' inline
| |-ParmVarDecl 0x560a41d96c68 <col:31, col:35> col:35 used x 'int'
| |-CXXCtorInitializer Field 0x560a41d99170 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x560a41d99360 <line:30:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x560a41d99348 <col:10> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x560a41d99308 <col:10> 'int' lvalue ParmVar 0x560a41d96c68 'x' 'int'
| `-CompoundStmt 0x560a41d993a8 <col:13, line:31:5>
|-CXXConstructorDecl 0x560a41d96e50 <line:33:5, line:35:5> line:33:21 IPAddress 'void (unsigned long)' inline
| |-ParmVarDecl 0x560a41d96dc0 <col:31, col:45> col:45 used x 'unsigned long'
| |-CXXCtorInitializer Field 0x560a41d99170 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x560a41d99410 <line:34:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x560a41d993f8 <col:10> 'unsigned long' <LValueToRValue>
| |     `-DeclRefExpr 0x560a41d993b8 <col:10> 'unsigned long' lvalue ParmVar 0x560a41d96dc0 'x' 'unsigned long'
| `-CompoundStmt 0x560a41d99458 <col:13, line:35:5>
|-CXXConstructorDecl 0x560a41d96fa8 <line:37:5, line:39:5> line:37:21 IPAddress 'void (long)' inline
| |-ParmVarDecl 0x560a41d96f18 <col:31, col:36> col:36 used x 'long'
| |-CXXCtorInitializer Field 0x560a41d99170 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x560a41d994c0 <line:38:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x560a41d994a8 <col:10> 'long' <LValueToRValue>
| |     `-DeclRefExpr 0x560a41d99468 <col:10> 'long' lvalue ParmVar 0x560a41d96f18 'x' 'long'
| `-CompoundStmt 0x560a41d99508 <col:13, line:39:5>
|-CXXConstructorDecl 0x560a41d97168 <line:42:5, line:44:5> line:42:12 used IPAddress 'void (struct in_addr)' inline
| |-ParmVarDecl 0x560a41d97078 <col:22, col:37> col:37 used x 'struct in_addr':'in_addr'
| |-CXXCtorInitializer Field 0x560a41d99170 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x560a41d99588 <line:43:10, col:12> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x560a41d99538 <col:10, col:12> 'in_addr_t':'unsigned int' lvalue .s_addr 0x560a41aad910
| |     `-DeclRefExpr 0x560a41d99518 <col:10> 'struct in_addr':'in_addr' lvalue ParmVar 0x560a41d97078 'x' 'struct in_addr':'in_addr'
| `-CompoundStmt 0x560a41d995d0 <col:20, line:44:5>
|-CXXConstructorDecl 0x560a41d972f8 <line:50:5, line:56:5> line:50:14 IPAddress 'void (const unsigned char *)'
| |-ParmVarDecl 0x560a41d97230 <col:24, col:45> col:45 used data 'const unsigned char *'
| `-CompoundStmt 0x560a41d99738 <col:51, line:56:5>
|   `-BinaryOperator 0x560a41d99718 <line:52:2, col:52> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x560a41d995f0 <col:2> 'uint32_t':'unsigned int' lvalue ->_addr 0x560a41d99170
|     | `-CXXThisExpr 0x560a41d995e0 <col:2> 'IPAddress *' implicit this
|     `-ImplicitCastExpr 0x560a41d99700 <col:10, col:52> 'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x560a41d996e8 <col:10, col:52> 'const unsigned int' lvalue prefix '*' cannot overflow
|         `-ParenExpr 0x560a41d996c8 <col:11, col:52> 'const unsigned int *'
|           `-CXXReinterpretCastExpr 0x560a41d99698 <col:12, col:51> 'const unsigned int *' reinterpret_cast<const unsigned int *> <BitCast>
|             `-ImplicitCastExpr 0x560a41d99680 <col:47> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|               `-DeclRefExpr 0x560a41d99620 <col:47> 'const unsigned char *' lvalue ParmVar 0x560a41d97230 'data' 'const unsigned char *'
|-CXXConstructorDecl 0x560a41d97448 <line:63:5, col:39> col:14 IPAddress 'void (const String &)'
| `-ParmVarDecl 0x560a41d973b8 <col:24, col:38> col:38 x 'const String &'
|-CXXConstructorDecl 0x560a41d97598 <line:66:5, line:68:5> line:66:12 IPAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x560a41d97508 <col:22, col:48> col:48 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x560a41d997a8 <col:56, line:68:5>
|   `-CStyleCastExpr 0x560a41d99780 <line:67:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x560a41d99750 <col:9> 'const uninitialized_type' lvalue ParmVar 0x560a41d97508 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x560a41d97728 <line:78:5, col:48> col:22 make_prefix 'IPAddress (int)' static
| `-ParmVarDecl 0x560a41d97660 <col:34, col:38> col:38 prefix_len 'int'
|-CXXMethodDecl 0x560a41d97818 <line:81:5, line:83:5> line:81:29 make_broadcast 'IPAddress ()' static inline
| `-CompoundStmt 0x560a41d9a368 <col:46, line:83:5>
|   `-ReturnStmt 0x560a41d9a358 <line:82:2, col:29>
|     `-ExprWithCleanups 0x560a41d9a340 <col:9, col:29> 'IPAddress'
|       `-CXXConstructExpr 0x560a41d9a310 <col:9, col:29> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x560a41d9a1c8 <col:9, col:29> 'IPAddress' xvalue
|           `-CXXFunctionalCastExpr 0x560a41d9a0b0 <col:9, col:29> 'IPAddress' functional cast to class IPAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x560a41d99f98 <col:9, col:29> 'IPAddress' 'void (unsigned int)'
|               `-IntegerLiteral 0x560a41d997d0 <col:19> 'unsigned int' 4294967295
|-CXXMethodDecl 0x560a41d97908 <line:86:5, line:88:5> line:86:17 empty 'bool () const' inline
| `-CompoundStmt 0x560a41d9a418 <col:31, line:88:5>
|   `-ReturnStmt 0x560a41d9a408 <line:87:2, col:10>
|     `-UnaryOperator 0x560a41d9a3f0 <col:9, col:10> 'bool' prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x560a41d9a3d8 <col:10> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x560a41d9a3c0 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x560a41d9a390 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x560a41d99170
|             `-CXXThisExpr 0x560a41d9a380 <col:10> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x560a41d979c8 <line:91:5, line:93:5> line:91:21 used addr 'uint32_t () const' inline
| `-CompoundStmt 0x560a41d9a498 <col:34, line:93:5>
|   `-ReturnStmt 0x560a41d9a488 <line:92:2, col:9>
|     `-ImplicitCastExpr 0x560a41d9a470 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x560a41d9a440 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x560a41d99170
|         `-CXXThisExpr 0x560a41d9a430 <col:9> 'const IPAddress *' implicit this
|-CXXConversionDecl 0x560a41d97a98 <line:99:5, line:101:5> line:99:12 used operator unsigned int 'uint32_t () const' inline
| `-CompoundStmt 0x560a41d9a518 <col:38, line:101:5>
|   `-ReturnStmt 0x560a41d9a508 <line:100:2, col:9>
|     `-ImplicitCastExpr 0x560a41d9a4f0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x560a41d9a4c0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x560a41d99170
|         `-CXXThisExpr 0x560a41d9a4b0 <col:9> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x560a41d97b68 <line:106:5, line:108:5> line:106:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x560a41d9a788 <col:38, line:108:5>
|   `-ReturnStmt 0x560a41d9a778 <line:107:2, col:58>
|     `-BinaryOperator 0x560a41d9a758 <col:9, col:58> 'bool' '=='
|       |-ParenExpr 0x560a41d9a670 <col:9, col:36> 'unsigned int'
|       | `-BinaryOperator 0x560a41d9a650 <col:10, col:35> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x560a41d9a638 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x560a41d9a540 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x560a41d99170
|       |   |   `-CXXThisExpr 0x560a41d9a530 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x560a41d9a610 <col:18, col:35> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x560a41d9a5f8 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x560a41d9a5d8 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x560a41ab4d38 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x560a41d9a5b8 <col:24> 'unsigned int' 4026531840
|       `-CallExpr 0x560a41d9a730 <col:41, col:58> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x560a41d9a718 <col:41> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x560a41d9a6f8 <col:41> 'uint32_t (uint32_t) throw()' lvalue Function 0x560a41ab4d38 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x560a41d9a6d8 <col:47> 'unsigned int' 3758096384
|-CXXMethodDecl 0x560a41d97c28 <line:110:5, line:112:5> line:110:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x560a41d9a9f8 <col:39, line:112:5>
|   `-ReturnStmt 0x560a41d9a9e8 <line:111:2, col:56>
|     `-BinaryOperator 0x560a41d9a9c8 <col:9, col:56> 'bool' '=='
|       |-ParenExpr 0x560a41d9a8e0 <col:9, col:35> 'unsigned int'
|       | `-BinaryOperator 0x560a41d9a8c0 <col:10, col:34> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x560a41d9a8a8 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x560a41d9a7b0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x560a41d99170
|       |   |   `-CXXThisExpr 0x560a41d9a7a0 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x560a41d9a880 <col:18, col:34> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x560a41d9a868 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x560a41d9a848 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x560a41ab4d38 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x560a41d9a828 <col:24> 'unsigned int' 4294901760
|       `-CallExpr 0x560a41d9a9a0 <col:40, col:56> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x560a41d9a988 <col:40> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x560a41d9a968 <col:40> 'uint32_t (uint32_t) throw()' lvalue Function 0x560a41ab4d38 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x560a41d9a948 <col:46> 'unsigned int' 2851995648
|-CXXMethodDecl 0x560a41d97d58 <line:114:5, col:37> col:27 used in_addr 'struct in_addr () const' inline
|-CXXConversionDecl 0x560a41d97e60 <line:115:5, col:38> col:12 operator in_addr 'struct in_addr () const' inline
|-CXXMethodDecl 0x560a41d97f70 <line:117:5, col:32> col:27 data 'unsigned char *()' inline
|-CXXMethodDecl 0x560a41d98060 <line:118:5, col:40> col:33 data 'const unsigned char *() const' inline
|-CXXMethodDecl 0x560a41d98120 <line:120:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x560a41d981e8 <line:122:5, col:30> col:9 mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x560a41d983e8 <line:123:5, col:64> col:17 matches_prefix 'bool (IPAddress, IPAddress) const' inline
| |-ParmVarDecl 0x560a41d98298 <col:32, col:42> col:42 addr 'IPAddress'
| `-ParmVarDecl 0x560a41d98310 <col:48, col:58> col:58 mask 'IPAddress'
|-CXXMethodDecl 0x560a41d98568 <line:124:5, col:50> col:17 mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x560a41d984a8 <col:34, col:44> col:44 mask 'IPAddress'
|-CXXMethodDecl 0x560a41d986b0 <line:125:5, col:52> col:17 mask_more_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x560a41d98620 <col:36, col:46> col:46 mask 'IPAddress'
|-CXXMethodDecl 0x560a41d98858 <line:137:5, col:43> col:23 operator&= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x560a41d98768 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x560a41d989a0 <line:138:5, col:43> col:23 operator|= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x560a41d98910 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x560a41d98ae8 <line:139:5, col:43> col:23 operator^= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x560a41d98a58 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x560a41d98bb0 <line:141:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x560a41d98c70 <line:142:5, col:27> col:12 unparse_mask 'String () const'
|-CXXMethodDecl 0x560a41d98de8 <line:143:5, col:41> col:12 unparse_with_mask 'String (IPAddress) const'
| `-ParmVarDecl 0x560a41d98d20 <col:30> col:39 'IPAddress'
|-CXXMethodDecl 0x560a41d98eb0 <line:145:5, col:23> col:19 s 'String () const' inline
|-CXXConversionDecl 0x560a41d98f98 <line:146:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x560a41d99040 <col:51> "" ""
|-TypedefDecl 0x560a41d990e0 <line:148:5, col:23> col:23 parameter_type 'IPAddress'
| `-RecordType 0x560a419fff40 'IPAddress'
|   `-CXXRecord 0x560a41d96800 'IPAddress'
|-AccessSpecDecl 0x560a41d99138 <line:150:3, col:10> col:3 private
|-FieldDecl 0x560a41d99170 <line:152:5, col:14> col:14 referenced _addr 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x560a41d99818 <line:15:7> col:7 implicit used constexpr IPAddress 'void (const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x560a41d99928 <col:7> col:7 used 'const IPAddress &'
| |-CXXCtorInitializer Field 0x560a41d99170 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x560a41f5e608 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x560a41f5e5c0 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x560a41d99170
| |     `-DeclRefExpr 0x560a41f5e5a0 <col:7> 'const IPAddress' lvalue ParmVar 0x560a41d99928 '' 'const IPAddress &'
| `-CompoundStmt 0x560a41f5e650 <col:7>
|-CXXConstructorDecl 0x560a41d999c8 <col:7> col:7 implicit used constexpr IPAddress 'void (IPAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x560a41d99ad8 <col:7> col:7 used 'IPAddress &&'
| |-CXXCtorInitializer Field 0x560a41d99170 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x560a41d9a2b8 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x560a41d9a270 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x560a41d99170
| |     `-CXXStaticCastExpr 0x560a41d9a240 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
| |       `-DeclRefExpr 0x560a41d9a210 <col:7> 'IPAddress' lvalue ParmVar 0x560a41d99ad8 '' 'IPAddress &&'
| `-CompoundStmt 0x560a41d9a300 <col:7>
|-CXXDestructorDecl 0x560a41d99fc8 <col:7> col:7 implicit referenced ~IPAddress 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x560a41f5eef8 <col:7> col:7 implicit used operator= 'IPAddress &(const IPAddress &) noexcept' inline default trivial
| |-ParmVarDecl 0x560a41f5f008 <col:7> col:7 used 'const IPAddress &'
| `-CompoundStmt 0x560a41f5f360 <col:7>
|   |-BinaryOperator 0x560a41f5f308 <col:7> 'uint32_t':'unsigned int' lvalue '='
|   | |-MemberExpr 0x560a41f5f2c0 <col:7> 'uint32_t':'unsigned int' lvalue ->_addr 0x560a41d99170
|   | | `-CXXThisExpr 0x560a41f5f2b0 <col:7> 'IPAddress *' this
|   | `-ImplicitCastExpr 0x560a41f5f2f0 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
|   |   `-MemberExpr 0x560a41f5f280 <col:7> 'const uint32_t':'const unsigned int' lvalue ._addr 0x560a41d99170
|   |     `-DeclRefExpr 0x560a41f5f260 <col:7> 'const IPAddress' lvalue ParmVar 0x560a41f5f008 '' 'const IPAddress &'
|   `-ReturnStmt 0x560a41f5f350 <col:7>
|     `-UnaryOperator 0x560a41f5f338 <col:7> 'IPAddress' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x560a41f5f328 <col:7> 'IPAddress *' this
`-CXXMethodDecl 0x560a41f5f078 <col:7> col:7 implicit used operator= 'IPAddress &(IPAddress &&) noexcept' inline default trivial
  |-ParmVarDecl 0x560a41f5f188 <col:7> col:7 used 'IPAddress &&'
  `-CompoundStmt 0x560a41f7a4a8 <col:7>
    |-BinaryOperator 0x560a41f7a450 <col:7> 'uint32_t':'unsigned int' lvalue '='
    | |-MemberExpr 0x560a41f7a408 <col:7> 'uint32_t':'unsigned int' lvalue ->_addr 0x560a41d99170
    | | `-CXXThisExpr 0x560a41f7a3f8 <col:7> 'IPAddress *' this
    | `-ImplicitCastExpr 0x560a41f7a438 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
    |   `-MemberExpr 0x560a41f7a3c8 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x560a41d99170
    |     `-CXXStaticCastExpr 0x560a41f7a398 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
    |       `-DeclRefExpr 0x560a41f7a368 <col:7> 'IPAddress' lvalue ParmVar 0x560a41f5f188 '' 'IPAddress &&'
    `-ReturnStmt 0x560a41f7a498 <col:7>
      `-UnaryOperator 0x560a41f7a480 <col:7> 'IPAddress' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x560a41f7a470 <col:7> 'IPAddress *' this

Layout: <CGRecordLayout
  LLVMType:%class.IPAddress = type { i32 }
  NonVirtualBaseLLVMType:%class.IPAddress = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41f5bbc8 <../dummy_inc/click/ipflowid.hh:9:1, line:143:1> line:9:7 referenced class IPFlowID definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x560a41f5bce8 <col:1, col:7> col:7 implicit referenced class IPFlowID
|-AccessSpecDecl 0x560a41f5bd78 <col:18, col:24> col:18 public
|-TypedefDecl 0x560a41f5bdb0 <line:11:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x560a4193a490 'uninitialized_type'
|   `-CXXRecord 0x560a4193a3f8 'uninitialized_type'
|-CXXConstructorDecl 0x560a41f5be70 <line:17:5, line:19:5> line:17:5 IPFlowID 'void ()'
| |-CXXCtorInitializer Field 0x560a41f5dd58 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x560a41f5e328 <line:18:4, col:11> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x560a41f5ddb8 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x560a41f5e390 <col:14, col:21> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x560a41f5de18 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x560a41f5e420 <col:31> 'uint16_t':'unsigned short' <IntegralCast>
| |   `-IntegerLiteral 0x560a41f5e3e0 <col:31> 'int' 0
| |-CXXCtorInitializer Field 0x560a41f5de78 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x560a41f5e4a0 <col:42> 'uint16_t':'unsigned short' <IntegralCast>
| |   `-IntegerLiteral 0x560a41f5e460 <col:42> 'int' 0
| `-CompoundStmt 0x560a41f5e500 <col:45, line:19:5>
|-CXXConstructorDecl 0x560a41f5c1d8 <line:26:5, line:28:5> line:26:5 used IPFlowID 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
| |-ParmVarDecl 0x560a41f5bf28 <col:14, col:24> col:24 used saddr 'IPAddress'
| |-ParmVarDecl 0x560a41f5bfa0 <col:31, col:40> col:40 used sport 'uint16_t':'unsigned short'
| |-ParmVarDecl 0x560a41f5c018 <col:47, col:57> col:57 used daddr 'IPAddress'
| |-ParmVarDecl 0x560a41f5c090 <col:64, col:73> col:73 used dport 'uint16_t':'unsigned short'
| |-CXXCtorInitializer Field 0x560a41f5dd58 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x560a41f5e660 <line:27:4, col:16> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x560a41f5e550 <col:11> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x560a41f5e510 <col:11> 'IPAddress' lvalue ParmVar 0x560a41f5bf28 'saddr' 'IPAddress'
| |-CXXCtorInitializer Field 0x560a41f5ddb8 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x560a41f5e710 <col:19, col:31> 'IPAddress' 'void (const IPAddress &) noexcept'
| |   `-ImplicitCastExpr 0x560a41f5e6f8 <col:26> 'const IPAddress' lvalue <NoOp>
| |     `-DeclRefExpr 0x560a41f5e6b8 <col:26> 'IPAddress' lvalue ParmVar 0x560a41f5c018 'daddr' 'IPAddress'
| |-CXXCtorInitializer Field 0x560a41f5de18 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x560a41f5e7a8 <col:41> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-DeclRefExpr 0x560a41f5e768 <col:41> 'uint16_t':'unsigned short' lvalue ParmVar 0x560a41f5bfa0 'sport' 'uint16_t':'unsigned short'
| |-CXXCtorInitializer Field 0x560a41f5de78 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x560a41f5e828 <col:56> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-DeclRefExpr 0x560a41f5e7e8 <col:56> 'uint16_t':'unsigned short' lvalue ParmVar 0x560a41f5c090 'dport' 'uint16_t':'unsigned short'
| `-CompoundStmt 0x560a41f5e888 <col:63, line:28:5>
|-CXXConstructorDecl 0x560a41f5c3f8 <line:37:5, col:60> col:14 used IPFlowID 'void (const Packet *, bool)'
| |-ParmVarDecl 0x560a41f5c2b0 <col:23, col:37> col:37 p 'const Packet *'
| `-ParmVarDecl 0x560a41f5c328 <col:40, col:55> col:45 reverse 'bool' cinit
|   `-CXXBoolLiteralExpr 0x560a41f5e2f0 <col:55> 'bool' false
|-CXXConstructorDecl 0x560a41f5c608 <line:47:5, col:64> col:14 IPFlowID 'void (const click_ip *, bool)'
| |-ParmVarDecl 0x560a41f5c4c0 <col:23, col:39> col:39 iph 'const click_ip *'
| `-ParmVarDecl 0x560a41f5c538 <col:44, col:59> col:49 reverse 'bool' cinit
|   `-CXXBoolLiteralExpr 0x560a41f5e300 <col:59> 'bool' false
|-CXXConstructorDecl 0x560a41f5c760 <line:50:5, line:52:5> line:50:12 IPFlowID 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x560a41f5c6d0 <col:21, col:47> col:47 used unused 'const uninitialized_type &'
| |-CXXCtorInitializer Field 0x560a41f5dd58 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x560a41f5e898 <col:12> 'IPAddress' 'void ()'
| |-CXXCtorInitializer Field 0x560a41f5ddb8 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x560a41f5e8e8 <col:12> 'IPAddress' 'void ()'
| `-CompoundStmt 0x560a41f5e9a0 <col:55, line:52:5>
|   `-CStyleCastExpr 0x560a41f5e978 <line:51:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x560a41f5e948 <col:9> 'const uninitialized_type' lvalue ParmVar 0x560a41f5c6d0 'unused' 'const uninitialized_type &'
|-TypedefDecl 0x560a41f5c918 <line:55:5, col:60> col:35 referenced unspecified_bool_type 'IPAddress (IPFlowID::*)() const'
| `-MemberPointerType 0x560a41f5c890 'IPAddress (IPFlowID::*)() const'
|   |-RecordType 0x560a41f5bc60 'IPFlowID'
|   | `-CXXRecord 0x560a41f5bbc8 'IPFlowID'
|   `-ParenType 0x560a41f5c830 'IPAddress () const' sugar
|     `-FunctionProtoType 0x560a41dab5c0 'IPAddress () const' const cdecl
|       `-RecordType 0x560a419fff40 'IPAddress'
|         `-CXXRecord 0x560a41d96800 'IPAddress'
|-CXXConversionDecl 0x560a41f5ca58 <line:57:5, line:59:5> line:57:5 operator IPAddress (IPFlowID::*)() const 'IPFlowID::unspecified_bool_type () const'
| `-CompoundStmt 0x560a41f5ec50 <col:44, line:59:5>
|   `-ReturnStmt 0x560a41f5ec40 <line:58:2, col:47>
|     `-ConditionalOperator 0x560a41f5ec10 <col:9, col:47> 'IPAddress (IPFlowID::*)() const'
|       |-BinaryOperator 0x560a41f5eb38 <col:9, col:19> 'bool' '||'
|       | |-ImplicitCastExpr 0x560a41f5eb08 <col:9> 'bool' <IntegralToBoolean>
|       | | `-ImplicitCastExpr 0x560a41f5ea88 <col:9> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       | |   `-CXXMemberCallExpr 0x560a41f5ea68 <col:9> 'uint32_t':'unsigned int'
|       | |     `-MemberExpr 0x560a41f5ea38 <col:9> '<bound member function type>' .operator unsigned int 0x560a41d97a98
|       | |       `-MemberExpr 0x560a41f5e9c8 <col:9> 'const IPAddress' lvalue ->_saddr 0x560a41f5dd58
|       | |         `-CXXThisExpr 0x560a41f5e9b8 <col:9> 'const IPFlowID *' implicit this
|       | `-ImplicitCastExpr 0x560a41f5eb20 <col:19> 'bool' <IntegralToBoolean>
|       |   `-ImplicitCastExpr 0x560a41f5eaf0 <col:19> 'uint32_t':'unsigned int' <UserDefinedConversion>
|       |     `-CXXMemberCallExpr 0x560a41f5ead0 <col:19> 'uint32_t':'unsigned int'
|       |       `-MemberExpr 0x560a41f5eaa0 <col:19> '<bound member function type>' .operator unsigned int 0x560a41d97a98
|       |         `-MemberExpr 0x560a41f5ea08 <col:19> 'const IPAddress' lvalue ->_daddr 0x560a41f5ddb8
|       |           `-CXXThisExpr 0x560a41f5e9f8 <col:19> 'const IPFlowID *' implicit this
|       |-UnaryOperator 0x560a41f5ebc0 <col:28, col:39> 'IPAddress (IPFlowID::*)() const' prefix '&' cannot overflow
|       | `-DeclRefExpr 0x560a41f5eb90 <col:29, col:39> 'IPAddress () const' CXXMethod 0x560a41f5cb28 'saddr' 'IPAddress () const'
|       `-ImplicitCastExpr 0x560a41f5ebf8 <col:47> 'IPAddress (IPFlowID::*)() const' <NullToMemberPointer>
|         `-IntegerLiteral 0x560a41f5ebd8 <col:47> 'int' 0
|-CXXMethodDecl 0x560a41f5cb28 <line:63:5, line:65:5> line:63:15 used saddr 'IPAddress () const'
| `-CompoundStmt 0x560a41f5ece8 <col:29, line:65:5>
|   `-ReturnStmt 0x560a41f5ecd8 <line:64:2, col:9>
|     `-CXXConstructExpr 0x560a41f5eca8 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x560a41f5ec78 <col:9> 'const IPAddress' lvalue ->_saddr 0x560a41f5dd58
|         `-CXXThisExpr 0x560a41f5ec68 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x560a41f5cc48 <line:67:5, line:69:5> line:67:14 used sport 'uint16_t () const'
| `-CompoundStmt 0x560a41f5ed68 <col:28, line:69:5>
|   `-ReturnStmt 0x560a41f5ed58 <line:68:2, col:9>
|     `-ImplicitCastExpr 0x560a41f5ed40 <col:9> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-MemberExpr 0x560a41f5ed10 <col:9> 'const uint16_t':'const unsigned short' lvalue ->_sport 0x560a41f5de18
|         `-CXXThisExpr 0x560a41f5ed00 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x560a41f5cd08 <line:71:5, line:73:5> line:71:15 used daddr 'IPAddress () const'
| `-CompoundStmt 0x560a41f5ee00 <col:29, line:73:5>
|   `-ReturnStmt 0x560a41f5edf0 <line:72:2, col:9>
|     `-CXXConstructExpr 0x560a41f5edc0 <col:9> 'IPAddress' 'void (const IPAddress &) noexcept'
|       `-MemberExpr 0x560a41f5ed90 <col:9> 'const IPAddress' lvalue ->_daddr 0x560a41f5ddb8
|         `-CXXThisExpr 0x560a41f5ed80 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x560a41f5cdc8 <line:75:5, line:77:5> line:75:14 used dport 'uint16_t () const'
| `-CompoundStmt 0x560a41f5ee80 <col:28, line:77:5>
|   `-ReturnStmt 0x560a41f5ee70 <line:76:2, col:9>
|     `-ImplicitCastExpr 0x560a41f5ee58 <col:9> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-MemberExpr 0x560a41f5ee28 <col:9> 'const uint16_t':'const unsigned short' lvalue ->_dport 0x560a41f5de78
|         `-CXXThisExpr 0x560a41f5ee18 <col:9> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x560a41f5cf08 <line:80:5, line:82:5> line:80:10 set_saddr 'void (IPAddress)'
| |-ParmVarDecl 0x560a41f5ce78 <col:20, col:30> col:30 used a 'IPAddress'
| `-CompoundStmt 0x560a41f5f428 <col:33, line:82:5>
|   `-CXXOperatorCallExpr 0x560a41f5f3f0 <line:81:2, col:11> 'IPAddress' lvalue
|     |-ImplicitCastExpr 0x560a41f5f3d8 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x560a41f5f210 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x560a41f5eef8 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|     |-MemberExpr 0x560a41f5eea8 <col:2> 'IPAddress' lvalue ->_saddr 0x560a41f5dd58
|     | `-CXXThisExpr 0x560a41f5ee98 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x560a41f5f1f8 <col:11> 'const IPAddress' lvalue <NoOp>
|       `-DeclRefExpr 0x560a41f5eed8 <col:11> 'IPAddress' lvalue ParmVar 0x560a41f5ce78 'a' 'IPAddress'
|-CXXMethodDecl 0x560a41f5d0b8 <line:85:5, line:87:5> line:85:10 set_sport 'void (uint16_t)'
| |-ParmVarDecl 0x560a41f5cfc0 <col:20, col:29> col:29 used p 'uint16_t':'unsigned short'
| `-CompoundStmt 0x560a41f5f4d8 <col:32, line:87:5>
|   `-BinaryOperator 0x560a41f5f4b8 <line:86:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x560a41f5f450 <col:2> 'uint16_t':'unsigned short' lvalue ->_sport 0x560a41f5de18
|     | `-CXXThisExpr 0x560a41f5f440 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x560a41f5f4a0 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x560a41f5f480 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x560a41f5cfc0 'p' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x560a41f5d200 <line:89:5, line:91:5> line:89:10 set_daddr 'void (IPAddress)'
| |-ParmVarDecl 0x560a41f5d170 <col:20, col:30> col:30 used a 'IPAddress'
| `-CompoundStmt 0x560a41f5f5d8 <col:33, line:91:5>
|   `-CXXOperatorCallExpr 0x560a41f5f5a0 <line:90:2, col:11> 'IPAddress' lvalue
|     |-ImplicitCastExpr 0x560a41f5f588 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x560a41f5f568 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x560a41f5eef8 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|     |-MemberExpr 0x560a41f5f500 <col:2> 'IPAddress' lvalue ->_daddr 0x560a41f5ddb8
|     | `-CXXThisExpr 0x560a41f5f4f0 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x560a41f5f550 <col:11> 'const IPAddress' lvalue <NoOp>
|       `-DeclRefExpr 0x560a41f5f530 <col:11> 'IPAddress' lvalue ParmVar 0x560a41f5d170 'a' 'IPAddress'
|-CXXMethodDecl 0x560a41f5d348 <line:94:5, line:96:5> line:94:10 set_dport 'void (uint16_t)'
| |-ParmVarDecl 0x560a41f5d2b8 <col:20, col:29> col:29 used p 'uint16_t':'unsigned short'
| `-CompoundStmt 0x560a41f5f688 <col:32, line:96:5>
|   `-BinaryOperator 0x560a41f5f668 <line:95:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x560a41f5f600 <col:2> 'uint16_t':'unsigned short' lvalue ->_dport 0x560a41f5de78
|     | `-CXXThisExpr 0x560a41f5f5f0 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x560a41f5f650 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x560a41f5f630 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x560a41f5d2b8 'p' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x560a41f5d610 <line:103:5, line:108:5> line:103:10 assign 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
| |-ParmVarDecl 0x560a41f5d400 <col:17, col:27> col:27 used saddr 'IPAddress'
| |-ParmVarDecl 0x560a41f5d478 <col:34, col:43> col:43 used sport 'uint16_t':'unsigned short'
| |-ParmVarDecl 0x560a41f5d4f0 <col:50, col:60> col:60 used daddr 'IPAddress'
| |-ParmVarDecl 0x560a41f5d568 <col:67, col:76> col:76 used dport 'uint16_t':'unsigned short'
| `-CompoundStmt 0x560a41f5f9a0 <col:83, line:108:5>
|   |-CXXOperatorCallExpr 0x560a41f5f750 <line:104:2, col:11> 'IPAddress' lvalue
|   | |-ImplicitCastExpr 0x560a41f5f738 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x560a41f5f718 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x560a41f5eef8 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|   | |-MemberExpr 0x560a41f5f6b0 <col:2> 'IPAddress' lvalue ->_saddr 0x560a41f5dd58
|   | | `-CXXThisExpr 0x560a41f5f6a0 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x560a41f5f700 <col:11> 'const IPAddress' lvalue <NoOp>
|   |   `-DeclRefExpr 0x560a41f5f6e0 <col:11> 'IPAddress' lvalue ParmVar 0x560a41f5d400 'saddr' 'IPAddress'
|   |-CXXOperatorCallExpr 0x560a41f5f838 <line:105:2, col:11> 'IPAddress' lvalue
|   | |-ImplicitCastExpr 0x560a41f5f820 <col:9> 'IPAddress &(*)(const IPAddress &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x560a41f5f800 <col:9> 'IPAddress &(const IPAddress &) noexcept' lvalue CXXMethod 0x560a41f5eef8 'operator=' 'IPAddress &(const IPAddress &) noexcept'
|   | |-MemberExpr 0x560a41f5f798 <col:2> 'IPAddress' lvalue ->_daddr 0x560a41f5ddb8
|   | | `-CXXThisExpr 0x560a41f5f788 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x560a41f5f7e8 <col:11> 'const IPAddress' lvalue <NoOp>
|   |   `-DeclRefExpr 0x560a41f5f7c8 <col:11> 'IPAddress' lvalue ParmVar 0x560a41f5d4f0 'daddr' 'IPAddress'
|   |-BinaryOperator 0x560a41f5f8e8 <line:106:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x560a41f5f880 <col:2> 'uint16_t':'unsigned short' lvalue ->_sport 0x560a41f5de18
|   | | `-CXXThisExpr 0x560a41f5f870 <col:2> 'IPFlowID *' implicit this
|   | `-ImplicitCastExpr 0x560a41f5f8d0 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-DeclRefExpr 0x560a41f5f8b0 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x560a41f5d478 'sport' 'uint16_t':'unsigned short'
|   `-BinaryOperator 0x560a41f5f980 <line:107:2, col:11> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x560a41f5f918 <col:2> 'uint16_t':'unsigned short' lvalue ->_dport 0x560a41f5de78
|     | `-CXXThisExpr 0x560a41f5f908 <col:2> 'IPFlowID *' implicit this
|     `-ImplicitCastExpr 0x560a41f5f968 <col:11> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x560a41f5f948 <col:11> 'uint16_t':'unsigned short' lvalue ParmVar 0x560a41f5d568 'dport' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x560a41f5d718 <line:113:5, line:115:5> line:113:14 used reverse 'IPFlowID () const'
| `-CompoundStmt 0x560a41f604d8 <col:30, line:115:5>
|   `-ReturnStmt 0x560a41f604c8 <line:114:2, col:48>
|     `-ExprWithCleanups 0x560a41f604b0 <col:9, col:48> 'IPFlowID'
|       `-CXXConstructExpr 0x560a41f60480 <col:9, col:48> 'IPFlowID' 'void (IPFlowID &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x560a41f60038 <col:9, col:48> 'IPFlowID' xvalue
|           `-CXXTemporaryObjectExpr 0x560a41f5fea8 <col:9, col:48> 'IPFlowID' 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
|             |-CXXConstructExpr 0x560a41f5fe18 <col:18> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x560a41f5f9f0 <col:18> 'const IPAddress' lvalue ->_daddr 0x560a41f5ddb8
|             |   `-CXXThisExpr 0x560a41f5f9e0 <col:18> 'const IPFlowID *' implicit this
|             |-ImplicitCastExpr 0x560a41f5fe48 <col:26> 'uint16_t':'unsigned short' <LValueToRValue>
|             | `-MemberExpr 0x560a41f5fa30 <col:26> 'const uint16_t':'const unsigned short' lvalue ->_dport 0x560a41f5de78
|             |   `-CXXThisExpr 0x560a41f5fa20 <col:26> 'const IPFlowID *' implicit this
|             |-CXXConstructExpr 0x560a41f5fe60 <col:34> 'IPAddress' 'void (const IPAddress &) noexcept'
|             | `-MemberExpr 0x560a41f5fa70 <col:34> 'const IPAddress' lvalue ->_saddr 0x560a41f5dd58
|             |   `-CXXThisExpr 0x560a41f5fa60 <col:34> 'const IPFlowID *' implicit this
|             `-ImplicitCastExpr 0x560a41f5fe90 <col:42> 'uint16_t':'unsigned short' <LValueToRValue>
|               `-MemberExpr 0x560a41f5fab0 <col:42> 'const uint16_t':'const unsigned short' lvalue ->_sport 0x560a41f5de18
|                 `-CXXThisExpr 0x560a41f5faa0 <col:42> 'const IPFlowID *' implicit this
|-CXXMethodDecl 0x560a41f5d7d8 <line:116:5, col:59> col:21 rev 'IPFlowID () const' inline
| `-DeprecatedAttr 0x560a41f5d878 <col:48> "" ""
|-CXXMethodDecl 0x560a41f5d938 <line:122:5, col:34> col:23 hashcode 'hashcode_t () const' inline
|-CXXMethodDecl 0x560a41f5d9f8 <line:127:5, col:22> col:12 used unparse 'String () const'
|-CXXConversionDecl 0x560a41f5dac8 <line:129:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x560a41f5db70 <col:51> "" ""
|-CXXMethodDecl 0x560a41f5dc10 <line:130:5, col:55> col:19 s 'String () const' inline
| `-DeprecatedAttr 0x560a41f5dcb0 <col:44> "" ""
|-AccessSpecDecl 0x560a41f5dd20 <line:132:3, col:12> col:3 protected
|-FieldDecl 0x560a41f5dd58 <line:135:5, col:15> col:15 referenced _saddr 'IPAddress'
|-FieldDecl 0x560a41f5ddb8 <line:136:5, col:15> col:15 referenced _daddr 'IPAddress'
|-FieldDecl 0x560a41f5de18 <line:137:5, col:14> col:14 referenced _sport 'uint16_t':'unsigned short'
|-FieldDecl 0x560a41f5de78 <line:138:5, col:14> col:14 referenced _dport 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x560a41f5dfb0 <line:140:5, col:26> col:9 unparse 'int (char *) const'
| `-ParmVarDecl 0x560a41f5dee0 <col:17, col:23> col:23 s 'char *'
|-FriendDecl 0x560a41f5e298 <line:141:5, col:76> col:25
| `-FunctionDecl 0x560a41f5e1d8 parent 0x560a417e0488 <col:5, col:76> col:25 operator<< 'StringAccum &(StringAccum &, const IPFlowID &)'
|   |-ParmVarDecl 0x560a41f5e068 <col:36, col:49> col:49 sa 'StringAccum &'
|   `-ParmVarDecl 0x560a41f5e108 <col:53, col:69> col:69 flow_id 'const IPFlowID &'
|-CXXConstructorDecl 0x560a41f5fae0 <line:9:7> col:7 implicit constexpr IPFlowID 'void (const IPFlowID &)' inline default trivial noexcept-unevaluated 0x560a41f5fae0
| `-ParmVarDecl 0x560a41f5fbf8 <col:7> col:7 'const IPFlowID &'
|-CXXConstructorDecl 0x560a41f5fc98 <col:7> col:7 implicit used constexpr IPFlowID 'void (IPFlowID &&) noexcept' inline default trivial
| |-ParmVarDecl 0x560a41f5fda8 <col:7> col:7 used 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x560a41f5dd58 '_saddr' 'IPAddress'
| | `-CXXConstructExpr 0x560a41f60128 <col:7> 'IPAddress' 'void (IPAddress &&) noexcept'
| |   `-MemberExpr 0x560a41f600e0 <col:7> 'IPAddress' xvalue ._saddr 0x560a41f5dd58
| |     `-CXXStaticCastExpr 0x560a41f600b0 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x560a41f60080 <col:7> 'IPFlowID' lvalue ParmVar 0x560a41f5fda8 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x560a41f5ddb8 '_daddr' 'IPAddress'
| | `-CXXConstructExpr 0x560a41f60228 <col:7> 'IPAddress' 'void (IPAddress &&) noexcept'
| |   `-MemberExpr 0x560a41f601e0 <col:7> 'IPAddress' xvalue ._daddr 0x560a41f5ddb8
| |     `-CXXStaticCastExpr 0x560a41f601b0 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x560a41f60180 <col:7> 'IPFlowID' lvalue ParmVar 0x560a41f5fda8 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x560a41f5de18 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x560a41f60328 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-MemberExpr 0x560a41f602e0 <col:7> 'uint16_t':'unsigned short' xvalue ._sport 0x560a41f5de18
| |     `-CXXStaticCastExpr 0x560a41f602b0 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x560a41f60280 <col:7> 'IPFlowID' lvalue ParmVar 0x560a41f5fda8 '' 'IPFlowID &&'
| |-CXXCtorInitializer Field 0x560a41f5de78 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x560a41f60410 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-MemberExpr 0x560a41f603c8 <col:7> 'uint16_t':'unsigned short' xvalue ._dport 0x560a41f5de78
| |     `-CXXStaticCastExpr 0x560a41f60398 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
| |       `-DeclRefExpr 0x560a41f60368 <col:7> 'IPFlowID' lvalue ParmVar 0x560a41f5fda8 '' 'IPFlowID &&'
| `-CompoundStmt 0x560a41f60470 <col:7>
|-CXXDestructorDecl 0x560a41f5fef8 <col:7> col:7 implicit referenced ~IPFlowID 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x560a41f799e8 <col:7> col:7 implicit operator= 'IPFlowID &(const IPFlowID &)' inline default trivial noexcept-unevaluated 0x560a41f799e8
| `-ParmVarDecl 0x560a41f79af8 <col:7> col:7 'const IPFlowID &'
`-CXXMethodDecl 0x560a41f79b68 <col:7> col:7 implicit used operator= 'IPFlowID &(IPFlowID &&) noexcept' inline default trivial
  |-ParmVarDecl 0x560a41f79c78 <col:7> col:7 used 'IPFlowID &&'
  `-CompoundStmt 0x560a41f7a8f8 <col:7>
    |-CXXMemberCallExpr 0x560a41f7a4c8 <col:7> 'IPAddress' lvalue
    | |-MemberExpr 0x560a41f7a320 <col:7> '<bound member function type>' .operator= 0x560a41f5f078
    | | `-MemberExpr 0x560a41f7a1f0 <col:7> 'IPAddress' lvalue ->_saddr 0x560a41f5dd58
    | |   `-CXXThisExpr 0x560a41f7a1e0 <col:7> 'IPFlowID *' this
    | `-MemberExpr 0x560a41f7a2f0 <col:7> 'IPAddress' xvalue ._saddr 0x560a41f5dd58
    |   `-CXXStaticCastExpr 0x560a41f7a2c0 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
    |     `-DeclRefExpr 0x560a41f7a290 <col:7> 'IPFlowID' lvalue ParmVar 0x560a41f79c78 '' 'IPFlowID &&'
    |-CXXMemberCallExpr 0x560a41f7a688 <col:7> 'IPAddress' lvalue
    | |-MemberExpr 0x560a41f7a640 <col:7> '<bound member function type>' .operator= 0x560a41f5f078
    | | `-MemberExpr 0x560a41f7a510 <col:7> 'IPAddress' lvalue ->_daddr 0x560a41f5ddb8
    | |   `-CXXThisExpr 0x560a41f7a500 <col:7> 'IPFlowID *' this
    | `-MemberExpr 0x560a41f7a610 <col:7> 'IPAddress' xvalue ._daddr 0x560a41f5ddb8
    |   `-CXXStaticCastExpr 0x560a41f7a5e0 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
    |     `-DeclRefExpr 0x560a41f7a5b0 <col:7> 'IPFlowID' lvalue ParmVar 0x560a41f79c78 '' 'IPFlowID &&'
    |-BinaryOperator 0x560a41f7a798 <col:7> 'uint16_t':'unsigned short' lvalue '='
    | |-MemberExpr 0x560a41f7a750 <col:7> 'uint16_t':'unsigned short' lvalue ->_sport 0x560a41f5de18
    | | `-CXXThisExpr 0x560a41f7a740 <col:7> 'IPFlowID *' this
    | `-ImplicitCastExpr 0x560a41f7a780 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
    |   `-MemberExpr 0x560a41f7a710 <col:7> 'uint16_t':'unsigned short' xvalue ._sport 0x560a41f5de18
    |     `-CXXStaticCastExpr 0x560a41f7a6e0 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
    |       `-DeclRefExpr 0x560a41f7a6b0 <col:7> 'IPFlowID' lvalue ParmVar 0x560a41f79c78 '' 'IPFlowID &&'
    |-BinaryOperator 0x560a41f7a8a0 <col:7> 'uint16_t':'unsigned short' lvalue '='
    | |-MemberExpr 0x560a41f7a858 <col:7> 'uint16_t':'unsigned short' lvalue ->_dport 0x560a41f5de78
    | | `-CXXThisExpr 0x560a41f7a848 <col:7> 'IPFlowID *' this
    | `-ImplicitCastExpr 0x560a41f7a888 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
    |   `-MemberExpr 0x560a41f7a818 <col:7> 'uint16_t':'unsigned short' xvalue ._dport 0x560a41f5de78
    |     `-CXXStaticCastExpr 0x560a41f7a7e8 <col:7> 'IPFlowID' xvalue static_cast<class IPFlowID &&> <NoOp>
    |       `-DeclRefExpr 0x560a41f7a7b8 <col:7> 'IPFlowID' lvalue ParmVar 0x560a41f79c78 '' 'IPFlowID &&'
    `-ReturnStmt 0x560a41f7a8e8 <col:7>
      `-UnaryOperator 0x560a41f7a8d0 <col:7> 'IPFlowID' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x560a41f7a8c0 <col:7> 'IPFlowID *' this

Layout: <CGRecordLayout
  LLVMType:%class.IPFlowID = type { %class.IPAddress, %class.IPAddress, i16, i16 }
  NonVirtualBaseLLVMType:%class.IPFlowID = type { %class.IPAddress, %class.IPAddress, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct TaskLink
         0 |   struct TaskLink * _prev
         8 |   struct TaskLink * _next
        16 |   unsigned int _pass
           | [sizeof=24, dsize=20, align=8,
           |  nvsize=20, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41e1d5c0 <../dummy_inc/click/task.hh:31:1, line:47:1> line:31:8 referenced struct TaskLink definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x560a41e1d6d8 <col:1, col:8> col:8 implicit referenced struct TaskLink
|-FieldDecl 0x560a41e1d7a8 <line:33:5, col:15> col:15 referenced _prev 'TaskLink *'
|-FieldDecl 0x560a41e1d808 <line:34:5, col:15> col:15 referenced _next 'TaskLink *'
|-FieldDecl 0x560a41e1d870 <line:37:5, col:14> col:14 referenced _pass 'unsigned int'
|-CXXConstructorDecl 0x560a41e1d8f8 <line:39:5, line:46:5> line:39:5 used TaskLink 'void ()'
| `-CompoundStmt 0x560a41e1db60 <col:16, line:46:5>
|   |-BinaryOperator 0x560a41e1daa8 <line:41:9, col:25> 'TaskLink *' lvalue '='
|   | |-MemberExpr 0x560a41e1d9c8 <col:9> 'TaskLink *' lvalue ->_prev 0x560a41e1d7a8
|   | | `-CXXThisExpr 0x560a41e1d9b8 <col:9> 'TaskLink *' implicit this
|   | `-ImplicitCastExpr 0x560a41e1da90 <col:17, col:25> 'TaskLink *' <LValueToRValue>
|   |   `-BinaryOperator 0x560a41e1da70 <col:17, col:25> 'TaskLink *' lvalue '='
|   |     |-MemberExpr 0x560a41e1da08 <col:17> 'TaskLink *' lvalue ->_next 0x560a41e1d808
|   |     | `-CXXThisExpr 0x560a41e1d9f8 <col:17> 'TaskLink *' implicit this
|   |     `-ImplicitCastExpr 0x560a41e1da58 <col:25> 'TaskLink *' <NullToPointer>
|   |       `-IntegerLiteral 0x560a41e1da38 <col:25> 'int' 0
|   `-BinaryOperator 0x560a41e1db40 <line:44:9, col:17> 'unsigned int' lvalue '='
|     |-MemberExpr 0x560a41e1dad8 <col:9> 'unsigned int' lvalue ->_pass 0x560a41e1d870
|     | `-CXXThisExpr 0x560a41e1dac8 <col:9> 'TaskLink *' implicit this
|     `-ImplicitCastExpr 0x560a41e1db28 <col:17> 'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x560a41e1db08 <col:17> 'int' 0
|-CXXConstructorDecl 0x560a41e8e318 <line:31:8> col:8 implicit constexpr TaskLink 'void (const TaskLink &)' inline default trivial noexcept-unevaluated 0x560a41e8e318
| `-ParmVarDecl 0x560a41e8e428 <col:8> col:8 'const TaskLink &'
|-CXXConstructorDecl 0x560a41e8e4c8 <col:8> col:8 implicit constexpr TaskLink 'void (TaskLink &&)' inline default trivial noexcept-unevaluated 0x560a41e8e4c8
| `-ParmVarDecl 0x560a41e8e5d8 <col:8> col:8 'TaskLink &&'
|-CXXDestructorDecl 0x560a41e8e7c8 <col:8> col:8 implicit ~TaskLink 'void ()' inline default trivial noexcept-unevaluated 0x560a41e8e7c8
|-CXXMethodDecl 0x560a41e8efc8 <col:8> col:8 implicit operator= 'TaskLink &(const TaskLink &)' inline default trivial noexcept-unevaluated 0x560a41e8efc8
| `-ParmVarDecl 0x560a41e8f0d8 <col:8> col:8 'const TaskLink &'
`-CXXMethodDecl 0x560a41e8f148 <col:8> col:8 implicit operator= 'TaskLink &(TaskLink &&)' inline default trivial noexcept-unevaluated 0x560a41e8f148
  `-ParmVarDecl 0x560a41e8f258 <col:8> col:8 'TaskLink &&'

Layout: <CGRecordLayout
  LLVMType:%struct.TaskLink = type <{ %struct.TaskLink*, %struct.TaskLink*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%struct.TaskLink.base = type <{ %struct.TaskLink*, %struct.TaskLink*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9)
         0 |   int16_t home_thread_id
         2 |   uint8_t is_scheduled
         3 |   uint8_t is_strong_unscheduled
           | [sizeof=4, dsize=4, align=2,
           |  nvsize=4, nvalign=2]

*** Dumping AST Record Layout
         0 | union Task::Status
         0 |   struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
         0 |     int16_t home_thread_id
         2 |     uint8_t is_scheduled
         3 |     uint8_t is_strong_unscheduled
         0 |   uint32_t status
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Task::Pending
         0 |   class Task * t
         0 |   uintptr_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Task
         0 |   struct TaskLink (base)
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        20 |   unsigned int _stride
        24 |   int _tickets
        28 |   union Task::Status _status
        28 |     struct Task::Status::(anonymous at ../dummy_inc/click/task.hh:315:9) 
        28 |       int16_t home_thread_id
        30 |       uint8_t is_scheduled
        31 |       uint8_t is_strong_unscheduled
        28 |     uint32_t status
        32 |   TaskCallback _hook
        40 |   void * _thunk
        48 |   class RouterThread * _thread
        56 |   class Element * _owner
        64 |   union Task::Pending _pending_nextptr
        64 |     class Task * t
        64 |     uintptr_t x
           | [sizeof=72, dsize=72, align=8,
           |  nvsize=72, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41e26dc8 <../dummy_inc/click/task.hh:315:9, line:319:9> line:315:9 struct definition
|-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x560a41e26ef8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
|-FieldDecl 0x560a41e26f58 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
|-FieldDecl 0x560a41e26fb8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
|-CXXConstructorDecl 0x560a41e954d8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
|-CXXDestructorDecl 0x560a41e955b0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x560a41e955b0
|-CXXConstructorDecl 0x560a41e95868 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x560a41e95868
| `-ParmVarDecl 0x560a41e95978 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
`-CXXConstructorDecl 0x560a41e95a18 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x560a41e95a18
  `-ParmVarDecl 0x560a41e95b28 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41e26c20 <../dummy_inc/click/task.hh:314:5, line:321:5> line:314:11 union Status definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x560a41e26d38 <col:5, col:11> col:11 implicit union Status
|-CXXRecordDecl 0x560a41e26dc8 <line:315:9, line:319:9> line:315:9 struct definition
| |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x560a41e26ef8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| |-FieldDecl 0x560a41e26f58 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| |-FieldDecl 0x560a41e26fb8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| |-CXXConstructorDecl 0x560a41e954d8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| |-CXXDestructorDecl 0x560a41e955b0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x560a41e955b0
| |-CXXConstructorDecl 0x560a41e95868 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x560a41e95868
| | `-ParmVarDecl 0x560a41e95978 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| `-CXXConstructorDecl 0x560a41e95a18 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x560a41e95a18
|   `-ParmVarDecl 0x560a41e95b28 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
|-FieldDecl 0x560a41e27078 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
|-IndirectFieldDecl 0x560a41e270d8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| |-Field 0x560a41e27078 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x560a41e26ef8 'home_thread_id' 'int16_t':'short'
|-IndirectFieldDecl 0x560a41e27130 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| |-Field 0x560a41e27078 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x560a41e26f58 'is_scheduled' 'uint8_t':'unsigned char'
|-IndirectFieldDecl 0x560a41e27188 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| |-Field 0x560a41e27078 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| `-Field 0x560a41e26fb8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
|-FieldDecl 0x560a41e271e0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x560a41e953e8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| `-CompoundStmt 0x560a41e95d48 <col:11>
|-CXXConstructorDecl 0x560a41e956b8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x560a41e956b8
| `-ParmVarDecl 0x560a41e957c8 <col:11> col:11 'const Task::Status &'
`-CXXConstructorDecl 0x560a41e95bc8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x560a41e95bc8
  `-ParmVarDecl 0x560a41e95cd8 <col:11> col:11 'Task::Status &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Status" = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class Vector<struct TimerSet::heap_element>
         0 |   class vector_memory<class sized_array_memory<16> > vm_
         0 |     vector_memory<class sized_array_memory<16> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class Timer *>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SimpleSpinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class TimerSet
         0 |   class Timestamp _timer_expiry
         0 |     union Timestamp::rep_t _t
         0 |       int64_t x
         8 |   unsigned int _max_timer_stride
        12 |   unsigned int _timer_stride
        16 |   unsigned int _timer_count
        24 |   class Vector<struct TimerSet::heap_element> _timer_heap
        24 |     class vector_memory<class sized_array_memory<16> > vm_
        24 |       vector_memory<class sized_array_memory<16> >::type * l_
        32 |       vector_memory::size_type n_
        36 |       vector_memory::size_type capacity_
        40 |   class Vector<class Timer *> _timer_runchunk
        40 |     class vector_memory<class sized_array_memory<8> > vm_
        40 |       vector_memory<class sized_array_memory<8> >::type * l_
        48 |       vector_memory::size_type n_
        52 |       vector_memory::size_type capacity_
        56 |   class SimpleSpinlock _timer_lock (empty)
        64 |   class Timestamp _timer_check
        64 |     union Timestamp::rep_t _t
        64 |       int64_t x
        72 |   uint32_t _timer_check_reports
           | [sizeof=80, dsize=76, align=8,
           |  nvsize=76, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct pollfd>
         0 |   class vector_memory<class sized_array_memory<8> > vm_
         0 |     vector_memory<class sized_array_memory<8> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<24> >
         0 |   vector_memory<class sized_array_memory<24> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct SelectSet::SelectorInfo>
         0 |   class vector_memory<class sized_array_memory<24> > vm_
         0 |     vector_memory<class sized_array_memory<24> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class SelectSet
         0 |   int [2] _wake_pipe
         8 |   volatile _Bool _wake_pipe_pending
        16 |   class Vector<struct pollfd> _pollfds
        16 |     class vector_memory<class sized_array_memory<8> > vm_
        16 |       vector_memory<class sized_array_memory<8> >::type * l_
        24 |       vector_memory::size_type n_
        28 |       vector_memory::size_type capacity_
        32 |   class Vector<struct SelectSet::SelectorInfo> _selinfo
        32 |     class vector_memory<class sized_array_memory<24> > vm_
        32 |       vector_memory<class sized_array_memory<24> >::type * l_
        40 |       vector_memory::size_type n_
        44 |       vector_memory::size_type capacity_
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class Spinlock (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class SpinlockIRQ (empty)
           | [sizeof=1, dsize=0, align=1,
           |  nvsize=0, nvalign=1]

*** Dumping AST Record Layout
         0 | class RouterThread
         0 |   struct TaskLink _task_link
         0 |     struct TaskLink * _prev
         8 |     struct TaskLink * _next
        16 |     unsigned int _pass
        24 |   volatile _Bool _stop_flag
        32 |   class TimerSet _timers
        32 |     class Timestamp _timer_expiry
        32 |       union Timestamp::rep_t _t
        32 |         int64_t x
        40 |     unsigned int _max_timer_stride
        44 |     unsigned int _timer_stride
        48 |     unsigned int _timer_count
        56 |     class Vector<struct TimerSet::heap_element> _timer_heap
        56 |       class vector_memory<class sized_array_memory<16> > vm_
        56 |         vector_memory<class sized_array_memory<16> >::type * l_
        64 |         vector_memory::size_type n_
        68 |         vector_memory::size_type capacity_
        72 |     class Vector<class Timer *> _timer_runchunk
        72 |       class vector_memory<class sized_array_memory<8> > vm_
        72 |         vector_memory<class sized_array_memory<8> >::type * l_
        80 |         vector_memory::size_type n_
        84 |         vector_memory::size_type capacity_
        88 |     class SimpleSpinlock _timer_lock (empty)
        96 |     class Timestamp _timer_check
        96 |       union Timestamp::rep_t _t
        96 |         int64_t x
       104 |     uint32_t _timer_check_reports
       112 |   class SelectSet _selects
       112 |     int [2] _wake_pipe
       120 |     volatile _Bool _wake_pipe_pending
       128 |     class Vector<struct pollfd> _pollfds
       128 |       class vector_memory<class sized_array_memory<8> > vm_
       128 |         vector_memory<class sized_array_memory<8> >::type * l_
       136 |         vector_memory::size_type n_
       140 |         vector_memory::size_type capacity_
       144 |     class Vector<struct SelectSet::SelectorInfo> _selinfo
       144 |       class vector_memory<class sized_array_memory<24> > vm_
       144 |         vector_memory<class sized_array_memory<24> >::type * l_
       152 |         vector_memory::size_type n_
       156 |         vector_memory::size_type capacity_
       192 |   class Spinlock _task_lock (empty)
       196 |   class atomic_uint32_t _task_blocker
       196 |     uint32_t _val
       200 |   class atomic_uint32_t _task_blocker_waiting
       200 |     uint32_t _val
       208 |   union Task::Pending _pending_head
       208 |     class Task * t
       208 |     uintptr_t x
       216 |   class Task::Pending * _pending_tail
       224 |   class SpinlockIRQ _pending_lock (empty)
       256 |   class Master * _master
       264 |   int _id
       268 |   _Bool _driver_entered
       272 |   unsigned int _tasks_per_iter
       276 |   unsigned int _iters_per_os
           | [sizeof=320, dsize=280, align=64,
           |  nvsize=280, nvalign=64]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41d04840 prev 0x560a41cfac50 <../dummy_inc/click/timestamp.hh:539:5, line:566:5> line:539:11 referenced union rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x560a41d04938 <col:5, col:11> col:11 implicit union rep_t
|-FieldDecl 0x560a41d049d8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
|-CXXConstructorDecl 0x560a41d07638 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x560a41d0aa38 <col:11>
|-CXXConstructorDecl 0x560a41d07710 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x560a41d077f8 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x560a41d0b180 <col:11>
|-CXXConstructorDecl 0x560a41d07898 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| |-ParmVarDecl 0x560a41d0a9c8 <col:11> col:11 'Timestamp::rep_t &&'
| `-CompoundStmt 0x560a41d0cdd8 <col:11>
|-CXXDestructorDecl 0x560a41d0bce8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x560a41dd0108 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x560a41dd0218 <col:11> col:11 'const Timestamp::rep_t &'
| `-CompoundStmt 0x560a41dd0ae0 <col:11>
|   `-ReturnStmt 0x560a41dd0ad0 <col:11>
|     `-UnaryOperator 0x560a41dd0ab8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x560a41dd0aa8 <col:11> 'Timestamp::rep_t *' this
`-CXXMethodDecl 0x560a41dd0288 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
  |-ParmVarDecl 0x560a41dd0398 <col:11> col:11 'Timestamp::rep_t &&'
  `-CompoundStmt 0x560a41e1b8c0 <col:11>
    `-ReturnStmt 0x560a41e1b8b0 <col:11>
      `-UnaryOperator 0x560a41e1b898 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x560a41e1b888 <col:11> 'Timestamp::rep_t *' this

Layout: <CGRecordLayout
  LLVMType:%"union.Timestamp::rep_t" = type { i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41cf9e08 prev 0x560a41cf9b70 <../dummy_inc/click/timestamp.hh:122:1, line:723:1> line:122:7 referenced class Timestamp definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x560a41cf9f00 <col:1, col:7> col:7 implicit referenced class Timestamp
|-AccessSpecDecl 0x560a41cf9f90 <col:19, col:25> col:19 public
|-TypedefDecl 0x560a41cf9fc8 <line:125:5, col:21> col:21 referenced seconds_type 'int32_t':'int'
| `-TypedefType 0x560a4193a860 'int32_t' sugar
|   |-Typedef 0x560a41849328 'int32_t'
|   `-TypedefType 0x560a41822510 '__int32_t' sugar
|     |-Typedef 0x560a41822128 '__int32_t'
|     `-BuiltinType 0x560a417e0580 'int'
|-TypedefDecl 0x560a41cfa030 <line:128:5, col:21> col:21 referenced value_type 'int64_t':'long'
| `-TypedefType 0x560a4193aa20 'int64_t' sugar
|   |-Typedef 0x560a41849390 'int64_t'
|   `-TypedefType 0x560a41822630 '__int64_t' sugar
|     |-Typedef 0x560a41822208 '__int64_t'
|     `-BuiltinType 0x560a417e05a0 'long'
|-EnumDecl 0x560a41cfa088 <line:133:5, line:140:5> line:133:5
| |-EnumConstantDecl 0x560a41cfa200 <line:134:9, col:38> col:9 max_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
| | `-ConstantExpr 0x560a41cfa1e0 <col:23, col:38> 'Timestamp::seconds_type':'int' Int: 2147483647
| |   `-CStyleCastExpr 0x560a41cfa1b8 <col:23, col:38> 'Timestamp::seconds_type':'int' <NoOp>
| |     `-ImplicitCastExpr 0x560a41cfa1a0 <col:38> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
| |       `-IntegerLiteral 0x560a41cfa170 <col:38> 'unsigned int' 2147483647
| `-EnumConstantDecl 0x560a41cfa2f8 <line:137:9, col:39> col:9 min_seconds 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:133:5)'
|   `-ConstantExpr 0x560a41cfa2d8 <col:23, col:39> 'Timestamp::seconds_type':'int' Int: -2147483648
|     `-CStyleCastExpr 0x560a41cfa2b0 <col:23, col:39> 'Timestamp::seconds_type':'int' <NoOp>
|       `-ImplicitCastExpr 0x560a41cfa298 <col:38, col:39> 'Timestamp::seconds_type':'int' <IntegralCast> part_of_explicit_cast
|         `-UnaryOperator 0x560a41cfa270 <col:38, col:39> 'unsigned int' prefix '-'
|           `-IntegerLiteral 0x560a41cfa250 <col:39> 'unsigned int' 2147483648
|-EnumDecl 0x560a41cfa348 <line:142:5, line:162:5> line:142:5
| |-EnumConstantDecl 0x560a41cfa450 <line:143:9, col:24> col:9 referenced nsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x560a41cfa9a0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cfa430 <col:24> 'int' Int: 1000000000
| |     `-IntegerLiteral 0x560a41cfa410 <col:24> 'int' 1000000000
| |-EnumConstantDecl 0x560a41cfa4e0 <line:144:9, col:25> col:9 nsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x560a41cfa9b8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cfa4c0 <col:25> 'int' Int: 1000000
| |     `-IntegerLiteral 0x560a41cfa4a0 <col:25> 'int' 1000000
| |-EnumConstantDecl 0x560a41cfa570 <line:145:9, col:25> col:9 nsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x560a41cfa9d0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cfa550 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x560a41cfa530 <col:25> 'int' 1000
| |-EnumConstantDecl 0x560a41cfa600 <line:146:9, col:24> col:9 referenced usec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x560a41cfa9e8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cfa5e0 <col:24> 'int' Int: 1000000
| |     `-IntegerLiteral 0x560a41cfa5c0 <col:24> 'int' 1000000
| |-EnumConstantDecl 0x560a41cfa690 <line:147:9, col:25> col:9 usec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x560a41cfaa00 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cfa670 <col:25> 'int' Int: 1000
| |     `-IntegerLiteral 0x560a41cfa650 <col:25> 'int' 1000
| |-EnumConstantDecl 0x560a41cfa720 <line:148:9, col:24> col:9 referenced msec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x560a41cfaa18 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cfa700 <col:24> 'int' Int: 1000
| |     `-IntegerLiteral 0x560a41cfa6e0 <col:24> 'int' 1000
| |-EnumConstantDecl 0x560a41cfa7b0 <line:150:9, col:26> col:9 referenced subsec_per_sec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x560a41cfaa30 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cfa790 <col:26> 'int' Int: 1000000000
| |     `-DeclRefExpr 0x560a41cfa770 <col:26> 'int' EnumConstant 0x560a41cfa450 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |-EnumConstantDecl 0x560a41cfa880 <line:157:9, col:44> col:9 referenced subsec_per_msec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| | `-ImplicitCastExpr 0x560a41cfaa48 <col:27, col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41cfa860 <col:27, col:44> 'int' Int: 1000000
| |     `-BinaryOperator 0x560a41cfa840 <col:27, col:44> 'int' '/'
| |       |-DeclRefExpr 0x560a41cfa800 <col:27> 'int' EnumConstant 0x560a41cfa7b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| |       `-DeclRefExpr 0x560a41cfa820 <col:44> 'int' EnumConstant 0x560a41cfa720 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
| `-EnumConstantDecl 0x560a41cfa950 <line:158:9, col:44> col:9 referenced subsec_per_usec 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ImplicitCastExpr 0x560a41cfaa60 <col:27, col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a41cfa930 <col:27, col:44> 'int' Int: 1000
|       `-BinaryOperator 0x560a41cfa910 <col:27, col:44> 'int' '/'
|         |-DeclRefExpr 0x560a41cfa8d0 <col:27> 'int' EnumConstant 0x560a41cfa7b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|         `-DeclRefExpr 0x560a41cfa8f0 <col:44> 'int' EnumConstant 0x560a41cfa600 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-EnumDecl 0x560a41cfaa78 <line:164:5, line:166:5> line:164:5
| `-EnumConstantDecl 0x560a41cfab80 <line:165:9, col:19> col:9 NSUBSEC 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:164:5)'
|   `-ImplicitCastExpr 0x560a41cfabd0 <col:19> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a41cfab60 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' Int: 1000000000
|       `-DeclRefExpr 0x560a41cfab40 <col:19> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa7b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-TypedefDecl 0x560a41cfabf8 <line:168:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x560a4193a490 'uninitialized_type'
|   `-CXXRecord 0x560a4193a3f8 'uninitialized_type'
|-CXXRecordDecl 0x560a41cfac50 <line:170:5, col:11> col:11 referenced union rep_t
|-CXXConstructorDecl 0x560a41cfad38 <line:174:5, line:176:5> line:174:12 used Timestamp 'void ()' inline
| |-CXXCtorInitializer Field 0x560a41d05988 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x560a41d0aa48 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x560a41d0ab68 <col:24, line:176:5>
|   `-CXXMemberCallExpr 0x560a41d0ab20 <line:175:9, col:20> 'void'
|     |-MemberExpr 0x560a41d0aab0 <col:9> '<bound member function type>' ->assign 0x560a41cff2f8
|     | `-CXXThisExpr 0x560a41d0aaa0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x560a41d0aae0 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x560a41d0ab50 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x560a41d0ab00 <col:19> 'int' 0
|-CXXConstructorDecl 0x560a41cfaf88 <line:187:5, line:189:5> line:187:21 Timestamp 'void (long, uint32_t)' inline
| |-ParmVarDecl 0x560a41cfadf8 <col:31, col:36> col:36 used sec 'long'
| |-ParmVarDecl 0x560a41cfae70 <col:41, col:59> col:50 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x560a41d074d0 <col:59> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x560a41d074b0 <col:59> 'int' 0
| |-CXXCtorInitializer Field 0x560a41d05988 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x560a41d0ab80 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x560a41d0acd0 <col:62, line:189:5>
|   `-CXXMemberCallExpr 0x560a41d0ac58 <line:188:9, col:27> 'void'
|     |-MemberExpr 0x560a41d0abe8 <col:9> '<bound member function type>' ->assign 0x560a41cff2f8
|     | `-CXXThisExpr 0x560a41d0abd8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x560a41d0aca0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x560a41d0ac88 <col:16> 'long' <LValueToRValue>
|     |   `-DeclRefExpr 0x560a41d0ac18 <col:16> 'long' lvalue ParmVar 0x560a41cfadf8 'sec' 'long'
|     `-ImplicitCastExpr 0x560a41d0acb8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x560a41d0ac38 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x560a41cfae70 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x560a41cfb1e8 <line:191:5, line:193:5> line:191:21 used Timestamp 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x560a41cfb058 <col:31, col:35> col:35 used sec 'int'
| |-ParmVarDecl 0x560a41cfb0d0 <col:40, col:58> col:49 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x560a41d07508 <col:58> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x560a41d074e8 <col:58> 'int' 0
| |-CXXCtorInitializer Field 0x560a41d05988 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x560a41d0ace8 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x560a41d0ae20 <col:61, line:193:5>
|   `-CXXMemberCallExpr 0x560a41d0adc0 <line:192:9, col:27> 'void'
|     |-MemberExpr 0x560a41d0ad50 <col:9> '<bound member function type>' ->assign 0x560a41cff2f8
|     | `-CXXThisExpr 0x560a41d0ad40 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x560a41d0adf0 <col:16> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x560a41d0ad80 <col:16> 'int' lvalue ParmVar 0x560a41cfb058 'sec' 'int'
|     `-ImplicitCastExpr 0x560a41d0ae08 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x560a41d0ada0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x560a41cfb0d0 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x560a41cfb448 <line:195:5, line:197:5> line:195:21 Timestamp 'void (unsigned long, uint32_t)' inline
| |-ParmVarDecl 0x560a41cfb2b8 <col:31, col:45> col:45 used sec 'unsigned long'
| |-ParmVarDecl 0x560a41cfb330 <col:50, col:68> col:59 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x560a41d07540 <col:68> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x560a41d07520 <col:68> 'int' 0
| |-CXXCtorInitializer Field 0x560a41d05988 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x560a41d0ae38 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x560a41d0af88 <col:71, line:197:5>
|   `-CXXMemberCallExpr 0x560a41d0af10 <line:196:9, col:27> 'void'
|     |-MemberExpr 0x560a41d0aea0 <col:9> '<bound member function type>' ->assign 0x560a41cff2f8
|     | `-CXXThisExpr 0x560a41d0ae90 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x560a41d0af58 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x560a41d0af40 <col:16> 'unsigned long' <LValueToRValue>
|     |   `-DeclRefExpr 0x560a41d0aed0 <col:16> 'unsigned long' lvalue ParmVar 0x560a41cfb2b8 'sec' 'unsigned long'
|     `-ImplicitCastExpr 0x560a41d0af70 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x560a41d0aef0 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x560a41cfb330 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x560a41cfb6a8 <line:199:5, line:201:5> line:199:21 used Timestamp 'void (unsigned int, uint32_t)' inline
| |-ParmVarDecl 0x560a41cfb518 <col:31, col:40> col:40 used sec 'unsigned int'
| |-ParmVarDecl 0x560a41cfb590 <col:45, col:63> col:54 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x560a41d07578 <col:63> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x560a41d07558 <col:63> 'int' 0
| |-CXXCtorInitializer Field 0x560a41d05988 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x560a41d0afa0 <col:21> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x560a41d0b0f0 <col:66, line:201:5>
|   `-CXXMemberCallExpr 0x560a41d0b078 <line:200:9, col:27> 'void'
|     |-MemberExpr 0x560a41d0b008 <col:9> '<bound member function type>' ->assign 0x560a41cff2f8
|     | `-CXXThisExpr 0x560a41d0aff8 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x560a41d0b0c0 <col:16> 'Timestamp::seconds_type':'int' <IntegralCast>
|     | `-ImplicitCastExpr 0x560a41d0b0a8 <col:16> 'unsigned int' <LValueToRValue>
|     |   `-DeclRefExpr 0x560a41d0b038 <col:16> 'unsigned int' lvalue ParmVar 0x560a41cfb518 'sec' 'unsigned int'
|     `-ImplicitCastExpr 0x560a41d0b0d8 <col:21> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-DeclRefExpr 0x560a41d0b058 <col:21> 'uint32_t':'unsigned int' lvalue ParmVar 0x560a41cfb590 'subsec' 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x560a41cfb808 <line:203:5, col:37> col:21 used Timestamp 'void (double)' inline
| `-ParmVarDecl 0x560a41cfb778 <col:31> col:37 'double'
|-CXXConstructorDecl 0x560a41cfc1f0 <line:206:5, col:46> col:12 Timestamp 'void (const struct timeval &)' inline
| `-ParmVarDecl 0x560a41cfb8e0 <col:22, col:44> col:44 tv 'const struct timeval &'
|-CXXConstructorDecl 0x560a41cfc418 <line:208:5, col:47> col:12 Timestamp 'void (const struct timespec &)' inline
| `-ParmVarDecl 0x560a41cfc320 <col:22, col:45> col:45 ts 'const struct timespec &'
|-CXXConstructorDecl 0x560a41cfc5c8 <line:212:5, line:214:5> line:212:12 Timestamp 'void (const Timestamp::rep_t &)' inline
| |-ParmVarDecl 0x560a41cfc508 <col:22, col:35> col:35 used rep 'const Timestamp::rep_t &'
| |-CXXCtorInitializer Field 0x560a41d05988 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x560a41d0b190 <line:213:11, col:17> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-DeclRefExpr 0x560a41d0b108 <col:14> 'const Timestamp::rep_t' lvalue ParmVar 0x560a41cfc508 'rep' 'const Timestamp::rep_t &'
| `-CompoundStmt 0x560a41d0b1f0 <col:19, line:214:5>
|-CXXConstructorDecl 0x560a41cfc7f8 <line:217:5, line:219:5> line:217:12 used Timestamp 'void (const Timestamp::uninitialized_t &)' inline
| |-ParmVarDecl 0x560a41cfc708 <col:22, col:45> col:45 used unused 'const Timestamp::uninitialized_t &'
| |-CXXCtorInitializer Field 0x560a41d05988 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x560a41d0b200 <col:12> 'Timestamp::rep_t' 'void () noexcept'
| `-CompoundStmt 0x560a41d0b2b0 <col:53, line:219:5>
|   `-CStyleCastExpr 0x560a41d0b288 <line:218:9, col:16> 'void' <ToVoid>
|     `-DeclRefExpr 0x560a41d0b258 <col:16> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue ParmVar 0x560a41cfc708 'unused' 'const Timestamp::uninitialized_t &'
|-TypedefDecl 0x560a41cfc9e8 <line:221:5, col:64> col:39 referenced unspecified_bool_type 'Timestamp::seconds_type (Timestamp::*)() const'
| `-MemberPointerType 0x560a41cfc960 'Timestamp::seconds_type (Timestamp::*)() const'
|   |-RecordType 0x560a41b43eb0 'Timestamp'
|   | `-CXXRecord 0x560a41cf9e08 'Timestamp'
|   `-ParenType 0x560a41cfc900 'Timestamp::seconds_type () const' sugar
|     `-FunctionProtoType 0x560a41cfc8d0 'Timestamp::seconds_type () const' const cdecl
|       `-TypedefType 0x560a41cfa150 'Timestamp::seconds_type' sugar
|         |-Typedef 0x560a41cf9fc8 'seconds_type'
|         `-TypedefType 0x560a4193a860 'int32_t' sugar
|           |-Typedef 0x560a41849328 'int32_t'
|           `-TypedefType 0x560a41822510 '__int32_t' sugar
|             |-Typedef 0x560a41822128 '__int32_t'
|             `-BuiltinType 0x560a417e0580 'int'
|-CXXConversionDecl 0x560a41cfcb28 <line:222:5, col:45> col:12 used operator int (Timestamp::*)() const 'Timestamp::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x560a41cfcbf8 <line:225:5, line:231:5> line:225:17 is_negative 'bool () const' inline
| `-CompoundStmt 0x560a41d0b3b8 <col:37, line:231:5>
|   `-ReturnStmt 0x560a41d0b3a8 <line:227:9, col:23>
|     `-BinaryOperator 0x560a41d0b388 <col:16, col:23> 'bool' '<'
|       |-ImplicitCastExpr 0x560a41d0b358 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x560a41d0b308 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x560a41d049d8
|       |   `-MemberExpr 0x560a41d0b2d8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x560a41d05988
|       |     `-CXXThisExpr 0x560a41d0b2c8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x560a41d0b370 <col:23> 'long' <IntegralCast>
|         `-IntegerLiteral 0x560a41d0b338 <col:23> 'int' 0
|-CXXMethodDecl 0x560a41cfccb8 <line:233:5, col:31> col:25 used sec 'Timestamp::seconds_type () const' inline
|-CXXMethodDecl 0x560a41cfcd78 <line:234:5, col:30> col:21 used subsec 'uint32_t () const' inline
|-CXXMethodDecl 0x560a41cfce38 <line:235:5, col:28> col:21 msec 'uint32_t () const' inline
|-CXXMethodDecl 0x560a41cfcef8 <line:236:5, col:28> col:21 used usec 'uint32_t () const' inline
|-CXXMethodDecl 0x560a41cfcfb8 <line:237:5, col:28> col:21 used nsec 'uint32_t () const' inline
|-CXXMethodDecl 0x560a41cfd128 <line:239:5, col:41> col:17 set_sec 'void (Timestamp::seconds_type)' inline
| `-ParmVarDecl 0x560a41cfd068 <col:25, col:38> col:38 sec 'Timestamp::seconds_type':'int'
|-CXXMethodDecl 0x560a41cfd270 <line:240:5, col:43> col:17 set_subsec 'void (uint32_t)' inline
| `-ParmVarDecl 0x560a41cfd1e0 <col:28, col:37> col:37 subsec 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a41cfd338 <line:242:5, col:65> col:25 msec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x560a41cfd3d8 <col:54> "" ""
|-CXXMethodDecl 0x560a41cfd468 <line:243:5, col:65> col:25 usec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x560a41cfd508 <col:54> "" ""
|-CXXMethodDecl 0x560a41cfd598 <line:244:5, col:65> col:25 nsec1 'Timestamp::seconds_type () const' inline
| `-DeprecatedAttr 0x560a41cfd638 <col:54> "" ""
|-CXXMethodDecl 0x560a41cfd738 <line:250:5, col:37> col:27 used timeval 'struct timeval () const' inline
|-CXXMethodDecl 0x560a41cfd808 <line:251:5, col:42> col:27 timeval_ceil 'struct timeval () const' inline
|-CXXMethodDecl 0x560a41cfd938 <line:257:5, col:39> col:28 timespec 'struct timespec () const' inline
|-CXXMethodDecl 0x560a41cfda30 <line:262:5, col:31> col:19 used doubleval 'double () const' inline
|-CXXMethodDecl 0x560a41cfdb68 <line:265:5, line:271:5> line:265:23 msecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x560a41d0b5d0 <col:39, line:271:5>
|   `-ReturnStmt 0x560a41d0b5c0 <line:267:9, col:61>
|     `-CallExpr 0x560a41d0b560 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x560a41d0b548 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x560a41d0b3d0 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x560a41d05cb8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x560a41d0b590 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x560a41d0b430 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x560a41d049d8
|       |   `-MemberExpr 0x560a41d0b400 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x560a41d05988
|       |     `-CXXThisExpr 0x560a41d0b3f0 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x560a41d0b5a8 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x560a41d0b4d0 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x560a41d0b4a0 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x560a41d0b460 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa7b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x560a41d0b4b8 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x560a41d0b480 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa720 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x560a41cfdc28 <line:273:5, line:279:5> line:273:23 usecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x560a41d0b790 <col:39, line:279:5>
|   `-ReturnStmt 0x560a41d0b780 <line:275:9, col:61>
|     `-CallExpr 0x560a41d0b720 <col:16, col:61> 'Timestamp::value_type':'long'
|       |-ImplicitCastExpr 0x560a41d0b708 <col:16> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x560a41d0b5e8 <col:16> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x560a41d05cb8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|       |-ImplicitCastExpr 0x560a41d0b750 <col:26, col:29> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x560a41d0b648 <col:26, col:29> 'const int64_t':'const long' lvalue .x 0x560a41d049d8
|       |   `-MemberExpr 0x560a41d0b618 <col:26> 'const Timestamp::rep_t' lvalue ->_t 0x560a41d05988
|       |     `-CXXThisExpr 0x560a41d0b608 <col:26> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x560a41d0b768 <col:32, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|         `-BinaryOperator 0x560a41d0b6e8 <col:32, col:49> 'int' '/'
|           |-ImplicitCastExpr 0x560a41d0b6b8 <col:32> 'int' <IntegralCast>
|           | `-DeclRefExpr 0x560a41d0b678 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa7b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|           `-ImplicitCastExpr 0x560a41d0b6d0 <col:49> 'int' <IntegralCast>
|             `-DeclRefExpr 0x560a41d0b698 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa600 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x560a41cfdce8 <line:281:5, line:287:5> line:281:23 nsecval 'Timestamp::value_type () const' inline
| `-CompoundStmt 0x560a41d0b928 <col:39, line:287:5>
|   `-ReturnStmt 0x560a41d0b918 <line:283:9, col:53>
|     `-BinaryOperator 0x560a41d0b8f8 <col:16, col:53> 'long' '*'
|       |-ImplicitCastExpr 0x560a41d0b8c8 <col:16, col:19> 'int64_t':'long' <LValueToRValue>
|       | `-MemberExpr 0x560a41d0b7e8 <col:16, col:19> 'const int64_t':'const long' lvalue .x 0x560a41d049d8
|       |   `-MemberExpr 0x560a41d0b7b8 <col:16> 'const Timestamp::rep_t' lvalue ->_t 0x560a41d05988
|       |     `-CXXThisExpr 0x560a41d0b7a8 <col:16> 'const Timestamp *' implicit this
|       `-ImplicitCastExpr 0x560a41d0b8e0 <col:23, col:53> 'long' <IntegralCast>
|         `-ParenExpr 0x560a41d0b8a8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x560a41d0b888 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x560a41d0b858 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x560a41d0b818 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa450 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x560a41d0b870 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x560a41d0b838 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa7b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x560a41cfddd8 <line:290:5, line:293:5> line:290:22 msec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x560a41d0cfc0 <col:40, line:293:5>
|   |-DeclStmt 0x560a41d0ba70 <line:291:9, col:48>
|   | `-VarDecl 0x560a41d0b950 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x560a41d0ba50 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x560a41d0b9f8 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x560a41d0b9c8 <col:22> '<bound member function type>' ->subsec 0x560a41cfcd78
|   |     |   `-CXXThisExpr 0x560a41d0b9b8 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x560a41d0ba38 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x560a41d0ba18 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa880 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x560a41d0cfb0 <line:292:9, col:70>
|     `-ExprWithCleanups 0x560a41d0cf98 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x560a41d0cf68 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x560a41d0cf50 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x560a41d0cf30 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x560a41d0cf00 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x560a41d0cc98 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x560a41d0cc80 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x560a41d0ba88 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x560a41d0b950 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x560a41d0cea0 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x560a41d0ce88 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x560a41d0ce58 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x560a41d0ccb0 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x560a41d0cc20 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x560a41d0cc08 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x560a41d0cbb8 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x560a41cf9d58 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x560a41d0cb58 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x560a41d0bab8 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x560a41d0baa8 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x560a41d0cba0 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x560a41d0cb88 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x560a41d0bf78 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x560a41d0bae0 <col:39> 'int' 0
|               |               `-BinaryOperator 0x560a41d0bb70 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x560a41d0bb40 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x560a41d0bb00 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa880 'subsec_per_msec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x560a41d0bb58 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x560a41d0bb20 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x560a41d0b950 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x560a41d0ced0 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x560a41d0cc68 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x560a41d0cc58 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x560a41cfde98 <line:295:5, line:302:5> line:295:22 usec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x560a41d0d518 <col:40, line:302:5>
|   |-DeclStmt 0x560a41d0d110 <line:297:9, col:48>
|   | `-VarDecl 0x560a41d0cff0 <col:9, col:33> col:18 used x 'uint32_t':'unsigned int' cinit
|   |   `-BinaryOperator 0x560a41d0d0f0 <col:22, col:33> 'unsigned int' '%'
|   |     |-CXXMemberCallExpr 0x560a41d0d098 <col:22, col:29> 'uint32_t':'unsigned int'
|   |     | `-MemberExpr 0x560a41d0d068 <col:22> '<bound member function type>' ->subsec 0x560a41cfcd78
|   |     |   `-CXXThisExpr 0x560a41d0d058 <col:22> 'const Timestamp *' implicit this
|   |     `-ImplicitCastExpr 0x560a41d0d0d8 <col:33> 'unsigned int' <IntegralCast>
|   |       `-DeclRefExpr 0x560a41d0d0b8 <col:33> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa950 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x560a41d0d508 <line:298:9, col:70>
|     `-ExprWithCleanups 0x560a41d0d4f0 <col:16, col:70> 'Timestamp'
|       `-CXXConstructExpr 0x560a41d0d4c0 <col:16, col:70> 'Timestamp' 'void (const Timestamp &) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x560a41d0d4a8 <col:16, col:70> 'const Timestamp' lvalue
|           `-ParenExpr 0x560a41d0d488 <col:16, col:70> 'const Timestamp'
|             `-ConditionalOperator 0x560a41d0d458 <col:17, col:66> 'const Timestamp'
|               |-ImplicitCastExpr 0x560a41d0d380 <col:17> 'bool' <IntegralToBoolean>
|               | `-ImplicitCastExpr 0x560a41d0d368 <col:17> 'uint32_t':'unsigned int' <LValueToRValue>
|               |   `-DeclRefExpr 0x560a41d0d128 <col:17> 'uint32_t':'unsigned int' lvalue Var 0x560a41d0cff0 'x' 'uint32_t':'unsigned int'
|               |-CXXConstructExpr 0x560a41d0d3f8 <col:21, col:61> 'const Timestamp' 'void (const Timestamp &) noexcept' elidable
|               | `-MaterializeTemporaryExpr 0x560a41d0d3e0 <col:21, col:61> 'const Timestamp' lvalue
|               |   `-CXXConstructExpr 0x560a41d0d3b0 <col:21, col:61> 'const Timestamp' 'void (Timestamp &&) noexcept' elidable
|               |     `-MaterializeTemporaryExpr 0x560a41d0d398 <col:21, col:61> 'Timestamp' xvalue
|               |       `-CXXOperatorCallExpr 0x560a41d0d308 <col:21, col:61> 'Timestamp'
|               |         |-ImplicitCastExpr 0x560a41d0d2f0 <col:27> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|               |         | `-DeclRefExpr 0x560a41d0d2d0 <col:27> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x560a41cf9d58 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|               |         |-CXXConstructExpr 0x560a41d0d270 <col:21, col:22> 'Timestamp' 'void (const Timestamp &) noexcept'
|               |         | `-UnaryOperator 0x560a41d0d158 <col:21, col:22> 'const Timestamp' lvalue prefix '*' cannot overflow
|               |         |   `-CXXThisExpr 0x560a41d0d148 <col:22> 'const Timestamp *' this
|               |         `-MaterializeTemporaryExpr 0x560a41d0d2b8 <col:29, col:61> 'const Timestamp' lvalue
|               |           `-ImplicitCastExpr 0x560a41d0d2a0 <col:29, col:61> 'const Timestamp' <NoOp>
|               |             `-CXXTemporaryObjectExpr 0x560a41d0d230 <col:29, col:61> 'Timestamp' 'void (int, uint32_t)'
|               |               |-IntegerLiteral 0x560a41d0d180 <col:39> 'int' 0
|               |               `-BinaryOperator 0x560a41d0d210 <col:42, col:60> 'unsigned int' '-'
|               |                 |-ImplicitCastExpr 0x560a41d0d1e0 <col:42> 'unsigned int' <IntegralCast>
|               |                 | `-DeclRefExpr 0x560a41d0d1a0 <col:42> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa950 'subsec_per_usec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|               |                 `-ImplicitCastExpr 0x560a41d0d1f8 <col:60> 'uint32_t':'unsigned int' <LValueToRValue>
|               |                   `-DeclRefExpr 0x560a41d0d1c0 <col:60> 'uint32_t':'unsigned int' lvalue Var 0x560a41d0cff0 'x' 'uint32_t':'unsigned int'
|               `-CXXConstructExpr 0x560a41d0d428 <col:65, col:66> 'const Timestamp' 'void (const Timestamp &) noexcept'
|                 `-UnaryOperator 0x560a41d0d350 <col:65, col:66> 'const Timestamp' lvalue prefix '*' cannot overflow
|                   `-CXXThisExpr 0x560a41d0d340 <col:66> 'const Timestamp *' this
|-CXXMethodDecl 0x560a41cfdf58 <line:304:5, line:306:5> line:304:22 nsec_ceil 'Timestamp () const' inline
| `-CompoundStmt 0x560a41d0d5a0 <col:40, line:306:5>
|   `-ReturnStmt 0x560a41d0d590 <line:305:9, col:17>
|     `-CXXConstructExpr 0x560a41d0d560 <col:16, col:17> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-UnaryOperator 0x560a41d0d548 <col:16, col:17> 'const Timestamp' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x560a41d0d538 <col:17> 'const Timestamp *' this
|-CXXMethodDecl 0x560a41cfe0f8 <line:310:5, col:65> col:29 make_jiffies 'Timestamp (click_jiffies_t)' static inline
| `-ParmVarDecl 0x560a41cfe008 <col:42, col:58> col:58 jiffies 'click_jiffies_t':'unsigned int'
|-CXXMethodDecl 0x560a41cfe2c8 <line:312:5, col:76> col:29 make_jiffies 'Timestamp (click_jiffies_difference_t)' static inline
| `-ParmVarDecl 0x560a41cfe1d0 <col:42, col:69> col:69 jiffies 'click_jiffies_difference_t':'int'
|-CXXMethodDecl 0x560a41cfe3b8 <line:314:5, col:38> col:28 jiffies 'click_jiffies_t () const' inline
|-CXXMethodDecl 0x560a41cfe528 <line:318:5, line:320:5> line:318:29 make_sec 'Timestamp (Timestamp::seconds_type)' static inline
| |-ParmVarDecl 0x560a41cfe468 <col:38, col:51> col:51 used sec 'Timestamp::seconds_type':'int'
| `-CompoundStmt 0x560a41d0d6e8 <col:56, line:320:5>
|   `-ReturnStmt 0x560a41d0d6d8 <line:319:9, col:32>
|     `-ExprWithCleanups 0x560a41d0d6c0 <col:16, col:32> 'Timestamp'
|       `-CXXConstructExpr 0x560a41d0d690 <col:16, col:32> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x560a41d0d678 <col:16, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x560a41d0d638 <col:16, col:32> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x560a41d0d608 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x560a41d0d5c8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x560a41cfe468 'sec' 'Timestamp::seconds_type':'int'
|             `-ImplicitCastExpr 0x560a41d0d620 <col:31> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x560a41d0d5e8 <col:31> 'int' 0
|-CXXMethodDecl 0x560a41cfe768 <line:324:5, line:326:5> line:324:29 make_msec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x560a41cfe5e0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x560a41cfe658 <col:57, col:66> col:66 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x560a41d0d8b8 <col:72, line:326:5>
|   `-ReturnStmt 0x560a41d0d8a8 <line:325:9, col:51>
|     `-ExprWithCleanups 0x560a41d0d890 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x560a41d0d860 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x560a41d0d848 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x560a41d0d808 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x560a41d0d7f0 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x560a41d0d710 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x560a41cfe5e0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x560a41d0d7b0 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x560a41d0d798 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x560a41d0d730 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x560a41d04130 'msec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x560a41d0d7d8 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x560a41d0d750 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x560a41cfe658 'msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a41cfe918 <line:328:5, line:337:5> line:328:29 used make_msec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x560a41cfe828 <col:39, col:50> col:50 used msec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x560a41d0df80 <col:56, line:337:5>
|   |-DeclStmt 0x560a41d0dbb8 <line:329:9, col:51>
|   | `-VarDecl 0x560a41d0d8e0 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x560a41d0dba0 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x560a41d0db70 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x560a41d0db58 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x560a41d0db40 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x560a41d0db10 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x560a41d0daf8 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x560a41d0dae0 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x560a41d0d9d0 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x560a41d0dd70 <line:331:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x560a41d0dc20 <col:9, col:14> 'int64_t':'long' lvalue .x 0x560a41d049d8
|   | | `-MemberExpr 0x560a41d0dbf0 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x560a41d05988
|   | |   `-DeclRefExpr 0x560a41d0dbd0 <col:9> 'Timestamp' lvalue Var 0x560a41d0d8e0 't' 'Timestamp'
|   | `-BinaryOperator 0x560a41d0dd50 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x560a41d0dd20 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560a41d0dc50 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x560a41cfe828 'msec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x560a41d0dd38 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x560a41d0dd00 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x560a41d0dce0 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x560a41d0dcb0 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x560a41d0dc70 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa7b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x560a41d0dcc8 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x560a41d0dc90 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa720 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x560a41d0df68 <line:336:9, col:16>
|     `-CXXConstructExpr 0x560a41d0df38 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x560a41d0df20 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x560a41d0df00 <col:16> 'Timestamp' lvalue Var 0x560a41d0d8e0 't' 'Timestamp'
|-CXXMethodDecl 0x560a41cfeae0 <line:341:5, line:343:5> line:341:29 make_usec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x560a41cfe9d0 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x560a41cfea48 <col:57, col:66> col:66 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x560a41d0e138 <col:72, line:343:5>
|   `-ReturnStmt 0x560a41d0e128 <line:342:9, col:51>
|     `-ExprWithCleanups 0x560a41d0e110 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x560a41d0e0e0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x560a41d0e0c8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x560a41d0e088 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x560a41d0e070 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x560a41d0dfb8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x560a41cfe9d0 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x560a41d0e030 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x560a41d0e018 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x560a41d0dfd8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x560a41d04278 'usec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x560a41d0e058 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x560a41d0dff8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x560a41cfea48 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a41cfec30 <line:345:5, line:354:5> line:345:29 used make_usec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x560a41cfeba0 <col:39, col:50> col:50 used usec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x560a41d0e580 <col:56, line:354:5>
|   |-DeclStmt 0x560a41d0e328 <line:346:9, col:51>
|   | `-VarDecl 0x560a41d0e160 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x560a41d0e310 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x560a41d0e2e0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x560a41d0e2c8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x560a41d0e2b0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x560a41d0e280 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x560a41d0e268 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x560a41d0e250 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x560a41d0e220 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x560a41d0e4e0 <line:348:9, col:55> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x560a41d0e390 <col:9, col:14> 'int64_t':'long' lvalue .x 0x560a41d049d8
|   | | `-MemberExpr 0x560a41d0e360 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x560a41d05988
|   | |   `-DeclRefExpr 0x560a41d0e340 <col:9> 'Timestamp' lvalue Var 0x560a41d0e160 't' 'Timestamp'
|   | `-BinaryOperator 0x560a41d0e4c0 <col:18, col:55> 'long' '*'
|   |   |-ImplicitCastExpr 0x560a41d0e490 <col:18> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560a41d0e3c0 <col:18> 'Timestamp::value_type':'long' lvalue ParmVar 0x560a41cfeba0 'usec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x560a41d0e4a8 <col:25, col:55> 'long' <IntegralCast>
|   |     `-ParenExpr 0x560a41d0e470 <col:25, col:55> 'int'
|   |       `-BinaryOperator 0x560a41d0e450 <col:26, col:43> 'int' '/'
|   |         |-ImplicitCastExpr 0x560a41d0e420 <col:26> 'int' <IntegralCast>
|   |         | `-DeclRefExpr 0x560a41d0e3e0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa7b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |         `-ImplicitCastExpr 0x560a41d0e438 <col:43> 'int' <IntegralCast>
|   |           `-DeclRefExpr 0x560a41d0e400 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa600 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x560a41d0e568 <line:353:9, col:16>
|     `-CXXConstructExpr 0x560a41d0e538 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x560a41d0e520 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x560a41d0e500 <col:16> 'Timestamp' lvalue Var 0x560a41d0e160 't' 'Timestamp'
|-CXXMethodDecl 0x560a41cfedf8 <line:358:5, line:360:5> line:358:29 make_nsec 'Timestamp (Timestamp::seconds_type, uint32_t)' static inline
| |-ParmVarDecl 0x560a41cfece8 <col:39, col:52> col:52 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x560a41cfed60 <col:57, col:66> col:66 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x560a41d0e738 <col:72, line:360:5>
|   `-ReturnStmt 0x560a41d0e728 <line:359:9, col:51>
|     `-ExprWithCleanups 0x560a41d0e710 <col:16, col:51> 'Timestamp'
|       `-CXXConstructExpr 0x560a41d0e6e0 <col:16, col:51> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x560a41d0e6c8 <col:16, col:51> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x560a41d0e688 <col:16, col:51> 'Timestamp' 'void (int, uint32_t)'
|             |-ImplicitCastExpr 0x560a41d0e670 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue>
|             | `-DeclRefExpr 0x560a41d0e5b8 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x560a41cfece8 'sec' 'Timestamp::seconds_type':'int'
|             `-CallExpr 0x560a41d0e630 <col:31, col:50> 'uint32_t':'unsigned int'
|               |-ImplicitCastExpr 0x560a41d0e618 <col:31> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x560a41d0e5d8 <col:31> 'uint32_t (uint32_t)' lvalue CXXMethod 0x560a41d043c0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|               `-ImplicitCastExpr 0x560a41d0e658 <col:46> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x560a41d0e5f8 <col:46> 'uint32_t':'unsigned int' lvalue ParmVar 0x560a41cfed60 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a41cfef48 <line:362:5, line:371:5> line:362:29 make_nsec 'Timestamp (Timestamp::value_type)' static inline
| |-ParmVarDecl 0x560a41cfeeb8 <col:39, col:50> col:50 used nsec 'Timestamp::value_type':'long'
| `-CompoundStmt 0x560a41d18068 <col:56, line:371:5>
|   |-DeclStmt 0x560a41d0e928 <line:363:9, col:51>
|   | `-VarDecl 0x560a41d0e760 <col:9, col:50> col:19 used t 'Timestamp' nrvo cinit
|   |   `-ExprWithCleanups 0x560a41d0e910 <col:19, col:50> 'Timestamp'
|   |     `-CXXConstructExpr 0x560a41d0e8e0 <col:19, col:50> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x560a41d0e8c8 <col:23, col:50> 'Timestamp' xvalue
|   |         `-ImplicitCastExpr 0x560a41d0e8b0 <col:23, col:50> 'Timestamp' <ConstructorConversion>
|   |           `-CXXConstructExpr 0x560a41d0e880 <col:23, col:50> 'Timestamp' 'void (const Timestamp::uninitialized_t &)'
|   |             `-MaterializeTemporaryExpr 0x560a41d0e868 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' lvalue
|   |               `-ImplicitCastExpr 0x560a41d0e850 <col:23, col:50> 'const Timestamp::uninitialized_t':'const uninitialized_type' <NoOp>
|   |                 `-CXXTemporaryObjectExpr 0x560a41d0e820 <col:23, col:50> 'Timestamp::uninitialized_t':'uninitialized_type' 'void () noexcept' zeroing
|   |-BinaryOperator 0x560a41d17fc8 <line:365:9, col:63> 'int64_t':'long' lvalue '='
|   | |-MemberExpr 0x560a41d17e50 <col:9, col:14> 'int64_t':'long' lvalue .x 0x560a41d049d8
|   | | `-MemberExpr 0x560a41d17e20 <col:9, col:11> 'Timestamp::rep_t' lvalue ._t 0x560a41d05988
|   | |   `-DeclRefExpr 0x560a41d0e940 <col:9> 'Timestamp' lvalue Var 0x560a41d0e760 't' 'Timestamp'
|   | `-CallExpr 0x560a41d17f68 <col:18, col:63> 'Timestamp::value_type':'long'
|   |   |-ImplicitCastExpr 0x560a41d17f50 <col:18> 'Timestamp::value_type (*)(Timestamp::value_type, uint32_t)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x560a41d17e80 <col:18> 'Timestamp::value_type (Timestamp::value_type, uint32_t)' lvalue CXXMethod 0x560a41d05cb8 'value_div' 'Timestamp::value_type (Timestamp::value_type, uint32_t)'
|   |   |-ImplicitCastExpr 0x560a41d17f98 <col:28> 'Timestamp::value_type':'long' <LValueToRValue>
|   |   | `-DeclRefExpr 0x560a41d17ea0 <col:28> 'Timestamp::value_type':'long' lvalue ParmVar 0x560a41cfeeb8 'nsec' 'Timestamp::value_type':'long'
|   |   `-ImplicitCastExpr 0x560a41d17fb0 <col:34, col:49> 'uint32_t':'unsigned int' <IntegralCast>
|   |     `-BinaryOperator 0x560a41d17f30 <col:34, col:49> 'int' '/'
|   |       |-ImplicitCastExpr 0x560a41d17f00 <col:34> 'int' <IntegralCast>
|   |       | `-DeclRefExpr 0x560a41d17ec0 <col:34> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa450 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   |       `-ImplicitCastExpr 0x560a41d17f18 <col:49> 'int' <IntegralCast>
|   |         `-DeclRefExpr 0x560a41d17ee0 <col:49> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa7b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|   `-ReturnStmt 0x560a41d18050 <line:370:9, col:16>
|     `-CXXConstructExpr 0x560a41d18020 <col:16> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|       `-ImplicitCastExpr 0x560a41d18008 <col:16> 'Timestamp' xvalue <NoOp>
|         `-DeclRefExpr 0x560a41d17fe8 <col:16> 'Timestamp' lvalue Var 0x560a41d0e760 't' 'Timestamp'
|-CXXMethodDecl 0x560a41cff038 <line:375:5, line:377:5> line:375:29 epsilon 'Timestamp ()' static inline
| `-CompoundStmt 0x560a41d181a8 <col:39, line:377:5>
|   `-ReturnStmt 0x560a41d18198 <line:376:9, col:30>
|     `-ExprWithCleanups 0x560a41d18180 <col:16, col:30> 'Timestamp'
|       `-CXXConstructExpr 0x560a41d18150 <col:16, col:30> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x560a41d18138 <col:16, col:30> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x560a41d180f8 <col:16, col:30> 'Timestamp' 'void (int, uint32_t)'
|             |-IntegerLiteral 0x560a41d180a0 <col:26> 'int' 0
|             `-ImplicitCastExpr 0x560a41d180e0 <col:29> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x560a41d180c0 <col:29> 'int' 1
|-CXXMethodDecl 0x560a41cff0f8 <line:380:5, line:382:5> line:380:17 clear 'void ()' inline
| `-CompoundStmt 0x560a41d18288 <col:25, line:382:5>
|   `-CXXMemberCallExpr 0x560a41d18240 <line:381:9, col:20> 'void'
|     |-MemberExpr 0x560a41d181d0 <col:9> '<bound member function type>' ->assign 0x560a41cff2f8
|     | `-CXXThisExpr 0x560a41d181c0 <col:9> 'Timestamp *' implicit this
|     |-IntegerLiteral 0x560a41d18200 <col:16> 'int' 0
|     `-ImplicitCastExpr 0x560a41d18270 <col:19> 'uint32_t':'unsigned int' <IntegralCast>
|       `-IntegerLiteral 0x560a41d18220 <col:19> 'int' 0
|-CXXMethodDecl 0x560a41cff2f8 <line:388:5, line:395:5> line:388:17 used assign 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x560a41cff1a8 <col:24, col:37> col:37 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x560a41cff220 <col:42, col:60> col:51 used subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x560a41d075b0 <col:60> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x560a41d07590 <col:60> 'int' 0
| `-CompoundStmt 0x560a41d18480 <col:63, line:395:5>
|   `-BinaryOperator 0x560a41d18460 <line:390:9, col:49> 'int64_t':'long' lvalue '='
|     |-MemberExpr 0x560a41d182e0 <col:9, col:12> 'int64_t':'long' lvalue .x 0x560a41d049d8
|     | `-MemberExpr 0x560a41d182b0 <col:9> 'Timestamp::rep_t' lvalue ->_t 0x560a41d05988
|     |   `-CXXThisExpr 0x560a41d182a0 <col:9> 'Timestamp *' implicit this
|     `-BinaryOperator 0x560a41d18440 <col:16, col:49> 'long' '+'
|       |-BinaryOperator 0x560a41d183d0 <col:16, col:32> 'long' '*'
|       | |-CStyleCastExpr 0x560a41d18370 <col:16, col:26> 'int64_t':'long' <NoOp>
|       | | `-ImplicitCastExpr 0x560a41d18358 <col:26> 'int64_t':'long' <IntegralCast> part_of_explicit_cast
|       | |   `-ImplicitCastExpr 0x560a41d18340 <col:26> 'Timestamp::seconds_type':'int' <LValueToRValue> part_of_explicit_cast
|       | |     `-DeclRefExpr 0x560a41d18310 <col:26> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x560a41cff1a8 'sec' 'Timestamp::seconds_type':'int'
|       | `-ImplicitCastExpr 0x560a41d183b8 <col:32> 'long' <IntegralCast>
|       |   `-DeclRefExpr 0x560a41d18398 <col:32> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa7b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|       `-ImplicitCastExpr 0x560a41d18428 <col:49> 'long' <IntegralCast>
|         `-ImplicitCastExpr 0x560a41d18410 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-DeclRefExpr 0x560a41d183f0 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x560a41cff220 'subsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a41cff4c8 <line:397:5, line:399:5> line:397:17 used assign_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x560a41cff3b8 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x560a41cff430 <col:47, col:56> col:56 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x560a41d185d8 <col:62, line:399:5>
|   `-CXXMemberCallExpr 0x560a41d18590 <line:398:9, col:41> 'void'
|     |-MemberExpr 0x560a41d184a8 <col:9> '<bound member function type>' ->assign 0x560a41cff2f8
|     | `-CXXThisExpr 0x560a41d18498 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x560a41d185c0 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x560a41d184d8 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x560a41cff3b8 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x560a41d18550 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x560a41d18538 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x560a41d184f8 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x560a41d04278 'usec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x560a41d18578 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x560a41d18518 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x560a41cff430 'usec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a41cff698 <line:401:5, line:403:5> line:401:17 used assign_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x560a41cff588 <col:29, col:42> col:42 used sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x560a41cff600 <col:47, col:56> col:56 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x560a41d18730 <col:62, line:403:5>
|   `-CXXMemberCallExpr 0x560a41d186e8 <line:402:9, col:41> 'void'
|     |-MemberExpr 0x560a41d18600 <col:9> '<bound member function type>' ->assign 0x560a41cff2f8
|     | `-CXXThisExpr 0x560a41d185f0 <col:9> 'Timestamp *' implicit this
|     |-ImplicitCastExpr 0x560a41d18718 <col:16> 'Timestamp::seconds_type':'int' <LValueToRValue>
|     | `-DeclRefExpr 0x560a41d18630 <col:16> 'Timestamp::seconds_type':'int' lvalue ParmVar 0x560a41cff588 'sec' 'Timestamp::seconds_type':'int'
|     `-CallExpr 0x560a41d186a8 <col:21, col:40> 'uint32_t':'unsigned int'
|       |-ImplicitCastExpr 0x560a41d18690 <col:21> 'uint32_t (*)(uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x560a41d18650 <col:21> 'uint32_t (uint32_t)' lvalue CXXMethod 0x560a41d043c0 'nsec_to_subsec' 'uint32_t (uint32_t)'
|       `-ImplicitCastExpr 0x560a41d186d0 <col:36> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x560a41d18670 <col:36> 'uint32_t':'unsigned int' lvalue ParmVar 0x560a41cff600 'nsec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a41cff868 <line:408:5, col:86> col:17 set 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x560a41cff758 <col:21, col:34> col:34 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x560a41cff7d0 <col:39, col:57> col:48 subsec 'uint32_t':'unsigned int' cinit
| | `-ImplicitCastExpr 0x560a41d075e8 <col:57> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x560a41d075c8 <col:57> 'int' 0
| `-DeprecatedAttr 0x560a41cff918 <col:75> "" ""
|-CXXMethodDecl 0x560a41cffaa8 <line:411:5, col:85> col:17 set_usec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x560a41cff998 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x560a41cffa10 <col:44, col:53> col:53 usec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x560a41cffb58 <col:74> "" ""
|-CXXMethodDecl 0x560a41cffce8 <line:414:5, col:85> col:17 set_nsec 'void (Timestamp::seconds_type, uint32_t)' inline
| |-ParmVarDecl 0x560a41cffbd8 <col:26, col:39> col:39 sec 'Timestamp::seconds_type':'int'
| |-ParmVarDecl 0x560a41cffc50 <col:44, col:53> col:53 nsec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x560a41cffd98 <col:74> "" ""
|-CXXMethodDecl 0x560a41cffe28 <line:417:5, col:53> col:17 set_now 'void ()' inline
| `-DeprecatedAttr 0x560a41cffec8 <col:42> "" ""
|-CXXMethodDecl 0x560a41d00070 <line:420:5, col:53> col:9 set_timeval_ioctl 'int (int, int)'
| |-ParmVarDecl 0x560a41cfff50 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x560a41cfffd0 <col:35, col:39> col:39 ioctl_selector 'int'
|-CXXMethodDecl 0x560a41d00140 <line:432:5, col:33> col:29 now 'Timestamp ()' static inline
|-CXXMethodDecl 0x560a41d03970 <line:438:5, col:56> col:45 used assign_now 'void ()'
| |-NoInlineAttr 0x560a41d03a10 <col:20>
| `-OptimizeNoneAttr 0x560a41d03a68 <col:30>
|-CXXMethodDecl 0x560a41d03ab0 <line:446:5, col:36> col:29 used recent 'Timestamp ()' static inline
|-CXXMethodDecl 0x560a41d03b70 <line:452:5, col:31> col:17 used assign_recent 'void ()' inline
|-CXXMethodDecl 0x560a41d03c30 <line:466:5, col:40> col:29 now_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x560a41d03cf0 <line:472:5, col:35> col:17 used assign_now_steady 'void ()' inline
|-CXXMethodDecl 0x560a41d03db0 <line:481:5, col:43> col:29 used recent_steady 'Timestamp ()' static inline
|-CXXMethodDecl 0x560a41d03e70 <line:487:5, col:38> col:17 used assign_recent_steady 'void ()' inline
|-CXXMethodDecl 0x560a41d03f30 <line:496:5, col:22> col:12 unparse 'String () const'
|-CXXMethodDecl 0x560a41d03ff0 <line:501:5, col:31> col:12 unparse_interval 'String () const'
|-CXXMethodDecl 0x560a41d04130 <line:510:5, line:512:5> line:510:28 used msec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x560a41d040a0 <col:43, col:52> col:52 used msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x560a41d18878 <col:58, line:512:5>
|   `-ReturnStmt 0x560a41d18868 <line:511:9, col:53>
|     `-BinaryOperator 0x560a41d18848 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x560a41d18818 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x560a41d18748 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x560a41d040a0 'msec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x560a41d18830 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x560a41d187f8 <col:23, col:53> 'int'
|           `-BinaryOperator 0x560a41d187d8 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x560a41d187a8 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x560a41d18768 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa7b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x560a41d187c0 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x560a41d18788 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa720 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x560a41d04278 <line:514:5, line:516:5> line:514:28 used usec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x560a41d041e8 <col:43, col:52> col:52 used usec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x560a41d189c0 <col:58, line:516:5>
|   `-ReturnStmt 0x560a41d189b0 <line:515:9, col:53>
|     `-BinaryOperator 0x560a41d18990 <col:16, col:53> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x560a41d18960 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x560a41d18890 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x560a41d041e8 'usec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x560a41d18978 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x560a41d18940 <col:23, col:53> 'int'
|           `-BinaryOperator 0x560a41d18920 <col:24, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x560a41d188f0 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x560a41d188b0 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa7b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x560a41d18908 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x560a41d188d0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa600 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x560a41d043c0 <line:518:5, line:520:5> line:518:28 used nsec_to_subsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x560a41d04330 <col:43, col:52> col:52 used nsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x560a41d18b08 <col:58, line:520:5>
|   `-ReturnStmt 0x560a41d18af8 <line:519:9, col:53>
|     `-BinaryOperator 0x560a41d18ad8 <col:16, col:53> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x560a41d18aa8 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x560a41d189d8 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x560a41d04330 'nsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x560a41d18ac0 <col:23, col:53> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x560a41d18a88 <col:23, col:53> 'int'
|           `-BinaryOperator 0x560a41d18a68 <col:24, col:39> 'int' '/'
|             |-ImplicitCastExpr 0x560a41d18a38 <col:24> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x560a41d189f8 <col:24> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa450 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x560a41d18a50 <col:39> 'int' <IntegralCast>
|               `-DeclRefExpr 0x560a41d18a18 <col:39> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa7b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x560a41d04508 <line:522:5, line:524:5> line:522:28 used subsec_to_msec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x560a41d04478 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x560a41d18c50 <col:60, line:524:5>
|   `-ReturnStmt 0x560a41d18c40 <line:523:9, col:55>
|     `-BinaryOperator 0x560a41d18c20 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x560a41d18bf0 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x560a41d18b20 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x560a41d04478 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x560a41d18c08 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x560a41d18bd0 <col:25, col:55> 'int'
|           `-BinaryOperator 0x560a41d18bb0 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x560a41d18b80 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x560a41d18b40 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa7b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x560a41d18b98 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x560a41d18b60 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa720 'msec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x560a41d04650 <line:526:5, line:528:5> line:526:28 used subsec_to_usec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x560a41d045c0 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x560a41d18d98 <col:60, line:528:5>
|   `-ReturnStmt 0x560a41d18d88 <line:527:9, col:55>
|     `-BinaryOperator 0x560a41d18d68 <col:16, col:55> 'unsigned int' '/'
|       |-ImplicitCastExpr 0x560a41d18d38 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x560a41d18c68 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x560a41d045c0 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x560a41d18d50 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x560a41d18d18 <col:25, col:55> 'int'
|           `-BinaryOperator 0x560a41d18cf8 <col:26, col:43> 'int' '/'
|             |-ImplicitCastExpr 0x560a41d18cc8 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x560a41d18c88 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa7b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x560a41d18ce0 <col:43> 'int' <IntegralCast>
|               `-DeclRefExpr 0x560a41d18ca8 <col:43> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa600 'usec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXMethodDecl 0x560a41d04798 <line:530:5, line:532:5> line:530:28 used subsec_to_nsec 'uint32_t (uint32_t)' static inline
| |-ParmVarDecl 0x560a41d04708 <col:43, col:52> col:52 used subsec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x560a41d18ee0 <col:60, line:532:5>
|   `-ReturnStmt 0x560a41d18ed0 <line:531:9, col:55>
|     `-BinaryOperator 0x560a41d18eb0 <col:16, col:55> 'unsigned int' '*'
|       |-ImplicitCastExpr 0x560a41d18e80 <col:16> 'uint32_t':'unsigned int' <LValueToRValue>
|       | `-DeclRefExpr 0x560a41d18db0 <col:16> 'uint32_t':'unsigned int' lvalue ParmVar 0x560a41d04708 'subsec' 'uint32_t':'unsigned int'
|       `-ImplicitCastExpr 0x560a41d18e98 <col:25, col:55> 'unsigned int' <IntegralCast>
|         `-ParenExpr 0x560a41d18e60 <col:25, col:55> 'int'
|           `-BinaryOperator 0x560a41d18e40 <col:26, col:41> 'int' '/'
|             |-ImplicitCastExpr 0x560a41d18e10 <col:26> 'int' <IntegralCast>
|             | `-DeclRefExpr 0x560a41d18dd0 <col:26> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa450 'nsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|             `-ImplicitCastExpr 0x560a41d18e28 <col:41> 'int' <IntegralCast>
|               `-DeclRefExpr 0x560a41d18df0 <col:41> 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)' EnumConstant 0x560a41cfa7b0 'subsec_per_sec' 'Timestamp::(anonymous enum at ../dummy_inc/click/timestamp.hh:142:5)'
|-CXXRecordDecl 0x560a41d04840 prev 0x560a41cfac50 <line:539:5, line:566:5> line:539:11 referenced union rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x560a41d04938 <col:5, col:11> col:11 implicit union rep_t
| |-FieldDecl 0x560a41d049d8 <line:541:9, col:17> col:17 referenced x 'int64_t':'long'
| |-CXXConstructorDecl 0x560a41d07638 <line:539:11> col:11 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x560a41d0aa38 <col:11>
| |-CXXConstructorDecl 0x560a41d07710 <col:11> col:11 implicit used constexpr rep_t 'void (const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x560a41d077f8 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x560a41d0b180 <col:11>
| |-CXXConstructorDecl 0x560a41d07898 <col:11> col:11 implicit used constexpr rep_t 'void (Timestamp::rep_t &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x560a41d0a9c8 <col:11> col:11 'Timestamp::rep_t &&'
| | `-CompoundStmt 0x560a41d0cdd8 <col:11>
| |-CXXDestructorDecl 0x560a41d0bce8 <col:11> col:11 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x560a41dd0108 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(const Timestamp::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x560a41dd0218 <col:11> col:11 'const Timestamp::rep_t &'
| | `-CompoundStmt 0x560a41dd0ae0 <col:11>
| |   `-ReturnStmt 0x560a41dd0ad0 <col:11>
| |     `-UnaryOperator 0x560a41dd0ab8 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x560a41dd0aa8 <col:11> 'Timestamp::rep_t *' this
| `-CXXMethodDecl 0x560a41dd0288 <col:11> col:11 implicit used constexpr operator= 'Timestamp::rep_t &(Timestamp::rep_t &&) noexcept' inline default trivial
|   |-ParmVarDecl 0x560a41dd0398 <col:11> col:11 'Timestamp::rep_t &&'
|   `-CompoundStmt 0x560a41e1b8c0 <col:11>
|     `-ReturnStmt 0x560a41e1b8b0 <col:11>
|       `-UnaryOperator 0x560a41e1b898 <col:11> 'Timestamp::rep_t' lvalue prefix '*' cannot overflow
|         `-CXXThisExpr 0x560a41e1b888 <col:11> 'Timestamp::rep_t *' this
|-EnumDecl 0x560a41d04a40 <line:571:5, line:577:5> line:571:10 referenced warp_class_type
| |-EnumConstantDecl 0x560a41d04b40 <line:572:9, col:21> col:9 warp_none 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x560a41d04d40 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41d04b20 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x560a41d04b00 <col:21> 'int' 0
| |-EnumConstantDecl 0x560a41d04bd0 <line:573:9, col:23> col:9 warp_linear 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x560a41d04d58 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41d04bb0 <col:23> 'int' Int: 1
| |     `-IntegerLiteral 0x560a41d04b90 <col:23> 'int' 1
| |-EnumConstantDecl 0x560a41d04c60 <line:574:9, col:23> col:9 referenced warp_nowait 'Timestamp::warp_class_type'
| | `-ImplicitCastExpr 0x560a41d04d70 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41d04c40 <col:23> 'int' Int: 2
| |     `-IntegerLiteral 0x560a41d04c20 <col:23> 'int' 2
| `-EnumConstantDecl 0x560a41d04cf0 <line:576:9, col:27> col:9 warp_simulation 'Timestamp::warp_class_type'
|   `-ImplicitCastExpr 0x560a41d04d88 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a41d04cd0 <col:27> 'int' Int: 3
|       `-IntegerLiteral 0x560a41d04cb0 <col:27> 'int' 3
|-CXXMethodDecl 0x560a41d04dc8 <line:581:5, col:34> col:23 warp_class 'int ()' static inline
|-CXXMethodDecl 0x560a41d04e90 <line:588:5, col:37> col:26 warp_speed 'double ()' static inline
|-CXXMethodDecl 0x560a41d05098 <line:621:5, col:65> col:17 warp_set_class 'void (Timestamp::warp_class_type, double)' static
| |-ParmVarDecl 0x560a41d04f40 <col:32, col:48> col:48 w 'Timestamp::warp_class_type'
| `-ParmVarDecl 0x560a41d04fc0 <col:51, col:62> col:58 s 'double' cinit
|   `-FloatingLiteral 0x560a41d07600 <col:62> 'double' 1.000000e+00
|-CXXMethodDecl 0x560a41d052a8 <line:628:5, col:82> col:17 warp_set_now 'void (const Timestamp &, const Timestamp &)' static
| |-ParmVarDecl 0x560a41d05158 <col:30, col:47> col:47 t_system 'const Timestamp &'
| `-ParmVarDecl 0x560a41d051d0 <col:57, col:74> col:74 t_steady 'const Timestamp &'
|-CXXMethodDecl 0x560a41d05378 <line:632:5, col:40> col:22 warp_real_delay 'Timestamp () const' inline
|-CXXMethodDecl 0x560a41d05438 <line:635:5, col:37> col:24 used warp_jumping 'bool ()' static inline
|-CXXMethodDecl 0x560a41d055a8 <line:640:5, col:57> col:17 warp_jump_steady 'void (const Timestamp &)' static
| `-ParmVarDecl 0x560a41d054e8 <col:34, col:51> col:51 expiry 'const Timestamp &'
|-CXXMethodDecl 0x560a41d05670 <line:647:5, col:42> col:29 now_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x560a41d05730 <line:653:5, col:37> col:17 used assign_now_unwarped 'void ()' inline
|-CXXMethodDecl 0x560a41d057f0 <line:659:5, col:49> col:29 now_steady_unwarped 'Timestamp ()' static inline
|-CXXMethodDecl 0x560a41d058b0 <line:666:5, col:44> col:17 used assign_now_steady_unwarped 'void ()' inline
|-AccessSpecDecl 0x560a41d05950 <line:670:3, col:10> col:3 private
|-FieldDecl 0x560a41d05988 <line:672:5, col:11> col:11 referenced _t 'Timestamp::rep_t'
|-CXXMethodDecl 0x560a41d059f8 <line:674:5, line:684:5> line:674:17 used add_fix 'void ()' inline
| `-CompoundStmt 0x560a41d18ef8 <col:27, line:684:5>
|-CXXMethodDecl 0x560a41d05ab8 <line:686:5, line:696:5> line:686:17 used sub_fix 'void ()' inline
| `-CompoundStmt 0x560a41d18f08 <col:27, line:696:5>
|-CXXMethodDecl 0x560a41d05cb8 <line:698:5, line:700:5> line:698:30 used value_div 'Timestamp::value_type (Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x560a41d05b68 <col:40, col:51> col:51 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x560a41d05be0 <col:54, col:63> col:63 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x560a41d19090 <col:66, line:700:5>
|   `-ReturnStmt 0x560a41d19080 <line:699:9, col:31>
|     `-CallExpr 0x560a41d19020 <col:16, col:31> 'int64_t':'long'
|       |-ImplicitCastExpr 0x560a41d19008 <col:16> 'int64_t (*)(int64_t, uint32_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x560a41d18fb8 <col:16> 'int64_t (int64_t, uint32_t)' lvalue Function 0x560a41b89088 'int_divide' 'int64_t (int64_t, uint32_t)'
|       |-ImplicitCastExpr 0x560a41d19050 <col:27> 'Timestamp::value_type':'long' <LValueToRValue>
|       | `-DeclRefExpr 0x560a41d18f78 <col:27> 'Timestamp::value_type':'long' lvalue ParmVar 0x560a41d05b68 'a' 'Timestamp::value_type':'long'
|       `-ImplicitCastExpr 0x560a41d19068 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|         `-DeclRefExpr 0x560a41d18f98 <col:30> 'uint32_t':'unsigned int' lvalue ParmVar 0x560a41d05be0 'b' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a41d06028 <line:702:5, line:707:5> line:702:24 value_div_mod 'void (int32_t &, int32_t &, Timestamp::value_type, uint32_t)' static inline
| |-ParmVarDecl 0x560a41d05d78 <col:38, col:47> col:47 used div 'int32_t &'
| |-ParmVarDecl 0x560a41d05df0 <col:52, col:61> col:61 used rem 'int32_t &'
| |-ParmVarDecl 0x560a41d05e68 <line:703:38, col:49> col:49 used a 'Timestamp::value_type':'long'
| |-ParmVarDecl 0x560a41d05ee0 <col:52, col:61> col:61 used b 'uint32_t':'unsigned int'
| `-CompoundStmt 0x560a41d193e0 <col:64, line:707:5>
|   |-DeclStmt 0x560a41d19120 <line:704:9, col:24>
|   | `-VarDecl 0x560a41d190b8 <col:9, col:20> col:20 used quot 'Timestamp::value_type':'long'
|   |-BinaryOperator 0x560a41d19330 <line:705:9, col:39> 'int32_t':'int' lvalue '='
|   | |-DeclRefExpr 0x560a41d19138 <col:9> 'int32_t':'int' lvalue ParmVar 0x560a41d05df0 'rem' 'int32_t &'
|   | `-ImplicitCastExpr 0x560a41d19318 <col:15, col:39> 'int32_t':'int' <IntegralCast>
|   |   `-CallExpr 0x560a41d192b0 <col:15, col:39> 'uint32_t':'unsigned int'
|   |     |-ImplicitCastExpr 0x560a41d19298 <col:15> 'uint32_t (*)(int64_t, uint32_t, int64_t &)' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x560a41d19218 <col:15> 'uint32_t (int64_t, uint32_t, int64_t &)' lvalue Function 0x560a41b8e368 'int_remainder' 'uint32_t (int64_t, uint32_t, int64_t &)'
|   |     |-ImplicitCastExpr 0x560a41d192e8 <col:29> 'Timestamp::value_type':'long' <LValueToRValue>
|   |     | `-DeclRefExpr 0x560a41d191b8 <col:29> 'Timestamp::value_type':'long' lvalue ParmVar 0x560a41d05e68 'a' 'Timestamp::value_type':'long'
|   |     |-ImplicitCastExpr 0x560a41d19300 <col:32> 'uint32_t':'unsigned int' <LValueToRValue>
|   |     | `-DeclRefExpr 0x560a41d191d8 <col:32> 'uint32_t':'unsigned int' lvalue ParmVar 0x560a41d05ee0 'b' 'uint32_t':'unsigned int'
|   |     `-DeclRefExpr 0x560a41d191f8 <col:35> 'Timestamp::value_type':'long' lvalue Var 0x560a41d190b8 'quot' 'Timestamp::value_type':'long'
|   `-BinaryOperator 0x560a41d193c0 <line:706:9, col:15> 'int32_t':'int' lvalue '='
|     |-DeclRefExpr 0x560a41d19350 <col:9> 'int32_t':'int' lvalue ParmVar 0x560a41d05d78 'div' 'int32_t &'
|     `-ImplicitCastExpr 0x560a41d193a8 <col:15> 'int32_t':'int' <IntegralCast>
|       `-ImplicitCastExpr 0x560a41d19390 <col:15> 'Timestamp::value_type':'long' <LValueToRValue>
|         `-DeclRefExpr 0x560a41d19370 <col:15> 'Timestamp::value_type':'long' lvalue Var 0x560a41d190b8 'quot' 'Timestamp::value_type':'long'
|-CXXMethodDecl 0x560a41d062c8 <line:709:5, col:67> col:17 used assign_now 'void (bool, bool, bool)' inline
| |-ParmVarDecl 0x560a41d060f8 <col:28, col:33> col:33 recent 'bool'
| |-ParmVarDecl 0x560a41d06170 <col:41, col:46> col:46 steady 'bool'
| `-ParmVarDecl 0x560a41d061e8 <col:54, col:59> col:59 unwarped 'bool'
|-CXXMethodDecl 0x560a41d06568 <line:712:5, col:98> col:24 warp_adjust 'void (bool, const Timestamp &, const Timestamp &)' static inline
| |-ParmVarDecl 0x560a41d06390 <col:36, col:41> col:41 steady 'bool'
| |-ParmVarDecl 0x560a41d06408 <col:49, col:66> col:66 t_raw 'const Timestamp &'
| `-ParmVarDecl 0x560a41d06480 <col:73, col:90> col:90 t_warped 'const Timestamp &'
|-CXXMethodDecl 0x560a41d066f8 <line:713:5, col:42> col:22 warped 'Timestamp (bool) const' inline
| `-ParmVarDecl 0x560a41d06630 <col:29, col:34> col:34 steady 'bool'
|-CXXMethodDecl 0x560a41d068f8 <line:714:5, col:41> col:10 used warp 'void (bool, bool)'
| |-ParmVarDecl 0x560a41d067b0 <col:15, col:20> col:20 steady 'bool'
| `-ParmVarDecl 0x560a41d06828 <col:28, col:33> col:33 from_now 'bool'
|-FriendDecl 0x560a41d06bc8 <line:717:5, col:73> col:24
| `-FunctionDecl 0x560a41d06b08 parent 0x560a417e0488 <col:5, col:73> col:24 used operator== 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x560a41d069b8 <col:35, col:52> col:52 a 'const Timestamp &'
|   `-ParmVarDecl 0x560a41d06a30 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x560a41d06de8 <line:718:5, col:72> col:24
| `-FunctionDecl 0x560a41d06d28 parent 0x560a417e0488 <col:5, col:72> col:24 used operator< 'bool (const Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x560a41d06c18 <col:34, col:51> col:51 a 'const Timestamp &'
|   `-ParmVarDecl 0x560a41d06c90 <col:54, col:71> col:71 b 'const Timestamp &'
|-FriendDecl 0x560a41d06fb0 <line:719:5, col:57> col:29
| `-FunctionDecl 0x560a41d06ef8 parent 0x560a417e0488 <col:5, col:57> col:29 operator- 'Timestamp (const Timestamp &)' inline
|   `-ParmVarDecl 0x560a41d06e38 <col:39, col:56> col:56 b 'const Timestamp &'
|-FriendDecl 0x560a41d07238 <line:720:5, col:73> col:30
| `-FunctionDecl 0x560a41d07178 parent 0x560a417e0488 <col:5, col:73> col:30 used operator+= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x560a41d07028 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x560a41d070a0 <col:55, col:72> col:72 b 'const Timestamp &'
|-FriendDecl 0x560a41d07458 <line:721:5, col:73> col:30
| `-FunctionDecl 0x560a41d07398 parent 0x560a417e0488 <col:5, col:73> col:30 used operator-= 'Timestamp &(Timestamp &, const Timestamp &)' inline
|   |-ParmVarDecl 0x560a41d07288 <col:41, col:52> col:52 a 'Timestamp &'
|   `-ParmVarDecl 0x560a41d07300 <col:55, col:72> col:72 b 'const Timestamp &'
|-CXXConstructorDecl 0x560a41d0bb90 <line:122:7> col:7 implicit used constexpr Timestamp 'void (const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x560a41d0bc78 <col:7> col:7 used 'const Timestamp &'
| |-CXXCtorInitializer Field 0x560a41d05988 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x560a41d0cae8 <col:7> 'Timestamp::rep_t' 'void (const Timestamp::rep_t &) noexcept'
| |   `-MemberExpr 0x560a41d0caa0 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x560a41d05988
| |     `-DeclRefExpr 0x560a41d0ca80 <col:7> 'const Timestamp' lvalue ParmVar 0x560a41d0bc78 '' 'const Timestamp &'
| `-CompoundStmt 0x560a41d0cb48 <col:7>
|-CXXConstructorDecl 0x560a41d0bdf8 <col:7> col:7 implicit used constexpr Timestamp 'void (Timestamp &&) noexcept' inline default trivial
| |-ParmVarDecl 0x560a41d0bf08 <col:7> col:7 used 'Timestamp &&'
| |-CXXCtorInitializer Field 0x560a41d05988 '_t' 'Timestamp::rep_t'
| | `-CXXConstructExpr 0x560a41d0cde8 <col:7> 'Timestamp::rep_t' 'void (Timestamp::rep_t &&) noexcept'
| |   `-MemberExpr 0x560a41d0cd90 <col:7> 'Timestamp::rep_t' xvalue ._t 0x560a41d05988
| |     `-CXXStaticCastExpr 0x560a41d0cd60 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
| |       `-DeclRefExpr 0x560a41d0cd30 <col:7> 'Timestamp' lvalue ParmVar 0x560a41d0bf08 '' 'Timestamp &&'
| `-CompoundStmt 0x560a41d0ce48 <col:7>
|-CXXDestructorDecl 0x560a41d0bfb8 <col:7> col:7 implicit referenced ~Timestamp 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x560a41dcff60 <col:7> col:7 implicit used operator= 'Timestamp &(const Timestamp &) noexcept' inline default trivial
| |-ParmVarDecl 0x560a41dd0068 <col:7> col:7 used 'const Timestamp &'
| `-CompoundStmt 0x560a41dd0b58 <col:7>
|   |-CXXMemberCallExpr 0x560a41dd0af8 <col:7> 'Timestamp::rep_t' lvalue
|   | |-MemberExpr 0x560a41dd0a38 <col:7> '<bound member function type>' .operator= 0x560a41dd0108
|   | | `-MemberExpr 0x560a41dd0948 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x560a41d05988
|   | |   `-CXXThisExpr 0x560a41dd0938 <col:7> 'Timestamp *' this
|   | `-MemberExpr 0x560a41dd0a08 <col:7> 'const Timestamp::rep_t' lvalue ._t 0x560a41d05988
|   |   `-DeclRefExpr 0x560a41dd09e8 <col:7> 'const Timestamp' lvalue ParmVar 0x560a41dd0068 '' 'const Timestamp &'
|   `-ReturnStmt 0x560a41dd0b48 <col:7>
|     `-UnaryOperator 0x560a41dd0b30 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x560a41dd0b20 <col:7> 'Timestamp *' this
`-CXXMethodDecl 0x560a41dd0408 <col:7> col:7 implicit used operator= 'Timestamp &(Timestamp &&) noexcept' inline default trivial
  |-ParmVarDecl 0x560a41dd0518 <col:7> col:7 used 'Timestamp &&'
  `-CompoundStmt 0x560a41e1b938 <col:7>
    |-CXXMemberCallExpr 0x560a41e1b8d8 <col:7> 'Timestamp::rep_t' lvalue
    | |-MemberExpr 0x560a41e1b840 <col:7> '<bound member function type>' .operator= 0x560a41dd0288
    | | `-MemberExpr 0x560a41e1b710 <col:7> 'Timestamp::rep_t' lvalue ->_t 0x560a41d05988
    | |   `-CXXThisExpr 0x560a41e1b700 <col:7> 'Timestamp *' this
    | `-MemberExpr 0x560a41e1b810 <col:7> 'Timestamp::rep_t' xvalue ._t 0x560a41d05988
    |   `-CXXStaticCastExpr 0x560a41e1b7e0 <col:7> 'Timestamp' xvalue static_cast<class Timestamp &&> <NoOp>
    |     `-DeclRefExpr 0x560a41e1b7b0 <col:7> 'Timestamp' lvalue ParmVar 0x560a41dd0518 '' 'Timestamp &&'
    `-ReturnStmt 0x560a41e1b928 <col:7>
      `-UnaryOperator 0x560a41e1b910 <col:7> 'Timestamp' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x560a41e1b900 <col:7> 'Timestamp *' this

Layout: <CGRecordLayout
  LLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  NonVirtualBaseLLVMType:%class.Timestamp = type { %"union.Timestamp::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x560a41e2b1f8 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'TimerSet::heap_element'
|-CXXRecordDecl 0x560a41e2b408 prev 0x560a41e2b1f8 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x560a41e2c610 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<heap_element>::type':'sized_array_memory<16>'
| `-ElaboratedType 0x560a41e2c5c0 'typename array_memory<heap_element>::type' sugar
|   `-TypedefType 0x560a41e2c5a0 'conditional<true, sized_array_memory<16>, typed_array_memory<TimerSet::heap_element> >::type' sugar
|     |-Typedef 0x560a41e2c450 'type'
|     `-SubstTemplateTypeParmType 0x560a41e2c270 'sized_array_memory<16>' sugar
|       |-TemplateTypeParmType 0x560a419feb40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a419feae8 'T'
|       `-RecordType 0x560a41e2bdc0 'sized_array_memory<16>'
|         `-ClassTemplateSpecialization 0x560a41e2bcd8 'sized_array_memory'
|-FieldDecl 0x560a41e30280 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<TimerSet::heap_element>::array_memory_type>':'vector_memory<sized_array_memory<16> >' mutable
|-AccessSpecDecl 0x560a41e302d0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x560a41e30308 <line:118:5, col:15> col:15 value_type 'TimerSet::heap_element':'TimerSet::heap_element'
| `-SubstTemplateTypeParmType 0x560a41e2b4a0 'TimerSet::heap_element' sugar
|   |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x560a41ae2938 'T'
|   `-RecordType 0x560a41e2a400 'TimerSet::heap_element'
|     `-CXXRecord 0x560a41e2a370 'heap_element'
|-TypedefDecl 0x560a41e303c8 <line:119:5, col:16> col:16 reference 'TimerSet::heap_element &'
| `-LValueReferenceType 0x560a41e30390 'TimerSet::heap_element &'
|   `-SubstTemplateTypeParmType 0x560a41e2b4a0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-RecordType 0x560a41e2a400 'TimerSet::heap_element'
|       `-CXXRecord 0x560a41e2a370 'heap_element'
|-TypedefDecl 0x560a41e30458 <line:120:5, col:22> col:22 const_reference 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x560a41e30420 'const TimerSet::heap_element &'
|   `-QualType 0x560a41e2b4a1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x560a41e2b4a0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-RecordType 0x560a41e2a400 'TimerSet::heap_element'
|         `-CXXRecord 0x560a41e2a370 'heap_element'
|-TypedefDecl 0x560a41e304e8 <line:121:5, col:16> col:16 pointer 'TimerSet::heap_element *'
| `-PointerType 0x560a41e304b0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x560a41e2b4a0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-RecordType 0x560a41e2a400 'TimerSet::heap_element'
|       `-CXXRecord 0x560a41e2a370 'heap_element'
|-TypedefDecl 0x560a41e305a8 <line:122:5, col:22> col:22 const_pointer 'const TimerSet::heap_element *'
| `-PointerType 0x560a41e30570 'const TimerSet::heap_element *'
|   `-QualType 0x560a41e2b4a1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x560a41e2b4a0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-RecordType 0x560a41e2a400 'TimerSet::heap_element'
|         `-CXXRecord 0x560a41e2a370 'heap_element'
|-TypedefDecl 0x560a41e31200 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<heap_element>::type':'const TimerSet::heap_element &'
| `-ElaboratedType 0x560a41e311b0 'typename fast_argument<heap_element>::type' sugar
|   `-TypedefType 0x560a41e31190 'fast_argument<TimerSet::heap_element, true>::type' sugar
|     |-Typedef 0x560a41e310c8 'type'
|     `-LValueReferenceType 0x560a41e31090 'const TimerSet::heap_element &'
|       `-QualType 0x560a41e30e31 'const TimerSet::heap_element' const
|         `-SubstTemplateTypeParmType 0x560a41e30e30 'TimerSet::heap_element' sugar
|           |-TemplateTypeParmType 0x560a41a077c0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x560a41a07768 'T'
|           `-RecordType 0x560a41e2a400 'TimerSet::heap_element'
|             `-CXXRecord 0x560a41e2a370 'heap_element'
|-TypedefDecl 0x560a41e31268 <line:126:5, col:22> col:22 const_access_type 'const TimerSet::heap_element &'
| `-LValueReferenceType 0x560a41e30420 'const TimerSet::heap_element &'
|   `-QualType 0x560a41e2b4a1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x560a41e2b4a0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-RecordType 0x560a41e2a400 'TimerSet::heap_element'
|         `-CXXRecord 0x560a41e2a370 'heap_element'
|-TypedefDecl 0x560a41e312c0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x560a417e0580 'int'
|-TypedefDecl 0x560a41e31328 <line:130:5, col:16> col:16 iterator 'TimerSet::heap_element *'
| `-PointerType 0x560a41e304b0 'TimerSet::heap_element *'
|   `-SubstTemplateTypeParmType 0x560a41e2b4a0 'TimerSet::heap_element' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-RecordType 0x560a41e2a400 'TimerSet::heap_element'
|       `-CXXRecord 0x560a41e2a370 'heap_element'
|-TypedefDecl 0x560a41e31390 <line:131:5, col:22> col:22 const_iterator 'const TimerSet::heap_element *'
| `-PointerType 0x560a41e30570 'const TimerSet::heap_element *'
|   `-QualType 0x560a41e2b4a1 'const TimerSet::heap_element' const
|     `-SubstTemplateTypeParmType 0x560a41e2b4a0 'TimerSet::heap_element' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-RecordType 0x560a41e2a400 'TimerSet::heap_element'
|         `-CXXRecord 0x560a41e2a370 'heap_element'
|-EnumDecl 0x560a41e313e8 <line:134:5> col:5
| `-EnumConstantDecl 0x560a41e314e0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<TimerSet::heap_element>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x560a41e314c0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x560a41ae4378 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x560a41ae4350 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x560a41ae4330 <col:40> 'int' 1
|-CXXConstructorDecl 0x560a41e31568 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x560a41e317f8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41e31620 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41e316c0 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXConstructorDecl 0x560a41e31ab8 <line:139:5, col:37> col:12 Vector 'void (const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x560a41e319a0 <col:19, col:36> col:36 x 'const Vector<TimerSet::heap_element> &'
|-CXXConstructorDecl 0x560a41e31d78 <line:141:5, col:32> col:12 Vector 'void (Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x560a41e31c60 <col:19, col:31> col:31 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x560a41e320c0 <line:144:5, col:51> col:23 operator= 'Vector<TimerSet::heap_element> &(const Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x560a41e31fa0 <col:33, col:50> col:50 x 'const Vector<TimerSet::heap_element> &'
|-CXXMethodDecl 0x560a41e323d0 <line:146:5, col:46> col:23 operator= 'Vector<TimerSet::heap_element> &(Vector<TimerSet::heap_element> &&)' inline
| `-ParmVarDecl 0x560a41e322b0 <col:33, col:45> col:45 x 'Vector<TimerSet::heap_element> &&'
|-CXXMethodDecl 0x560a41e326c0 <line:148:5, col:70> col:23 assign 'Vector<TimerSet::heap_element> &(Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41e32508 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41e32580 <col:43, col:69> col:63 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x560a41e32818 <line:150:5, col:55> col:49 begin 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x560a41e328f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41e32950 <col:30> Inherited
|-CXXMethodDecl 0x560a41e32998 <line:151:5, col:53> col:49 end 'Vector<TimerSet::heap_element>::iterator ()'
| |-NoInlineAttr 0x560a41e32a48 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41e32aa0 <col:30> Inherited
|-CXXMethodDecl 0x560a41e32b68 <line:152:5, col:63> col:55 begin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x560a41e32c18 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41e32c70 <col:30> Inherited
|-CXXMethodDecl 0x560a41e32cb8 <line:153:5, col:61> col:55 end 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x560a41e32d68 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41e32dc0 <col:30> Inherited
|-CXXMethodDecl 0x560a41e32e08 <line:154:5, col:64> col:55 cbegin 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x560a41e32eb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41e32f10 <col:30> Inherited
|-CXXMethodDecl 0x560a41e32f58 <line:155:5, col:62> col:55 cend 'Vector<TimerSet::heap_element>::const_iterator () const'
| |-NoInlineAttr 0x560a41e33008 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41e33060 <col:30> Inherited
|-CXXMethodDecl 0x560a41e33088 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x560a41e33138 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x560a41e331e8 <line:159:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x560a41e333a8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41e33298 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41e33310 <col:37, col:63> col:57 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x560a41e334f8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x560a41e33468 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41e336a8 <line:163:5, col:65> col:43 operator[] 'TimerSet::heap_element &(Vector::size_type)'
| |-ParmVarDecl 0x560a41e335b0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x560a41e33760 <col:20>
| `-OptimizeNoneAttr 0x560a41e337b8 <col:30>
|-CXXMethodDecl 0x560a41e338d8 <line:164:5, col:73> col:49 operator[] 'const TimerSet::heap_element &(Vector::size_type) const'
| |-ParmVarDecl 0x560a41e337e0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x560a41e33990 <col:20>
| `-OptimizeNoneAttr 0x560a41e339e8 <col:30>
|-CXXMethodDecl 0x560a41e33aa0 <line:165:5, col:29> col:15 at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x560a41e33a10 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41e33be8 <line:166:5, col:37> col:21 at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x560a41e33b58 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41e33d18 <line:167:5, col:21> col:15 front 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x560a41e33e48 <line:168:5, col:29> col:21 front 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x560a41e33f18 <line:169:5, col:20> col:15 back 'TimerSet::heap_element &()' inline
|-CXXMethodDecl 0x560a41e33fe8 <line:170:5, col:28> col:21 back 'const TimerSet::heap_element &() const' inline
|-CXXMethodDecl 0x560a41e34128 <line:172:5, col:39> col:15 used unchecked_at 'TimerSet::heap_element &(Vector::size_type)' inline
| `-ParmVarDecl 0x560a41e34098 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41e34270 <line:173:5, col:47> col:21 unchecked_at 'const TimerSet::heap_element &(Vector::size_type) const' inline
| `-ParmVarDecl 0x560a41e341e0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41e343b8 <line:174:5, col:59> col:15 at_u 'TimerSet::heap_element &(Vector::size_type)' inline
| |-ParmVarDecl 0x560a41e34328 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x560a41e34470 <col:48> Inherited "" ""
|-CXXMethodDecl 0x560a41e34570 <line:175:5, col:71> col:21 at_u 'const TimerSet::heap_element &(Vector::size_type) const' inline
| |-ParmVarDecl 0x560a41e344e0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x560a41e34628 <col:60> Inherited "" ""
|-CXXMethodDecl 0x560a41e346e8 <line:177:5, col:20> col:15 data 'TimerSet::heap_element *()' inline
|-CXXMethodDecl 0x560a41e347e8 <line:178:5, col:28> col:21 data 'const TimerSet::heap_element *() const' inline
|-CXXMethodDecl 0x560a41e34998 <line:180:5, col:48> col:17 push_back 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x560a41e348a8 <col:27, col:47> col:47 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-FunctionTemplateDecl 0x560a41e35158 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x560a41e34a50 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<TimerSet::heap_element>':'fast_argument<TimerSet::heap_element, true>'
| `-CXXMethodDecl 0x560a41e350b8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (TimerSet::heap_element &&)' inline
|   `-ParmVarDecl 0x560a41e34fb8 <col:58, col:62> col:62 v 'TimerSet::heap_element &&'
|-CXXMethodDecl 0x560a41e35238 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x560a41e35388 <line:186:5, col:49> col:17 push_front 'void (Vector<TimerSet::heap_element>::value_argument_type)' inline
| `-ParmVarDecl 0x560a41e352f8 <col:28, col:48> col:48 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x560a41e35440 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x560a41e35688 <line:189:5, col:62> col:21 insert 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41e35500 <col:28, col:37> col:37 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x560a41e35578 <col:41, col:61> col:61 v 'Vector<TimerSet::heap_element>::value_argument_type':'const TimerSet::heap_element &'
|-CXXMethodDecl 0x560a41e35848 <line:190:5, col:38> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator)' inline
| `-ParmVarDecl 0x560a41e35758 <col:27, col:36> col:36 it 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x560a41e362f8 <line:191:5, col:49> col:21 erase 'Vector<TimerSet::heap_element>::iterator (Vector<TimerSet::heap_element>::iterator, Vector<TimerSet::heap_element>::iterator)' inline
| |-ParmVarDecl 0x560a41e35910 <col:27, col:36> col:36 a 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
| `-ParmVarDecl 0x560a41e35988 <col:39, col:48> col:48 b 'Vector<TimerSet::heap_element>::iterator':'TimerSet::heap_element *'
|-CXXMethodDecl 0x560a41e363b8 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x560a41e36618 <line:195:5, col:34> col:17 swap 'void (Vector<TimerSet::heap_element> &)' inline
| `-ParmVarDecl 0x560a41e36520 <col:22, col:33> col:33 x 'Vector<TimerSet::heap_element> &'
`-CXXDestructorDecl 0x560a41e366e8 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x560a41e366e8

Layout: <CGRecordLayout
  LLVMType:%class.Vector.13 = type { %class.vector_memory.9 }
  NonVirtualBaseLLVMType:%class.Vector.13 = type { %class.vector_memory.9 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x560a41e36830 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'Timer *'
|-CXXRecordDecl 0x560a41e36a38 prev 0x560a41e36830 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x560a41e37b80 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Timer *>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x560a41e37b30 'typename array_memory<Timer *>::type' sugar
|   `-TypedefType 0x560a41e37b10 'conditional<true, sized_array_memory<8>, typed_array_memory<Timer *> >::type' sugar
|     |-Typedef 0x560a41e379c0 'type'
|     `-SubstTemplateTypeParmType 0x560a41e377e0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x560a419feb40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a419feae8 'T'
|       `-RecordType 0x560a41e37330 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x560a41e37248 'sized_array_memory'
|-FieldDecl 0x560a41e3b7b0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<Timer *>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x560a41e3b800 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x560a41e3b838 <line:118:5, col:15> col:15 value_type 'Timer *':'Timer *'
| `-SubstTemplateTypeParmType 0x560a41e36ad0 'Timer *' sugar
|   |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x560a41ae2938 'T'
|   `-PointerType 0x560a41df89a0 'Timer *'
|     `-RecordType 0x560a41df7b10 'Timer'
|       `-CXXRecord 0x560a41e14348 'Timer'
|-TypedefDecl 0x560a41e3b8f8 <line:119:5, col:16> col:16 reference 'Timer *&'
| `-LValueReferenceType 0x560a41e3b8c0 'Timer *&'
|   `-SubstTemplateTypeParmType 0x560a41e36ad0 'Timer *' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-PointerType 0x560a41df89a0 'Timer *'
|       `-RecordType 0x560a41df7b10 'Timer'
|         `-CXXRecord 0x560a41e14348 'Timer'
|-TypedefDecl 0x560a41e3b9b8 <line:120:5, col:22> col:22 const_reference 'Timer *const &'
| `-LValueReferenceType 0x560a41e3b980 'Timer *const &'
|   `-QualType 0x560a41e36ad1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x560a41e36ad0 'Timer *' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-PointerType 0x560a41df89a0 'Timer *'
|         `-RecordType 0x560a41df7b10 'Timer'
|           `-CXXRecord 0x560a41e14348 'Timer'
|-TypedefDecl 0x560a41e3ba78 <line:121:5, col:16> col:16 pointer 'Timer **'
| `-PointerType 0x560a41e3ba40 'Timer **'
|   `-SubstTemplateTypeParmType 0x560a41e36ad0 'Timer *' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-PointerType 0x560a41df89a0 'Timer *'
|       `-RecordType 0x560a41df7b10 'Timer'
|         `-CXXRecord 0x560a41e14348 'Timer'
|-TypedefDecl 0x560a41e3bb38 <line:122:5, col:22> col:22 const_pointer 'Timer *const *'
| `-PointerType 0x560a41e3bb00 'Timer *const *'
|   `-QualType 0x560a41e36ad1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x560a41e36ad0 'Timer *' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-PointerType 0x560a41df89a0 'Timer *'
|         `-RecordType 0x560a41df7b10 'Timer'
|           `-CXXRecord 0x560a41e14348 'Timer'
|-TypedefDecl 0x560a41e3c710 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Timer *>::type':'Timer *'
| `-ElaboratedType 0x560a41e3c6c0 'typename fast_argument<Timer *>::type' sugar
|   `-TypedefType 0x560a41e3c6a0 'fast_argument<Timer *, false>::type' sugar
|     |-Typedef 0x560a41e3c630 'type'
|     `-SubstTemplateTypeParmType 0x560a41e3c3f0 'Timer *' sugar
|       |-TemplateTypeParmType 0x560a41a09100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41a090b0 'T'
|       `-PointerType 0x560a41df89a0 'Timer *'
|         `-RecordType 0x560a41df7b10 'Timer'
|           `-CXXRecord 0x560a41e14348 'Timer'
|-TypedefDecl 0x560a41e3c778 <line:126:5, col:22> col:22 const_access_type 'Timer *const &'
| `-LValueReferenceType 0x560a41e3b980 'Timer *const &'
|   `-QualType 0x560a41e36ad1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x560a41e36ad0 'Timer *' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-PointerType 0x560a41df89a0 'Timer *'
|         `-RecordType 0x560a41df7b10 'Timer'
|           `-CXXRecord 0x560a41e14348 'Timer'
|-TypedefDecl 0x560a41e3c7d0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x560a417e0580 'int'
|-TypedefDecl 0x560a41e3c838 <line:130:5, col:16> col:16 iterator 'Timer **'
| `-PointerType 0x560a41e3ba40 'Timer **'
|   `-SubstTemplateTypeParmType 0x560a41e36ad0 'Timer *' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-PointerType 0x560a41df89a0 'Timer *'
|       `-RecordType 0x560a41df7b10 'Timer'
|         `-CXXRecord 0x560a41e14348 'Timer'
|-TypedefDecl 0x560a41e3c8a0 <line:131:5, col:22> col:22 const_iterator 'Timer *const *'
| `-PointerType 0x560a41e3bb00 'Timer *const *'
|   `-QualType 0x560a41e36ad1 'Timer *const' const
|     `-SubstTemplateTypeParmType 0x560a41e36ad0 'Timer *' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-PointerType 0x560a41df89a0 'Timer *'
|         `-RecordType 0x560a41df7b10 'Timer'
|           `-CXXRecord 0x560a41e14348 'Timer'
|-EnumDecl 0x560a41e3c8f8 <line:134:5> col:5
| `-EnumConstantDecl 0x560a41e3c9f0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<Timer *>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x560a41e3c9d0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x560a41ae4378 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x560a41ae4350 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x560a41ae4330 <col:40> 'int' 1
|-CXXConstructorDecl 0x560a41e3ca78 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x560a41e3cd08 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41e3cb30 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41e3cbd0 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXConstructorDecl 0x560a41e3cfc8 <line:139:5, col:37> col:12 Vector 'void (const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x560a41e3ceb0 <col:19, col:36> col:36 x 'const Vector<Timer *> &'
|-CXXConstructorDecl 0x560a41e3d288 <line:141:5, col:32> col:12 Vector 'void (Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x560a41e3d170 <col:19, col:31> col:31 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x560a41e3d5d0 <line:144:5, col:51> col:23 operator= 'Vector<Timer *> &(const Vector<Timer *> &)' inline
| `-ParmVarDecl 0x560a41e3d4b0 <col:33, col:50> col:50 x 'const Vector<Timer *> &'
|-CXXMethodDecl 0x560a41e3d8e0 <line:146:5, col:46> col:23 operator= 'Vector<Timer *> &(Vector<Timer *> &&)' inline
| `-ParmVarDecl 0x560a41e3d7c0 <col:33, col:45> col:45 x 'Vector<Timer *> &&'
|-CXXMethodDecl 0x560a41e3dbd0 <line:148:5, col:70> col:23 assign 'Vector<Timer *> &(Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41e3da18 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41e3da90 <col:43, col:69> col:63 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x560a41e3dd28 <line:150:5, col:55> col:49 begin 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x560a41e3de08 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41e3de60 <col:30> Inherited
|-CXXMethodDecl 0x560a41e3dea8 <line:151:5, col:53> col:49 end 'Vector<Timer *>::iterator ()'
| |-NoInlineAttr 0x560a41e3df58 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41e3dfb0 <col:30> Inherited
|-CXXMethodDecl 0x560a41e3e078 <line:152:5, col:63> col:55 begin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x560a41e3e128 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41e3e180 <col:30> Inherited
|-CXXMethodDecl 0x560a41e3e1c8 <line:153:5, col:61> col:55 end 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x560a41e3fb80 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41e3fbd8 <col:30> Inherited
|-CXXMethodDecl 0x560a41e3fc20 <line:154:5, col:64> col:55 cbegin 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x560a41e3fcd0 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41e3fd28 <col:30> Inherited
|-CXXMethodDecl 0x560a41e3fd70 <line:155:5, col:62> col:55 cend 'Vector<Timer *>::const_iterator () const'
| |-NoInlineAttr 0x560a41e3fe20 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41e3fe78 <col:30> Inherited
|-CXXMethodDecl 0x560a41e3fea0 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x560a41e3ff50 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x560a41e40000 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x560a41e401c0 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41e400b0 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41e40128 <col:37, col:63> col:57 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x560a41e40310 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x560a41e40280 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41e404b8 <line:163:5, col:65> col:43 operator[] 'Timer *&(Vector::size_type)'
| |-ParmVarDecl 0x560a41e403c8 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x560a41e40570 <col:20>
| `-OptimizeNoneAttr 0x560a41e405c8 <col:30>
|-CXXMethodDecl 0x560a41e406e8 <line:164:5, col:73> col:49 operator[] 'Timer *const &(Vector::size_type) const'
| |-ParmVarDecl 0x560a41e405f0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x560a41e407a0 <col:20>
| `-OptimizeNoneAttr 0x560a41e407f8 <col:30>
|-CXXMethodDecl 0x560a41e408b0 <line:165:5, col:29> col:15 at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x560a41e40820 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41e409f8 <line:166:5, col:37> col:21 at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x560a41e40968 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41e40b28 <line:167:5, col:21> col:15 front 'Timer *&()' inline
|-CXXMethodDecl 0x560a41e40c58 <line:168:5, col:29> col:21 front 'Timer *const &() const' inline
|-CXXMethodDecl 0x560a41e40d28 <line:169:5, col:20> col:15 back 'Timer *&()' inline
|-CXXMethodDecl 0x560a41e40df8 <line:170:5, col:28> col:21 back 'Timer *const &() const' inline
|-CXXMethodDecl 0x560a41e40f38 <line:172:5, col:39> col:15 unchecked_at 'Timer *&(Vector::size_type)' inline
| `-ParmVarDecl 0x560a41e40ea8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41e41080 <line:173:5, col:47> col:21 unchecked_at 'Timer *const &(Vector::size_type) const' inline
| `-ParmVarDecl 0x560a41e40ff0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41e411c8 <line:174:5, col:59> col:15 at_u 'Timer *&(Vector::size_type)' inline
| |-ParmVarDecl 0x560a41e41138 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x560a41e41280 <col:48> Inherited "" ""
|-CXXMethodDecl 0x560a41e41380 <line:175:5, col:71> col:21 at_u 'Timer *const &(Vector::size_type) const' inline
| |-ParmVarDecl 0x560a41e412f0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x560a41e41438 <col:60> Inherited "" ""
|-CXXMethodDecl 0x560a41e414f8 <line:177:5, col:20> col:15 data 'Timer **()' inline
|-CXXMethodDecl 0x560a41e415f8 <line:178:5, col:28> col:21 data 'Timer *const *() const' inline
|-CXXMethodDecl 0x560a41e41778 <line:180:5, col:48> col:17 push_back 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x560a41e416b8 <col:27, col:47> col:47 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-FunctionTemplateDecl 0x560a41e41f38 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x560a41e41830 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<Timer *>':'fast_argument<Timer *, false>'
| `-CXXMethodDecl 0x560a41e41e98 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (Timer *&&)' inline
|   `-ParmVarDecl 0x560a41e41d98 <col:58, col:62> col:62 v 'Timer *&&'
|-CXXMethodDecl 0x560a41e42018 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x560a41e42168 <line:186:5, col:49> col:17 push_front 'void (Vector<Timer *>::value_argument_type)' inline
| `-ParmVarDecl 0x560a41e420d8 <col:28, col:48> col:48 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x560a41e42220 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x560a41e42468 <line:189:5, col:62> col:21 insert 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41e422e0 <col:28, col:37> col:37 it 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x560a41e42358 <col:41, col:61> col:61 v 'Vector<Timer *>::value_argument_type':'Timer *'
|-CXXMethodDecl 0x560a41e42628 <line:190:5, col:38> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator)' inline
| `-ParmVarDecl 0x560a41e42538 <col:27, col:36> col:36 it 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x560a41e42878 <line:191:5, col:49> col:21 erase 'Vector<Timer *>::iterator (Vector<Timer *>::iterator, Vector<Timer *>::iterator)' inline
| |-ParmVarDecl 0x560a41e426f0 <col:27, col:36> col:36 a 'Vector<Timer *>::iterator':'Timer **'
| `-ParmVarDecl 0x560a41e42768 <col:39, col:48> col:48 b 'Vector<Timer *>::iterator':'Timer **'
|-CXXMethodDecl 0x560a41e42938 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x560a41e42b98 <line:195:5, col:34> col:17 swap 'void (Vector<Timer *> &)' inline
| `-ParmVarDecl 0x560a41e42aa0 <col:22, col:33> col:33 x 'Vector<Timer *> &'
`-CXXDestructorDecl 0x560a41e42c68 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x560a41e42c68

Layout: <CGRecordLayout
  LLVMType:%class.Vector.14 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.14 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41e10d80 <../dummy_inc/click/sync.hh:194:1, line:211:1> line:194:7 referenced class SimpleSpinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x560a41e10e98 <col:1, col:7> col:7 implicit referenced class SimpleSpinlock
|-AccessSpecDecl 0x560a41e10f28 <col:24, col:30> col:24 public
|-CXXConstructorDecl 0x560a41e10fb0 <line:196:5, col:27> col:12 SimpleSpinlock 'void ()' inline
|-CXXDestructorDecl 0x560a41e110a0 <line:197:5, col:28> col:12 ~SimpleSpinlock 'void () noexcept' inline
|-CXXMethodDecl 0x560a41e111a0 <line:199:5, col:25> col:17 acquire 'void ()' inline
|-CXXMethodDecl 0x560a41e11260 <line:200:5, col:25> col:17 release 'void ()' inline
|-CXXMethodDecl 0x560a41e11320 <line:201:5, col:25> col:17 attempt 'bool ()' inline
|-CXXConstructorDecl 0x560a41e11448 <line:194:7> col:7 implicit constexpr SimpleSpinlock 'void (const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x560a41e11448
| `-ParmVarDecl 0x560a41e11558 <col:7> col:7 'const SimpleSpinlock &'
`-CXXMethodDecl 0x560a41e43a18 <col:7> col:7 implicit operator= 'SimpleSpinlock &(const SimpleSpinlock &)' inline default trivial noexcept-unevaluated 0x560a41e43a18
  `-ParmVarDecl 0x560a41e43b28 <col:7> col:7 'const SimpleSpinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleSpinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.SimpleSpinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41e294f0 prev 0x560a41e193c8 <../dummy_inc/click/timerset.hh:12:1, line:90:1> line:12:7 referenced class TimerSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-CXXRecordDecl 0x560a41e295e8 <col:1, col:7> col:7 implicit referenced class TimerSet
|-AccessSpecDecl 0x560a41e29678 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x560a41e29700 <line:14:5, col:14> col:5 TimerSet 'void ()'
|-CXXMethodDecl 0x560a41e297f8 <line:16:5, col:67> col:15 timer_expiry_steady 'Timestamp () const'
| `-CompoundStmt 0x560a41e43e90 <col:43, col:67>
|   `-ReturnStmt 0x560a41e43e80 <col:45, col:52>
|     `-CXXConstructExpr 0x560a41e43e50 <col:52> 'Timestamp' 'void (const Timestamp &) noexcept'
|       `-MemberExpr 0x560a41e43e20 <col:52> 'const Timestamp' lvalue ->_timer_expiry 0x560a41e2afe0
|         `-CXXThisExpr 0x560a41e43e10 <col:52> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x560a41e298b8 <line:17:5, col:53> col:22 timer_expiry_steady_adjusted 'Timestamp () const' inline
|-CXXMethodDecl 0x560a41e29ac0 <line:19:5, col:64> col:16 next_timer_delay 'int (bool, Timestamp &) const' inline
| |-ParmVarDecl 0x560a41e29968 <col:33, col:38> col:38 more_tasks 'bool'
| `-ParmVarDecl 0x560a41e299e0 <col:50, col:61> col:61 t 'Timestamp &'
|-CXXMethodDecl 0x560a41e29bb8 <line:22:5, col:23> col:12 next_timer 'Timer *()'
|-CXXMethodDecl 0x560a41e29c80 <line:24:5, col:67> col:14 max_timer_stride 'unsigned int () const'
| `-CompoundStmt 0x560a41e43f10 <col:39, col:67>
|   `-ReturnStmt 0x560a41e43f00 <col:41, col:48>
|     `-ImplicitCastExpr 0x560a41e43ee8 <col:48> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x560a41e43eb8 <col:48> 'const unsigned int' lvalue ->_max_timer_stride 0x560a41e2b0c8
|         `-CXXThisExpr 0x560a41e43ea8 <col:48> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x560a41e29d48 <line:25:5, col:59> col:14 timer_stride 'unsigned int () const'
| `-CompoundStmt 0x560a41e43f90 <col:35, col:59>
|   `-ReturnStmt 0x560a41e43f80 <col:37, col:44>
|     `-ImplicitCastExpr 0x560a41e43f68 <col:44> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x560a41e43f38 <col:44> 'const unsigned int' lvalue ->_timer_stride 0x560a41e2b130
|         `-CXXThisExpr 0x560a41e43f28 <col:44> 'const TimerSet *' implicit this
|-CXXMethodDecl 0x560a41e29e90 <line:26:5, col:52> col:10 set_max_timer_stride 'void (unsigned int)'
| `-ParmVarDecl 0x560a41e29e00 <col:31, col:40> col:40 timer_stride 'unsigned int'
|-CXXMethodDecl 0x560a41e29fd8 <line:28:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x560a41e29f48 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x560a41e2a1d8 <line:30:5, col:57> col:10 run_timers 'void (RouterThread *, Master *)'
| |-ParmVarDecl 0x560a41e2a090 <col:21, col:35> col:35 thread 'RouterThread *'
| `-ParmVarDecl 0x560a41e2a108 <col:43, col:51> col:51 master 'Master *'
|-CXXMethodDecl 0x560a41e2a2a8 <line:32:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x560a41e2a348 <line:34:3, col:10> col:3 private
|-CXXRecordDecl 0x560a41e2a370 <line:36:5, line:45:5> line:36:12 referenced struct heap_element definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x560a41e2a488 <col:5, col:12> col:12 implicit referenced struct heap_element
| |-FieldDecl 0x560a41e2a528 <line:37:2, col:12> col:12 referenced expiry_s 'Timestamp'
| |-FieldDecl 0x560a41e2a588 <line:38:2, col:9> col:9 referenced t 'Timer *'
| `-CXXConstructorDecl 0x560a41e2a6b8 <line:42:2, line:44:2> line:42:2 heap_element 'void (Timer *)'
|   |-ParmVarDecl 0x560a41e2a5e8 <col:15, col:22> col:22 used t_ 'Timer *'
|   |-CXXCtorInitializer Field 0x560a41e2a528 'expiry_s' 'Timestamp'
|   | `-CXXConstructExpr 0x560a41e44068 <line:43:8, col:36> 'Timestamp' 'void (const Timestamp &) noexcept'
|   |   `-CXXMemberCallExpr 0x560a41e44010 <col:17, col:35> 'const Timestamp' lvalue
|   |     `-MemberExpr 0x560a41e43fe0 <col:17, col:21> '<bound member function type>' ->expiry_steady 0x560a41e159b8
|   |       `-ImplicitCastExpr 0x560a41e44030 <col:17> 'const Timer *' <NoOp>
|   |         `-ImplicitCastExpr 0x560a41e43fc8 <col:17> 'Timer *' <LValueToRValue>
|   |           `-DeclRefExpr 0x560a41e43fa8 <col:17> 'Timer *' lvalue ParmVar 0x560a41e2a5e8 't_' 'Timer *'
|   |-CXXCtorInitializer Field 0x560a41e2a588 't' 'Timer *'
|   | `-ImplicitCastExpr 0x560a41e44100 <col:41> 'Timer *' <LValueToRValue>
|   |   `-DeclRefExpr 0x560a41e440c0 <col:41> 'Timer *' lvalue ParmVar 0x560a41e2a5e8 't_' 'Timer *'
|   `-CompoundStmt 0x560a41e44150 <col:45, line:44:2>
|-CXXRecordDecl 0x560a41e2a780 <line:46:5, line:50:5> line:46:12 struct heap_less definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x560a41e2a898 <col:5, col:12> col:12 implicit struct heap_less
| `-CXXMethodDecl 0x560a41e2aae8 <line:47:2, line:49:2> line:47:14 operator() 'bool (const TimerSet::heap_element &, const TimerSet::heap_element &)' inline
|   |-ParmVarDecl 0x560a41e2a968 <col:25, col:45> col:45 used a 'const TimerSet::heap_element &'
|   |-ParmVarDecl 0x560a41e2a9e0 <col:48, col:68> col:68 used b 'const TimerSet::heap_element &'
|   `-CompoundStmt 0x560a41e44280 <col:71, line:49:2>
|     `-ReturnStmt 0x560a41e44270 <line:48:6, col:28>
|       `-CXXOperatorCallExpr 0x560a41e44238 <col:13, col:28> 'bool'
|         |-ImplicitCastExpr 0x560a41e44220 <col:24> 'bool (*)(const Timestamp &, const Timestamp &)' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x560a41e44200 <col:24> 'bool (const Timestamp &, const Timestamp &)' lvalue Function 0x560a41b81c28 'operator<' 'bool (const Timestamp &, const Timestamp &)'
|         |-MemberExpr 0x560a41e44180 <col:13, col:15> 'const Timestamp' lvalue .expiry_s 0x560a41e2a528
|         | `-DeclRefExpr 0x560a41e44160 <col:13> 'const TimerSet::heap_element' lvalue ParmVar 0x560a41e2a968 'a' 'const TimerSet::heap_element &'
|         `-MemberExpr 0x560a41e441d0 <col:26, col:28> 'const Timestamp' lvalue .expiry_s 0x560a41e2a528
|           `-DeclRefExpr 0x560a41e441b0 <col:26> 'const TimerSet::heap_element' lvalue ParmVar 0x560a41e2a9e0 'b' 'const TimerSet::heap_element &'
|-CXXRecordDecl 0x560a41e2abb0 <line:51:5, line:55:5> line:51:12 struct heap_place definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x560a41e2acc8 <col:5, col:12> col:12 implicit struct heap_place
| `-CXXMethodDecl 0x560a41e2aee8 <line:52:2, line:54:2> line:52:14 operator() 'void (TimerSet::heap_element *, TimerSet::heap_element *)' inline
|   |-ParmVarDecl 0x560a41e2ad68 <col:25, col:39> col:39 used begin 'TimerSet::heap_element *'
|   |-ParmVarDecl 0x560a41e2ade0 <col:46, col:60> col:60 used t 'TimerSet::heap_element *'
|   `-CompoundStmt 0x560a41e44488 <col:63, line:54:2>
|     `-BinaryOperator 0x560a41e44468 <line:53:6, col:39> 'int' lvalue '='
|       |-MemberExpr 0x560a41e44318 <col:6, col:12> 'int' lvalue ->_schedpos1 0x560a41e18868
|       | `-ImplicitCastExpr 0x560a41e44300 <col:6, col:9> 'Timer *' <LValueToRValue>
|       |   `-MemberExpr 0x560a41e442d0 <col:6, col:9> 'Timer *' lvalue ->t 0x560a41e2a588
|       |     `-ImplicitCastExpr 0x560a41e442b8 <col:6> 'TimerSet::heap_element *' <LValueToRValue>
|       |       `-DeclRefExpr 0x560a41e44298 <col:6> 'TimerSet::heap_element *' lvalue ParmVar 0x560a41e2ade0 't' 'TimerSet::heap_element *'
|       `-ImplicitCastExpr 0x560a41e44450 <col:25, col:39> 'int' <IntegralCast>
|         `-BinaryOperator 0x560a41e44430 <col:25, col:39> 'long' '+'
|           |-ParenExpr 0x560a41e443d8 <col:25, col:35> 'long'
|           | `-BinaryOperator 0x560a41e443b8 <col:26, col:30> 'long' '-'
|           |   |-ImplicitCastExpr 0x560a41e44388 <col:26> 'TimerSet::heap_element *' <LValueToRValue>
|           |   | `-DeclRefExpr 0x560a41e44348 <col:26> 'TimerSet::heap_element *' lvalue ParmVar 0x560a41e2ade0 't' 'TimerSet::heap_element *'
|           |   `-ImplicitCastExpr 0x560a41e443a0 <col:30> 'TimerSet::heap_element *' <LValueToRValue>
|           |     `-DeclRefExpr 0x560a41e44368 <col:30> 'TimerSet::heap_element *' lvalue ParmVar 0x560a41e2ad68 'begin' 'TimerSet::heap_element *'
|           `-ImplicitCastExpr 0x560a41e44418 <col:39> 'long' <IntegralCast>
|             `-IntegerLiteral 0x560a41e443f8 <col:39> 'int' 1
|-FieldDecl 0x560a41e2afe0 <line:58:5, col:15> col:15 referenced _timer_expiry 'Timestamp'
| `-AlignedAttr 0x560a41e2b050 <col:44, col:53> aligned
|   `-ConstantExpr 0x560a41e2b030 <col:52> 'int' Int: 8
|     `-IntegerLiteral 0x560a41e2afb0 <col:52> 'int' 8
|-FieldDecl 0x560a41e2b0c8 <line:60:5, col:14> col:14 referenced _max_timer_stride 'unsigned int'
|-FieldDecl 0x560a41e2b130 <line:61:5, col:14> col:14 referenced _timer_stride 'unsigned int'
|-FieldDecl 0x560a41e2b198 <line:62:5, col:14> col:14 _timer_count 'unsigned int'
|-FieldDecl 0x560a41e367d0 <line:63:5, col:26> col:26 referenced _timer_heap 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>'
|-FieldDecl 0x560a41e42d50 <line:64:5, col:21> col:21 _timer_runchunk 'Vector<Timer *>':'Vector<Timer *>'
|-FieldDecl 0x560a41e42db0 <line:65:5, col:20> col:20 _timer_lock 'SimpleSpinlock'
|-FieldDecl 0x560a41e42e10 <line:71:5, col:15> col:15 _timer_check 'Timestamp'
|-FieldDecl 0x560a41e42e70 <line:72:5, col:14> col:14 _timer_check_reports 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a41e42f60 <line:74:5, col:38> col:17 run_one_timer 'void (Timer *)' inline
| `-ParmVarDecl 0x560a41e42ed0 <col:31, col:37> col:38 'Timer *'
|-CXXMethodDecl 0x560a41e43028 <line:76:5, line:81:5> line:76:10 set_timer_expiry 'void ()'
| `-CompoundStmt 0x560a41e448e0 <col:29, line:81:5>
|   `-IfStmt 0x560a41e448b8 <line:77:2, line:80:32> has_else
|     |-ImplicitCastExpr 0x560a41e44570 <line:77:6, col:23> 'bool' <IntegralToBoolean>
|     | `-CXXMemberCallExpr 0x560a41e44510 <col:6, col:23> 'Vector::size_type':'int'
|     |   `-MemberExpr 0x560a41e444e0 <col:6, col:18> '<bound member function type>' .size 0x560a41e33088
|     |     `-ImplicitCastExpr 0x560a41e44558 <col:6> 'const Vector<TimerSet::heap_element>' lvalue <NoOp>
|     |       `-MemberExpr 0x560a41e444b0 <col:6> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x560a41e367d0
|     |         `-CXXThisExpr 0x560a41e444a0 <col:6> 'TimerSet *' implicit this
|     |-CXXOperatorCallExpr 0x560a41e44760 <line:78:6, col:50> 'Timestamp' lvalue
|     | |-ImplicitCastExpr 0x560a41e44748 <col:20> 'Timestamp &(*)(const Timestamp &) noexcept' <FunctionToPointerDecay>
|     | | `-DeclRefExpr 0x560a41e44728 <col:20> 'Timestamp &(const Timestamp &) noexcept' lvalue CXXMethod 0x560a41dcff60 'operator=' 'Timestamp &(const Timestamp &) noexcept'
|     | |-MemberExpr 0x560a41e44598 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x560a41e2afe0
|     | | `-CXXThisExpr 0x560a41e44588 <col:6> 'TimerSet *' implicit this
|     | `-ImplicitCastExpr 0x560a41e44710 <col:22, col:50> 'const Timestamp' lvalue <NoOp>
|     |   `-MemberExpr 0x560a41e446e0 <col:22, col:50> 'Timestamp' lvalue .expiry_s 0x560a41e2a528
|     |     `-CXXMemberCallExpr 0x560a41e446b8 <col:22, col:48> 'TimerSet::heap_element':'TimerSet::heap_element' lvalue
|     |       |-MemberExpr 0x560a41e44688 <col:22, col:34> '<bound member function type>' .unchecked_at 0x560a41e34128
|     |       | `-MemberExpr 0x560a41e445d8 <col:22> 'Vector<TimerSet::heap_element>':'Vector<TimerSet::heap_element>' lvalue ->_timer_heap 0x560a41e367d0
|     |       |   `-CXXThisExpr 0x560a41e445c8 <col:22> 'TimerSet *' implicit this
|     |       `-IntegerLiteral 0x560a41e44668 <col:47> 'int' 0
|     `-ExprWithCleanups 0x560a41e448a0 <line:80:6, col:32> 'Timestamp' lvalue
|       `-CXXOperatorCallExpr 0x560a41e44868 <col:6, col:32> 'Timestamp' lvalue
|         |-ImplicitCastExpr 0x560a41e44850 <col:20> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x560a41e44830 <col:20> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x560a41dd0408 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|         |-MemberExpr 0x560a41e447a8 <col:6> 'Timestamp' lvalue ->_timer_expiry 0x560a41e2afe0
|         | `-CXXThisExpr 0x560a41e44798 <col:6> 'TimerSet *' implicit this
|         `-MaterializeTemporaryExpr 0x560a41e44818 <col:22, col:32> 'Timestamp' xvalue
|           `-CXXTemporaryObjectExpr 0x560a41e447e8 <col:22, col:32> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x560a41e43168 <line:82:5, col:37> col:10 check_timer_expiry 'void (Timer *)'
| `-ParmVarDecl 0x560a41e430d8 <col:29, col:36> col:36 t 'Timer *'
|-CXXMethodDecl 0x560a41e43230 <line:84:5, col:29> col:17 used lock_timers 'void ()' inline
|-CXXMethodDecl 0x560a41e432f0 <line:85:5, col:37> col:17 attempt_lock_timers 'bool ()' inline
|-CXXMethodDecl 0x560a41e433b0 <line:86:5, col:31> col:17 used unlock_timers 'void ()' inline
|-FriendDecl 0x560a41e434a0 <line:88:5, col:18> col:12 'class Timer':'Timer'
|-CXXConstructorDecl 0x560a41e43508 <line:12:7> col:7 implicit TimerSet 'void (const TimerSet &)' inline default noexcept-unevaluated 0x560a41e43508
| `-ParmVarDecl 0x560a41e43618 <col:7> col:7 'const TimerSet &'
|-CXXConstructorDecl 0x560a41e436b8 <col:7> col:7 implicit TimerSet 'void (TimerSet &&)' inline default noexcept-unevaluated 0x560a41e436b8
| `-ParmVarDecl 0x560a41e437c8 <col:7> col:7 'TimerSet &&'
|-CXXMethodDecl 0x560a41e43868 <col:7> col:7 implicit operator= 'TimerSet &(const TimerSet &)' inline default noexcept-unevaluated 0x560a41e43868
| `-ParmVarDecl 0x560a41e43978 <col:7> col:7 'const TimerSet &'
|-CXXMethodDecl 0x560a41e43b98 <col:7> col:7 implicit operator= 'TimerSet &(TimerSet &&)' inline default noexcept-unevaluated 0x560a41e43b98
| `-ParmVarDecl 0x560a41e43ca8 <col:7> col:7 'TimerSet &&'
`-CXXDestructorDecl 0x560a41e43d30 <col:7> col:7 implicit ~TimerSet 'void ()' inline default noexcept-unevaluated 0x560a41e43d30

Layout: <CGRecordLayout
  LLVMType:%class.TimerSet = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.13, %class.Vector.14, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.TimerSet.base = type <{ %class.Timestamp, i32, i32, i32, [4 x i8], %class.Vector.13, %class.Vector.14, %class.SimpleSpinlock, [7 x i8], %class.Timestamp, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x560a41e77198 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'pollfd'
|-CXXRecordDecl 0x560a41e773a8 prev 0x560a41e77198 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x560a41e78480 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<pollfd>::type':'sized_array_memory<8>'
| `-ElaboratedType 0x560a41e78430 'typename array_memory<pollfd>::type' sugar
|   `-TypedefType 0x560a41e78410 'conditional<true, sized_array_memory<8>, typed_array_memory<pollfd> >::type' sugar
|     |-Typedef 0x560a41e782c0 'type'
|     `-SubstTemplateTypeParmType 0x560a41e377e0 'sized_array_memory<8>' sugar
|       |-TemplateTypeParmType 0x560a419feb40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a419feae8 'T'
|       `-RecordType 0x560a41e37330 'sized_array_memory<8>'
|         `-ClassTemplateSpecialization 0x560a41e37248 'sized_array_memory'
|-FieldDecl 0x560a41e78580 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<pollfd>::array_memory_type>':'vector_memory<sized_array_memory<8> >' mutable
|-AccessSpecDecl 0x560a41e785d0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x560a41e78608 <line:118:5, col:15> col:15 value_type 'pollfd':'pollfd'
| `-SubstTemplateTypeParmType 0x560a41e77440 'pollfd' sugar
|   |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x560a41ae2938 'T'
|   `-RecordType 0x560a41e64e20 'pollfd'
|     `-CXXRecord 0x560a41e64d90 'pollfd'
|-TypedefDecl 0x560a41e786c8 <line:119:5, col:16> col:16 reference 'pollfd &'
| `-LValueReferenceType 0x560a41e78690 'pollfd &'
|   `-SubstTemplateTypeParmType 0x560a41e77440 'pollfd' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-RecordType 0x560a41e64e20 'pollfd'
|       `-CXXRecord 0x560a41e64d90 'pollfd'
|-TypedefDecl 0x560a41e78788 <line:120:5, col:22> col:22 const_reference 'const pollfd &'
| `-LValueReferenceType 0x560a41e78750 'const pollfd &'
|   `-QualType 0x560a41e77441 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x560a41e77440 'pollfd' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-RecordType 0x560a41e64e20 'pollfd'
|         `-CXXRecord 0x560a41e64d90 'pollfd'
|-TypedefDecl 0x560a41e78818 <line:121:5, col:16> col:16 pointer 'pollfd *'
| `-PointerType 0x560a41e787e0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x560a41e77440 'pollfd' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-RecordType 0x560a41e64e20 'pollfd'
|       `-CXXRecord 0x560a41e64d90 'pollfd'
|-TypedefDecl 0x560a41e788d8 <line:122:5, col:22> col:22 const_pointer 'const pollfd *'
| `-PointerType 0x560a41e788a0 'const pollfd *'
|   `-QualType 0x560a41e77441 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x560a41e77440 'pollfd' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-RecordType 0x560a41e64e20 'pollfd'
|         `-CXXRecord 0x560a41e64d90 'pollfd'
|-TypedefDecl 0x560a41e794b0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<pollfd>::type':'pollfd'
| `-ElaboratedType 0x560a41e79460 'typename fast_argument<pollfd>::type' sugar
|   `-TypedefType 0x560a41e79440 'fast_argument<pollfd, false>::type' sugar
|     |-Typedef 0x560a41e793d0 'type'
|     `-SubstTemplateTypeParmType 0x560a41e79190 'pollfd' sugar
|       |-TemplateTypeParmType 0x560a41a09100 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41a090b0 'T'
|       `-RecordType 0x560a41e64e20 'pollfd'
|         `-CXXRecord 0x560a41e64d90 'pollfd'
|-TypedefDecl 0x560a41e79518 <line:126:5, col:22> col:22 const_access_type 'const pollfd &'
| `-LValueReferenceType 0x560a41e78750 'const pollfd &'
|   `-QualType 0x560a41e77441 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x560a41e77440 'pollfd' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-RecordType 0x560a41e64e20 'pollfd'
|         `-CXXRecord 0x560a41e64d90 'pollfd'
|-TypedefDecl 0x560a41e79570 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x560a417e0580 'int'
|-TypedefDecl 0x560a41e795d8 <line:130:5, col:16> col:16 iterator 'pollfd *'
| `-PointerType 0x560a41e787e0 'pollfd *'
|   `-SubstTemplateTypeParmType 0x560a41e77440 'pollfd' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-RecordType 0x560a41e64e20 'pollfd'
|       `-CXXRecord 0x560a41e64d90 'pollfd'
|-TypedefDecl 0x560a41e79640 <line:131:5, col:22> col:22 const_iterator 'const pollfd *'
| `-PointerType 0x560a41e788a0 'const pollfd *'
|   `-QualType 0x560a41e77441 'const pollfd' const
|     `-SubstTemplateTypeParmType 0x560a41e77440 'pollfd' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-RecordType 0x560a41e64e20 'pollfd'
|         `-CXXRecord 0x560a41e64d90 'pollfd'
|-EnumDecl 0x560a41e79698 <line:134:5> col:5
| `-EnumConstantDecl 0x560a41e79790 <col:12, col:40> col:12 RESERVE_GROW 'Vector<pollfd>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x560a41e79770 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x560a41ae4378 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x560a41ae4350 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x560a41ae4330 <col:40> 'int' 1
|-CXXConstructorDecl 0x560a41e79818 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x560a41e79aa8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41e798d0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41e79970 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXConstructorDecl 0x560a41e79d68 <line:139:5, col:37> col:12 Vector 'void (const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x560a41e79c50 <col:19, col:36> col:36 x 'const Vector<pollfd> &'
|-CXXConstructorDecl 0x560a41e7a028 <line:141:5, col:32> col:12 Vector 'void (Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x560a41e79f10 <col:19, col:31> col:31 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x560a41e7a370 <line:144:5, col:51> col:23 operator= 'Vector<pollfd> &(const Vector<pollfd> &)' inline
| `-ParmVarDecl 0x560a41e7a250 <col:33, col:50> col:50 x 'const Vector<pollfd> &'
|-CXXMethodDecl 0x560a41e7a680 <line:146:5, col:46> col:23 operator= 'Vector<pollfd> &(Vector<pollfd> &&)' inline
| `-ParmVarDecl 0x560a41e7a560 <col:33, col:45> col:45 x 'Vector<pollfd> &&'
|-CXXMethodDecl 0x560a41e7a970 <line:148:5, col:70> col:23 assign 'Vector<pollfd> &(Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41e7a7b8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41e7a830 <col:43, col:69> col:63 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x560a41e7aac8 <line:150:5, col:55> col:49 begin 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x560a41e7aba8 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41e7ac00 <col:30> Inherited
|-CXXMethodDecl 0x560a41e7ac48 <line:151:5, col:53> col:49 end 'Vector<pollfd>::iterator ()'
| |-NoInlineAttr 0x560a41e7acf8 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41e7ad50 <col:30> Inherited
|-CXXMethodDecl 0x560a41e7ae18 <line:152:5, col:63> col:55 begin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x560a41e7aec8 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41e7af20 <col:30> Inherited
|-CXXMethodDecl 0x560a41e7af68 <line:153:5, col:61> col:55 end 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x560a41e7b018 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41e7b070 <col:30> Inherited
|-CXXMethodDecl 0x560a41e7b0b8 <line:154:5, col:64> col:55 cbegin 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x560a41e7b168 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41e7b1c0 <col:30> Inherited
|-CXXMethodDecl 0x560a41e7b208 <line:155:5, col:62> col:55 cend 'Vector<pollfd>::const_iterator () const'
| |-NoInlineAttr 0x560a41e7b2b8 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41e7b310 <col:30> Inherited
|-CXXMethodDecl 0x560a41e7b338 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x560a41e7b3e8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x560a41e7b498 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x560a41e7b658 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41e7b548 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41e7b5c0 <col:37, col:63> col:57 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x560a41e7b7a8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x560a41e7b718 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41e7b958 <line:163:5, col:65> col:43 operator[] 'pollfd &(Vector::size_type)'
| |-ParmVarDecl 0x560a41e7b860 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x560a41e7ba10 <col:20>
| `-OptimizeNoneAttr 0x560a41e7ba68 <col:30>
|-CXXMethodDecl 0x560a41e7bb88 <line:164:5, col:73> col:49 operator[] 'const pollfd &(Vector::size_type) const'
| |-ParmVarDecl 0x560a41e7ba90 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x560a41e7bc40 <col:20>
| `-OptimizeNoneAttr 0x560a41e7bc98 <col:30>
|-CXXMethodDecl 0x560a41e7bd50 <line:165:5, col:29> col:15 at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x560a41e7bcc0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41e7be98 <line:166:5, col:37> col:21 at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x560a41e7be08 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41e7bfc8 <line:167:5, col:21> col:15 front 'pollfd &()' inline
|-CXXMethodDecl 0x560a41e7c0f8 <line:168:5, col:29> col:21 front 'const pollfd &() const' inline
|-CXXMethodDecl 0x560a41e7c1c8 <line:169:5, col:20> col:15 back 'pollfd &()' inline
|-CXXMethodDecl 0x560a41e7c298 <line:170:5, col:28> col:21 back 'const pollfd &() const' inline
|-CXXMethodDecl 0x560a41e7c3d8 <line:172:5, col:39> col:15 unchecked_at 'pollfd &(Vector::size_type)' inline
| `-ParmVarDecl 0x560a41e7c348 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41e7c520 <line:173:5, col:47> col:21 unchecked_at 'const pollfd &(Vector::size_type) const' inline
| `-ParmVarDecl 0x560a41e7c490 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41e7c668 <line:174:5, col:59> col:15 at_u 'pollfd &(Vector::size_type)' inline
| |-ParmVarDecl 0x560a41e7c5d8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x560a41e7c720 <col:48> Inherited "" ""
|-CXXMethodDecl 0x560a41e7c820 <line:175:5, col:71> col:21 at_u 'const pollfd &(Vector::size_type) const' inline
| |-ParmVarDecl 0x560a41e7c790 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x560a41e7c8d8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x560a41e7c998 <line:177:5, col:20> col:15 data 'pollfd *()' inline
|-CXXMethodDecl 0x560a41e7ca98 <line:178:5, col:28> col:21 data 'const pollfd *() const' inline
|-CXXMethodDecl 0x560a41e7cc48 <line:180:5, col:48> col:17 push_back 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x560a41e7cb58 <col:27, col:47> col:47 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-FunctionTemplateDecl 0x560a41e7d408 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x560a41e7cd00 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<pollfd>':'fast_argument<pollfd, false>'
| `-CXXMethodDecl 0x560a41e7d368 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (pollfd &&)' inline
|   `-ParmVarDecl 0x560a41e7d268 <col:58, col:62> col:62 v 'pollfd &&'
|-CXXMethodDecl 0x560a41e7d4e8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x560a41e7d638 <line:186:5, col:49> col:17 push_front 'void (Vector<pollfd>::value_argument_type)' inline
| `-ParmVarDecl 0x560a41e7d5a8 <col:28, col:48> col:48 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x560a41e7d6f0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x560a41e7d938 <line:189:5, col:62> col:21 insert 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41e7d7b0 <col:28, col:37> col:37 it 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x560a41e7d828 <col:41, col:61> col:61 v 'Vector<pollfd>::value_argument_type':'pollfd'
|-CXXMethodDecl 0x560a41e7daf8 <line:190:5, col:38> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator)' inline
| `-ParmVarDecl 0x560a41e7da08 <col:27, col:36> col:36 it 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x560a41e7dd48 <line:191:5, col:49> col:21 erase 'Vector<pollfd>::iterator (Vector<pollfd>::iterator, Vector<pollfd>::iterator)' inline
| |-ParmVarDecl 0x560a41e7dbc0 <col:27, col:36> col:36 a 'Vector<pollfd>::iterator':'pollfd *'
| `-ParmVarDecl 0x560a41e7dc38 <col:39, col:48> col:48 b 'Vector<pollfd>::iterator':'pollfd *'
|-CXXMethodDecl 0x560a41e7de08 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x560a41e7e068 <line:195:5, col:34> col:17 swap 'void (Vector<pollfd> &)' inline
| `-ParmVarDecl 0x560a41e7df70 <col:22, col:33> col:33 x 'Vector<pollfd> &'
`-CXXDestructorDecl 0x560a41e7e138 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x560a41e7e138

Layout: <CGRecordLayout
  LLVMType:%class.Vector.15 = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector.15 = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x560a41e7f660 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<24>'
|-CXXRecordDecl 0x560a41e7f838 prev 0x560a41e7f660 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x560a41e7f8c8 <col:46, col:52> col:46 public
|-TypedefDecl 0x560a41e7f8f0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x560a417e0580 'int'
|-TypedefDecl 0x560a41e814c0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<24>::type':'char_array<24>'
| `-ElaboratedType 0x560a41e81470 'typename sized_array_memory<24>::type' sugar
|   `-TypedefType 0x560a41e7fda0 'sized_array_memory<24>::type' sugar
|     |-Typedef 0x560a41e7fca0 'type'
|     `-TemplateSpecializationType 0x560a41e7fc30 'char_array<24UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x560a41e7fb10 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|       |   `-SubstNonTypeTemplateParmExpr 0x560a41e7faf0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x560a41e7fad0 <col:24> 'unsigned long' 24
|       `-RecordType 0x560a41e7fc10 'char_array<24>'
|         `-ClassTemplateSpecialization 0x560a41e7fb30 'char_array'
|-TypedefDecl 0x560a41e81578 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<24> >::type *'
| `-PointerType 0x560a41e81540 'vector_memory<sized_array_memory<24> >::type *'
|   `-TypedefType 0x560a41e81520 'vector_memory<sized_array_memory<24> >::type' sugar
|     |-Typedef 0x560a41e814c0 'type'
|     `-ElaboratedType 0x560a41e81470 'typename sized_array_memory<24>::type' sugar
|       `-TypedefType 0x560a41e7fda0 'sized_array_memory<24>::type' sugar
|         |-Typedef 0x560a41e7fca0 'type'
|         `-TemplateSpecializationType 0x560a41e7fc30 'char_array<24UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x560a41e7fb10 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 24
|           |   `-SubstNonTypeTemplateParmExpr 0x560a41e7faf0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x560a41e7fad0 <col:24> 'unsigned long' 24
|           `-RecordType 0x560a41e7fc10 'char_array<24>'
|             `-ClassTemplateSpecialization 0x560a41e7fb30 'char_array'
|-CXXMethodDecl 0x560a41e816f8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<24> >::type *) const' inline
| `-ParmVarDecl 0x560a41e81608 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXConstructorDecl 0x560a41e817e8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x560a41e818c8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x560a41e818c8
|-CXXMethodDecl 0x560a41e81b98 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x560a41e81aa0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<24> > &'
|-CXXMethodDecl 0x560a41e81dd8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x560a41e81c50 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x560a41e81cc8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x560a41e81fa8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x560a41e81e98 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x560a41e81f10 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x560a41e82108 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x560a41e821d8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<24> >::iterator ()'
|-CXXMethodDecl 0x560a41e82428 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x560a41e82298 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x560a41e82310 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x560a41e82688 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<24> >::iterator (vector_memory<sized_array_memory<24> >::iterator, vector_memory<sized_array_memory<24> >::iterator)'
| |-ParmVarDecl 0x560a41e824f8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
| `-ParmVarDecl 0x560a41e82570 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<24> >::iterator':'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x560a41e82848 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x560a41e82758 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x560a41e82a08 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<24> >::type *)' inline
| `-ParmVarDecl 0x560a41e82910 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x560a41e82ac0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x560a41e82b70 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x560a41e82da8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<24> >::type *)'
| |-ParmVarDecl 0x560a41e82c20 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x560a41e82c98 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<24> >::type *'
|-CXXMethodDecl 0x560a41e83048 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<24> > &)'
| `-ParmVarDecl 0x560a41e82f50 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<24> > &'
|-FieldDecl 0x560a41e83110 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<24> >::type *'
|-FieldDecl 0x560a41e83160 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x560a41e831b0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.17 = type { %struct.char_array.18*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.17 = type { %struct.char_array.18*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x560a41e7e2c0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'SelectSet::SelectorInfo'
|-CXXRecordDecl 0x560a41e7e4c8 prev 0x560a41e7e2c0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x560a41e7f5d0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<SelectorInfo>::type':'sized_array_memory<24>'
| `-ElaboratedType 0x560a41e7f580 'typename array_memory<SelectorInfo>::type' sugar
|   `-TypedefType 0x560a41e7f560 'conditional<true, sized_array_memory<24>, typed_array_memory<SelectSet::SelectorInfo> >::type' sugar
|     |-Typedef 0x560a41e7f410 'type'
|     `-SubstTemplateTypeParmType 0x560a41e7f230 'sized_array_memory<24>' sugar
|       |-TemplateTypeParmType 0x560a419feb40 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a419feae8 'T'
|       `-RecordType 0x560a41b62dd0 'sized_array_memory<24>'
|         `-ClassTemplateSpecialization 0x560a41b62ce8 'sized_array_memory'
|-FieldDecl 0x560a41e83200 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<SelectSet::SelectorInfo>::array_memory_type>':'vector_memory<sized_array_memory<24> >' mutable
|-AccessSpecDecl 0x560a41e83250 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x560a41e83288 <line:118:5, col:15> col:15 value_type 'SelectSet::SelectorInfo':'SelectSet::SelectorInfo'
| `-SubstTemplateTypeParmType 0x560a41e7e560 'SelectSet::SelectorInfo' sugar
|   |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x560a41ae2938 'T'
|   `-RecordType 0x560a41e76d00 'SelectSet::SelectorInfo'
|     `-CXXRecord 0x560a41e76c70 'SelectorInfo'
|-TypedefDecl 0x560a41e83348 <line:119:5, col:16> col:16 reference 'SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x560a41e83310 'SelectSet::SelectorInfo &'
|   `-SubstTemplateTypeParmType 0x560a41e7e560 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-RecordType 0x560a41e76d00 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x560a41e76c70 'SelectorInfo'
|-TypedefDecl 0x560a41e83408 <line:120:5, col:22> col:22 const_reference 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x560a41e833d0 'const SelectSet::SelectorInfo &'
|   `-QualType 0x560a41e7e561 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x560a41e7e560 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-RecordType 0x560a41e76d00 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x560a41e76c70 'SelectorInfo'
|-TypedefDecl 0x560a41e83498 <line:121:5, col:16> col:16 pointer 'SelectSet::SelectorInfo *'
| `-PointerType 0x560a41e83460 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x560a41e7e560 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-RecordType 0x560a41e76d00 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x560a41e76c70 'SelectorInfo'
|-TypedefDecl 0x560a41e83558 <line:122:5, col:22> col:22 const_pointer 'const SelectSet::SelectorInfo *'
| `-PointerType 0x560a41e83520 'const SelectSet::SelectorInfo *'
|   `-QualType 0x560a41e7e561 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x560a41e7e560 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-RecordType 0x560a41e76d00 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x560a41e76c70 'SelectorInfo'
|-TypedefDecl 0x560a41e841b0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<SelectorInfo>::type':'const SelectSet::SelectorInfo &'
| `-ElaboratedType 0x560a41e84160 'typename fast_argument<SelectorInfo>::type' sugar
|   `-TypedefType 0x560a41e84140 'fast_argument<SelectSet::SelectorInfo, true>::type' sugar
|     |-Typedef 0x560a41e84078 'type'
|     `-LValueReferenceType 0x560a41e84040 'const SelectSet::SelectorInfo &'
|       `-QualType 0x560a41e83de1 'const SelectSet::SelectorInfo' const
|         `-SubstTemplateTypeParmType 0x560a41e83de0 'SelectSet::SelectorInfo' sugar
|           |-TemplateTypeParmType 0x560a41a077c0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x560a41a07768 'T'
|           `-RecordType 0x560a41e76d00 'SelectSet::SelectorInfo'
|             `-CXXRecord 0x560a41e76c70 'SelectorInfo'
|-TypedefDecl 0x560a41e84218 <line:126:5, col:22> col:22 const_access_type 'const SelectSet::SelectorInfo &'
| `-LValueReferenceType 0x560a41e833d0 'const SelectSet::SelectorInfo &'
|   `-QualType 0x560a41e7e561 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x560a41e7e560 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-RecordType 0x560a41e76d00 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x560a41e76c70 'SelectorInfo'
|-TypedefDecl 0x560a41e84270 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x560a417e0580 'int'
|-TypedefDecl 0x560a41e842d8 <line:130:5, col:16> col:16 iterator 'SelectSet::SelectorInfo *'
| `-PointerType 0x560a41e83460 'SelectSet::SelectorInfo *'
|   `-SubstTemplateTypeParmType 0x560a41e7e560 'SelectSet::SelectorInfo' sugar
|     |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x560a41ae2938 'T'
|     `-RecordType 0x560a41e76d00 'SelectSet::SelectorInfo'
|       `-CXXRecord 0x560a41e76c70 'SelectorInfo'
|-TypedefDecl 0x560a41e84340 <line:131:5, col:22> col:22 const_iterator 'const SelectSet::SelectorInfo *'
| `-PointerType 0x560a41e83520 'const SelectSet::SelectorInfo *'
|   `-QualType 0x560a41e7e561 'const SelectSet::SelectorInfo' const
|     `-SubstTemplateTypeParmType 0x560a41e7e560 'SelectSet::SelectorInfo' sugar
|       |-TemplateTypeParmType 0x560a41ae2990 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x560a41ae2938 'T'
|       `-RecordType 0x560a41e76d00 'SelectSet::SelectorInfo'
|         `-CXXRecord 0x560a41e76c70 'SelectorInfo'
|-EnumDecl 0x560a41e84398 <line:134:5> col:5
| `-EnumConstantDecl 0x560a41e84490 <col:12, col:40> col:12 RESERVE_GROW 'Vector<SelectSet::SelectorInfo>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x560a41e84470 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x560a41ae4378 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x560a41ae4350 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x560a41ae4330 <col:40> 'int' 1
|-CXXConstructorDecl 0x560a41e84518 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x560a41e847a8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41e845d0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41e84670 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXConstructorDecl 0x560a41e84a68 <line:139:5, col:37> col:12 Vector 'void (const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x560a41e84950 <col:19, col:36> col:36 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXConstructorDecl 0x560a41e84d28 <line:141:5, col:32> col:12 Vector 'void (Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x560a41e84c10 <col:19, col:31> col:31 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x560a41e85070 <line:144:5, col:51> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(const Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x560a41e84f50 <col:33, col:50> col:50 x 'const Vector<SelectSet::SelectorInfo> &'
|-CXXMethodDecl 0x560a41e85380 <line:146:5, col:46> col:23 operator= 'Vector<SelectSet::SelectorInfo> &(Vector<SelectSet::SelectorInfo> &&)' inline
| `-ParmVarDecl 0x560a41e85260 <col:33, col:45> col:45 x 'Vector<SelectSet::SelectorInfo> &&'
|-CXXMethodDecl 0x560a41e85670 <line:148:5, col:70> col:23 assign 'Vector<SelectSet::SelectorInfo> &(Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41e854b8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41e85530 <col:43, col:69> col:63 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x560a41e857c8 <line:150:5, col:55> col:49 begin 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x560a41e858a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41e85900 <col:30> Inherited
|-CXXMethodDecl 0x560a41e85948 <line:151:5, col:53> col:49 end 'Vector<SelectSet::SelectorInfo>::iterator ()'
| |-NoInlineAttr 0x560a41e859f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41e85a50 <col:30> Inherited
|-CXXMethodDecl 0x560a41e85b18 <line:152:5, col:63> col:55 begin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x560a41e85bc8 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41e85c20 <col:30> Inherited
|-CXXMethodDecl 0x560a41e85c68 <line:153:5, col:61> col:55 end 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x560a41e85d18 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41e85d70 <col:30> Inherited
|-CXXMethodDecl 0x560a41e85db8 <line:154:5, col:64> col:55 cbegin 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x560a41e85e68 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41e85ec0 <col:30> Inherited
|-CXXMethodDecl 0x560a41e85f08 <line:155:5, col:62> col:55 cend 'Vector<SelectSet::SelectorInfo>::const_iterator () const'
| |-NoInlineAttr 0x560a41e85fb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x560a41e86010 <col:30> Inherited
|-CXXMethodDecl 0x560a41e86038 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x560a41e860e8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x560a41e86198 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x560a41e86380 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41e86270 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x560a41e862e8 <col:37, col:63> col:57 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x560a41e864d0 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x560a41e86440 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41e86678 <line:163:5, col:65> col:43 operator[] 'SelectSet::SelectorInfo &(Vector::size_type)'
| |-ParmVarDecl 0x560a41e86588 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x560a41e86730 <col:20>
| `-OptimizeNoneAttr 0x560a41e86788 <col:30>
|-CXXMethodDecl 0x560a41e868a8 <line:164:5, col:73> col:49 operator[] 'const SelectSet::SelectorInfo &(Vector::size_type) const'
| |-ParmVarDecl 0x560a41e867b0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x560a41e86960 <col:20>
| `-OptimizeNoneAttr 0x560a41e869b8 <col:30>
|-CXXMethodDecl 0x560a41e86a70 <line:165:5, col:29> col:15 at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x560a41e869e0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41e86bb8 <line:166:5, col:37> col:21 at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x560a41e86b28 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41e86ce8 <line:167:5, col:21> col:15 front 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x560a41e86e18 <line:168:5, col:29> col:21 front 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x560a41e86ee8 <line:169:5, col:20> col:15 back 'SelectSet::SelectorInfo &()' inline
|-CXXMethodDecl 0x560a41e86fb8 <line:170:5, col:28> col:21 back 'const SelectSet::SelectorInfo &() const' inline
|-CXXMethodDecl 0x560a41e870f8 <line:172:5, col:39> col:15 unchecked_at 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| `-ParmVarDecl 0x560a41e87068 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41e87240 <line:173:5, col:47> col:21 unchecked_at 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| `-ParmVarDecl 0x560a41e871b0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x560a41e87388 <line:174:5, col:59> col:15 at_u 'SelectSet::SelectorInfo &(Vector::size_type)' inline
| |-ParmVarDecl 0x560a41e872f8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x560a41e87440 <col:48> Inherited "" ""
|-CXXMethodDecl 0x560a41e87540 <line:175:5, col:71> col:21 at_u 'const SelectSet::SelectorInfo &(Vector::size_type) const' inline
| |-ParmVarDecl 0x560a41e874b0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x560a41e875f8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x560a41e876b8 <line:177:5, col:20> col:15 data 'SelectSet::SelectorInfo *()' inline
|-CXXMethodDecl 0x560a41e877b8 <line:178:5, col:28> col:21 data 'const SelectSet::SelectorInfo *() const' inline
|-CXXMethodDecl 0x560a41e87968 <line:180:5, col:48> col:17 push_back 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x560a41e87878 <col:27, col:47> col:47 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-FunctionTemplateDecl 0x560a41e88128 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x560a41e87a20 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<SelectSet::SelectorInfo>':'fast_argument<SelectSet::SelectorInfo, true>'
| `-CXXMethodDecl 0x560a41e88088 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (SelectSet::SelectorInfo &&)' inline
|   `-ParmVarDecl 0x560a41e87f88 <col:58, col:62> col:62 v 'SelectSet::SelectorInfo &&'
|-CXXMethodDecl 0x560a41e88208 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x560a41e88358 <line:186:5, col:49> col:17 push_front 'void (Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| `-ParmVarDecl 0x560a41e882c8 <col:28, col:48> col:48 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x560a41e88410 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x560a41e88658 <line:189:5, col:62> col:21 insert 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::value_argument_type)' inline
| |-ParmVarDecl 0x560a41e884d0 <col:28, col:37> col:37 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x560a41e88548 <col:41, col:61> col:61 v 'Vector<SelectSet::SelectorInfo>::value_argument_type':'const SelectSet::SelectorInfo &'
|-CXXMethodDecl 0x560a41e88818 <line:190:5, col:38> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator)' inline
| `-ParmVarDecl 0x560a41e88728 <col:27, col:36> col:36 it 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x560a41e88a68 <line:191:5, col:49> col:21 erase 'Vector<SelectSet::SelectorInfo>::iterator (Vector<SelectSet::SelectorInfo>::iterator, Vector<SelectSet::SelectorInfo>::iterator)' inline
| |-ParmVarDecl 0x560a41e888e0 <col:27, col:36> col:36 a 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
| `-ParmVarDecl 0x560a41e88958 <col:39, col:48> col:48 b 'Vector<SelectSet::SelectorInfo>::iterator':'SelectSet::SelectorInfo *'
|-CXXMethodDecl 0x560a41e88b28 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x560a41e88d88 <line:195:5, col:34> col:17 swap 'void (Vector<SelectSet::SelectorInfo> &)' inline
| `-ParmVarDecl 0x560a41e88c90 <col:22, col:33> col:33 x 'Vector<SelectSet::SelectorInfo> &'
`-CXXDestructorDecl 0x560a41e88e58 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x560a41e88e58

Layout: <CGRecordLayout
  LLVMType:%class.Vector.16 = type { %class.vector_memory.17 }
  NonVirtualBaseLLVMType:%class.Vector.16 = type { %class.vector_memory.17 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41e65a20 <../dummy_inc/click/selectset.hh:36:1, line:109:1> line:36:7 referenced class SelectSet definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x560a41e65b38 <col:1, col:7> col:7 implicit referenced class SelectSet
|-AccessSpecDecl 0x560a41e65bc8 <col:19, col:25> col:19 public
|-CXXConstructorDecl 0x560a41e65c50 <line:38:5, col:15> col:5 SelectSet 'void ()'
|-CXXDestructorDecl 0x560a41e65d40 <line:39:5, col:16> col:5 ~SelectSet 'void ()' noexcept-unevaluated 0x560a41e65d40
|-CXXMethodDecl 0x560a41e76270 <line:41:5, col:21> col:10 initialize 'void ()'
|-CXXMethodDecl 0x560a41e76510 <line:43:5, col:54> col:9 add_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x560a41e76328 <col:20, col:24> col:24 fd 'int'
| |-ParmVarDecl 0x560a41e763a0 <col:28, col:37> col:37 element 'Element *'
| `-ParmVarDecl 0x560a41e76420 <col:46, col:50> col:50 mask 'int'
|-CXXMethodDecl 0x560a41e76780 <line:44:5, col:57> col:9 remove_select 'int (int, Element *, int)'
| |-ParmVarDecl 0x560a41e765e0 <col:23, col:27> col:27 fd 'int'
| |-ParmVarDecl 0x560a41e76658 <col:31, col:40> col:40 element 'Element *'
| `-ParmVarDecl 0x560a41e766d8 <col:49, col:53> col:53 mask 'int'
|-CXXMethodDecl 0x560a41e768d8 <line:46:5, col:42> col:10 run_selects 'void (RouterThread *)'
| `-ParmVarDecl 0x560a41e76848 <col:22, col:36> col:36 thread 'RouterThread *'
|-CXXMethodDecl 0x560a41e769a0 <line:47:5, line:50:5> line:47:17 used wake_immediate 'void ()' inline
| `-CompoundStmt 0x560a41e8a508 <col:34, line:50:5>
|   |-BinaryOperator 0x560a41e89ed8 <line:48:2, col:23> 'volatile bool' lvalue '='
|   | |-MemberExpr 0x560a41e89e98 <col:2> 'volatile bool' lvalue ->_wake_pipe_pending 0x560a41e77128
|   | | `-CXXThisExpr 0x560a41e89e88 <col:2> 'SelectSet *' implicit this
|   | `-CXXBoolLiteralExpr 0x560a41e89ec8 <col:23> 'bool' true
|   `-CallExpr 0x560a41e8a4e0 <line:49:2, col:43> 'void'
|     |-ImplicitCastExpr 0x560a41e8a4c8 <col:2> 'void (*)(long)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x560a41e8a448 <col:2> 'void (long)' lvalue Function 0x560a41e8a348 'ignore_result' 'void (long)' (FunctionTemplate 0x560a41a25208 'ignore_result')
|     `-CallExpr 0x560a41e8a0f0 <col:16, col:42> 'ssize_t':'long'
|       |-ImplicitCastExpr 0x560a41e8a0d8 <col:16> 'ssize_t (*)(int, const void *, size_t)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x560a41e8a058 <col:16> 'ssize_t (int, const void *, size_t)' lvalue Function 0x560a41e47908 'write' 'ssize_t (int, const void *, size_t)'
|       |-ImplicitCastExpr 0x560a41e8a128 <col:22, col:34> 'int' <LValueToRValue>
|       | `-ArraySubscriptExpr 0x560a41e8a000 <col:22, col:34> 'int' lvalue
|       |   |-ImplicitCastExpr 0x560a41e89fe8 <col:22> 'int *' <ArrayToPointerDecay>
|       |   | `-MemberExpr 0x560a41e89f98 <col:22> 'int [2]' lvalue ->_wake_pipe 0x560a41e770c8
|       |   |   `-CXXThisExpr 0x560a41e89f88 <col:22> 'SelectSet *' implicit this
|       |   `-IntegerLiteral 0x560a41e89fc8 <col:33> 'int' 1
|       |-ImplicitCastExpr 0x560a41e8a158 <col:37> 'const void *' <BitCast>
|       | `-ImplicitCastExpr 0x560a41e8a140 <col:37> 'const char *' <ArrayToPointerDecay>
|       |   `-StringLiteral 0x560a41e8a020 <col:37> 'const char [1]' lvalue ""
|       `-ImplicitCastExpr 0x560a41e8a170 <col:41> 'size_t':'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x560a41e8a038 <col:41> 'int' 1
|-CXXMethodDecl 0x560a41e76ae0 <line:52:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x560a41e76a50 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x560a41e76ba8 <line:54:5, col:23> col:17 fence 'void ()' inline
|-AccessSpecDecl 0x560a41e76c48 <line:56:3, col:10> col:3 private
|-CXXRecordDecl 0x560a41e76c70 <line:58:5, line:66:5> line:58:12 referenced struct SelectorInfo definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x560a41e76d88 <col:5, col:12> col:12 implicit referenced struct SelectorInfo
| |-FieldDecl 0x560a41e76e28 <line:59:2, col:11> col:11 read 'Element *'
| |-FieldDecl 0x560a41e76e88 <line:60:2, col:11> col:11 write 'Element *'
| |-FieldDecl 0x560a41e76ef0 <line:61:2, col:6> col:6 pollfd 'int'
| `-CXXConstructorDecl 0x560a41e76fa0 <line:62:2, line:65:2> line:62:2 SelectorInfo 'void ()'
|   |-CXXCtorInitializer Field 0x560a41e76e28 'read' 'Element *'
|   | `-ImplicitCastExpr 0x560a41e8a568 <line:63:13> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x560a41e8a528 <col:13> 'int' 0
|   |-CXXCtorInitializer Field 0x560a41e76e88 'write' 'Element *'
|   | `-ImplicitCastExpr 0x560a41e8a5e8 <col:23> 'Element *' <NullToPointer>
|   |   `-IntegerLiteral 0x560a41e8a5a8 <col:23> 'int' 0
|   |-CXXCtorInitializer Field 0x560a41e76ef0 'pollfd' 'int'
|   | `-UnaryOperator 0x560a41e8a648 <col:34, col:35> 'int' prefix '-'
|   |   `-IntegerLiteral 0x560a41e8a628 <col:35> 'int' 1
|   `-CompoundStmt 0x560a41e8a6c0 <line:64:2, line:65:2>
|-FieldDecl 0x560a41e770c8 <line:68:5, col:21> col:9 referenced _wake_pipe 'int [2]'
|-FieldDecl 0x560a41e77128 <line:69:5, col:19> col:19 referenced _wake_pipe_pending 'volatile bool'
|-FieldDecl 0x560a41e7e260 <line:82:5, col:27> col:27 _pollfds 'Vector<struct pollfd>':'Vector<pollfd>'
|-FieldDecl 0x560a41e88f40 <line:83:5, col:26> col:26 _selinfo 'Vector<SelectSet::SelectorInfo>':'Vector<SelectSet::SelectorInfo>'
|-CXXMethodDecl 0x560a41e89178 <line:89:5, col:63> col:10 register_select 'void (int, bool, bool)'
| |-ParmVarDecl 0x560a41e88fa8 <col:26, col:30> col:30 fd 'int'
| |-ParmVarDecl 0x560a41e89020 <col:34, col:39> col:39 add_read 'bool'
| `-ParmVarDecl 0x560a41e89098 <col:49, col:54> col:54 add_write 'bool'
|-CXXMethodDecl 0x560a41e89360 <line:90:5, col:41> col:10 remove_pollfd 'void (int, int)'
| |-ParmVarDecl 0x560a41e89248 <col:24, col:28> col:28 pi 'int'
| `-ParmVarDecl 0x560a41e892c8 <col:32, col:36> col:36 event 'int'
|-CXXMethodDecl 0x560a41e895a8 <line:91:5, col:49> col:17 call_selected 'void (int, int) const' inline
| |-ParmVarDecl 0x560a41e89428 <col:31, col:35> col:35 fd 'int'
| `-ParmVarDecl 0x560a41e894a8 <col:39, col:43> col:43 mask 'int'
|-CXXMethodDecl 0x560a41e897b8 <line:92:5, col:63> col:17 post_select 'bool (RouterThread *, bool)' inline
| |-ParmVarDecl 0x560a41e89668 <col:29, col:43> col:43 thread 'RouterThread *'
| `-ParmVarDecl 0x560a41e896e0 <col:51, col:56> col:56 acquire 'bool'
|-CXXMethodDecl 0x560a41e89908 <line:97:5, col:47> col:10 run_selects_poll 'void (RouterThread *)'
| `-ParmVarDecl 0x560a41e89878 <col:27, col:41> col:41 thread 'RouterThread *'
|-CXXMethodDecl 0x560a41e899d0 <line:102:5, col:22> col:17 used lock 'void ()' inline
|-CXXMethodDecl 0x560a41e89a90 <line:103:5, col:24> col:17 used unlock 'void ()' inline
|-CXXConstructorDecl 0x560a41e89b58 <line:36:7> col:7 implicit SelectSet 'void (const SelectSet &)' inline default noexcept-unevaluated 0x560a41e89b58
| `-ParmVarDecl 0x560a41e89c68 <col:7> col:7 'const SelectSet &'
`-CXXMethodDecl 0x560a41e89d08 <col:7> col:7 implicit operator= 'SelectSet &(const SelectSet &)' inline default noexcept-unevaluated 0x560a41e89d08
  `-ParmVarDecl 0x560a41e89e18 <col:7> col:7 'const SelectSet &'

Layout: <CGRecordLayout
  LLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.15, %class.Vector.16 }
  NonVirtualBaseLLVMType:%class.SelectSet = type { [2 x i32], i8, %class.Vector.15, %class.Vector.16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41e0fce8 <../dummy_inc/click/sync.hh:46:1, line:64:1> line:46:7 referenced class Spinlock definition
|-DefinitionData empty standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x560a41e0fe08 <col:1, col:7> col:7 implicit referenced class Spinlock
|-AccessSpecDecl 0x560a41e0fe98 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x560a41e0ff20 <line:48:5, col:21> col:12 Spinlock 'void ()' inline
|-CXXDestructorDecl 0x560a41e10010 <line:49:5, col:22> col:12 ~Spinlock 'void () noexcept' inline
|-CXXMethodDecl 0x560a41e10110 <line:51:5, col:25> col:17 used acquire 'void ()' inline
|-CXXMethodDecl 0x560a41e101d0 <line:52:5, col:25> col:17 used release 'void ()' inline
|-CXXMethodDecl 0x560a41e10290 <line:53:5, col:25> col:17 attempt 'bool ()' inline
|-CXXMethodDecl 0x560a41e10378 <line:54:5, col:26> col:17 nested 'bool () const' inline
|-CXXConstructorDecl 0x560a41e10498 <line:46:7> col:7 implicit constexpr Spinlock 'void (const Spinlock &)' inline default trivial noexcept-unevaluated 0x560a41e10498
| `-ParmVarDecl 0x560a41e105a8 <col:7> col:7 'const Spinlock &'
`-CXXMethodDecl 0x560a41e8f2f8 <col:7> col:7 implicit operator= 'Spinlock &(const Spinlock &)' inline default trivial noexcept-unevaluated 0x560a41e8f2f8
  `-ParmVarDecl 0x560a41e8f408 <col:7> col:7 'const Spinlock &'

Layout: <CGRecordLayout
  LLVMType:%class.Spinlock = type { i8 }
  NonVirtualBaseLLVMType:%class.Spinlock.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41e27498 <../dummy_inc/click/task.hh:339:5, line:342:5> line:339:11 referenced union Pending definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x560a41e275b8 <col:5, col:11> col:11 implicit union Pending
|-FieldDecl 0x560a41e27658 <line:340:9, col:15> col:15 t 'Task *'
|-FieldDecl 0x560a41e276b8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
|-CXXConstructorDecl 0x560a41e8e8f8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x560a41e8e8f8
| `-ParmVarDecl 0x560a41e8ea08 <col:11> col:11 'const Task::Pending &'
|-CXXConstructorDecl 0x560a41e8eaa8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x560a41e8eaa8
| `-ParmVarDecl 0x560a41e8ebb8 <col:11> col:11 'Task::Pending &&'
|-CXXDestructorDecl 0x560a41e8ec28 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x560a41e8ec28
|-CXXMethodDecl 0x560a41e8f4a8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x560a41e8f4a8
| `-ParmVarDecl 0x560a41e8f5b8 <col:11> col:11 'const Task::Pending &'
|-CXXMethodDecl 0x560a41e8f628 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x560a41e8f628
| `-ParmVarDecl 0x560a41e8f738 <col:11> col:11 'Task::Pending &&'
`-CXXConstructorDecl 0x560a41e95da8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
  `-CompoundStmt 0x560a41e95e80 <col:11>

Layout: <CGRecordLayout
  LLVMType:%"union.Task::Pending" = type { %class.Task* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41e11be0 <../dummy_inc/click/sync.hh:303:1, line:324:1> line:303:7 referenced class SpinlockIRQ definition
|-DefinitionData pass_in_registers empty standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x560a41e11cf8 <col:1, col:7> col:7 implicit referenced class SpinlockIRQ
|-AccessSpecDecl 0x560a41e11d88 <col:21, col:27> col:21 public
|-CXXConstructorDecl 0x560a41e11e10 <line:305:5, col:24> col:12 SpinlockIRQ 'void ()' inline
|-TypedefDecl 0x560a41e11ed0 <line:310:5, col:17> col:17 referenced flags_t 'int'
| `-BuiltinType 0x560a417e0580 'int'
|-CXXMethodDecl 0x560a41e11f98 <line:313:5, col:59> col:20 acquire 'SpinlockIRQ::flags_t ()' inline
| `-AlwaysInlineAttr 0x560a41e12038 <col:45> always_inline
|-CXXMethodDecl 0x560a41e12168 <line:314:5, col:63> col:17 release 'void (SpinlockIRQ::flags_t)' inline
| |-ParmVarDecl 0x560a41e120a0 <col:25> col:32 'SpinlockIRQ::flags_t':'int'
| `-AlwaysInlineAttr 0x560a41e12210 <col:49> always_inline
|-CXXConstructorDecl 0x560a41e12308 <line:303:7> col:7 implicit constexpr SpinlockIRQ 'void (const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x560a41e12308
| `-ParmVarDecl 0x560a41e12418 <col:7> col:7 'const SpinlockIRQ &'
|-CXXConstructorDecl 0x560a41e124b8 <col:7> col:7 implicit constexpr SpinlockIRQ 'void (SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x560a41e124b8
| `-ParmVarDecl 0x560a41e125c8 <col:7> col:7 'SpinlockIRQ &&'
|-CXXDestructorDecl 0x560a41e8ed10 <col:7> col:7 implicit ~SpinlockIRQ 'void ()' inline default trivial noexcept-unevaluated 0x560a41e8ed10
|-CXXMethodDecl 0x560a41e8f7d8 <col:7> col:7 implicit operator= 'SpinlockIRQ &(const SpinlockIRQ &)' inline default trivial noexcept-unevaluated 0x560a41e8f7d8
| `-ParmVarDecl 0x560a41e8f8e8 <col:7> col:7 'const SpinlockIRQ &'
`-CXXMethodDecl 0x560a41e8f958 <col:7> col:7 implicit operator= 'SpinlockIRQ &(SpinlockIRQ &&)' inline default trivial noexcept-unevaluated 0x560a41e8f958
  `-ParmVarDecl 0x560a41e8fa68 <col:7> col:7 'SpinlockIRQ &&'

Layout: <CGRecordLayout
  LLVMType:%class.SpinlockIRQ = type { i8 }
  NonVirtualBaseLLVMType:%class.SpinlockIRQ.base = type {}
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41e8ab30 prev 0x560a41e65990 <../dummy_inc/click/routerthread.hh:28:1, line:248:1> line:28:7 referenced class RouterThread definition
|-DefinitionData has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-CXXRecordDecl 0x560a41e8ac28 <col:1, col:7> col:7 implicit referenced class RouterThread
|-AccessSpecDecl 0x560a41e8acb8 <col:22, col:28> col:22 public
|-EnumDecl 0x560a41e8ace0 <line:30:5, col:58> col:5
| |-EnumConstantDecl 0x560a41e8adf8 <col:12, col:32> col:12 THREAD_QUIESCENT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
| | `-ConstantExpr 0x560a41e8add8 <col:31, col:32> 'int' Int: -1
| |   `-UnaryOperator 0x560a41e8adc0 <col:31, col:32> 'int' prefix '-'
| |     `-IntegerLiteral 0x560a41e8ada0 <col:32> 'int' 1
| `-EnumConstantDecl 0x560a41e8aea0 <col:35, col:53> col:35 THREAD_UNKNOWN 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:30:5)'
|   `-ConstantExpr 0x560a41e8ae80 <col:52, col:53> 'int' Int: -1000
|     `-UnaryOperator 0x560a41e8ae68 <col:52, col:53> 'int' prefix '-'
|       `-IntegerLiteral 0x560a41e8ae48 <col:53> 'int' 1000
|-CXXMethodDecl 0x560a41e8af40 <line:32:5, col:28> col:16 thread_id 'int () const' inline
|-CXXMethodDecl 0x560a41e8b000 <line:34:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x560a41e8b0e8 <line:35:5, col:52> col:22 timer_set 'TimerSet &()' inline
| `-CompoundStmt 0x560a41e8fb28 <col:34, col:52>
|   `-ReturnStmt 0x560a41e8fb18 <col:36, col:43>
|     `-MemberExpr 0x560a41e8fae8 <col:43> 'TimerSet' lvalue ->_timers 0x560a41e8cdb8
|       `-CXXThisExpr 0x560a41e8fad8 <col:43> 'RouterThread *' implicit this
|-CXXMethodDecl 0x560a41e8b1d8 <line:36:5, col:64> col:28 timer_set 'const TimerSet &() const' inline
| `-CompoundStmt 0x560a41e8fb90 <col:46, col:64>
|   `-ReturnStmt 0x560a41e8fb80 <col:48, col:55>
|     `-MemberExpr 0x560a41e8fb50 <col:55> 'const TimerSet' lvalue ->_timers 0x560a41e8cdb8
|       `-CXXThisExpr 0x560a41e8fb40 <col:55> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x560a41e8b2c8 <line:38:5, col:55> col:23 select_set 'SelectSet &()' inline
| `-CompoundStmt 0x560a41e8fbf8 <col:36, col:55>
|   `-ReturnStmt 0x560a41e8fbe8 <col:38, col:45>
|     `-MemberExpr 0x560a41e8fbb8 <col:45> 'SelectSet' lvalue ->_selects 0x560a41e8ce18
|       `-CXXThisExpr 0x560a41e8fba8 <col:45> 'RouterThread *' implicit this
|-CXXMethodDecl 0x560a41e8b3b8 <line:39:5, col:67> col:29 select_set 'const SelectSet &() const' inline
| `-CompoundStmt 0x560a41e8fc60 <col:48, col:67>
|   `-ReturnStmt 0x560a41e8fc50 <col:50, col:57>
|     `-MemberExpr 0x560a41e8fc20 <col:57> 'const SelectSet' lvalue ->_selects 0x560a41e8ce18
|       `-CXXThisExpr 0x560a41e8fc10 <col:57> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x560a41e8b478 <line:43:5, col:26> col:17 active 'bool () const' inline
|-CXXMethodDecl 0x560a41e8b568 <line:44:5, col:31> col:18 task_begin 'Task *() const' inline
|-CXXMethodDecl 0x560a41e8b6d8 <line:45:5, col:40> col:18 task_next 'Task *(Task *) const' inline
| `-ParmVarDecl 0x560a41e8b618 <col:28, col:34> col:34 task 'Task *'
|-CXXMethodDecl 0x560a41e8b7a0 <line:46:5, col:29> col:18 task_end 'Task *() const' inline
|-CXXMethodDecl 0x560a41e8bbe8 <line:47:5, col:59> col:10 scheduled_tasks 'void (Router *, Vector<Task *> &)'
| |-ParmVarDecl 0x560a41e8b850 <col:26, col:34> col:34 router 'Router *'
| `-ParmVarDecl 0x560a41e8bad0 <col:42, col:58> col:58 x 'Vector<Task *> &'
|-CXXMethodDecl 0x560a41e8bcb8 <line:49:5, col:28> col:17 lock_tasks 'void ()' inline
|-CXXMethodDecl 0x560a41e8bd78 <line:50:5, col:30> col:17 unlock_tasks 'void ()' inline
|-CXXMethodDecl 0x560a41e8be38 <line:52:5, col:38> col:17 schedule_block_tasks 'void ()' inline
|-CXXMethodDecl 0x560a41e8bf78 <line:53:5, col:43> col:17 used block_tasks 'void (bool)' inline
| `-ParmVarDecl 0x560a41e8bee8 <col:29, col:34> col:34 scheduled 'bool'
|-CXXMethodDecl 0x560a41e8c040 <line:54:5, col:31> col:17 used unblock_tasks 'void ()' inline
|-CXXMethodDecl 0x560a41e8c100 <line:56:5, col:29> col:17 stop_flag 'bool () const' inline
|-CXXMethodDecl 0x560a41e8c1c0 <line:58:5, col:35> col:17 mark_driver_entry 'void ()' inline
|-CXXMethodDecl 0x560a41e8c280 <line:59:5, col:17> col:10 driver 'void ()'
|-CXXMethodDecl 0x560a41e8c3c0 <line:61:5, col:36> col:10 kill_router 'void (Router *)'
| `-ParmVarDecl 0x560a41e8c330 <col:22, col:30> col:30 router 'Router *'
|-CXXMethodDecl 0x560a41e8c488 <line:77:5, col:22> col:17 used wake 'void ()' inline
|-CXXMethodDecl 0x560a41e8c548 <line:80:5, col:29> col:17 run_signals 'void ()' inline
|-EnumDecl 0x560a41e8c5e8 <line:83:5, line:86:20> line:83:5
| |-EnumConstantDecl 0x560a41e8c6b0 <col:12> col:12 referenced S_PAUSED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x560a41e8c700 <col:22> col:22 referenced S_BLOCKED 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x560a41e8c750 <col:33> col:33 referenced S_TIMERWAIT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x560a41e8c7a0 <line:84:12> col:12 S_LOCKSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x560a41e8c7f0 <col:26> col:26 S_LOCKTASKS 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x560a41e8c840 <line:85:12> col:12 S_RUNTASK 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x560a41e8c890 <col:23> col:23 S_RUNTIMER 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x560a41e8c8e0 <col:35> col:35 S_RUNSIGNAL 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x560a41e8c930 <col:48> col:48 S_RUNPENDING 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| |-EnumConstantDecl 0x560a41e8c980 <col:62> col:62 S_RUNSELECT 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
| `-EnumConstantDecl 0x560a41e8c9d0 <line:86:12> col:12 NSTATES 'RouterThread::(anonymous enum at ../dummy_inc/click/routerthread.hh:83:5)'
|-CXXMethodDecl 0x560a41e8cac8 <line:87:5, col:43> col:17 used set_thread_state 'void (int)' inline
| `-ParmVarDecl 0x560a41e8ca38 <col:34, col:38> col:38 state 'int'
|-CXXMethodDecl 0x560a41e8cc18 <line:88:5, col:61> col:17 set_thread_state_for_blocking 'void (int)' inline
| `-ParmVarDecl 0x560a41e8cb88 <col:47, col:51> col:51 delay_type 'int'
|-AccessSpecDecl 0x560a41e8ccc0 <line:104:3, col:10> col:3 private
|-FieldDecl 0x560a41e8ccf8 <line:119:5, col:14> col:14 referenced _task_link 'TaskLink'
|-FieldDecl 0x560a41e8cd58 <line:120:5, col:19> col:19 referenced _stop_flag 'volatile bool'
|-FieldDecl 0x560a41e8cdb8 <line:125:5, col:14> col:14 referenced _timers 'TimerSet'
|-FieldDecl 0x560a41e8ce18 <line:127:5, col:15> col:15 referenced _selects 'SelectSet'
|-FieldDecl 0x560a41e8ce98 <line:148:5, col:14> col:14 referenced _task_lock 'Spinlock'
| `-AlignedAttr 0x560a41e8cf08 <col:40, col:50> aligned
|   `-ConstantExpr 0x560a41e8cee8 <col:48> 'int' Int: 64
|     `-IntegerLiteral 0x560a41e8ce68 <col:48> 'int' 64
|-FieldDecl 0x560a41e8cf78 <line:149:5, col:21> col:21 referenced _task_blocker 'atomic_uint32_t'
|-FieldDecl 0x560a41e8cfd8 <line:150:5, col:21> col:21 referenced _task_blocker_waiting 'atomic_uint32_t'
|-FieldDecl 0x560a41e8d0d0 <line:152:5, col:19> col:19 referenced _pending_head 'Task::Pending':'Task::Pending'
|-FieldDecl 0x560a41e8d1e0 <line:153:5, col:20> col:20 _pending_tail 'Task::Pending *'
|-FieldDecl 0x560a41e8d240 <line:154:5, col:17> col:17 _pending_lock 'SpinlockIRQ'
|-FieldDecl 0x560a41e8d2c0 <line:157:5, col:13> col:13 referenced _master 'Master *'
| `-AlignedAttr 0x560a41e8d330 <col:36, col:46> aligned
|   `-ConstantExpr 0x560a41e8d310 <col:44> 'int' Int: 64
|     `-IntegerLiteral 0x560a41e8d290 <col:44> 'int' 64
|-FieldDecl 0x560a41e8d3a8 <line:158:5, col:9> col:9 referenced _id 'int'
|-FieldDecl 0x560a41e8d408 <line:159:5, col:10> col:10 referenced _driver_entered 'bool'
|-AccessSpecDecl 0x560a41e8d458 <line:170:3, col:9> col:3 public
|-FieldDecl 0x560a41e8d498 <line:171:5, col:14> col:14 _tasks_per_iter 'unsigned int'
|-FieldDecl 0x560a41e8d500 <line:172:5, col:14> col:14 _iters_per_os 'unsigned int'
|-AccessSpecDecl 0x560a41e8d550 <line:173:3, col:10> col:3 private
|-CXXConstructorDecl 0x560a41e8d6f8 <line:205:5, col:46> col:5 RouterThread 'void (Master *, int)'
| |-ParmVarDecl 0x560a41e8d588 <col:18, col:26> col:26 master 'Master *'
| `-ParmVarDecl 0x560a41e8d608 <col:34, col:38> col:38 threadno 'int'
|-CXXDestructorDecl 0x560a41e8d7f8 <line:206:5, col:19> col:5 ~RouterThread 'void ()' noexcept-unevaluated 0x560a41e8d7f8
|-CXXMethodDecl 0x560a41e8d900 <line:209:5, col:29> col:17 add_pending 'void ()' inline
|-CXXMethodDecl 0x560a41e8d9c8 <line:211:5, line:217:5> line:211:21 pass 'unsigned int () const' inline
| `-CompoundStmt 0x560a41e8fd58 <col:34, line:217:5>
|   `-ReturnStmt 0x560a41e8fd48 <line:215:9, col:34>
|     `-ImplicitCastExpr 0x560a41e8fd30 <col:16, col:34> 'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x560a41e8fd00 <col:16, col:34> 'unsigned int' lvalue ->_pass 0x560a41e1d870
|         `-ImplicitCastExpr 0x560a41e8fce8 <col:16, col:27> 'TaskLink *' <LValueToRValue>
|           `-MemberExpr 0x560a41e8fcb8 <col:16, col:27> 'TaskLink *const' lvalue ._next 0x560a41e1d808
|             `-MemberExpr 0x560a41e8fc88 <col:16> 'const TaskLink' lvalue ->_task_link 0x560a41e8ccf8
|               `-CXXThisExpr 0x560a41e8fc78 <col:16> 'const RouterThread *' implicit this
|-CXXMethodDecl 0x560a41e8da88 <line:221:5, col:28> col:10 driver_lock_tasks 'void ()'
|-CXXMethodDecl 0x560a41e8db48 <line:222:5, line:226:5> line:222:17 driver_unlock_tasks 'void ()' inline
| `-CompoundStmt 0x560a41e90480 <col:39, line:226:5>
|   |-DeclStmt 0x560a41e8ffa8 <line:223:9, col:68>
|   | `-VarDecl 0x560a41e8fd80 <col:9, col:67> col:18 used val 'uint32_t':'unsigned int' cinit
|   |   `-CXXMemberCallExpr 0x560a41e8ff60 <col:24, col:67> 'uint32_t':'unsigned int'
|   |     |-MemberExpr 0x560a41e8ff30 <col:24, col:38> '<bound member function type>' .compare_swap 0x560a41b0d5f0
|   |     | `-MemberExpr 0x560a41e8fdf8 <col:24> 'atomic_uint32_t' lvalue ->_task_blocker 0x560a41e8cf78
|   |     |   `-CXXThisExpr 0x560a41e8fde8 <col:24> 'RouterThread *' implicit this
|   |     |-CStyleCastExpr 0x560a41e8fee8 <col:51, col:63> 'uint32_t':'unsigned int' <NoOp>
|   |     | `-ImplicitCastExpr 0x560a41e8fed0 <col:62, col:63> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|   |     |   `-UnaryOperator 0x560a41e8fea8 <col:62, col:63> 'int' prefix '-'
|   |     |     `-IntegerLiteral 0x560a41e8fe88 <col:63> 'int' 1
|   |     `-ImplicitCastExpr 0x560a41e8ff90 <col:66> 'uint32_t':'unsigned int' <IntegralCast>
|   |       `-IntegerLiteral 0x560a41e8ff10 <col:66> 'int' 0
|   |-CStyleCastExpr 0x560a41e8fff0 <line:224:9, col:16> 'void' <ToVoid>
|   | `-DeclRefExpr 0x560a41e8ffc0 <col:16> 'uint32_t':'unsigned int' lvalue Var 0x560a41e8fd80 'val' 'uint32_t':'unsigned int'
|   `-ParenExpr 0x560a41e90460 <line:225:9, col:181> 'void'
|     `-ConditionalOperator 0x560a41e90430 <col:10, col:180> 'void'
|       |-CXXStaticCastExpr 0x560a41e90108 <col:10, col:50> 'bool' static_cast<_Bool> <NoOp>
|       | `-BinaryOperator 0x560a41e900d8 <col:30, col:49> 'bool' '=='
|       |   |-ImplicitCastExpr 0x560a41e900c0 <col:30> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-DeclRefExpr 0x560a41e90018 <col:30> 'uint32_t':'unsigned int' lvalue Var 0x560a41e8fd80 'val' 'uint32_t':'unsigned int'
|       |   `-CStyleCastExpr 0x560a41e90098 <col:37, col:49> 'uint32_t':'unsigned int' <NoOp>
|       |     `-ImplicitCastExpr 0x560a41e90080 <col:48, col:49> 'uint32_t':'unsigned int' <IntegralCast> part_of_explicit_cast
|       |       `-UnaryOperator 0x560a41e90058 <col:48, col:49> 'int' prefix '-'
|       |         `-IntegerLiteral 0x560a41e90038 <col:49> 'int' 1
|       |-CXXFunctionalCastExpr 0x560a41e90168 <col:54, col:61> 'void' functional cast to void <ToVoid>
|       | `-IntegerLiteral 0x560a41e90148 <col:60> 'int' 0
|       `-CallExpr 0x560a41e90390 <col:65, col:180> 'void'
|         |-ImplicitCastExpr 0x560a41e90378 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x560a41e90358 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x560a41881230 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|         |-ImplicitCastExpr 0x560a41e903d0 <col:80> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x560a41e90258 <col:80> 'const char [21]' lvalue "val == (uint32_t) -1"
|         |-ImplicitCastExpr 0x560a41e903e8 <col:104> 'const char *' <ArrayToPointerDecay>
|         | `-StringLiteral 0x560a41e90288 <col:104> 'const char [35]' lvalue "../dummy_inc/click/routerthread.hh"
|         |-ImplicitCastExpr 0x560a41e90400 <col:142> 'unsigned int' <IntegralCast>
|         | `-IntegerLiteral 0x560a41e902c8 <col:142> 'int' 225
|         `-ImplicitCastExpr 0x560a41e90418 <col:147, col:161> 'const char *' <ArrayToPointerDecay>
|           `-UnaryOperator 0x560a41e90340 <col:147, col:161> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|             `-PredefinedExpr 0x560a41e90328 <col:161> 'const char [41]' lvalue __PRETTY_FUNCTION__
|               `-StringLiteral 0x560a41e902e8 <col:161> 'const char [41]' lvalue "void RouterThread::driver_unlock_tasks()"
|-CXXMethodDecl 0x560a41e8dc90 <line:228:5, col:37> col:17 run_tasks 'void (int)' inline
| `-ParmVarDecl 0x560a41e8dc00 <col:27, col:31> col:31 ntasks 'int'
|-CXXMethodDecl 0x560a41e8dd58 <line:229:5, col:33> col:17 process_pending 'void ()' inline
|-CXXMethodDecl 0x560a41e8de18 <line:230:5, col:24> col:17 run_os 'void ()' inline
|-CXXMethodDecl 0x560a41e8ded8 <line:238:5, col:45> col:24 used running_in_interrupt 'bool ()' static inline
|-CXXMethodDecl 0x560a41e8df98 <line:239:5, col:45> col:17 used current_thread_is_running 'bool () const' inline
|-CXXMethodDecl 0x560a41e8e058 <line:240:5, col:53> col:17 current_thread_is_running_cleanup 'bool () const' inline
|-FriendDecl 0x560a41e8e150 <line:242:5, col:18> col:12 'class Task':'Task'
|-FriendDecl 0x560a41e8e1b0 <line:243:5, col:18> col:12 'class Master':'Master'
|-FriendDecl 0x560a41e8e280 <line:245:5, col:18> col:12 'class SelectSet':'SelectSet'
|-CXXConstructorDecl 0x560a41e8e648 <line:28:7> col:7 implicit RouterThread 'void (const RouterThread &)' inline default noexcept-unevaluated 0x560a41e8e648
| `-ParmVarDecl 0x560a41e8e758 <col:7> col:7 'const RouterThread &'
`-CXXMethodDecl 0x560a41e8ee18 <col:7> col:7 implicit operator= 'RouterThread &(const RouterThread &)' inline default noexcept-unevaluated 0x560a41e8ee18
  `-ParmVarDecl 0x560a41e8ef28 <col:7> col:7 'const RouterThread &'

Layout: <CGRecordLayout
  LLVMType:%class.RouterThread = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32, [40 x i8] }
  NonVirtualBaseLLVMType:%class.RouterThread.base = type { %struct.TaskLink, i8, [7 x i8], %class.TimerSet, %class.SelectSet, [32 x i8], %class.Spinlock, %class.atomic_uint32_t, %class.atomic_uint32_t, %"union.Task::Pending", %"union.Task::Pending"*, %class.SpinlockIRQ, [31 x i8], %class.Master*, i32, i8, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41e1db80 prev 0x560a41df79d0 <../dummy_inc/click/task.hh:49:1, line:371:1> line:49:7 referenced class Task definition
|-DefinitionData has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-private 'TaskLink'
|-CXXRecordDecl 0x560a41e1dcb8 <col:1, col:7> col:7 implicit referenced class Task
|-AccessSpecDecl 0x560a41e1dd48 <col:33, col:39> col:33 public
|-EnumDecl 0x560a41e1dd70 <line:52:5, col:50> col:5
| |-EnumConstantDecl 0x560a41e1deb0 <col:12, col:26> col:12 referenced STRIDE1 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
| | `-ConstantExpr 0x560a41e1de90 <col:22, col:26> 'unsigned int' Int: 65536
| |   `-BinaryOperator 0x560a41e1de70 <col:22, col:26> 'unsigned int' '<<'
| |     |-IntegerLiteral 0x560a41e1de30 <col:22> 'unsigned int' 1
| |     `-IntegerLiteral 0x560a41e1de50 <col:26> 'int' 16
| `-EnumConstantDecl 0x560a41e1df80 <col:30, col:47> col:30 referenced MAX_STRIDE 'Task::(anonymous enum at ../dummy_inc/click/task.hh:52:5)'
|   `-ConstantExpr 0x560a41e1df60 <col:43, col:47> 'unsigned int' Int: 2147483648
|     `-BinaryOperator 0x560a41e1df40 <col:43, col:47> 'unsigned int' '<<'
|       |-IntegerLiteral 0x560a41e1df00 <col:43> 'unsigned int' 1
|       `-IntegerLiteral 0x560a41e1df20 <col:47> 'int' 31
|-EnumDecl 0x560a41e1dfd0 <line:53:5, col:57> col:5
| |-EnumConstantDecl 0x560a41e1e110 <col:12, col:29> col:12 referenced MAX_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
| | `-ImplicitCastExpr 0x560a41e1e230 <col:26, col:29> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x560a41e1e0f0 <col:26, col:29> 'int' Int: 32768
| |     `-BinaryOperator 0x560a41e1e0d0 <col:26, col:29> 'int' '<<'
| |       |-IntegerLiteral 0x560a41e1e090 <col:26> 'int' 1
| |       `-IntegerLiteral 0x560a41e1e0b0 <col:29> 'int' 15
| `-EnumConstantDecl 0x560a41e1e1e0 <col:33, col:54> col:33 DEFAULT_TICKETS 'Task::(anonymous enum at ../dummy_inc/click/task.hh:53:5)'
|   `-ImplicitCastExpr 0x560a41e1e248 <col:51, col:54> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a41e1e1c0 <col:51, col:54> 'int' Int: 1024
|       `-BinaryOperator 0x560a41e1e1a0 <col:51, col:54> 'int' '<<'
|         |-IntegerLiteral 0x560a41e1e160 <col:51> 'int' 1
|         `-IntegerLiteral 0x560a41e1e180 <col:54> 'int' 10
|-CXXConstructorDecl 0x560a41e1e418 <line:75:5, col:48> col:12 Task 'void (TaskCallback, void *)' inline
| |-ParmVarDecl 0x560a41e1e270 <col:17, col:30> col:30 f 'TaskCallback':'bool (*)(Task *, void *)'
| `-ParmVarDecl 0x560a41e1e2f0 <col:33, col:39> col:39 user_data 'void *'
|-CXXConstructorDecl 0x560a41e1e570 <line:86:5, col:27> col:12 Task 'void (Element *)' inline
| `-ParmVarDecl 0x560a41e1e4e0 <col:17, col:26> col:26 e 'Element *'
|-CXXDestructorDecl 0x560a41e1e668 <line:91:5, col:11> col:5 ~Task 'void ()' noexcept-unevaluated 0x560a41e1e668
|-CXXMethodDecl 0x560a41e1e7f8 <line:98:5, line:100:5> line:98:25 callback 'TaskCallback () const' inline
| `-CompoundStmt 0x560a41e285f8 <col:42, line:100:5>
|   `-ReturnStmt 0x560a41e285e8 <line:99:9, col:16>
|     `-ImplicitCastExpr 0x560a41e285d0 <col:16> 'TaskCallback':'bool (*)(Task *, void *)' <LValueToRValue>
|       `-MemberExpr 0x560a41e285a0 <col:16> 'const TaskCallback':'bool (*const)(Task *, void *)' lvalue ->_hook 0x560a41e27320
|         `-CXXThisExpr 0x560a41e28590 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x560a41e1e8c0 <line:103:5, line:105:5> line:103:18 user_data 'void *() const' inline
| `-CompoundStmt 0x560a41e28678 <col:36, line:105:5>
|   `-ReturnStmt 0x560a41e28668 <line:104:9, col:16>
|     `-ImplicitCastExpr 0x560a41e28650 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x560a41e28620 <col:16> 'void *const' lvalue ->_thunk 0x560a41e27388
|         `-CXXThisExpr 0x560a41e28610 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x560a41e1e980 <line:108:5, line:110:5> line:108:21 element 'Element *() const' inline
| `-CompoundStmt 0x560a41e286f8 <col:37, line:110:5>
|   `-ReturnStmt 0x560a41e286e8 <line:109:9, col:16>
|     `-ImplicitCastExpr 0x560a41e286d0 <col:16> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x560a41e286a0 <col:16> 'Element *const' lvalue ->_owner 0x560a41e27448
|         `-CXXThisExpr 0x560a41e28690 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x560a41e1ea40 <line:114:5, col:31> col:17 initialized 'bool () const' inline
|-CXXMethodDecl 0x560a41e1eb08 <line:123:5, col:33> col:16 home_thread_id 'int () const' inline
|-CXXMethodDecl 0x560a41e1ebc8 <line:132:5, col:35> col:26 thread 'RouterThread *() const' inline
|-CXXMethodDecl 0x560a41e1ec88 <line:135:5, line:137:5> line:135:20 router 'Router *() const' inline
| `-CompoundStmt 0x560a41e287e0 <col:35, line:137:5>
|   `-ReturnStmt 0x560a41e287d0 <line:136:9, col:31>
|     `-CXXMemberCallExpr 0x560a41e28798 <col:16, col:31> 'Router *'
|       `-MemberExpr 0x560a41e28768 <col:16, col:24> '<bound member function type>' ->router 0x560a41e08ef0
|         `-ImplicitCastExpr 0x560a41e287b8 <col:16> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x560a41e28750 <col:16> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x560a41e28720 <col:16> 'Element *const' lvalue ->_owner 0x560a41e27448
|               `-CXXThisExpr 0x560a41e28710 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x560a41e25a50 <line:140:5, col:22> col:13 master 'Master *() const'
|-CXXMethodDecl 0x560a41e25c10 <line:159:5, col:50> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x560a41e25b00 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x560a41e25b78 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x560a41e25e18 <line:169:5, col:50> col:10 initialize 'void (Router *, bool)'
| |-ParmVarDecl 0x560a41e25cd0 <col:21, col:29> col:29 router 'Router *'
| `-ParmVarDecl 0x560a41e25d48 <col:37, col:42> col:42 schedule 'bool'
|-CXXMethodDecl 0x560a41e25ee8 <line:179:5, line:181:5> line:179:17 scheduled 'bool () const' inline
| `-CompoundStmt 0x560a41e288f0 <col:35, line:181:5>
|   `-ReturnStmt 0x560a41e288e0 <line:180:9, col:24>
|     `-ImplicitCastExpr 0x560a41e288c8 <col:16, col:24> 'bool' <IntegralToBoolean>
|       `-ImplicitCastExpr 0x560a41e288b0 <col:16, col:24> 'uint8_t':'unsigned char' <LValueToRValue>
|         `-MemberExpr 0x560a41e28880 <col:16, col:24> 'const uint8_t':'const unsigned char' lvalue .is_scheduled 0x560a41e26f58
|           `-MemberExpr 0x560a41e28838 <col:16, col:24> 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x560a41e27078
|             `-MemberExpr 0x560a41e28808 <col:16> 'const union Status':'const Task::Status' lvalue ->_status 0x560a41e272a8
|               `-CXXThisExpr 0x560a41e287f8 <col:16> 'const Task *' implicit this
|-CXXMethodDecl 0x560a41e25fa8 <line:190:5, line:192:5> line:190:17 unschedule 'void ()' inline
| `-CompoundStmt 0x560a41e28a08 <col:30, line:192:5>
|   `-BinaryOperator 0x560a41e289e8 <line:191:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x560a41e28990 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x560a41e26f58
|     | `-MemberExpr 0x560a41e28948 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x560a41e27078
|     |   `-MemberExpr 0x560a41e28918 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x560a41e272a8
|     |     `-CXXThisExpr 0x560a41e28908 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x560a41e289d0 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x560a41e289c0 <col:32> 'bool' false
|-CXXMethodDecl 0x560a41e26068 <line:201:5, line:206:5> line:201:17 used reschedule 'void ()' inline
| `-CompoundStmt 0x560a41e28d58 <col:30, line:206:5>
|   |-BinaryOperator 0x560a41e28b00 <line:202:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x560a41e28aa8 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x560a41e26f58
|   | | `-MemberExpr 0x560a41e28a60 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x560a41e27078
|   | |   `-MemberExpr 0x560a41e28a30 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x560a41e272a8
|   | |     `-CXXThisExpr 0x560a41e28a20 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x560a41e28ae8 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x560a41e28ad8 <col:32> 'bool' true
|   |-CallExpr 0x560a41e28ba0 <line:203:9, col:21> 'void'
|   | `-ImplicitCastExpr 0x560a41e28b88 <col:9> 'void (*)()' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560a41e28b68 <col:9> 'void ()' lvalue Function 0x560a41e0f8a0 'click_fence' 'void ()'
|   `-IfStmt 0x560a41e28d40 <line:204:9, line:205:32>
|     |-BinaryOperator 0x560a41e28c80 <line:204:13, col:34> 'bool' '<'
|     | |-ImplicitCastExpr 0x560a41e28c50 <col:13, col:30> 'uintptr_t':'unsigned long' <LValueToRValue>
|     | | `-MemberExpr 0x560a41e28c00 <col:13, col:30> 'uintptr_t':'unsigned long' lvalue .x 0x560a41e276b8
|     | |   `-MemberExpr 0x560a41e28bd0 <col:13> 'Task::Pending' lvalue ->_pending_nextptr 0x560a41e27730
|     | |     `-CXXThisExpr 0x560a41e28bc0 <col:13> 'Task *' implicit this
|     | `-ImplicitCastExpr 0x560a41e28c68 <col:34> 'unsigned long' <IntegralCast>
|     |   `-IntegerLiteral 0x560a41e28c30 <col:34> 'int' 2
|     `-CXXMemberCallExpr 0x560a41e28d00 <line:205:13, col:32> 'void'
|       |-MemberExpr 0x560a41e28cb0 <col:13> '<bound member function type>' ->complete_schedule 0x560a41e28130
|       | `-CXXThisExpr 0x560a41e28ca0 <col:13> 'Task *' implicit this
|       `-ImplicitCastExpr 0x560a41e28d28 <col:31> 'RouterThread *' <NullToPointer>
|         `-IntegerLiteral 0x560a41e28ce0 <col:31> 'int' 0
|-CXXMethodDecl 0x560a41e26128 <line:238:5, line:240:5> line:238:17 fast_reschedule 'void ()' inline
| `-CompoundStmt 0x560a41e28e80 <col:35, line:240:5>
|   `-BinaryOperator 0x560a41e28e60 <line:239:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x560a41e28e08 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x560a41e26f58
|     | `-MemberExpr 0x560a41e28dc0 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x560a41e27078
|     |   `-MemberExpr 0x560a41e28d90 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x560a41e272a8
|     |     `-CXXThisExpr 0x560a41e28d80 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x560a41e28e48 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x560a41e28e38 <col:32> 'bool' true
|-CXXMethodDecl 0x560a41e261e8 <line:250:5, line:253:5> line:250:17 strong_unschedule 'void ()' inline
| `-CompoundStmt 0x560a41e29098 <col:37, line:253:5>
|   |-BinaryOperator 0x560a41e28f78 <line:251:9, col:32> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x560a41e28f20 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_scheduled 0x560a41e26f58
|   | | `-MemberExpr 0x560a41e28ed8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x560a41e27078
|   | |   `-MemberExpr 0x560a41e28ea8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x560a41e272a8
|   | |     `-CXXThisExpr 0x560a41e28e98 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x560a41e28f60 <col:32> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x560a41e28f50 <col:32> 'bool' false
|   `-BinaryOperator 0x560a41e29078 <line:252:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|     |-MemberExpr 0x560a41e29020 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x560a41e26fb8
|     | `-MemberExpr 0x560a41e28fd8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x560a41e27078
|     |   `-MemberExpr 0x560a41e28fa8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x560a41e272a8
|     |     `-CXXThisExpr 0x560a41e28f98 <col:9> 'Task *' implicit this
|     `-ImplicitCastExpr 0x560a41e29060 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|       `-CXXBoolLiteralExpr 0x560a41e29050 <col:41> 'bool' true
|-CXXMethodDecl 0x560a41e262a8 <line:261:5, line:264:5> line:261:17 strong_reschedule 'void ()' inline
| `-CompoundStmt 0x560a41e29218 <col:37, line:264:5>
|   |-BinaryOperator 0x560a41e29198 <line:262:9, col:41> 'uint8_t':'unsigned char' lvalue '='
|   | |-MemberExpr 0x560a41e29140 <col:9, col:17> 'uint8_t':'unsigned char' lvalue .is_strong_unscheduled 0x560a41e26fb8
|   | | `-MemberExpr 0x560a41e290f8 <col:9, col:17> 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)' lvalue . 0x560a41e27078
|   | |   `-MemberExpr 0x560a41e290c8 <col:9> 'union Status':'Task::Status' lvalue ->_status 0x560a41e272a8
|   | |     `-CXXThisExpr 0x560a41e290b8 <col:9> 'Task *' implicit this
|   | `-ImplicitCastExpr 0x560a41e29180 <col:41> 'uint8_t':'unsigned char' <IntegralCast>
|   |   `-CXXBoolLiteralExpr 0x560a41e29170 <col:41> 'bool' false
|   `-CXXMemberCallExpr 0x560a41e291f8 <line:263:9, col:20> 'void'
|     `-MemberExpr 0x560a41e291c8 <col:9> '<bound member function type>' ->reschedule 0x560a41e26068
|       `-CXXThisExpr 0x560a41e291b8 <col:9> 'Task *' implicit this
|-CXXMethodDecl 0x560a41e263f0 <line:275:5, col:39> col:10 move_thread 'void (int)'
| `-ParmVarDecl 0x560a41e26360 <col:22, col:26> col:26 new_thread_id 'int'
|-CXXMethodDecl 0x560a41e264c0 <line:279:5, col:26> col:16 tickets 'int () const' inline
|-CXXMethodDecl 0x560a41e26608 <line:280:5, col:34> col:17 used set_tickets 'void (int)' inline
| `-ParmVarDecl 0x560a41e26578 <col:29, col:33> col:33 n 'int'
|-CXXMethodDecl 0x560a41e26758 <line:281:5, col:41> col:17 adjust_tickets 'void (int)' inline
| `-ParmVarDecl 0x560a41e266c8 <col:32, col:36> col:36 delta 'int'
|-CXXMethodDecl 0x560a41e26820 <line:284:5, col:22> col:17 fire 'bool ()' inline
|-CXXMethodDecl 0x560a41e268e0 <line:299:5, col:64> col:25 hook 'TaskCallback () const' inline
| `-DeprecatedAttr 0x560a41e26980 <col:53> "" ""
|-CXXMethodDecl 0x560a41e26a18 <line:300:5, col:58> col:18 thunk 'void *() const' inline
| `-DeprecatedAttr 0x560a41e26ab8 <col:47> "" ""
|-AccessSpecDecl 0x560a41e26b28 <line:303:3, col:10> col:3 private
|-FieldDecl 0x560a41e26b68 <line:310:5, col:14> col:14 referenced _stride 'unsigned int'
|-FieldDecl 0x560a41e26bd0 <line:311:5, col:9> col:9 referenced _tickets 'int'
|-CXXRecordDecl 0x560a41e26c20 <line:314:5, line:321:5> line:314:11 union Status definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x560a41e26d38 <col:5, col:11> col:11 implicit union Status
| |-CXXRecordDecl 0x560a41e26dc8 <line:315:9, line:319:9> line:315:9 struct definition
| | |-DefinitionData is_anonymous pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial
| | | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | | |-MoveConstructor exists simple trivial
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial
| | |-FieldDecl 0x560a41e26ef8 <line:316:13, col:21> col:21 referenced home_thread_id 'int16_t':'short'
| | |-FieldDecl 0x560a41e26f58 <line:317:13, col:21> col:21 referenced is_scheduled 'uint8_t':'unsigned char'
| | |-FieldDecl 0x560a41e26fb8 <line:318:13, col:21> col:21 referenced is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-CXXConstructorDecl 0x560a41e954d8 <line:315:9> col:9 implicit  'void () noexcept' inline default trivial
| | |-CXXDestructorDecl 0x560a41e955b0 <col:9> col:9 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x560a41e955b0
| | |-CXXConstructorDecl 0x560a41e95868 <col:9> col:9 implicit constexpr  'void (const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &)' inline default trivial noexcept-unevaluated 0x560a41e95868
| | | `-ParmVarDecl 0x560a41e95978 <col:9> col:9 'const Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &'
| | `-CXXConstructorDecl 0x560a41e95a18 <col:9> col:9 implicit constexpr  'void (Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&)' inline default trivial noexcept-unevaluated 0x560a41e95a18
| |   `-ParmVarDecl 0x560a41e95b28 <col:9> col:9 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9) &&'
| |-FieldDecl 0x560a41e27078 <col:9> col:9 implicit referenced 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| |-IndirectFieldDecl 0x560a41e270d8 <line:316:21> col:21 implicit home_thread_id 'int16_t':'short'
| | |-Field 0x560a41e27078 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x560a41e26ef8 'home_thread_id' 'int16_t':'short'
| |-IndirectFieldDecl 0x560a41e27130 <line:317:21> col:21 implicit is_scheduled 'uint8_t':'unsigned char'
| | |-Field 0x560a41e27078 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x560a41e26f58 'is_scheduled' 'uint8_t':'unsigned char'
| |-IndirectFieldDecl 0x560a41e27188 <line:318:21> col:21 implicit is_strong_unscheduled 'uint8_t':'unsigned char'
| | |-Field 0x560a41e27078 '' 'Task::Status::(anonymous struct at ../dummy_inc/click/task.hh:315:9)'
| | `-Field 0x560a41e26fb8 'is_strong_unscheduled' 'uint8_t':'unsigned char'
| |-FieldDecl 0x560a41e271e0 <line:320:9, col:18> col:18 status 'uint32_t':'unsigned int'
| |-CXXConstructorDecl 0x560a41e953e8 <line:314:11> col:11 implicit used Status 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x560a41e95d48 <col:11>
| |-CXXConstructorDecl 0x560a41e956b8 <col:11> col:11 implicit constexpr Status 'void (const Task::Status &)' inline default trivial noexcept-unevaluated 0x560a41e956b8
| | `-ParmVarDecl 0x560a41e957c8 <col:11> col:11 'const Task::Status &'
| `-CXXConstructorDecl 0x560a41e95bc8 <col:11> col:11 implicit constexpr Status 'void (Task::Status &&)' inline default trivial noexcept-unevaluated 0x560a41e95bc8
|   `-ParmVarDecl 0x560a41e95cd8 <col:11> col:11 'Task::Status &&'
|-FieldDecl 0x560a41e272a8 <col:5, line:321:7> col:7 referenced _status 'union Status':'Task::Status'
|-FieldDecl 0x560a41e27320 <line:323:5, col:18> col:18 referenced _hook 'TaskCallback':'bool (*)(Task *, void *)'
|-FieldDecl 0x560a41e27388 <line:324:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x560a41e273e8 <line:335:5, col:19> col:19 referenced _thread 'RouterThread *'
|-FieldDecl 0x560a41e27448 <line:337:5, col:14> col:14 referenced _owner 'Element *'
|-CXXRecordDecl 0x560a41e27498 <line:339:5, line:342:5> line:339:11 referenced union Pending definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x560a41e275b8 <col:5, col:11> col:11 implicit union Pending
| |-FieldDecl 0x560a41e27658 <line:340:9, col:15> col:15 t 'Task *'
| |-FieldDecl 0x560a41e276b8 <line:341:9, col:19> col:19 referenced x 'uintptr_t':'unsigned long'
| |-CXXConstructorDecl 0x560a41e8e8f8 <line:339:11> col:11 implicit constexpr Pending 'void (const Task::Pending &)' inline default trivial noexcept-unevaluated 0x560a41e8e8f8
| | `-ParmVarDecl 0x560a41e8ea08 <col:11> col:11 'const Task::Pending &'
| |-CXXConstructorDecl 0x560a41e8eaa8 <col:11> col:11 implicit constexpr Pending 'void (Task::Pending &&)' inline default trivial noexcept-unevaluated 0x560a41e8eaa8
| | `-ParmVarDecl 0x560a41e8ebb8 <col:11> col:11 'Task::Pending &&'
| |-CXXDestructorDecl 0x560a41e8ec28 <col:11> col:11 implicit ~Pending 'void ()' inline default trivial noexcept-unevaluated 0x560a41e8ec28
| |-CXXMethodDecl 0x560a41e8f4a8 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(const Task::Pending &)' inline default trivial noexcept-unevaluated 0x560a41e8f4a8
| | `-ParmVarDecl 0x560a41e8f5b8 <col:11> col:11 'const Task::Pending &'
| |-CXXMethodDecl 0x560a41e8f628 <col:11> col:11 implicit constexpr operator= 'Task::Pending &(Task::Pending &&)' inline default trivial noexcept-unevaluated 0x560a41e8f628
| | `-ParmVarDecl 0x560a41e8f738 <col:11> col:11 'Task::Pending &&'
| `-CXXConstructorDecl 0x560a41e95da8 <col:11> col:11 implicit used Pending 'void () noexcept' inline default trivial
|   `-CompoundStmt 0x560a41e95e80 <col:11>
|-FieldDecl 0x560a41e27730 <line:343:5, col:13> col:13 referenced _pending_nextptr 'Task::Pending'
|-CXXConstructorDecl 0x560a41e27878 <line:345:5, col:23> col:5 Task 'void (const Task &)'
| `-ParmVarDecl 0x560a41e277b8 <col:10, col:22> col:22 x 'const Task &'
|-CXXMethodDecl 0x560a41e27a28 <line:346:5, col:34> col:11 operator= 'Task &(const Task &)'
| `-ParmVarDecl 0x560a41e27938 <col:21, col:33> col:33 x 'const Task &'
|-CXXMethodDecl 0x560a41e27af0 <line:347:5, col:18> col:10 cleanup 'void ()'
|-CXXMethodDecl 0x560a41e27bb0 <line:352:5, col:37> col:17 used on_scheduled_list 'bool () const' inline
|-CXXMethodDecl 0x560a41e27c70 <line:353:5, line:355:5> line:353:17 on_pending_list 'bool () const' inline
| `-CompoundStmt 0x560a41e29328 <col:41, line:355:5>
|   `-ReturnStmt 0x560a41e29318 <line:354:9, col:38>
|     `-BinaryOperator 0x560a41e292f8 <col:16, col:38> 'bool' '!='
|       |-ImplicitCastExpr 0x560a41e292c8 <col:16, col:33> 'uintptr_t':'unsigned long' <LValueToRValue>
|       | `-MemberExpr 0x560a41e29278 <col:16, col:33> 'const uintptr_t':'const unsigned long' lvalue .x 0x560a41e276b8
|       |   `-MemberExpr 0x560a41e29248 <col:16> 'const Task::Pending' lvalue ->_pending_nextptr 0x560a41e27730
|       |     `-CXXThisExpr 0x560a41e29238 <col:16> 'const Task *' implicit this
|       `-ImplicitCastExpr 0x560a41e292e0 <col:38> 'unsigned long' <IntegralCast>
|         `-IntegerLiteral 0x560a41e292a8 <col:38> 'int' 0
|-CXXMethodDecl 0x560a41e27d30 <line:356:5, col:33> col:17 needs_cleanup 'bool () const' inline
|-CXXMethodDecl 0x560a41e27e70 <line:361:5, col:33> col:10 add_pending 'void (bool)'
| `-ParmVarDecl 0x560a41e27de0 <col:22, col:27> col:27 always 'bool'
|-CXXMethodDecl 0x560a41e27fe8 <line:362:5, col:46> col:10 process_pending 'void (RouterThread *)'
| `-ParmVarDecl 0x560a41e27f28 <col:26, col:40> col:40 thread 'RouterThread *'
|-CXXMethodDecl 0x560a41e28130 <line:364:5, col:64> col:10 used complete_schedule 'void (RouterThread *)'
| `-ParmVarDecl 0x560a41e280a0 <col:28, col:42> col:42 process_pending_thread 'RouterThread *'
|-CXXMethodDecl 0x560a41e281f8 <line:365:5, col:44> col:17 remove_from_scheduled_list 'void ()' inline
|-CXXMethodDecl 0x560a41e283c0 <line:367:5, col:55> col:17 error_hook 'bool (Task *, void *)' static
| |-ParmVarDecl 0x560a41e282a8 <col:28, col:34> col:34 task 'Task *'
| `-ParmVarDecl 0x560a41e28328 <col:40, col:46> col:46 user_data 'void *'
|-FriendDecl 0x560a41e284c0 <line:369:5, col:18> col:12 'class RouterThread':'RouterThread'
`-FriendDecl 0x560a41e28550 <line:370:5, col:18> col:12 'class Master':'Master'

Layout: <CGRecordLayout
  LLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  NonVirtualBaseLLVMType:%class.Task = type { %struct.TaskLink.base, i32, i32, %"union.Task::Status", i1 (%class.Task*, i8*)*, i8*, %class.RouterThread*, %class.Element*, %"union.Task::Pending" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5)
         0 |   TimerCallback callback
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timer
         0 |   int _schedpos1
         8 |   class Timestamp _expiry_s
         8 |     union Timestamp::rep_t _t
         8 |       int64_t x
        16 |   union Timer::(anonymous at ../dummy_inc/click/timer.hh:343:5) _hook
        16 |     TimerCallback callback
        24 |   void * _thunk
        32 |   class Element * _owner
        40 |   class RouterThread * _thread
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41e18918 <../dummy_inc/click/timer.hh:343:5, line:345:5> line:343:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x560a41e18a48 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
`-CXXDestructorDecl 0x560a41e19538 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%union.anon.19 = type { void (%class.Timer*, i8*)* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41e14348 prev 0x560a41df7a80 <../dummy_inc/click/timer.hh:14:1, line:358:1> line:14:7 class Timer definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x560a41e14440 <col:1, col:7> col:7 implicit referenced class Timer
|-AccessSpecDecl 0x560a41e144d0 <col:15, col:21> col:15 public
|-CXXConstructorDecl 0x560a41e14530 <line:22:5, col:11> col:5 Timer 'void ()'
|-CXXRecordDecl 0x560a41e145d8 <line:24:5, line:25:5> line:24:12 referenced struct do_nothing_t definition
| |-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| | |-DefaultConstructor exists trivial constexpr needs_implicit defaulted_is_constexpr
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| `-CXXRecordDecl 0x560a41e146f8 <col:5, col:12> col:12 implicit struct do_nothing_t
|-CXXConstructorDecl 0x560a41e14898 <line:32:5, col:37> col:5 Timer 'void (const Timer::do_nothing_t &)'
| `-ParmVarDecl 0x560a41e147d8 <col:11, col:31> col:31 unused 'const Timer::do_nothing_t &'
|-CXXConstructorDecl 0x560a41e14ae8 <line:38:5, col:43> col:5 Timer 'void (TimerCallback, void *)'
| |-ParmVarDecl 0x560a41e14958 <col:11, col:25> col:25 f 'TimerCallback':'void (*)(Timer *, void *)'
| `-ParmVarDecl 0x560a41e149d8 <col:28, col:34> col:34 user_data 'void *'
|-CXXConstructorDecl 0x560a41e14c78 <line:43:5, col:27> col:5 Timer 'void (Element *)'
| `-ParmVarDecl 0x560a41e14bb0 <col:11, col:20> col:20 element 'Element *'
|-CXXConstructorDecl 0x560a41e14df8 <line:47:5, col:21> col:5 Timer 'void (Task *)'
| `-ParmVarDecl 0x560a41e14d38 <col:11, col:17> col:17 task 'Task *'
|-CXXConstructorDecl 0x560a41e14fa8 <line:52:5, col:25> col:5 Timer 'void (const Timer &)'
| `-ParmVarDecl 0x560a41e14ee8 <col:11, col:24> col:24 x 'const Timer &'
|-CXXDestructorDecl 0x560a41e150a0 <line:55:5, line:58:5> line:55:12 ~Timer 'void () noexcept' inline
| `-CompoundStmt 0x560a41e19710 <col:21, line:58:5>
|   `-IfStmt 0x560a41e196f8 <line:56:2, line:57:17>
|     |-CXXMemberCallExpr 0x560a41e19660 <line:56:6, col:16> 'bool'
|     | `-MemberExpr 0x560a41e19630 <col:6> '<bound member function type>' ->scheduled 0x560a41e158f8
|     |   `-ImplicitCastExpr 0x560a41e19680 <col:6> 'const Timer *' <NoOp>
|     |     `-CXXThisExpr 0x560a41e19620 <col:6> 'Timer *' implicit this
|     `-CXXMemberCallExpr 0x560a41e196d8 <line:57:6, col:17> 'void'
|       `-MemberExpr 0x560a41e196a8 <col:6> '<bound member function type>' ->unschedule 0x560a41e17dc0
|         `-CXXThisExpr 0x560a41e19698 <col:6> 'Timer *' implicit this
|-CXXMethodDecl 0x560a41e151a0 <line:62:5, line:65:5> line:62:17 used assign 'void ()' inline
| `-CompoundStmt 0x560a41e198b0 <col:26, line:65:5>
|   |-BinaryOperator 0x560a41e197d0 <line:63:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x560a41e19768 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x560a41e18a48
|   | | `-MemberExpr 0x560a41e19738 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x560a41e18b08
|   | |   `-CXXThisExpr 0x560a41e19728 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x560a41e197b8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560a41e19798 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x560a41e18f68 'do_nothing_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x560a41e19890 <line:64:2, col:20> 'void *' lvalue '='
|     |-MemberExpr 0x560a41e19800 <col:2> 'void *' lvalue ->_thunk 0x560a41e18b88
|     | `-CXXThisExpr 0x560a41e197f0 <col:2> 'Timer *' implicit this
|     `-CStyleCastExpr 0x560a41e19868 <col:11, col:20> 'void *' <IntegralToPointer>
|       `-IntegerLiteral 0x560a41e19830 <col:20> 'int' 1
|-CXXMethodDecl 0x560a41e152e0 <line:68:5, line:71:5> line:68:17 assign 'void (const Timer::do_nothing_t &)' inline
| |-ParmVarDecl 0x560a41e15250 <col:24, col:44> col:44 used unused 'const Timer::do_nothing_t &'
| `-CompoundStmt 0x560a41e19a10 <col:52, line:71:5>
|   |-CStyleCastExpr 0x560a41e19900 <line:69:2, col:9> 'void' <ToVoid>
|   | `-DeclRefExpr 0x560a41e198d0 <col:9> 'const Timer::do_nothing_t' lvalue ParmVar 0x560a41e15250 'unused' 'const Timer::do_nothing_t &'
|   `-CXXMemberCallExpr 0x560a41e199f0 <line:70:2, col:9> 'void'
|     `-MemberExpr 0x560a41e199c0 <col:2> '<bound member function type>' ->assign 0x560a41e151a0
|       `-CXXThisExpr 0x560a41e199b0 <col:2> 'Timer *' implicit this
|-CXXMethodDecl 0x560a41e154b0 <line:76:5, line:79:5> line:76:17 assign 'void (TimerCallback, void *)' inline
| |-ParmVarDecl 0x560a41e15398 <col:24, col:38> col:38 used f 'TimerCallback':'void (*)(Timer *, void *)'
| |-ParmVarDecl 0x560a41e15418 <col:41, col:47> col:47 used user_data 'void *'
| `-CompoundStmt 0x560a41e19b90 <col:58, line:79:5>
|   |-BinaryOperator 0x560a41e19ad8 <line:77:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x560a41e19a70 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x560a41e18a48
|   | | `-MemberExpr 0x560a41e19a40 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x560a41e18b08
|   | |   `-CXXThisExpr 0x560a41e19a30 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x560a41e19ac0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' <LValueToRValue>
|   |   `-DeclRefExpr 0x560a41e19aa0 <col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue ParmVar 0x560a41e15398 'f' 'TimerCallback':'void (*)(Timer *, void *)'
|   `-BinaryOperator 0x560a41e19b70 <line:78:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x560a41e19b08 <col:2> 'void *' lvalue ->_thunk 0x560a41e18b88
|     | `-CXXThisExpr 0x560a41e19af8 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x560a41e19b58 <col:11> 'void *' <LValueToRValue>
|       `-DeclRefExpr 0x560a41e19b38 <col:11> 'void *' lvalue ParmVar 0x560a41e15418 'user_data' 'void *'
|-CXXMethodDecl 0x560a41e15600 <line:84:5, line:87:5> line:84:10 assign 'void (Element *)'
| |-ParmVarDecl 0x560a41e15570 <col:17, col:26> col:26 used element 'Element *'
| `-CompoundStmt 0x560a41e19d28 <col:35, line:87:5>
|   |-BinaryOperator 0x560a41e19c58 <line:85:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x560a41e19bf0 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x560a41e18a48
|   | | `-MemberExpr 0x560a41e19bc0 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x560a41e18b08
|   | |   `-CXXThisExpr 0x560a41e19bb0 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x560a41e19c40 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560a41e19c20 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x560a41e19140 'element_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x560a41e19d08 <line:86:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x560a41e19c88 <col:2> 'void *' lvalue ->_thunk 0x560a41e18b88
|     | `-CXXThisExpr 0x560a41e19c78 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x560a41e19cf0 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x560a41e19cd8 <col:11> 'Element *' <LValueToRValue>
|         `-DeclRefExpr 0x560a41e19cb8 <col:11> 'Element *' lvalue ParmVar 0x560a41e15570 'element' 'Element *'
|-CXXMethodDecl 0x560a41e15748 <line:91:5, line:94:5> line:91:10 assign 'void (Task *)'
| |-ParmVarDecl 0x560a41e156b8 <col:17, col:23> col:23 used task 'Task *'
| `-CompoundStmt 0x560a41e19ec0 <col:29, line:94:5>
|   |-BinaryOperator 0x560a41e19df0 <line:92:2, col:19> 'TimerCallback':'void (*)(Timer *, void *)' lvalue '='
|   | |-MemberExpr 0x560a41e19d88 <col:2, col:8> 'TimerCallback':'void (*)(Timer *, void *)' lvalue .callback 0x560a41e18a48
|   | | `-MemberExpr 0x560a41e19d58 <col:2> 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)' lvalue ->_hook 0x560a41e18b08
|   | |   `-CXXThisExpr 0x560a41e19d48 <col:2> 'Timer *' implicit this
|   | `-ImplicitCastExpr 0x560a41e19dd8 <col:19> 'void (*)(Timer *, void *)' <FunctionToPointerDecay>
|   |   `-DeclRefExpr 0x560a41e19db8 <col:19> 'void (Timer *, void *)' lvalue CXXMethod 0x560a41e19318 'task_hook' 'void (Timer *, void *)'
|   `-BinaryOperator 0x560a41e19ea0 <line:93:2, col:11> 'void *' lvalue '='
|     |-MemberExpr 0x560a41e19e20 <col:2> 'void *' lvalue ->_thunk 0x560a41e18b88
|     | `-CXXThisExpr 0x560a41e19e10 <col:2> 'Timer *' implicit this
|     `-ImplicitCastExpr 0x560a41e19e88 <col:11> 'void *' <BitCast>
|       `-ImplicitCastExpr 0x560a41e19e70 <col:11> 'Task *' <LValueToRValue>
|         `-DeclRefExpr 0x560a41e19e50 <col:11> 'Task *' lvalue ParmVar 0x560a41e156b8 'task' 'Task *'
|-CXXMethodDecl 0x560a41e15838 <line:98:5, line:100:5> line:98:17 initialized 'bool () const' inline
| `-CompoundStmt 0x560a41e19fa0 <col:37, line:100:5>
|   `-ReturnStmt 0x560a41e19f90 <line:99:2, col:19>
|     `-BinaryOperator 0x560a41e19f70 <col:9, col:19> 'bool' '!='
|       |-ImplicitCastExpr 0x560a41e19f40 <col:9> 'Element *' <LValueToRValue>
|       | `-MemberExpr 0x560a41e19ef0 <col:9> 'Element *const' lvalue ->_owner 0x560a41e18be8
|       |   `-CXXThisExpr 0x560a41e19ee0 <col:9> 'const Timer *' implicit this
|       `-ImplicitCastExpr 0x560a41e19f58 <col:19> 'Element *' <NullToPointer>
|         `-IntegerLiteral 0x560a41e19f20 <col:19> 'int' 0
|-CXXMethodDecl 0x560a41e158f8 <line:103:5, line:105:5> line:103:17 used scheduled 'bool () const' inline
| `-CompoundStmt 0x560a41e1a060 <col:35, line:105:5>
|   `-ReturnStmt 0x560a41e1a050 <line:104:2, col:23>
|     `-BinaryOperator 0x560a41e1a030 <col:9, col:23> 'bool' '!='
|       |-ImplicitCastExpr 0x560a41e1a018 <col:9> 'int' <LValueToRValue>
|       | `-MemberExpr 0x560a41e19fc8 <col:9> 'const int' lvalue ->_schedpos1 0x560a41e18868
|       |   `-CXXThisExpr 0x560a41e19fb8 <col:9> 'const Timer *' implicit this
|       `-IntegerLiteral 0x560a41e19ff8 <col:23> 'int' 0
|-CXXMethodDecl 0x560a41e159b8 <line:116:5, line:118:5> line:116:29 used expiry_steady 'const Timestamp &() const' inline
| `-CompoundStmt 0x560a41e1a0c8 <col:51, line:118:5>
|   `-ReturnStmt 0x560a41e1a0b8 <line:117:2, col:9>
|     `-MemberExpr 0x560a41e1a088 <col:9> 'const Timestamp' lvalue ->_expiry_s 0x560a41e188c8
|       `-CXXThisExpr 0x560a41e1a078 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x560a41e15a78 <line:131:5, line:136:5> line:131:22 expiry 'Timestamp () const' inline
| `-CompoundStmt 0x560a41e1a620 <col:37, line:136:5>
|   `-IfStmt 0x560a41e1a5f8 <line:132:2, line:135:13> has_else
|     |-ImplicitCastExpr 0x560a41e1a188 <line:132:6> 'bool' <MemberPointerToBoolean>
|     | `-ImplicitCastExpr 0x560a41e1a170 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const' <UserDefinedConversion>
|     |   `-CXXMemberCallExpr 0x560a41e1a150 <col:6> 'Timestamp::unspecified_bool_type':'Timestamp::seconds_type (Timestamp::*)() const'
|     |     `-MemberExpr 0x560a41e1a120 <col:6> '<bound member function type>' .operator int (Timestamp::*)() const 0x560a41cfcb28
|     |       `-MemberExpr 0x560a41e1a0f0 <col:6> 'const Timestamp' lvalue ->_expiry_s 0x560a41e188c8
|     |         `-CXXThisExpr 0x560a41e1a0e0 <col:6> 'const Timer *' implicit this
|     |-ReturnStmt 0x560a41e1a568 <line:133:6, col:72>
|     | `-ExprWithCleanups 0x560a41e1a550 <col:13, col:72> 'Timestamp'
|     |   `-CXXConstructExpr 0x560a41e1a520 <col:13, col:72> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |     `-MaterializeTemporaryExpr 0x560a41e1a508 <col:13, col:72> 'Timestamp' xvalue
|     |       `-CXXOperatorCallExpr 0x560a41e1a4d0 <col:13, col:72> 'Timestamp'
|     |         |-ImplicitCastExpr 0x560a41e1a4b8 <col:45> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         | `-DeclRefExpr 0x560a41e1a498 <col:45> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x560a41be6260 'operator-' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |-CXXConstructExpr 0x560a41e1a438 <col:13, col:43> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|     |         | `-MaterializeTemporaryExpr 0x560a41e1a420 <col:13, col:43> 'Timestamp' xvalue
|     |         |   `-CXXOperatorCallExpr 0x560a41e1a348 <col:13, col:43> 'Timestamp'
|     |         |     |-ImplicitCastExpr 0x560a41e1a330 <col:23> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|     |         |     | `-DeclRefExpr 0x560a41e1a310 <col:23> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x560a41be5f20 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|     |         |     |-CXXConstructExpr 0x560a41e1a2b0 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|     |         |     | `-MemberExpr 0x560a41e1a1b0 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x560a41e188c8
|     |         |     |   `-CXXThisExpr 0x560a41e1a1a0 <col:13> 'const Timer *' implicit this
|     |         |     `-MaterializeTemporaryExpr 0x560a41e1a2f8 <col:25, col:43> 'const Timestamp' lvalue
|     |         |       `-ImplicitCastExpr 0x560a41e1a2e0 <col:25, col:43> 'const Timestamp' <NoOp>
|     |         |         `-CallExpr 0x560a41e1a290 <col:25, col:43> 'Timestamp'
|     |         |           `-ImplicitCastExpr 0x560a41e1a278 <col:25, col:36> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |         |             `-DeclRefExpr 0x560a41e1a218 <col:25, col:36> 'Timestamp ()' lvalue CXXMethod 0x560a41d1b970 'recent' 'Timestamp ()'
|     |         `-MaterializeTemporaryExpr 0x560a41e1a480 <col:47, col:72> 'const Timestamp' lvalue
|     |           `-ImplicitCastExpr 0x560a41e1a468 <col:47, col:72> 'const Timestamp' <NoOp>
|     |             `-CallExpr 0x560a41e1a400 <col:47, col:72> 'Timestamp'
|     |               `-ImplicitCastExpr 0x560a41e1a3e8 <col:47, col:58> 'Timestamp (*)()' <FunctionToPointerDecay>
|     |                 `-DeclRefExpr 0x560a41e1a3b8 <col:47, col:58> 'Timestamp ()' lvalue CXXMethod 0x560a419ecac0 'recent_steady' 'Timestamp ()'
|     `-ReturnStmt 0x560a41e1a5e8 <line:135:6, col:13>
|       `-CXXConstructExpr 0x560a41e1a5b8 <col:13> 'Timestamp' 'void (const Timestamp &) noexcept'
|         `-MemberExpr 0x560a41e1a588 <col:13> 'const Timestamp' lvalue ->_expiry_s 0x560a41e188c8
|           `-CXXThisExpr 0x560a41e1a578 <col:13> 'const Timer *' implicit this
|-CXXMethodDecl 0x560a41e15b38 <line:139:5, line:141:5> line:139:20 router 'Router *() const' inline
| `-CompoundStmt 0x560a41e1a708 <col:35, line:141:5>
|   `-ReturnStmt 0x560a41e1a6f8 <line:140:2, col:24>
|     `-CXXMemberCallExpr 0x560a41e1a6c0 <col:9, col:24> 'Router *'
|       `-MemberExpr 0x560a41e1a690 <col:9, col:17> '<bound member function type>' ->router 0x560a41e08ef0
|         `-ImplicitCastExpr 0x560a41e1a6e0 <col:9> 'const Element *' <NoOp>
|           `-ImplicitCastExpr 0x560a41e1a678 <col:9> 'Element *' <LValueToRValue>
|             `-MemberExpr 0x560a41e1a648 <col:9> 'Element *const' lvalue ->_owner 0x560a41e18be8
|               `-CXXThisExpr 0x560a41e1a638 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x560a41e15bf8 <line:144:5, line:146:5> line:144:21 element 'Element *() const' inline
| `-CompoundStmt 0x560a41e1a788 <col:37, line:146:5>
|   `-ReturnStmt 0x560a41e1a778 <line:145:2, col:9>
|     `-ImplicitCastExpr 0x560a41e1a760 <col:9> 'Element *' <LValueToRValue>
|       `-MemberExpr 0x560a41e1a730 <col:9> 'Element *const' lvalue ->_owner 0x560a41e18be8
|         `-CXXThisExpr 0x560a41e1a720 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x560a41e15cb8 <line:149:5, line:151:5> line:149:26 thread 'RouterThread *() const' inline
| `-CompoundStmt 0x560a41e1a808 <col:41, line:151:5>
|   `-ReturnStmt 0x560a41e1a7f8 <line:150:2, col:9>
|     `-ImplicitCastExpr 0x560a41e1a7e0 <col:9> 'RouterThread *' <LValueToRValue>
|       `-MemberExpr 0x560a41e1a7b0 <col:9> 'RouterThread *const' lvalue ->_thread 0x560a41e18c48
|         `-CXXThisExpr 0x560a41e1a7a0 <col:9> 'const Timer *' implicit this
|-CXXMethodDecl 0x560a41e15d80 <line:154:5, col:26> col:9 home_thread_id 'int () const'
|-CXXMethodDecl 0x560a41e16de0 <line:171:5, col:55> col:10 initialize 'void (Element *, bool)'
| |-ParmVarDecl 0x560a41e15e30 <col:21, col:30> col:30 owner 'Element *'
| `-ParmVarDecl 0x560a41e15ea8 <col:37, col:50> col:42 quiet 'bool' cinit
|   `-CXXBoolLiteralExpr 0x560a41e19528 <col:50> 'bool' false
|-CXXMethodDecl 0x560a41e16f68 <line:181:5, col:35> col:10 initialize 'void (Router *)'
| `-ParmVarDecl 0x560a41e16ea0 <col:21, col:29> col:29 router 'Router *'
|-CXXMethodDecl 0x560a41e170b0 <line:191:5, col:57> col:10 used schedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x560a41e17020 <col:29, col:46> col:46 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x560a41e171f8 <line:197:5, col:59> col:10 reschedule_at_steady 'void (const Timestamp &)'
| `-ParmVarDecl 0x560a41e17168 <col:31, col:48> col:48 when_steady 'const Timestamp &'
|-CXXMethodDecl 0x560a41e17340 <line:210:5, col:50> col:17 used schedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x560a41e172b0 <col:29, col:46> col:46 when 'const Timestamp &'
|-CXXMethodDecl 0x560a41e17488 <line:216:5, col:52> col:17 reschedule_at 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x560a41e173f8 <col:31, col:48> col:48 when 'const Timestamp &'
|-CXXMethodDecl 0x560a41e17550 <line:221:5, line:223:5> line:221:17 schedule_now 'void ()' inline
| `-CompoundStmt 0x560a41e1a970 <col:32, line:223:5>
|   `-ExprWithCleanups 0x560a41e1a958 <line:222:2, col:47> 'void'
|     `-CXXMemberCallExpr 0x560a41e1a900 <col:2, col:47> 'void'
|       |-MemberExpr 0x560a41e1a830 <col:2> '<bound member function type>' ->schedule_at_steady 0x560a41e170b0
|       | `-CXXThisExpr 0x560a41e1a820 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x560a41e1a940 <col:21, col:46> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x560a41e1a928 <col:21, col:46> 'const Timestamp' <NoOp>
|           `-CallExpr 0x560a41e1a8e0 <col:21, col:46> 'Timestamp'
|             `-ImplicitCastExpr 0x560a41e1a8c8 <col:21, col:32> 'Timestamp (*)()' <FunctionToPointerDecay>
|               `-DeclRefExpr 0x560a41e1a898 <col:21, col:32> 'Timestamp ()' lvalue CXXMethod 0x560a419ecac0 'recent_steady' 'Timestamp ()'
|-CXXMethodDecl 0x560a41e17690 <line:233:5, col:47> col:10 used schedule_after 'void (const Timestamp &)'
| `-ParmVarDecl 0x560a41e17600 <col:25, col:42> col:42 delta 'const Timestamp &'
|-CXXMethodDecl 0x560a41e177d8 <line:239:5, line:241:5> line:239:17 used schedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x560a41e17748 <col:36, col:45> col:45 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x560a41e1aaf8 <col:56, line:241:5>
|   `-ExprWithCleanups 0x560a41e1aae0 <line:240:2, col:40> 'void'
|     `-CXXMemberCallExpr 0x560a41e1aa88 <col:2, col:40> 'void'
|       |-MemberExpr 0x560a41e1a998 <col:2> '<bound member function type>' ->schedule_after 0x560a41e17690
|       | `-CXXThisExpr 0x560a41e1a988 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x560a41e1aac8 <col:17, col:39> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x560a41e1aab0 <col:17, col:39> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x560a41e1aa48 <col:17, col:39> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-ImplicitCastExpr 0x560a41e1aa18 <col:27> 'uint32_t':'unsigned int' <LValueToRValue>
|             | `-DeclRefExpr 0x560a41e1a9d8 <col:27> 'uint32_t':'unsigned int' lvalue ParmVar 0x560a41e17748 'delta_sec' 'uint32_t':'unsigned int'
|             `-ImplicitCastExpr 0x560a41e1aa30 <col:38> 'uint32_t':'unsigned int' <IntegralCast>
|               `-IntegerLiteral 0x560a41e1a9f8 <col:38> 'int' 0
|-CXXMethodDecl 0x560a41e17920 <line:247:5, line:249:5> line:247:17 used schedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x560a41e17890 <col:37, col:46> col:46 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x560a41e1ad68 <col:58, line:249:5>
|   `-ExprWithCleanups 0x560a41e1ad50 <line:248:2, col:49> 'void'
|     `-CXXMemberCallExpr 0x560a41e1acf8 <col:2, col:49> 'void'
|       |-MemberExpr 0x560a41e1ab20 <col:2> '<bound member function type>' ->schedule_after 0x560a41e17690
|       | `-CXXThisExpr 0x560a41e1ab10 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x560a41e1ad38 <col:17, col:48> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x560a41e1ad20 <col:17, col:48> 'const Timestamp' <NoOp>
|           `-CallExpr 0x560a41e1aca0 <col:17, col:48> 'Timestamp'
|             |-ImplicitCastExpr 0x560a41e1ac88 <col:17, col:28> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x560a41e1abf8 <col:17, col:28> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x560a41cfe918 'make_msec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x560a41e1ace0 <col:38> 'Timestamp::value_type':'long' <IntegralCast>
|               `-ImplicitCastExpr 0x560a41e1acc8 <col:38> 'uint32_t':'unsigned int' <LValueToRValue>
|                 `-DeclRefExpr 0x560a41e1abd8 <col:38> 'uint32_t':'unsigned int' lvalue ParmVar 0x560a41e17890 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a41e17a68 <line:259:5, line:261:5> line:259:17 reschedule_after 'void (const Timestamp &)' inline
| |-ParmVarDecl 0x560a41e179d8 <col:34, col:51> col:51 used delta 'const Timestamp &'
| `-CompoundStmt 0x560a41e1af48 <col:58, line:261:5>
|   `-ExprWithCleanups 0x560a41e1af30 <line:260:2, col:38> 'void'
|     `-CXXMemberCallExpr 0x560a41e1aed8 <col:2, col:38> 'void'
|       |-MemberExpr 0x560a41e1ad90 <col:2> '<bound member function type>' ->schedule_at_steady 0x560a41e170b0
|       | `-CXXThisExpr 0x560a41e1ad80 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x560a41e1af18 <col:21, col:33> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x560a41e1af00 <col:21, col:33> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x560a41e1aea0 <col:21, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x560a41e1ae88 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x560a41e1ae68 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x560a41be5f20 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x560a41e1ae38 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x560a41e1ae20 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x560a41e1add0 <col:21> 'Timestamp' lvalue ->_expiry_s 0x560a41e188c8
|             |     `-CXXThisExpr 0x560a41e1adc0 <col:21> 'Timer *' implicit this
|             `-DeclRefExpr 0x560a41e1ae00 <col:33> 'const Timestamp' lvalue ParmVar 0x560a41e179d8 'delta' 'const Timestamp &'
|-CXXMethodDecl 0x560a41e17bb0 <line:268:5, line:270:5> line:268:17 used reschedule_after_sec 'void (uint32_t)' inline
| |-ParmVarDecl 0x560a41e17b20 <col:38, col:47> col:47 used delta_sec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x560a41e1b220 <col:58, line:270:5>
|   `-ExprWithCleanups 0x560a41e1b208 <line:269:2, col:79> 'void'
|     `-CXXMemberCallExpr 0x560a41e1b1b0 <col:2, col:79> 'void'
|       |-MemberExpr 0x560a41e1af70 <col:2> '<bound member function type>' ->schedule_at_steady 0x560a41e170b0
|       | `-CXXThisExpr 0x560a41e1af60 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x560a41e1b1f0 <col:21, col:78> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x560a41e1b1d8 <col:21, col:78> 'const Timestamp' <NoOp>
|           `-CXXTemporaryObjectExpr 0x560a41e1b170 <col:21, col:78> 'Timestamp' 'void (unsigned int, uint32_t)'
|             |-BinaryOperator 0x560a41e1b0a8 <col:31, col:49> 'unsigned int' '+'
|             | |-ImplicitCastExpr 0x560a41e1b090 <col:31, col:45> 'unsigned int' <IntegralCast>
|             | | `-CXXMemberCallExpr 0x560a41e1b020 <col:31, col:45> 'Timestamp::seconds_type':'int'
|             | |   `-MemberExpr 0x560a41e1aff0 <col:31, col:41> '<bound member function type>' .sec 0x560a419ee5b8
|             | |     `-ImplicitCastExpr 0x560a41e1b040 <col:31> 'const Timestamp' lvalue <NoOp>
|             | |       `-MemberExpr 0x560a41e1afc0 <col:31> 'Timestamp' lvalue ->_expiry_s 0x560a41e188c8
|             | |         `-CXXThisExpr 0x560a41e1afb0 <col:31> 'Timer *' implicit this
|             | `-ImplicitCastExpr 0x560a41e1b078 <col:49> 'uint32_t':'unsigned int' <LValueToRValue>
|             |   `-DeclRefExpr 0x560a41e1b058 <col:49> 'uint32_t':'unsigned int' lvalue ParmVar 0x560a41e17b20 'delta_sec' 'uint32_t':'unsigned int'
|             `-CXXMemberCallExpr 0x560a41e1b138 <col:60, col:77> 'uint32_t':'unsigned int'
|               `-MemberExpr 0x560a41e1b108 <col:60, col:70> '<bound member function type>' .subsec 0x560a419eecb0
|                 `-ImplicitCastExpr 0x560a41e1b158 <col:60> 'const Timestamp' lvalue <NoOp>
|                   `-MemberExpr 0x560a41e1b0d8 <col:60> 'Timestamp' lvalue ->_expiry_s 0x560a41e188c8
|                     `-CXXThisExpr 0x560a41e1b0c8 <col:60> 'Timer *' implicit this
|-CXXMethodDecl 0x560a41e17cf8 <line:277:5, line:279:5> line:277:17 used reschedule_after_msec 'void (uint32_t)' inline
| |-ParmVarDecl 0x560a41e17c68 <col:39, col:48> col:48 used delta_msec 'uint32_t':'unsigned int'
| `-CompoundStmt 0x560a41e1b558 <col:60, line:279:5>
|   `-ExprWithCleanups 0x560a41e1b540 <line:278:2, col:65> 'void'
|     `-CXXMemberCallExpr 0x560a41e1b4e8 <col:2, col:65> 'void'
|       |-MemberExpr 0x560a41e1b248 <col:2> '<bound member function type>' ->schedule_at_steady 0x560a41e170b0
|       | `-CXXThisExpr 0x560a41e1b238 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x560a41e1b528 <col:21, col:64> 'const Timestamp' lvalue
|         `-ImplicitCastExpr 0x560a41e1b510 <col:21, col:64> 'const Timestamp' <NoOp>
|           `-CXXOperatorCallExpr 0x560a41e1b4b0 <col:21, col:64> 'Timestamp'
|             |-ImplicitCastExpr 0x560a41e1b498 <col:31> 'Timestamp (*)(Timestamp, const Timestamp &)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x560a41e1b478 <col:31> 'Timestamp (Timestamp, const Timestamp &)' lvalue Function 0x560a41be5f20 'operator+' 'Timestamp (Timestamp, const Timestamp &)'
|             |-CXXConstructExpr 0x560a41e1b418 <col:21> 'Timestamp' 'void (const Timestamp &) noexcept'
|             | `-ImplicitCastExpr 0x560a41e1b400 <col:21> 'const Timestamp' lvalue <NoOp>
|             |   `-MemberExpr 0x560a41e1b288 <col:21> 'Timestamp' lvalue ->_expiry_s 0x560a41e188c8
|             |     `-CXXThisExpr 0x560a41e1b278 <col:21> 'Timer *' implicit this
|             `-MaterializeTemporaryExpr 0x560a41e1b460 <col:33, col:64> 'const Timestamp' lvalue
|               `-ImplicitCastExpr 0x560a41e1b448 <col:33, col:64> 'const Timestamp' <NoOp>
|                 `-CallExpr 0x560a41e1b3a8 <col:33, col:64> 'Timestamp'
|                   |-ImplicitCastExpr 0x560a41e1b390 <col:33, col:44> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|                   | `-DeclRefExpr 0x560a41e1b360 <col:33, col:44> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x560a41cfe918 'make_msec' 'Timestamp (Timestamp::value_type)'
|                   `-ImplicitCastExpr 0x560a41e1b3e8 <col:54> 'Timestamp::value_type':'long' <IntegralCast>
|                     `-ImplicitCastExpr 0x560a41e1b3d0 <col:54> 'uint32_t':'unsigned int' <LValueToRValue>
|                       `-DeclRefExpr 0x560a41e1b340 <col:54> 'uint32_t':'unsigned int' lvalue ParmVar 0x560a41e17c68 'delta_msec' 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x560a41e17dc0 <line:285:5, col:21> col:10 used unschedule 'void ()'
|-CXXMethodDecl 0x560a41e17e80 <line:288:5, line:291:5> line:288:17 clear 'void ()' inline
| `-CompoundStmt 0x560a41e1ba20 <col:25, line:291:5>
|   |-CXXMemberCallExpr 0x560a41e1b5b0 <line:289:2, col:13> 'void'
|   | `-MemberExpr 0x560a41e1b580 <col:2> '<bound member function type>' ->unschedule 0x560a41e17dc0
|   |   `-CXXThisExpr 0x560a41e1b570 <col:2> 'Timer *' implicit this
|   `-ExprWithCleanups 0x560a41e1ba08 <line:290:2, col:24> 'Timestamp' lvalue
|     `-CXXOperatorCallExpr 0x560a41e1b9d0 <col:2, col:24> 'Timestamp' lvalue
|       |-ImplicitCastExpr 0x560a41e1b9b8 <col:12> 'Timestamp &(*)(Timestamp &&) noexcept' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x560a41e1b668 <col:12> 'Timestamp &(Timestamp &&) noexcept' lvalue CXXMethod 0x560a41dd0408 'operator=' 'Timestamp &(Timestamp &&) noexcept'
|       |-MemberExpr 0x560a41e1b5e0 <col:2> 'Timestamp' lvalue ->_expiry_s 0x560a41e188c8
|       | `-CXXThisExpr 0x560a41e1b5d0 <col:2> 'Timer *' implicit this
|       `-MaterializeTemporaryExpr 0x560a41e1b650 <col:14, col:24> 'Timestamp' xvalue
|         `-CXXTemporaryObjectExpr 0x560a41e1b620 <col:14, col:24> 'Timestamp' 'void ()'
|-CXXMethodDecl 0x560a41e17f40 <line:304:5, line:310:5> line:304:29 used adjustment 'Timestamp ()' static inline
| `-CompoundStmt 0x560a41e1bd78 <col:42, line:310:5>
|   |-IfStmt 0x560a41e1bbc0 <line:306:2, line:307:23>
|   | |-CallExpr 0x560a41e1baf0 <line:306:6, col:30> 'bool'
|   | | `-ImplicitCastExpr 0x560a41e1bad8 <col:6, col:17> 'bool (*)()' <FunctionToPointerDecay>
|   | |   `-DeclRefExpr 0x560a41e1ba78 <col:6, col:17> 'bool ()' lvalue CXXMethod 0x560a41d19de0 'warp_jumping' 'bool ()'
|   | `-ReturnStmt 0x560a41e1bbb0 <line:307:6, col:23>
|   |   `-ExprWithCleanups 0x560a41e1bb98 <col:13, col:23> 'Timestamp'
|   |     `-CXXConstructExpr 0x560a41e1bb68 <col:13, col:23> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|   |       `-MaterializeTemporaryExpr 0x560a41e1bb50 <col:13, col:23> 'Timestamp' xvalue
|   |         `-CXXTemporaryObjectExpr 0x560a41e1bb20 <col:13, col:23> 'Timestamp' 'void ()'
|   `-ReturnStmt 0x560a41e1bd68 <line:309:2, col:33>
|     `-ExprWithCleanups 0x560a41e1bd50 <col:9, col:33> 'Timestamp'
|       `-CXXConstructExpr 0x560a41e1bd20 <col:9, col:33> 'Timestamp' 'void (Timestamp &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x560a41e1bd08 <col:9, col:33> 'Timestamp' xvalue
|           `-CallExpr 0x560a41e1bcc8 <col:9, col:33> 'Timestamp'
|             |-ImplicitCastExpr 0x560a41e1bcb0 <col:9, col:20> 'Timestamp (*)(Timestamp::value_type)' <FunctionToPointerDecay>
|             | `-DeclRefExpr 0x560a41e1bc80 <col:9, col:20> 'Timestamp (Timestamp::value_type)' lvalue CXXMethod 0x560a41cfec30 'make_usec' 'Timestamp (Timestamp::value_type)'
|             `-ImplicitCastExpr 0x560a41e1bcf0 <col:30> 'Timestamp::value_type':'long' <IntegralCast>
|               `-IntegerLiteral 0x560a41e1bc60 <col:30> 'int' 500
|-CXXMethodDecl 0x560a41e18080 <line:317:5, col:80> col:17 schedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x560a41e17ff0 <col:34, col:43> col:43 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x560a41e18128 <col:69> "" ""
|-CXXMethodDecl 0x560a41e18238 <line:323:5, col:81> col:17 schedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x560a41e181a8 <col:35, col:44> col:44 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x560a41e182e0 <col:70> "" ""
|-CXXMethodDecl 0x560a41e183f0 <line:329:5, col:82> col:17 reschedule_after_s 'void (uint32_t)' inline
| |-ParmVarDecl 0x560a41e18360 <col:36, col:45> col:45 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x560a41e18498 <col:71> "" ""
|-CXXMethodDecl 0x560a41e185a8 <line:335:5, col:83> col:17 reschedule_after_ms 'void (uint32_t)' inline
| |-ParmVarDecl 0x560a41e18518 <col:37, col:46> col:46 delta_sec 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x560a41e18650 <col:72> "" ""
|-EnumDecl 0x560a41e186c0 <line:337:5, col:27> col:5
| `-EnumConstantDecl 0x560a41e187c0 <col:12, col:25> col:12 behind_sec 'Timer::(anonymous enum at ../dummy_inc/click/timer.hh:337:5)'
|   `-ImplicitCastExpr 0x560a41e18810 <col:25> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x560a41e187a0 <col:25> 'int' Int: 1
|       `-IntegerLiteral 0x560a41e18780 <col:25> 'int' 1
|-AccessSpecDecl 0x560a41e18828 <line:339:3, col:10> col:3 private
|-FieldDecl 0x560a41e18868 <line:341:5, col:9> col:9 referenced _schedpos1 'int'
|-FieldDecl 0x560a41e188c8 <line:342:5, col:15> col:15 referenced _expiry_s 'Timestamp'
|-CXXRecordDecl 0x560a41e18918 <line:343:5, line:345:5> line:343:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x560a41e18a48 <line:344:2, col:16> col:16 referenced callback 'TimerCallback':'void (*)(Timer *, void *)'
| `-CXXDestructorDecl 0x560a41e19538 <line:343:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-FieldDecl 0x560a41e18b08 <col:5, line:345:7> col:7 referenced _hook 'union (anonymous union at ../dummy_inc/click/timer.hh:343:5)':'Timer::(anonymous union at ../dummy_inc/click/timer.hh:343:5)'
|-FieldDecl 0x560a41e18b88 <line:346:5, col:11> col:11 referenced _thunk 'void *'
|-FieldDecl 0x560a41e18be8 <line:347:5, col:14> col:14 referenced _owner 'Element *'
|-FieldDecl 0x560a41e18c48 <line:348:5, col:19> col:19 referenced _thread 'RouterThread *'
|-CXXMethodDecl 0x560a41e18d98 <line:350:5, col:36> col:12 operator= 'Timer &(const Timer &)'
| `-ParmVarDecl 0x560a41e18ca8 <col:22, col:35> col:35 x 'const Timer &'
|-CXXMethodDecl 0x560a41e18f68 <line:352:5, col:58> col:17 used do_nothing_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x560a41e18e50 <col:33, col:40> col:40 t 'Timer *'
| `-ParmVarDecl 0x560a41e18ed0 <col:43, col:49> col:49 user_data 'void *'
|-CXXMethodDecl 0x560a41e19140 <line:353:5, col:55> col:17 used element_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x560a41e19028 <col:30, col:37> col:37 t 'Timer *'
| `-ParmVarDecl 0x560a41e190a8 <col:40, col:46> col:46 user_data 'void *'
|-CXXMethodDecl 0x560a41e19318 <line:354:5, col:52> col:17 used task_hook 'void (Timer *, void *)' static
| |-ParmVarDecl 0x560a41e19200 <col:27, col:34> col:34 t 'Timer *'
| `-ParmVarDecl 0x560a41e19280 <col:37, col:43> col:43 user_data 'void *'
`-FriendDecl 0x560a41e194e8 <line:356:5, col:18> col:12 'class TimerSet':'TimerSet'

Layout: <CGRecordLayout
  LLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.19, i8*, %class.Element*, %class.RouterThread* }
  NonVirtualBaseLLVMType:%class.Timer = type { i32, %class.Timestamp, %union.anon.19, i8*, %class.Element*, %class.RouterThread* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<16>
         0 |   char [16] x
           | [sizeof=16, dsize=16, align=1,
           |  nvsize=16, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x560a41e2cb70 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 16
|-PackedAttr 0x560a41fbfa18 <line:167:18>
|-CXXRecordDecl 0x560a41fbfad8 prev 0x560a41e2cb70 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x560a41fbfbe8 <line:166:5, col:13> col:10 x 'char [16]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array.10 = type { [16 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array.10 = type { [16 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct HashMap<class IPFlowID, int>::Pair
         0 |   class IPFlowID key
         0 |     class IPAddress _saddr
         0 |       uint32_t _addr
         4 |     class IPAddress _daddr
         4 |       uint32_t _addr
         8 |     uint16_t _sport
        10 |     uint16_t _dport
        12 |   int value
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41f68ac0 <../dummy_inc/click/hashmap.hh:80:3, line:83:3> line:80:10 struct Pair definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x560a41fc1e10 prev 0x560a41f6c570 <col:3, col:10> col:10 implicit struct Pair
|-FieldDecl 0x560a41fc1eb0 <line:81:5, col:7> col:7 key 'IPFlowID':'IPFlowID'
`-FieldDecl 0x560a41fc1f10 <line:82:5, col:7> col:7 value 'int':'int'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashMap<IPFlowID, int>::Pair" = type { %class.IPFlowID, i32 }
  NonVirtualBaseLLVMType:%"struct.HashMap<IPFlowID, int>::Pair" = type { %class.IPFlowID, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct HashMap<class IPFlowID, int>::Elt
         0 |   struct HashMap<class IPFlowID, int>::Pair (base)
         0 |     class IPFlowID key
         0 |       class IPAddress _saddr
         0 |         uint32_t _addr
         4 |       class IPAddress _daddr
         4 |         uint32_t _addr
         8 |       uint16_t _sport
        10 |       uint16_t _dport
        12 |     int value
        16 |   struct HashMap<class IPFlowID, int>::Elt * next
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x560a41f6c8a0 <../dummy_inc/click/hashmap.hh:91:5, line:97:5> line:91:12 struct Elt definition
|-DefinitionData pass_in_registers trivially_copyable
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-public 'HashMap<IPFlowID, int>::Pair'
|-CXXRecordDecl 0x560a41fc1fa8 prev 0x560a41f6c8a0 <col:5, col:12> col:12 implicit struct Elt
`-FieldDecl 0x560a41fc2048 <line:92:2, col:7> col:7 next 'HashMap<IPFlowID, int>::Elt *'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashMap<IPFlowID, int>::Elt" = type { %"struct.HashMap<IPFlowID, int>::Pair", %"struct.HashMap<IPFlowID, int>::Elt"* }
  NonVirtualBaseLLVMType:%"struct.HashMap<IPFlowID, int>::Elt" = type { %"struct.HashMap<IPFlowID, int>::Pair", %"struct.HashMap<IPFlowID, int>::Elt"* }
  IsZeroInitializable:1
  BitFields:[
]>
