
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf462db788 prev 0x55cf462d2f28 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cf462db880 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55cf462db910 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55cf462db988 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55cf462dba48 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55cf462dbb10 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55cf462dbc88 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55cf462dbbc0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55cf462dbd30 <col:24>
| `-OptimizeNoneAttr 0x55cf462dbd88 <col:34>
|-CXXMethodDecl 0x55cf462dbdd0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55cf462dc088 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55cf462dbe80 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55cf462dbef8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55cf462dbf78 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55cf462dc140 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55cf462dc178 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55cf462dc1e0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55cf462dc268 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55cf462dc588 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55cf462dc320 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55cf462dc398 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55cf462dc410 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55cf462dc490 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55cf462dc6a0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55cf462e4018 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55cf462e4018
| `-ParmVarDecl 0x55cf462e4128 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55cf462e41c8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55cf462e41c8
| `-ParmVarDecl 0x55cf462e42d8 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55cf462e80f8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf462ce7a0 prev 0x55cf462ce520 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55cf462ce898 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55cf462ce928 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55cf462ce988 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55cf462cea78 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55cf462ceb78 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55cf462ced48 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55cf462cebf8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55cf462cec70 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55cf462ceed8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55cf462cee10 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55cf462cef80 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55cf462cf0b8 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55cf462ceff0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55cf462cf258 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55cf462cf198 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55cf462cf3f8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55cf462cf338 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55cf462cf4a0 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55cf462cf5a0 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55cf462cf680 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf462cf580 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55cf462cf560 <col:26> 'int' 1
| `-EnumConstantDecl 0x55cf462cf630 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55cf462cf698 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf462cf610 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55cf462cf5f0 <col:44> 'int' 2
|-CXXMethodDecl 0x55cf462cf7e0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55cf462cf6c8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55cf462cf748 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55cf462cf938 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55cf462cf8a8 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55cf462cfb78 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55cf462cf9f8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55cf462cfa70 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55cf462cfc28 <col:20>
| `-OptimizeNoneAttr 0x55cf462cfc80 <col:30>
|-CXXMethodDecl 0x55cf462cfd88 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55cf462cfcc0 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55cf462cfe30 <col:20>
| `-OptimizeNoneAttr 0x55cf462cfe88 <col:30>
|-CXXMethodDecl 0x55cf462cfed8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55cf462cffa0 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55cf462d00b8 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55cf462d0140 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55cf462d01c8 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55cf462d0250 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55cf462d02d8 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55cf462d0368 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55cf462d0428 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55cf462d04b0 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55cf462d0538 <line:64:5, col:28> col:23 used PULL 'const char []' static
|-VarDecl 0x55cf462d05c0 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55cf462d0648 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55cf462d06d0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55cf462d0760 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55cf462d0820 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55cf462d08b0 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55cf462d0a00 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55cf462d0968 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55cf462d0b90 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55cf462d0ac0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55cf462d0e40 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55cf462d0c48 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55cf462d0cc8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55cf462d0d48 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55cf462d0ef8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55cf462d1000 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55cf462d1290 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf462d0fe0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55cf462d0fc0 <col:33> 'int' 0
| |-EnumConstantDecl 0x55cf462d1090 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55cf462d12a8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf462d1070 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55cf462d1050 <col:32> 'int' 20
| |-EnumConstantDecl 0x55cf462d1120 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55cf462d12c0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf462d1100 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55cf462d10e0 <col:38> 'int' 90
| |-EnumConstantDecl 0x55cf462d11b0 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55cf462d12d8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf462d1190 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55cf462d1170 <col:35> 'int' 100
| `-EnumConstantDecl 0x55cf462d1240 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55cf462d12f0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf462d1220 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55cf462d1200 <col:32> 'int' 2000
|-CXXMethodDecl 0x55cf462d1330 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55cf462d1770 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55cf462d15e0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55cf462d1658 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55cf462d1840 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55cf462d19c0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55cf462d18f0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55cf462d1bc8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55cf462d1a78 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55cf462d1af0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55cf462d1cc8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55cf462d1d68 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55cf462d1e30 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55cf462d1ec0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55cf462d20f0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf462d1ea0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55cf462d1e80 <col:36> 'int' EnumConstant 0x55cf462d1e30 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55cf462d1f10 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55cf462d1f60 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55cf462d1fb0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55cf462d2000 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55cf462d2050 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55cf462d20a0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55cf462d21d8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55cf462d2118 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55cf462d22a0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55cf462d2360 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55cf462d2420 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55cf462d24e0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55cf462d25f8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55cf462d26c0 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x55cf462d2840 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55cf462d2770 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55cf462d2968 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55cf462d2b68 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55cf462d2a18 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55cf462d2a98 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55cf462e04b8 <col:54, line:127:5>
|   |-ParenExpr 0x55cf462e0368 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55cf462e0338 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55cf462e0028 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55cf462e0000 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55cf462dffe8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55cf462dffd0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55cf462dffa0 <col:31> 'Router *' lvalue ->_router 0x55cf462dde80
|   |   |         `-CXXThisExpr 0x55cf462dff90 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55cf462e0088 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf462e0068 <col:48> 'int' 0
|   |   `-CallExpr 0x55cf462e0298 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55cf462e0280 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf462e0260 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf45e08e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf462e02d8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462e00f8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55cf462e02f0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462e0118 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55cf462e0308 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf462e0150 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55cf462e0320 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf462e0248 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf462e0230 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf462e01e8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55cf462e0400 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55cf462e0398 <col:9> 'Router *' lvalue ->_router 0x55cf462dde80
|   | | `-CXXThisExpr 0x55cf462e0388 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55cf462e03e8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cf462e03c8 <col:19> 'Router *' lvalue ParmVar 0x55cf462d2a18 'r' 'Router *'
|   `-BinaryOperator 0x55cf462e0498 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55cf462e0430 <col:9> 'int' lvalue ->_eindex 0x55cf462ddee8
|     | `-CXXThisExpr 0x55cf462e0420 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55cf462e0480 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55cf462e0460 <col:19> 'int' lvalue ParmVar 0x55cf462d2a98 'eindex' 'int'
|-CXXMethodDecl 0x55cf462d2cf0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55cf462d2c28 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55cf462d2dc0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55cf462d2e88 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55cf462d2f28 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55cf462d3178 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55cf462d2ff0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55cf462d3070 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55cf462d3228 <col:20>
| `-OptimizeNoneAttr 0x55cf462d3280 <col:30>
|-CXXMethodDecl 0x55cf462d3388 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55cf462d32c0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55cf462d3430 <col:20>
| `-OptimizeNoneAttr 0x55cf462d3488 <col:30>
|-CXXMethodDecl 0x55cf462d3558 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55cf462d34c8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55cf462d3600 <col:20>
| `-OptimizeNoneAttr 0x55cf462d3658 <col:30>
|-CXXMethodDecl 0x55cf462d37e8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55cf462d3690 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55cf462d3710 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55cf462d3978 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55cf462d38b0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55cf462d3ac8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55cf462d3a38 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55cf462d3c18 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55cf462d3b88 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55cf462d3d68 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55cf462d3cd8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55cf462d4028 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55cf462d3e20 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55cf462d3ea0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55cf462d3f48 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55cf462d4100 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55cf462d41c0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55cf462d4490 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55cf462d4340 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55cf462d43b8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55cf462d45b8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55cf462d4790 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55cf462d4670 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55cf462d46f0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55cf462d4978 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55cf462d4858 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55cf462d48d8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55cf462d4ce8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55cf462d4a38 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55cf462d4ab0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55cf462d4b30 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55cf462dfaa0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55cf462dfa80 <col:106> 'int' 0
| `-ParmVarDecl 0x55cf462d4ba8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55cf462dfad8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55cf462dfab8 <col:126> 'int' 0
|-CXXMethodDecl 0x55cf462d5088 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55cf462d4db8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55cf462d4e50 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55cf462d4ed0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55cf462d4f48 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55cf462dfb10 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55cf462dfaf0 <col:114> 'int' 0
|-CXXMethodDecl 0x55cf462d5418 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55cf462d5160 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55cf462d51d8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55cf462d5258 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55cf462dfb28 <col:96> 'int' 0
| `-ParmVarDecl 0x55cf462d52d0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55cf462dfb68 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55cf462dfb48 <col:116> 'int' 0
|-CXXMethodDecl 0x55cf462d5798 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55cf462d54e8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55cf462d5560 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55cf462d55e0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55cf462dfba0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55cf462dfb80 <col:109> 'int' 0
| `-ParmVarDecl 0x55cf462d5658 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55cf462dfbd8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55cf462dfbb8 <col:129> 'int' 0
|-CXXMethodDecl 0x55cf462d5b18 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55cf462d5868 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55cf462d58e0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55cf462d5960 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55cf462d59d8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55cf462dfc10 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55cf462dfbf0 <col:117> 'int' 0
|-CXXMethodDecl 0x55cf462d5ea8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55cf462d5bf0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf462d5c68 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55cf462d5ce8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55cf462dfc28 <col:99> 'int' 0
| `-ParmVarDecl 0x55cf462d5d60 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55cf462dfc68 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55cf462dfc48 <col:119> 'int' 0
|-CXXMethodDecl 0x55cf462d62c8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55cf462d5f78 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55cf462d5ff8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55cf462d6070 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55cf462d60f0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55cf462dfca0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55cf462dfc80 <col:108> 'int' 0
| `-ParmVarDecl 0x55cf462d6170 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55cf462dfcd8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55cf462dfcb8 <col:141> 'int' 0
|-CXXMethodDecl 0x55cf462d66e8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55cf462d63a0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55cf462d6420 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55cf462d6498 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55cf462d6518 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55cf462d6598 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55cf462dfcf0 <col:121> 'int' 0
|-CXXMethodDecl 0x55cf462d6b18 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55cf462d67c8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55cf462d6848 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55cf462d68c0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55cf462d6940 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55cf462dfd10 <col:98> 'int' 0
| `-ParmVarDecl 0x55cf462d69c0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55cf462dfd30 <col:123> 'int' 0
|-CXXMethodDecl 0x55cf462d6de0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55cf462d6bf0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55cf462d6c70 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55cf462d6cf0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55cf462dfd50 <col:80> 'int' 0
|-EnumDecl 0x55cf462d6e98 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55cf462d6fa0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55cf462d7230 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf462d6f80 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55cf462d6f60 <col:42> 'int' 1
| |-EnumConstantDecl 0x55cf462d7030 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55cf462d7248 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf462d7010 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55cf462d6ff0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55cf462d70c0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55cf462d7260 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf462d70a0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55cf462d7080 <col:44> 'int' 4
| |-EnumConstantDecl 0x55cf462d7150 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55cf462d7278 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf462d7130 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55cf462d7110 <col:36> 'int' 7
| `-EnumConstantDecl 0x55cf462d71e0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55cf462d7290 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf462d71c0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55cf462d71a0 <col:34> 'int' 6
|-CXXMethodDecl 0x55cf462d7548 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55cf462d72b8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55cf462d7358 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55cf462d73d8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55cf462d7450 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55cf462dfe08 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55cf462dfdf0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55cf462dfdd8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55cf462dfdb8 <col:98, col:105> 'String' (CXXTemporary 0x55cf462dfdb8)
|           `-CXXTemporaryObjectExpr 0x55cf462dfd80 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55cf462d77e8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55cf462d7618 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55cf462d7690 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55cf462d7708 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55cf462dfeb8 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55cf462dfea0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55cf462dfe88 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55cf462dfe68 <col:94, col:101> 'String' (CXXTemporary 0x55cf462dfe68)
| |         `-CXXTemporaryObjectExpr 0x55cf462dfe30 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55cf462e06a0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55cf462e0618 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55cf462e05e8 <col:9> '<bound member function type>' ->add_task_handlers 0x55cf462d7548
|     | `-CXXThisExpr 0x55cf462e05d8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55cf462e0658 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55cf462e0558 <col:27> 'Task *' lvalue ParmVar 0x55cf462d7618 'task' 'Task *'
|     |-ImplicitCastExpr 0x55cf462e0670 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55cf462e0578 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55cf462d7690 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55cf462e0688 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55cf462e0598 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55cf462d71e0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55cf462e05b8 <col:62> 'const String' lvalue ParmVar 0x55cf462d7708 'prefix' 'const String &'
|-CXXMethodDecl 0x55cf462d79f8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55cf462d78b0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55cf462d7928 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55cf462dff68 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55cf462dff50 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55cf462dff38 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55cf462dff18 <col:70, col:77> 'String' (CXXTemporary 0x55cf462dff18)
| |         `-CXXTemporaryObjectExpr 0x55cf462dfee0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55cf462e0878 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55cf462e07f0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55cf462e07c0 <col:9> '<bound member function type>' ->add_task_handlers 0x55cf462d7548
|     | `-CXXThisExpr 0x55cf462e07b0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55cf462e0830 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55cf462e0730 <col:27> 'Task *' lvalue ParmVar 0x55cf462d78b0 'task' 'Task *'
|     |-ImplicitCastExpr 0x55cf462e0848 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55cf462e0750 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55cf462e0860 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55cf462e0770 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55cf462d71e0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55cf462e0790 <col:57> 'const String' lvalue ParmVar 0x55cf462d7928 'prefix' 'const String &'
|-CXXMethodDecl 0x55cf462d7cd8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55cf462d7ac0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf462d7b40 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf462d7bb8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55cf462d7f88 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55cf462d7da8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf462d7e28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf462d7ea8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55cf462d8278 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55cf462d8058 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf462d80d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf462d8150 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55cf462d8528 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55cf462d8348 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf462d83c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf462d8448 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55cf462d87d8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55cf462d85f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf462d8678 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf462d86f8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55cf462d8a88 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55cf462d88a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf462d8928 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf462d89a0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55cf462d8d38 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55cf462d8b58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf462d8bd8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf462d8c58 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55cf462d9048 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55cf462d8e60 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf462d8ee0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf462d8f60 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55cf462d9328 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55cf462d9118 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf462d9198 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf462d9240 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55cf462d9608 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55cf462d93f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf462d9478 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf462d9520 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55cf462d9870 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55cf462d96d8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55cf462d9758 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55cf462d97d0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55cf462d9b18 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55cf462d9940 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55cf462d99c0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55cf462d9a38 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55cf462d9dc8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55cf462d9be8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf462d9c68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf462d9ce8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55cf462da078 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55cf462d9e98 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf462d9f18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf462d9f90 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55cf462da328 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55cf462da148 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf462da1c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf462da240 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55cf462da5f8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55cf462da3f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf462da478 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55cf462da518 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55cf462da928 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55cf462da6c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55cf462da748 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55cf462da7c0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55cf462da838 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55cf462dff80 <col:93> 'bool' false
|-CXXMethodDecl 0x55cf462dab10 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55cf462da9f8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55cf462daa78 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55cf462dace8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55cf462dabd0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55cf462dac50 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55cf462dafc8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55cf462dada8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55cf462dae20 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55cf462daea0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55cf462daf18 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55cf462db2b8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55cf462db098 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55cf462db110 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55cf462db190 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55cf462db208 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55cf462db4f0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55cf462db390 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55cf462db410 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55cf462db6d8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55cf462db5b8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55cf462db638 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55cf462db788 prev 0x55cf462d2f28 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55cf462db880 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55cf462db910 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55cf462db988 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55cf462dba48 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55cf462dbb10 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55cf462dbc88 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55cf462dbbc0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55cf462dbd30 <col:24>
| | `-OptimizeNoneAttr 0x55cf462dbd88 <col:34>
| |-CXXMethodDecl 0x55cf462dbdd0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55cf462dc088 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55cf462dbe80 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55cf462dbef8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55cf462dbf78 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55cf462dc140 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55cf462dc178 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55cf462dc1e0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55cf462dc268 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55cf462dc588 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55cf462dc320 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55cf462dc398 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55cf462dc410 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55cf462dc490 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55cf462dc6a0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55cf462e4018 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55cf462e4018
| | `-ParmVarDecl 0x55cf462e4128 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55cf462e41c8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55cf462e41c8
| | `-ParmVarDecl 0x55cf462e42d8 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55cf462e80f8 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55cf462dc718 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55cf462dc7b8 <col:38> "" ""
|-CXXMethodDecl 0x55cf462dc848 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55cf462dc8e8 <col:44> "" ""
|-AccessSpecDecl 0x55cf462dc958 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55cf462dc980 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55cf462dca80 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55cf462dcad0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf462dca60 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55cf462dca40 <col:27> 'int' 4
|-FieldDecl 0x55cf462dcb88 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55cf462dcd38 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55cf462dcdf0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55cf462dde80 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55cf462ddee8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55cf462de038 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55cf462ddf78 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55cf462de1e8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55cf462de0f8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55cf462de3c8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55cf462de2a8 <col:20> col:23 'int'
| `-ParmVarDecl 0x55cf462de328 <col:25> col:28 'int'
|-CXXMethodDecl 0x55cf462de670 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55cf462de490 <col:23> col:26 'int'
| |-ParmVarDecl 0x55cf462de510 <col:28> col:31 'int'
| `-ParmVarDecl 0x55cf462de588 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55cf462de728 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55cf462de7f0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55cf462de840 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55cf462de890 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55cf462dea70 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55cf462de920 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55cf462de998 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55cf462ded18 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55cf462deb38 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55cf462debb8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55cf462dec30 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55cf462def38 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55cf462dede8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55cf462dee68 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55cf462df270 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55cf462deff8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55cf462df078 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55cf462df0f0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55cf462df170 <col:57> col:60 'int'
|-CXXMethodDecl 0x55cf462df458 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55cf462df340 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55cf462df3c0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55cf462df5a8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55cf462df518 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55cf462df928 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55cf462df668 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55cf462df6e8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55cf462df760 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55cf462df7e0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55cf462dfa40 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class SimplePrioSched
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf462e7188 <../elements/simple/simplepriosched.hh:24:1, line:36:1> line:24:7 class SimplePrioSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55cf462e72e8 <col:1, col:7> col:7 implicit referenced class SimplePrioSched
|-AccessSpecDecl 0x55cf462e7378 <col:42, col:48> col:42 public
|-CXXConstructorDecl 0x55cf462e7400 <line:26:5, col:21> col:5 SimplePrioSched 'void ()'
|-CXXDestructorDecl 0x55cf462e74f0 <line:27:5, col:22> col:5 ~SimplePrioSched 'void ()' noexcept-unevaluated 0x55cf462e74f0
| `-Overrides: [ 0x55cf462cea78 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x55cf462e7620 <line:29:5, col:64> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55cf462cfed8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55cf462e7e18 <col:36, col:64>
|   `-ReturnStmt 0x55cf462e7e08 <col:38, col:45>
|     `-ImplicitCastExpr 0x55cf462e7df0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55cf462e7dc8 <col:45> 'const char [16]' lvalue "SimplePrioSched"
|-CXXMethodDecl 0x55cf462e76e8 <line:30:5, col:52> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x55cf462cffa0 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55cf462e7e78 <col:36, col:52>
|   `-ReturnStmt 0x55cf462e7e68 <col:38, col:45>
|     `-ImplicitCastExpr 0x55cf462e7e50 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55cf462e7e30 <col:45> 'const char [4]' lvalue "-/1"
|-CXXMethodDecl 0x55cf462e77b0 <line:31:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x55cf462d0368 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x55cf462e7ed8 <col:36, col:51>
|   `-ReturnStmt 0x55cf462e7ec8 <col:38, col:45>
|     `-ImplicitCastExpr 0x55cf462e7eb0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55cf462e7e90 <col:45> 'const char []' lvalue Var 0x55cf462d0538 'PULL' 'const char []'
|-CXXMethodDecl 0x55cf462e7878 <line:32:5, col:46> col:17 flags 'const char *() const'
| |-Overrides: [ 0x55cf462d08b0 Element::flags 'const char *() const' ]
| `-CompoundStmt 0x55cf462e7f38 <col:31, col:46>
|   `-ReturnStmt 0x55cf462e7f28 <col:33, col:40>
|     `-ImplicitCastExpr 0x55cf462e7f10 <col:40> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55cf462e7ef0 <col:40> 'const char [3]' lvalue "S0"
|-CXXMethodDecl 0x55cf462e79c0 <line:34:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x55cf462ceed8 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x55cf462e7930 <col:18, col:22> col:22 port 'int'
|-CXXConstructorDecl 0x55cf462e7a98 <line:24:7> col:7 implicit SimplePrioSched 'void (const SimplePrioSched &)' inline default_delete noexcept-unevaluated 0x55cf462e7a98
| `-ParmVarDecl 0x55cf462e7ba8 <col:7> col:7 'const SimplePrioSched &'
`-CXXMethodDecl 0x55cf462e7c48 <col:7> col:7 implicit operator= 'SimplePrioSched &(const SimplePrioSched &)' inline default_delete noexcept-unevaluated 0x55cf462e7c48
  `-ParmVarDecl 0x55cf462e7d58 <col:7> col:7 'const SimplePrioSched &'

Layout: <CGRecordLayout
  LLVMType:%class.SimplePrioSched = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.SimplePrioSched.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf4608d250 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cf4608d368 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55cf4608d3f8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55cf4608d4c8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55cf4608d5b0 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55cf4608d7c8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55cf4608d670 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf4608d978 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55cf4608d880 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55cf4608dac0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55cf4608da30 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55cf4608dc08 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55cf4608db78 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf4608dd50 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55cf4608dcc0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf4608de18 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x55cf4608df60 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x55cf4608ded0 <col:28> col:31 'int'
|-CXXMethodDecl 0x55cf4608e028 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x55cf4608e170 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55cf4608e0e0 <col:28> col:31 'int'
|-CXXMethodDecl 0x55cf4608e2e8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55cf4608e228 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf4608e430 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55cf4608e3a0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf4608e4f8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55cf4608e6b8 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55cf4608e5a8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55cf4608e620 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf4608e908 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55cf4608e778 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55cf4608e7f0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55cf4608e9b8 <col:86> "" ""
|-CXXMethodDecl 0x55cf4608ec28 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55cf4608ea98 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55cf4608eb10 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf4608edd8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55cf4608ece8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55cf4608ef88 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55cf4608ee90 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55cf4608f258 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55cf4608f040 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55cf4608f0b8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55cf4608f130 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf4608f538 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55cf4608f320 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55cf4608f398 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55cf4608f410 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55cf4608f5f0 <col:115> "" ""
|-AccessSpecDecl 0x55cf4608f660 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55cf4608f698 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf46090bb0 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55cf46090bb0
| `-ParmVarDecl 0x55cf46090cb8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55cf46090d58 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55cf46090d58
| `-ParmVarDecl 0x55cf46090e68 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55cf460c6498 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55cf462b8290 <col:7>
|-CXXConstructorDecl 0x55cf460c6570 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55cf460c6570
| `-ParmVarDecl 0x55cf460c6688 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55cf460c66f8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55cf460c66f8
| `-ParmVarDecl 0x55cf460c6808 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55cf462bac90 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf462a6e38 prev 0x55cf4629c040 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cf462a6f30 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55cf462a7020 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55cf462a7148 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55cf462a72c8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55cf462a7448 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55cf462a75c8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55cf462b83f8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55cf462b8c68 <col:11>
|-CXXDestructorDecl 0x55cf462b84d0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55cf462b8608 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55cf462b8608
| `-ParmVarDecl 0x55cf462b8718 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55cf462b87b8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55cf462b87b8
| `-ParmVarDecl 0x55cf462b88c8 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55cf462bb688 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55cf462bb798 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55cf462bba18 <col:11>
|   `-ReturnStmt 0x55cf462bba08 <col:11>
|     `-UnaryOperator 0x55cf462bb9f0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55cf462bb9e0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55cf462bb808 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55cf462bb808
  `-ParmVarDecl 0x55cf462bb918 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf462a7630 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cf462a7748 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55cf462a77e8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55cf462a7850 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55cf462a78b8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55cf462a7920 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55cf462a7980 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55cf462a7a40 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55cf462a7aa0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55cf462a7b00 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55cf462b8308 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55cf462a77e8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55cf462b8c78 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55cf462b8cd0 <col:12>
|-CXXConstructorDecl 0x55cf462b8938 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55cf462b8938
| `-ParmVarDecl 0x55cf462b8a48 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55cf462b8ae8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55cf462b8ae8
| `-ParmVarDecl 0x55cf462b8bf8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55cf462bad70 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf46295750 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55cf46295868 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55cf462958f8 <col:16, col:22> col:16 public
|-EnumDecl 0x55cf46295920 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55cf46295a20 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55cf46295b00 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf46295a00 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55cf462959e0 <col:21> 'int' 28
| `-EnumConstantDecl 0x55cf46295ab0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55cf46295b18 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf46295a90 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55cf46295a70 <col:22> 'int' 64
|-CXXMethodDecl 0x55cf46295e58 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55cf46295b40 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55cf46295bc0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55cf46295c38 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55cf46295cb0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55cf46295f18 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55cf46296118 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55cf46295f90 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55cf46296008 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55cf462961c8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55cf46296328 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55cf46296238 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55cf462963d0 <col:72> warn_unused_result ""
|-TypedefDecl 0x55cf46296730 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55cf462966c0 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55cf46296660 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55cf46296620 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55cf45d6f2d0 'void'
|       |-PointerType 0x55cf46015af0 'unsigned char *'
|       | `-BuiltinType 0x55cf45d6f3d0 'unsigned char'
|       |-TypedefType 0x55cf45e12060 'size_t' sugar
|       | |-Typedef 0x55cf45ddfb20 'size_t'
|       | `-BuiltinType 0x55cf45d6f430 'unsigned long'
|       `-PointerType 0x55cf45d6fad0 'void *'
|         `-BuiltinType 0x55cf45d6f2d0 'void'
|-CXXMethodDecl 0x55cf46296ba8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55cf462967a0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55cf46296818 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55cf462968b0 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55cf46296930 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55cf462b12a0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55cf462b1288 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55cf462b1250 <col:58> 'int' 0
| |-ParmVarDecl 0x55cf462969b0 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55cf462b12c8 <col:76> 'int' 0
| |-ParmVarDecl 0x55cf46296a30 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55cf462b12e8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55cf46296c78 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55cf46296cf8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55cf46296db8 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55cf46296e58 <col:20>
| `-OptimizeNoneAttr 0x55cf46296eb0 <col:30>
|-CXXMethodDecl 0x55cf46296f28 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55cf46296fc8 <col:20>
| `-OptimizeNoneAttr 0x55cf46297020 <col:30>
|-CXXMethodDecl 0x55cf46297098 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55cf46297138 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55cf462971e8 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55cf46297288 <col:20>
| |-OptimizeNoneAttr 0x55cf462972e0 <col:30>
| `-WarnUnusedResultAttr 0x55cf46297308 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55cf46297360 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55cf46297400 <col:20>
| `-OptimizeNoneAttr 0x55cf46297458 <col:30>
|-CXXMethodDecl 0x55cf462974a8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55cf46297548 <col:20>
| `-OptimizeNoneAttr 0x55cf462975a0 <col:30>
|-CXXMethodDecl 0x55cf462975e8 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55cf46297688 <col:20>
| `-OptimizeNoneAttr 0x55cf462976e0 <col:30>
|-CXXMethodDecl 0x55cf46297728 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55cf462977e8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55cf462978b0 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55cf46297978 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55cf46297a38 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55cf46297b58 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55cf462b13b0 <col:54, line:99:5>
|   `-ReturnStmt 0x55cf462b13a0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55cf462b1388 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55cf462b1358 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55cf462a7e38
|         `-CXXThisExpr 0x55cf462b1348 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55cf46297cf8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55cf46297c08 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55cf462b1460 <col:67, line:103:5>
|   `-BinaryOperator 0x55cf462b1440 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55cf462b13d8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55cf462a7e38
|     | `-CXXThisExpr 0x55cf462b13c8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55cf462b1428 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55cf462b1408 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55cf46297c08 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55cf46297df0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55cf462b14e0 <col:33, line:107:5>
|   `-ReturnStmt 0x55cf462b14d0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55cf462b14b8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55cf462b1488 <col:16> 'void *' lvalue ->_destructor_argument 0x55cf462a7ea0
|         `-CXXThisExpr 0x55cf462b1478 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55cf46297eb0 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55cf462b1b10 <col:25, line:113:5>
|   |-ParenExpr 0x55cf462b1858 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55cf462b1828 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55cf462b1598 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55cf462b1570 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55cf462b1538 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55cf462b1508 <col:24> '<bound member function type>' ->shared 0x55cf46296f28
|   |   |       `-ImplicitCastExpr 0x55cf462b1558 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55cf462b14f8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55cf462b15f8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf462b15d8 <col:42> 'int' 0
|   |   `-CallExpr 0x55cf462b1788 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55cf462b1770 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf462b1750 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf45e08e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf462b17c8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462b1668 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55cf462b17e0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462b1690 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf462b17f8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf462b16c8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55cf462b1810 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf462b1738 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf462b1720 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf462b16e8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55cf462b1a58 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55cf462b1888 <col:2> 'unsigned char *' lvalue ->_head 0x55cf462a7c40
|   | | `-CXXThisExpr 0x55cf462b1878 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55cf462b1a40 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55cf462b1a20 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55cf462b18c8 <col:10> 'unsigned char *' lvalue ->_data 0x55cf462a7ca8
|   |     | `-CXXThisExpr 0x55cf462b18b8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55cf462b1a08 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55cf462b19e8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55cf462b1908 <col:18> 'unsigned char *' lvalue ->_tail 0x55cf462a7d10
|   |         | `-CXXThisExpr 0x55cf462b18f8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55cf462b19d0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55cf462b19b0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55cf462b1948 <col:26> 'unsigned char *' lvalue ->_end 0x55cf462a7d78
|   |             | `-CXXThisExpr 0x55cf462b1938 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55cf462b1998 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55cf462b1978 <col:33> 'int' 0
|   `-BinaryOperator 0x55cf462b1af0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55cf462b1a88 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55cf462a7e38
|     | `-CXXThisExpr 0x55cf462b1a78 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55cf462b1ad8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55cf462b1ab8 <col:16> 'int' 0
|-CXXMethodDecl 0x55cf46297ff0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55cf46297f60 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55cf46298098 <col:20>
| |-OptimizeNoneAttr 0x55cf462980f0 <col:30>
| `-WarnUnusedResultAttr 0x55cf46298118 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55cf462981e8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55cf46298158 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55cf46298290 <col:20>
| |-OptimizeNoneAttr 0x55cf462982e8 <col:30>
| `-WarnUnusedResultAttr 0x55cf46298310 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55cf46298448 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55cf46298350 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55cf462984f0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55cf462985f0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55cf46298560 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55cf46298698 <col:20>
| `-OptimizeNoneAttr 0x55cf462986f0 <col:30>
|-CXXMethodDecl 0x55cf462987b8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55cf46298728 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55cf46298860 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55cf46298960 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55cf462988d0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55cf46298a08 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55cf46298b08 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55cf46298a78 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55cf46298bb0 <col:20>
| `-OptimizeNoneAttr 0x55cf46298c08 <col:30>
|-CXXMethodDecl 0x55cf46298d98 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55cf46298c48 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55cf46298cc0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55cf462b1308 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55cf46298e48 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55cf46299048 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55cf46298ec0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55cf46298f38 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf46299258 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55cf46299108 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55cf46299180 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf46299468 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55cf46299318 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55cf46299398 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55cf462b1318 <col:39> 'int' 0
|-CXXMethodDecl 0x55cf46299538 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55cf46299600 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55cf462996c8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55cf46299788 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55cf46299850 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55cf46299998 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55cf46299908 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55cf46299b68 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55cf46299a58 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55cf46299ad0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf46299c38 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55cf46299cf8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55cf46299d98 <col:20>
| `-OptimizeNoneAttr 0x55cf46299df0 <col:30>
|-CXXMethodDecl 0x55cf46299e40 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55cf46299ee0 <col:20>
| `-OptimizeNoneAttr 0x55cf46299f38 <col:30>
|-CXXMethodDecl 0x55cf46299f88 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55cf4629a048 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55cf4629a110 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55cf4629a1b0 <col:20>
| `-OptimizeNoneAttr 0x55cf4629a208 <col:30>
|-CXXMethodDecl 0x55cf4629a358 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55cf4629a248 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55cf4629a2c0 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf4629a4a8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55cf4629a418 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf4629a580 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55cf4629a640 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55cf4629a6e0 <col:20>
| `-OptimizeNoneAttr 0x55cf4629a738 <col:30>
|-CXXMethodDecl 0x55cf4629a788 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55cf4629a828 <col:20>
| `-OptimizeNoneAttr 0x55cf4629a880 <col:30>
|-CXXMethodDecl 0x55cf4629a8d0 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55cf4629a998 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55cf4629aa38 <col:20>
| `-OptimizeNoneAttr 0x55cf4629aa90 <col:30>
|-CXXMethodDecl 0x55cf4629aad8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55cf4629abf8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55cf4629ad68 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55cf4629aca8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55cf4629ae58 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55cf4629aef8 <col:20>
| `-OptimizeNoneAttr 0x55cf4629af50 <col:30>
|-CXXMethodDecl 0x55cf4629afa0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55cf4629b060 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55cf4629b298 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55cf4629b110 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55cf4629b188 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55cf4629b348 <col:20>
| `-OptimizeNoneAttr 0x55cf4629b3a0 <col:30>
|-CXXMethodDecl 0x55cf4629b448 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55cf4629b4e8 <col:20>
| `-OptimizeNoneAttr 0x55cf4629b540 <col:30>
|-CXXMethodDecl 0x55cf4629b590 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55cf4629b630 <col:20>
| `-OptimizeNoneAttr 0x55cf4629b688 <col:30>
|-CXXMethodDecl 0x55cf4629b6d0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55cf4629b770 <col:20>
| `-OptimizeNoneAttr 0x55cf4629b7c8 <col:30>
|-CXXMethodDecl 0x55cf4629b8c8 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55cf4629b800 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55cf4629b970 <col:20>
| `-OptimizeNoneAttr 0x55cf4629b9c8 <col:30>
|-CXXMethodDecl 0x55cf4629bb88 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55cf4629ba00 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55cf4629ba78 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55cf4629bc38 <col:20>
| `-OptimizeNoneAttr 0x55cf4629bc90 <col:30>
|-CXXMethodDecl 0x55cf4629bd38 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55cf4629be58 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55cf4629bf78 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55cf4629c018 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55cf4629c040 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55cf4629c168 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55cf4629c208 <col:20>
| `-OptimizeNoneAttr 0x55cf4629c260 <col:30>
|-CXXMethodDecl 0x55cf4629c308 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55cf4629c3a8 <col:20>
| `-OptimizeNoneAttr 0x55cf4629c400 <col:30>
|-AccessSpecDecl 0x55cf4629c428 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55cf4629c450 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55cf4629c550 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55cf4629c5a0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf4629c530 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55cf4629c510 <col:14> 'int' 48
|-CXXMethodDecl 0x55cf4629c608 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55cf4629c6a8 <col:20>
| `-OptimizeNoneAttr 0x55cf4629c700 <col:30>
|-CXXMethodDecl 0x55cf4629c778 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55cf4629c818 <col:20>
| `-OptimizeNoneAttr 0x55cf4629c870 <col:30>
|-CXXMethodDecl 0x55cf4629c938 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55cf4629c8a8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55cf4629cad8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55cf4629cc78 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55cf4629cb88 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55cf4629cd20 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55cf4629ce20 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55cf4629d1d0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf4629ce00 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55cf4629cde0 <col:9> 'int' 0
| |-EnumConstantDecl 0x55cf4629ceb0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55cf4629d1e8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf4629ce90 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55cf4629ce70 <col:14> 'int' 1
| |-EnumConstantDecl 0x55cf4629cf40 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55cf4629d200 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf4629cf20 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55cf4629cf00 <col:14> 'int' 2
| |-EnumConstantDecl 0x55cf4629cfd0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55cf4629d218 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf4629cfb0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55cf4629cf90 <col:14> 'int' 3
| |-EnumConstantDecl 0x55cf4629d060 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55cf4629d230 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf4629d040 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55cf4629d020 <col:13> 'int' 4
| |-EnumConstantDecl 0x55cf4629d0f0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55cf4629d248 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf4629d0d0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55cf4629d0b0 <col:13> 'int' 5
| `-EnumConstantDecl 0x55cf4629d180 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55cf4629d260 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf4629d160 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55cf4629d140 <col:14> 'int' 6
|-CXXMethodDecl 0x55cf4629d2c8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55cf4629d368 <col:20>
| `-OptimizeNoneAttr 0x55cf4629d3c0 <col:30>
|-CXXMethodDecl 0x55cf4629d4b8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55cf4629d3f8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55cf4629d560 <col:20>
| `-OptimizeNoneAttr 0x55cf4629d5b8 <col:30>
|-CXXMethodDecl 0x55cf4629d628 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55cf4629d750 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55cf4629d8c8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55cf4629d800 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55cf4629d990 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55cf4629da58 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55cf4629db98 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55cf4629db08 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55cf4629dc40 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55cf4629dd40 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55cf4629df40 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf4629dd20 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55cf4629dd00 <col:23> 'int' 0
| |-EnumConstantDecl 0x55cf4629ddd0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55cf4629df58 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf4629ddb0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55cf4629dd90 <col:45> 'int' 4
| |-EnumConstantDecl 0x55cf4629de60 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55cf4629df70 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf4629de40 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55cf4629de20 <col:24> 'int' 0
| `-EnumConstantDecl 0x55cf4629def0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55cf4629df88 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf4629ded0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55cf4629deb0 <col:47> 'int' 16
|-CXXMethodDecl 0x55cf4629dfe8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55cf4629e158 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55cf4629e098 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55cf4629e200 <col:20>
| `-OptimizeNoneAttr 0x55cf4629e258 <col:30>
|-CXXMethodDecl 0x55cf4629e2a8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55cf462b1c30 <col:18, col:36>
|   `-ReturnStmt 0x55cf462b1c20 <col:20, col:33>
|     `-ImplicitCastExpr 0x55cf462b1c08 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55cf462b1be8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55cf462b1bb8 <col:27> '<bound member function type>' ->xanno 0x55cf4629c308
|           `-CXXThisExpr 0x55cf462b1ba8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55cf4629e3a0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55cf462b1d40 <col:30, col:48>
|   `-ReturnStmt 0x55cf462b1d30 <col:32, col:45>
|     `-ImplicitCastExpr 0x55cf462b1d18 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55cf462b1cf8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55cf462b1cc8 <col:39> '<bound member function type>' ->xanno 0x55cf4629c168
|           `-CXXThisExpr 0x55cf462b1cb8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55cf4629e488 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55cf462b1ed8 <col:24, col:50>
|   `-ReturnStmt 0x55cf462b1ec8 <col:26, col:47>
|     `-UnaryOperator 0x55cf462b1eb0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55cf462b1e90 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55cf462b1e78 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55cf462b1e28 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55cf462a7148
|         |   `-CXXMemberCallExpr 0x55cf462b1e08 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55cf462b1dd8 <col:34> '<bound member function type>' ->xanno 0x55cf4629c308
|         |       `-CXXThisExpr 0x55cf462b1dc8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55cf462b1e58 <col:46> 'int' 0
|-CXXMethodDecl 0x55cf4629e590 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55cf462b20a8 <col:36, col:62>
|   `-ReturnStmt 0x55cf462b2098 <col:38, col:59>
|     `-UnaryOperator 0x55cf462b2080 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55cf462b2060 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55cf462b2048 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55cf462b1fc0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55cf462a7148
|         |   `-CXXMemberCallExpr 0x55cf462b1fa0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55cf462b1f70 <col:46> '<bound member function type>' ->xanno 0x55cf4629c168
|         |       `-CXXThisExpr 0x55cf462b1f60 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55cf462b1ff0 <col:58> 'int' 0
|-CXXMethodDecl 0x55cf4629e6a8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55cf462b2240 <col:26, col:53>
|   `-ReturnStmt 0x55cf462b2230 <col:28, col:50>
|     `-UnaryOperator 0x55cf462b2218 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55cf462b21f8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55cf462b21e0 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55cf462b2190 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55cf462a7448
|         |   `-CXXMemberCallExpr 0x55cf462b2170 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55cf462b2140 <col:36> '<bound member function type>' ->xanno 0x55cf4629c308
|         |       `-CXXThisExpr 0x55cf462b2130 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55cf462b21c0 <col:49> 'int' 0
|-CXXMethodDecl 0x55cf4629e7c8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55cf462b2418 <col:38, col:65>
|   `-ReturnStmt 0x55cf462b2408 <col:40, col:62>
|     `-UnaryOperator 0x55cf462b23f0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55cf462b23d0 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55cf462b23b8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55cf462b2328 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55cf462a7448
|         |   `-CXXMemberCallExpr 0x55cf462b2308 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55cf462b22d8 <col:48> '<bound member function type>' ->xanno 0x55cf4629c168
|         |       `-CXXThisExpr 0x55cf462b22c8 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55cf462b2358 <col:61> 'int' 0
|-CXXMethodDecl 0x55cf4629e978 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55cf4629e880 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55cf462b2ae8 <col:34, line:463:5>
|   |-ParenExpr 0x55cf462b2930 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55cf462b2900 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55cf462b2568 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf462b2538 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf462b2488 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf462b2470 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf462b2430 <col:23> 'int' lvalue ParmVar 0x55cf4629e880 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf462b2450 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf462b2518 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf462b24e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf462b24a8 <col:33> 'int' lvalue ParmVar 0x55cf4629e880 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55cf462b2500 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55cf462b24c8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf4629c550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55cf462b25c8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf462b25a8 <col:56> 'int' 0
|   |   `-CallExpr 0x55cf462b2860 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55cf462b2848 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf462b2828 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf45e08e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf462b28a0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462b26b8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55cf462b28b8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462b26e8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf462b28d0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf462b2720 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55cf462b28e8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf462b2810 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf462b27f8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf462b27b8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55cf462b2ad8 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55cf462b2ac0 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55cf462b2aa0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55cf462b2a70 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55cf462b2a20 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55cf462a7148
|         |   `-CXXMemberCallExpr 0x55cf462b2a00 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55cf462b29d0 <col:9> '<bound member function type>' ->xanno 0x55cf4629c168
|         |       `-CXXThisExpr 0x55cf462b29c0 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55cf462b2a88 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55cf462b2a50 <col:21> 'int' lvalue ParmVar 0x55cf4629e880 'i' 'int'
|-CXXMethodDecl 0x55cf4629ebc8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55cf4629ea38 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55cf4629eab0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55cf462b3178 <col:40, line:472:5>
|   |-ParenExpr 0x55cf462b2f90 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55cf462b2f60 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55cf462b2c40 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf462b2c10 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf462b2b60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf462b2b48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf462b2b08 <col:23> 'int' lvalue ParmVar 0x55cf4629ea38 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf462b2b28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf462b2bf0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf462b2bc0 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf462b2b80 <col:33> 'int' lvalue ParmVar 0x55cf4629ea38 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55cf462b2bd8 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55cf462b2ba0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf4629c550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55cf462b2ca0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf462b2c80 <col:56> 'int' 0
|   |   `-CallExpr 0x55cf462b2ec0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55cf462b2ea8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf462b2e88 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf45e08e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf462b2f00 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462b2d10 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55cf462b2f18 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462b2d40 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf462b2f30 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf462b2d78 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55cf462b2f48 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf462b2e70 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf462b2e58 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf462b2e18 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55cf462b3158 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55cf462b3100 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55cf462b30d0 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55cf462b3080 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55cf462a7148
|     | |   `-CXXMemberCallExpr 0x55cf462b3060 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55cf462b3030 <col:2> '<bound member function type>' ->xanno 0x55cf4629c308
|     | |       `-CXXThisExpr 0x55cf462b3020 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55cf462b30e8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55cf462b30b0 <col:14> 'int' lvalue ParmVar 0x55cf4629ea38 'i' 'int'
|     `-ImplicitCastExpr 0x55cf462b3140 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55cf462b3120 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55cf4629eab0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55cf4629ed88 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55cf4629ec90 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55cf462b38f8 <col:36, line:485:5>
|   |-ParenExpr 0x55cf462b3660 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cf462b3630 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cf462b3310 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf462b32e0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf462b31f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf462b31d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf462b3198 <col:23> 'int' lvalue ParmVar 0x55cf4629ec90 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf462b31b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf462b32c0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf462b32a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf462b3210 <col:33> 'int' lvalue ParmVar 0x55cf4629ec90 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf462b3288 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf462b3270 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf462b3230 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf4629c550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cf462b3250 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55cf462b3370 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf462b3350 <col:60> 'int' 0
|   |   `-CallExpr 0x55cf462b3590 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cf462b3578 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf462b3558 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf45e08e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf462b35d0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462b33e0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55cf462b35e8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462b3418 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf462b3600 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf462b3450 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55cf462b3618 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf462b3540 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf462b3528 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf462b34e8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55cf462b38e8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55cf462b38d0 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55cf462b38b8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55cf462b3888 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55cf462b3828 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55cf462b37f8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55cf462b3770 <col:61, col:70> 'char const[48]' lvalue ->c 0x55cf462a7020
|             |   `-CXXMemberCallExpr 0x55cf462b3750 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55cf462b3720 <col:61> '<bound member function type>' ->xanno 0x55cf4629c168
|             |       `-CXXThisExpr 0x55cf462b3710 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55cf462b3810 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55cf462b37a0 <col:74> 'int' lvalue ParmVar 0x55cf4629ec90 'i' 'int'
|-CXXMethodDecl 0x55cf4629efd8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55cf4629ee48 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55cf4629eec0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55cf462b4048 <col:42, line:500:5>
|   |-ParenExpr 0x55cf462b3de0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cf462b3db0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cf462b3a90 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf462b3a60 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf462b3970 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf462b3958 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf462b3918 <col:23> 'int' lvalue ParmVar 0x55cf4629ee48 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf462b3938 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf462b3a40 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf462b3a28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf462b3990 <col:33> 'int' lvalue ParmVar 0x55cf4629ee48 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf462b3a08 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf462b39f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf462b39b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf4629c550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cf462b39d0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55cf462b3af0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf462b3ad0 <col:60> 'int' 0
|   |   `-CallExpr 0x55cf462b3d10 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cf462b3cf8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf462b3cd8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf45e08e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf462b3d50 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462b3b60 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55cf462b3d68 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462b3b98 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf462b3d80 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf462b3bd0 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55cf462b3d98 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf462b3cc0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf462b3ca8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf462b3c68 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55cf462b4028 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55cf462b3fd8 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55cf462b3fa8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55cf462b3f50 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55cf462b3f20 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55cf462b3ed0 <col:48, col:57> 'char [48]' lvalue ->c 0x55cf462a7020
|     |     |   `-CXXMemberCallExpr 0x55cf462b3eb0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55cf462b3e80 <col:48> '<bound member function type>' ->xanno 0x55cf4629c308
|     |     |       `-CXXThisExpr 0x55cf462b3e70 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55cf462b3f38 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55cf462b3f00 <col:61> 'int' lvalue ParmVar 0x55cf4629ee48 'i' 'int'
|     `-ImplicitCastExpr 0x55cf462b4010 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55cf462b3ff0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55cf4629eec0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55cf4629f198 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55cf4629f0a0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55cf462b47a8 <col:35, line:513:5>
|   |-ParenExpr 0x55cf462b44b8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cf462b4488 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cf462b41e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf462b41b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf462b40c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf462b40a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf462b4068 <col:23> 'int' lvalue ParmVar 0x55cf4629f0a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf462b4088 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf462b4190 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf462b4178 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf462b40e0 <col:33> 'int' lvalue ParmVar 0x55cf4629f0a0 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf462b4158 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf462b4140 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf462b4100 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf4629c550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cf462b4120 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55cf462b4240 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf462b4220 <col:60> 'int' 0
|   |   `-CallExpr 0x55cf462b43e8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cf462b43d0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf462b43b0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf45e08e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf462b4428 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462b42b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55cf462b4440 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462b42e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf462b4458 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf462b4320 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55cf462b4470 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf462b4398 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf462b4380 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf462b4340 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55cf462b4798 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55cf462b4780 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55cf462b4768 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55cf462b4738 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55cf462b46b0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55cf462b4680 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55cf462b4630 <col:60, col:69> 'char const[48]' lvalue ->c 0x55cf462a7020
|             |   `-CXXMemberCallExpr 0x55cf462b4610 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55cf462b45e0 <col:60> '<bound member function type>' ->xanno 0x55cf4629c168
|             |       `-CXXThisExpr 0x55cf462b45d0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55cf462b4698 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55cf462b4660 <col:73> 'int' lvalue ParmVar 0x55cf4629f0a0 'i' 'int'
|-CXXMethodDecl 0x55cf4629f3e8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55cf4629f258 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55cf4629f2d0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55cf462b4ec8 <col:41, line:528:5>
|   |-ParenExpr 0x55cf462b4c50 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cf462b4c20 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cf462b4940 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf462b4910 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf462b4820 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf462b4808 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf462b47c8 <col:23> 'int' lvalue ParmVar 0x55cf4629f258 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf462b47e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf462b48f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf462b48d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf462b4840 <col:33> 'int' lvalue ParmVar 0x55cf4629f258 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf462b48b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf462b48a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf462b4860 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf4629c550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cf462b4880 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55cf462b49a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf462b4980 <col:60> 'int' 0
|   |   `-CallExpr 0x55cf462b4b80 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cf462b4b68 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf462b4b48 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf45e08e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf462b4bc0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462b4a10 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55cf462b4bd8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462b4a48 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf462b4bf0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf462b4a80 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55cf462b4c08 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf462b4b30 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf462b4b18 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf462b4ad8 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55cf462b4ea8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55cf462b4e58 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55cf462b4e28 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55cf462b4dd0 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55cf462b4d90 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55cf462b4d40 <col:47, col:56> 'char [48]' lvalue ->c 0x55cf462a7020
|     |     |   `-CXXMemberCallExpr 0x55cf462b4d20 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55cf462b4cf0 <col:47> '<bound member function type>' ->xanno 0x55cf4629c308
|     |     |       `-CXXThisExpr 0x55cf462b4ce0 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55cf462b4da8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55cf462b4d70 <col:60> 'int' lvalue ParmVar 0x55cf4629f258 'i' 'int'
|     `-ImplicitCastExpr 0x55cf462b4e90 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55cf462b4e70 <col:65> 'int16_t':'short' lvalue ParmVar 0x55cf4629f2d0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55cf4629f5a8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55cf4629f4b0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55cf462b5598 <col:36, line:541:5>
|   |-ParenExpr 0x55cf462b5338 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cf462b5308 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cf462b5060 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf462b5030 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf462b4f40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf462b4f28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf462b4ee8 <col:23> 'int' lvalue ParmVar 0x55cf4629f4b0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf462b4f08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf462b5010 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf462b4ff8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf462b4f60 <col:33> 'int' lvalue ParmVar 0x55cf4629f4b0 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf462b4fd8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf462b4fc0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf462b4f80 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf4629c550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cf462b4fa0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55cf462b50c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf462b50a0 <col:60> 'int' 0
|   |   `-CallExpr 0x55cf462b5268 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cf462b5250 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf462b5230 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf45e08e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf462b52a8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462b5130 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55cf462b52c0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462b5168 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf462b52d8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf462b51a0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55cf462b52f0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf462b5218 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf462b5200 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf462b51c0 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55cf462b5588 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55cf462b5570 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55cf462b5558 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55cf462b5528 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55cf462b54d0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55cf462b54a0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55cf462b5450 <col:61, col:70> 'char const[48]' lvalue ->c 0x55cf462a7020
|             |   `-CXXMemberCallExpr 0x55cf462b5430 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55cf462b5400 <col:61> '<bound member function type>' ->xanno 0x55cf4629c168
|             |       `-CXXThisExpr 0x55cf462b53f0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55cf462b54b8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55cf462b5480 <col:74> 'int' lvalue ParmVar 0x55cf4629f4b0 'i' 'int'
|-CXXMethodDecl 0x55cf4629f778 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55cf4629f668 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55cf4629f6e0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55cf4629f828 <col:20>
| `-OptimizeNoneAttr 0x55cf4629f880 <col:30>
|-CXXMethodDecl 0x55cf4629f9b8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55cf4629f8c0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55cf462b5c68 <col:35, line:562:5>
|   |-ParenExpr 0x55cf462b5a08 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cf462b59d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cf462b5730 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf462b5700 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf462b5610 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf462b55f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf462b55b8 <col:23> 'int' lvalue ParmVar 0x55cf4629f8c0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf462b55d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf462b56e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf462b56c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf462b5630 <col:33> 'int' lvalue ParmVar 0x55cf4629f8c0 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf462b56a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf462b5690 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf462b5650 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf4629c550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cf462b5670 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55cf462b5790 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf462b5770 <col:60> 'int' 0
|   |   `-CallExpr 0x55cf462b5938 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cf462b5920 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf462b5900 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf45e08e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf462b5978 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462b5800 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55cf462b5990 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462b5838 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf462b59a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf462b5870 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55cf462b59c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf462b58e8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf462b58d0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf462b5890 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55cf462b5c58 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55cf462b5c40 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55cf462b5c28 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55cf462b5bf8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55cf462b5ba0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55cf462b5b70 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55cf462b5b20 <col:60, col:69> 'char const[48]' lvalue ->c 0x55cf462a7020
|             |   `-CXXMemberCallExpr 0x55cf462b5b00 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55cf462b5ad0 <col:60> '<bound member function type>' ->xanno 0x55cf4629c168
|             |       `-CXXThisExpr 0x55cf462b5ac0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55cf462b5b88 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55cf462b5b50 <col:73> 'int' lvalue ParmVar 0x55cf4629f8c0 'i' 'int'
|-CXXMethodDecl 0x55cf4629fbc8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55cf4629fa78 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55cf4629faf0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55cf462b6348 <col:41, line:577:5>
|   |-ParenExpr 0x55cf462b60d8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cf462b60a8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cf462b5e00 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf462b5dd0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf462b5ce0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf462b5cc8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf462b5c88 <col:23> 'int' lvalue ParmVar 0x55cf4629fa78 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf462b5ca8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf462b5db0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf462b5d98 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf462b5d00 <col:33> 'int' lvalue ParmVar 0x55cf4629fa78 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf462b5d78 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf462b5d60 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf462b5d20 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf4629c550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cf462b5d40 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55cf462b5e60 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf462b5e40 <col:60> 'int' 0
|   |   `-CallExpr 0x55cf462b6008 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cf462b5ff0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf462b5fd0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf45e08e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf462b6048 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462b5ed0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55cf462b6060 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462b5f08 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf462b6078 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf462b5f40 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55cf462b6090 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf462b5fb8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf462b5fa0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf462b5f60 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55cf462b6328 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55cf462b62d8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55cf462b62a8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55cf462b6248 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55cf462b6218 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55cf462b61c8 <col:47, col:56> 'char [48]' lvalue ->c 0x55cf462a7020
|     |     |   `-CXXMemberCallExpr 0x55cf462b61a8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55cf462b6178 <col:47> '<bound member function type>' ->xanno 0x55cf4629c308
|     |     |       `-CXXThisExpr 0x55cf462b6168 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55cf462b6230 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55cf462b61f8 <col:60> 'int' lvalue ParmVar 0x55cf4629fa78 'i' 'int'
|     `-ImplicitCastExpr 0x55cf462b6310 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55cf462b62f0 <col:65> 'int32_t':'int' lvalue ParmVar 0x55cf4629faf0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55cf4629fd88 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55cf4629fc90 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55cf462b6a78 <col:36, line:591:5>
|   |-ParenExpr 0x55cf462b67b8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cf462b6788 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cf462b64e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf462b64b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf462b63c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf462b63a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf462b6368 <col:23> 'int' lvalue ParmVar 0x55cf4629fc90 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf462b6388 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf462b6490 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf462b6478 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf462b63e0 <col:33> 'int' lvalue ParmVar 0x55cf4629fc90 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf462b6458 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf462b6440 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf462b6400 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf4629c550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cf462b6420 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55cf462b6540 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf462b6520 <col:60> 'int' 0
|   |   `-CallExpr 0x55cf462b66e8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cf462b66d0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf462b66b0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf45e08e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf462b6728 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462b65b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55cf462b6740 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462b65e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf462b6758 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf462b6620 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55cf462b6770 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf462b6698 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf462b6680 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf462b6640 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55cf462b6a68 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55cf462b6a50 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55cf462b6a38 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55cf462b6a08 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55cf462b6980 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55cf462b6950 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55cf462b6900 <col:61, col:70> 'char const[48]' lvalue ->c 0x55cf462a7020
|             |   `-CXXMemberCallExpr 0x55cf462b68e0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55cf462b68b0 <col:61> '<bound member function type>' ->xanno 0x55cf4629c168
|             |       `-CXXThisExpr 0x55cf462b68a0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55cf462b6968 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55cf462b6930 <col:74> 'int' lvalue ParmVar 0x55cf4629fc90 'i' 'int'
|-CXXMethodDecl 0x55cf4629ffd8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55cf4629fe48 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55cf4629fec0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55cf462b7158 <col:42, line:606:5>
|   |-ParenExpr 0x55cf462b6ee8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55cf462b6eb8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55cf462b6c10 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf462b6be0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf462b6af0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf462b6ad8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf462b6a98 <col:23> 'int' lvalue ParmVar 0x55cf4629fe48 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf462b6ab8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf462b6bc0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55cf462b6ba8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf462b6b10 <col:33> 'int' lvalue ParmVar 0x55cf4629fe48 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf462b6b88 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf462b6b70 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf462b6b30 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf4629c550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55cf462b6b50 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55cf462b6c70 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf462b6c50 <col:60> 'int' 0
|   |   `-CallExpr 0x55cf462b6e18 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55cf462b6e00 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf462b6de0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf45e08e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf462b6e58 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462b6ce0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55cf462b6e70 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462b6d18 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf462b6e88 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf462b6d50 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55cf462b6ea0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf462b6dc8 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf462b6db0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf462b6d70 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55cf462b7138 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55cf462b70e8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55cf462b70b8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55cf462b7058 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55cf462b7028 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55cf462b6fd8 <col:48, col:57> 'char [48]' lvalue ->c 0x55cf462a7020
|     |     |   `-CXXMemberCallExpr 0x55cf462b6fb8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55cf462b6f88 <col:48> '<bound member function type>' ->xanno 0x55cf4629c308
|     |     |       `-CXXThisExpr 0x55cf462b6f78 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55cf462b7040 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55cf462b7008 <col:61> 'int' lvalue ParmVar 0x55cf4629fe48 'i' 'int'
|     `-ImplicitCastExpr 0x55cf462b7120 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55cf462b7100 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55cf4629fec0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55cf462a0170 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55cf462a00a0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55cf462b79c8 <col:33, line:620:5>
|   |-ParenExpr 0x55cf462b7740 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55cf462b7710 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55cf462b7360 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf462b7330 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf462b71d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf462b71b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf462b7178 <col:23> 'int' lvalue ParmVar 0x55cf462a00a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf462b7198 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf462b7310 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55cf462b72f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf462b71f0 <col:33> 'int' lvalue ParmVar 0x55cf462a00a0 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf462b72d8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf462b72c0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf462b7210 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf4629c550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55cf462b7298 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55cf462b7280 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55cf462b7248 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55cf462b73c0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf462b73a0 <col:79> 'int' 0
|   |   `-CallExpr 0x55cf462b7670 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55cf462b7658 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf462b7638 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf45e08e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf462b76b0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462b74a8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55cf462b76c8 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462b74f0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf462b76e0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf462b7528 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55cf462b76f8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf462b7620 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf462b7608 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf462b75c8 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55cf462b79b8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55cf462b79a0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55cf462b7988 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55cf462b7958 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55cf462b78d0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55cf462b78a0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55cf462b7850 <col:67, col:76> 'char const[48]' lvalue ->c 0x55cf462a7020
|             |   `-CXXMemberCallExpr 0x55cf462b7830 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55cf462b7800 <col:67> '<bound member function type>' ->xanno 0x55cf4629c168
|             |       `-CXXThisExpr 0x55cf462b77f0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55cf462b78b8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55cf462b7880 <col:80> 'int' lvalue ParmVar 0x55cf462a00a0 'i' 'int'
|-CXXMethodDecl 0x55cf462a0388 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55cf462a0230 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55cf462a02b0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55cf462b81f0 <col:45, line:635:5>
|   |-ParenExpr 0x55cf462b7f38 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55cf462b7f08 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55cf462b7bd0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55cf462b7ba0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55cf462b7a40 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55cf462b7a28 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55cf462b79e8 <col:23> 'int' lvalue ParmVar 0x55cf462a0230 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55cf462b7a08 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55cf462b7b80 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55cf462b7b68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55cf462b7a60 <col:33> 'int' lvalue ParmVar 0x55cf462a0230 'i' 'int'
|   |   |     `-BinaryOperator 0x55cf462b7b48 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55cf462b7b30 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55cf462b7a80 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55cf4629c550 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55cf462b7b08 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55cf462b7af0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55cf462b7ab8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55cf462b7c30 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55cf462b7c10 <col:79> 'int' 0
|   |   `-CallExpr 0x55cf462b7e68 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55cf462b7e50 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55cf462b7e30 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf45e08e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55cf462b7ea8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462b7ca0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55cf462b7ec0 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55cf462b7ce8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55cf462b7ed8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55cf462b7d20 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55cf462b7ef0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55cf462b7e18 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55cf462b7e00 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55cf462b7db8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55cf462b81d0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55cf462b8138 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55cf462b8108 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55cf462b80a8 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55cf462b8078 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55cf462b8028 <col:54, col:63> 'char [48]' lvalue ->c 0x55cf462a7020
|     |     |   `-CXXMemberCallExpr 0x55cf462b8008 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55cf462b7fd8 <col:54> '<bound member function type>' ->xanno 0x55cf4629c308
|     |     |       `-CXXThisExpr 0x55cf462b7fc8 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55cf462b8090 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55cf462b8058 <col:67> 'int' lvalue ParmVar 0x55cf462a0230 'i' 'int'
|     `-CXXConstCastExpr 0x55cf462b81a0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55cf462b8188 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55cf462b8150 <col:91> 'const void *' lvalue ParmVar 0x55cf462a02b0 'x' 'const void *'
|-CXXMethodDecl 0x55cf462a0458 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55cf462b8278 <col:34, line:640:5>
|   `-ReturnStmt 0x55cf462b8268 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55cf462b8250 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55cf462b8220 <col:16> 'Packet *' lvalue ->_data_packet 0x55cf462a7bd8
|         `-CXXThisExpr 0x55cf462b8210 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55cf462a0598 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55cf462a0508 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55cf462b1338 <col:46> 'bool' true
|-CXXMethodDecl 0x55cf462a0718 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55cf462a0650 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55cf462a07c0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55cf462a0f70 <line:660:22> "" ""
| |-EnumConstantDecl 0x55cf462a08c0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf462a0fe0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf462a08a0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55cf462a0880 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55cf46295a20 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55cf462a0950 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf462a0ff8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf462a0930 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55cf462a0910 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55cf46295ab0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55cf462a09e0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf462a1010 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf462a09c0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55cf462a09a0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55cf462a0a70 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf462a1028 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf462a0a50 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55cf462a0a30 <col:19> 'int' 16
| |-EnumConstantDecl 0x55cf462a0b00 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf462a1040 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf462a0ae0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55cf462a0ac0 <col:21> 'int' 16
| |-EnumConstantDecl 0x55cf462a0b90 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf462a1058 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf462a0b70 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55cf462a0b50 <col:19> 'int' 32
| |-EnumConstantDecl 0x55cf462a0c20 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf462a1070 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf462a0c00 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55cf462a0be0 <col:19> 'int' EnumConstant 0x55cf462a0a70 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55cf462a0cb0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf462a1088 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf462a0c90 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55cf462a0c70 <col:19> 'int' EnumConstant 0x55cf462a0b90 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55cf462a0d80 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf462a10a0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf462a0d60 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55cf462a0d40 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55cf462a0d00 <col:23> 'int' EnumConstant 0x55cf462a0cb0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55cf462a0d20 <col:40> 'int' 2
| |-EnumConstantDecl 0x55cf462a0e50 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55cf462a10b8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55cf462a0e30 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55cf462a0e10 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55cf462a0dd0 <col:23> 'int' EnumConstant 0x55cf462a0cb0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55cf462a0df0 <col:40> 'int' 4
| `-EnumConstantDecl 0x55cf462a0f20 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55cf462a10d0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf462a0f00 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55cf462a0ee0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55cf462a0ea0 <col:23> 'int' EnumConstant 0x55cf462a0cb0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55cf462a0ec0 <col:40> 'int' 8
|-CXXMethodDecl 0x55cf462a1110 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55cf462a11b0 <col:68> "" ""
|-CXXMethodDecl 0x55cf462a1248 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55cf462a12e8 <col:45> "" ""
|-CXXMethodDecl 0x55cf462a1380 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55cf462a1420 <col:57> "" ""
|-CXXMethodDecl 0x55cf462a14b8 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55cf462a1558 <col:45> "" ""
|-CXXMethodDecl 0x55cf462a15f0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55cf462a1690 <col:57> "" ""
|-CXXMethodDecl 0x55cf462a1720 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55cf462a17c0 <col:51> "" ""
|-CXXMethodDecl 0x55cf462a1850 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55cf462a18f0 <col:63> "" ""
|-CXXMethodDecl 0x55cf462a1980 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55cf462a1a20 <col:53> "" ""
|-CXXMethodDecl 0x55cf462a1ab0 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55cf462a1b50 <col:65> "" ""
|-CXXMethodDecl 0x55cf462a1c68 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55cf462a1bd8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55cf462a1d10 <col:61> "" ""
|-CXXMethodDecl 0x55cf462a1ea8 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55cf462a1d98 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55cf462a1e10 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55cf462a1f58 <col:67> "" ""
|-CXXMethodDecl 0x55cf462a2070 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55cf462a1fe0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55cf462a2118 <col:63> "" ""
|-CXXMethodDecl 0x55cf462a22b0 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55cf462a21a0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55cf462a2218 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55cf462a2360 <col:69> "" ""
|-CXXMethodDecl 0x55cf462a2478 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55cf462a23e8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55cf462a2520 <col:63> "" ""
|-CXXMethodDecl 0x55cf462a4bf8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55cf462a4ae8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55cf462a4b60 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55cf462a4ca8 <col:69> "" ""
|-CXXMethodDecl 0x55cf462a4dc0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55cf462a4d30 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55cf462a4e68 <col:62> "" ""
|-CXXMethodDecl 0x55cf462a5000 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55cf462a4ef0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55cf462a4f68 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55cf462a50b0 <col:68> "" ""
|-CXXMethodDecl 0x55cf462a51c8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55cf462a5138 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55cf462a5270 <col:63> "" ""
|-CXXMethodDecl 0x55cf462a5408 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55cf462a52f8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55cf462a5370 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55cf462a54b8 <col:69> "" ""
|-CXXMethodDecl 0x55cf462a5548 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55cf462a55e8 <col:64> "" ""
|-CXXMethodDecl 0x55cf462a5678 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55cf462a5718 <col:52> "" ""
|-CXXMethodDecl 0x55cf462a57a8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55cf462a5848 <col:67> "" ""
|-CXXMethodDecl 0x55cf462a58d8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55cf462a5978 <col:55> "" ""
|-CXXMethodDecl 0x55cf462a5a90 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55cf462a5a00 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55cf462a5b38 <col:58> "" ""
|-CXXMethodDecl 0x55cf462a5cd0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55cf462a5bc0 <col:33> col:36 'int'
| |-ParmVarDecl 0x55cf462a5c38 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55cf462a5d80 <col:62> "" ""
|-CXXMethodDecl 0x55cf462a5e98 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55cf462a5e08 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55cf462a5f40 <col:58> "" ""
|-CXXMethodDecl 0x55cf462a60d8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55cf462a5fc8 <col:33> col:36 'int'
| |-ParmVarDecl 0x55cf462a6040 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55cf462a6188 <col:62> "" ""
|-CXXMethodDecl 0x55cf462a62a0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55cf462a6210 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55cf462a6348 <col:60> "" ""
|-CXXMethodDecl 0x55cf462a64e0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55cf462a63d0 <col:34> col:37 'int'
| |-ParmVarDecl 0x55cf462a6448 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55cf462a6590 <col:64> "" ""
|-CXXMethodDecl 0x55cf462a66a8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55cf462a6618 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55cf462a6750 <col:58> "" ""
|-CXXMethodDecl 0x55cf462a68e8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55cf462a67d8 <col:33> col:36 'int'
| |-ParmVarDecl 0x55cf462a6850 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55cf462a6998 <col:62> "" ""
|-CXXMethodDecl 0x55cf462a6ab0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55cf462a6a20 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55cf462a6b58 <col:59> "" ""
|-CXXMethodDecl 0x55cf462a6cf0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55cf462a6be0 <col:33> col:36 'int'
| |-ParmVarDecl 0x55cf462a6c58 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55cf462a6da0 <col:63> "" ""
|-AccessSpecDecl 0x55cf462a6e10 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55cf462a6e38 prev 0x55cf4629c040 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55cf462a6f30 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55cf462a7020 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55cf462a7148 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55cf462a72c8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55cf462a7448 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55cf462a75c8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55cf462b83f8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55cf462b8c68 <col:11>
| |-CXXDestructorDecl 0x55cf462b84d0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55cf462b8608 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55cf462b8608
| | `-ParmVarDecl 0x55cf462b8718 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55cf462b87b8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55cf462b87b8
| | `-ParmVarDecl 0x55cf462b88c8 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55cf462bb688 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55cf462bb798 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55cf462bba18 <col:11>
| |   `-ReturnStmt 0x55cf462bba08 <col:11>
| |     `-UnaryOperator 0x55cf462bb9f0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55cf462bb9e0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55cf462bb808 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55cf462bb808
|   `-ParmVarDecl 0x55cf462bb918 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55cf462a7630 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55cf462a7748 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55cf462a77e8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55cf462a7850 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55cf462a78b8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55cf462a7920 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55cf462a7980 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55cf462a7a40 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55cf462a7aa0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55cf462a7b00 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55cf462b8308 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55cf462a77e8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55cf462b8c78 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55cf462b8cd0 <col:12>
| |-CXXConstructorDecl 0x55cf462b8938 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55cf462b8938
| | `-ParmVarDecl 0x55cf462b8a48 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55cf462b8ae8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55cf462b8ae8
| | `-ParmVarDecl 0x55cf462b8bf8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55cf462bad70 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55cf462a7b78 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55cf462a7bd8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55cf462a7c40 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55cf462a7ca8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55cf462a7d10 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55cf462a7d78 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55cf462a7dd8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55cf462a7e38 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55cf462a7ea0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55cf462a7f28 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55cf462a7b78 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55cf462b82a0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55cf462a7dd8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55cf462b8ce0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55cf462b8d40 <col:21, line:755:5>
|-CXXConstructorDecl 0x55cf462a80c8 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55cf462a8008 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55cf462a81c0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55cf462a83a8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55cf462a82b0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55cf462a8678 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55cf462a8460 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55cf462a84d8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55cf462a8550 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf462a8898 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55cf462a8748 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55cf462a87c0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55cf462b0e78 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55cf462a8958 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55cf462a89d0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55cf462a8a48 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55cf462b0fd0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55cf462b0f40 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55cf462b1118 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55cf462b1088 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55cf462b1210 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf460a2640 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55cf460a2758 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55cf460a27f8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55cf460a2858 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55cf460a28b8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55cf460a2968 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf460a2c70 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55cf460a2d88 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55cf460a2e30 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55cf460a2e98 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55cf460a2f28 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55cf460a8fc0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55cf460a93f8 <col:12>
|-CXXConstructorDecl 0x55cf460a90c8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55cf460a91d8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55cf460a2e30 'data' 'const char *'
| | `-ImplicitCastExpr 0x55cf460ab980 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55cf460ab950 <col:12> 'const char *const' lvalue .data 0x55cf460a2e30
| |     `-DeclRefExpr 0x55cf460ab930 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf460a91d8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55cf460a2e98 'length' 'int'
| | `-ImplicitCastExpr 0x55cf460aba10 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55cf460ab9e0 <col:12> 'const int' lvalue .length 0x55cf460a2e98
| |     `-DeclRefExpr 0x55cf460ab9c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf460a91d8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55cf460a2f28 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55cf460abaa0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55cf460aba70 <col:12> 'String::memo_t *const' lvalue .memo 0x55cf460a2f28
| |     `-DeclRefExpr 0x55cf460aba50 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf460a91d8 '' 'const String::rep_t &'
| `-CompoundStmt 0x55cf460abaf8 <col:12>
|-CXXConstructorDecl 0x55cf460a9278 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55cf460a9278
| `-ParmVarDecl 0x55cf460a9388 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55cf460ae8e0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55cf460ba2f8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55cf460ba408 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55cf460ba920 <col:12>
|   |-BinaryOperator 0x55cf460ba738 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55cf460ba6f0 <col:12> 'const char *' lvalue ->data 0x55cf460a2e30
|   | | `-CXXThisExpr 0x55cf460ba6e0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55cf460ba720 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55cf460ba6b0 <col:12> 'const char *const' lvalue .data 0x55cf460a2e30
|   |     `-DeclRefExpr 0x55cf460ba690 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf460ba408 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55cf460ba800 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55cf460ba7b8 <col:12> 'int' lvalue ->length 0x55cf460a2e98
|   | | `-CXXThisExpr 0x55cf460ba7a8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55cf460ba7e8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55cf460ba778 <col:12> 'const int' lvalue .length 0x55cf460a2e98
|   |     `-DeclRefExpr 0x55cf460ba758 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf460ba408 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55cf460ba8c8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55cf460ba880 <col:12> 'String::memo_t *' lvalue ->memo 0x55cf460a2f28
|   | | `-CXXThisExpr 0x55cf460ba870 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55cf460ba8b0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55cf460ba840 <col:12> 'String::memo_t *const' lvalue .memo 0x55cf460a2f28
|   |     `-DeclRefExpr 0x55cf460ba820 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf460ba408 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55cf460ba910 <col:12>
|     `-UnaryOperator 0x55cf460ba8f8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55cf460ba8e8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55cf460ba478 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55cf460ba478
  `-ParmVarDecl 0x55cf460ba588 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55cf46099bb0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55cf46099cc8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55cf46099d58 <col:16, col:22> col:16 public
|-TypedefDecl 0x55cf46099d98 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55cf45d6fdc0 'const char *'
|   `-QualType 0x55cf45d6f311 'const char' const
|     `-BuiltinType 0x55cf45d6f310 'char'
|-TypedefDecl 0x55cf46099e20 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55cf46099df0 'String::const_iterator' sugar
|   |-Typedef 0x55cf46099d98 'const_iterator'
|   `-PointerType 0x55cf45d6fdc0 'const char *'
|     `-QualType 0x55cf45d6f311 'const char' const
|       `-BuiltinType 0x55cf45d6f310 'char'
|-TypedefDecl 0x55cf46099f90 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55cf46099f00 'int (String::*)() const'
|   |-RecordType 0x55cf46099c40 'String'
|   | `-CXXRecord 0x55cf46099bb0 'String'
|   `-ParenType 0x55cf46099ea0 'int () const' sugar
|     `-FunctionProtoType 0x55cf4606da30 'int () const' const cdecl
|       `-BuiltinType 0x55cf45d6f370 'int'
|-TypedefDecl 0x55cf46099ff8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55cf45ec2610 'int64_t' sugar
|   |-Typedef 0x55cf45dd82d0 'int64_t'
|   `-TypedefType 0x55cf45db14d0 '__int64_t' sugar
|     |-Typedef 0x55cf45db10a8 '__int64_t'
|     `-BuiltinType 0x55cf45d6f390 'long'
|-TypedefDecl 0x55cf4609a060 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55cf45ec2530 'uint64_t' sugar
|   |-Typedef 0x55cf45dd8470 'uint64_t'
|   `-TypedefType 0x55cf45db1560 '__uint64_t' sugar
|     |-Typedef 0x55cf45db1118 '__uint64_t'
|     `-BuiltinType 0x55cf45d6f430 'unsigned long'
|-TypedefDecl 0x55cf4609a0f0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55cf4609a0c0 'String::intmax_t' sugar
|   |-Typedef 0x55cf46099ff8 'intmax_t'
|   `-TypedefType 0x55cf45ec2610 'int64_t' sugar
|     |-Typedef 0x55cf45dd82d0 'int64_t'
|     `-TypedefType 0x55cf45db14d0 '__int64_t' sugar
|       |-Typedef 0x55cf45db10a8 '__int64_t'
|       `-BuiltinType 0x55cf45d6f390 'long'
|-TypedefDecl 0x55cf4609a180 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55cf4609a150 'String::uintmax_t' sugar
|   |-Typedef 0x55cf4609a060 'uintmax_t'
|   `-TypedefType 0x55cf45ec2530 'uint64_t' sugar
|     |-Typedef 0x55cf45dd8470 'uint64_t'
|     `-TypedefType 0x55cf45db1560 '__uint64_t' sugar
|       |-Typedef 0x55cf45db1118 '__uint64_t'
|       `-BuiltinType 0x55cf45d6f430 'unsigned long'
|-CXXConstructorDecl 0x55cf4609a240 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55cf4609a3e8 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55cf4609a328 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55cf4609a598 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55cf4609a4d8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55cf4609a6f0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55cf4609a660 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55cf4609a908 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55cf4609a7b8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55cf4609a838 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55cf4609ab28 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55cf4609a9d8 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55cf4609aa58 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55cf4609ad48 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55cf4609abf8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55cf4609ac78 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55cf4609af68 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55cf4609ae18 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55cf4609ae98 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55cf4609b0f8 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x55cf4609b030 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55cf4609b278 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55cf4609b1b8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55cf4609b408 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55cf4609b340 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55cf4609b560 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55cf4609b4d0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55cf4609b6b8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55cf4609b628 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55cf4609b810 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55cf4609b780 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55cf4609b998 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55cf4609b8d8 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55cf4609bb28 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55cf4609ba60 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55cf4609bcb8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55cf4609bbf0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55cf4609be48 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55cf4609bd80 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55cf4609bf40 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55cf4609c068 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55cf4609c1e8 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55cf4609c120 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55cf4609c338 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55cf4609c2a8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55cf4609c3f0 <col:63> "" ""
|-CXXMethodDecl 0x55cf4609c538 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55cf4609c478 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55cf4609c748 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55cf4609c5f8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55cf4609c678 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55cf4609c968 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55cf4609c810 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55cf4609c890 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55cf4609cc48 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55cf4609ca28 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55cf4609caa8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55cf460a8a90 <col:55> 'int' 10
| `-ParmVarDecl 0x55cf4609cb20 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55cf460a8ab0 <col:76> 'bool' true
|-CXXMethodDecl 0x55cf4609cf28 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55cf4609cd10 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55cf4609cd90 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55cf460a8ac0 <col:56> 'int' 10
| `-ParmVarDecl 0x55cf4609ce08 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55cf460a8ae0 <col:77> 'bool' true
|-CXXMethodDecl 0x55cf4609d030 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55cf4609d0f8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55cf4609d1c0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55cf4609d260 <col:20>
| `-OptimizeNoneAttr 0x55cf4609d2b8 <col:30>
|-CXXConversionDecl 0x55cf4609d3a8 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55cf4609d478 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55cf4609d538 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55cf4609d628 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55cf4609d6e8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55cf4609d868 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55cf4609d7a0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55cf4609d9b8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55cf4609d928 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55cf4609daa8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55cf4609db68 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55cf4609ddb8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55cf4609dc20 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55cf4609dca0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55cf4609e018 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55cf4609de80 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55cf4609df00 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55cf4609e0e8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55cf4609e2f8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55cf4609e1a0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55cf4609e220 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55cf4609e518 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55cf4609e3c0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55cf4609e440 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55cf4609e6a8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55cf4609e5e0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55cf4609e798 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55cf4609e908 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55cf4609e848 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55cf4609eb18 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55cf4609e9c8 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55cf4609ea48 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55cf4609ed30 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55cf4609ebd8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55cf4609ec50 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55cf4609eec0 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55cf4609edf0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55cf4609f0e0 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55cf4609ef80 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55cf4609f000 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55cf4609f230 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55cf4609f1a0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55cf4609f408 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55cf4609f2f0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55cf4609f370 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55cf4609f558 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55cf4609f4c8 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55cf4609f770 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55cf4609f610 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55cf4609f690 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55cf460a8af0 <col:39> 'int' 0
|-CXXMethodDecl 0x55cf4609f990 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55cf4609f830 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55cf4609f8b0 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55cf460a8b10 <col:48> 'int' 0
|-CXXMethodDecl 0x55cf4609fb70 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55cf4609fa50 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55cf4609fad0 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55cf460a8b30 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55cf4609fc40 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55cf4609fd00 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55cf4609fdc0 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55cf4609fe80 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55cf4609ff40 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55cf460a00e8 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55cf4609fff0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55cf460a0268 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55cf460a01a0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55cf460a0440 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55cf460a0328 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55cf460a05b8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55cf460a04f8 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55cf460a0700 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55cf460a0670 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55cf460a0850 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55cf460a07c0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55cf460a0a28 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55cf460a0910 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55cf460a0990 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55cf460a0c08 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55cf460a0af0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55cf460a0b70 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55cf460a0d58 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55cf460a0cc8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55cf460a0f68 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55cf460a0e18 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55cf460a0e98 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55cf460a10c8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55cf460a1030 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55cf460a1220 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55cf460a1188 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55cf460a12c8 <col:57> "" ""
|-CXXMethodDecl 0x55cf460a13d8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55cf460a1348 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55cf460a1528 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55cf460a1498 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55cf460a16a8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55cf460a15e0 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55cf460a1770 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55cf460a1830 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55cf460a18f0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55cf460a1990 <col:49> "" ""
|-CXXMethodDecl 0x55cf460a1a20 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55cf460a1ae0 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55cf460a1bd0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55cf460a1c98 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55cf460a1d58 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55cf460a1e18 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55cf460a1f10 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55cf460a1fd8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55cf460a20a0 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55cf460a2278 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55cf460a2158 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55cf460a21d8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55cf460a24a0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55cf460a2340 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55cf460a23c0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55cf460a25b0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55cf460a2618 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55cf460a2640 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55cf460a2758 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55cf460a27f8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55cf460a2858 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55cf460a28b8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55cf460a2968 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55cf460a29d0 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55cf460a2c08 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55cf460a2c58 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf460a2be8 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55cf460a2af8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55cf460a2aa0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55cf460a2ae0 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55cf460a2ac0 <col:32> 'int' 8
|-CXXRecordDecl 0x55cf460a2c70 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55cf460a2d88 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55cf460a2e30 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55cf460a2e98 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55cf460a2f28 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55cf460a8fc0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55cf460a93f8 <col:12>
| |-CXXConstructorDecl 0x55cf460a90c8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55cf460a91d8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55cf460a2e30 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55cf460ab980 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55cf460ab950 <col:12> 'const char *const' lvalue .data 0x55cf460a2e30
| | |     `-DeclRefExpr 0x55cf460ab930 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf460a91d8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55cf460a2e98 'length' 'int'
| | | `-ImplicitCastExpr 0x55cf460aba10 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55cf460ab9e0 <col:12> 'const int' lvalue .length 0x55cf460a2e98
| | |     `-DeclRefExpr 0x55cf460ab9c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf460a91d8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55cf460a2f28 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55cf460abaa0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55cf460aba70 <col:12> 'String::memo_t *const' lvalue .memo 0x55cf460a2f28
| | |     `-DeclRefExpr 0x55cf460aba50 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf460a91d8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55cf460abaf8 <col:12>
| |-CXXConstructorDecl 0x55cf460a9278 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55cf460a9278
| | `-ParmVarDecl 0x55cf460a9388 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55cf460ae8e0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55cf460ba2f8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55cf460ba408 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55cf460ba920 <col:12>
| |   |-BinaryOperator 0x55cf460ba738 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55cf460ba6f0 <col:12> 'const char *' lvalue ->data 0x55cf460a2e30
| |   | | `-CXXThisExpr 0x55cf460ba6e0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55cf460ba720 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55cf460ba6b0 <col:12> 'const char *const' lvalue .data 0x55cf460a2e30
| |   |     `-DeclRefExpr 0x55cf460ba690 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf460ba408 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55cf460ba800 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55cf460ba7b8 <col:12> 'int' lvalue ->length 0x55cf460a2e98
| |   | | `-CXXThisExpr 0x55cf460ba7a8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55cf460ba7e8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55cf460ba778 <col:12> 'const int' lvalue .length 0x55cf460a2e98
| |   |     `-DeclRefExpr 0x55cf460ba758 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf460ba408 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55cf460ba8c8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55cf460ba880 <col:12> 'String::memo_t *' lvalue ->memo 0x55cf460a2f28
| |   | | `-CXXThisExpr 0x55cf460ba870 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55cf460ba8b0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55cf460ba840 <col:12> 'String::memo_t *const' lvalue .memo 0x55cf460a2f28
| |   |     `-DeclRefExpr 0x55cf460ba820 <col:12> 'const String::rep_t' lvalue ParmVar 0x55cf460ba408 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55cf460ba910 <col:12>
| |     `-UnaryOperator 0x55cf460ba8f8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55cf460ba8e8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55cf460ba478 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55cf460ba478
|   `-ParmVarDecl 0x55cf460ba588 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55cf460a2fa0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55cf460a31e8 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55cf460a3008 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55cf460a3088 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55cf460a3100 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55cf460a8f80 <col:79, line:261:5>
|   |-BinaryOperator 0x55cf460a8bf8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55cf460a8b90 <col:2, col:5> 'const char *' lvalue .data 0x55cf460a2e30
|   | | `-MemberExpr 0x55cf460a8b60 <col:2> 'String::rep_t' lvalue ->_r 0x55cf460a2fa0
|   | |   `-CXXThisExpr 0x55cf460a8b50 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55cf460a8be0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cf460a8bc0 <col:12> 'const char *' lvalue ParmVar 0x55cf460a3008 'data' 'const char *'
|   |-BinaryOperator 0x55cf460a8cc0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55cf460a8c58 <col:2, col:5> 'int' lvalue .length 0x55cf460a2e98
|   | | `-MemberExpr 0x55cf460a8c28 <col:2> 'String::rep_t' lvalue ->_r 0x55cf460a2fa0
|   | |   `-CXXThisExpr 0x55cf460a8c18 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55cf460a8ca8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55cf460a8c88 <col:14> 'int' lvalue ParmVar 0x55cf460a3088 'length' 'int'
|   `-IfStmt 0x55cf460a8f68 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55cf460a8de0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55cf460a8dc8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55cf460a8da8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55cf460a8d88 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55cf460a8d20 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55cf460a2f28
|     |       | `-MemberExpr 0x55cf460a8cf0 <col:7> 'String::rep_t' lvalue ->_r 0x55cf460a2fa0
|     |       |   `-CXXThisExpr 0x55cf460a8ce0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55cf460a8d70 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55cf460a8d50 <col:17> 'String::memo_t *' lvalue ParmVar 0x55cf460a3100 'memo' 'String::memo_t *'
|     `-CallExpr 0x55cf460a8f40 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55cf460a8f28 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55cf460a8e30 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55cf46091c18 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55cf460a8e98 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55cf460a27f8
|         `-ImplicitCastExpr 0x55cf460a8e80 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55cf460a8e60 <col:27> 'String::memo_t *' lvalue ParmVar 0x55cf460a3100 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55cf460a3498 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55cf460a32b8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55cf460a3338 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55cf460a33b0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55cf460a2fa0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55cf460a9408 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55cf460a9598 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55cf460a9500 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55cf460a9470 <col:2> '<bound member function type>' ->assign_memo 0x55cf460a31e8
|     | `-ImplicitCastExpr 0x55cf460a9538 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55cf460a9460 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55cf460a9550 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55cf460a94a0 <col:14> 'const char *' lvalue ParmVar 0x55cf460a32b8 'data' 'const char *'
|     |-ImplicitCastExpr 0x55cf460a9568 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55cf460a94c0 <col:20> 'int' lvalue ParmVar 0x55cf460a3338 'length' 'int'
|     `-ImplicitCastExpr 0x55cf460a9580 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55cf460a94e0 <col:28> 'String::memo_t *' lvalue ParmVar 0x55cf460a33b0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55cf460a3628 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55cf460a3568 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55cf460a97f0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55cf460a9770 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55cf460a95c0 <col:2> '<bound member function type>' ->assign_memo 0x55cf460a31e8
|     | `-CXXThisExpr 0x55cf460a95b0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55cf460a97a8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55cf460a9640 <col:14, col:19> 'const char *' lvalue .data 0x55cf460a2e30
|     |   `-MemberExpr 0x55cf460a9610 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55cf460a2fa0
|     |     `-DeclRefExpr 0x55cf460a95f0 <col:14> 'const String' lvalue ParmVar 0x55cf460a3568 'x' 'const String &'
|     |-ImplicitCastExpr 0x55cf460a97c0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55cf460a96c0 <col:25, col:30> 'int' lvalue .length 0x55cf460a2e98
|     |   `-MemberExpr 0x55cf460a9690 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55cf460a2fa0
|     |     `-DeclRefExpr 0x55cf460a9670 <col:25> 'const String' lvalue ParmVar 0x55cf460a3568 'x' 'const String &'
|     `-ImplicitCastExpr 0x55cf460a97d8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55cf460a9740 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55cf460a2f28
|         `-MemberExpr 0x55cf460a9710 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55cf460a2fa0
|           `-DeclRefExpr 0x55cf460a96f0 <col:38> 'const String' lvalue ParmVar 0x55cf460a3568 'x' 'const String &'
|-CXXMethodDecl 0x55cf460a36f0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55cf460aa1b0 <col:31, line:278:5>
|   `-IfStmt 0x55cf460aa198 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55cf460a9890 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55cf460a9878 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55cf460a9848 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55cf460a2f28
|     |     `-MemberExpr 0x55cf460a9818 <col:6> 'String::rep_t' lvalue ->_r 0x55cf460a2fa0
|     |       `-CXXThisExpr 0x55cf460a9808 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55cf460aa170 <col:15, line:277:2>
|       |-ParenExpr 0x55cf460a9d40 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55cf460a9d10 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55cf460a99a0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55cf460a9988 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55cf460a9970 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55cf460a9930 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55cf460a27f8
|       |   |       `-ImplicitCastExpr 0x55cf460a9918 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55cf460a98e8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55cf460a2f28
|       |   |           `-MemberExpr 0x55cf460a98b8 <col:27> 'String::rep_t' lvalue ->_r 0x55cf460a2fa0
|       |   |             `-CXXThisExpr 0x55cf460a98a8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55cf460a9a00 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55cf460a99e0 <col:54> 'int' 0
|       |   `-CallExpr 0x55cf460a9c70 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55cf460a9c58 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55cf460a9bd8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55cf45e08e70 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55cf460a9cb0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55cf460a9ae8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55cf460a9cc8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55cf460a9b18 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55cf460a9ce0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55cf460a9b50 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55cf460a9cf8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55cf460a9bc0 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55cf460a9ba8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55cf460a9b70 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55cf460aa090 <line:274:6, line:275:22>
|       | |-CallExpr 0x55cf460a9f50 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55cf460a9f38 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55cf460a9eb0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55cf46093060 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55cf460a9e80 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55cf460a27f8
|       | |   `-ImplicitCastExpr 0x55cf460a9e68 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55cf460a9e38 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55cf460a2f28
|       | |       `-MemberExpr 0x55cf460a9e08 <col:40> 'String::rep_t' lvalue ->_r 0x55cf460a2fa0
|       | |         `-CXXThisExpr 0x55cf460a9df8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55cf460aa050 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55cf460aa038 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55cf460a9f78 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55cf460a7ed0 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55cf460aa078 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55cf460a9fd8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55cf460a2f28
|       |       `-MemberExpr 0x55cf460a9fa8 <col:15> 'String::rep_t' lvalue ->_r 0x55cf460a2fa0
|       |         `-CXXThisExpr 0x55cf460a9f98 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55cf460aa150 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55cf460aa0e8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55cf460a2f28
|         | `-MemberExpr 0x55cf460aa0b8 <col:6> 'String::rep_t' lvalue ->_r 0x55cf460a2fa0
|         |   `-CXXThisExpr 0x55cf460aa0a8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55cf460aa138 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55cf460aa118 <col:16> 'int' 0
|-CXXMethodDecl 0x55cf460a3988 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55cf460a37a8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55cf460a3828 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55cf460a38a0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55cf460a3a60 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55cf460a3cb0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55cf460a3b18 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55cf460a3b98 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55cf460a3c10 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55cf460a3e98 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55cf460a3d80 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55cf460a3e00 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55cf460a3f98 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55cf460aa288 <col:41, line:286:5>
|   `-ReturnStmt 0x55cf460aa278 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55cf460aa248 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55cf460aa210 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55cf460aa1f8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55cf460aa1d8 <col:46> 'int' 1
|-CXXMethodDecl 0x55cf460a4238 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55cf460a4050 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55cf460a40d0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55cf460a4150 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55cf460a7ed0 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55cf460a4300 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55cf460a7fa0 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55cf460a8170 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55cf460a8058 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55cf460a80d8 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55cf460a8230 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55cf460a82f8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55cf460a83f8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55cf460a8470 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55cf460a84e8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55cf460a8550 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55cf460a8650 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55cf460a86a0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55cf460a8630 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55cf460a8610 <col:22> 'int' 14
|-CXXMethodDecl 0x55cf460a88b8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55cf460a86d0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55cf460a8750 <col:38> col:41 'int'
| `-ParmVarDecl 0x55cf460a87d0 <col:43> col:46 'int'
|-FriendDecl 0x55cf460a89c0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55cf460a8a50 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>
