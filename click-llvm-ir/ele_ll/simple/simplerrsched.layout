
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c24f48e7b8 prev 0x55c24f485f58 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c24f48e8b0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55c24f48e940 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55c24f48e9b8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55c24f48ea78 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55c24f48eb40 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55c24f48ecb8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55c24f48ebf0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55c24f48ed60 <col:24>
| `-OptimizeNoneAttr 0x55c24f48edb8 <col:34>
|-CXXMethodDecl 0x55c24f48ee00 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55c24f48f0b8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55c24f48eeb0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55c24f48ef28 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55c24f48efa8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55c24f48f170 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55c24f48f1a8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55c24f48f210 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55c24f48f298 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55c24f48f5b8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55c24f48f350 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55c24f48f3c8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55c24f48f440 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55c24f48f4c0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55c24f48f6d0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55c24f497048 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55c24f497048
| `-ParmVarDecl 0x55c24f497158 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55c24f4971f8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55c24f4971f8
| `-ParmVarDecl 0x55c24f497308 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55c24f49b1c0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c24f4817d0 prev 0x55c24f481550 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c24f4818c8 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55c24f481958 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55c24f4819b8 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55c24f481aa8 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55c24f481ba8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55c24f481d78 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55c24f481c28 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55c24f481ca0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55c24f481f08 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55c24f481e40 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55c24f481fb0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55c24f4820e8 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55c24f482020 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55c24f482288 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55c24f4821c8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55c24f482428 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55c24f482368 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55c24f4824d0 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55c24f4825d0 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55c24f4826b0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f4825b0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55c24f482590 <col:26> 'int' 1
| `-EnumConstantDecl 0x55c24f482660 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55c24f4826c8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c24f482640 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55c24f482620 <col:44> 'int' 2
|-CXXMethodDecl 0x55c24f482810 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55c24f4826f8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55c24f482778 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55c24f482968 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55c24f4828d8 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55c24f482ba8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55c24f482a28 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55c24f482aa0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55c24f482c58 <col:20>
| `-OptimizeNoneAttr 0x55c24f482cb0 <col:30>
|-CXXMethodDecl 0x55c24f482db8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55c24f482cf0 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55c24f482e60 <col:20>
| `-OptimizeNoneAttr 0x55c24f482eb8 <col:30>
|-CXXMethodDecl 0x55c24f482f08 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55c24f482fd0 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55c24f4830e8 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55c24f483170 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55c24f4831f8 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55c24f483280 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55c24f483308 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55c24f483398 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55c24f483458 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55c24f4834e0 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55c24f483568 <line:64:5, col:28> col:23 used PULL 'const char []' static
|-VarDecl 0x55c24f4835f0 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55c24f483678 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55c24f483700 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55c24f483790 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55c24f483850 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55c24f4838e0 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55c24f483a30 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55c24f483998 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55c24f483bc0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55c24f483af0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55c24f483e70 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55c24f483c78 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55c24f483cf8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55c24f483d78 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55c24f483f28 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55c24f484030 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55c24f4842c0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f484010 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55c24f483ff0 <col:33> 'int' 0
| |-EnumConstantDecl 0x55c24f4840c0 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55c24f4842d8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f4840a0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55c24f484080 <col:32> 'int' 20
| |-EnumConstantDecl 0x55c24f484150 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55c24f4842f0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f484130 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55c24f484110 <col:38> 'int' 90
| |-EnumConstantDecl 0x55c24f4841e0 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55c24f484308 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f4841c0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55c24f4841a0 <col:35> 'int' 100
| `-EnumConstantDecl 0x55c24f484270 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55c24f484320 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c24f484250 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55c24f484230 <col:32> 'int' 2000
|-CXXMethodDecl 0x55c24f484360 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55c24f4847a0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55c24f484610 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55c24f484688 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c24f484870 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55c24f4849f0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55c24f484920 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c24f484bf8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55c24f484aa8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55c24f484b20 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c24f484cf8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55c24f484d98 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55c24f484e60 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55c24f484ef0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55c24f485120 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f484ed0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55c24f484eb0 <col:36> 'int' EnumConstant 0x55c24f484e60 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55c24f484f40 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55c24f484f90 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55c24f484fe0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55c24f485030 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55c24f485080 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55c24f4850d0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55c24f485208 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55c24f485148 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55c24f4852d0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55c24f485390 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55c24f485450 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55c24f485510 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55c24f485628 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55c24f4856f0 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x55c24f485870 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55c24f4857a0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55c24f485998 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55c24f485b98 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55c24f485a48 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55c24f485ac8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55c24f4934e8 <col:54, line:127:5>
|   |-ParenExpr 0x55c24f493398 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55c24f493368 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55c24f493058 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55c24f493030 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55c24f493018 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55c24f493000 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55c24f492fd0 <col:31> 'Router *' lvalue ->_router 0x55c24f490eb0
|   |   |         `-CXXThisExpr 0x55c24f492fc0 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55c24f4930b8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c24f493098 <col:48> 'int' 0
|   |   `-CallExpr 0x55c24f4932c8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55c24f4932b0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c24f493290 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c24efbbea0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c24f493308 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f493128 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55c24f493320 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f493148 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55c24f493338 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c24f493180 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55c24f493350 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c24f493278 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c24f493260 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c24f493218 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55c24f493430 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55c24f4933c8 <col:9> 'Router *' lvalue ->_router 0x55c24f490eb0
|   | | `-CXXThisExpr 0x55c24f4933b8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55c24f493418 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c24f4933f8 <col:19> 'Router *' lvalue ParmVar 0x55c24f485a48 'r' 'Router *'
|   `-BinaryOperator 0x55c24f4934c8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55c24f493460 <col:9> 'int' lvalue ->_eindex 0x55c24f490f18
|     | `-CXXThisExpr 0x55c24f493450 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55c24f4934b0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55c24f493490 <col:19> 'int' lvalue ParmVar 0x55c24f485ac8 'eindex' 'int'
|-CXXMethodDecl 0x55c24f485d20 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55c24f485c58 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55c24f485df0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55c24f485eb8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55c24f485f58 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55c24f4861a8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55c24f486020 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55c24f4860a0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55c24f486258 <col:20>
| `-OptimizeNoneAttr 0x55c24f4862b0 <col:30>
|-CXXMethodDecl 0x55c24f4863b8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55c24f4862f0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55c24f486460 <col:20>
| `-OptimizeNoneAttr 0x55c24f4864b8 <col:30>
|-CXXMethodDecl 0x55c24f486588 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55c24f4864f8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55c24f486630 <col:20>
| `-OptimizeNoneAttr 0x55c24f486688 <col:30>
|-CXXMethodDecl 0x55c24f486818 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55c24f4866c0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55c24f486740 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55c24f4869a8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55c24f4868e0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55c24f486af8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55c24f486a68 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55c24f486c48 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55c24f486bb8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55c24f486d98 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55c24f486d08 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55c24f487058 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55c24f486e50 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55c24f486ed0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55c24f486f78 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55c24f487130 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55c24f4871f0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55c24f4874c0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55c24f487370 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55c24f4873e8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55c24f4875e8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55c24f4877c0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55c24f4876a0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55c24f487720 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55c24f4879a8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55c24f487888 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55c24f487908 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55c24f487d18 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55c24f487a68 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55c24f487ae0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55c24f487b60 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55c24f492ad0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55c24f492ab0 <col:106> 'int' 0
| `-ParmVarDecl 0x55c24f487bd8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55c24f492b08 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55c24f492ae8 <col:126> 'int' 0
|-CXXMethodDecl 0x55c24f4880b8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55c24f487de8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55c24f487e80 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55c24f487f00 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55c24f487f78 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55c24f492b40 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55c24f492b20 <col:114> 'int' 0
|-CXXMethodDecl 0x55c24f488448 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55c24f488190 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55c24f488208 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55c24f488288 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55c24f492b58 <col:96> 'int' 0
| `-ParmVarDecl 0x55c24f488300 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55c24f492b98 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55c24f492b78 <col:116> 'int' 0
|-CXXMethodDecl 0x55c24f4887c8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55c24f488518 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55c24f488590 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55c24f488610 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55c24f492bd0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55c24f492bb0 <col:109> 'int' 0
| `-ParmVarDecl 0x55c24f488688 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55c24f492c08 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55c24f492be8 <col:129> 'int' 0
|-CXXMethodDecl 0x55c24f488b48 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55c24f488898 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55c24f488910 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55c24f488990 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55c24f488a08 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55c24f492c40 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55c24f492c20 <col:117> 'int' 0
|-CXXMethodDecl 0x55c24f488ed8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55c24f488c20 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c24f488c98 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55c24f488d18 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55c24f492c58 <col:99> 'int' 0
| `-ParmVarDecl 0x55c24f488d90 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55c24f492c98 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55c24f492c78 <col:119> 'int' 0
|-CXXMethodDecl 0x55c24f4892f8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55c24f488fa8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55c24f489028 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55c24f4890a0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55c24f489120 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55c24f492cd0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55c24f492cb0 <col:108> 'int' 0
| `-ParmVarDecl 0x55c24f4891a0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55c24f492d08 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55c24f492ce8 <col:141> 'int' 0
|-CXXMethodDecl 0x55c24f489718 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55c24f4893d0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55c24f489450 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55c24f4894c8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55c24f489548 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55c24f4895c8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55c24f492d20 <col:121> 'int' 0
|-CXXMethodDecl 0x55c24f489b48 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55c24f4897f8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55c24f489878 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55c24f4898f0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55c24f489970 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55c24f492d40 <col:98> 'int' 0
| `-ParmVarDecl 0x55c24f4899f0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55c24f492d60 <col:123> 'int' 0
|-CXXMethodDecl 0x55c24f489e10 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55c24f489c20 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55c24f489ca0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55c24f489d20 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55c24f492d80 <col:80> 'int' 0
|-EnumDecl 0x55c24f489ec8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55c24f489fd0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55c24f48a260 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f489fb0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55c24f489f90 <col:42> 'int' 1
| |-EnumConstantDecl 0x55c24f48a060 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55c24f48a278 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f48a040 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55c24f48a020 <col:40> 'int' 2
| |-EnumConstantDecl 0x55c24f48a0f0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55c24f48a290 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f48a0d0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55c24f48a0b0 <col:44> 'int' 4
| |-EnumConstantDecl 0x55c24f48a180 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55c24f48a2a8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f48a160 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55c24f48a140 <col:36> 'int' 7
| `-EnumConstantDecl 0x55c24f48a210 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55c24f48a2c0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c24f48a1f0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55c24f48a1d0 <col:34> 'int' 6
|-CXXMethodDecl 0x55c24f48a578 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55c24f48a2e8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55c24f48a388 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55c24f48a408 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55c24f48a480 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55c24f492e38 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55c24f492e20 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55c24f492e08 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55c24f492de8 <col:98, col:105> 'String' (CXXTemporary 0x55c24f492de8)
|           `-CXXTemporaryObjectExpr 0x55c24f492db0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55c24f48a818 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55c24f48a648 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55c24f48a6c0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55c24f48a738 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55c24f492ee8 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55c24f492ed0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55c24f492eb8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55c24f492e98 <col:94, col:101> 'String' (CXXTemporary 0x55c24f492e98)
| |         `-CXXTemporaryObjectExpr 0x55c24f492e60 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55c24f4936d0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55c24f493648 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55c24f493618 <col:9> '<bound member function type>' ->add_task_handlers 0x55c24f48a578
|     | `-CXXThisExpr 0x55c24f493608 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55c24f493688 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55c24f493588 <col:27> 'Task *' lvalue ParmVar 0x55c24f48a648 'task' 'Task *'
|     |-ImplicitCastExpr 0x55c24f4936a0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55c24f4935a8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55c24f48a6c0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55c24f4936b8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55c24f4935c8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55c24f48a210 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55c24f4935e8 <col:62> 'const String' lvalue ParmVar 0x55c24f48a738 'prefix' 'const String &'
|-CXXMethodDecl 0x55c24f48aa28 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55c24f48a8e0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55c24f48a958 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55c24f492f98 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55c24f492f80 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55c24f492f68 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55c24f492f48 <col:70, col:77> 'String' (CXXTemporary 0x55c24f492f48)
| |         `-CXXTemporaryObjectExpr 0x55c24f492f10 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55c24f4938a8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55c24f493820 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55c24f4937f0 <col:9> '<bound member function type>' ->add_task_handlers 0x55c24f48a578
|     | `-CXXThisExpr 0x55c24f4937e0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55c24f493860 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55c24f493760 <col:27> 'Task *' lvalue ParmVar 0x55c24f48a8e0 'task' 'Task *'
|     |-ImplicitCastExpr 0x55c24f493878 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55c24f493780 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55c24f493890 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55c24f4937a0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55c24f48a210 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55c24f4937c0 <col:57> 'const String' lvalue ParmVar 0x55c24f48a958 'prefix' 'const String &'
|-CXXMethodDecl 0x55c24f48ad08 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55c24f48aaf0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c24f48ab70 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c24f48abe8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55c24f48afb8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55c24f48add8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c24f48ae58 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c24f48aed8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55c24f48b2a8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55c24f48b088 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c24f48b108 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c24f48b180 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55c24f48b558 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55c24f48b378 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c24f48b3f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c24f48b478 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55c24f48b808 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55c24f48b628 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c24f48b6a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c24f48b728 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55c24f48bab8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55c24f48b8d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c24f48b958 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c24f48b9d0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55c24f48bd68 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55c24f48bb88 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c24f48bc08 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c24f48bc88 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55c24f48c078 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55c24f48be90 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c24f48bf10 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c24f48bf90 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55c24f48c358 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55c24f48c148 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c24f48c1c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c24f48c270 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55c24f48c638 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55c24f48c428 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c24f48c4a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c24f48c550 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55c24f48c8a0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55c24f48c708 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55c24f48c788 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55c24f48c800 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55c24f48cb48 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55c24f48c970 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55c24f48c9f0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55c24f48ca68 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55c24f48cdf8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55c24f48cc18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c24f48cc98 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c24f48cd18 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55c24f48d0a8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55c24f48cec8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c24f48cf48 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c24f48cfc0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55c24f48d358 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55c24f48d178 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c24f48d1f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c24f48d270 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55c24f48d628 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55c24f48d428 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c24f48d4a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55c24f48d548 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55c24f48d958 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55c24f48d6f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55c24f48d778 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55c24f48d7f0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55c24f48d868 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55c24f492fb0 <col:93> 'bool' false
|-CXXMethodDecl 0x55c24f48db40 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55c24f48da28 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55c24f48daa8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55c24f48dd18 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55c24f48dc00 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55c24f48dc80 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55c24f48dff8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55c24f48ddd8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55c24f48de50 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55c24f48ded0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55c24f48df48 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55c24f48e2e8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55c24f48e0c8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55c24f48e140 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55c24f48e1c0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55c24f48e238 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55c24f48e520 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55c24f48e3c0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55c24f48e440 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55c24f48e708 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55c24f48e5e8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55c24f48e668 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55c24f48e7b8 prev 0x55c24f485f58 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55c24f48e8b0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55c24f48e940 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55c24f48e9b8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55c24f48ea78 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55c24f48eb40 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55c24f48ecb8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55c24f48ebf0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55c24f48ed60 <col:24>
| | `-OptimizeNoneAttr 0x55c24f48edb8 <col:34>
| |-CXXMethodDecl 0x55c24f48ee00 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55c24f48f0b8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55c24f48eeb0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55c24f48ef28 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55c24f48efa8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55c24f48f170 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55c24f48f1a8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55c24f48f210 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55c24f48f298 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55c24f48f5b8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55c24f48f350 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55c24f48f3c8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55c24f48f440 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55c24f48f4c0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55c24f48f6d0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55c24f497048 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55c24f497048
| | `-ParmVarDecl 0x55c24f497158 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55c24f4971f8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55c24f4971f8
| | `-ParmVarDecl 0x55c24f497308 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55c24f49b1c0 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55c24f48f748 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55c24f48f7e8 <col:38> "" ""
|-CXXMethodDecl 0x55c24f48f878 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55c24f48f918 <col:44> "" ""
|-AccessSpecDecl 0x55c24f48f988 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55c24f48f9b0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55c24f48fab0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55c24f48fb00 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c24f48fa90 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55c24f48fa70 <col:27> 'int' 4
|-FieldDecl 0x55c24f48fbb8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55c24f48fd68 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55c24f48fe20 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55c24f490eb0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55c24f490f18 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55c24f491068 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55c24f490fa8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55c24f491218 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55c24f491128 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55c24f4913f8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55c24f4912d8 <col:20> col:23 'int'
| `-ParmVarDecl 0x55c24f491358 <col:25> col:28 'int'
|-CXXMethodDecl 0x55c24f4916a0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55c24f4914c0 <col:23> col:26 'int'
| |-ParmVarDecl 0x55c24f491540 <col:28> col:31 'int'
| `-ParmVarDecl 0x55c24f4915b8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55c24f491758 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55c24f491820 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55c24f491870 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55c24f4918c0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55c24f491aa0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55c24f491950 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55c24f4919c8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55c24f491d48 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55c24f491b68 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55c24f491be8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55c24f491c60 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55c24f491f68 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55c24f491e18 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55c24f491e98 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55c24f4922a0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55c24f492028 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55c24f4920a8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55c24f492120 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55c24f4921a0 <col:57> col:60 'int'
|-CXXMethodDecl 0x55c24f492488 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55c24f492370 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55c24f4923f0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55c24f4925d8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55c24f492548 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55c24f492958 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55c24f492698 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55c24f492718 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55c24f492790 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55c24f492810 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55c24f492a70 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class SimpleRRSched
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       108 |   int _next
           | [sizeof=112, dsize=112, align=8,
           |  nvsize=112, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c24f49a1b8 <../elements/simple/simplerrsched.hh:27:1, line:43:1> line:27:7 class SimpleRRSched definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55c24f49a318 <col:1, col:7> col:7 implicit referenced class SimpleRRSched
|-AccessSpecDecl 0x55c24f49a3a8 <col:40, col:46> col:40 public
|-CXXConstructorDecl 0x55c24f49a430 <line:29:5, col:19> col:5 SimpleRRSched 'void ()'
|-CXXDestructorDecl 0x55c24f49a520 <line:30:5, col:20> col:5 ~SimpleRRSched 'void ()' noexcept-unevaluated 0x55c24f49a520
| `-Overrides: [ 0x55c24f481aa8 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x55c24f49a650 <line:32:5, col:70> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55c24f482f08 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55c24f49aee0 <col:36, col:70>
|   `-ReturnStmt 0x55c24f49aed0 <col:38, col:45>
|     `-ImplicitCastExpr 0x55c24f49aeb8 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55c24f49ae88 <col:45> 'const char [22]' lvalue "SimpleRoundRobinSched"
|-CXXMethodDecl 0x55c24f49a718 <line:33:5, col:52> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x55c24f482fd0 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55c24f49af40 <col:36, col:52>
|   `-ReturnStmt 0x55c24f49af30 <col:38, col:45>
|     `-ImplicitCastExpr 0x55c24f49af18 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55c24f49aef8 <col:45> 'const char [4]' lvalue "-/1"
|-CXXMethodDecl 0x55c24f49a7e0 <line:34:5, col:51> col:17 processing 'const char *() const'
| |-Overrides: [ 0x55c24f483398 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x55c24f49afa0 <col:36, col:51>
|   `-ReturnStmt 0x55c24f49af90 <col:38, col:45>
|     `-ImplicitCastExpr 0x55c24f49af78 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x55c24f49af58 <col:45> 'const char []' lvalue Var 0x55c24f483568 'PULL' 'const char []'
|-CXXMethodDecl 0x55c24f49a8a8 <line:35:5, col:46> col:17 flags 'const char *() const'
| |-Overrides: [ 0x55c24f4838e0 Element::flags 'const char *() const' ]
| `-CompoundStmt 0x55c24f49b000 <col:31, col:46>
|   `-ReturnStmt 0x55c24f49aff0 <col:33, col:40>
|     `-ImplicitCastExpr 0x55c24f49afd8 <col:40> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55c24f49afb8 <col:40> 'const char [3]' lvalue "S0"
|-CXXMethodDecl 0x55c24f49a9f0 <line:37:5, col:26> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x55c24f481f08 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x55c24f49a960 <col:18, col:22> col:22 port 'int'
|-AccessSpecDecl 0x55c24f49aa98 <line:39:3, col:10> col:3 private
|-FieldDecl 0x55c24f49aad8 <line:41:5, col:9> col:9 referenced _next 'int'
|-CXXConstructorDecl 0x55c24f49ab58 <line:27:7> col:7 implicit SimpleRRSched 'void (const SimpleRRSched &)' inline default_delete noexcept-unevaluated 0x55c24f49ab58
| `-ParmVarDecl 0x55c24f49ac68 <col:7> col:7 'const SimpleRRSched &'
`-CXXMethodDecl 0x55c24f49ad08 <col:7> col:7 implicit operator= 'SimpleRRSched &(const SimpleRRSched &)' inline default_delete noexcept-unevaluated 0x55c24f49ad08
  `-ParmVarDecl 0x55c24f49ae18 <col:7> col:7 'const SimpleRRSched &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleRRSched = type { %class.Element.base, i32 }
  NonVirtualBaseLLVMType:%class.SimpleRRSched = type { %class.Element.base, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c24f240280 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c24f240398 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55c24f240428 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55c24f2404f8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55c24f2405e0 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55c24f2407f8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55c24f2406a0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c24f2409a8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55c24f2408b0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55c24f240af0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55c24f240a60 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55c24f240c38 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55c24f240ba8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c24f240d80 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55c24f240cf0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c24f240e48 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x55c24f240f90 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x55c24f240f00 <col:28> col:31 'int'
|-CXXMethodDecl 0x55c24f241058 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x55c24f2411a0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55c24f241110 <col:28> col:31 'int'
|-CXXMethodDecl 0x55c24f241318 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55c24f241258 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c24f241460 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55c24f2413d0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c24f241528 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55c24f2416e8 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55c24f2415d8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55c24f241650 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c24f241938 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55c24f2417a8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55c24f241820 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55c24f2419e8 <col:86> "" ""
|-CXXMethodDecl 0x55c24f241c58 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55c24f241ac8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55c24f241b40 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c24f241e08 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55c24f241d18 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55c24f241fb8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55c24f241ec0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55c24f242288 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55c24f242070 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55c24f2420e8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55c24f242160 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c24f242568 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55c24f242350 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55c24f2423c8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55c24f242440 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55c24f242620 <col:115> "" ""
|-AccessSpecDecl 0x55c24f242690 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55c24f2426c8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c24f243be0 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55c24f243be0
| `-ParmVarDecl 0x55c24f243ce8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55c24f243d88 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55c24f243d88
| `-ParmVarDecl 0x55c24f243e98 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55c24f2794c8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55c24f46b2c0 <col:7>
|-CXXConstructorDecl 0x55c24f2795a0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55c24f2795a0
| `-ParmVarDecl 0x55c24f2796b8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55c24f279728 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55c24f279728
| `-ParmVarDecl 0x55c24f279838 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55c24f46dcc0 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c24f459e68 prev 0x55c24f44f070 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c24f459f60 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55c24f45a050 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55c24f45a178 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55c24f45a2f8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55c24f45a478 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55c24f45a5f8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55c24f46b428 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55c24f46bc98 <col:11>
|-CXXDestructorDecl 0x55c24f46b500 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55c24f46b638 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55c24f46b638
| `-ParmVarDecl 0x55c24f46b748 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55c24f46b7e8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55c24f46b7e8
| `-ParmVarDecl 0x55c24f46b8f8 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55c24f46e6b8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55c24f46e7c8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55c24f46ea48 <col:11>
|   `-ReturnStmt 0x55c24f46ea38 <col:11>
|     `-UnaryOperator 0x55c24f46ea20 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55c24f46ea10 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55c24f46e838 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55c24f46e838
  `-ParmVarDecl 0x55c24f46e948 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c24f45a660 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c24f45a778 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55c24f45a818 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55c24f45a880 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55c24f45a8e8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55c24f45a950 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55c24f45a9b0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55c24f45aa70 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55c24f45aad0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55c24f45ab30 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55c24f46b338 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55c24f45a818 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55c24f46bca8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55c24f46bd00 <col:12>
|-CXXConstructorDecl 0x55c24f46b968 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55c24f46b968
| `-ParmVarDecl 0x55c24f46ba78 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55c24f46bb18 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55c24f46bb18
| `-ParmVarDecl 0x55c24f46bc28 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55c24f46dda0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c24f448780 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c24f448898 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55c24f448928 <col:16, col:22> col:16 public
|-EnumDecl 0x55c24f448950 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55c24f448a50 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55c24f448b30 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f448a30 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55c24f448a10 <col:21> 'int' 28
| `-EnumConstantDecl 0x55c24f448ae0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55c24f448b48 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c24f448ac0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55c24f448aa0 <col:22> 'int' 64
|-CXXMethodDecl 0x55c24f448e88 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55c24f448b70 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55c24f448bf0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55c24f448c68 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55c24f448ce0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55c24f448f48 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55c24f449148 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55c24f448fc0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55c24f449038 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55c24f4491f8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55c24f449358 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55c24f449268 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55c24f449400 <col:72> warn_unused_result ""
|-TypedefDecl 0x55c24f449760 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55c24f4496f0 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55c24f449690 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55c24f449650 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55c24ef222d0 'void'
|       |-PointerType 0x55c24f1c8b20 'unsigned char *'
|       | `-BuiltinType 0x55c24ef223d0 'unsigned char'
|       |-TypedefType 0x55c24efc5090 'size_t' sugar
|       | |-Typedef 0x55c24ef92b20 'size_t'
|       | `-BuiltinType 0x55c24ef22430 'unsigned long'
|       `-PointerType 0x55c24ef22ad0 'void *'
|         `-BuiltinType 0x55c24ef222d0 'void'
|-CXXMethodDecl 0x55c24f449bd8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55c24f4497d0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55c24f449848 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55c24f4498e0 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55c24f449960 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55c24f4642d0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55c24f4642b8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55c24f464280 <col:58> 'int' 0
| |-ParmVarDecl 0x55c24f4499e0 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55c24f4642f8 <col:76> 'int' 0
| |-ParmVarDecl 0x55c24f449a60 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55c24f464318 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55c24f449ca8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55c24f449d28 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55c24f449de8 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55c24f449e88 <col:20>
| `-OptimizeNoneAttr 0x55c24f449ee0 <col:30>
|-CXXMethodDecl 0x55c24f449f58 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55c24f449ff8 <col:20>
| `-OptimizeNoneAttr 0x55c24f44a050 <col:30>
|-CXXMethodDecl 0x55c24f44a0c8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55c24f44a168 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55c24f44a218 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55c24f44a2b8 <col:20>
| |-OptimizeNoneAttr 0x55c24f44a310 <col:30>
| `-WarnUnusedResultAttr 0x55c24f44a338 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55c24f44a390 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55c24f44a430 <col:20>
| `-OptimizeNoneAttr 0x55c24f44a488 <col:30>
|-CXXMethodDecl 0x55c24f44a4d8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55c24f44a578 <col:20>
| `-OptimizeNoneAttr 0x55c24f44a5d0 <col:30>
|-CXXMethodDecl 0x55c24f44a618 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55c24f44a6b8 <col:20>
| `-OptimizeNoneAttr 0x55c24f44a710 <col:30>
|-CXXMethodDecl 0x55c24f44a758 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55c24f44a818 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55c24f44a8e0 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55c24f44a9a8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55c24f44aa68 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55c24f44ab88 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55c24f4643e0 <col:54, line:99:5>
|   `-ReturnStmt 0x55c24f4643d0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55c24f4643b8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55c24f464388 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55c24f45ae68
|         `-CXXThisExpr 0x55c24f464378 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55c24f44ad28 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55c24f44ac38 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55c24f464490 <col:67, line:103:5>
|   `-BinaryOperator 0x55c24f464470 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55c24f464408 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55c24f45ae68
|     | `-CXXThisExpr 0x55c24f4643f8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55c24f464458 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55c24f464438 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55c24f44ac38 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55c24f44ae20 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55c24f464510 <col:33, line:107:5>
|   `-ReturnStmt 0x55c24f464500 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55c24f4644e8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55c24f4644b8 <col:16> 'void *' lvalue ->_destructor_argument 0x55c24f45aed0
|         `-CXXThisExpr 0x55c24f4644a8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55c24f44aee0 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55c24f464b40 <col:25, line:113:5>
|   |-ParenExpr 0x55c24f464888 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55c24f464858 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55c24f4645c8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55c24f4645a0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55c24f464568 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55c24f464538 <col:24> '<bound member function type>' ->shared 0x55c24f449f58
|   |   |       `-ImplicitCastExpr 0x55c24f464588 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55c24f464528 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55c24f464628 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c24f464608 <col:42> 'int' 0
|   |   `-CallExpr 0x55c24f4647b8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55c24f4647a0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c24f464780 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c24efbbea0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c24f4647f8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f464698 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55c24f464810 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f4646c0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c24f464828 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c24f4646f8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55c24f464840 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c24f464768 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c24f464750 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c24f464718 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55c24f464a88 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55c24f4648b8 <col:2> 'unsigned char *' lvalue ->_head 0x55c24f45ac70
|   | | `-CXXThisExpr 0x55c24f4648a8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55c24f464a70 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55c24f464a50 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55c24f4648f8 <col:10> 'unsigned char *' lvalue ->_data 0x55c24f45acd8
|   |     | `-CXXThisExpr 0x55c24f4648e8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55c24f464a38 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55c24f464a18 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55c24f464938 <col:18> 'unsigned char *' lvalue ->_tail 0x55c24f45ad40
|   |         | `-CXXThisExpr 0x55c24f464928 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55c24f464a00 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55c24f4649e0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55c24f464978 <col:26> 'unsigned char *' lvalue ->_end 0x55c24f45ada8
|   |             | `-CXXThisExpr 0x55c24f464968 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55c24f4649c8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55c24f4649a8 <col:33> 'int' 0
|   `-BinaryOperator 0x55c24f464b20 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55c24f464ab8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55c24f45ae68
|     | `-CXXThisExpr 0x55c24f464aa8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55c24f464b08 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55c24f464ae8 <col:16> 'int' 0
|-CXXMethodDecl 0x55c24f44b020 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55c24f44af90 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55c24f44b0c8 <col:20>
| |-OptimizeNoneAttr 0x55c24f44b120 <col:30>
| `-WarnUnusedResultAttr 0x55c24f44b148 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55c24f44b218 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55c24f44b188 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55c24f44b2c0 <col:20>
| |-OptimizeNoneAttr 0x55c24f44b318 <col:30>
| `-WarnUnusedResultAttr 0x55c24f44b340 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55c24f44b478 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55c24f44b380 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55c24f44b520 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55c24f44b620 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55c24f44b590 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55c24f44b6c8 <col:20>
| `-OptimizeNoneAttr 0x55c24f44b720 <col:30>
|-CXXMethodDecl 0x55c24f44b7e8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55c24f44b758 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55c24f44b890 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55c24f44b990 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55c24f44b900 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55c24f44ba38 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55c24f44bb38 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55c24f44baa8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55c24f44bbe0 <col:20>
| `-OptimizeNoneAttr 0x55c24f44bc38 <col:30>
|-CXXMethodDecl 0x55c24f44bdc8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55c24f44bc78 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55c24f44bcf0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55c24f464338 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55c24f44be78 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55c24f44c078 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55c24f44bef0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55c24f44bf68 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c24f44c288 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55c24f44c138 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55c24f44c1b0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c24f44c498 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55c24f44c348 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55c24f44c3c8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55c24f464348 <col:39> 'int' 0
|-CXXMethodDecl 0x55c24f44c568 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55c24f44c630 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55c24f44c6f8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55c24f44c7b8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55c24f44c880 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55c24f44c9c8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55c24f44c938 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55c24f44cb98 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55c24f44ca88 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55c24f44cb00 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c24f44cc68 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55c24f44cd28 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55c24f44cdc8 <col:20>
| `-OptimizeNoneAttr 0x55c24f44ce20 <col:30>
|-CXXMethodDecl 0x55c24f44ce70 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55c24f44cf10 <col:20>
| `-OptimizeNoneAttr 0x55c24f44cf68 <col:30>
|-CXXMethodDecl 0x55c24f44cfb8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55c24f44d078 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55c24f44d140 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55c24f44d1e0 <col:20>
| `-OptimizeNoneAttr 0x55c24f44d238 <col:30>
|-CXXMethodDecl 0x55c24f44d388 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55c24f44d278 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55c24f44d2f0 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c24f44d4d8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55c24f44d448 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c24f44d5b0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55c24f44d670 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55c24f44d710 <col:20>
| `-OptimizeNoneAttr 0x55c24f44d768 <col:30>
|-CXXMethodDecl 0x55c24f44d7b8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55c24f44d858 <col:20>
| `-OptimizeNoneAttr 0x55c24f44d8b0 <col:30>
|-CXXMethodDecl 0x55c24f44d900 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55c24f44d9c8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55c24f44da68 <col:20>
| `-OptimizeNoneAttr 0x55c24f44dac0 <col:30>
|-CXXMethodDecl 0x55c24f44db08 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55c24f44dc28 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55c24f44dd98 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55c24f44dcd8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55c24f44de88 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55c24f44df28 <col:20>
| `-OptimizeNoneAttr 0x55c24f44df80 <col:30>
|-CXXMethodDecl 0x55c24f44dfd0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55c24f44e090 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55c24f44e2c8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55c24f44e140 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55c24f44e1b8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55c24f44e378 <col:20>
| `-OptimizeNoneAttr 0x55c24f44e3d0 <col:30>
|-CXXMethodDecl 0x55c24f44e478 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55c24f44e518 <col:20>
| `-OptimizeNoneAttr 0x55c24f44e570 <col:30>
|-CXXMethodDecl 0x55c24f44e5c0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55c24f44e660 <col:20>
| `-OptimizeNoneAttr 0x55c24f44e6b8 <col:30>
|-CXXMethodDecl 0x55c24f44e700 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55c24f44e7a0 <col:20>
| `-OptimizeNoneAttr 0x55c24f44e7f8 <col:30>
|-CXXMethodDecl 0x55c24f44e8f8 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55c24f44e830 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55c24f44e9a0 <col:20>
| `-OptimizeNoneAttr 0x55c24f44e9f8 <col:30>
|-CXXMethodDecl 0x55c24f44ebb8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55c24f44ea30 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55c24f44eaa8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55c24f44ec68 <col:20>
| `-OptimizeNoneAttr 0x55c24f44ecc0 <col:30>
|-CXXMethodDecl 0x55c24f44ed68 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55c24f44ee88 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55c24f44efa8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55c24f44f048 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55c24f44f070 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55c24f44f198 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55c24f44f238 <col:20>
| `-OptimizeNoneAttr 0x55c24f44f290 <col:30>
|-CXXMethodDecl 0x55c24f44f338 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55c24f44f3d8 <col:20>
| `-OptimizeNoneAttr 0x55c24f44f430 <col:30>
|-AccessSpecDecl 0x55c24f44f458 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55c24f44f480 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55c24f44f580 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55c24f44f5d0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c24f44f560 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55c24f44f540 <col:14> 'int' 48
|-CXXMethodDecl 0x55c24f44f638 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55c24f44f6d8 <col:20>
| `-OptimizeNoneAttr 0x55c24f44f730 <col:30>
|-CXXMethodDecl 0x55c24f44f7a8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55c24f44f848 <col:20>
| `-OptimizeNoneAttr 0x55c24f44f8a0 <col:30>
|-CXXMethodDecl 0x55c24f44f968 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55c24f44f8d8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55c24f44fb08 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55c24f44fca8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55c24f44fbb8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55c24f44fd50 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55c24f44fe50 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55c24f450200 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f44fe30 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55c24f44fe10 <col:9> 'int' 0
| |-EnumConstantDecl 0x55c24f44fee0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55c24f450218 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f44fec0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55c24f44fea0 <col:14> 'int' 1
| |-EnumConstantDecl 0x55c24f44ff70 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55c24f450230 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f44ff50 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55c24f44ff30 <col:14> 'int' 2
| |-EnumConstantDecl 0x55c24f450000 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55c24f450248 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f44ffe0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55c24f44ffc0 <col:14> 'int' 3
| |-EnumConstantDecl 0x55c24f450090 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55c24f450260 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f450070 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55c24f450050 <col:13> 'int' 4
| |-EnumConstantDecl 0x55c24f450120 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55c24f450278 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f450100 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55c24f4500e0 <col:13> 'int' 5
| `-EnumConstantDecl 0x55c24f4501b0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55c24f450290 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c24f450190 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55c24f450170 <col:14> 'int' 6
|-CXXMethodDecl 0x55c24f4502f8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55c24f450398 <col:20>
| `-OptimizeNoneAttr 0x55c24f4503f0 <col:30>
|-CXXMethodDecl 0x55c24f4504e8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55c24f450428 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55c24f450590 <col:20>
| `-OptimizeNoneAttr 0x55c24f4505e8 <col:30>
|-CXXMethodDecl 0x55c24f450658 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55c24f450780 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55c24f4508f8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55c24f450830 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55c24f4509c0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55c24f450a88 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55c24f450bc8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55c24f450b38 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55c24f450c70 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55c24f450d70 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55c24f450f70 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f450d50 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55c24f450d30 <col:23> 'int' 0
| |-EnumConstantDecl 0x55c24f450e00 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55c24f450f88 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f450de0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55c24f450dc0 <col:45> 'int' 4
| |-EnumConstantDecl 0x55c24f450e90 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55c24f450fa0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f450e70 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55c24f450e50 <col:24> 'int' 0
| `-EnumConstantDecl 0x55c24f450f20 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55c24f450fb8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c24f450f00 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55c24f450ee0 <col:47> 'int' 16
|-CXXMethodDecl 0x55c24f451018 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55c24f451188 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55c24f4510c8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55c24f451230 <col:20>
| `-OptimizeNoneAttr 0x55c24f451288 <col:30>
|-CXXMethodDecl 0x55c24f4512d8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55c24f464c60 <col:18, col:36>
|   `-ReturnStmt 0x55c24f464c50 <col:20, col:33>
|     `-ImplicitCastExpr 0x55c24f464c38 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55c24f464c18 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55c24f464be8 <col:27> '<bound member function type>' ->xanno 0x55c24f44f338
|           `-CXXThisExpr 0x55c24f464bd8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55c24f4513d0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55c24f464d70 <col:30, col:48>
|   `-ReturnStmt 0x55c24f464d60 <col:32, col:45>
|     `-ImplicitCastExpr 0x55c24f464d48 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55c24f464d28 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55c24f464cf8 <col:39> '<bound member function type>' ->xanno 0x55c24f44f198
|           `-CXXThisExpr 0x55c24f464ce8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55c24f4514b8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55c24f464f08 <col:24, col:50>
|   `-ReturnStmt 0x55c24f464ef8 <col:26, col:47>
|     `-UnaryOperator 0x55c24f464ee0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55c24f464ec0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55c24f464ea8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55c24f464e58 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55c24f45a178
|         |   `-CXXMemberCallExpr 0x55c24f464e38 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55c24f464e08 <col:34> '<bound member function type>' ->xanno 0x55c24f44f338
|         |       `-CXXThisExpr 0x55c24f464df8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55c24f464e88 <col:46> 'int' 0
|-CXXMethodDecl 0x55c24f4515c0 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55c24f4650d8 <col:36, col:62>
|   `-ReturnStmt 0x55c24f4650c8 <col:38, col:59>
|     `-UnaryOperator 0x55c24f4650b0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55c24f465090 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55c24f465078 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55c24f464ff0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55c24f45a178
|         |   `-CXXMemberCallExpr 0x55c24f464fd0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55c24f464fa0 <col:46> '<bound member function type>' ->xanno 0x55c24f44f198
|         |       `-CXXThisExpr 0x55c24f464f90 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55c24f465020 <col:58> 'int' 0
|-CXXMethodDecl 0x55c24f4516d8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55c24f465270 <col:26, col:53>
|   `-ReturnStmt 0x55c24f465260 <col:28, col:50>
|     `-UnaryOperator 0x55c24f465248 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55c24f465228 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55c24f465210 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55c24f4651c0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55c24f45a478
|         |   `-CXXMemberCallExpr 0x55c24f4651a0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55c24f465170 <col:36> '<bound member function type>' ->xanno 0x55c24f44f338
|         |       `-CXXThisExpr 0x55c24f465160 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55c24f4651f0 <col:49> 'int' 0
|-CXXMethodDecl 0x55c24f4517f8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55c24f465448 <col:38, col:65>
|   `-ReturnStmt 0x55c24f465438 <col:40, col:62>
|     `-UnaryOperator 0x55c24f465420 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55c24f465400 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55c24f4653e8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55c24f465358 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55c24f45a478
|         |   `-CXXMemberCallExpr 0x55c24f465338 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55c24f465308 <col:48> '<bound member function type>' ->xanno 0x55c24f44f198
|         |       `-CXXThisExpr 0x55c24f4652f8 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55c24f465388 <col:61> 'int' 0
|-CXXMethodDecl 0x55c24f4519a8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55c24f4518b0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55c24f465b18 <col:34, line:463:5>
|   |-ParenExpr 0x55c24f465960 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55c24f465930 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55c24f465598 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c24f465568 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c24f4654b8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c24f4654a0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c24f465460 <col:23> 'int' lvalue ParmVar 0x55c24f4518b0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c24f465480 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c24f465548 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c24f465518 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c24f4654d8 <col:33> 'int' lvalue ParmVar 0x55c24f4518b0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55c24f465530 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55c24f4654f8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c24f44f580 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55c24f4655f8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c24f4655d8 <col:56> 'int' 0
|   |   `-CallExpr 0x55c24f465890 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55c24f465878 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c24f465858 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c24efbbea0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c24f4658d0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f4656e8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55c24f4658e8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f465718 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c24f465900 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c24f465750 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55c24f465918 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c24f465840 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c24f465828 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c24f4657e8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55c24f465b08 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55c24f465af0 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55c24f465ad0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55c24f465aa0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55c24f465a50 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55c24f45a178
|         |   `-CXXMemberCallExpr 0x55c24f465a30 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55c24f465a00 <col:9> '<bound member function type>' ->xanno 0x55c24f44f198
|         |       `-CXXThisExpr 0x55c24f4659f0 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55c24f465ab8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55c24f465a80 <col:21> 'int' lvalue ParmVar 0x55c24f4518b0 'i' 'int'
|-CXXMethodDecl 0x55c24f451bf8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55c24f451a68 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55c24f451ae0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55c24f4661a8 <col:40, line:472:5>
|   |-ParenExpr 0x55c24f465fc0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55c24f465f90 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55c24f465c70 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c24f465c40 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c24f465b90 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c24f465b78 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c24f465b38 <col:23> 'int' lvalue ParmVar 0x55c24f451a68 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c24f465b58 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c24f465c20 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c24f465bf0 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c24f465bb0 <col:33> 'int' lvalue ParmVar 0x55c24f451a68 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55c24f465c08 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55c24f465bd0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c24f44f580 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55c24f465cd0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c24f465cb0 <col:56> 'int' 0
|   |   `-CallExpr 0x55c24f465ef0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55c24f465ed8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c24f465eb8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c24efbbea0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c24f465f30 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f465d40 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55c24f465f48 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f465d70 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c24f465f60 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c24f465da8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55c24f465f78 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c24f465ea0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c24f465e88 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c24f465e48 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55c24f466188 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55c24f466130 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55c24f466100 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55c24f4660b0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55c24f45a178
|     | |   `-CXXMemberCallExpr 0x55c24f466090 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55c24f466060 <col:2> '<bound member function type>' ->xanno 0x55c24f44f338
|     | |       `-CXXThisExpr 0x55c24f466050 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55c24f466118 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55c24f4660e0 <col:14> 'int' lvalue ParmVar 0x55c24f451a68 'i' 'int'
|     `-ImplicitCastExpr 0x55c24f466170 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55c24f466150 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55c24f451ae0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55c24f451db8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55c24f451cc0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55c24f466928 <col:36, line:485:5>
|   |-ParenExpr 0x55c24f466690 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c24f466660 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c24f466340 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c24f466310 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c24f466220 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c24f466208 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c24f4661c8 <col:23> 'int' lvalue ParmVar 0x55c24f451cc0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c24f4661e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c24f4662f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c24f4662d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c24f466240 <col:33> 'int' lvalue ParmVar 0x55c24f451cc0 'i' 'int'
|   |   |     `-BinaryOperator 0x55c24f4662b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c24f4662a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c24f466260 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c24f44f580 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c24f466280 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55c24f4663a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c24f466380 <col:60> 'int' 0
|   |   `-CallExpr 0x55c24f4665c0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c24f4665a8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c24f466588 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c24efbbea0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c24f466600 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f466410 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55c24f466618 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f466448 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c24f466630 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c24f466480 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55c24f466648 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c24f466570 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c24f466558 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c24f466518 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55c24f466918 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55c24f466900 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55c24f4668e8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55c24f4668b8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55c24f466858 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55c24f466828 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55c24f4667a0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55c24f45a050
|             |   `-CXXMemberCallExpr 0x55c24f466780 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55c24f466750 <col:61> '<bound member function type>' ->xanno 0x55c24f44f198
|             |       `-CXXThisExpr 0x55c24f466740 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55c24f466840 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55c24f4667d0 <col:74> 'int' lvalue ParmVar 0x55c24f451cc0 'i' 'int'
|-CXXMethodDecl 0x55c24f452008 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55c24f451e78 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55c24f451ef0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55c24f467078 <col:42, line:500:5>
|   |-ParenExpr 0x55c24f466e10 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c24f466de0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c24f466ac0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c24f466a90 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c24f4669a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c24f466988 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c24f466948 <col:23> 'int' lvalue ParmVar 0x55c24f451e78 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c24f466968 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c24f466a70 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c24f466a58 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c24f4669c0 <col:33> 'int' lvalue ParmVar 0x55c24f451e78 'i' 'int'
|   |   |     `-BinaryOperator 0x55c24f466a38 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c24f466a20 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c24f4669e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c24f44f580 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c24f466a00 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55c24f466b20 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c24f466b00 <col:60> 'int' 0
|   |   `-CallExpr 0x55c24f466d40 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c24f466d28 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c24f466d08 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c24efbbea0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c24f466d80 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f466b90 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55c24f466d98 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f466bc8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c24f466db0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c24f466c00 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55c24f466dc8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c24f466cf0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c24f466cd8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c24f466c98 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55c24f467058 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55c24f467008 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55c24f466fd8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55c24f466f80 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55c24f466f50 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55c24f466f00 <col:48, col:57> 'char [48]' lvalue ->c 0x55c24f45a050
|     |     |   `-CXXMemberCallExpr 0x55c24f466ee0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55c24f466eb0 <col:48> '<bound member function type>' ->xanno 0x55c24f44f338
|     |     |       `-CXXThisExpr 0x55c24f466ea0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55c24f466f68 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55c24f466f30 <col:61> 'int' lvalue ParmVar 0x55c24f451e78 'i' 'int'
|     `-ImplicitCastExpr 0x55c24f467040 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55c24f467020 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55c24f451ef0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55c24f4521c8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55c24f4520d0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55c24f4677d8 <col:35, line:513:5>
|   |-ParenExpr 0x55c24f4674e8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c24f4674b8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c24f467210 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c24f4671e0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c24f4670f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c24f4670d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c24f467098 <col:23> 'int' lvalue ParmVar 0x55c24f4520d0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c24f4670b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c24f4671c0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c24f4671a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c24f467110 <col:33> 'int' lvalue ParmVar 0x55c24f4520d0 'i' 'int'
|   |   |     `-BinaryOperator 0x55c24f467188 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c24f467170 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c24f467130 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c24f44f580 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c24f467150 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55c24f467270 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c24f467250 <col:60> 'int' 0
|   |   `-CallExpr 0x55c24f467418 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c24f467400 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c24f4673e0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c24efbbea0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c24f467458 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f4672e0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55c24f467470 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f467318 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c24f467488 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c24f467350 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55c24f4674a0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c24f4673c8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c24f4673b0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c24f467370 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55c24f4677c8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55c24f4677b0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55c24f467798 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55c24f467768 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55c24f4676e0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55c24f4676b0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55c24f467660 <col:60, col:69> 'char const[48]' lvalue ->c 0x55c24f45a050
|             |   `-CXXMemberCallExpr 0x55c24f467640 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55c24f467610 <col:60> '<bound member function type>' ->xanno 0x55c24f44f198
|             |       `-CXXThisExpr 0x55c24f467600 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55c24f4676c8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55c24f467690 <col:73> 'int' lvalue ParmVar 0x55c24f4520d0 'i' 'int'
|-CXXMethodDecl 0x55c24f452418 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55c24f452288 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55c24f452300 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55c24f467ef8 <col:41, line:528:5>
|   |-ParenExpr 0x55c24f467c80 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c24f467c50 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c24f467970 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c24f467940 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c24f467850 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c24f467838 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c24f4677f8 <col:23> 'int' lvalue ParmVar 0x55c24f452288 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c24f467818 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c24f467920 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c24f467908 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c24f467870 <col:33> 'int' lvalue ParmVar 0x55c24f452288 'i' 'int'
|   |   |     `-BinaryOperator 0x55c24f4678e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c24f4678d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c24f467890 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c24f44f580 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c24f4678b0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55c24f4679d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c24f4679b0 <col:60> 'int' 0
|   |   `-CallExpr 0x55c24f467bb0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c24f467b98 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c24f467b78 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c24efbbea0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c24f467bf0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f467a40 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55c24f467c08 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f467a78 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c24f467c20 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c24f467ab0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55c24f467c38 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c24f467b60 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c24f467b48 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c24f467b08 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55c24f467ed8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55c24f467e88 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55c24f467e58 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55c24f467e00 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55c24f467dc0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55c24f467d70 <col:47, col:56> 'char [48]' lvalue ->c 0x55c24f45a050
|     |     |   `-CXXMemberCallExpr 0x55c24f467d50 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55c24f467d20 <col:47> '<bound member function type>' ->xanno 0x55c24f44f338
|     |     |       `-CXXThisExpr 0x55c24f467d10 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55c24f467dd8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55c24f467da0 <col:60> 'int' lvalue ParmVar 0x55c24f452288 'i' 'int'
|     `-ImplicitCastExpr 0x55c24f467ec0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55c24f467ea0 <col:65> 'int16_t':'short' lvalue ParmVar 0x55c24f452300 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55c24f4525d8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55c24f4524e0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55c24f4685c8 <col:36, line:541:5>
|   |-ParenExpr 0x55c24f468368 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c24f468338 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c24f468090 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c24f468060 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c24f467f70 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c24f467f58 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c24f467f18 <col:23> 'int' lvalue ParmVar 0x55c24f4524e0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c24f467f38 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c24f468040 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c24f468028 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c24f467f90 <col:33> 'int' lvalue ParmVar 0x55c24f4524e0 'i' 'int'
|   |   |     `-BinaryOperator 0x55c24f468008 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c24f467ff0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c24f467fb0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c24f44f580 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c24f467fd0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55c24f4680f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c24f4680d0 <col:60> 'int' 0
|   |   `-CallExpr 0x55c24f468298 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c24f468280 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c24f468260 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c24efbbea0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c24f4682d8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f468160 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55c24f4682f0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f468198 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c24f468308 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c24f4681d0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55c24f468320 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c24f468248 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c24f468230 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c24f4681f0 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55c24f4685b8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55c24f4685a0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55c24f468588 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55c24f468558 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55c24f468500 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55c24f4684d0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55c24f468480 <col:61, col:70> 'char const[48]' lvalue ->c 0x55c24f45a050
|             |   `-CXXMemberCallExpr 0x55c24f468460 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55c24f468430 <col:61> '<bound member function type>' ->xanno 0x55c24f44f198
|             |       `-CXXThisExpr 0x55c24f468420 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55c24f4684e8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55c24f4684b0 <col:74> 'int' lvalue ParmVar 0x55c24f4524e0 'i' 'int'
|-CXXMethodDecl 0x55c24f4527a8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55c24f452698 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55c24f452710 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55c24f452858 <col:20>
| `-OptimizeNoneAttr 0x55c24f4528b0 <col:30>
|-CXXMethodDecl 0x55c24f4529e8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55c24f4528f0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55c24f468c98 <col:35, line:562:5>
|   |-ParenExpr 0x55c24f468a38 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c24f468a08 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c24f468760 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c24f468730 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c24f468640 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c24f468628 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c24f4685e8 <col:23> 'int' lvalue ParmVar 0x55c24f4528f0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c24f468608 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c24f468710 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c24f4686f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c24f468660 <col:33> 'int' lvalue ParmVar 0x55c24f4528f0 'i' 'int'
|   |   |     `-BinaryOperator 0x55c24f4686d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c24f4686c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c24f468680 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c24f44f580 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c24f4686a0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55c24f4687c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c24f4687a0 <col:60> 'int' 0
|   |   `-CallExpr 0x55c24f468968 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c24f468950 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c24f468930 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c24efbbea0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c24f4689a8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f468830 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55c24f4689c0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f468868 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c24f4689d8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c24f4688a0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55c24f4689f0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c24f468918 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c24f468900 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c24f4688c0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55c24f468c88 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55c24f468c70 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55c24f468c58 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55c24f468c28 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55c24f468bd0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55c24f468ba0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55c24f468b50 <col:60, col:69> 'char const[48]' lvalue ->c 0x55c24f45a050
|             |   `-CXXMemberCallExpr 0x55c24f468b30 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55c24f468b00 <col:60> '<bound member function type>' ->xanno 0x55c24f44f198
|             |       `-CXXThisExpr 0x55c24f468af0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55c24f468bb8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55c24f468b80 <col:73> 'int' lvalue ParmVar 0x55c24f4528f0 'i' 'int'
|-CXXMethodDecl 0x55c24f452bf8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55c24f452aa8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55c24f452b20 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55c24f469378 <col:41, line:577:5>
|   |-ParenExpr 0x55c24f469108 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c24f4690d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c24f468e30 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c24f468e00 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c24f468d10 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c24f468cf8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c24f468cb8 <col:23> 'int' lvalue ParmVar 0x55c24f452aa8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c24f468cd8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c24f468de0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c24f468dc8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c24f468d30 <col:33> 'int' lvalue ParmVar 0x55c24f452aa8 'i' 'int'
|   |   |     `-BinaryOperator 0x55c24f468da8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c24f468d90 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c24f468d50 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c24f44f580 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c24f468d70 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55c24f468e90 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c24f468e70 <col:60> 'int' 0
|   |   `-CallExpr 0x55c24f469038 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c24f469020 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c24f469000 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c24efbbea0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c24f469078 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f468f00 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55c24f469090 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f468f38 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c24f4690a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c24f468f70 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55c24f4690c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c24f468fe8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c24f468fd0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c24f468f90 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55c24f469358 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55c24f469308 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55c24f4692d8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55c24f469278 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55c24f469248 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55c24f4691f8 <col:47, col:56> 'char [48]' lvalue ->c 0x55c24f45a050
|     |     |   `-CXXMemberCallExpr 0x55c24f4691d8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55c24f4691a8 <col:47> '<bound member function type>' ->xanno 0x55c24f44f338
|     |     |       `-CXXThisExpr 0x55c24f469198 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55c24f469260 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55c24f469228 <col:60> 'int' lvalue ParmVar 0x55c24f452aa8 'i' 'int'
|     `-ImplicitCastExpr 0x55c24f469340 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55c24f469320 <col:65> 'int32_t':'int' lvalue ParmVar 0x55c24f452b20 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55c24f452db8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55c24f452cc0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55c24f469aa8 <col:36, line:591:5>
|   |-ParenExpr 0x55c24f4697e8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c24f4697b8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c24f469510 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c24f4694e0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c24f4693f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c24f4693d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c24f469398 <col:23> 'int' lvalue ParmVar 0x55c24f452cc0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c24f4693b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c24f4694c0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c24f4694a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c24f469410 <col:33> 'int' lvalue ParmVar 0x55c24f452cc0 'i' 'int'
|   |   |     `-BinaryOperator 0x55c24f469488 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c24f469470 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c24f469430 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c24f44f580 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c24f469450 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55c24f469570 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c24f469550 <col:60> 'int' 0
|   |   `-CallExpr 0x55c24f469718 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c24f469700 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c24f4696e0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c24efbbea0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c24f469758 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f4695e0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55c24f469770 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f469618 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c24f469788 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c24f469650 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55c24f4697a0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c24f4696c8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c24f4696b0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c24f469670 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55c24f469a98 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55c24f469a80 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55c24f469a68 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55c24f469a38 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55c24f4699b0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55c24f469980 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55c24f469930 <col:61, col:70> 'char const[48]' lvalue ->c 0x55c24f45a050
|             |   `-CXXMemberCallExpr 0x55c24f469910 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55c24f4698e0 <col:61> '<bound member function type>' ->xanno 0x55c24f44f198
|             |       `-CXXThisExpr 0x55c24f4698d0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55c24f469998 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55c24f469960 <col:74> 'int' lvalue ParmVar 0x55c24f452cc0 'i' 'int'
|-CXXMethodDecl 0x55c24f453008 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55c24f452e78 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55c24f452ef0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55c24f46a188 <col:42, line:606:5>
|   |-ParenExpr 0x55c24f469f18 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55c24f469ee8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55c24f469c40 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c24f469c10 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c24f469b20 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c24f469b08 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c24f469ac8 <col:23> 'int' lvalue ParmVar 0x55c24f452e78 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c24f469ae8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c24f469bf0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55c24f469bd8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c24f469b40 <col:33> 'int' lvalue ParmVar 0x55c24f452e78 'i' 'int'
|   |   |     `-BinaryOperator 0x55c24f469bb8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c24f469ba0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c24f469b60 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c24f44f580 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55c24f469b80 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55c24f469ca0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c24f469c80 <col:60> 'int' 0
|   |   `-CallExpr 0x55c24f469e48 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55c24f469e30 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c24f469e10 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c24efbbea0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c24f469e88 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f469d10 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55c24f469ea0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f469d48 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c24f469eb8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c24f469d80 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55c24f469ed0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c24f469df8 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c24f469de0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c24f469da0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55c24f46a168 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55c24f46a118 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55c24f46a0e8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55c24f46a088 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55c24f46a058 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55c24f46a008 <col:48, col:57> 'char [48]' lvalue ->c 0x55c24f45a050
|     |     |   `-CXXMemberCallExpr 0x55c24f469fe8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55c24f469fb8 <col:48> '<bound member function type>' ->xanno 0x55c24f44f338
|     |     |       `-CXXThisExpr 0x55c24f469fa8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55c24f46a070 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55c24f46a038 <col:61> 'int' lvalue ParmVar 0x55c24f452e78 'i' 'int'
|     `-ImplicitCastExpr 0x55c24f46a150 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55c24f46a130 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55c24f452ef0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55c24f4531a0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55c24f4530d0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55c24f46a9f8 <col:33, line:620:5>
|   |-ParenExpr 0x55c24f46a770 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55c24f46a740 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55c24f46a390 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c24f46a360 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c24f46a200 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c24f46a1e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c24f46a1a8 <col:23> 'int' lvalue ParmVar 0x55c24f4530d0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c24f46a1c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c24f46a340 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55c24f46a328 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c24f46a220 <col:33> 'int' lvalue ParmVar 0x55c24f4530d0 'i' 'int'
|   |   |     `-BinaryOperator 0x55c24f46a308 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c24f46a2f0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c24f46a240 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c24f44f580 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55c24f46a2c8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55c24f46a2b0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55c24f46a278 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55c24f46a3f0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c24f46a3d0 <col:79> 'int' 0
|   |   `-CallExpr 0x55c24f46a6a0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55c24f46a688 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c24f46a668 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c24efbbea0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c24f46a6e0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f46a4d8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55c24f46a6f8 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f46a520 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c24f46a710 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c24f46a558 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55c24f46a728 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c24f46a650 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c24f46a638 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c24f46a5f8 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55c24f46a9e8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55c24f46a9d0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55c24f46a9b8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55c24f46a988 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55c24f46a900 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55c24f46a8d0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55c24f46a880 <col:67, col:76> 'char const[48]' lvalue ->c 0x55c24f45a050
|             |   `-CXXMemberCallExpr 0x55c24f46a860 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55c24f46a830 <col:67> '<bound member function type>' ->xanno 0x55c24f44f198
|             |       `-CXXThisExpr 0x55c24f46a820 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55c24f46a8e8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55c24f46a8b0 <col:80> 'int' lvalue ParmVar 0x55c24f4530d0 'i' 'int'
|-CXXMethodDecl 0x55c24f4533b8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55c24f453260 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55c24f4532e0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55c24f46b220 <col:45, line:635:5>
|   |-ParenExpr 0x55c24f46af68 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55c24f46af38 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55c24f46ac00 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55c24f46abd0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55c24f46aa70 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55c24f46aa58 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55c24f46aa18 <col:23> 'int' lvalue ParmVar 0x55c24f453260 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55c24f46aa38 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55c24f46abb0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55c24f46ab98 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55c24f46aa90 <col:33> 'int' lvalue ParmVar 0x55c24f453260 'i' 'int'
|   |   |     `-BinaryOperator 0x55c24f46ab78 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55c24f46ab60 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55c24f46aab0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55c24f44f580 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55c24f46ab38 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55c24f46ab20 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55c24f46aae8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55c24f46ac60 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55c24f46ac40 <col:79> 'int' 0
|   |   `-CallExpr 0x55c24f46ae98 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55c24f46ae80 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55c24f46ae60 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c24efbbea0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55c24f46aed8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f46acd0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55c24f46aef0 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55c24f46ad18 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55c24f46af08 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55c24f46ad50 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55c24f46af20 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55c24f46ae48 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55c24f46ae30 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55c24f46ade8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55c24f46b200 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55c24f46b168 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55c24f46b138 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55c24f46b0d8 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55c24f46b0a8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55c24f46b058 <col:54, col:63> 'char [48]' lvalue ->c 0x55c24f45a050
|     |     |   `-CXXMemberCallExpr 0x55c24f46b038 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55c24f46b008 <col:54> '<bound member function type>' ->xanno 0x55c24f44f338
|     |     |       `-CXXThisExpr 0x55c24f46aff8 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55c24f46b0c0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55c24f46b088 <col:67> 'int' lvalue ParmVar 0x55c24f453260 'i' 'int'
|     `-CXXConstCastExpr 0x55c24f46b1d0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55c24f46b1b8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55c24f46b180 <col:91> 'const void *' lvalue ParmVar 0x55c24f4532e0 'x' 'const void *'
|-CXXMethodDecl 0x55c24f453488 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55c24f46b2a8 <col:34, line:640:5>
|   `-ReturnStmt 0x55c24f46b298 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55c24f46b280 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55c24f46b250 <col:16> 'Packet *' lvalue ->_data_packet 0x55c24f45ac08
|         `-CXXThisExpr 0x55c24f46b240 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55c24f4535c8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55c24f453538 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55c24f464368 <col:46> 'bool' true
|-CXXMethodDecl 0x55c24f453748 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55c24f453680 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55c24f4537f0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55c24f453fa0 <line:660:22> "" ""
| |-EnumConstantDecl 0x55c24f4538f0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c24f454010 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f4538d0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55c24f4538b0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55c24f448a50 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55c24f453980 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c24f454028 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f453960 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55c24f453940 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55c24f448ae0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55c24f453a10 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c24f454040 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f4539f0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55c24f4539d0 <col:21> 'int' 0
| |-EnumConstantDecl 0x55c24f453aa0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c24f454058 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f453a80 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55c24f453a60 <col:19> 'int' 16
| |-EnumConstantDecl 0x55c24f453b30 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c24f454070 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f453b10 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55c24f453af0 <col:21> 'int' 16
| |-EnumConstantDecl 0x55c24f453bc0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c24f454088 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f453ba0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55c24f453b80 <col:19> 'int' 32
| |-EnumConstantDecl 0x55c24f453c50 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c24f4540a0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f453c30 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55c24f453c10 <col:19> 'int' EnumConstant 0x55c24f453aa0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55c24f453ce0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c24f4540b8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f453cc0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55c24f453ca0 <col:19> 'int' EnumConstant 0x55c24f453bc0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55c24f453db0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c24f4540d0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f453d90 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55c24f453d70 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55c24f453d30 <col:23> 'int' EnumConstant 0x55c24f453ce0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55c24f453d50 <col:40> 'int' 2
| |-EnumConstantDecl 0x55c24f453e80 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55c24f4540e8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55c24f453e60 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55c24f453e40 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55c24f453e00 <col:23> 'int' EnumConstant 0x55c24f453ce0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55c24f453e20 <col:40> 'int' 4
| `-EnumConstantDecl 0x55c24f453f50 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55c24f454100 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c24f453f30 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55c24f453f10 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55c24f453ed0 <col:23> 'int' EnumConstant 0x55c24f453ce0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55c24f453ef0 <col:40> 'int' 8
|-CXXMethodDecl 0x55c24f454140 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55c24f4541e0 <col:68> "" ""
|-CXXMethodDecl 0x55c24f454278 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55c24f454318 <col:45> "" ""
|-CXXMethodDecl 0x55c24f4543b0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55c24f454450 <col:57> "" ""
|-CXXMethodDecl 0x55c24f4544e8 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55c24f454588 <col:45> "" ""
|-CXXMethodDecl 0x55c24f454620 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55c24f4546c0 <col:57> "" ""
|-CXXMethodDecl 0x55c24f454750 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55c24f4547f0 <col:51> "" ""
|-CXXMethodDecl 0x55c24f454880 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55c24f454920 <col:63> "" ""
|-CXXMethodDecl 0x55c24f4549b0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55c24f454a50 <col:53> "" ""
|-CXXMethodDecl 0x55c24f454ae0 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55c24f454b80 <col:65> "" ""
|-CXXMethodDecl 0x55c24f454c98 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55c24f454c08 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55c24f454d40 <col:61> "" ""
|-CXXMethodDecl 0x55c24f454ed8 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55c24f454dc8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55c24f454e40 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55c24f454f88 <col:67> "" ""
|-CXXMethodDecl 0x55c24f4550a0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55c24f455010 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55c24f455148 <col:63> "" ""
|-CXXMethodDecl 0x55c24f4552e0 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55c24f4551d0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55c24f455248 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55c24f455390 <col:69> "" ""
|-CXXMethodDecl 0x55c24f4554a8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55c24f455418 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55c24f455550 <col:63> "" ""
|-CXXMethodDecl 0x55c24f457c28 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55c24f457b18 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55c24f457b90 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55c24f457cd8 <col:69> "" ""
|-CXXMethodDecl 0x55c24f457df0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55c24f457d60 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55c24f457e98 <col:62> "" ""
|-CXXMethodDecl 0x55c24f458030 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55c24f457f20 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55c24f457f98 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55c24f4580e0 <col:68> "" ""
|-CXXMethodDecl 0x55c24f4581f8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55c24f458168 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55c24f4582a0 <col:63> "" ""
|-CXXMethodDecl 0x55c24f458438 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55c24f458328 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55c24f4583a0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55c24f4584e8 <col:69> "" ""
|-CXXMethodDecl 0x55c24f458578 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55c24f458618 <col:64> "" ""
|-CXXMethodDecl 0x55c24f4586a8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55c24f458748 <col:52> "" ""
|-CXXMethodDecl 0x55c24f4587d8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55c24f458878 <col:67> "" ""
|-CXXMethodDecl 0x55c24f458908 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55c24f4589a8 <col:55> "" ""
|-CXXMethodDecl 0x55c24f458ac0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55c24f458a30 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55c24f458b68 <col:58> "" ""
|-CXXMethodDecl 0x55c24f458d00 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55c24f458bf0 <col:33> col:36 'int'
| |-ParmVarDecl 0x55c24f458c68 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55c24f458db0 <col:62> "" ""
|-CXXMethodDecl 0x55c24f458ec8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55c24f458e38 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55c24f458f70 <col:58> "" ""
|-CXXMethodDecl 0x55c24f459108 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55c24f458ff8 <col:33> col:36 'int'
| |-ParmVarDecl 0x55c24f459070 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55c24f4591b8 <col:62> "" ""
|-CXXMethodDecl 0x55c24f4592d0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55c24f459240 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55c24f459378 <col:60> "" ""
|-CXXMethodDecl 0x55c24f459510 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55c24f459400 <col:34> col:37 'int'
| |-ParmVarDecl 0x55c24f459478 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55c24f4595c0 <col:64> "" ""
|-CXXMethodDecl 0x55c24f4596d8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55c24f459648 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55c24f459780 <col:58> "" ""
|-CXXMethodDecl 0x55c24f459918 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55c24f459808 <col:33> col:36 'int'
| |-ParmVarDecl 0x55c24f459880 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55c24f4599c8 <col:62> "" ""
|-CXXMethodDecl 0x55c24f459ae0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55c24f459a50 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55c24f459b88 <col:59> "" ""
|-CXXMethodDecl 0x55c24f459d20 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55c24f459c10 <col:33> col:36 'int'
| |-ParmVarDecl 0x55c24f459c88 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55c24f459dd0 <col:63> "" ""
|-AccessSpecDecl 0x55c24f459e40 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55c24f459e68 prev 0x55c24f44f070 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55c24f459f60 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55c24f45a050 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55c24f45a178 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55c24f45a2f8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55c24f45a478 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55c24f45a5f8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55c24f46b428 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55c24f46bc98 <col:11>
| |-CXXDestructorDecl 0x55c24f46b500 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55c24f46b638 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55c24f46b638
| | `-ParmVarDecl 0x55c24f46b748 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55c24f46b7e8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55c24f46b7e8
| | `-ParmVarDecl 0x55c24f46b8f8 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55c24f46e6b8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55c24f46e7c8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55c24f46ea48 <col:11>
| |   `-ReturnStmt 0x55c24f46ea38 <col:11>
| |     `-UnaryOperator 0x55c24f46ea20 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55c24f46ea10 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55c24f46e838 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55c24f46e838
|   `-ParmVarDecl 0x55c24f46e948 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55c24f45a660 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55c24f45a778 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55c24f45a818 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55c24f45a880 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55c24f45a8e8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55c24f45a950 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55c24f45a9b0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55c24f45aa70 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55c24f45aad0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55c24f45ab30 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55c24f46b338 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55c24f45a818 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55c24f46bca8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55c24f46bd00 <col:12>
| |-CXXConstructorDecl 0x55c24f46b968 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55c24f46b968
| | `-ParmVarDecl 0x55c24f46ba78 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55c24f46bb18 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55c24f46bb18
| | `-ParmVarDecl 0x55c24f46bc28 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55c24f46dda0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55c24f45aba8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55c24f45ac08 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55c24f45ac70 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55c24f45acd8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55c24f45ad40 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55c24f45ada8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55c24f45ae08 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55c24f45ae68 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55c24f45aed0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55c24f45af58 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55c24f45aba8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55c24f46b2d0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55c24f45ae08 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55c24f46bd10 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55c24f46bd70 <col:21, line:755:5>
|-CXXConstructorDecl 0x55c24f45b0f8 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55c24f45b038 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55c24f45b1f0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55c24f45b3d8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55c24f45b2e0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55c24f45b6a8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55c24f45b490 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55c24f45b508 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55c24f45b580 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c24f45b8c8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55c24f45b778 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55c24f45b7f0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55c24f463ea8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55c24f45b988 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55c24f45ba00 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55c24f45ba78 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55c24f464000 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55c24f463f70 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55c24f464148 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55c24f4640b8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55c24f464240 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c24f255670 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55c24f255788 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55c24f255828 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55c24f255888 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55c24f2558e8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55c24f255998 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c24f255ca0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55c24f255db8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55c24f255e60 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55c24f255ec8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55c24f255f58 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55c24f25bff0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55c24f25c428 <col:12>
|-CXXConstructorDecl 0x55c24f25c0f8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55c24f25c208 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55c24f255e60 'data' 'const char *'
| | `-ImplicitCastExpr 0x55c24f25e9b0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55c24f25e980 <col:12> 'const char *const' lvalue .data 0x55c24f255e60
| |     `-DeclRefExpr 0x55c24f25e960 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c24f25c208 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55c24f255ec8 'length' 'int'
| | `-ImplicitCastExpr 0x55c24f25ea40 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55c24f25ea10 <col:12> 'const int' lvalue .length 0x55c24f255ec8
| |     `-DeclRefExpr 0x55c24f25e9f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c24f25c208 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55c24f255f58 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55c24f25ead0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55c24f25eaa0 <col:12> 'String::memo_t *const' lvalue .memo 0x55c24f255f58
| |     `-DeclRefExpr 0x55c24f25ea80 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c24f25c208 '' 'const String::rep_t &'
| `-CompoundStmt 0x55c24f25eb28 <col:12>
|-CXXConstructorDecl 0x55c24f25c2a8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55c24f25c2a8
| `-ParmVarDecl 0x55c24f25c3b8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55c24f261910 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55c24f26d328 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55c24f26d438 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55c24f26d950 <col:12>
|   |-BinaryOperator 0x55c24f26d768 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55c24f26d720 <col:12> 'const char *' lvalue ->data 0x55c24f255e60
|   | | `-CXXThisExpr 0x55c24f26d710 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55c24f26d750 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55c24f26d6e0 <col:12> 'const char *const' lvalue .data 0x55c24f255e60
|   |     `-DeclRefExpr 0x55c24f26d6c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c24f26d438 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55c24f26d830 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55c24f26d7e8 <col:12> 'int' lvalue ->length 0x55c24f255ec8
|   | | `-CXXThisExpr 0x55c24f26d7d8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55c24f26d818 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55c24f26d7a8 <col:12> 'const int' lvalue .length 0x55c24f255ec8
|   |     `-DeclRefExpr 0x55c24f26d788 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c24f26d438 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55c24f26d8f8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55c24f26d8b0 <col:12> 'String::memo_t *' lvalue ->memo 0x55c24f255f58
|   | | `-CXXThisExpr 0x55c24f26d8a0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55c24f26d8e0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55c24f26d870 <col:12> 'String::memo_t *const' lvalue .memo 0x55c24f255f58
|   |     `-DeclRefExpr 0x55c24f26d850 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c24f26d438 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55c24f26d940 <col:12>
|     `-UnaryOperator 0x55c24f26d928 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55c24f26d918 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55c24f26d4a8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55c24f26d4a8
  `-ParmVarDecl 0x55c24f26d5b8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55c24f24cbe0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55c24f24ccf8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55c24f24cd88 <col:16, col:22> col:16 public
|-TypedefDecl 0x55c24f24cdc8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55c24ef22dc0 'const char *'
|   `-QualType 0x55c24ef22311 'const char' const
|     `-BuiltinType 0x55c24ef22310 'char'
|-TypedefDecl 0x55c24f24ce50 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55c24f24ce20 'String::const_iterator' sugar
|   |-Typedef 0x55c24f24cdc8 'const_iterator'
|   `-PointerType 0x55c24ef22dc0 'const char *'
|     `-QualType 0x55c24ef22311 'const char' const
|       `-BuiltinType 0x55c24ef22310 'char'
|-TypedefDecl 0x55c24f24cfc0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55c24f24cf30 'int (String::*)() const'
|   |-RecordType 0x55c24f24cc70 'String'
|   | `-CXXRecord 0x55c24f24cbe0 'String'
|   `-ParenType 0x55c24f24ced0 'int () const' sugar
|     `-FunctionProtoType 0x55c24f220a60 'int () const' const cdecl
|       `-BuiltinType 0x55c24ef22370 'int'
|-TypedefDecl 0x55c24f24d028 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55c24f075640 'int64_t' sugar
|   |-Typedef 0x55c24ef8b2d0 'int64_t'
|   `-TypedefType 0x55c24ef644d0 '__int64_t' sugar
|     |-Typedef 0x55c24ef640a8 '__int64_t'
|     `-BuiltinType 0x55c24ef22390 'long'
|-TypedefDecl 0x55c24f24d090 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55c24f075560 'uint64_t' sugar
|   |-Typedef 0x55c24ef8b470 'uint64_t'
|   `-TypedefType 0x55c24ef64560 '__uint64_t' sugar
|     |-Typedef 0x55c24ef64118 '__uint64_t'
|     `-BuiltinType 0x55c24ef22430 'unsigned long'
|-TypedefDecl 0x55c24f24d120 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55c24f24d0f0 'String::intmax_t' sugar
|   |-Typedef 0x55c24f24d028 'intmax_t'
|   `-TypedefType 0x55c24f075640 'int64_t' sugar
|     |-Typedef 0x55c24ef8b2d0 'int64_t'
|     `-TypedefType 0x55c24ef644d0 '__int64_t' sugar
|       |-Typedef 0x55c24ef640a8 '__int64_t'
|       `-BuiltinType 0x55c24ef22390 'long'
|-TypedefDecl 0x55c24f24d1b0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55c24f24d180 'String::uintmax_t' sugar
|   |-Typedef 0x55c24f24d090 'uintmax_t'
|   `-TypedefType 0x55c24f075560 'uint64_t' sugar
|     |-Typedef 0x55c24ef8b470 'uint64_t'
|     `-TypedefType 0x55c24ef64560 '__uint64_t' sugar
|       |-Typedef 0x55c24ef64118 '__uint64_t'
|       `-BuiltinType 0x55c24ef22430 'unsigned long'
|-CXXConstructorDecl 0x55c24f24d270 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55c24f24d418 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55c24f24d358 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55c24f24d5c8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55c24f24d508 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55c24f24d720 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55c24f24d690 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55c24f24d938 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55c24f24d7e8 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55c24f24d868 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55c24f24db58 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55c24f24da08 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55c24f24da88 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55c24f24dd78 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55c24f24dc28 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55c24f24dca8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55c24f24df98 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55c24f24de48 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55c24f24dec8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55c24f24e128 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x55c24f24e060 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55c24f24e2a8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55c24f24e1e8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55c24f24e438 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55c24f24e370 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55c24f24e590 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55c24f24e500 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55c24f24e6e8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55c24f24e658 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55c24f24e840 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55c24f24e7b0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55c24f24e9c8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55c24f24e908 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55c24f24eb58 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55c24f24ea90 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55c24f24ece8 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55c24f24ec20 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55c24f24ee78 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55c24f24edb0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55c24f24ef70 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55c24f24f098 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55c24f24f218 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55c24f24f150 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55c24f24f368 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55c24f24f2d8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55c24f24f420 <col:63> "" ""
|-CXXMethodDecl 0x55c24f24f568 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55c24f24f4a8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55c24f24f778 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55c24f24f628 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55c24f24f6a8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55c24f24f998 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55c24f24f840 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55c24f24f8c0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55c24f24fc78 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55c24f24fa58 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55c24f24fad8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55c24f25bac0 <col:55> 'int' 10
| `-ParmVarDecl 0x55c24f24fb50 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55c24f25bae0 <col:76> 'bool' true
|-CXXMethodDecl 0x55c24f24ff58 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55c24f24fd40 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55c24f24fdc0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55c24f25baf0 <col:56> 'int' 10
| `-ParmVarDecl 0x55c24f24fe38 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55c24f25bb10 <col:77> 'bool' true
|-CXXMethodDecl 0x55c24f250060 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55c24f250128 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55c24f2501f0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55c24f250290 <col:20>
| `-OptimizeNoneAttr 0x55c24f2502e8 <col:30>
|-CXXConversionDecl 0x55c24f2503d8 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55c24f2504a8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55c24f250568 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55c24f250658 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55c24f250718 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55c24f250898 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55c24f2507d0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55c24f2509e8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55c24f250958 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55c24f250ad8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55c24f250b98 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55c24f250de8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55c24f250c50 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55c24f250cd0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55c24f251048 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55c24f250eb0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55c24f250f30 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55c24f251118 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55c24f251328 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55c24f2511d0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55c24f251250 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55c24f251548 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55c24f2513f0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55c24f251470 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55c24f2516d8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55c24f251610 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55c24f2517c8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55c24f251938 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55c24f251878 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55c24f251b48 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55c24f2519f8 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55c24f251a78 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55c24f251d60 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55c24f251c08 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55c24f251c80 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55c24f251ef0 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55c24f251e20 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55c24f252110 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55c24f251fb0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55c24f252030 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55c24f252260 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55c24f2521d0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55c24f252438 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55c24f252320 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55c24f2523a0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55c24f252588 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55c24f2524f8 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55c24f2527a0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55c24f252640 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55c24f2526c0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55c24f25bb20 <col:39> 'int' 0
|-CXXMethodDecl 0x55c24f2529c0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55c24f252860 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55c24f2528e0 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55c24f25bb40 <col:48> 'int' 0
|-CXXMethodDecl 0x55c24f252ba0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55c24f252a80 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55c24f252b00 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55c24f25bb60 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55c24f252c70 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55c24f252d30 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55c24f252df0 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55c24f252eb0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55c24f252f70 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55c24f253118 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55c24f253020 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55c24f253298 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55c24f2531d0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55c24f253470 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55c24f253358 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55c24f2535e8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55c24f253528 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55c24f253730 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55c24f2536a0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55c24f253880 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55c24f2537f0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55c24f253a58 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55c24f253940 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55c24f2539c0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55c24f253c38 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55c24f253b20 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55c24f253ba0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55c24f253d88 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55c24f253cf8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55c24f253f98 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55c24f253e48 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55c24f253ec8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55c24f2540f8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55c24f254060 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55c24f254250 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55c24f2541b8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55c24f2542f8 <col:57> "" ""
|-CXXMethodDecl 0x55c24f254408 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55c24f254378 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55c24f254558 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55c24f2544c8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55c24f2546d8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55c24f254610 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55c24f2547a0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55c24f254860 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55c24f254920 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55c24f2549c0 <col:49> "" ""
|-CXXMethodDecl 0x55c24f254a50 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55c24f254b10 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55c24f254c00 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55c24f254cc8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55c24f254d88 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55c24f254e48 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55c24f254f40 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55c24f255008 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55c24f2550d0 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55c24f2552a8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55c24f255188 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55c24f255208 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55c24f2554d0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55c24f255370 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55c24f2553f0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55c24f2555e0 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55c24f255648 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55c24f255670 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55c24f255788 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55c24f255828 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55c24f255888 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55c24f2558e8 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55c24f255998 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55c24f255a00 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55c24f255c38 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55c24f255c88 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c24f255c18 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55c24f255b28 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55c24f255ad0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55c24f255b10 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55c24f255af0 <col:32> 'int' 8
|-CXXRecordDecl 0x55c24f255ca0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55c24f255db8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55c24f255e60 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55c24f255ec8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55c24f255f58 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55c24f25bff0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55c24f25c428 <col:12>
| |-CXXConstructorDecl 0x55c24f25c0f8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55c24f25c208 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55c24f255e60 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55c24f25e9b0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55c24f25e980 <col:12> 'const char *const' lvalue .data 0x55c24f255e60
| | |     `-DeclRefExpr 0x55c24f25e960 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c24f25c208 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55c24f255ec8 'length' 'int'
| | | `-ImplicitCastExpr 0x55c24f25ea40 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55c24f25ea10 <col:12> 'const int' lvalue .length 0x55c24f255ec8
| | |     `-DeclRefExpr 0x55c24f25e9f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c24f25c208 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55c24f255f58 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55c24f25ead0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55c24f25eaa0 <col:12> 'String::memo_t *const' lvalue .memo 0x55c24f255f58
| | |     `-DeclRefExpr 0x55c24f25ea80 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c24f25c208 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55c24f25eb28 <col:12>
| |-CXXConstructorDecl 0x55c24f25c2a8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55c24f25c2a8
| | `-ParmVarDecl 0x55c24f25c3b8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55c24f261910 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55c24f26d328 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55c24f26d438 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55c24f26d950 <col:12>
| |   |-BinaryOperator 0x55c24f26d768 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55c24f26d720 <col:12> 'const char *' lvalue ->data 0x55c24f255e60
| |   | | `-CXXThisExpr 0x55c24f26d710 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55c24f26d750 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55c24f26d6e0 <col:12> 'const char *const' lvalue .data 0x55c24f255e60
| |   |     `-DeclRefExpr 0x55c24f26d6c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c24f26d438 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55c24f26d830 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55c24f26d7e8 <col:12> 'int' lvalue ->length 0x55c24f255ec8
| |   | | `-CXXThisExpr 0x55c24f26d7d8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55c24f26d818 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55c24f26d7a8 <col:12> 'const int' lvalue .length 0x55c24f255ec8
| |   |     `-DeclRefExpr 0x55c24f26d788 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c24f26d438 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55c24f26d8f8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55c24f26d8b0 <col:12> 'String::memo_t *' lvalue ->memo 0x55c24f255f58
| |   | | `-CXXThisExpr 0x55c24f26d8a0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55c24f26d8e0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55c24f26d870 <col:12> 'String::memo_t *const' lvalue .memo 0x55c24f255f58
| |   |     `-DeclRefExpr 0x55c24f26d850 <col:12> 'const String::rep_t' lvalue ParmVar 0x55c24f26d438 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55c24f26d940 <col:12>
| |     `-UnaryOperator 0x55c24f26d928 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55c24f26d918 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55c24f26d4a8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55c24f26d4a8
|   `-ParmVarDecl 0x55c24f26d5b8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55c24f255fd0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55c24f256218 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55c24f256038 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55c24f2560b8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55c24f256130 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55c24f25bfb0 <col:79, line:261:5>
|   |-BinaryOperator 0x55c24f25bc28 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55c24f25bbc0 <col:2, col:5> 'const char *' lvalue .data 0x55c24f255e60
|   | | `-MemberExpr 0x55c24f25bb90 <col:2> 'String::rep_t' lvalue ->_r 0x55c24f255fd0
|   | |   `-CXXThisExpr 0x55c24f25bb80 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55c24f25bc10 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c24f25bbf0 <col:12> 'const char *' lvalue ParmVar 0x55c24f256038 'data' 'const char *'
|   |-BinaryOperator 0x55c24f25bcf0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55c24f25bc88 <col:2, col:5> 'int' lvalue .length 0x55c24f255ec8
|   | | `-MemberExpr 0x55c24f25bc58 <col:2> 'String::rep_t' lvalue ->_r 0x55c24f255fd0
|   | |   `-CXXThisExpr 0x55c24f25bc48 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55c24f25bcd8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55c24f25bcb8 <col:14> 'int' lvalue ParmVar 0x55c24f2560b8 'length' 'int'
|   `-IfStmt 0x55c24f25bf98 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55c24f25be10 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55c24f25bdf8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55c24f25bdd8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55c24f25bdb8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55c24f25bd50 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55c24f255f58
|     |       | `-MemberExpr 0x55c24f25bd20 <col:7> 'String::rep_t' lvalue ->_r 0x55c24f255fd0
|     |       |   `-CXXThisExpr 0x55c24f25bd10 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55c24f25bda0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55c24f25bd80 <col:17> 'String::memo_t *' lvalue ParmVar 0x55c24f256130 'memo' 'String::memo_t *'
|     `-CallExpr 0x55c24f25bf70 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55c24f25bf58 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55c24f25be60 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55c24f244c48 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55c24f25bec8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55c24f255828
|         `-ImplicitCastExpr 0x55c24f25beb0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55c24f25be90 <col:27> 'String::memo_t *' lvalue ParmVar 0x55c24f256130 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55c24f2564c8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55c24f2562e8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55c24f256368 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55c24f2563e0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55c24f255fd0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55c24f25c438 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55c24f25c5c8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55c24f25c530 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55c24f25c4a0 <col:2> '<bound member function type>' ->assign_memo 0x55c24f256218
|     | `-ImplicitCastExpr 0x55c24f25c568 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55c24f25c490 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55c24f25c580 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55c24f25c4d0 <col:14> 'const char *' lvalue ParmVar 0x55c24f2562e8 'data' 'const char *'
|     |-ImplicitCastExpr 0x55c24f25c598 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55c24f25c4f0 <col:20> 'int' lvalue ParmVar 0x55c24f256368 'length' 'int'
|     `-ImplicitCastExpr 0x55c24f25c5b0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55c24f25c510 <col:28> 'String::memo_t *' lvalue ParmVar 0x55c24f2563e0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55c24f256658 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55c24f256598 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55c24f25c820 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55c24f25c7a0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55c24f25c5f0 <col:2> '<bound member function type>' ->assign_memo 0x55c24f256218
|     | `-CXXThisExpr 0x55c24f25c5e0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55c24f25c7d8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55c24f25c670 <col:14, col:19> 'const char *' lvalue .data 0x55c24f255e60
|     |   `-MemberExpr 0x55c24f25c640 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55c24f255fd0
|     |     `-DeclRefExpr 0x55c24f25c620 <col:14> 'const String' lvalue ParmVar 0x55c24f256598 'x' 'const String &'
|     |-ImplicitCastExpr 0x55c24f25c7f0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55c24f25c6f0 <col:25, col:30> 'int' lvalue .length 0x55c24f255ec8
|     |   `-MemberExpr 0x55c24f25c6c0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55c24f255fd0
|     |     `-DeclRefExpr 0x55c24f25c6a0 <col:25> 'const String' lvalue ParmVar 0x55c24f256598 'x' 'const String &'
|     `-ImplicitCastExpr 0x55c24f25c808 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55c24f25c770 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55c24f255f58
|         `-MemberExpr 0x55c24f25c740 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55c24f255fd0
|           `-DeclRefExpr 0x55c24f25c720 <col:38> 'const String' lvalue ParmVar 0x55c24f256598 'x' 'const String &'
|-CXXMethodDecl 0x55c24f256720 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55c24f25d1e0 <col:31, line:278:5>
|   `-IfStmt 0x55c24f25d1c8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55c24f25c8c0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55c24f25c8a8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55c24f25c878 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55c24f255f58
|     |     `-MemberExpr 0x55c24f25c848 <col:6> 'String::rep_t' lvalue ->_r 0x55c24f255fd0
|     |       `-CXXThisExpr 0x55c24f25c838 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55c24f25d1a0 <col:15, line:277:2>
|       |-ParenExpr 0x55c24f25cd70 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55c24f25cd40 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55c24f25c9d0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55c24f25c9b8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55c24f25c9a0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55c24f25c960 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55c24f255828
|       |   |       `-ImplicitCastExpr 0x55c24f25c948 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55c24f25c918 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55c24f255f58
|       |   |           `-MemberExpr 0x55c24f25c8e8 <col:27> 'String::rep_t' lvalue ->_r 0x55c24f255fd0
|       |   |             `-CXXThisExpr 0x55c24f25c8d8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55c24f25ca30 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55c24f25ca10 <col:54> 'int' 0
|       |   `-CallExpr 0x55c24f25cca0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55c24f25cc88 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55c24f25cc08 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55c24efbbea0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55c24f25cce0 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55c24f25cb18 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55c24f25ccf8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55c24f25cb48 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55c24f25cd10 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55c24f25cb80 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55c24f25cd28 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55c24f25cbf0 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55c24f25cbd8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55c24f25cba0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55c24f25d0c0 <line:274:6, line:275:22>
|       | |-CallExpr 0x55c24f25cf80 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55c24f25cf68 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55c24f25cee0 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55c24f246090 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55c24f25ceb0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55c24f255828
|       | |   `-ImplicitCastExpr 0x55c24f25ce98 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55c24f25ce68 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55c24f255f58
|       | |       `-MemberExpr 0x55c24f25ce38 <col:40> 'String::rep_t' lvalue ->_r 0x55c24f255fd0
|       | |         `-CXXThisExpr 0x55c24f25ce28 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55c24f25d080 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55c24f25d068 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55c24f25cfa8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55c24f25af00 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55c24f25d0a8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55c24f25d008 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55c24f255f58
|       |       `-MemberExpr 0x55c24f25cfd8 <col:15> 'String::rep_t' lvalue ->_r 0x55c24f255fd0
|       |         `-CXXThisExpr 0x55c24f25cfc8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55c24f25d180 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55c24f25d118 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55c24f255f58
|         | `-MemberExpr 0x55c24f25d0e8 <col:6> 'String::rep_t' lvalue ->_r 0x55c24f255fd0
|         |   `-CXXThisExpr 0x55c24f25d0d8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55c24f25d168 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55c24f25d148 <col:16> 'int' 0
|-CXXMethodDecl 0x55c24f2569b8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55c24f2567d8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55c24f256858 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55c24f2568d0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55c24f256a90 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55c24f256ce0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55c24f256b48 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55c24f256bc8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55c24f256c40 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55c24f256ec8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55c24f256db0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55c24f256e30 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55c24f256fc8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55c24f25d2b8 <col:41, line:286:5>
|   `-ReturnStmt 0x55c24f25d2a8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55c24f25d278 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55c24f25d240 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55c24f25d228 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55c24f25d208 <col:46> 'int' 1
|-CXXMethodDecl 0x55c24f257268 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55c24f257080 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55c24f257100 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55c24f257180 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55c24f25af00 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55c24f257330 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55c24f25afd0 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55c24f25b1a0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55c24f25b088 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55c24f25b108 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55c24f25b260 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55c24f25b328 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55c24f25b428 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55c24f25b4a0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55c24f25b518 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55c24f25b580 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55c24f25b680 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55c24f25b6d0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55c24f25b660 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55c24f25b640 <col:22> 'int' 14
|-CXXMethodDecl 0x55c24f25b8e8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55c24f25b700 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55c24f25b780 <col:38> col:41 'int'
| `-ParmVarDecl 0x55c24f25b800 <col:43> col:46 'int'
|-FriendDecl 0x55c24f25b9f0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55c24f25ba80 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>
