
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55aed11e1b18 prev 0x55aed11d92b8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55aed11e1c10 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x55aed11e1ca0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x55aed11e1d18 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x55aed11e1dd8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x55aed11e1ea0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x55aed11e2018 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x55aed11e1f50 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x55aed11e20c0 <col:24>
| `-OptimizeNoneAttr 0x55aed11e2118 <col:34>
|-CXXMethodDecl 0x55aed11e2160 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x55aed11e2418 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x55aed11e2210 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55aed11e2288 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x55aed11e2308 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x55aed11e24d0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x55aed11e2508 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x55aed11e2570 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x55aed11e25f8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x55aed11e2918 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x55aed11e26b0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x55aed11e2728 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x55aed11e27a0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x55aed11e2820 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x55aed11e2a30 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x55aed11ea3a8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55aed11ea3a8
| `-ParmVarDecl 0x55aed11ea4b8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x55aed11ea558 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55aed11ea558
| `-ParmVarDecl 0x55aed11ea668 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x55aed11ee658 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55aed11d4b30 prev 0x55aed11d48b0 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55aed11d4c28 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x55aed11d4cb8 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x55aed11d4d18 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x55aed11d4e08 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x55aed11d4f08 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x55aed11d50d8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x55aed11d4f88 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x55aed11d5000 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x55aed11d5268 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x55aed11d51a0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x55aed11d5310 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x55aed11d5448 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x55aed11d5380 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x55aed11d55e8 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x55aed11d5528 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x55aed11d5788 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x55aed11d56c8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x55aed11d5830 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x55aed11d5930 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x55aed11d5a10 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11d5910 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x55aed11d58f0 <col:26> 'int' 1
| `-EnumConstantDecl 0x55aed11d59c0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x55aed11d5a28 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55aed11d59a0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x55aed11d5980 <col:44> 'int' 2
|-CXXMethodDecl 0x55aed11d5b70 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x55aed11d5a58 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x55aed11d5ad8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x55aed11d5cc8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x55aed11d5c38 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x55aed11d5f08 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x55aed11d5d88 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x55aed11d5e00 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x55aed11d5fb8 <col:20>
| `-OptimizeNoneAttr 0x55aed11d6010 <col:30>
|-CXXMethodDecl 0x55aed11d6118 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x55aed11d6050 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x55aed11d61c0 <col:20>
| `-OptimizeNoneAttr 0x55aed11d6218 <col:30>
|-CXXMethodDecl 0x55aed11d6268 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x55aed11d6330 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x55aed11d6448 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x55aed11d64d0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x55aed11d6558 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x55aed11d65e0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x55aed11d6668 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x55aed11d66f8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x55aed11d67b8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x55aed11d6840 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x55aed11d68c8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x55aed11d6950 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x55aed11d69d8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x55aed11d6a60 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x55aed11d6af0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x55aed11d6bb0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x55aed11d6c40 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x55aed11d6d90 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x55aed11d6cf8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x55aed11d6f20 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x55aed11d6e50 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x55aed11d71d0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x55aed11d6fd8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x55aed11d7058 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x55aed11d70d8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x55aed11d7288 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x55aed11d7390 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55aed11d7620 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11d7370 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x55aed11d7350 <col:33> 'int' 0
| |-EnumConstantDecl 0x55aed11d7420 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55aed11d7638 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11d7400 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x55aed11d73e0 <col:32> 'int' 20
| |-EnumConstantDecl 0x55aed11d74b0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55aed11d7650 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11d7490 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x55aed11d7470 <col:38> 'int' 90
| |-EnumConstantDecl 0x55aed11d7540 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x55aed11d7668 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11d7520 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x55aed11d7500 <col:35> 'int' 100
| `-EnumConstantDecl 0x55aed11d75d0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x55aed11d7680 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55aed11d75b0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x55aed11d7590 <col:32> 'int' 2000
|-CXXMethodDecl 0x55aed11d76c0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x55aed11d7b00 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55aed11d7970 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x55aed11d79e8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55aed11d7bd0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x55aed11d7d50 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x55aed11d7c80 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55aed11d7f58 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55aed11d7e08 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x55aed11d7e80 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55aed11d8058 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x55aed11d80f8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x55aed11d81c0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x55aed11d8250 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x55aed11d8480 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11d8230 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x55aed11d8210 <col:36> 'int' EnumConstant 0x55aed11d81c0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x55aed11d82a0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55aed11d82f0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55aed11d8340 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55aed11d8390 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x55aed11d83e0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x55aed11d8430 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x55aed11d8568 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x55aed11d84a8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x55aed11d8630 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x55aed11d86f0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x55aed11d87b0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x55aed11d8870 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x55aed11d8988 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x55aed11d8a50 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x55aed11d8bd0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x55aed11d8b00 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x55aed11d8cf8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x55aed11d8ef8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x55aed11d8da8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x55aed11d8e28 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x55aed11e6848 <col:54, line:127:5>
|   |-ParenExpr 0x55aed11e66f8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x55aed11e66c8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x55aed11e63b8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55aed11e6390 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x55aed11e6378 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x55aed11e6360 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x55aed11e6330 <col:31> 'Router *' lvalue ->_router 0x55aed11e4210
|   |   |         `-CXXThisExpr 0x55aed11e6320 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55aed11e6418 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55aed11e63f8 <col:48> 'int' 0
|   |   `-CallExpr 0x55aed11e6628 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x55aed11e6610 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55aed11e65f0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55aed0d0ef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55aed11e6668 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11e6488 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x55aed11e6680 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11e64a8 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x55aed11e6698 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55aed11e64e0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x55aed11e66b0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55aed11e65d8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55aed11e65c0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55aed11e6578 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x55aed11e6790 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x55aed11e6728 <col:9> 'Router *' lvalue ->_router 0x55aed11e4210
|   | | `-CXXThisExpr 0x55aed11e6718 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x55aed11e6778 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55aed11e6758 <col:19> 'Router *' lvalue ParmVar 0x55aed11d8da8 'r' 'Router *'
|   `-BinaryOperator 0x55aed11e6828 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x55aed11e67c0 <col:9> 'int' lvalue ->_eindex 0x55aed11e4278
|     | `-CXXThisExpr 0x55aed11e67b0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x55aed11e6810 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x55aed11e67f0 <col:19> 'int' lvalue ParmVar 0x55aed11d8e28 'eindex' 'int'
|-CXXMethodDecl 0x55aed11d9080 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x55aed11d8fb8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x55aed11d9150 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x55aed11d9218 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x55aed11d92b8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x55aed11d9508 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x55aed11d9380 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x55aed11d9400 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x55aed11d95b8 <col:20>
| `-OptimizeNoneAttr 0x55aed11d9610 <col:30>
|-CXXMethodDecl 0x55aed11d9718 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55aed11d9650 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x55aed11d97c0 <col:20>
| `-OptimizeNoneAttr 0x55aed11d9818 <col:30>
|-CXXMethodDecl 0x55aed11d98e8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x55aed11d9858 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x55aed11d9990 <col:20>
| `-OptimizeNoneAttr 0x55aed11d99e8 <col:30>
|-CXXMethodDecl 0x55aed11d9b78 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x55aed11d9a20 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x55aed11d9aa0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x55aed11d9d08 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55aed11d9c40 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55aed11d9e58 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55aed11d9dc8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x55aed11d9fa8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x55aed11d9f18 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55aed11da0f8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x55aed11da068 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x55aed11da3b8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x55aed11da1b0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x55aed11da230 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x55aed11da2d8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x55aed11da490 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x55aed11da550 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x55aed11da820 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x55aed11da6d0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x55aed11da748 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x55aed11da948 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x55aed11dab20 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x55aed11daa00 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x55aed11daa80 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x55aed11dad08 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x55aed11dabe8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x55aed11dac68 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x55aed11db078 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55aed11dadc8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55aed11dae40 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55aed11daec0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55aed11e5e30 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55aed11e5e10 <col:106> 'int' 0
| `-ParmVarDecl 0x55aed11daf38 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55aed11e5e68 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55aed11e5e48 <col:126> 'int' 0
|-CXXMethodDecl 0x55aed11db418 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55aed11db148 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55aed11db1e0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55aed11db260 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x55aed11db2d8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55aed11e5ea0 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55aed11e5e80 <col:114> 'int' 0
|-CXXMethodDecl 0x55aed11db7a8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55aed11db4f0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x55aed11db568 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x55aed11db5e8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x55aed11e5eb8 <col:96> 'int' 0
| `-ParmVarDecl 0x55aed11db660 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55aed11e5ef8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55aed11e5ed8 <col:116> 'int' 0
|-CXXMethodDecl 0x55aed11dbb28 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x55aed11db878 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55aed11db8f0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55aed11db970 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55aed11e5f30 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55aed11e5f10 <col:109> 'int' 0
| `-ParmVarDecl 0x55aed11db9e8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55aed11e5f68 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55aed11e5f48 <col:129> 'int' 0
|-CXXMethodDecl 0x55aed11dbea8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55aed11dbbf8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x55aed11dbc70 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55aed11dbcf0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x55aed11dbd68 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55aed11e5fa0 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55aed11e5f80 <col:117> 'int' 0
|-CXXMethodDecl 0x55aed11dc238 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x55aed11dbf80 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55aed11dbff8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x55aed11dc078 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x55aed11e5fb8 <col:99> 'int' 0
| `-ParmVarDecl 0x55aed11dc0f0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x55aed11e5ff8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x55aed11e5fd8 <col:119> 'int' 0
|-CXXMethodDecl 0x55aed11dc658 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x55aed11dc308 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55aed11dc388 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55aed11dc400 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55aed11dc480 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x55aed11e6030 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x55aed11e6010 <col:108> 'int' 0
| `-ParmVarDecl 0x55aed11dc500 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x55aed11e6068 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x55aed11e6048 <col:141> 'int' 0
|-CXXMethodDecl 0x55aed11dca78 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55aed11dc730 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x55aed11dc7b0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x55aed11dc828 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55aed11dc8a8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x55aed11dc928 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55aed11e6080 <col:121> 'int' 0
|-CXXMethodDecl 0x55aed11dcea8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x55aed11dcb58 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x55aed11dcbd8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x55aed11dcc50 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x55aed11dccd0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x55aed11e60a0 <col:98> 'int' 0
| `-ParmVarDecl 0x55aed11dcd50 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x55aed11e60c0 <col:123> 'int' 0
|-CXXMethodDecl 0x55aed11dd170 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x55aed11dcf80 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x55aed11dd000 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x55aed11dd080 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x55aed11e60e0 <col:80> 'int' 0
|-EnumDecl 0x55aed11dd228 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x55aed11dd330 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55aed11dd5c0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11dd310 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x55aed11dd2f0 <col:42> 'int' 1
| |-EnumConstantDecl 0x55aed11dd3c0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55aed11dd5d8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11dd3a0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x55aed11dd380 <col:40> 'int' 2
| |-EnumConstantDecl 0x55aed11dd450 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55aed11dd5f0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11dd430 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x55aed11dd410 <col:44> 'int' 4
| |-EnumConstantDecl 0x55aed11dd4e0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x55aed11dd608 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11dd4c0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x55aed11dd4a0 <col:36> 'int' 7
| `-EnumConstantDecl 0x55aed11dd570 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x55aed11dd620 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55aed11dd550 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x55aed11dd530 <col:34> 'int' 6
|-CXXMethodDecl 0x55aed11dd8d8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x55aed11dd648 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x55aed11dd6e8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x55aed11dd768 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x55aed11dd7e0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x55aed11e6198 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x55aed11e6180 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x55aed11e6168 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x55aed11e6148 <col:98, col:105> 'String' (CXXTemporary 0x55aed11e6148)
|           `-CXXTemporaryObjectExpr 0x55aed11e6110 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x55aed11ddb78 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x55aed11dd9a8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55aed11dda20 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x55aed11dda98 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55aed11e6248 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55aed11e6230 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55aed11e6218 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55aed11e61f8 <col:94, col:101> 'String' (CXXTemporary 0x55aed11e61f8)
| |         `-CXXTemporaryObjectExpr 0x55aed11e61c0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x55aed11e6a30 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x55aed11e69a8 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x55aed11e6978 <col:9> '<bound member function type>' ->add_task_handlers 0x55aed11dd8d8
|     | `-CXXThisExpr 0x55aed11e6968 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55aed11e69e8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55aed11e68e8 <col:27> 'Task *' lvalue ParmVar 0x55aed11dd9a8 'task' 'Task *'
|     |-ImplicitCastExpr 0x55aed11e6a00 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x55aed11e6908 <col:33> 'NotifierSignal *' lvalue ParmVar 0x55aed11dda20 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x55aed11e6a18 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55aed11e6928 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55aed11dd570 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55aed11e6948 <col:62> 'const String' lvalue ParmVar 0x55aed11dda98 'prefix' 'const String &'
|-CXXMethodDecl 0x55aed11ddd88 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x55aed11ddc40 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x55aed11ddcb8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x55aed11e62f8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x55aed11e62e0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x55aed11e62c8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x55aed11e62a8 <col:70, col:77> 'String' (CXXTemporary 0x55aed11e62a8)
| |         `-CXXTemporaryObjectExpr 0x55aed11e6270 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x55aed11e6c08 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x55aed11e6b80 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x55aed11e6b50 <col:9> '<bound member function type>' ->add_task_handlers 0x55aed11dd8d8
|     | `-CXXThisExpr 0x55aed11e6b40 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x55aed11e6bc0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x55aed11e6ac0 <col:27> 'Task *' lvalue ParmVar 0x55aed11ddc40 'task' 'Task *'
|     |-ImplicitCastExpr 0x55aed11e6bd8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x55aed11e6ae0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x55aed11e6bf0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x55aed11e6b00 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x55aed11dd570 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x55aed11e6b20 <col:57> 'const String' lvalue ParmVar 0x55aed11ddcb8 'prefix' 'const String &'
|-CXXMethodDecl 0x55aed11de068 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x55aed11dde50 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55aed11dded0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55aed11ddf48 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x55aed11de318 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x55aed11de138 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55aed11de1b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55aed11de238 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x55aed11de608 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55aed11de3e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55aed11de468 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55aed11de4e0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x55aed11de8b8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x55aed11de6d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55aed11de758 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55aed11de7d8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x55aed11deb68 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x55aed11de988 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55aed11dea08 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55aed11dea88 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x55aed11dee18 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x55aed11dec38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55aed11decb8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55aed11ded30 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x55aed11df0c8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x55aed11deee8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55aed11def68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55aed11defe8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x55aed11df3d8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x55aed11df1f0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55aed11df270 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55aed11df2f0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x55aed11df6b8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x55aed11df4a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55aed11df528 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55aed11df5d0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x55aed11df998 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x55aed11df788 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55aed11df808 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55aed11df8b0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x55aed11dfc00 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x55aed11dfa68 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55aed11dfae8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55aed11dfb60 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x55aed11dfea8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x55aed11dfcd0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x55aed11dfd50 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x55aed11dfdc8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x55aed11e0158 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x55aed11dff78 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55aed11dfff8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55aed11e0078 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x55aed11e0408 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x55aed11e0228 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55aed11e02a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55aed11e0320 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x55aed11e06b8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x55aed11e04d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55aed11e0558 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55aed11e05d0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x55aed11e0988 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x55aed11e0788 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55aed11e0808 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x55aed11e08a8 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x55aed11e0cb8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x55aed11e0a58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x55aed11e0ad8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x55aed11e0b50 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x55aed11e0bc8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55aed11e6310 <col:93> 'bool' false
|-CXXMethodDecl 0x55aed11e0ea0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55aed11e0d88 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x55aed11e0e08 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x55aed11e1078 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55aed11e0f60 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x55aed11e0fe0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x55aed11e1358 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55aed11e1138 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x55aed11e11b0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x55aed11e1230 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x55aed11e12a8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x55aed11e1648 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x55aed11e1428 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x55aed11e14a0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x55aed11e1520 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x55aed11e1598 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x55aed11e1880 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x55aed11e1720 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x55aed11e17a0 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x55aed11e1a68 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x55aed11e1948 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x55aed11e19c8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x55aed11e1b18 prev 0x55aed11d92b8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55aed11e1c10 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x55aed11e1ca0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x55aed11e1d18 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x55aed11e1dd8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x55aed11e1ea0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x55aed11e2018 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x55aed11e1f50 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x55aed11e20c0 <col:24>
| | `-OptimizeNoneAttr 0x55aed11e2118 <col:34>
| |-CXXMethodDecl 0x55aed11e2160 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x55aed11e2418 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x55aed11e2210 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55aed11e2288 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x55aed11e2308 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x55aed11e24d0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x55aed11e2508 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x55aed11e2570 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x55aed11e25f8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x55aed11e2918 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x55aed11e26b0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x55aed11e2728 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x55aed11e27a0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x55aed11e2820 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x55aed11e2a30 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x55aed11ea3a8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x55aed11ea3a8
| | `-ParmVarDecl 0x55aed11ea4b8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x55aed11ea558 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x55aed11ea558
| | `-ParmVarDecl 0x55aed11ea668 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x55aed11ee658 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55aed11e2aa8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x55aed11e2b48 <col:38> "" ""
|-CXXMethodDecl 0x55aed11e2bd8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x55aed11e2c78 <col:44> "" ""
|-AccessSpecDecl 0x55aed11e2ce8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x55aed11e2d10 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x55aed11e2e10 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x55aed11e2e60 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55aed11e2df0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x55aed11e2dd0 <col:27> 'int' 4
|-FieldDecl 0x55aed11e2f18 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x55aed11e30c8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x55aed11e3180 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x55aed11e4210 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x55aed11e4278 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x55aed11e43c8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x55aed11e4308 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x55aed11e4578 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x55aed11e4488 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x55aed11e4758 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x55aed11e4638 <col:20> col:23 'int'
| `-ParmVarDecl 0x55aed11e46b8 <col:25> col:28 'int'
|-CXXMethodDecl 0x55aed11e4a00 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x55aed11e4820 <col:23> col:26 'int'
| |-ParmVarDecl 0x55aed11e48a0 <col:28> col:31 'int'
| `-ParmVarDecl 0x55aed11e4918 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x55aed11e4ab8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x55aed11e4b80 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x55aed11e4bd0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x55aed11e4c20 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x55aed11e4e00 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x55aed11e4cb0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x55aed11e4d28 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x55aed11e50a8 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x55aed11e4ec8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x55aed11e4f48 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x55aed11e4fc0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x55aed11e52c8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x55aed11e5178 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x55aed11e51f8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x55aed11e5600 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x55aed11e5388 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x55aed11e5408 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x55aed11e5480 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x55aed11e5500 <col:57> col:60 'int'
|-CXXMethodDecl 0x55aed11e57e8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x55aed11e56d0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x55aed11e5750 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x55aed11e5938 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x55aed11e58a8 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x55aed11e5cb8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x55aed11e59f8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x55aed11e5a78 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x55aed11e5af0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x55aed11e5b70 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x55aed11e5dd0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class SimpleIdle
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55aed11ed518 <../elements/simple/simpleidle.hh:18:1, line:31:1> line:18:7 class SimpleIdle definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x55aed11ed678 <col:1, col:7> col:7 implicit referenced class SimpleIdle
|-AccessSpecDecl 0x55aed11ed708 <col:37, col:43> col:37 public
|-CXXConstructorDecl 0x55aed11ed790 <line:20:5, col:16> col:5 SimpleIdle 'void ()'
|-CXXDestructorDecl 0x55aed11ed880 <line:21:5, col:17> col:5 ~SimpleIdle 'void ()' noexcept-unevaluated 0x55aed11ed880
| `-Overrides: [ 0x55aed11d4e08 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x55aed11ed9b0 <line:23:5, col:59> col:17 class_name 'const char *() const'
| |-Overrides: [ 0x55aed11d6268 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x55aed11ee378 <col:36, col:59>
|   `-ReturnStmt 0x55aed11ee368 <col:38, col:45>
|     `-ImplicitCastExpr 0x55aed11ee350 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55aed11ee328 <col:45> 'const char [11]' lvalue "SimpleIdle"
|-CXXMethodDecl 0x55aed11eda78 <line:24:5, col:52> col:17 port_count 'const char *() const'
| |-Overrides: [ 0x55aed11d6330 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x55aed11ee3d8 <col:36, col:52>
|   `-ReturnStmt 0x55aed11ee3c8 <col:38, col:45>
|     `-ImplicitCastExpr 0x55aed11ee3b0 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55aed11ee390 <col:45> 'const char [4]' lvalue "-/-"
|-CXXMethodDecl 0x55aed11edb40 <line:25:5, col:52> col:17 processing 'const char *() const'
| |-Overrides: [ 0x55aed11d66f8 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x55aed11ee438 <col:36, col:52>
|   `-ReturnStmt 0x55aed11ee428 <col:38, col:45>
|     `-ImplicitCastExpr 0x55aed11ee410 <col:45> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55aed11ee3f0 <col:45> 'const char [4]' lvalue "a/a"
|-CXXMethodDecl 0x55aed11edc08 <line:26:5, col:51> col:17 flow_code 'const char *() const'
| |-Overrides: [ 0x55aed11d6af0 Element::flow_code 'const char *() const' ]
| `-CompoundStmt 0x55aed11ee498 <col:35, col:51>
|   `-ReturnStmt 0x55aed11ee488 <col:37, col:44>
|     `-ImplicitCastExpr 0x55aed11ee470 <col:44> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x55aed11ee450 <col:44> 'const char [4]' lvalue "x/y"
|-CXXMethodDecl 0x55aed11eddd0 <line:28:5, col:28> col:10 push 'void (int, Packet *)'
| |-Overrides: [ 0x55aed11d50d8 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x55aed11edcc0 <col:15> col:18 'int'
| `-ParmVarDecl 0x55aed11edd38 <col:20, col:27> col:28 'Packet *'
|-CXXMethodDecl 0x55aed11edf28 <line:29:5, col:21> col:13 pull 'Packet *(int)'
| |-Overrides: [ 0x55aed11d5268 Element::pull 'Packet *(int)' ]
| `-ParmVarDecl 0x55aed11ede98 <col:18> col:21 'int'
|-CXXConstructorDecl 0x55aed11edff8 <line:18:7> col:7 implicit SimpleIdle 'void (const SimpleIdle &)' inline default_delete noexcept-unevaluated 0x55aed11edff8
| `-ParmVarDecl 0x55aed11ee108 <col:7> col:7 'const SimpleIdle &'
`-CXXMethodDecl 0x55aed11ee1a8 <col:7> col:7 implicit operator= 'SimpleIdle &(const SimpleIdle &)' inline default_delete noexcept-unevaluated 0x55aed11ee1a8
  `-ParmVarDecl 0x55aed11ee2b8 <col:7> col:7 'const SimpleIdle &'

Layout: <CGRecordLayout
  LLVMType:%class.SimpleIdle = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.SimpleIdle.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55aed0f933c0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55aed0f934d8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x55aed0f93568 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x55aed0f93638 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x55aed0f93720 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x55aed0f93938 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55aed0f937e0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55aed0f93ae8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55aed0f939f0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55aed0f93c30 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x55aed0f93ba0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x55aed0f93d78 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55aed0f93ce8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55aed0f93ec0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x55aed0f93e30 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55aed0f93f88 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x55aed0f940d0 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x55aed0f94040 <col:28> col:31 'int'
|-CXXMethodDecl 0x55aed0f94198 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x55aed0f942e0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x55aed0f94250 <col:28> col:31 'int'
|-CXXMethodDecl 0x55aed0f94458 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55aed0f94398 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55aed0f945a0 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x55aed0f94510 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55aed0f94668 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x55aed0f94828 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55aed0f94718 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55aed0f94790 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55aed0f94a78 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55aed0f948e8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55aed0f94960 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55aed0f94b28 <col:86> "" ""
|-CXXMethodDecl 0x55aed0f94d98 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x55aed0f94c08 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x55aed0f94c80 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55aed0f94f48 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55aed0f94e58 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55aed0f950f8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x55aed0f95000 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x55aed0f953c8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55aed0f951b0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55aed0f95228 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55aed0f952a0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55aed0f956a8 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x55aed0f95490 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x55aed0f95508 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55aed0f95580 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55aed0f95760 <col:115> "" ""
|-AccessSpecDecl 0x55aed0f957d0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x55aed0f95808 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55aed0f96d20 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55aed0f96d20
| `-ParmVarDecl 0x55aed0f96e28 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x55aed0f96ec8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55aed0f96ec8
| `-ParmVarDecl 0x55aed0f96fd8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x55aed0fcc608 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55aed11be620 <col:7>
|-CXXConstructorDecl 0x55aed0fcc6e0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x55aed0fcc6e0
| `-ParmVarDecl 0x55aed0fcc7f8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x55aed0fcc868 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x55aed0fcc868
| `-ParmVarDecl 0x55aed0fcc978 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x55aed11c1020 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55aed11ad1c8 prev 0x55aed11a23d0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55aed11ad2c0 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x55aed11ad3b0 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x55aed11ad4d8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x55aed11ad658 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x55aed11ad7d8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x55aed11ad958 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x55aed11be788 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55aed11beff8 <col:11>
|-CXXDestructorDecl 0x55aed11be860 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x55aed11be998 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55aed11be998
| `-ParmVarDecl 0x55aed11beaa8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x55aed11beb48 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55aed11beb48
| `-ParmVarDecl 0x55aed11bec58 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x55aed11c1a18 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x55aed11c1b28 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x55aed11c1da8 <col:11>
|   `-ReturnStmt 0x55aed11c1d98 <col:11>
|     `-UnaryOperator 0x55aed11c1d80 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55aed11c1d70 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x55aed11c1b98 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55aed11c1b98
  `-ParmVarDecl 0x55aed11c1ca8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55aed11ad9c0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55aed11adad8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x55aed11adb78 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x55aed11adbe0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x55aed11adc48 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x55aed11adcb0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x55aed11add10 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x55aed11addd0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x55aed11ade30 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x55aed11ade90 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x55aed11be698 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x55aed11adb78 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x55aed11bf008 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x55aed11bf060 <col:12>
|-CXXConstructorDecl 0x55aed11becc8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55aed11becc8
| `-ParmVarDecl 0x55aed11bedd8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x55aed11bee78 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55aed11bee78
| `-ParmVarDecl 0x55aed11bef88 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x55aed11c1100 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55aed119bae0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55aed119bbf8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x55aed119bc88 <col:16, col:22> col:16 public
|-EnumDecl 0x55aed119bcb0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x55aed119bdb0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x55aed119be90 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed119bd90 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x55aed119bd70 <col:21> 'int' 28
| `-EnumConstantDecl 0x55aed119be40 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x55aed119bea8 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55aed119be20 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x55aed119be00 <col:22> 'int' 64
|-CXXMethodDecl 0x55aed119c1e8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x55aed119bed0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55aed119bf50 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x55aed119bfc8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55aed119c040 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55aed119c2a8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55aed119c4a8 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x55aed119c320 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x55aed119c398 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55aed119c558 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55aed119c6b8 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x55aed119c5c8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55aed119c760 <col:72> warn_unused_result ""
|-TypedefDecl 0x55aed119cac0 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x55aed119ca50 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x55aed119c9f0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x55aed119c9b0 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x55aed0c754e0 'void'
|       |-PointerType 0x55aed0f1bc60 'unsigned char *'
|       | `-BuiltinType 0x55aed0c755e0 'unsigned char'
|       |-TypedefType 0x55aed0d18230 'size_t' sugar
|       | |-Typedef 0x55aed0ce5be0 'size_t'
|       | `-BuiltinType 0x55aed0c75640 'unsigned long'
|       `-PointerType 0x55aed0c75ce0 'void *'
|         `-BuiltinType 0x55aed0c754e0 'void'
|-CXXMethodDecl 0x55aed119cf38 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x55aed119cb30 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x55aed119cba8 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55aed119cc40 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x55aed119ccc0 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x55aed11b7630 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x55aed11b7618 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x55aed11b75e0 <col:58> 'int' 0
| |-ParmVarDecl 0x55aed119cd40 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x55aed11b7658 <col:76> 'int' 0
| |-ParmVarDecl 0x55aed119cdc0 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x55aed11b7678 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x55aed119d008 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x55aed119d088 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x55aed119d148 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x55aed119d1e8 <col:20>
| `-OptimizeNoneAttr 0x55aed119d240 <col:30>
|-CXXMethodDecl 0x55aed119d2b8 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x55aed119d358 <col:20>
| `-OptimizeNoneAttr 0x55aed119d3b0 <col:30>
|-CXXMethodDecl 0x55aed119d428 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x55aed119d4c8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x55aed119d578 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x55aed119d618 <col:20>
| |-OptimizeNoneAttr 0x55aed119d670 <col:30>
| `-WarnUnusedResultAttr 0x55aed119d698 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x55aed119d6f0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x55aed119d790 <col:20>
| `-OptimizeNoneAttr 0x55aed119d7e8 <col:30>
|-CXXMethodDecl 0x55aed119d838 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x55aed119d8d8 <col:20>
| `-OptimizeNoneAttr 0x55aed119d930 <col:30>
|-CXXMethodDecl 0x55aed119d978 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x55aed119da18 <col:20>
| `-OptimizeNoneAttr 0x55aed119da70 <col:30>
|-CXXMethodDecl 0x55aed119dab8 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55aed119db78 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x55aed119dc40 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55aed119dd08 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55aed119ddc8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55aed119dee8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x55aed11b7740 <col:54, line:99:5>
|   `-ReturnStmt 0x55aed11b7730 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x55aed11b7718 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x55aed11b76e8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55aed11ae1c8
|         `-CXXThisExpr 0x55aed11b76d8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x55aed119e088 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x55aed119df98 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x55aed11b77f0 <col:67, line:103:5>
|   `-BinaryOperator 0x55aed11b77d0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55aed11b7768 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55aed11ae1c8
|     | `-CXXThisExpr 0x55aed11b7758 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55aed11b77b8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x55aed11b7798 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x55aed119df98 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x55aed119e180 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x55aed11b7870 <col:33, line:107:5>
|   `-ReturnStmt 0x55aed11b7860 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x55aed11b7848 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x55aed11b7818 <col:16> 'void *' lvalue ->_destructor_argument 0x55aed11ae230
|         `-CXXThisExpr 0x55aed11b7808 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55aed119e240 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x55aed11b7ea0 <col:25, line:113:5>
|   |-ParenExpr 0x55aed11b7be8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x55aed11b7bb8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x55aed11b7928 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x55aed11b7900 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x55aed11b78c8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x55aed11b7898 <col:24> '<bound member function type>' ->shared 0x55aed119d2b8
|   |   |       `-ImplicitCastExpr 0x55aed11b78e8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x55aed11b7888 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x55aed11b7988 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55aed11b7968 <col:42> 'int' 0
|   |   `-CallExpr 0x55aed11b7b18 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x55aed11b7b00 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55aed11b7ae0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55aed0d0ef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55aed11b7b58 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11b79f8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x55aed11b7b70 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11b7a20 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55aed11b7b88 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55aed11b7a58 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x55aed11b7ba0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55aed11b7ac8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55aed11b7ab0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55aed11b7a78 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x55aed11b7de8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x55aed11b7c18 <col:2> 'unsigned char *' lvalue ->_head 0x55aed11adfd0
|   | | `-CXXThisExpr 0x55aed11b7c08 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x55aed11b7dd0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x55aed11b7db0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x55aed11b7c58 <col:10> 'unsigned char *' lvalue ->_data 0x55aed11ae038
|   |     | `-CXXThisExpr 0x55aed11b7c48 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x55aed11b7d98 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x55aed11b7d78 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x55aed11b7c98 <col:18> 'unsigned char *' lvalue ->_tail 0x55aed11ae0a0
|   |         | `-CXXThisExpr 0x55aed11b7c88 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x55aed11b7d60 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x55aed11b7d40 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x55aed11b7cd8 <col:26> 'unsigned char *' lvalue ->_end 0x55aed11ae108
|   |             | `-CXXThisExpr 0x55aed11b7cc8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x55aed11b7d28 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x55aed11b7d08 <col:33> 'int' 0
|   `-BinaryOperator 0x55aed11b7e80 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x55aed11b7e18 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x55aed11ae1c8
|     | `-CXXThisExpr 0x55aed11b7e08 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x55aed11b7e68 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x55aed11b7e48 <col:16> 'int' 0
|-CXXMethodDecl 0x55aed119e380 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55aed119e2f0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55aed119e428 <col:20>
| |-OptimizeNoneAttr 0x55aed119e480 <col:30>
| `-WarnUnusedResultAttr 0x55aed119e4a8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x55aed119e578 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55aed119e4e8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55aed119e620 <col:20>
| |-OptimizeNoneAttr 0x55aed119e678 <col:30>
| `-WarnUnusedResultAttr 0x55aed119e6a0 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x55aed119e7d8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55aed119e6e0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55aed119e880 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x55aed119e980 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x55aed119e8f0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55aed119ea28 <col:20>
| `-OptimizeNoneAttr 0x55aed119ea80 <col:30>
|-CXXMethodDecl 0x55aed119eb48 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x55aed119eab8 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55aed119ebf0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x55aed119ecf0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x55aed119ec60 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x55aed119ed98 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x55aed119ee98 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x55aed119ee08 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55aed119ef40 <col:20>
| `-OptimizeNoneAttr 0x55aed119ef98 <col:30>
|-CXXMethodDecl 0x55aed119f128 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x55aed119efd8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x55aed119f050 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x55aed11b7698 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x55aed119f1d8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x55aed119f3d8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55aed119f250 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x55aed119f2c8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55aed119f5e8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x55aed119f498 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55aed119f510 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55aed119f7f8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x55aed119f6a8 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x55aed119f728 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x55aed11b76a8 <col:39> 'int' 0
|-CXXMethodDecl 0x55aed119f8c8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x55aed119f990 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x55aed119fa58 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x55aed119fb18 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55aed119fbe0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x55aed119fd28 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x55aed119fc98 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x55aed119fef8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55aed119fde8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x55aed119fe60 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55aed119ffc8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x55aed11a0088 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x55aed11a0128 <col:20>
| `-OptimizeNoneAttr 0x55aed11a0180 <col:30>
|-CXXMethodDecl 0x55aed11a01d0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55aed11a0270 <col:20>
| `-OptimizeNoneAttr 0x55aed11a02c8 <col:30>
|-CXXMethodDecl 0x55aed11a0318 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x55aed11a03d8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55aed11a04a0 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x55aed11a0540 <col:20>
| `-OptimizeNoneAttr 0x55aed11a0598 <col:30>
|-CXXMethodDecl 0x55aed11a06e8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x55aed11a05d8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x55aed11a0650 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55aed11a0838 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x55aed11a07a8 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55aed11a0910 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x55aed11a09d0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x55aed11a0a70 <col:20>
| `-OptimizeNoneAttr 0x55aed11a0ac8 <col:30>
|-CXXMethodDecl 0x55aed11a0b18 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x55aed11a0bb8 <col:20>
| `-OptimizeNoneAttr 0x55aed11a0c10 <col:30>
|-CXXMethodDecl 0x55aed11a0c60 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x55aed11a0d28 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x55aed11a0dc8 <col:20>
| `-OptimizeNoneAttr 0x55aed11a0e20 <col:30>
|-CXXMethodDecl 0x55aed11a0e68 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x55aed11a0f88 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x55aed11a10f8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x55aed11a1038 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x55aed11a11e8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x55aed11a1288 <col:20>
| `-OptimizeNoneAttr 0x55aed11a12e0 <col:30>
|-CXXMethodDecl 0x55aed11a1330 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x55aed11a13f0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x55aed11a1628 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x55aed11a14a0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x55aed11a1518 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55aed11a16d8 <col:20>
| `-OptimizeNoneAttr 0x55aed11a1730 <col:30>
|-CXXMethodDecl 0x55aed11a17d8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x55aed11a1878 <col:20>
| `-OptimizeNoneAttr 0x55aed11a18d0 <col:30>
|-CXXMethodDecl 0x55aed11a1920 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x55aed11a19c0 <col:20>
| `-OptimizeNoneAttr 0x55aed11a1a18 <col:30>
|-CXXMethodDecl 0x55aed11a1a60 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x55aed11a1b00 <col:20>
| `-OptimizeNoneAttr 0x55aed11a1b58 <col:30>
|-CXXMethodDecl 0x55aed11a1c58 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x55aed11a1b90 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x55aed11a1d00 <col:20>
| `-OptimizeNoneAttr 0x55aed11a1d58 <col:30>
|-CXXMethodDecl 0x55aed11a1f18 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x55aed11a1d90 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x55aed11a1e08 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55aed11a1fc8 <col:20>
| `-OptimizeNoneAttr 0x55aed11a2020 <col:30>
|-CXXMethodDecl 0x55aed11a20c8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x55aed11a21e8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x55aed11a2308 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x55aed11a23a8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x55aed11a23d0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x55aed11a24f8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x55aed11a2598 <col:20>
| `-OptimizeNoneAttr 0x55aed11a25f0 <col:30>
|-CXXMethodDecl 0x55aed11a2698 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x55aed11a2738 <col:20>
| `-OptimizeNoneAttr 0x55aed11a2790 <col:30>
|-AccessSpecDecl 0x55aed11a27b8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x55aed11a27e0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x55aed11a28e0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x55aed11a2930 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55aed11a28c0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x55aed11a28a0 <col:14> 'int' 48
|-CXXMethodDecl 0x55aed11a2998 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x55aed11a2a38 <col:20>
| `-OptimizeNoneAttr 0x55aed11a2a90 <col:30>
|-CXXMethodDecl 0x55aed11a2b08 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x55aed11a2ba8 <col:20>
| `-OptimizeNoneAttr 0x55aed11a2c00 <col:30>
|-CXXMethodDecl 0x55aed11a2cc8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x55aed11a2c38 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x55aed11a2e68 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x55aed11a3008 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x55aed11a2f18 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x55aed11a30b0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x55aed11a31b0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55aed11a3560 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11a3190 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x55aed11a3170 <col:9> 'int' 0
| |-EnumConstantDecl 0x55aed11a3240 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55aed11a3578 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11a3220 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x55aed11a3200 <col:14> 'int' 1
| |-EnumConstantDecl 0x55aed11a32d0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55aed11a3590 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11a32b0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x55aed11a3290 <col:14> 'int' 2
| |-EnumConstantDecl 0x55aed11a3360 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55aed11a35a8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11a3340 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x55aed11a3320 <col:14> 'int' 3
| |-EnumConstantDecl 0x55aed11a33f0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55aed11a35c0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11a33d0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x55aed11a33b0 <col:13> 'int' 4
| |-EnumConstantDecl 0x55aed11a3480 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x55aed11a35d8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11a3460 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x55aed11a3440 <col:13> 'int' 5
| `-EnumConstantDecl 0x55aed11a3510 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x55aed11a35f0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55aed11a34f0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x55aed11a34d0 <col:14> 'int' 6
|-CXXMethodDecl 0x55aed11a3658 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x55aed11a36f8 <col:20>
| `-OptimizeNoneAttr 0x55aed11a3750 <col:30>
|-CXXMethodDecl 0x55aed11a3848 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x55aed11a3788 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x55aed11a38f0 <col:20>
| `-OptimizeNoneAttr 0x55aed11a3948 <col:30>
|-CXXMethodDecl 0x55aed11a39b8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x55aed11a3ae0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x55aed11a3c58 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x55aed11a3b90 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x55aed11a3d20 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x55aed11a3de8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x55aed11a3f28 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x55aed11a3e98 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x55aed11a3fd0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x55aed11a40d0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55aed11a42d0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11a40b0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x55aed11a4090 <col:23> 'int' 0
| |-EnumConstantDecl 0x55aed11a4160 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55aed11a42e8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11a4140 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x55aed11a4120 <col:45> 'int' 4
| |-EnumConstantDecl 0x55aed11a41f0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x55aed11a4300 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11a41d0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x55aed11a41b0 <col:24> 'int' 0
| `-EnumConstantDecl 0x55aed11a4280 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x55aed11a4318 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55aed11a4260 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x55aed11a4240 <col:47> 'int' 16
|-CXXMethodDecl 0x55aed11a4378 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x55aed11a44e8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x55aed11a4428 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x55aed11a4590 <col:20>
| `-OptimizeNoneAttr 0x55aed11a45e8 <col:30>
|-CXXMethodDecl 0x55aed11a4638 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x55aed11b7fc0 <col:18, col:36>
|   `-ReturnStmt 0x55aed11b7fb0 <col:20, col:33>
|     `-ImplicitCastExpr 0x55aed11b7f98 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x55aed11b7f78 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x55aed11b7f48 <col:27> '<bound member function type>' ->xanno 0x55aed11a2698
|           `-CXXThisExpr 0x55aed11b7f38 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x55aed11a4730 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x55aed11b80d0 <col:30, col:48>
|   `-ReturnStmt 0x55aed11b80c0 <col:32, col:45>
|     `-ImplicitCastExpr 0x55aed11b80a8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x55aed11b8088 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x55aed11b8058 <col:39> '<bound member function type>' ->xanno 0x55aed11a24f8
|           `-CXXThisExpr 0x55aed11b8048 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x55aed11a4818 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x55aed11b8268 <col:24, col:50>
|   `-ReturnStmt 0x55aed11b8258 <col:26, col:47>
|     `-UnaryOperator 0x55aed11b8240 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55aed11b8220 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x55aed11b8208 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55aed11b81b8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x55aed11ad4d8
|         |   `-CXXMemberCallExpr 0x55aed11b8198 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x55aed11b8168 <col:34> '<bound member function type>' ->xanno 0x55aed11a2698
|         |       `-CXXThisExpr 0x55aed11b8158 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x55aed11b81e8 <col:46> 'int' 0
|-CXXMethodDecl 0x55aed11a4920 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x55aed11b8438 <col:36, col:62>
|   `-ReturnStmt 0x55aed11b8428 <col:38, col:59>
|     `-UnaryOperator 0x55aed11b8410 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55aed11b83f0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55aed11b83d8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55aed11b8350 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x55aed11ad4d8
|         |   `-CXXMemberCallExpr 0x55aed11b8330 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55aed11b8300 <col:46> '<bound member function type>' ->xanno 0x55aed11a24f8
|         |       `-CXXThisExpr 0x55aed11b82f0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55aed11b8380 <col:58> 'int' 0
|-CXXMethodDecl 0x55aed11a4a38 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x55aed11b85d0 <col:26, col:53>
|   `-ReturnStmt 0x55aed11b85c0 <col:28, col:50>
|     `-UnaryOperator 0x55aed11b85a8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55aed11b8588 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x55aed11b8570 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55aed11b8520 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x55aed11ad7d8
|         |   `-CXXMemberCallExpr 0x55aed11b8500 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x55aed11b84d0 <col:36> '<bound member function type>' ->xanno 0x55aed11a2698
|         |       `-CXXThisExpr 0x55aed11b84c0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x55aed11b8550 <col:49> 'int' 0
|-CXXMethodDecl 0x55aed11a4b58 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x55aed11b87a8 <col:38, col:65>
|   `-ReturnStmt 0x55aed11b8798 <col:40, col:62>
|     `-UnaryOperator 0x55aed11b8780 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x55aed11b8760 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x55aed11b8748 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55aed11b86b8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x55aed11ad7d8
|         |   `-CXXMemberCallExpr 0x55aed11b8698 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55aed11b8668 <col:48> '<bound member function type>' ->xanno 0x55aed11a24f8
|         |       `-CXXThisExpr 0x55aed11b8658 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x55aed11b86e8 <col:61> 'int' 0
|-CXXMethodDecl 0x55aed11a4d08 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x55aed11a4c10 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x55aed11b8e78 <col:34, line:463:5>
|   |-ParenExpr 0x55aed11b8cc0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x55aed11b8c90 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55aed11b88f8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55aed11b88c8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55aed11b8818 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55aed11b8800 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55aed11b87c0 <col:23> 'int' lvalue ParmVar 0x55aed11a4c10 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55aed11b87e0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55aed11b88a8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55aed11b8878 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55aed11b8838 <col:33> 'int' lvalue ParmVar 0x55aed11a4c10 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55aed11b8890 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55aed11b8858 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55aed11a28e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55aed11b8958 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55aed11b8938 <col:56> 'int' 0
|   |   `-CallExpr 0x55aed11b8bf0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55aed11b8bd8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55aed11b8bb8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55aed0d0ef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55aed11b8c30 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11b8a48 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55aed11b8c48 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11b8a78 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55aed11b8c60 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55aed11b8ab0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x55aed11b8c78 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55aed11b8ba0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55aed11b8b88 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55aed11b8b48 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x55aed11b8e68 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x55aed11b8e50 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x55aed11b8e30 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x55aed11b8e00 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x55aed11b8db0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x55aed11ad4d8
|         |   `-CXXMemberCallExpr 0x55aed11b8d90 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x55aed11b8d60 <col:9> '<bound member function type>' ->xanno 0x55aed11a24f8
|         |       `-CXXThisExpr 0x55aed11b8d50 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x55aed11b8e18 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x55aed11b8de0 <col:21> 'int' lvalue ParmVar 0x55aed11a4c10 'i' 'int'
|-CXXMethodDecl 0x55aed11a4f58 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x55aed11a4dc8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x55aed11a4e40 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x55aed11b9508 <col:40, line:472:5>
|   |-ParenExpr 0x55aed11b9320 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x55aed11b92f0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x55aed11b8fd0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55aed11b8fa0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55aed11b8ef0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55aed11b8ed8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55aed11b8e98 <col:23> 'int' lvalue ParmVar 0x55aed11a4dc8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55aed11b8eb8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55aed11b8f80 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55aed11b8f50 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55aed11b8f10 <col:33> 'int' lvalue ParmVar 0x55aed11a4dc8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x55aed11b8f68 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x55aed11b8f30 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55aed11a28e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x55aed11b9030 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55aed11b9010 <col:56> 'int' 0
|   |   `-CallExpr 0x55aed11b9250 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x55aed11b9238 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55aed11b9218 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55aed0d0ef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55aed11b9290 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11b90a0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x55aed11b92a8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11b90d0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55aed11b92c0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55aed11b9108 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x55aed11b92d8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55aed11b9200 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55aed11b91e8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55aed11b91a8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x55aed11b94e8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x55aed11b9490 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x55aed11b9460 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x55aed11b9410 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x55aed11ad4d8
|     | |   `-CXXMemberCallExpr 0x55aed11b93f0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x55aed11b93c0 <col:2> '<bound member function type>' ->xanno 0x55aed11a2698
|     | |       `-CXXThisExpr 0x55aed11b93b0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x55aed11b9478 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x55aed11b9440 <col:14> 'int' lvalue ParmVar 0x55aed11a4dc8 'i' 'int'
|     `-ImplicitCastExpr 0x55aed11b94d0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x55aed11b94b0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x55aed11a4e40 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x55aed11a5118 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x55aed11a5020 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55aed11b9c88 <col:36, line:485:5>
|   |-ParenExpr 0x55aed11b99f0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x55aed11b99c0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55aed11b96a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55aed11b9670 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55aed11b9580 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55aed11b9568 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55aed11b9528 <col:23> 'int' lvalue ParmVar 0x55aed11a5020 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55aed11b9548 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55aed11b9650 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55aed11b9638 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55aed11b95a0 <col:33> 'int' lvalue ParmVar 0x55aed11a5020 'i' 'int'
|   |   |     `-BinaryOperator 0x55aed11b9618 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55aed11b9600 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55aed11b95c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55aed11a28e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55aed11b95e0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55aed11b9700 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55aed11b96e0 <col:60> 'int' 0
|   |   `-CallExpr 0x55aed11b9920 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55aed11b9908 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55aed11b98e8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55aed0d0ef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55aed11b9960 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11b9770 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55aed11b9978 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11b97a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55aed11b9990 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55aed11b97e0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x55aed11b99a8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55aed11b98d0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55aed11b98b8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55aed11b9878 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x55aed11b9c78 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x55aed11b9c60 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x55aed11b9c48 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55aed11b9c18 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x55aed11b9bb8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55aed11b9b88 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55aed11b9b00 <col:61, col:70> 'char const[48]' lvalue ->c 0x55aed11ad3b0
|             |   `-CXXMemberCallExpr 0x55aed11b9ae0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55aed11b9ab0 <col:61> '<bound member function type>' ->xanno 0x55aed11a24f8
|             |       `-CXXThisExpr 0x55aed11b9aa0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55aed11b9ba0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55aed11b9b30 <col:74> 'int' lvalue ParmVar 0x55aed11a5020 'i' 'int'
|-CXXMethodDecl 0x55aed11a5368 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x55aed11a51d8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55aed11a5250 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x55aed11ba3d8 <col:42, line:500:5>
|   |-ParenExpr 0x55aed11ba170 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x55aed11ba140 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55aed11b9e20 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55aed11b9df0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55aed11b9d00 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55aed11b9ce8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55aed11b9ca8 <col:23> 'int' lvalue ParmVar 0x55aed11a51d8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55aed11b9cc8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55aed11b9dd0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55aed11b9db8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55aed11b9d20 <col:33> 'int' lvalue ParmVar 0x55aed11a51d8 'i' 'int'
|   |   |     `-BinaryOperator 0x55aed11b9d98 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55aed11b9d80 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55aed11b9d40 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55aed11a28e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55aed11b9d60 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55aed11b9e80 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55aed11b9e60 <col:60> 'int' 0
|   |   `-CallExpr 0x55aed11ba0a0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55aed11ba088 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55aed11ba068 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55aed0d0ef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55aed11ba0e0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11b9ef0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55aed11ba0f8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11b9f28 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55aed11ba110 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55aed11b9f60 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x55aed11ba128 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55aed11ba050 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55aed11ba038 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55aed11b9ff8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x55aed11ba3b8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x55aed11ba368 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55aed11ba338 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x55aed11ba2e0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55aed11ba2b0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55aed11ba260 <col:48, col:57> 'char [48]' lvalue ->c 0x55aed11ad3b0
|     |     |   `-CXXMemberCallExpr 0x55aed11ba240 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55aed11ba210 <col:48> '<bound member function type>' ->xanno 0x55aed11a2698
|     |     |       `-CXXThisExpr 0x55aed11ba200 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55aed11ba2c8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55aed11ba290 <col:61> 'int' lvalue ParmVar 0x55aed11a51d8 'i' 'int'
|     `-ImplicitCastExpr 0x55aed11ba3a0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x55aed11ba380 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x55aed11a5250 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x55aed11a5528 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x55aed11a5430 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55aed11bab38 <col:35, line:513:5>
|   |-ParenExpr 0x55aed11ba848 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x55aed11ba818 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55aed11ba570 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55aed11ba540 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55aed11ba450 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55aed11ba438 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55aed11ba3f8 <col:23> 'int' lvalue ParmVar 0x55aed11a5430 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55aed11ba418 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55aed11ba520 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55aed11ba508 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55aed11ba470 <col:33> 'int' lvalue ParmVar 0x55aed11a5430 'i' 'int'
|   |   |     `-BinaryOperator 0x55aed11ba4e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55aed11ba4d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55aed11ba490 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55aed11a28e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55aed11ba4b0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55aed11ba5d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55aed11ba5b0 <col:60> 'int' 0
|   |   `-CallExpr 0x55aed11ba778 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55aed11ba760 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55aed11ba740 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55aed0d0ef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55aed11ba7b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11ba640 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55aed11ba7d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11ba678 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55aed11ba7e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55aed11ba6b0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x55aed11ba800 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55aed11ba728 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55aed11ba710 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55aed11ba6d0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x55aed11bab28 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x55aed11bab10 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x55aed11baaf8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55aed11baac8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x55aed11baa40 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55aed11baa10 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55aed11ba9c0 <col:60, col:69> 'char const[48]' lvalue ->c 0x55aed11ad3b0
|             |   `-CXXMemberCallExpr 0x55aed11ba9a0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55aed11ba970 <col:60> '<bound member function type>' ->xanno 0x55aed11a24f8
|             |       `-CXXThisExpr 0x55aed11ba960 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55aed11baa28 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55aed11ba9f0 <col:73> 'int' lvalue ParmVar 0x55aed11a5430 'i' 'int'
|-CXXMethodDecl 0x55aed11a5778 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x55aed11a55e8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55aed11a5660 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x55aed11bb258 <col:41, line:528:5>
|   |-ParenExpr 0x55aed11bafe0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x55aed11bafb0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55aed11bacd0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55aed11baca0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55aed11babb0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55aed11bab98 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55aed11bab58 <col:23> 'int' lvalue ParmVar 0x55aed11a55e8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55aed11bab78 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55aed11bac80 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55aed11bac68 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55aed11babd0 <col:33> 'int' lvalue ParmVar 0x55aed11a55e8 'i' 'int'
|   |   |     `-BinaryOperator 0x55aed11bac48 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55aed11bac30 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55aed11babf0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55aed11a28e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55aed11bac10 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x55aed11bad30 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55aed11bad10 <col:60> 'int' 0
|   |   `-CallExpr 0x55aed11baf10 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55aed11baef8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55aed11baed8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55aed0d0ef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55aed11baf50 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11bada0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x55aed11baf68 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11badd8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55aed11baf80 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55aed11bae10 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x55aed11baf98 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55aed11baec0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55aed11baea8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55aed11bae68 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x55aed11bb238 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x55aed11bb1e8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55aed11bb1b8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x55aed11bb160 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55aed11bb120 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55aed11bb0d0 <col:47, col:56> 'char [48]' lvalue ->c 0x55aed11ad3b0
|     |     |   `-CXXMemberCallExpr 0x55aed11bb0b0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55aed11bb080 <col:47> '<bound member function type>' ->xanno 0x55aed11a2698
|     |     |       `-CXXThisExpr 0x55aed11bb070 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55aed11bb138 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55aed11bb100 <col:60> 'int' lvalue ParmVar 0x55aed11a55e8 'i' 'int'
|     `-ImplicitCastExpr 0x55aed11bb220 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x55aed11bb200 <col:65> 'int16_t':'short' lvalue ParmVar 0x55aed11a5660 'x' 'int16_t':'short'
|-CXXMethodDecl 0x55aed11a5938 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x55aed11a5840 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55aed11bb928 <col:36, line:541:5>
|   |-ParenExpr 0x55aed11bb6c8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x55aed11bb698 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55aed11bb3f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55aed11bb3c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55aed11bb2d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55aed11bb2b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55aed11bb278 <col:23> 'int' lvalue ParmVar 0x55aed11a5840 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55aed11bb298 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55aed11bb3a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55aed11bb388 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55aed11bb2f0 <col:33> 'int' lvalue ParmVar 0x55aed11a5840 'i' 'int'
|   |   |     `-BinaryOperator 0x55aed11bb368 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55aed11bb350 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55aed11bb310 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55aed11a28e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55aed11bb330 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55aed11bb450 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55aed11bb430 <col:60> 'int' 0
|   |   `-CallExpr 0x55aed11bb5f8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55aed11bb5e0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55aed11bb5c0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55aed0d0ef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55aed11bb638 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11bb4c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55aed11bb650 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11bb4f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55aed11bb668 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55aed11bb530 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x55aed11bb680 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55aed11bb5a8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55aed11bb590 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55aed11bb550 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x55aed11bb918 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x55aed11bb900 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x55aed11bb8e8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55aed11bb8b8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x55aed11bb860 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55aed11bb830 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55aed11bb7e0 <col:61, col:70> 'char const[48]' lvalue ->c 0x55aed11ad3b0
|             |   `-CXXMemberCallExpr 0x55aed11bb7c0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55aed11bb790 <col:61> '<bound member function type>' ->xanno 0x55aed11a24f8
|             |       `-CXXThisExpr 0x55aed11bb780 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55aed11bb848 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55aed11bb810 <col:74> 'int' lvalue ParmVar 0x55aed11a5840 'i' 'int'
|-CXXMethodDecl 0x55aed11a5b08 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x55aed11a59f8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x55aed11a5a70 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x55aed11a5bb8 <col:20>
| `-OptimizeNoneAttr 0x55aed11a5c10 <col:30>
|-CXXMethodDecl 0x55aed11a5d48 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x55aed11a5c50 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x55aed11bbff8 <col:35, line:562:5>
|   |-ParenExpr 0x55aed11bbd98 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x55aed11bbd68 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55aed11bbac0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55aed11bba90 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55aed11bb9a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55aed11bb988 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55aed11bb948 <col:23> 'int' lvalue ParmVar 0x55aed11a5c50 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55aed11bb968 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55aed11bba70 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55aed11bba58 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55aed11bb9c0 <col:33> 'int' lvalue ParmVar 0x55aed11a5c50 'i' 'int'
|   |   |     `-BinaryOperator 0x55aed11bba38 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55aed11bba20 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55aed11bb9e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55aed11a28e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55aed11bba00 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55aed11bbb20 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55aed11bbb00 <col:60> 'int' 0
|   |   `-CallExpr 0x55aed11bbcc8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55aed11bbcb0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55aed11bbc90 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55aed0d0ef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55aed11bbd08 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11bbb90 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55aed11bbd20 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11bbbc8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55aed11bbd38 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55aed11bbc00 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x55aed11bbd50 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55aed11bbc78 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55aed11bbc60 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55aed11bbc20 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x55aed11bbfe8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x55aed11bbfd0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x55aed11bbfb8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55aed11bbf88 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x55aed11bbf30 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x55aed11bbf00 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55aed11bbeb0 <col:60, col:69> 'char const[48]' lvalue ->c 0x55aed11ad3b0
|             |   `-CXXMemberCallExpr 0x55aed11bbe90 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55aed11bbe60 <col:60> '<bound member function type>' ->xanno 0x55aed11a24f8
|             |       `-CXXThisExpr 0x55aed11bbe50 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55aed11bbf18 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55aed11bbee0 <col:73> 'int' lvalue ParmVar 0x55aed11a5c50 'i' 'int'
|-CXXMethodDecl 0x55aed11a5f58 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x55aed11a5e08 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55aed11a5e80 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x55aed11bc6d8 <col:41, line:577:5>
|   |-ParenExpr 0x55aed11bc468 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x55aed11bc438 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55aed11bc190 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55aed11bc160 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55aed11bc070 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55aed11bc058 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55aed11bc018 <col:23> 'int' lvalue ParmVar 0x55aed11a5e08 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55aed11bc038 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55aed11bc140 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55aed11bc128 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55aed11bc090 <col:33> 'int' lvalue ParmVar 0x55aed11a5e08 'i' 'int'
|   |   |     `-BinaryOperator 0x55aed11bc108 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55aed11bc0f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55aed11bc0b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55aed11a28e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55aed11bc0d0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x55aed11bc1f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55aed11bc1d0 <col:60> 'int' 0
|   |   `-CallExpr 0x55aed11bc398 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55aed11bc380 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55aed11bc360 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55aed0d0ef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55aed11bc3d8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11bc260 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x55aed11bc3f0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11bc298 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55aed11bc408 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55aed11bc2d0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x55aed11bc420 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55aed11bc348 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55aed11bc330 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55aed11bc2f0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x55aed11bc6b8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x55aed11bc668 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55aed11bc638 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x55aed11bc5d8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55aed11bc5a8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55aed11bc558 <col:47, col:56> 'char [48]' lvalue ->c 0x55aed11ad3b0
|     |     |   `-CXXMemberCallExpr 0x55aed11bc538 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55aed11bc508 <col:47> '<bound member function type>' ->xanno 0x55aed11a2698
|     |     |       `-CXXThisExpr 0x55aed11bc4f8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55aed11bc5c0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55aed11bc588 <col:60> 'int' lvalue ParmVar 0x55aed11a5e08 'i' 'int'
|     `-ImplicitCastExpr 0x55aed11bc6a0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x55aed11bc680 <col:65> 'int32_t':'int' lvalue ParmVar 0x55aed11a5e80 'x' 'int32_t':'int'
|-CXXMethodDecl 0x55aed11a6118 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x55aed11a6020 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x55aed11bce08 <col:36, line:591:5>
|   |-ParenExpr 0x55aed11bcb48 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x55aed11bcb18 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55aed11bc870 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55aed11bc840 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55aed11bc750 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55aed11bc738 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55aed11bc6f8 <col:23> 'int' lvalue ParmVar 0x55aed11a6020 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55aed11bc718 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55aed11bc820 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55aed11bc808 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55aed11bc770 <col:33> 'int' lvalue ParmVar 0x55aed11a6020 'i' 'int'
|   |   |     `-BinaryOperator 0x55aed11bc7e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55aed11bc7d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55aed11bc790 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55aed11a28e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55aed11bc7b0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55aed11bc8d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55aed11bc8b0 <col:60> 'int' 0
|   |   `-CallExpr 0x55aed11bca78 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55aed11bca60 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55aed11bca40 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55aed0d0ef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55aed11bcab8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11bc940 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55aed11bcad0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11bc978 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55aed11bcae8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55aed11bc9b0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x55aed11bcb00 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55aed11bca28 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55aed11bca10 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55aed11bc9d0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x55aed11bcdf8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x55aed11bcde0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x55aed11bcdc8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55aed11bcd98 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x55aed11bcd10 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x55aed11bcce0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55aed11bcc90 <col:61, col:70> 'char const[48]' lvalue ->c 0x55aed11ad3b0
|             |   `-CXXMemberCallExpr 0x55aed11bcc70 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55aed11bcc40 <col:61> '<bound member function type>' ->xanno 0x55aed11a24f8
|             |       `-CXXThisExpr 0x55aed11bcc30 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55aed11bccf8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55aed11bccc0 <col:74> 'int' lvalue ParmVar 0x55aed11a6020 'i' 'int'
|-CXXMethodDecl 0x55aed11a6368 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x55aed11a61d8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55aed11a6250 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x55aed11bd4e8 <col:42, line:606:5>
|   |-ParenExpr 0x55aed11bd278 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x55aed11bd248 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x55aed11bcfa0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55aed11bcf70 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55aed11bce80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55aed11bce68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55aed11bce28 <col:23> 'int' lvalue ParmVar 0x55aed11a61d8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55aed11bce48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55aed11bcf50 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x55aed11bcf38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55aed11bcea0 <col:33> 'int' lvalue ParmVar 0x55aed11a61d8 'i' 'int'
|   |   |     `-BinaryOperator 0x55aed11bcf18 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55aed11bcf00 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55aed11bcec0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55aed11a28e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x55aed11bcee0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x55aed11bd000 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55aed11bcfe0 <col:60> 'int' 0
|   |   `-CallExpr 0x55aed11bd1a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x55aed11bd190 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55aed11bd170 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55aed0d0ef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55aed11bd1e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11bd070 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x55aed11bd200 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11bd0a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55aed11bd218 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55aed11bd0e0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x55aed11bd230 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55aed11bd158 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55aed11bd140 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55aed11bd100 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x55aed11bd4c8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x55aed11bd478 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55aed11bd448 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x55aed11bd3e8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55aed11bd3b8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55aed11bd368 <col:48, col:57> 'char [48]' lvalue ->c 0x55aed11ad3b0
|     |     |   `-CXXMemberCallExpr 0x55aed11bd348 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55aed11bd318 <col:48> '<bound member function type>' ->xanno 0x55aed11a2698
|     |     |       `-CXXThisExpr 0x55aed11bd308 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55aed11bd3d0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55aed11bd398 <col:61> 'int' lvalue ParmVar 0x55aed11a61d8 'i' 'int'
|     `-ImplicitCastExpr 0x55aed11bd4b0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x55aed11bd490 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x55aed11a6250 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x55aed11a6500 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x55aed11a6430 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x55aed11bdd58 <col:33, line:620:5>
|   |-ParenExpr 0x55aed11bdad0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x55aed11bdaa0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55aed11bd6f0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55aed11bd6c0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55aed11bd560 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55aed11bd548 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55aed11bd508 <col:23> 'int' lvalue ParmVar 0x55aed11a6430 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55aed11bd528 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55aed11bd6a0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55aed11bd688 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55aed11bd580 <col:33> 'int' lvalue ParmVar 0x55aed11a6430 'i' 'int'
|   |   |     `-BinaryOperator 0x55aed11bd668 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55aed11bd650 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55aed11bd5a0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55aed11a28e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55aed11bd628 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55aed11bd610 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55aed11bd5d8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55aed11bd750 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55aed11bd730 <col:79> 'int' 0
|   |   `-CallExpr 0x55aed11bda00 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55aed11bd9e8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55aed11bd9c8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55aed0d0ef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55aed11bda40 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11bd838 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55aed11bda58 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11bd880 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55aed11bda70 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55aed11bd8b8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x55aed11bda88 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55aed11bd9b0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55aed11bd998 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55aed11bd958 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x55aed11bdd48 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x55aed11bdd30 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x55aed11bdd18 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x55aed11bdce8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x55aed11bdc60 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x55aed11bdc30 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x55aed11bdbe0 <col:67, col:76> 'char const[48]' lvalue ->c 0x55aed11ad3b0
|             |   `-CXXMemberCallExpr 0x55aed11bdbc0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x55aed11bdb90 <col:67> '<bound member function type>' ->xanno 0x55aed11a24f8
|             |       `-CXXThisExpr 0x55aed11bdb80 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x55aed11bdc48 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x55aed11bdc10 <col:80> 'int' lvalue ParmVar 0x55aed11a6430 'i' 'int'
|-CXXMethodDecl 0x55aed11a6718 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x55aed11a65c0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x55aed11a6640 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x55aed11be580 <col:45, line:635:5>
|   |-ParenExpr 0x55aed11be2c8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x55aed11be298 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x55aed11bdf60 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x55aed11bdf30 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x55aed11bddd0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x55aed11bddb8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x55aed11bdd78 <col:23> 'int' lvalue ParmVar 0x55aed11a65c0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x55aed11bdd98 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x55aed11bdf10 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x55aed11bdef8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x55aed11bddf0 <col:33> 'int' lvalue ParmVar 0x55aed11a65c0 'i' 'int'
|   |   |     `-BinaryOperator 0x55aed11bded8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x55aed11bdec0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x55aed11bde10 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x55aed11a28e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x55aed11bde98 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x55aed11bde80 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x55aed11bde48 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x55aed11bdfc0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x55aed11bdfa0 <col:79> 'int' 0
|   |   `-CallExpr 0x55aed11be1f8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x55aed11be1e0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x55aed11be1c0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55aed0d0ef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x55aed11be238 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11be030 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x55aed11be250 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x55aed11be078 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x55aed11be268 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x55aed11be0b0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x55aed11be280 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x55aed11be1a8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x55aed11be190 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x55aed11be148 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x55aed11be560 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x55aed11be4c8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x55aed11be498 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x55aed11be438 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x55aed11be408 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x55aed11be3b8 <col:54, col:63> 'char [48]' lvalue ->c 0x55aed11ad3b0
|     |     |   `-CXXMemberCallExpr 0x55aed11be398 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x55aed11be368 <col:54> '<bound member function type>' ->xanno 0x55aed11a2698
|     |     |       `-CXXThisExpr 0x55aed11be358 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x55aed11be420 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x55aed11be3e8 <col:67> 'int' lvalue ParmVar 0x55aed11a65c0 'i' 'int'
|     `-CXXConstCastExpr 0x55aed11be530 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x55aed11be518 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x55aed11be4e0 <col:91> 'const void *' lvalue ParmVar 0x55aed11a6640 'x' 'const void *'
|-CXXMethodDecl 0x55aed11a67e8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x55aed11be608 <col:34, line:640:5>
|   `-ReturnStmt 0x55aed11be5f8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x55aed11be5e0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x55aed11be5b0 <col:16> 'Packet *' lvalue ->_data_packet 0x55aed11adf68
|         `-CXXThisExpr 0x55aed11be5a0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x55aed11a6928 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x55aed11a6898 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55aed11b76c8 <col:46> 'bool' true
|-CXXMethodDecl 0x55aed11a6aa8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x55aed11a69e0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x55aed11a6b50 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x55aed11a7300 <line:660:22> "" ""
| |-EnumConstantDecl 0x55aed11a6c50 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55aed11a7370 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11a6c30 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x55aed11a6c10 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55aed119bdb0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55aed11a6ce0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55aed11a7388 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11a6cc0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x55aed11a6ca0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x55aed119be40 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x55aed11a6d70 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55aed11a73a0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11a6d50 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x55aed11a6d30 <col:21> 'int' 0
| |-EnumConstantDecl 0x55aed11a6e00 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55aed11a73b8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11a6de0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x55aed11a6dc0 <col:19> 'int' 16
| |-EnumConstantDecl 0x55aed11a6e90 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55aed11a73d0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11a6e70 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x55aed11a6e50 <col:21> 'int' 16
| |-EnumConstantDecl 0x55aed11a6f20 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55aed11a73e8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11a6f00 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x55aed11a6ee0 <col:19> 'int' 32
| |-EnumConstantDecl 0x55aed11a6fb0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55aed11a7400 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11a6f90 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x55aed11a6f70 <col:19> 'int' EnumConstant 0x55aed11a6e00 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55aed11a7040 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55aed11a7418 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11a7020 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x55aed11a7000 <col:19> 'int' EnumConstant 0x55aed11a6f20 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x55aed11a7110 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55aed11a7430 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11a70f0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x55aed11a70d0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55aed11a7090 <col:23> 'int' EnumConstant 0x55aed11a7040 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55aed11a70b0 <col:40> 'int' 2
| |-EnumConstantDecl 0x55aed11a71e0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x55aed11a7448 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x55aed11a71c0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x55aed11a71a0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x55aed11a7160 <col:23> 'int' EnumConstant 0x55aed11a7040 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x55aed11a7180 <col:40> 'int' 4
| `-EnumConstantDecl 0x55aed11a72b0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x55aed11a7460 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55aed11a7290 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x55aed11a7270 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x55aed11a7230 <col:23> 'int' EnumConstant 0x55aed11a7040 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x55aed11a7250 <col:40> 'int' 8
|-CXXMethodDecl 0x55aed11a74a0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x55aed11a7540 <col:68> "" ""
|-CXXMethodDecl 0x55aed11a75d8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x55aed11a7678 <col:45> "" ""
|-CXXMethodDecl 0x55aed11a7710 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55aed11a77b0 <col:57> "" ""
|-CXXMethodDecl 0x55aed11a7848 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x55aed11a78e8 <col:45> "" ""
|-CXXMethodDecl 0x55aed11a7980 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x55aed11a7a20 <col:57> "" ""
|-CXXMethodDecl 0x55aed11a7ab0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x55aed11a7b50 <col:51> "" ""
|-CXXMethodDecl 0x55aed11a7be0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55aed11a7c80 <col:63> "" ""
|-CXXMethodDecl 0x55aed11a7d10 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x55aed11a7db0 <col:53> "" ""
|-CXXMethodDecl 0x55aed11a7e40 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55aed11a7ee0 <col:65> "" ""
|-CXXMethodDecl 0x55aed11a7ff8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55aed11a7f68 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x55aed11a80a0 <col:61> "" ""
|-CXXMethodDecl 0x55aed11a8238 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55aed11a8128 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x55aed11a81a0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55aed11a82e8 <col:67> "" ""
|-CXXMethodDecl 0x55aed11a8400 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55aed11a8370 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55aed11a84a8 <col:63> "" ""
|-CXXMethodDecl 0x55aed11a8640 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55aed11a8530 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55aed11a85a8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55aed11a86f0 <col:69> "" ""
|-CXXMethodDecl 0x55aed11a8808 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55aed11a8778 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55aed11a88b0 <col:63> "" ""
|-CXXMethodDecl 0x55aed11aaf88 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55aed11aae78 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55aed11aaef0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55aed11ab038 <col:69> "" ""
|-CXXMethodDecl 0x55aed11ab150 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x55aed11ab0c0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x55aed11ab1f8 <col:62> "" ""
|-CXXMethodDecl 0x55aed11ab390 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55aed11ab280 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55aed11ab2f8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x55aed11ab440 <col:68> "" ""
|-CXXMethodDecl 0x55aed11ab558 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x55aed11ab4c8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x55aed11ab600 <col:63> "" ""
|-CXXMethodDecl 0x55aed11ab798 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x55aed11ab688 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x55aed11ab700 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x55aed11ab848 <col:69> "" ""
|-CXXMethodDecl 0x55aed11ab8d8 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x55aed11ab978 <col:64> "" ""
|-CXXMethodDecl 0x55aed11aba08 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x55aed11abaa8 <col:52> "" ""
|-CXXMethodDecl 0x55aed11abb38 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x55aed11abbd8 <col:67> "" ""
|-CXXMethodDecl 0x55aed11abc68 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x55aed11abd08 <col:55> "" ""
|-CXXMethodDecl 0x55aed11abe20 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x55aed11abd90 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55aed11abec8 <col:58> "" ""
|-CXXMethodDecl 0x55aed11ac060 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x55aed11abf50 <col:33> col:36 'int'
| |-ParmVarDecl 0x55aed11abfc8 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x55aed11ac110 <col:62> "" ""
|-CXXMethodDecl 0x55aed11ac228 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x55aed11ac198 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55aed11ac2d0 <col:58> "" ""
|-CXXMethodDecl 0x55aed11ac468 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x55aed11ac358 <col:33> col:36 'int'
| |-ParmVarDecl 0x55aed11ac3d0 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x55aed11ac518 <col:62> "" ""
|-CXXMethodDecl 0x55aed11ac630 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x55aed11ac5a0 <col:34> col:37 'int'
| `-DeprecatedAttr 0x55aed11ac6d8 <col:60> "" ""
|-CXXMethodDecl 0x55aed11ac870 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x55aed11ac760 <col:34> col:37 'int'
| |-ParmVarDecl 0x55aed11ac7d8 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x55aed11ac920 <col:64> "" ""
|-CXXMethodDecl 0x55aed11aca38 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x55aed11ac9a8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x55aed11acae0 <col:58> "" ""
|-CXXMethodDecl 0x55aed11acc78 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x55aed11acb68 <col:33> col:36 'int'
| |-ParmVarDecl 0x55aed11acbe0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x55aed11acd28 <col:62> "" ""
|-CXXMethodDecl 0x55aed11ace40 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x55aed11acdb0 <col:33> col:36 'int'
| `-DeprecatedAttr 0x55aed11acee8 <col:59> "" ""
|-CXXMethodDecl 0x55aed11ad080 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x55aed11acf70 <col:33> col:36 'int'
| |-ParmVarDecl 0x55aed11acfe8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x55aed11ad130 <col:63> "" ""
|-AccessSpecDecl 0x55aed11ad1a0 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x55aed11ad1c8 prev 0x55aed11a23d0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55aed11ad2c0 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x55aed11ad3b0 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x55aed11ad4d8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x55aed11ad658 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x55aed11ad7d8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x55aed11ad958 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x55aed11be788 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55aed11beff8 <col:11>
| |-CXXDestructorDecl 0x55aed11be860 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x55aed11be998 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x55aed11be998
| | `-ParmVarDecl 0x55aed11beaa8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x55aed11beb48 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55aed11beb48
| | `-ParmVarDecl 0x55aed11bec58 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x55aed11c1a18 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55aed11c1b28 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x55aed11c1da8 <col:11>
| |   `-ReturnStmt 0x55aed11c1d98 <col:11>
| |     `-UnaryOperator 0x55aed11c1d80 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55aed11c1d70 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x55aed11c1b98 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x55aed11c1b98
|   `-ParmVarDecl 0x55aed11c1ca8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x55aed11ad9c0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55aed11adad8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x55aed11adb78 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x55aed11adbe0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x55aed11adc48 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x55aed11adcb0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x55aed11add10 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x55aed11addd0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x55aed11ade30 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x55aed11ade90 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x55aed11be698 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x55aed11adb78 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x55aed11bf008 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x55aed11bf060 <col:12>
| |-CXXConstructorDecl 0x55aed11becc8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x55aed11becc8
| | `-ParmVarDecl 0x55aed11bedd8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x55aed11bee78 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x55aed11bee78
| | `-ParmVarDecl 0x55aed11bef88 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x55aed11c1100 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x55aed11adf08 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x55aed11adf68 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x55aed11adfd0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x55aed11ae038 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x55aed11ae0a0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x55aed11ae108 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x55aed11ae168 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x55aed11ae1c8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x55aed11ae230 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x55aed11ae2b8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x55aed11adf08 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x55aed11be630 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x55aed11ae168 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x55aed11bf070 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x55aed11bf0d0 <col:21, line:755:5>
|-CXXConstructorDecl 0x55aed11ae458 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x55aed11ae398 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x55aed11ae550 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x55aed11ae738 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x55aed11ae640 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x55aed11aea08 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x55aed11ae7f0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x55aed11ae868 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x55aed11ae8e0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55aed11aec28 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x55aed11aead8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x55aed11aeb50 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x55aed11b7208 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x55aed11aece8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x55aed11aed60 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x55aed11aedd8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x55aed11b7360 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55aed11b72d0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x55aed11b74a8 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x55aed11b7418 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x55aed11b75a0 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55aed0fa87b0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x55aed0fa88c8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x55aed0fa8968 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x55aed0fa89c8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x55aed0fa8a28 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x55aed0fa8ad8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55aed0fa8de0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x55aed0fa8ef8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x55aed0fa8fa0 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x55aed0fa9008 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x55aed0fa9098 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x55aed0faf130 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x55aed0faf568 <col:12>
|-CXXConstructorDecl 0x55aed0faf238 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55aed0faf348 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55aed0fa8fa0 'data' 'const char *'
| | `-ImplicitCastExpr 0x55aed0fb1af0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x55aed0fb1ac0 <col:12> 'const char *const' lvalue .data 0x55aed0fa8fa0
| |     `-DeclRefExpr 0x55aed0fb1aa0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55aed0faf348 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55aed0fa9008 'length' 'int'
| | `-ImplicitCastExpr 0x55aed0fb1b80 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x55aed0fb1b50 <col:12> 'const int' lvalue .length 0x55aed0fa9008
| |     `-DeclRefExpr 0x55aed0fb1b30 <col:12> 'const String::rep_t' lvalue ParmVar 0x55aed0faf348 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x55aed0fa9098 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x55aed0fb1c10 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x55aed0fb1be0 <col:12> 'String::memo_t *const' lvalue .memo 0x55aed0fa9098
| |     `-DeclRefExpr 0x55aed0fb1bc0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55aed0faf348 '' 'const String::rep_t &'
| `-CompoundStmt 0x55aed0fb1c68 <col:12>
|-CXXConstructorDecl 0x55aed0faf3e8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55aed0faf3e8
| `-ParmVarDecl 0x55aed0faf4f8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x55aed0fb4a50 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x55aed0fc0468 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x55aed0fc0578 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x55aed0fc0a90 <col:12>
|   |-BinaryOperator 0x55aed0fc08a8 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55aed0fc0860 <col:12> 'const char *' lvalue ->data 0x55aed0fa8fa0
|   | | `-CXXThisExpr 0x55aed0fc0850 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55aed0fc0890 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x55aed0fc0820 <col:12> 'const char *const' lvalue .data 0x55aed0fa8fa0
|   |     `-DeclRefExpr 0x55aed0fc0800 <col:12> 'const String::rep_t' lvalue ParmVar 0x55aed0fc0578 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55aed0fc0970 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x55aed0fc0928 <col:12> 'int' lvalue ->length 0x55aed0fa9008
|   | | `-CXXThisExpr 0x55aed0fc0918 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55aed0fc0958 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x55aed0fc08e8 <col:12> 'const int' lvalue .length 0x55aed0fa9008
|   |     `-DeclRefExpr 0x55aed0fc08c8 <col:12> 'const String::rep_t' lvalue ParmVar 0x55aed0fc0578 '' 'const String::rep_t &'
|   |-BinaryOperator 0x55aed0fc0a38 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x55aed0fc09f0 <col:12> 'String::memo_t *' lvalue ->memo 0x55aed0fa9098
|   | | `-CXXThisExpr 0x55aed0fc09e0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x55aed0fc0a20 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x55aed0fc09b0 <col:12> 'String::memo_t *const' lvalue .memo 0x55aed0fa9098
|   |     `-DeclRefExpr 0x55aed0fc0990 <col:12> 'const String::rep_t' lvalue ParmVar 0x55aed0fc0578 '' 'const String::rep_t &'
|   `-ReturnStmt 0x55aed0fc0a80 <col:12>
|     `-UnaryOperator 0x55aed0fc0a68 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x55aed0fc0a58 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x55aed0fc05e8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55aed0fc05e8
  `-ParmVarDecl 0x55aed0fc06f8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x55aed0f9fd20 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x55aed0f9fe38 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x55aed0f9fec8 <col:16, col:22> col:16 public
|-TypedefDecl 0x55aed0f9ff08 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x55aed0c75fd0 'const char *'
|   `-QualType 0x55aed0c75521 'const char' const
|     `-BuiltinType 0x55aed0c75520 'char'
|-TypedefDecl 0x55aed0f9ff90 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x55aed0f9ff60 'String::const_iterator' sugar
|   |-Typedef 0x55aed0f9ff08 'const_iterator'
|   `-PointerType 0x55aed0c75fd0 'const char *'
|     `-QualType 0x55aed0c75521 'const char' const
|       `-BuiltinType 0x55aed0c75520 'char'
|-TypedefDecl 0x55aed0fa0100 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x55aed0fa0070 'int (String::*)() const'
|   |-RecordType 0x55aed0f9fdb0 'String'
|   | `-CXXRecord 0x55aed0f9fd20 'String'
|   `-ParenType 0x55aed0fa0010 'int () const' sugar
|     `-FunctionProtoType 0x55aed0f73ba0 'int () const' const cdecl
|       `-BuiltinType 0x55aed0c75580 'int'
|-TypedefDecl 0x55aed0fa0168 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x55aed0dc8780 'int64_t' sugar
|   |-Typedef 0x55aed0cde390 'int64_t'
|   `-TypedefType 0x55aed0cb7630 '__int64_t' sugar
|     |-Typedef 0x55aed0cb7208 '__int64_t'
|     `-BuiltinType 0x55aed0c755a0 'long'
|-TypedefDecl 0x55aed0fa01d0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x55aed0dc86a0 'uint64_t' sugar
|   |-Typedef 0x55aed0cde530 'uint64_t'
|   `-TypedefType 0x55aed0cb76c0 '__uint64_t' sugar
|     |-Typedef 0x55aed0cb7278 '__uint64_t'
|     `-BuiltinType 0x55aed0c75640 'unsigned long'
|-TypedefDecl 0x55aed0fa0260 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x55aed0fa0230 'String::intmax_t' sugar
|   |-Typedef 0x55aed0fa0168 'intmax_t'
|   `-TypedefType 0x55aed0dc8780 'int64_t' sugar
|     |-Typedef 0x55aed0cde390 'int64_t'
|     `-TypedefType 0x55aed0cb7630 '__int64_t' sugar
|       |-Typedef 0x55aed0cb7208 '__int64_t'
|       `-BuiltinType 0x55aed0c755a0 'long'
|-TypedefDecl 0x55aed0fa02f0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x55aed0fa02c0 'String::uintmax_t' sugar
|   |-Typedef 0x55aed0fa01d0 'uintmax_t'
|   `-TypedefType 0x55aed0dc86a0 'uint64_t' sugar
|     |-Typedef 0x55aed0cde530 'uint64_t'
|     `-TypedefType 0x55aed0cb76c0 '__uint64_t' sugar
|       |-Typedef 0x55aed0cb7278 '__uint64_t'
|       `-BuiltinType 0x55aed0c75640 'unsigned long'
|-CXXConstructorDecl 0x55aed0fa03b0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x55aed0fa0558 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x55aed0fa0498 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x55aed0fa0708 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x55aed0fa0648 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x55aed0fa0860 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x55aed0fa07d0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x55aed0fa0a78 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x55aed0fa0928 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x55aed0fa09a8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x55aed0fa0c98 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x55aed0fa0b48 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x55aed0fa0bc8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x55aed0fa0eb8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55aed0fa0d68 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x55aed0fa0de8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x55aed0fa10d8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x55aed0fa0f88 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x55aed0fa1008 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x55aed0fa1268 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x55aed0fa11a0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x55aed0fa13e8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x55aed0fa1328 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x55aed0fa1578 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x55aed0fa14b0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x55aed0fa16d0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x55aed0fa1640 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x55aed0fa1828 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x55aed0fa1798 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x55aed0fa1980 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x55aed0fa18f0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x55aed0fa1b08 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x55aed0fa1a48 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x55aed0fa1c98 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x55aed0fa1bd0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x55aed0fa1e28 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x55aed0fa1d60 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x55aed0fa1fb8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x55aed0fa1ef0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x55aed0fa20b0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x55aed0fa21d8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x55aed0fa2358 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x55aed0fa2290 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x55aed0fa24a8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x55aed0fa2418 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x55aed0fa2560 <col:63> "" ""
|-CXXMethodDecl 0x55aed0fa26a8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x55aed0fa25e8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x55aed0fa28b8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x55aed0fa2768 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x55aed0fa27e8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x55aed0fa2ad8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x55aed0fa2980 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x55aed0fa2a00 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x55aed0fa2db8 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x55aed0fa2b98 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x55aed0fa2c18 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x55aed0faec00 <col:55> 'int' 10
| `-ParmVarDecl 0x55aed0fa2c90 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55aed0faec20 <col:76> 'bool' true
|-CXXMethodDecl 0x55aed0fa3098 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x55aed0fa2e80 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x55aed0fa2f00 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x55aed0faec30 <col:56> 'int' 10
| `-ParmVarDecl 0x55aed0fa2f78 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x55aed0faec50 <col:77> 'bool' true
|-CXXMethodDecl 0x55aed0fa31a0 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x55aed0fa3268 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x55aed0fa3330 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x55aed0fa33d0 <col:20>
| `-OptimizeNoneAttr 0x55aed0fa3428 <col:30>
|-CXXConversionDecl 0x55aed0fa3518 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x55aed0fa35e8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x55aed0fa36a8 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x55aed0fa3798 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55aed0fa3858 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x55aed0fa39d8 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x55aed0fa3910 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x55aed0fa3b28 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x55aed0fa3a98 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x55aed0fa3c18 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x55aed0fa3cd8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x55aed0fa3f28 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x55aed0fa3d90 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x55aed0fa3e10 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x55aed0fa4188 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x55aed0fa3ff0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x55aed0fa4070 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x55aed0fa4258 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x55aed0fa4468 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x55aed0fa4310 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x55aed0fa4390 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x55aed0fa4688 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x55aed0fa4530 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x55aed0fa45b0 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x55aed0fa4818 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x55aed0fa4750 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x55aed0fa4908 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x55aed0fa4a78 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x55aed0fa49b8 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55aed0fa4c88 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x55aed0fa4b38 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55aed0fa4bb8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55aed0fa4ea0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x55aed0fa4d48 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x55aed0fa4dc0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x55aed0fa5030 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x55aed0fa4f60 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55aed0fa5250 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x55aed0fa50f0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x55aed0fa5170 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55aed0fa53a0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x55aed0fa5310 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x55aed0fa5578 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x55aed0fa5460 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55aed0fa54e0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x55aed0fa56c8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x55aed0fa5638 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x55aed0fa58e0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x55aed0fa5780 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x55aed0fa5800 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x55aed0faec60 <col:39> 'int' 0
|-CXXMethodDecl 0x55aed0fa5b00 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x55aed0fa59a0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x55aed0fa5a20 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x55aed0faec80 <col:48> 'int' 0
|-CXXMethodDecl 0x55aed0fa5ce0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x55aed0fa5bc0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x55aed0fa5c40 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x55aed0faeca0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x55aed0fa5db0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x55aed0fa5e70 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x55aed0fa5f30 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x55aed0fa5ff0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x55aed0fa60b0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x55aed0fa6258 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x55aed0fa6160 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x55aed0fa63d8 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x55aed0fa6310 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x55aed0fa65b0 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x55aed0fa6498 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x55aed0fa6728 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x55aed0fa6668 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x55aed0fa6870 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x55aed0fa67e0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x55aed0fa69c0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x55aed0fa6930 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x55aed0fa6b98 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x55aed0fa6a80 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x55aed0fa6b00 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x55aed0fa6d78 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x55aed0fa6c60 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x55aed0fa6ce0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x55aed0fa6ec8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x55aed0fa6e38 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x55aed0fa70d8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x55aed0fa6f88 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x55aed0fa7008 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x55aed0fa7238 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x55aed0fa71a0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x55aed0fa7390 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x55aed0fa72f8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x55aed0fa7438 <col:57> "" ""
|-CXXMethodDecl 0x55aed0fa7548 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x55aed0fa74b8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x55aed0fa7698 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x55aed0fa7608 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x55aed0fa7818 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x55aed0fa7750 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x55aed0fa78e0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x55aed0fa79a0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x55aed0fa7a60 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x55aed0fa7b00 <col:49> "" ""
|-CXXMethodDecl 0x55aed0fa7b90 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x55aed0fa7c50 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x55aed0fa7d40 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x55aed0fa7e08 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x55aed0fa7ec8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x55aed0fa7f88 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x55aed0fa8080 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x55aed0fa8148 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x55aed0fa8210 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x55aed0fa83e8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x55aed0fa82c8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x55aed0fa8348 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x55aed0fa8610 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x55aed0fa84b0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x55aed0fa8530 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x55aed0fa8720 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x55aed0fa8788 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x55aed0fa87b0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x55aed0fa88c8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x55aed0fa8968 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x55aed0fa89c8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x55aed0fa8a28 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x55aed0fa8ad8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x55aed0fa8b40 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x55aed0fa8d78 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x55aed0fa8dc8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55aed0fa8d58 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x55aed0fa8c68 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x55aed0fa8c10 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x55aed0fa8c50 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x55aed0fa8c30 <col:32> 'int' 8
|-CXXRecordDecl 0x55aed0fa8de0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x55aed0fa8ef8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x55aed0fa8fa0 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x55aed0fa9008 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x55aed0fa9098 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x55aed0faf130 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x55aed0faf568 <col:12>
| |-CXXConstructorDecl 0x55aed0faf238 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55aed0faf348 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55aed0fa8fa0 'data' 'const char *'
| | | `-ImplicitCastExpr 0x55aed0fb1af0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x55aed0fb1ac0 <col:12> 'const char *const' lvalue .data 0x55aed0fa8fa0
| | |     `-DeclRefExpr 0x55aed0fb1aa0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55aed0faf348 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55aed0fa9008 'length' 'int'
| | | `-ImplicitCastExpr 0x55aed0fb1b80 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x55aed0fb1b50 <col:12> 'const int' lvalue .length 0x55aed0fa9008
| | |     `-DeclRefExpr 0x55aed0fb1b30 <col:12> 'const String::rep_t' lvalue ParmVar 0x55aed0faf348 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x55aed0fa9098 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x55aed0fb1c10 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x55aed0fb1be0 <col:12> 'String::memo_t *const' lvalue .memo 0x55aed0fa9098
| | |     `-DeclRefExpr 0x55aed0fb1bc0 <col:12> 'const String::rep_t' lvalue ParmVar 0x55aed0faf348 '' 'const String::rep_t &'
| | `-CompoundStmt 0x55aed0fb1c68 <col:12>
| |-CXXConstructorDecl 0x55aed0faf3e8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55aed0faf3e8
| | `-ParmVarDecl 0x55aed0faf4f8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x55aed0fb4a50 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x55aed0fc0468 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x55aed0fc0578 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x55aed0fc0a90 <col:12>
| |   |-BinaryOperator 0x55aed0fc08a8 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x55aed0fc0860 <col:12> 'const char *' lvalue ->data 0x55aed0fa8fa0
| |   | | `-CXXThisExpr 0x55aed0fc0850 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55aed0fc0890 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x55aed0fc0820 <col:12> 'const char *const' lvalue .data 0x55aed0fa8fa0
| |   |     `-DeclRefExpr 0x55aed0fc0800 <col:12> 'const String::rep_t' lvalue ParmVar 0x55aed0fc0578 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55aed0fc0970 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x55aed0fc0928 <col:12> 'int' lvalue ->length 0x55aed0fa9008
| |   | | `-CXXThisExpr 0x55aed0fc0918 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55aed0fc0958 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x55aed0fc08e8 <col:12> 'const int' lvalue .length 0x55aed0fa9008
| |   |     `-DeclRefExpr 0x55aed0fc08c8 <col:12> 'const String::rep_t' lvalue ParmVar 0x55aed0fc0578 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x55aed0fc0a38 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x55aed0fc09f0 <col:12> 'String::memo_t *' lvalue ->memo 0x55aed0fa9098
| |   | | `-CXXThisExpr 0x55aed0fc09e0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x55aed0fc0a20 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x55aed0fc09b0 <col:12> 'String::memo_t *const' lvalue .memo 0x55aed0fa9098
| |   |     `-DeclRefExpr 0x55aed0fc0990 <col:12> 'const String::rep_t' lvalue ParmVar 0x55aed0fc0578 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x55aed0fc0a80 <col:12>
| |     `-UnaryOperator 0x55aed0fc0a68 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x55aed0fc0a58 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x55aed0fc05e8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x55aed0fc05e8
|   `-ParmVarDecl 0x55aed0fc06f8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x55aed0fa9110 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x55aed0fa9358 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x55aed0fa9178 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x55aed0fa91f8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x55aed0fa9270 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x55aed0faf0f0 <col:79, line:261:5>
|   |-BinaryOperator 0x55aed0faed68 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x55aed0faed00 <col:2, col:5> 'const char *' lvalue .data 0x55aed0fa8fa0
|   | | `-MemberExpr 0x55aed0faecd0 <col:2> 'String::rep_t' lvalue ->_r 0x55aed0fa9110
|   | |   `-CXXThisExpr 0x55aed0faecc0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55aed0faed50 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x55aed0faed30 <col:12> 'const char *' lvalue ParmVar 0x55aed0fa9178 'data' 'const char *'
|   |-BinaryOperator 0x55aed0faee30 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x55aed0faedc8 <col:2, col:5> 'int' lvalue .length 0x55aed0fa9008
|   | | `-MemberExpr 0x55aed0faed98 <col:2> 'String::rep_t' lvalue ->_r 0x55aed0fa9110
|   | |   `-CXXThisExpr 0x55aed0faed88 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x55aed0faee18 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x55aed0faedf8 <col:14> 'int' lvalue ParmVar 0x55aed0fa91f8 'length' 'int'
|   `-IfStmt 0x55aed0faf0d8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x55aed0faef50 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55aed0faef38 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x55aed0faef18 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x55aed0faeef8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x55aed0faee90 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x55aed0fa9098
|     |       | `-MemberExpr 0x55aed0faee60 <col:7> 'String::rep_t' lvalue ->_r 0x55aed0fa9110
|     |       |   `-CXXThisExpr 0x55aed0faee50 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x55aed0faeee0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x55aed0faeec0 <col:17> 'String::memo_t *' lvalue ParmVar 0x55aed0fa9270 'memo' 'String::memo_t *'
|     `-CallExpr 0x55aed0faf0b0 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x55aed0faf098 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x55aed0faefa0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x55aed0f97d88 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x55aed0faf008 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55aed0fa8968
|         `-ImplicitCastExpr 0x55aed0faeff0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x55aed0faefd0 <col:27> 'String::memo_t *' lvalue ParmVar 0x55aed0fa9270 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x55aed0fa9608 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x55aed0fa9428 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x55aed0fa94a8 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x55aed0fa9520 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x55aed0fa9110 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x55aed0faf578 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x55aed0faf708 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x55aed0faf670 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x55aed0faf5e0 <col:2> '<bound member function type>' ->assign_memo 0x55aed0fa9358
|     | `-ImplicitCastExpr 0x55aed0faf6a8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x55aed0faf5d0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x55aed0faf6c0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x55aed0faf610 <col:14> 'const char *' lvalue ParmVar 0x55aed0fa9428 'data' 'const char *'
|     |-ImplicitCastExpr 0x55aed0faf6d8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x55aed0faf630 <col:20> 'int' lvalue ParmVar 0x55aed0fa94a8 'length' 'int'
|     `-ImplicitCastExpr 0x55aed0faf6f0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x55aed0faf650 <col:28> 'String::memo_t *' lvalue ParmVar 0x55aed0fa9520 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x55aed0fa9798 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x55aed0fa96d8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x55aed0faf960 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x55aed0faf8e0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x55aed0faf730 <col:2> '<bound member function type>' ->assign_memo 0x55aed0fa9358
|     | `-CXXThisExpr 0x55aed0faf720 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x55aed0faf918 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x55aed0faf7b0 <col:14, col:19> 'const char *' lvalue .data 0x55aed0fa8fa0
|     |   `-MemberExpr 0x55aed0faf780 <col:14, col:16> 'String::rep_t' lvalue ._r 0x55aed0fa9110
|     |     `-DeclRefExpr 0x55aed0faf760 <col:14> 'const String' lvalue ParmVar 0x55aed0fa96d8 'x' 'const String &'
|     |-ImplicitCastExpr 0x55aed0faf930 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x55aed0faf830 <col:25, col:30> 'int' lvalue .length 0x55aed0fa9008
|     |   `-MemberExpr 0x55aed0faf800 <col:25, col:27> 'String::rep_t' lvalue ._r 0x55aed0fa9110
|     |     `-DeclRefExpr 0x55aed0faf7e0 <col:25> 'const String' lvalue ParmVar 0x55aed0fa96d8 'x' 'const String &'
|     `-ImplicitCastExpr 0x55aed0faf948 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x55aed0faf8b0 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x55aed0fa9098
|         `-MemberExpr 0x55aed0faf880 <col:38, col:40> 'String::rep_t' lvalue ._r 0x55aed0fa9110
|           `-DeclRefExpr 0x55aed0faf860 <col:38> 'const String' lvalue ParmVar 0x55aed0fa96d8 'x' 'const String &'
|-CXXMethodDecl 0x55aed0fa9860 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x55aed0fb0320 <col:31, line:278:5>
|   `-IfStmt 0x55aed0fb0308 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x55aed0fafa00 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x55aed0faf9e8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x55aed0faf9b8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55aed0fa9098
|     |     `-MemberExpr 0x55aed0faf988 <col:6> 'String::rep_t' lvalue ->_r 0x55aed0fa9110
|     |       `-CXXThisExpr 0x55aed0faf978 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x55aed0fb02e0 <col:15, line:277:2>
|       |-ParenExpr 0x55aed0fafeb0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x55aed0fafe80 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x55aed0fafb10 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x55aed0fafaf8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x55aed0fafae0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x55aed0fafaa0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55aed0fa8968
|       |   |       `-ImplicitCastExpr 0x55aed0fafa88 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x55aed0fafa58 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x55aed0fa9098
|       |   |           `-MemberExpr 0x55aed0fafa28 <col:27> 'String::rep_t' lvalue ->_r 0x55aed0fa9110
|       |   |             `-CXXThisExpr 0x55aed0fafa18 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x55aed0fafb70 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x55aed0fafb50 <col:54> 'int' 0
|       |   `-CallExpr 0x55aed0fafde0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x55aed0fafdc8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x55aed0fafd48 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x55aed0d0ef90 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x55aed0fafe20 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55aed0fafc58 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x55aed0fafe38 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x55aed0fafc88 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x55aed0fafe50 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x55aed0fafcc0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x55aed0fafe68 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x55aed0fafd30 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x55aed0fafd18 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x55aed0fafce0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x55aed0fb0200 <line:274:6, line:275:22>
|       | |-CallExpr 0x55aed0fb00c0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x55aed0fb00a8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x55aed0fb0020 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x55aed0f991d0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x55aed0fafff0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x55aed0fa8968
|       | |   `-ImplicitCastExpr 0x55aed0faffd8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x55aed0faffa8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x55aed0fa9098
|       | |       `-MemberExpr 0x55aed0faff78 <col:40> 'String::rep_t' lvalue ->_r 0x55aed0fa9110
|       | |         `-CXXThisExpr 0x55aed0faff68 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x55aed0fb01c0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x55aed0fb01a8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x55aed0fb00e8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x55aed0fae040 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x55aed0fb01e8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x55aed0fb0148 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x55aed0fa9098
|       |       `-MemberExpr 0x55aed0fb0118 <col:15> 'String::rep_t' lvalue ->_r 0x55aed0fa9110
|       |         `-CXXThisExpr 0x55aed0fb0108 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x55aed0fb02c0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x55aed0fb0258 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x55aed0fa9098
|         | `-MemberExpr 0x55aed0fb0228 <col:6> 'String::rep_t' lvalue ->_r 0x55aed0fa9110
|         |   `-CXXThisExpr 0x55aed0fb0218 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x55aed0fb02a8 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x55aed0fb0288 <col:16> 'int' 0
|-CXXMethodDecl 0x55aed0fa9af8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x55aed0fa9918 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55aed0fa9998 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55aed0fa9a10 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x55aed0fa9bd0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x55aed0fa9e20 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x55aed0fa9c88 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x55aed0fa9d08 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x55aed0fa9d80 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x55aed0faa008 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x55aed0fa9ef0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x55aed0fa9f70 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x55aed0faa108 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x55aed0fb03f8 <col:41, line:286:5>
|   `-ReturnStmt 0x55aed0fb03e8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x55aed0fb03b8 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x55aed0fb0380 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x55aed0fb0368 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x55aed0fb0348 <col:46> 'int' 1
|-CXXMethodDecl 0x55aed0faa3a8 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x55aed0faa1c0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x55aed0faa240 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x55aed0faa2c0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x55aed0fae040 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x55aed0faa470 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x55aed0fae110 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x55aed0fae2e0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x55aed0fae1c8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x55aed0fae248 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x55aed0fae3a0 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x55aed0fae468 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x55aed0fae568 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x55aed0fae5e0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x55aed0fae658 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x55aed0fae6c0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x55aed0fae7c0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x55aed0fae810 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x55aed0fae7a0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x55aed0fae780 <col:22> 'int' 14
|-CXXMethodDecl 0x55aed0faea28 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x55aed0fae840 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x55aed0fae8c0 <col:38> col:41 'int'
| `-ParmVarDecl 0x55aed0fae940 <col:43> col:46 'int'
|-FriendDecl 0x55aed0faeb30 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x55aed0faebc0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>
