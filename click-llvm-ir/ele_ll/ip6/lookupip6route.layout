
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:18:2)
         0 |   uint32_t ip6_un1_flow
         4 |   uint16_t ip6_un1_plen
         6 |   uint8_t ip6_un1_nxt
         7 |   uint8_t ip6_un1_hlim
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:30:2)
     0:0-3 |   unsigned int ip6_un3_fc
     0:4-7 |   unsigned int ip6_un3_v
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:17:5)
         0 |   struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:18:2) ip6_un1
         0 |     uint32_t ip6_un1_flow
         4 |     uint16_t ip6_un1_plen
         6 |     uint8_t ip6_un1_nxt
         7 |     uint8_t ip6_un1_hlim
         0 |   uint8_t ip6_un2_vfc
         0 |   struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:30:2) ip6_un3
     0:0-3 |     unsigned int ip6_un3_fc
     0:4-7 |     unsigned int ip6_un3_v
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | class IP6Address
         0 |   struct in6_addr _addr
         0 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |       uint8_t [16] __u6_addr8
         0 |       uint16_t [8] __u6_addr16
         0 |       uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct IP6Table::Entry
         0 |   class IP6Address _dst
         0 |     struct in6_addr _addr
         0 |       union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |         uint8_t [16] __u6_addr8
         0 |         uint16_t [8] __u6_addr16
         0 |         uint32_t [4] __u6_addr32
        16 |   class IP6Address _mask
        16 |     struct in6_addr _addr
        16 |       union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
        16 |         uint8_t [16] __u6_addr8
        16 |         uint16_t [8] __u6_addr16
        16 |         uint32_t [4] __u6_addr32
        32 |   class IP6Address _gw
        32 |     struct in6_addr _addr
        32 |       union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
        32 |         uint8_t [16] __u6_addr8
        32 |         uint16_t [8] __u6_addr16
        32 |         uint32_t [4] __u6_addr32
        48 |   int _index
        52 |   int _valid
           | [sizeof=56, dsize=56, align=4,
           |  nvsize=56, nvalign=4]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563d994165d8 prev 0x563d9940dd78 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563d994166d0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x563d99416760 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x563d994167d8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x563d99416898 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x563d99416960 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x563d99416ad8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x563d99416a10 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x563d99416b80 <col:24>
| `-OptimizeNoneAttr 0x563d99416bd8 <col:34>
|-CXXMethodDecl 0x563d99416c20 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x563d99416ed8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x563d99416cd0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x563d99416d48 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x563d99416dc8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x563d99416f90 <line:229:7, col:14> col:7 private
|-FieldDecl 0x563d99416fc8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x563d99417030 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x563d994170b8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x563d994173d8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x563d99417170 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x563d994171e8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x563d99417260 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x563d994172e0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x563d994174f0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x563d9941ee68 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x563d9941ee68
| `-ParmVarDecl 0x563d9941ef78 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x563d9941f018 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x563d9941f018
| `-ParmVarDecl 0x563d9941f128 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x563d99526f58 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563d994095f0 prev 0x563d99409370 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563d994096e8 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x563d99409778 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x563d994097d8 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x563d994098c8 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x563d994099c8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x563d99409b98 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x563d99409a48 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x563d99409ac0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x563d99409d28 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x563d99409c60 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x563d99409dd0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x563d99409f08 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x563d99409e40 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x563d9940a0a8 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x563d99409fe8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x563d9940a248 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x563d9940a188 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x563d9940a2f0 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x563d9940a3f0 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x563d9940a4d0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d9940a3d0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x563d9940a3b0 <col:26> 'int' 1
| `-EnumConstantDecl 0x563d9940a480 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x563d9940a4e8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563d9940a460 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x563d9940a440 <col:44> 'int' 2
|-CXXMethodDecl 0x563d9940a630 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x563d9940a518 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x563d9940a598 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x563d9940a788 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x563d9940a6f8 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x563d9940a9c8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x563d9940a848 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x563d9940a8c0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x563d9940aa78 <col:20>
| `-OptimizeNoneAttr 0x563d9940aad0 <col:30>
|-CXXMethodDecl 0x563d9940abd8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x563d9940ab10 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x563d9940ac80 <col:20>
| `-OptimizeNoneAttr 0x563d9940acd8 <col:30>
|-CXXMethodDecl 0x563d9940ad28 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x563d9940adf0 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x563d9940af08 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x563d9940af90 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x563d9940b018 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x563d9940b0a0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x563d9940b128 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x563d9940b1b8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x563d9940b278 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x563d9940b300 <line:63:5, col:28> col:23 used PUSH 'const char []' static
|-VarDecl 0x563d9940b388 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x563d9940b410 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x563d9940b498 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x563d9940b520 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x563d9940b5b0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x563d9940b670 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x563d9940b700 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x563d9940b850 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x563d9940b7b8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x563d9940b9e0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x563d9940b910 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x563d9940bc90 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x563d9940ba98 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x563d9940bb18 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x563d9940bb98 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x563d9940bd48 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x563d9940be50 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x563d9940c0e0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d9940be30 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x563d9940be10 <col:33> 'int' 0
| |-EnumConstantDecl 0x563d9940bee0 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x563d9940c0f8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d9940bec0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x563d9940bea0 <col:32> 'int' 20
| |-EnumConstantDecl 0x563d9940bf70 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x563d9940c110 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d9940bf50 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x563d9940bf30 <col:38> 'int' 90
| |-EnumConstantDecl 0x563d9940c000 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x563d9940c128 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d9940bfe0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x563d9940bfc0 <col:35> 'int' 100
| `-EnumConstantDecl 0x563d9940c090 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x563d9940c140 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563d9940c070 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x563d9940c050 <col:32> 'int' 2000
|-CXXMethodDecl 0x563d9940c180 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x563d9940c5c0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x563d9940c430 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x563d9940c4a8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563d9940c690 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x563d9940c810 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x563d9940c740 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563d9940ca18 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x563d9940c8c8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x563d9940c940 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563d9940cb18 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x563d9940cbb8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x563d9940cc80 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x563d9940cd10 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x563d9940cf40 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d9940ccf0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x563d9940ccd0 <col:36> 'int' EnumConstant 0x563d9940cc80 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x563d9940cd60 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x563d9940cdb0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x563d9940ce00 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x563d9940ce50 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x563d9940cea0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x563d9940cef0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x563d9940d028 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x563d9940cf68 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x563d9940d0f0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x563d9940d1b0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x563d9940d270 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x563d9940d330 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x563d9940d448 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x563d9940d510 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x563d9940d690 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x563d9940d5c0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x563d9940d7b8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x563d9940d9b8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x563d9940d868 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x563d9940d8e8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x563d9941b308 <col:54, line:127:5>
|   |-ParenExpr 0x563d9941b1b8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x563d9941b188 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x563d9941ae78 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x563d9941ae50 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x563d9941ae38 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x563d9941ae20 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x563d9941adf0 <col:31> 'Router *' lvalue ->_router 0x563d99418cd0
|   |   |         `-CXXThisExpr 0x563d9941ade0 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x563d9941aed8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563d9941aeb8 <col:48> 'int' 0
|   |   `-CallExpr 0x563d9941b0e8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x563d9941b0d0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563d9941b0b0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563d98f43cc0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563d9941b128 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d9941af48 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x563d9941b140 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d9941af68 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x563d9941b158 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563d9941afa0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x563d9941b170 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563d9941b098 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563d9941b080 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563d9941b038 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x563d9941b250 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x563d9941b1e8 <col:9> 'Router *' lvalue ->_router 0x563d99418cd0
|   | | `-CXXThisExpr 0x563d9941b1d8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x563d9941b238 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x563d9941b218 <col:19> 'Router *' lvalue ParmVar 0x563d9940d868 'r' 'Router *'
|   `-BinaryOperator 0x563d9941b2e8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x563d9941b280 <col:9> 'int' lvalue ->_eindex 0x563d99418d38
|     | `-CXXThisExpr 0x563d9941b270 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x563d9941b2d0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x563d9941b2b0 <col:19> 'int' lvalue ParmVar 0x563d9940d8e8 'eindex' 'int'
|-CXXMethodDecl 0x563d9940db40 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x563d9940da78 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x563d9940dc10 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x563d9940dcd8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x563d9940dd78 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x563d9940dfc8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x563d9940de40 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x563d9940dec0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x563d9940e078 <col:20>
| `-OptimizeNoneAttr 0x563d9940e0d0 <col:30>
|-CXXMethodDecl 0x563d9940e1d8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x563d9940e110 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x563d9940e280 <col:20>
| `-OptimizeNoneAttr 0x563d9940e2d8 <col:30>
|-CXXMethodDecl 0x563d9940e3a8 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x563d9940e318 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x563d9940e450 <col:20>
| `-OptimizeNoneAttr 0x563d9940e4a8 <col:30>
|-CXXMethodDecl 0x563d9940e638 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x563d9940e4e0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x563d9940e560 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x563d9940e7c8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x563d9940e700 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x563d9940e918 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x563d9940e888 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x563d9940ea68 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x563d9940e9d8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x563d9940ebb8 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x563d9940eb28 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x563d9940ee78 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x563d9940ec70 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x563d9940ecf0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x563d9940ed98 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x563d9940ef50 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x563d9940f010 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x563d9940f2e0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x563d9940f190 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x563d9940f208 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x563d9940f408 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x563d9940f5e0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x563d9940f4c0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x563d9940f540 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x563d9940f7c8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x563d9940f6a8 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x563d9940f728 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x563d9940fb38 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x563d9940f888 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x563d9940f900 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x563d9940f980 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x563d9941a8f0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x563d9941a8d0 <col:106> 'int' 0
| `-ParmVarDecl 0x563d9940f9f8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563d9941a928 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563d9941a908 <col:126> 'int' 0
|-CXXMethodDecl 0x563d9940fed8 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x563d9940fc08 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x563d9940fca0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x563d9940fd20 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x563d9940fd98 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563d9941a960 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563d9941a940 <col:114> 'int' 0
|-CXXMethodDecl 0x563d99410268 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x563d9940ffb0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x563d99410028 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x563d994100a8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x563d9941a978 <col:96> 'int' 0
| `-ParmVarDecl 0x563d99410120 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563d9941a9b8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563d9941a998 <col:116> 'int' 0
|-CXXMethodDecl 0x563d994105e8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x563d99410338 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x563d994103b0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x563d99410430 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x563d9941a9f0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x563d9941a9d0 <col:109> 'int' 0
| `-ParmVarDecl 0x563d994104a8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563d9941aa28 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563d9941aa08 <col:129> 'int' 0
|-CXXMethodDecl 0x563d99410968 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x563d994106b8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x563d99410730 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x563d994107b0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x563d99410828 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563d9941aa60 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563d9941aa40 <col:117> 'int' 0
|-CXXMethodDecl 0x563d99410cf8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x563d99410a40 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563d99410ab8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x563d99410b38 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x563d9941aa78 <col:99> 'int' 0
| `-ParmVarDecl 0x563d99410bb0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563d9941aab8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563d9941aa98 <col:119> 'int' 0
|-CXXMethodDecl 0x563d99411118 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x563d99410dc8 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x563d99410e48 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x563d99410ec0 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x563d99410f40 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x563d9941aaf0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x563d9941aad0 <col:108> 'int' 0
| `-ParmVarDecl 0x563d99410fc0 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x563d9941ab28 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x563d9941ab08 <col:141> 'int' 0
|-CXXMethodDecl 0x563d99411538 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x563d994111f0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x563d99411270 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x563d994112e8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x563d99411368 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x563d994113e8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x563d9941ab40 <col:121> 'int' 0
|-CXXMethodDecl 0x563d99411968 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x563d99411618 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x563d99411698 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x563d99411710 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x563d99411790 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x563d9941ab60 <col:98> 'int' 0
| `-ParmVarDecl 0x563d99411810 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x563d9941ab80 <col:123> 'int' 0
|-CXXMethodDecl 0x563d99411c30 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x563d99411a40 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x563d99411ac0 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x563d99411b40 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x563d9941aba0 <col:80> 'int' 0
|-EnumDecl 0x563d99411ce8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x563d99411df0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x563d99412080 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d99411dd0 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x563d99411db0 <col:42> 'int' 1
| |-EnumConstantDecl 0x563d99411e80 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x563d99412098 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d99411e60 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x563d99411e40 <col:40> 'int' 2
| |-EnumConstantDecl 0x563d99411f10 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x563d994120b0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d99411ef0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x563d99411ed0 <col:44> 'int' 4
| |-EnumConstantDecl 0x563d99411fa0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x563d994120c8 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d99411f80 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x563d99411f60 <col:36> 'int' 7
| `-EnumConstantDecl 0x563d99412030 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x563d994120e0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563d99412010 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x563d99411ff0 <col:34> 'int' 6
|-CXXMethodDecl 0x563d99412398 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x563d99412108 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x563d994121a8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x563d99412228 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x563d994122a0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x563d9941ac58 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x563d9941ac40 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x563d9941ac28 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x563d9941ac08 <col:98, col:105> 'String' (CXXTemporary 0x563d9941ac08)
|           `-CXXTemporaryObjectExpr 0x563d9941abd0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x563d99412638 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x563d99412468 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x563d994124e0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x563d99412558 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x563d9941ad08 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x563d9941acf0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x563d9941acd8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x563d9941acb8 <col:94, col:101> 'String' (CXXTemporary 0x563d9941acb8)
| |         `-CXXTemporaryObjectExpr 0x563d9941ac80 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x563d9941b4f0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x563d9941b468 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x563d9941b438 <col:9> '<bound member function type>' ->add_task_handlers 0x563d99412398
|     | `-CXXThisExpr 0x563d9941b428 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x563d9941b4a8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x563d9941b3a8 <col:27> 'Task *' lvalue ParmVar 0x563d99412468 'task' 'Task *'
|     |-ImplicitCastExpr 0x563d9941b4c0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x563d9941b3c8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x563d994124e0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x563d9941b4d8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x563d9941b3e8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x563d99412030 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x563d9941b408 <col:62> 'const String' lvalue ParmVar 0x563d99412558 'prefix' 'const String &'
|-CXXMethodDecl 0x563d99412848 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x563d99412700 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x563d99412778 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x563d9941adb8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x563d9941ada0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x563d9941ad88 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x563d9941ad68 <col:70, col:77> 'String' (CXXTemporary 0x563d9941ad68)
| |         `-CXXTemporaryObjectExpr 0x563d9941ad30 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x563d9941b6c8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x563d9941b640 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x563d9941b610 <col:9> '<bound member function type>' ->add_task_handlers 0x563d99412398
|     | `-CXXThisExpr 0x563d9941b600 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x563d9941b680 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x563d9941b580 <col:27> 'Task *' lvalue ParmVar 0x563d99412700 'task' 'Task *'
|     |-ImplicitCastExpr 0x563d9941b698 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x563d9941b5a0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x563d9941b6b0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x563d9941b5c0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x563d99412030 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x563d9941b5e0 <col:57> 'const String' lvalue ParmVar 0x563d99412778 'prefix' 'const String &'
|-CXXMethodDecl 0x563d99412b28 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x563d99412910 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563d99412990 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563d99412a08 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x563d99412dd8 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x563d99412bf8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563d99412c78 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563d99412cf8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x563d994130c8 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x563d99412ea8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563d99412f28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563d99412fa0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x563d99413378 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x563d99413198 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563d99413218 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563d99413298 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x563d99413628 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x563d99413448 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563d994134c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563d99413548 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x563d994138d8 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x563d994136f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563d99413778 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563d994137f0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x563d99413b88 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x563d994139a8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563d99413a28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563d99413aa8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x563d99413e98 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x563d99413cb0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563d99413d30 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563d99413db0 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x563d99414178 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x563d99413f68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563d99413fe8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563d99414090 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x563d99414458 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x563d99414248 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563d994142c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563d99414370 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x563d994146c0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x563d99414528 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x563d994145a8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x563d99414620 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x563d99414968 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x563d99414790 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x563d99414810 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x563d99414888 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x563d99414c18 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x563d99414a38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563d99414ab8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563d99414b38 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x563d99414ec8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x563d99414ce8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563d99414d68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563d99414de0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x563d99415178 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x563d99414f98 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563d99415018 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563d99415090 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x563d99415448 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x563d99415248 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563d994152c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563d99415368 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x563d99415778 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x563d99415518 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563d99415598 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x563d99415610 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x563d99415688 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563d9941add0 <col:93> 'bool' false
|-CXXMethodDecl 0x563d99415960 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x563d99415848 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x563d994158c8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x563d99415b38 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x563d99415a20 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x563d99415aa0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x563d99415e18 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x563d99415bf8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x563d99415c70 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x563d99415cf0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x563d99415d68 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x563d99416108 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x563d99415ee8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x563d99415f60 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x563d99415fe0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x563d99416058 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x563d99416340 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x563d994161e0 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x563d99416260 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x563d99416528 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x563d99416408 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x563d99416488 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x563d994165d8 prev 0x563d9940dd78 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563d994166d0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x563d99416760 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x563d994167d8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x563d99416898 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x563d99416960 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x563d99416ad8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x563d99416a10 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x563d99416b80 <col:24>
| | `-OptimizeNoneAttr 0x563d99416bd8 <col:34>
| |-CXXMethodDecl 0x563d99416c20 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x563d99416ed8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x563d99416cd0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x563d99416d48 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x563d99416dc8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x563d99416f90 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x563d99416fc8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x563d99417030 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x563d994170b8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x563d994173d8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x563d99417170 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x563d994171e8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x563d99417260 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x563d994172e0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x563d994174f0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x563d9941ee68 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x563d9941ee68
| | `-ParmVarDecl 0x563d9941ef78 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x563d9941f018 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x563d9941f018
| | `-ParmVarDecl 0x563d9941f128 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x563d99526f58 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x563d99417568 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x563d99417608 <col:38> "" ""
|-CXXMethodDecl 0x563d99417698 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x563d99417738 <col:44> "" ""
|-AccessSpecDecl 0x563d994177a8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x563d994177d0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x563d994178d0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x563d99417920 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563d994178b0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x563d99417890 <col:27> 'int' 4
|-FieldDecl 0x563d994179d8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x563d99417b88 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x563d99417c40 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x563d99418cd0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x563d99418d38 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x563d99418e88 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x563d99418dc8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x563d99419038 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x563d99418f48 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x563d99419218 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x563d994190f8 <col:20> col:23 'int'
| `-ParmVarDecl 0x563d99419178 <col:25> col:28 'int'
|-CXXMethodDecl 0x563d994194c0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x563d994192e0 <col:23> col:26 'int'
| |-ParmVarDecl 0x563d99419360 <col:28> col:31 'int'
| `-ParmVarDecl 0x563d994193d8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x563d99419578 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x563d99419640 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x563d99419690 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x563d994196e0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x563d994198c0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x563d99419770 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x563d994197e8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563d99419b68 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x563d99419988 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x563d99419a08 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x563d99419a80 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x563d99419d88 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x563d99419c38 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x563d99419cb8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x563d9941a0c0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x563d99419e48 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x563d99419ec8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x563d99419f40 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x563d99419fc0 <col:57> col:60 'int'
|-CXXMethodDecl 0x563d9941a2a8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x563d9941a190 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x563d9941a210 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x563d9941a3f8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x563d9941a368 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x563d9941a778 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x563d9941a4b8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x563d9941a538 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x563d9941a5b0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x563d9941a630 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x563d9941a890 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IP6RouteTable
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563d99460550 <../elements/ip6/ip6routetable.hh:8:1, line:21:1> line:8:7 referenced class IP6RouteTable definition
|-DefinitionData polymorphic abstract can_const_default_init
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists non_trivial needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x563d994606a8 <col:1, col:7> col:7 implicit class IP6RouteTable
|-AccessSpecDecl 0x563d99460738 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x563d99460838 <line:10:5, col:27> col:11 cast 'void *(const char *)'
| |-Overrides: [ 0x563d9940b9e0 Element::cast 'void *(const char *)' ]
| `-ParmVarDecl 0x563d99460778 <col:16, col:26> col:27 'const char *'
|-CXXMethodDecl 0x563d99460be0 <line:12:5, col:82> col:17 add_route 'int (IP6Address, IP6Address, IP6Address, int, ErrorHandler *)' virtual
| |-ParmVarDecl 0x563d994608f0 <col:27> col:37 'IP6Address'
| |-ParmVarDecl 0x563d99460968 <col:39> col:49 'IP6Address'
| |-ParmVarDecl 0x563d994609e0 <col:51> col:61 'IP6Address'
| |-ParmVarDecl 0x563d99460a60 <col:63> col:66 'int'
| `-ParmVarDecl 0x563d99460ad8 <col:68, col:81> col:82 'ErrorHandler *'
|-CXXMethodDecl 0x563d99460e90 <line:13:5, col:68> col:17 remove_route 'int (IP6Address, IP6Address, ErrorHandler *)' virtual
| |-ParmVarDecl 0x563d99460cb8 <col:30> col:40 'IP6Address'
| |-ParmVarDecl 0x563d99460d30 <col:42> col:52 'IP6Address'
| `-ParmVarDecl 0x563d99460da8 <col:54, col:67> col:68 'ErrorHandler *'
|-CXXMethodDecl 0x563d99460f68 <line:14:5, col:32> col:20 dump_routes 'String ()' virtual
|-CXXMethodDecl 0x563d99461238 <line:16:5, col:79> col:16 add_route_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x563d99461018 <col:34, col:46> col:47 'const String &'
| |-ParmVarDecl 0x563d99461090 <col:49, col:56> col:57 'Element *'
| |-ParmVarDecl 0x563d99461110 <col:59, col:63> col:64 'void *'
| `-ParmVarDecl 0x563d99461188 <col:66, col:78> col:79 'ErrorHandler *'
|-CXXMethodDecl 0x563d99461528 <line:17:5, col:82> col:16 remove_route_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x563d99461308 <col:37, col:49> col:50 'const String &'
| |-ParmVarDecl 0x563d99461380 <col:52, col:59> col:60 'Element *'
| |-ParmVarDecl 0x563d99461400 <col:62, col:66> col:67 'void *'
| `-ParmVarDecl 0x563d99461478 <col:69, col:81> col:82 'ErrorHandler *'
|-CXXMethodDecl 0x563d99461818 <line:18:5, col:74> col:16 ctrl_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x563d994615f8 <col:29, col:41> col:42 'const String &'
| |-ParmVarDecl 0x563d99461670 <col:44, col:51> col:52 'Element *'
| |-ParmVarDecl 0x563d994616f0 <col:54, col:58> col:59 'void *'
| `-ParmVarDecl 0x563d99461768 <col:61, col:73> col:74 'ErrorHandler *'
|-CXXMethodDecl 0x563d99461a00 <line:19:5, col:48> col:19 table_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x563d994618e8 <col:33, col:40> col:41 'Element *'
| `-ParmVarDecl 0x563d99461968 <col:43, col:47> col:48 'void *'
|-CXXConstructorDecl 0x563d99461af0 <line:8:7> col:7 implicit IP6RouteTable 'void (const IP6RouteTable &)' inline default_delete noexcept-unevaluated 0x563d99461af0
| `-ParmVarDecl 0x563d99461c08 <col:7> col:7 'const IP6RouteTable &'
|-CXXConstructorDecl 0x563d99461ca8 <col:7> col:7 implicit IP6RouteTable 'void (IP6RouteTable &&)' inline default_delete noexcept-unevaluated 0x563d99461ca8
| `-ParmVarDecl 0x563d99461db8 <col:7> col:7 'IP6RouteTable &&'
|-CXXMethodDecl 0x563d99461e58 <col:7> col:7 implicit operator= 'IP6RouteTable &(const IP6RouteTable &)' inline default_delete noexcept-unevaluated 0x563d99461e58
| `-ParmVarDecl 0x563d99461f68 <col:7> col:7 'const IP6RouteTable &'
|-CXXMethodDecl 0x563d99461fd8 <col:7> col:7 implicit operator= 'IP6RouteTable &(IP6RouteTable &&)' inline default_delete noexcept-unevaluated 0x563d99461fd8
| `-ParmVarDecl 0x563d994620e8 <col:7> col:7 'IP6RouteTable &&'
|-CXXDestructorDecl 0x563d99462170 <col:7> col:7 implicit used ~IP6RouteTable 'void () noexcept' inline default
| |-Overrides: [ 0x563d994098c8 Element::~Element 'void () noexcept' ]
| `-CompoundStmt 0x563d995271c0 <col:7>
`-CXXConstructorDecl 0x563d99526dd8 <col:7> col:7 implicit used IP6RouteTable 'void () noexcept(false)' inline default
  |-CXXCtorInitializer 'Element'
  | `-CXXConstructExpr 0x563d99526ef0 <col:7> 'Element' 'void ()'
  `-CompoundStmt 0x563d99527040 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.IP6RouteTable = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.IP6RouteTable.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<56> >
         0 |   vector_memory<class sized_array_memory<56> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct IP6Table::Entry>
         0 |   class vector_memory<class sized_array_memory<56> > vm_
         0 |     vector_memory<class sized_array_memory<56> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class IP6Table
         0 |   class Vector<struct IP6Table::Entry> _v
         0 |     class vector_memory<class sized_array_memory<56> > vm_
         0 |       vector_memory<class sized_array_memory<56> >::type * l_
         8 |       vector_memory::size_type n_
        12 |       vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class LookupIP6Route
         0 |   class IP6RouteTable (primary base)
         0 |     class Element (primary base)
         0 |       (Element vtable pointer)
         8 |       class Element::Port *[2] _ports
        24 |       class Element::Port [4] _inline_ports
        88 |       int [2] _nports
        96 |       class Router * _router
       104 |       int _eindex
       112 |   class IP6Table _t
       112 |     class Vector<struct IP6Table::Entry> _v
       112 |       class vector_memory<class sized_array_memory<56> > vm_
       112 |         vector_memory<class sized_array_memory<56> >::type * l_
       120 |         vector_memory::size_type n_
       124 |         vector_memory::size_type capacity_
       128 |   class IP6Address _last_addr
       128 |     struct in6_addr _addr
       128 |       union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
       128 |         uint8_t [16] __u6_addr8
       128 |         uint16_t [8] __u6_addr16
       128 |         uint32_t [4] __u6_addr32
       144 |   class IP6Address _last_gw
       144 |     struct in6_addr _addr
       144 |       union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
       144 |         uint8_t [16] __u6_addr8
       144 |         uint16_t [8] __u6_addr16
       144 |         uint32_t [4] __u6_addr32
       160 |   int _last_output
           | [sizeof=168, dsize=164, align=8,
           |  nvsize=164, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563d99456560 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<56>'
|-CXXRecordDecl 0x563d99456738 prev 0x563d99456560 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x563d994567c8 <col:46, col:52> col:46 public
|-TypedefDecl 0x563d994567f0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563d98ea7370 'int'
|-TypedefDecl 0x563d994583c0 <line:13:5, col:31> col:31 type 'typename sized_array_memory<56>::type':'char_array<56>'
| `-ElaboratedType 0x563d99458370 'typename sized_array_memory<56>::type' sugar
|   `-TypedefType 0x563d99456ca0 'sized_array_memory<56>::type' sugar
|     |-Typedef 0x563d99456ba0 'type'
|     `-TemplateSpecializationType 0x563d99456b30 'char_array<56UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x563d99456a10 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 56
|       |   `-SubstNonTypeTemplateParmExpr 0x563d994569f0 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x563d994569d0 <col:24> 'unsigned long' 56
|       `-RecordType 0x563d99456b10 'char_array<56>'
|         `-ClassTemplateSpecialization 0x563d99456a30 'char_array'
|-TypedefDecl 0x563d99458478 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<56> >::type *'
| `-PointerType 0x563d99458440 'vector_memory<sized_array_memory<56> >::type *'
|   `-TypedefType 0x563d99458420 'vector_memory<sized_array_memory<56> >::type' sugar
|     |-Typedef 0x563d994583c0 'type'
|     `-ElaboratedType 0x563d99458370 'typename sized_array_memory<56>::type' sugar
|       `-TypedefType 0x563d99456ca0 'sized_array_memory<56>::type' sugar
|         |-Typedef 0x563d99456ba0 'type'
|         `-TemplateSpecializationType 0x563d99456b30 'char_array<56UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x563d99456a10 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 56
|           |   `-SubstNonTypeTemplateParmExpr 0x563d994569f0 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x563d994569d0 <col:24> 'unsigned long' 56
|           `-RecordType 0x563d99456b10 'char_array<56>'
|             `-ClassTemplateSpecialization 0x563d99456a30 'char_array'
|-CXXMethodDecl 0x563d994585f8 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<56> >::type *) const' inline
| `-ParmVarDecl 0x563d99458508 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXConstructorDecl 0x563d994586e8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x563d994587c8 <line:23:5, col:20> col:5 ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x563d99458a98 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<56> > &)'
| `-ParmVarDecl 0x563d994589a0 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<56> > &'
|-CXXMethodDecl 0x563d99458cd8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x563d99458b50 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563d99458bc8 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x563d99458ea8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x563d99458d98 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563d99458e10 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x563d99459008 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<56> >::iterator ()'
|-CXXMethodDecl 0x563d994590d8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<56> >::iterator ()'
|-CXXMethodDecl 0x563d99459328 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<56> >::iterator (vector_memory<sized_array_memory<56> >::iterator, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x563d99459198 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<56> >::iterator':'vector_memory<sized_array_memory<56> >::type *'
| `-ParmVarDecl 0x563d99459210 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x563d99459588 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<56> >::iterator (vector_memory<sized_array_memory<56> >::iterator, vector_memory<sized_array_memory<56> >::iterator)'
| |-ParmVarDecl 0x563d994593f8 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<56> >::iterator':'vector_memory<sized_array_memory<56> >::type *'
| `-ParmVarDecl 0x563d99459470 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<56> >::iterator':'vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x563d99459748 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<56> >::type *)' inline
| `-ParmVarDecl 0x563d99459658 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x563d99459908 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<56> >::type *)' inline
| `-ParmVarDecl 0x563d99459810 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x563d994599c0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563d99459a70 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x563d99459ca8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<56> >::type *)'
| |-ParmVarDecl 0x563d99459b20 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563d99459b98 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<56> >::type *'
|-CXXMethodDecl 0x563d99459f48 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<56> > &)'
| `-ParmVarDecl 0x563d99459e50 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<56> > &'
|-FieldDecl 0x563d9945a010 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<56> >::type *'
|-FieldDecl 0x563d9945a060 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x563d9945a0b0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563d99454db0 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'IP6Table::Entry'
|-CXXRecordDecl 0x563d99454fb8 prev 0x563d99454db0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x563d994564d0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<Entry>::type':'sized_array_memory<56>'
| `-ElaboratedType 0x563d99456480 'typename array_memory<Entry>::type' sugar
|   `-TypedefType 0x563d99456460 'conditional<true, sized_array_memory<56>, typed_array_memory<IP6Table::Entry> >::type' sugar
|     |-Typedef 0x563d99456310 'type'
|     `-SubstTemplateTypeParmType 0x563d99456130 'sized_array_memory<56>' sugar
|       |-TemplateTypeParmType 0x563d9916d8d0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563d9916d878 'T'
|       `-RecordType 0x563d99455c80 'sized_array_memory<56>'
|         `-ClassTemplateSpecialization 0x563d99455b98 'sized_array_memory'
|-FieldDecl 0x563d9945a100 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<IP6Table::Entry>::array_memory_type>':'vector_memory<sized_array_memory<56> >' mutable
|-AccessSpecDecl 0x563d9945a150 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x563d9945a188 <line:118:5, col:15> col:15 value_type 'IP6Table::Entry':'IP6Table::Entry'
| `-SubstTemplateTypeParmType 0x563d99455050 'IP6Table::Entry' sugar
|   |-TemplateTypeParmType 0x563d991a55c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563d991a5568 'T'
|   `-RecordType 0x563d99454a80 'IP6Table::Entry'
|     `-CXXRecord 0x563d994549f0 'Entry'
|-TypedefDecl 0x563d9945a248 <line:119:5, col:16> col:16 reference 'IP6Table::Entry &'
| `-LValueReferenceType 0x563d9945a210 'IP6Table::Entry &'
|   `-SubstTemplateTypeParmType 0x563d99455050 'IP6Table::Entry' sugar
|     |-TemplateTypeParmType 0x563d991a55c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563d991a5568 'T'
|     `-RecordType 0x563d99454a80 'IP6Table::Entry'
|       `-CXXRecord 0x563d994549f0 'Entry'
|-TypedefDecl 0x563d9945a308 <line:120:5, col:22> col:22 const_reference 'const IP6Table::Entry &'
| `-LValueReferenceType 0x563d9945a2d0 'const IP6Table::Entry &'
|   `-QualType 0x563d99455051 'const IP6Table::Entry' const
|     `-SubstTemplateTypeParmType 0x563d99455050 'IP6Table::Entry' sugar
|       |-TemplateTypeParmType 0x563d991a55c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563d991a5568 'T'
|       `-RecordType 0x563d99454a80 'IP6Table::Entry'
|         `-CXXRecord 0x563d994549f0 'Entry'
|-TypedefDecl 0x563d9945a3c8 <line:121:5, col:16> col:16 pointer 'IP6Table::Entry *'
| `-PointerType 0x563d9945a390 'IP6Table::Entry *'
|   `-SubstTemplateTypeParmType 0x563d99455050 'IP6Table::Entry' sugar
|     |-TemplateTypeParmType 0x563d991a55c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563d991a5568 'T'
|     `-RecordType 0x563d99454a80 'IP6Table::Entry'
|       `-CXXRecord 0x563d994549f0 'Entry'
|-TypedefDecl 0x563d9945a488 <line:122:5, col:22> col:22 const_pointer 'const IP6Table::Entry *'
| `-PointerType 0x563d9945a450 'const IP6Table::Entry *'
|   `-QualType 0x563d99455051 'const IP6Table::Entry' const
|     `-SubstTemplateTypeParmType 0x563d99455050 'IP6Table::Entry' sugar
|       |-TemplateTypeParmType 0x563d991a55c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563d991a5568 'T'
|       `-RecordType 0x563d99454a80 'IP6Table::Entry'
|         `-CXXRecord 0x563d994549f0 'Entry'
|-TypedefDecl 0x563d9945b360 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<Entry>::type':'const IP6Table::Entry &'
| `-ElaboratedType 0x563d9945b310 'typename fast_argument<Entry>::type' sugar
|   `-TypedefType 0x563d9945b2f0 'fast_argument<IP6Table::Entry, true>::type' sugar
|     |-Typedef 0x563d9945b228 'type'
|     `-LValueReferenceType 0x563d9945b1f0 'const IP6Table::Entry &'
|       `-QualType 0x563d9945af91 'const IP6Table::Entry' const
|         `-SubstTemplateTypeParmType 0x563d9945af90 'IP6Table::Entry' sugar
|           |-TemplateTypeParmType 0x563d99177fa0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x563d99177f48 'T'
|           `-RecordType 0x563d99454a80 'IP6Table::Entry'
|             `-CXXRecord 0x563d994549f0 'Entry'
|-TypedefDecl 0x563d9945b3c8 <line:126:5, col:22> col:22 const_access_type 'const IP6Table::Entry &'
| `-LValueReferenceType 0x563d9945a2d0 'const IP6Table::Entry &'
|   `-QualType 0x563d99455051 'const IP6Table::Entry' const
|     `-SubstTemplateTypeParmType 0x563d99455050 'IP6Table::Entry' sugar
|       |-TemplateTypeParmType 0x563d991a55c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563d991a5568 'T'
|       `-RecordType 0x563d99454a80 'IP6Table::Entry'
|         `-CXXRecord 0x563d994549f0 'Entry'
|-TypedefDecl 0x563d9945b420 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563d98ea7370 'int'
|-TypedefDecl 0x563d9945b488 <line:130:5, col:16> col:16 iterator 'IP6Table::Entry *'
| `-PointerType 0x563d9945a390 'IP6Table::Entry *'
|   `-SubstTemplateTypeParmType 0x563d99455050 'IP6Table::Entry' sugar
|     |-TemplateTypeParmType 0x563d991a55c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563d991a5568 'T'
|     `-RecordType 0x563d99454a80 'IP6Table::Entry'
|       `-CXXRecord 0x563d994549f0 'Entry'
|-TypedefDecl 0x563d9945b4f0 <line:131:5, col:22> col:22 const_iterator 'const IP6Table::Entry *'
| `-PointerType 0x563d9945a450 'const IP6Table::Entry *'
|   `-QualType 0x563d99455051 'const IP6Table::Entry' const
|     `-SubstTemplateTypeParmType 0x563d99455050 'IP6Table::Entry' sugar
|       |-TemplateTypeParmType 0x563d991a55c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563d991a5568 'T'
|       `-RecordType 0x563d99454a80 'IP6Table::Entry'
|         `-CXXRecord 0x563d994549f0 'Entry'
|-EnumDecl 0x563d9945b548 <line:134:5> col:5
| `-EnumConstantDecl 0x563d9945b640 <col:12, col:40> col:12 RESERVE_GROW 'Vector<IP6Table::Entry>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x563d9945b620 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x563d991a6c48 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x563d991a6c20 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x563d991a6c00 <col:40> 'int' 1
|-CXXConstructorDecl 0x563d9945b6c8 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x563d9945b958 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<IP6Table::Entry>::value_argument_type)' inline
| |-ParmVarDecl 0x563d9945b780 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563d9945b820 <col:41, col:61> col:61 v 'Vector<IP6Table::Entry>::value_argument_type':'const IP6Table::Entry &'
|-CXXConstructorDecl 0x563d9945bc18 <line:139:5, col:37> col:12 Vector 'void (const Vector<IP6Table::Entry> &)' inline
| `-ParmVarDecl 0x563d9945bb00 <col:19, col:36> col:36 x 'const Vector<IP6Table::Entry> &'
|-CXXConstructorDecl 0x563d9945bed8 <line:141:5, col:32> col:12 Vector 'void (Vector<IP6Table::Entry> &&)' inline
| `-ParmVarDecl 0x563d9945bdc0 <col:19, col:31> col:31 x 'Vector<IP6Table::Entry> &&'
|-CXXMethodDecl 0x563d9945c220 <line:144:5, col:51> col:23 operator= 'Vector<IP6Table::Entry> &(const Vector<IP6Table::Entry> &)' inline
| `-ParmVarDecl 0x563d9945c100 <col:33, col:50> col:50 x 'const Vector<IP6Table::Entry> &'
|-CXXMethodDecl 0x563d9945c530 <line:146:5, col:46> col:23 operator= 'Vector<IP6Table::Entry> &(Vector<IP6Table::Entry> &&)' inline
| `-ParmVarDecl 0x563d9945c410 <col:33, col:45> col:45 x 'Vector<IP6Table::Entry> &&'
|-CXXMethodDecl 0x563d9945c820 <line:148:5, col:70> col:23 assign 'Vector<IP6Table::Entry> &(Vector::size_type, Vector<IP6Table::Entry>::value_argument_type)' inline
| |-ParmVarDecl 0x563d9945c668 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563d9945c6e0 <col:43, col:69> col:63 v 'Vector<IP6Table::Entry>::value_argument_type':'const IP6Table::Entry &'
|-CXXMethodDecl 0x563d9945c978 <line:150:5, col:55> col:49 begin 'Vector<IP6Table::Entry>::iterator ()'
| |-NoInlineAttr 0x563d9945ca58 <col:20> Inherited
| `-OptimizeNoneAttr 0x563d9945cab0 <col:30> Inherited
|-CXXMethodDecl 0x563d9945caf8 <line:151:5, col:53> col:49 end 'Vector<IP6Table::Entry>::iterator ()'
| |-NoInlineAttr 0x563d9945cba8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563d9945cc00 <col:30> Inherited
|-CXXMethodDecl 0x563d9945ccc8 <line:152:5, col:63> col:55 begin 'Vector<IP6Table::Entry>::const_iterator () const'
| |-NoInlineAttr 0x563d9945cd78 <col:20> Inherited
| `-OptimizeNoneAttr 0x563d9945cdd0 <col:30> Inherited
|-CXXMethodDecl 0x563d9945ce18 <line:153:5, col:61> col:55 end 'Vector<IP6Table::Entry>::const_iterator () const'
| |-NoInlineAttr 0x563d9945cec8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563d9945cf20 <col:30> Inherited
|-CXXMethodDecl 0x563d9945cf68 <line:154:5, col:64> col:55 cbegin 'Vector<IP6Table::Entry>::const_iterator () const'
| |-NoInlineAttr 0x563d9945d018 <col:20> Inherited
| `-OptimizeNoneAttr 0x563d9945d070 <col:30> Inherited
|-CXXMethodDecl 0x563d9945d0b8 <line:155:5, col:62> col:55 cend 'Vector<IP6Table::Entry>::const_iterator () const'
| |-NoInlineAttr 0x563d9945d168 <col:20> Inherited
| `-OptimizeNoneAttr 0x563d9945d1c0 <col:30> Inherited
|-CXXMethodDecl 0x563d9945d1e8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563d9945d298 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563d9945d348 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x563d9945d508 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<IP6Table::Entry>::value_argument_type)' inline
| |-ParmVarDecl 0x563d9945d3f8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563d9945d470 <col:37, col:63> col:57 v 'Vector<IP6Table::Entry>::value_argument_type':'const IP6Table::Entry &'
|-CXXMethodDecl 0x563d9945d658 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x563d9945d5c8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x563d9945d808 <line:163:5, col:65> col:43 operator[] 'IP6Table::Entry &(Vector::size_type)'
| |-ParmVarDecl 0x563d9945d710 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563d9945d8c0 <col:20>
| `-OptimizeNoneAttr 0x563d9945d918 <col:30>
|-CXXMethodDecl 0x563d9945da38 <line:164:5, col:73> col:49 operator[] 'const IP6Table::Entry &(Vector::size_type) const'
| |-ParmVarDecl 0x563d9945d940 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563d9945daf0 <col:20>
| `-OptimizeNoneAttr 0x563d9945db48 <col:30>
|-CXXMethodDecl 0x563d9945dc00 <line:165:5, col:29> col:15 at 'IP6Table::Entry &(Vector::size_type)' inline
| `-ParmVarDecl 0x563d9945db70 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563d9945dd48 <line:166:5, col:37> col:21 at 'const IP6Table::Entry &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563d9945dcb8 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563d9945de78 <line:167:5, col:21> col:15 front 'IP6Table::Entry &()' inline
|-CXXMethodDecl 0x563d9945dfa8 <line:168:5, col:29> col:21 front 'const IP6Table::Entry &() const' inline
|-CXXMethodDecl 0x563d9945e078 <line:169:5, col:20> col:15 back 'IP6Table::Entry &()' inline
|-CXXMethodDecl 0x563d9945e148 <line:170:5, col:28> col:21 back 'const IP6Table::Entry &() const' inline
|-CXXMethodDecl 0x563d9945e288 <line:172:5, col:39> col:15 unchecked_at 'IP6Table::Entry &(Vector::size_type)' inline
| `-ParmVarDecl 0x563d9945e1f8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563d9945e3d0 <line:173:5, col:47> col:21 unchecked_at 'const IP6Table::Entry &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563d9945e340 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563d9945e518 <line:174:5, col:59> col:15 at_u 'IP6Table::Entry &(Vector::size_type)' inline
| |-ParmVarDecl 0x563d9945e488 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563d9945e5d0 <col:48> Inherited "" ""
|-CXXMethodDecl 0x563d9945e6d0 <line:175:5, col:71> col:21 at_u 'const IP6Table::Entry &(Vector::size_type) const' inline
| |-ParmVarDecl 0x563d9945e640 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563d9945e788 <col:60> Inherited "" ""
|-CXXMethodDecl 0x563d9945e848 <line:177:5, col:20> col:15 data 'IP6Table::Entry *()' inline
|-CXXMethodDecl 0x563d9945e948 <line:178:5, col:28> col:21 data 'const IP6Table::Entry *() const' inline
|-CXXMethodDecl 0x563d9945eaf8 <line:180:5, col:48> col:17 push_back 'void (Vector<IP6Table::Entry>::value_argument_type)' inline
| `-ParmVarDecl 0x563d9945ea08 <col:27, col:47> col:47 v 'Vector<IP6Table::Entry>::value_argument_type':'const IP6Table::Entry &'
|-FunctionTemplateDecl 0x563d9945f2e8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x563d9945ebb0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<IP6Table::Entry>':'fast_argument<IP6Table::Entry, true>'
| `-CXXMethodDecl 0x563d9945f248 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (IP6Table::Entry &&)' inline
|   `-ParmVarDecl 0x563d9945f148 <col:58, col:62> col:62 v 'IP6Table::Entry &&'
|-CXXMethodDecl 0x563d9945f3c8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563d9945f518 <line:186:5, col:49> col:17 push_front 'void (Vector<IP6Table::Entry>::value_argument_type)' inline
| `-ParmVarDecl 0x563d9945f488 <col:28, col:48> col:48 v 'Vector<IP6Table::Entry>::value_argument_type':'const IP6Table::Entry &'
|-CXXMethodDecl 0x563d9945f5d0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x563d9945f818 <line:189:5, col:62> col:21 insert 'Vector<IP6Table::Entry>::iterator (Vector<IP6Table::Entry>::iterator, Vector<IP6Table::Entry>::value_argument_type)' inline
| |-ParmVarDecl 0x563d9945f690 <col:28, col:37> col:37 it 'Vector<IP6Table::Entry>::iterator':'IP6Table::Entry *'
| `-ParmVarDecl 0x563d9945f708 <col:41, col:61> col:61 v 'Vector<IP6Table::Entry>::value_argument_type':'const IP6Table::Entry &'
|-CXXMethodDecl 0x563d9945f9d8 <line:190:5, col:38> col:21 erase 'Vector<IP6Table::Entry>::iterator (Vector<IP6Table::Entry>::iterator)' inline
| `-ParmVarDecl 0x563d9945f8e8 <col:27, col:36> col:36 it 'Vector<IP6Table::Entry>::iterator':'IP6Table::Entry *'
|-CXXMethodDecl 0x563d9945fc28 <line:191:5, col:49> col:21 erase 'Vector<IP6Table::Entry>::iterator (Vector<IP6Table::Entry>::iterator, Vector<IP6Table::Entry>::iterator)' inline
| |-ParmVarDecl 0x563d9945faa0 <col:27, col:36> col:36 a 'Vector<IP6Table::Entry>::iterator':'IP6Table::Entry *'
| `-ParmVarDecl 0x563d9945fb18 <col:39, col:48> col:48 b 'Vector<IP6Table::Entry>::iterator':'IP6Table::Entry *'
|-CXXMethodDecl 0x563d9945fce8 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x563d9945ff48 <line:195:5, col:34> col:17 swap 'void (Vector<IP6Table::Entry> &)' inline
| `-ParmVarDecl 0x563d9945fe50 <col:22, col:33> col:33 x 'Vector<IP6Table::Entry> &'
`-CXXDestructorDecl 0x563d99460018 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit ~Vector 'void () noexcept' inline default

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563d99453c00 <../dummy_inc/click/ip6table.hh:13:1, line:36:1> line:13:7 referenced class IP6Table definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563d99453d18 <col:1, col:7> col:7 implicit referenced class IP6Table
|-AccessSpecDecl 0x563d99453da8 <col:18, col:24> col:18 public
|-CXXConstructorDecl 0x563d99453e30 <line:15:3, col:12> col:3 used IP6Table 'void ()'
|-CXXDestructorDecl 0x563d99453f20 <line:16:3, col:13> col:3 used ~IP6Table 'void () noexcept'
|-CXXMethodDecl 0x563d99454218 <line:18:3, col:66> col:8 lookup 'bool (const IP6Address &, IP6Address &, int &) const'
| |-ParmVarDecl 0x563d99454010 <col:15, col:33> col:33 dst 'const IP6Address &'
| |-ParmVarDecl 0x563d99454088 <col:38, col:50> col:50 gw 'IP6Address &'
| `-ParmVarDecl 0x563d99454108 <col:54, col:59> col:59 index 'int &'
|-CXXMethodDecl 0x563d99454548 <line:20:3, col:90> col:8 add 'void (const IP6Address &, const IP6Address &, const IP6Address &, int)'
| |-ParmVarDecl 0x563d994542e0 <col:12, col:30> col:30 dst 'const IP6Address &'
| |-ParmVarDecl 0x563d99454358 <col:35, col:53> col:53 mask 'const IP6Address &'
| |-ParmVarDecl 0x563d994543d0 <col:59, col:77> col:77 gw 'const IP6Address &'
| `-ParmVarDecl 0x563d99454450 <col:81, col:85> col:85 index 'int'
|-CXXMethodDecl 0x563d99454768 <line:21:3, col:57> col:8 del 'void (const IP6Address &, const IP6Address &)'
| |-ParmVarDecl 0x563d99454618 <col:12, col:30> col:30 dst 'const IP6Address &'
| `-ParmVarDecl 0x563d99454690 <col:35, col:53> col:53 mask 'const IP6Address &'
|-CXXMethodDecl 0x563d99454838 <line:22:3, col:30> col:8 clear 'void ()'
| `-CompoundStmt 0x563d99460538 <col:16, col:30>
|   `-CXXMemberCallExpr 0x563d99460518 <col:18, col:27> 'void'
|     `-MemberExpr 0x563d994604e8 <col:18, col:21> '<bound member function type>' .clear 0x563d9945fce8
|       `-MemberExpr 0x563d994604b8 <col:18> 'Vector<IP6Table::Entry>':'Vector<IP6Table::Entry>' lvalue ->_v 0x563d99460100
|         `-CXXThisExpr 0x563d994604a8 <col:18> 'IP6Table *' implicit this
|-CXXMethodDecl 0x563d99454928 <line:23:3, col:15> col:10 used dump 'String ()'
|-AccessSpecDecl 0x563d994549c8 <line:25:2, col:9> col:2 private
|-CXXRecordDecl 0x563d994549f0 <line:27:3, line:33:3> line:27:10 referenced struct Entry definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x563d99454b08 <col:3, col:10> col:10 implicit struct Entry
| |-FieldDecl 0x563d99454ba8 <line:28:5, col:16> col:16 _dst 'IP6Address'
| |-FieldDecl 0x563d99454c08 <line:29:5, col:16> col:16 _mask 'IP6Address'
| |-FieldDecl 0x563d99454c68 <line:30:5, col:16> col:16 _gw 'IP6Address'
| |-FieldDecl 0x563d99454cd0 <line:31:5, col:9> col:9 _index 'int'
| `-FieldDecl 0x563d99454d38 <line:32:5, col:9> col:9 _valid 'int'
|-FieldDecl 0x563d99460100 <line:34:3, col:17> col:17 referenced _v 'Vector<IP6Table::Entry>':'Vector<IP6Table::Entry>'
|-CXXConstructorDecl 0x563d99460178 <line:13:7> col:7 implicit IP6Table 'void (const IP6Table &)' inline default noexcept-unevaluated 0x563d99460178
| `-ParmVarDecl 0x563d99460288 <col:7> col:7 'const IP6Table &'
`-CXXMethodDecl 0x563d99460328 <col:7> col:7 implicit operator= 'IP6Table &(const IP6Table &)' inline default noexcept-unevaluated 0x563d99460328
  `-ParmVarDecl 0x563d99460438 <col:7> col:7 'const IP6Table &'

Layout: <CGRecordLayout
  LLVMType:%class.IP6Table = type { %class.Vector }
  NonVirtualBaseLLVMType:%class.IP6Table = type { %class.Vector }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563d99148538 </usr/include/netinet/in.h:214:5, line:219:7> line:214:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x563d99148758 <line:216:2, col:23> col:10 referenced __u6_addr8 'uint8_t [16]'
|-FieldDecl 0x563d99148888 <line:217:2, col:24> col:11 __u6_addr16 'uint16_t [8]'
|-FieldDecl 0x563d991489b8 <line:218:2, col:24> col:11 __u6_addr32 'uint32_t [4]'
|-CXXConstructorDecl 0x563d9938e8e8 <line:214:5> col:5 implicit used  'void () noexcept' inline default trivial
| `-CompoundStmt 0x563d9938f0f8 <col:5>
|-CXXDestructorDecl 0x563d9938e9c0 <col:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x563d9938eac8 <col:5> col:5 implicit used constexpr  'void (const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept' inline default trivial
| |-ParmVarDecl 0x563d9938ebd8 <col:5> col:5 'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &'
| `-CompoundStmt 0x563d994428a0 <col:5>
|-CXXConstructorDecl 0x563d9938ec78 <col:5> col:5 implicit used constexpr  'void (in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&) noexcept' inline default trivial
| |-ParmVarDecl 0x563d9938ed88 <col:5> col:5 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&'
| `-CompoundStmt 0x563d9944bcd8 <col:5>
|-CXXMethodDecl 0x563d9938f828 <col:5> col:5 implicit used constexpr operator= 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &(const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept' inline default trivial
| |-ParmVarDecl 0x563d9938f938 <col:5> col:5 'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &'
| `-CompoundStmt 0x563d9944fae0 <col:5>
|   `-ReturnStmt 0x563d9944fad0 <col:5>
|     `-UnaryOperator 0x563d9944fab8 <col:5> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563d9944faa8 <col:5> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) *' this
`-CXXMethodDecl 0x563d9938f9a8 <col:5> col:5 implicit constexpr operator= 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &(in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&)' inline default trivial noexcept-unevaluated 0x563d9938f9a8
  `-ParmVarDecl 0x563d9938fab8 <col:5> col:5 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&'

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { [4 x i32] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563d990e6cd0 </usr/include/netinet/in.h:212:1, line:225:3> line:212:8 struct in6_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563d991484a8 <col:1, col:8> col:8 implicit struct in6_addr
|-CXXRecordDecl 0x563d99148538 <line:214:5, line:219:7> line:214:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x563d99148758 <line:216:2, col:23> col:10 referenced __u6_addr8 'uint8_t [16]'
| |-FieldDecl 0x563d99148888 <line:217:2, col:24> col:11 __u6_addr16 'uint16_t [8]'
| |-FieldDecl 0x563d991489b8 <line:218:2, col:24> col:11 __u6_addr32 'uint32_t [4]'
| |-CXXConstructorDecl 0x563d9938e8e8 <line:214:5> col:5 implicit used  'void () noexcept' inline default trivial
| | `-CompoundStmt 0x563d9938f0f8 <col:5>
| |-CXXDestructorDecl 0x563d9938e9c0 <col:5> col:5 implicit ~ 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x563d9938eac8 <col:5> col:5 implicit used constexpr  'void (const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept' inline default trivial
| | |-ParmVarDecl 0x563d9938ebd8 <col:5> col:5 'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &'
| | `-CompoundStmt 0x563d994428a0 <col:5>
| |-CXXConstructorDecl 0x563d9938ec78 <col:5> col:5 implicit used constexpr  'void (in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x563d9938ed88 <col:5> col:5 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&'
| | `-CompoundStmt 0x563d9944bcd8 <col:5>
| |-CXXMethodDecl 0x563d9938f828 <col:5> col:5 implicit used constexpr operator= 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &(const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept' inline default trivial
| | |-ParmVarDecl 0x563d9938f938 <col:5> col:5 'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &'
| | `-CompoundStmt 0x563d9944fae0 <col:5>
| |   `-ReturnStmt 0x563d9944fad0 <col:5>
| |     `-UnaryOperator 0x563d9944fab8 <col:5> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x563d9944faa8 <col:5> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) *' this
| `-CXXMethodDecl 0x563d9938f9a8 <col:5> col:5 implicit constexpr operator= 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &(in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&)' inline default trivial noexcept-unevaluated 0x563d9938f9a8
|   `-ParmVarDecl 0x563d9938fab8 <col:5> col:5 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&'
|-FieldDecl 0x563d99148a78 <col:5, line:219:9> col:9 referenced __in6_u 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)'
|-CXXConstructorDecl 0x563d9938e7f8 <line:212:8> col:8 implicit used in6_addr 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x563d99148a78 '__in6_u' 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)'
| | `-CXXConstructExpr 0x563d9938f108 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' 'void () noexcept'
| `-CompoundStmt 0x563d9938f160 <col:8>
|-CXXConstructorDecl 0x563d9938edf8 <col:8> col:8 implicit used constexpr in6_addr 'void (const in6_addr &) noexcept' inline default trivial
| |-ParmVarDecl 0x563d9938eed8 <col:8> col:8 used 'const in6_addr &'
| |-CXXCtorInitializer Field 0x563d99148a78 '__in6_u' 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)'
| | `-CXXConstructExpr 0x563d994428b0 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' 'void (const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept'
| |   `-MemberExpr 0x563d99442870 <col:8> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x563d99148a78
| |     `-DeclRefExpr 0x563d99442850 <col:8> 'const in6_addr' lvalue ParmVar 0x563d9938eed8 '' 'const in6_addr &'
| `-CompoundStmt 0x563d99442910 <col:8>
|-CXXConstructorDecl 0x563d9938ef78 <col:8> col:8 implicit used constexpr in6_addr 'void (in6_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x563d9938f088 <col:8> col:8 used 'in6_addr &&'
| |-CXXCtorInitializer Field 0x563d99148a78 '__in6_u' 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)'
| | `-CXXConstructExpr 0x563d9944bce8 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' 'void (in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&) noexcept'
| |   `-MemberExpr 0x563d9944bca8 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' xvalue .__in6_u 0x563d99148a78
| |     `-CXXStaticCastExpr 0x563d9944bc78 <col:8> 'in6_addr' xvalue static_cast<struct in6_addr &&> <NoOp>
| |       `-DeclRefExpr 0x563d9944bc48 <col:8> 'in6_addr' lvalue ParmVar 0x563d9938f088 '' 'in6_addr &&'
| `-CompoundStmt 0x563d9944bd48 <col:8>
|-CXXMethodDecl 0x563d9938fb28 <col:8> col:8 implicit used constexpr operator= 'in6_addr &(const in6_addr &) noexcept' inline default trivial
| |-ParmVarDecl 0x563d9938fc38 <col:8> col:8 used 'const in6_addr &'
| `-CompoundStmt 0x563d9944fb58 <col:8>
|   |-CXXMemberCallExpr 0x563d9944faf8 <col:8> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue
|   | |-MemberExpr 0x563d9944fa38 <col:8> '<bound member function type>' .operator= 0x563d9938f828
|   | | `-MemberExpr 0x563d9944f948 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue ->__in6_u 0x563d99148a78
|   | |   `-CXXThisExpr 0x563d9944f938 <col:8> 'in6_addr *' this
|   | `-MemberExpr 0x563d9944fa08 <col:8> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x563d99148a78
|   |   `-DeclRefExpr 0x563d9944f9e8 <col:8> 'const in6_addr' lvalue ParmVar 0x563d9938fc38 '' 'const in6_addr &'
|   `-ReturnStmt 0x563d9944fb48 <col:8>
|     `-UnaryOperator 0x563d9944fb30 <col:8> 'in6_addr' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563d9944fb20 <col:8> 'in6_addr *' this
|-CXXMethodDecl 0x563d9938fca8 <col:8> col:8 implicit constexpr operator= 'in6_addr &(in6_addr &&)' inline default trivial noexcept-unevaluated 0x563d9938fca8
| `-ParmVarDecl 0x563d9938fdb8 <col:8> col:8 'in6_addr &&'
`-CXXDestructorDecl 0x563d99390158 <col:8> col:8 implicit ~in6_addr 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.in6_addr = type { %union.anon }
  NonVirtualBaseLLVMType:%struct.in6_addr = type { %union.anon }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563d9938b0e0 prev 0x563d993d0440 <../dummy_inc/click/ip6address.hh:14:1, line:175:1> line:14:7 referenced class IP6Address definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563d9938b1d8 <col:1, col:7> col:7 implicit referenced class IP6Address
|-AccessSpecDecl 0x563d9938b268 <col:20, col:26> col:20 public
|-TypedefDecl 0x563d9938b2a0 <line:16:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x563d98ffced0 'uninitialized_type'
|   `-CXXRecord 0x563d98ffce38 'uninitialized_type'
|-CXXConstructorDecl 0x563d9938b360 <line:19:5, line:21:5> line:19:12 used IP6Address 'void ()' inline
| |-CXXCtorInitializer Field 0x563d9938e778 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x563d9938f170 <col:12> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x563d9938f390 <col:25, line:21:5>
|   `-CallExpr 0x563d9938f340 <line:20:2, col:33> 'void *'
|     |-ImplicitCastExpr 0x563d9938f328 <col:2> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x563d9938f308 <col:2> 'void *(void *, int, size_t) throw()' lvalue Function 0x563d99107f88 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x563d9938f378 <col:9, col:10> 'void *' <BitCast>
|     | `-UnaryOperator 0x563d9938f250 <col:9, col:10> 'struct in6_addr *' prefix '&' cannot overflow
|     |   `-MemberExpr 0x563d9938f220 <col:10> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x563d9938e778
|     |     `-CXXThisExpr 0x563d9938f210 <col:10> 'IP6Address *' implicit this
|     |-IntegerLiteral 0x563d9938f268 <col:17> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x563d9938f2e8 <col:20, col:32> 'unsigned long' sizeof
|       `-ParenExpr 0x563d9938f2c8 <col:26, col:32> 'struct in6_addr':'in6_addr' lvalue
|         `-MemberExpr 0x563d9938f298 <col:27> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x563d9938e778 non_odr_use_unevaluated
|           `-CXXThisExpr 0x563d9938f288 <col:27> 'IP6Address *' implicit this
|-CXXConstructorDecl 0x563d9938b4b0 <line:24:5, line:26:5> line:24:21 IP6Address 'void (const unsigned char *)' inline
| |-ParmVarDecl 0x563d9938b420 <col:32, col:53> col:53 used x 'const unsigned char *'
| |-CXXCtorInitializer Field 0x563d9938e778 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x563d9938f3a8 <col:21> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x563d9938f5f8 <col:56, line:26:5>
|   `-CallExpr 0x563d9938f578 <line:25:2, col:33> 'void *'
|     |-ImplicitCastExpr 0x563d9938f560 <col:2> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x563d9938f540 <col:2> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x563d99106c48 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
|     |-ImplicitCastExpr 0x563d9938f5b0 <col:9, col:10> 'void *' <BitCast>
|     | `-UnaryOperator 0x563d9938f488 <col:9, col:10> 'struct in6_addr *' prefix '&' cannot overflow
|     |   `-MemberExpr 0x563d9938f458 <col:10> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x563d9938e778
|     |     `-CXXThisExpr 0x563d9938f448 <col:10> 'IP6Address *' implicit this
|     |-ImplicitCastExpr 0x563d9938f5e0 <col:17> 'const void *' <BitCast>
|     | `-ImplicitCastExpr 0x563d9938f5c8 <col:17> 'const unsigned char *' <LValueToRValue>
|     |   `-DeclRefExpr 0x563d9938f4a0 <col:17> 'const unsigned char *' lvalue ParmVar 0x563d9938b420 'x' 'const unsigned char *'
|     `-UnaryExprOrTypeTraitExpr 0x563d9938f520 <col:20, col:32> 'unsigned long' sizeof
|       `-ParenExpr 0x563d9938f500 <col:26, col:32> 'struct in6_addr':'in6_addr' lvalue
|         `-MemberExpr 0x563d9938f4d0 <col:27> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x563d9938e778 non_odr_use_unevaluated
|           `-CXXThisExpr 0x563d9938f4c0 <col:27> 'IP6Address *' implicit this
|-CXXConstructorDecl 0x563d9938b600 <line:31:5, line:33:5> line:31:21 IP6Address 'void (IPAddress)' inline
| |-ParmVarDecl 0x563d9938b570 <col:32, col:42> col:42 used x 'IPAddress'
| |-CXXCtorInitializer Field 0x563d9938e778 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x563d9938f610 <col:21> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x563d99442790 <col:45, line:33:5>
|   `-ExprWithCleanups 0x563d99442778 <line:32:2, col:10> 'IP6Address' lvalue
|     `-CXXOperatorCallExpr 0x563d99442740 <col:2, col:10> 'IP6Address' lvalue
|       |-ImplicitCastExpr 0x563d99442728 <col:8> 'IP6Address &(*)(const struct in_addr &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x563d994426a8 <col:8> 'IP6Address &(const struct in_addr &)' lvalue CXXMethod 0x563d9938e118 'operator=' 'IP6Address &(const struct in_addr &)'
|       |-UnaryOperator 0x563d9938f678 <col:2, col:3> 'IP6Address' lvalue prefix '*' cannot overflow
|       | `-CXXThisExpr 0x563d9938f668 <col:3> 'IP6Address *' this
|       `-MaterializeTemporaryExpr 0x563d99442690 <col:10> 'const struct in_addr':'const in_addr' lvalue
|         `-ImplicitCastExpr 0x563d99442678 <col:10> 'const struct in_addr':'const in_addr' <NoOp>
|           `-ImplicitCastExpr 0x563d99442660 <col:10> 'struct in_addr':'in_addr' <UserDefinedConversion>
|             `-CXXMemberCallExpr 0x563d99442640 <col:10> 'struct in_addr':'in_addr'
|               `-MemberExpr 0x563d99442610 <col:10> '<bound member function type>' .operator in_addr 0x563d9920bcb0
|                 `-ImplicitCastExpr 0x563d994425f8 <col:10> 'const IPAddress' lvalue <NoOp>
|                   `-DeclRefExpr 0x563d9938f690 <col:10> 'IPAddress' lvalue ParmVar 0x563d9938b570 'x' 'IPAddress'
|-CXXConstructorDecl 0x563d9938b750 <line:36:5, col:40> col:14 IP6Address 'void (const String &)'
| `-ParmVarDecl 0x563d9938b6c0 <col:25, col:39> col:39 x 'const String &'
|-CXXConstructorDecl 0x563d9938b978 <line:39:5, line:41:5> line:39:21 IP6Address 'void (const struct in6_addr &)' inline
| |-ParmVarDecl 0x563d9938b880 <col:32, col:55> col:55 used x 'const struct in6_addr &'
| |-CXXCtorInitializer Field 0x563d9938e778 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x563d99442920 <line:40:4, col:11> 'struct in6_addr':'in6_addr' 'void (const in6_addr &) noexcept'
| |   `-DeclRefExpr 0x563d994427a8 <col:10> 'const struct in6_addr':'const in6_addr' lvalue ParmVar 0x563d9938b880 'x' 'const struct in6_addr &'
| `-CompoundStmt 0x563d99442980 <col:13, line:41:5>
|-CXXConstructorDecl 0x563d9938bb48 <line:44:5, line:46:5> line:44:21 IP6Address 'void (const struct in_addr &)' inline
| |-ParmVarDecl 0x563d9938ba80 <col:32, col:54> col:54 used x 'const struct in_addr &'
| |-CXXCtorInitializer Field 0x563d9938e778 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x563d99442990 <col:21> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x563d99442aa0 <col:57, line:46:5>
|   `-CXXOperatorCallExpr 0x563d99442a68 <line:45:2, col:10> 'IP6Address' lvalue
|     |-ImplicitCastExpr 0x563d99442a50 <col:8> 'IP6Address &(*)(const struct in_addr &)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x563d99442a30 <col:8> 'IP6Address &(const struct in_addr &)' lvalue CXXMethod 0x563d9938e118 'operator=' 'IP6Address &(const struct in_addr &)'
|     |-UnaryOperator 0x563d994429f8 <col:2, col:3> 'IP6Address' lvalue prefix '*' cannot overflow
|     | `-CXXThisExpr 0x563d994429e8 <col:3> 'IP6Address *' this
|     `-DeclRefExpr 0x563d99442a10 <col:10> 'const struct in_addr':'const in_addr' lvalue ParmVar 0x563d9938ba80 'x' 'const struct in_addr &'
|-CXXConstructorDecl 0x563d9938bc98 <line:49:5, line:51:5> line:49:12 used IP6Address 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x563d9938bc08 <col:23, col:49> col:49 used unused 'const uninitialized_type &'
| |-CXXCtorInitializer Field 0x563d9938e778 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x563d99442ab8 <col:12> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x563d99442b68 <col:57, line:51:5>
|   `-CStyleCastExpr 0x563d99442b40 <line:50:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x563d99442b10 <col:9> 'const uninitialized_type' lvalue ParmVar 0x563d9938bc08 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x563d9938be28 <line:62:5, col:49> col:23 make_prefix 'IP6Address (int)' static
| `-ParmVarDecl 0x563d9938bd60 <col:35, col:39> col:39 prefix_len 'int'
|-CXXMethodDecl 0x563d9938bf78 <line:69:5, col:58> col:23 make_inverted_prefix 'IP6Address (int)' static
| `-ParmVarDecl 0x563d9938bee8 <col:44, col:48> col:48 prefix_len 'int'
|-TypedefDecl 0x563d9938c128 <line:71:5, col:61> col:36 referenced unspecified_bool_type 'uint32_t (IP6Address::*)() const'
| `-MemberPointerType 0x563d9938c0a0 'uint32_t (IP6Address::*)() const'
|   |-RecordType 0x563d993d04d0 'IP6Address'
|   | `-CXXRecord 0x563d9938b0e0 'IP6Address'
|   `-ParenType 0x563d9938c040 'uint32_t () const' sugar
|     `-FunctionProtoType 0x563d991c82d0 'uint32_t () const' const cdecl
|       `-TypedefType 0x563d98ffd1c0 'uint32_t' sugar
|         |-Typedef 0x563d98f10408 'uint32_t'
|         `-TypedefType 0x563d98ee9440 '__uint32_t' sugar
|           |-Typedef 0x563d98ee9038 '__uint32_t'
|           `-BuiltinType 0x563d98ea7410 'unsigned int'
|-CXXConversionDecl 0x563d9938c268 <line:72:5, col:45> col:12 operator unsigned int (IP6Address::*)() const 'IP6Address::unspecified_bool_type () const' inline
|-CXXConversionDecl 0x563d9938c3f0 <line:74:5, col:62> col:5 operator const in6_addr & 'const struct in6_addr &() const'
| `-CompoundStmt 0x563d99442bd0 <col:46, col:62>
|   `-ReturnStmt 0x563d99442bc0 <col:48, col:55>
|     `-MemberExpr 0x563d99442b90 <col:55> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x563d9938e778
|       `-CXXThisExpr 0x563d99442b80 <col:55> 'const IP6Address *' implicit this
|-CXXConversionDecl 0x563d9938c5e0 <line:75:5, col:50> col:5 operator in6_addr & 'struct in6_addr &()'
| `-CompoundStmt 0x563d99442c38 <col:34, col:50>
|   `-ReturnStmt 0x563d99442c28 <col:36, col:43>
|     `-MemberExpr 0x563d99442bf8 <col:43> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x563d9938e778
|       `-CXXThisExpr 0x563d99442be8 <col:43> 'IP6Address *' implicit this
|-CXXMethodDecl 0x563d9938c6e0 <line:76:5, col:61> col:28 in6_addr 'const struct in6_addr &() const'
| `-CompoundStmt 0x563d99442ca0 <col:45, col:61>
|   `-ReturnStmt 0x563d99442c90 <col:47, col:54>
|     `-MemberExpr 0x563d99442c60 <col:54> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x563d9938e778
|       `-CXXThisExpr 0x563d99442c50 <col:54> 'const IP6Address *' implicit this
|-CXXMethodDecl 0x563d9938c7b8 <line:77:5, col:49> col:22 in6_addr 'struct in6_addr &()'
| `-CompoundStmt 0x563d99442d08 <col:33, col:49>
|   `-ReturnStmt 0x563d99442cf8 <col:35, col:42>
|     `-MemberExpr 0x563d99442cc8 <col:42> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x563d9938e778
|       `-CXXThisExpr 0x563d99442cb8 <col:42> 'IP6Address *' implicit this
|-CXXMethodDecl 0x563d9938c880 <line:79:5, col:66> col:20 data 'unsigned char *()'
| `-CompoundStmt 0x563d99442e40 <col:27, col:66>
|   `-ReturnStmt 0x563d99442e30 <col:29, col:63>
|     `-UnaryOperator 0x563d99442e18 <col:36, col:63> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x563d99442df8 <col:37, col:63> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x563d99442de0 <col:37, col:51> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563d99442d90 <col:37, col:51> 'uint8_t [16]' lvalue .__u6_addr8 0x563d99148758
|         |   `-MemberExpr 0x563d99442d60 <col:37, col:43> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x563d99148a78
|         |     `-MemberExpr 0x563d99442d30 <col:37> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x563d9938e778
|         |       `-CXXThisExpr 0x563d99442d20 <col:37> 'IP6Address *' implicit this
|         `-IntegerLiteral 0x563d99442dc0 <col:62> 'int' 0
|-CXXMethodDecl 0x563d9938c948 <line:80:5, col:78> col:26 used data 'const unsigned char *() const'
| `-CompoundStmt 0x563d99442fb8 <col:39, col:78>
|   `-ReturnStmt 0x563d99442fa8 <col:41, col:75>
|     `-UnaryOperator 0x563d99442f90 <col:48, col:75> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x563d99442f70 <col:49, col:75> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x563d99442f58 <col:49, col:63> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563d99442ec8 <col:49, col:63> 'uint8_t const[16]' lvalue .__u6_addr8 0x563d99148758
|         |   `-MemberExpr 0x563d99442e98 <col:49, col:55> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x563d99148a78
|         |     `-MemberExpr 0x563d99442e68 <col:49> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x563d9938e778
|         |       `-CXXThisExpr 0x563d99442e58 <col:49> 'const IP6Address *' implicit this
|         `-IntegerLiteral 0x563d99442ef8 <col:74> 'int' 0
|-CXXMethodDecl 0x563d9938ca68 <line:81:5, col:75> col:15 used data16 'uint16_t *()'
| `-CompoundStmt 0x563d99443128 <col:24, col:75>
|   `-ReturnStmt 0x563d99443118 <col:26, col:72>
|     `-CStyleCastExpr 0x563d994430f0 <col:33, col:72> 'uint16_t *' <BitCast>
|       `-UnaryOperator 0x563d994430c8 <col:45, col:72> 'uint8_t *' prefix '&' cannot overflow
|         `-ArraySubscriptExpr 0x563d994430a8 <col:46, col:72> 'uint8_t':'unsigned char' lvalue
|           |-ImplicitCastExpr 0x563d99443090 <col:46, col:60> 'uint8_t *' <ArrayToPointerDecay>
|           | `-MemberExpr 0x563d99443040 <col:46, col:60> 'uint8_t [16]' lvalue .__u6_addr8 0x563d99148758
|           |   `-MemberExpr 0x563d99443010 <col:46, col:52> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x563d99148a78
|           |     `-MemberExpr 0x563d99442fe0 <col:46> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x563d9938e778
|           |       `-CXXThisExpr 0x563d99442fd0 <col:46> 'IP6Address *' implicit this
|           `-IntegerLiteral 0x563d99443070 <col:71> 'int' 0
|-CXXMethodDecl 0x563d9938cb28 <line:82:5, col:87> col:21 data16 'const uint16_t *() const'
| `-CompoundStmt 0x563d994432b0 <col:36, col:87>
|   `-ReturnStmt 0x563d994432a0 <col:38, col:84>
|     `-ImplicitCastExpr 0x563d99443288 <col:45, col:84> 'const uint16_t *' <NoOp>
|       `-CStyleCastExpr 0x563d99443260 <col:45, col:84> 'uint16_t *' <BitCast>
|         `-UnaryOperator 0x563d99443238 <col:57, col:84> 'const uint8_t *' prefix '&' cannot overflow
|           `-ArraySubscriptExpr 0x563d99443218 <col:58, col:84> 'const uint8_t':'const unsigned char' lvalue
|             |-ImplicitCastExpr 0x563d99443200 <col:58, col:72> 'const uint8_t *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563d994431b0 <col:58, col:72> 'uint8_t const[16]' lvalue .__u6_addr8 0x563d99148758
|             |   `-MemberExpr 0x563d99443180 <col:58, col:64> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x563d99148a78
|             |     `-MemberExpr 0x563d99443150 <col:58> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x563d9938e778
|             |       `-CXXThisExpr 0x563d99443140 <col:58> 'const IP6Address *' implicit this
|             `-IntegerLiteral 0x563d994431e0 <col:83> 'int' 0
|-CXXMethodDecl 0x563d9938cbe8 <line:83:5, col:75> col:15 used data32 'uint32_t *()'
| `-CompoundStmt 0x563d99443420 <col:24, col:75>
|   `-ReturnStmt 0x563d99443410 <col:26, col:72>
|     `-CStyleCastExpr 0x563d994433e8 <col:33, col:72> 'uint32_t *' <BitCast>
|       `-UnaryOperator 0x563d994433c0 <col:45, col:72> 'uint8_t *' prefix '&' cannot overflow
|         `-ArraySubscriptExpr 0x563d994433a0 <col:46, col:72> 'uint8_t':'unsigned char' lvalue
|           |-ImplicitCastExpr 0x563d99443388 <col:46, col:60> 'uint8_t *' <ArrayToPointerDecay>
|           | `-MemberExpr 0x563d99443338 <col:46, col:60> 'uint8_t [16]' lvalue .__u6_addr8 0x563d99148758
|           |   `-MemberExpr 0x563d99443308 <col:46, col:52> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x563d99148a78
|           |     `-MemberExpr 0x563d994432d8 <col:46> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x563d9938e778
|           |       `-CXXThisExpr 0x563d994432c8 <col:46> 'IP6Address *' implicit this
|           `-IntegerLiteral 0x563d99443368 <col:71> 'int' 0
|-CXXMethodDecl 0x563d9938cca8 <line:84:5, col:87> col:21 used data32 'const uint32_t *() const'
| `-CompoundStmt 0x563d994435a8 <col:36, col:87>
|   `-ReturnStmt 0x563d99443598 <col:38, col:84>
|     `-ImplicitCastExpr 0x563d99443580 <col:45, col:84> 'const uint32_t *' <NoOp>
|       `-CStyleCastExpr 0x563d99443558 <col:45, col:84> 'uint32_t *' <BitCast>
|         `-UnaryOperator 0x563d99443530 <col:57, col:84> 'const uint8_t *' prefix '&' cannot overflow
|           `-ArraySubscriptExpr 0x563d99443510 <col:58, col:84> 'const uint8_t':'const unsigned char' lvalue
|             |-ImplicitCastExpr 0x563d994434f8 <col:58, col:72> 'const uint8_t *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563d994434a8 <col:58, col:72> 'uint8_t const[16]' lvalue .__u6_addr8 0x563d99148758
|             |   `-MemberExpr 0x563d99443478 <col:58, col:64> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x563d99148a78
|             |     `-MemberExpr 0x563d99443448 <col:58> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x563d9938e778
|             |       `-CXXThisExpr 0x563d99443438 <col:58> 'const IP6Address *' implicit this
|             `-IntegerLiteral 0x563d994434d8 <col:83> 'int' 0
|-CXXMethodDecl 0x563d9938cd68 <line:86:5, col:32> col:21 used hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x563d9938ce30 <line:88:5, col:30> col:9 mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x563d9938d058 <line:89:5, col:80> col:17 matches_prefix 'bool (const IP6Address &, const IP6Address &) const' inline
| |-ParmVarDecl 0x563d9938cf08 <col:32, col:50> col:50 addr 'const IP6Address &'
| `-ParmVarDecl 0x563d9938cf80 <col:56, col:74> col:74 mask 'const IP6Address &'
|-CXXMethodDecl 0x563d9938d1d8 <line:90:5, col:54> col:17 mask_as_specific 'bool (const IP6Address &) const' inline
| `-ParmVarDecl 0x563d9938d118 <col:34, col:51> col:52 'const IP6Address &'
|-CXXMethodDecl 0x563d9938d2a0 <line:97:5, line:99:5> line:97:10 has_ether_address 'bool () const'
| `-CompoundStmt 0x563d994438c0 <col:36, line:99:5>
|   `-ReturnStmt 0x563d994438b0 <line:98:2, col:81>
|     `-BinaryOperator 0x563d99443890 <col:9, col:81> 'bool' '&&'
|       |-BinaryOperator 0x563d99443708 <col:9, col:41> 'bool' '=='
|       | |-ImplicitCastExpr 0x563d994436f0 <col:9, col:36> 'int' <IntegralCast>
|       | | `-ImplicitCastExpr 0x563d994436d8 <col:9, col:36> 'uint8_t':'unsigned char' <LValueToRValue>
|       | |   `-ArraySubscriptExpr 0x563d99443698 <col:9, col:36> 'const uint8_t':'const unsigned char' lvalue
|       | |     |-ImplicitCastExpr 0x563d99443680 <col:9, col:23> 'const uint8_t *' <ArrayToPointerDecay>
|       | |     | `-MemberExpr 0x563d99443630 <col:9, col:23> 'uint8_t const[16]' lvalue .__u6_addr8 0x563d99148758
|       | |     |   `-MemberExpr 0x563d99443600 <col:9, col:15> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x563d99148a78
|       | |     |     `-MemberExpr 0x563d994435d0 <col:9> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x563d9938e778
|       | |     |       `-CXXThisExpr 0x563d994435c0 <col:9> 'const IP6Address *' implicit this
|       | |     `-IntegerLiteral 0x563d99443660 <col:34> 'int' 11
|       | `-IntegerLiteral 0x563d994436b8 <col:41> 'int' 255
|       `-BinaryOperator 0x563d99443870 <col:49, col:81> 'bool' '=='
|         |-ImplicitCastExpr 0x563d99443858 <col:49, col:76> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x563d99443840 <col:49, col:76> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x563d99443800 <col:49, col:76> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x563d994437e8 <col:49, col:63> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x563d99443798 <col:49, col:63> 'uint8_t const[16]' lvalue .__u6_addr8 0x563d99148758
|         |     |   `-MemberExpr 0x563d99443768 <col:49, col:55> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x563d99148a78
|         |     |     `-MemberExpr 0x563d99443738 <col:49> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x563d9938e778
|         |     |       `-CXXThisExpr 0x563d99443728 <col:49> 'const IP6Address *' implicit this
|         |     `-IntegerLiteral 0x563d994437c8 <col:74> 'int' 12
|         `-IntegerLiteral 0x563d99443820 <col:81> 'int' 254
|-CXXMethodDecl 0x563d9938d418 <line:104:5, col:41> col:10 ether_address 'bool (EtherAddress &) const'
| `-ParmVarDecl 0x563d9938d350 <col:24, col:38> col:38 x 'EtherAddress &'
|-CXXMethodDecl 0x563d9938d4e0 <line:111:5, line:114:5> line:111:17 is_ip4_compatible 'bool () const' inline
| `-CompoundStmt 0x563d99443da8 <col:43, line:114:5>
|   `-ReturnStmt 0x563d99443d98 <line:112:2, line:113:24>
|     `-BinaryOperator 0x563d99443d78 <line:112:9, line:113:24> 'bool' '&&'
|       |-BinaryOperator 0x563d99443bd8 <line:112:9, col:44> 'bool' '&&'
|       | |-BinaryOperator 0x563d99443a38 <col:9, col:24> 'bool' '=='
|       | | |-ImplicitCastExpr 0x563d99443a08 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|       | | | `-ArraySubscriptExpr 0x563d994439c8 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|       | | |   |-CXXMemberCallExpr 0x563d99443988 <col:9, col:16> 'const uint32_t *'
|       | | |   | `-MemberExpr 0x563d99443958 <col:9> '<bound member function type>' ->data32 0x563d9938cca8
|       | | |   |   `-CXXThisExpr 0x563d99443948 <col:9> 'const IP6Address *' implicit this
|       | | |   `-IntegerLiteral 0x563d994439a8 <col:18> 'int' 0
|       | | `-ImplicitCastExpr 0x563d99443a20 <col:24> 'unsigned int' <IntegralCast>
|       | |   `-IntegerLiteral 0x563d994439e8 <col:24> 'int' 0
|       | `-BinaryOperator 0x563d99443bb8 <col:29, col:44> 'bool' '=='
|       |   |-ImplicitCastExpr 0x563d99443b88 <col:29, col:39> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-ArraySubscriptExpr 0x563d99443b48 <col:29, col:39> 'const uint32_t':'const unsigned int' lvalue
|       |   |   |-CXXMemberCallExpr 0x563d99443b08 <col:29, col:36> 'const uint32_t *'
|       |   |   | `-MemberExpr 0x563d99443ad8 <col:29> '<bound member function type>' ->data32 0x563d9938cca8
|       |   |   |   `-CXXThisExpr 0x563d99443ac8 <col:29> 'const IP6Address *' implicit this
|       |   |   `-IntegerLiteral 0x563d99443b28 <col:38> 'int' 1
|       |   `-ImplicitCastExpr 0x563d99443ba0 <col:44> 'unsigned int' <IntegralCast>
|       |     `-IntegerLiteral 0x563d99443b68 <col:44> 'int' 0
|       `-BinaryOperator 0x563d99443d58 <line:113:9, col:24> 'bool' '=='
|         |-ImplicitCastExpr 0x563d99443d28 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-ArraySubscriptExpr 0x563d99443ce8 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|         |   |-CXXMemberCallExpr 0x563d99443ca8 <col:9, col:16> 'const uint32_t *'
|         |   | `-MemberExpr 0x563d99443c78 <col:9> '<bound member function type>' ->data32 0x563d9938cca8
|         |   |   `-CXXThisExpr 0x563d99443c68 <col:9> 'const IP6Address *' implicit this
|         |   `-IntegerLiteral 0x563d99443cc8 <col:18> 'int' 2
|         `-ImplicitCastExpr 0x563d99443d40 <col:24> 'unsigned int' <IntegralCast>
|           `-IntegerLiteral 0x563d99443d08 <col:24> 'int' 0
|-CXXMethodDecl 0x563d9938d5a0 <line:120:5, line:123:5> line:120:17 is_ip4_mapped 'bool () const' inline
| `-CompoundStmt 0x563d99444320 <col:39, line:123:5>
|   `-ReturnStmt 0x563d99444310 <line:121:2, line:122:41>
|     `-BinaryOperator 0x563d994442f0 <line:121:9, line:122:41> 'bool' '&&'
|       |-BinaryOperator 0x563d994440c0 <line:121:9, col:44> 'bool' '&&'
|       | |-BinaryOperator 0x563d99443f20 <col:9, col:24> 'bool' '=='
|       | | |-ImplicitCastExpr 0x563d99443ef0 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|       | | | `-ArraySubscriptExpr 0x563d99443eb0 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|       | | |   |-CXXMemberCallExpr 0x563d99443e70 <col:9, col:16> 'const uint32_t *'
|       | | |   | `-MemberExpr 0x563d99443e40 <col:9> '<bound member function type>' ->data32 0x563d9938cca8
|       | | |   |   `-CXXThisExpr 0x563d99443e30 <col:9> 'const IP6Address *' implicit this
|       | | |   `-IntegerLiteral 0x563d99443e90 <col:18> 'int' 0
|       | | `-ImplicitCastExpr 0x563d99443f08 <col:24> 'unsigned int' <IntegralCast>
|       | |   `-IntegerLiteral 0x563d99443ed0 <col:24> 'int' 0
|       | `-BinaryOperator 0x563d994440a0 <col:29, col:44> 'bool' '=='
|       |   |-ImplicitCastExpr 0x563d99444070 <col:29, col:39> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-ArraySubscriptExpr 0x563d99444030 <col:29, col:39> 'const uint32_t':'const unsigned int' lvalue
|       |   |   |-CXXMemberCallExpr 0x563d99443ff0 <col:29, col:36> 'const uint32_t *'
|       |   |   | `-MemberExpr 0x563d99443fc0 <col:29> '<bound member function type>' ->data32 0x563d9938cca8
|       |   |   |   `-CXXThisExpr 0x563d99443fb0 <col:29> 'const IP6Address *' implicit this
|       |   |   `-IntegerLiteral 0x563d99444010 <col:38> 'int' 1
|       |   `-ImplicitCastExpr 0x563d99444088 <col:44> 'unsigned int' <IntegralCast>
|       |     `-IntegerLiteral 0x563d99444050 <col:44> 'int' 0
|       `-BinaryOperator 0x563d994442d0 <line:122:9, col:41> 'bool' '=='
|         |-ImplicitCastExpr 0x563d994442b8 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-ArraySubscriptExpr 0x563d994441d0 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|         |   |-CXXMemberCallExpr 0x563d99444190 <col:9, col:16> 'const uint32_t *'
|         |   | `-MemberExpr 0x563d99444160 <col:9> '<bound member function type>' ->data32 0x563d9938cca8
|         |   |   `-CXXThisExpr 0x563d99444150 <col:9> 'const IP6Address *' implicit this
|         |   `-IntegerLiteral 0x563d994441b0 <col:18> 'int' 2
|         `-CallExpr 0x563d99444290 <col:24, col:41> 'uint32_t':'unsigned int'
|           |-ImplicitCastExpr 0x563d99444278 <col:24> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x563d99444258 <col:24> 'uint32_t (uint32_t) throw()' lvalue Function 0x563d9914c8e8 'htonl' 'uint32_t (uint32_t) throw()'
|           `-IntegerLiteral 0x563d99444238 <col:30> 'unsigned int' 65535
|-CXXMethodDecl 0x563d9938d660 <line:129:5, line:131:5> line:129:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x563d994444b0 <col:38, line:131:5>
|   `-ReturnStmt 0x563d994444a0 <line:130:9, col:47>
|     `-BinaryOperator 0x563d99444480 <col:16, col:47> 'bool' '=='
|       |-ImplicitCastExpr 0x563d99444468 <col:16, col:42> 'int' <IntegralCast>
|       | `-ImplicitCastExpr 0x563d99444450 <col:16, col:42> 'uint8_t':'unsigned char' <LValueToRValue>
|       |   `-ArraySubscriptExpr 0x563d99444410 <col:16, col:42> 'const uint8_t':'const unsigned char' lvalue
|       |     |-ImplicitCastExpr 0x563d994443f8 <col:16, col:30> 'const uint8_t *' <ArrayToPointerDecay>
|       |     | `-MemberExpr 0x563d994443a8 <col:16, col:30> 'uint8_t const[16]' lvalue .__u6_addr8 0x563d99148758
|       |     |   `-MemberExpr 0x563d99444378 <col:16, col:22> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x563d99148a78
|       |     |     `-MemberExpr 0x563d99444348 <col:16> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x563d9938e778
|       |     |       `-CXXThisExpr 0x563d99444338 <col:16> 'const IP6Address *' implicit this
|       |     `-IntegerLiteral 0x563d994443d8 <col:41> 'int' 0
|       `-IntegerLiteral 0x563d99444430 <col:47> 'int' 255
|-CXXMethodDecl 0x563d9938d720 <line:137:5, line:139:5> line:137:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x563d99444888 <col:39, line:139:5>
|   `-ReturnStmt 0x563d99444878 <line:138:9, col:67>
|     `-BinaryOperator 0x563d99444858 <col:16, col:67> 'bool' '&&'
|       |-BinaryOperator 0x563d994446b8 <col:16, col:47> 'bool' '=='
|       | |-ImplicitCastExpr 0x563d994446a0 <col:16, col:26> 'uint32_t':'unsigned int' <LValueToRValue>
|       | | `-ArraySubscriptExpr 0x563d994445b8 <col:16, col:26> 'const uint32_t':'const unsigned int' lvalue
|       | |   |-CXXMemberCallExpr 0x563d99444578 <col:16, col:23> 'const uint32_t *'
|       | |   | `-MemberExpr 0x563d99444548 <col:16> '<bound member function type>' ->data32 0x563d9938cca8
|       | |   |   `-CXXThisExpr 0x563d99444538 <col:16> 'const IP6Address *' implicit this
|       | |   `-IntegerLiteral 0x563d99444598 <col:25> 'int' 0
|       | `-CallExpr 0x563d99444678 <col:31, col:47> 'uint32_t':'unsigned int'
|       |   |-ImplicitCastExpr 0x563d99444660 <col:31> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x563d99444640 <col:31> 'uint32_t (uint32_t) throw()' lvalue Function 0x563d9914c8e8 'htonl' 'uint32_t (uint32_t) throw()'
|       |   `-IntegerLiteral 0x563d99444620 <col:37> 'unsigned int' 4269801472
|       `-BinaryOperator 0x563d99444838 <col:52, col:67> 'bool' '=='
|         |-ImplicitCastExpr 0x563d99444808 <col:52, col:62> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-ArraySubscriptExpr 0x563d994447c8 <col:52, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |   |-CXXMemberCallExpr 0x563d99444788 <col:52, col:59> 'const uint32_t *'
|         |   | `-MemberExpr 0x563d99444758 <col:52> '<bound member function type>' ->data32 0x563d9938cca8
|         |   |   `-CXXThisExpr 0x563d99444748 <col:52> 'const IP6Address *' implicit this
|         |   `-IntegerLiteral 0x563d994447a8 <col:61> 'int' 1
|         `-ImplicitCastExpr 0x563d99444820 <col:67> 'unsigned int' <IntegralCast>
|           `-IntegerLiteral 0x563d994447e8 <col:67> 'int' 0
|-CXXMethodDecl 0x563d9938d7e0 <line:145:5, col:29> col:15 ip4_address 'IPAddress () const'
|-CXXMethodDecl 0x563d9938d988 <line:154:5, col:53> col:24 operator&= 'IP6Address &(const IP6Address &)' inline
| `-ParmVarDecl 0x563d9938d890 <col:35, col:52> col:53 'const IP6Address &'
|-CXXMethodDecl 0x563d9938db48 <line:155:5, col:58> col:24 operator&= 'IP6Address &(const struct in6_addr &)' inline
| `-ParmVarDecl 0x563d9938da58 <col:35, col:57> col:58 'const struct in6_addr &'
|-CXXMethodDecl 0x563d9938dc90 <line:156:5, col:53> col:24 operator|= 'IP6Address &(const IP6Address &)' inline
| `-ParmVarDecl 0x563d9938dc00 <col:35, col:52> col:53 'const IP6Address &'
|-CXXMethodDecl 0x563d9938ddf0 <line:157:5, col:58> col:24 operator|= 'IP6Address &(const struct in6_addr &)' inline
| `-ParmVarDecl 0x563d9938dd60 <col:35, col:57> col:58 'const struct in6_addr &'
|-CXXMethodDecl 0x563d9938df50 <line:159:5, col:57> col:24 operator= 'IP6Address &(const struct in6_addr &)' inline
| `-ParmVarDecl 0x563d9938dec0 <col:34, col:56> col:57 'const struct in6_addr &'
|-CXXMethodDecl 0x563d9938e118 <line:160:5, col:56> col:24 used operator= 'IP6Address &(const struct in_addr &)' inline
| `-ParmVarDecl 0x563d9938e020 <col:34, col:55> col:56 'const struct in_addr &'
|-CXXMethodDecl 0x563d9938e298 <line:162:5, col:35> col:10 used unparse 'void (StringAccum &) const'
| `-ParmVarDecl 0x563d9938e1d0 <col:18, col:31> col:31 sa 'StringAccum &'
|-CXXMethodDecl 0x563d9938e360 <line:163:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x563d9938e420 <line:164:5, col:31> col:12 unparse_expanded 'String () const'
|-CXXMethodDecl 0x563d9938e4e0 <line:166:5, col:42> col:12 s 'String () const'
| `-CompoundStmt 0x563d99444a08 <col:22, col:42>
|   `-ReturnStmt 0x563d994449f8 <col:24, col:39>
|     `-ExprWithCleanups 0x563d994449e0 <col:31, col:39> 'String'
|       `-CXXConstructExpr 0x563d994449b0 <col:31, col:39> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x563d99444998 <col:31, col:39> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x563d99444978 <col:31, col:39> 'String' (CXXTemporary 0x563d99444978)
|             `-CXXMemberCallExpr 0x563d99444950 <col:31, col:39> 'String'
|               `-MemberExpr 0x563d99444920 <col:31> '<bound member function type>' ->unparse 0x563d9938e360
|                 `-CXXThisExpr 0x563d99444910 <col:31> 'const IP6Address *' implicit this
|-CXXConversionDecl 0x563d9938e5b0 <line:167:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x563d9938e658 <col:51> "" ""
|-TypedefDecl 0x563d9938e6d8 <line:169:5, col:31> col:31 parameter_type 'const IP6Address &'
| `-LValueReferenceType 0x563d9938ced0 'const IP6Address &'
|   `-QualType 0x563d993d04d1 'const IP6Address' const
|     `-RecordType 0x563d993d04d0 'IP6Address'
|       `-CXXRecord 0x563d9938b0e0 'IP6Address'
|-AccessSpecDecl 0x563d9938e730 <line:171:3, col:10> col:3 private
|-FieldDecl 0x563d9938e778 <line:173:5, col:21> col:21 referenced _addr 'struct in6_addr':'in6_addr'
|-CXXMethodDecl 0x563d9938f6b0 <line:14:7> col:7 implicit operator= 'IP6Address &(const IP6Address &)' inline default trivial noexcept-unevaluated 0x563d9938f6b0
| `-ParmVarDecl 0x563d9938f788 <col:7> col:7 'const IP6Address &'
|-CXXMethodDecl 0x563d9938fe58 <col:7> col:7 implicit operator= 'IP6Address &(IP6Address &&)' inline default trivial noexcept-unevaluated 0x563d9938fe58
| `-ParmVarDecl 0x563d9938ff68 <col:7> col:7 'IP6Address &&'
|-CXXConstructorDecl 0x563d9938ffd8 <col:7> col:7 implicit constexpr IP6Address 'void (const IP6Address &)' inline default trivial noexcept-unevaluated 0x563d9938ffd8
| `-ParmVarDecl 0x563d993900e8 <col:7> col:7 'const IP6Address &'
|-CXXConstructorDecl 0x563d99390240 <col:7> col:7 implicit used constexpr IP6Address 'void (IP6Address &&) noexcept' inline default trivial
| |-ParmVarDecl 0x563d99390358 <col:7> col:7 used 'IP6Address &&'
| |-CXXCtorInitializer Field 0x563d9938e778 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x563d9944bd58 <col:7> 'struct in6_addr':'in6_addr' 'void (in6_addr &&) noexcept'
| |   `-MemberExpr 0x563d9944bc00 <col:7> 'struct in6_addr':'in6_addr' xvalue ._addr 0x563d9938e778
| |     `-CXXStaticCastExpr 0x563d9944bbd0 <col:7> 'IP6Address' xvalue static_cast<class IP6Address &&> <NoOp>
| |       `-DeclRefExpr 0x563d9944bba0 <col:7> 'IP6Address' lvalue ParmVar 0x563d99390358 '' 'IP6Address &&'
| `-CompoundStmt 0x563d9944bdb8 <col:7>
`-CXXDestructorDecl 0x563d9944ba08 <col:7> col:7 implicit referenced ~IP6Address 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IP6Address = type { %struct.in6_addr }
  NonVirtualBaseLLVMType:%class.IP6Address = type { %struct.in6_addr }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563d99462250 <../elements/ip6/lookupip6route.hh:42:1, line:75:1> line:42:7 class LookupIP6Route definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'IP6RouteTable'
|-CXXRecordDecl 0x563d994623a8 <col:1, col:7> col:7 implicit referenced class LookupIP6Route
|-AccessSpecDecl 0x563d99462438 <line:43:1, col:7> col:1 public
|-CXXConstructorDecl 0x563d994624c0 <line:44:3, col:18> col:3 LookupIP6Route 'void ()'
|-CXXDestructorDecl 0x563d994686f0 <line:45:3, col:19> col:3 ~LookupIP6Route 'void ()' noexcept-unevaluated 0x563d994686f0
| `-Overrides: [ 0x563d99462170 IP6RouteTable::~IP6RouteTable 'void () noexcept' ]
|-CXXMethodDecl 0x563d99468820 <line:47:3, col:61> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x563d9940ad28 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x563d99469d08 <col:34, col:61>
|   `-ReturnStmt 0x563d99469cf8 <col:36, col:43>
|     `-ImplicitCastExpr 0x563d99469ce0 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x563d99469cb8 <col:43> 'const char [15]' lvalue "LookupIP6Route"
|-CXXMethodDecl 0x563d994688e8 <line:48:3, col:50> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x563d9940adf0 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x563d99469d68 <col:34, col:50>
|   `-ReturnStmt 0x563d99469d58 <col:36, col:43>
|     `-ImplicitCastExpr 0x563d99469d40 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x563d99469d20 <col:43> 'const char [4]' lvalue "1/-"
|-CXXMethodDecl 0x563d994689b0 <line:49:3, col:49> col:15 processing 'const char *() const'
| |-Overrides: [ 0x563d9940b1b8 Element::processing 'const char *() const' ]
| `-CompoundStmt 0x563d99469dc8 <col:34, col:49>
|   `-ReturnStmt 0x563d99469db8 <col:36, col:43>
|     `-ImplicitCastExpr 0x563d99469da0 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x563d99469d80 <col:43> 'const char []' lvalue Var 0x563d9940b300 'PUSH' 'const char []'
|-CXXMethodDecl 0x563d99468c80 <line:51:3, col:49> col:7 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x563d9940c5c0 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x563d99468b30 <col:17, col:32> col:33 'Vector<String> &'
| `-ParmVarDecl 0x563d99468ba8 <col:35, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x563d99468dd8 <line:52:3, col:32> col:7 initialize 'int (ErrorHandler *)'
| |-Overrides: [ 0x563d9940c810 Element::initialize 'int (ErrorHandler *)' ]
| `-ParmVarDecl 0x563d99468d40 <col:18, col:31> col:32 'ErrorHandler *'
|-CXXMethodDecl 0x563d99468ea0 <line:53:3, col:21> col:8 add_handlers 'void ()'
| `-Overrides: [ 0x563d9940c690 Element::add_handlers 'void ()' ]
|-CXXMethodDecl 0x563d99469068 <line:55:3, col:32> col:8 push 'void (int, Packet *)'
| |-Overrides: [ 0x563d99409b98 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x563d99468f58 <col:13, col:17> col:17 port 'int'
| `-ParmVarDecl 0x563d99468fd0 <col:23, col:31> col:31 p 'Packet *'
|-CXXMethodDecl 0x563d994693c8 <line:57:3, col:72> col:7 add_route 'int (IP6Address, IP6Address, IP6Address, int, ErrorHandler *)'
| |-Overrides: [ 0x563d99460be0 IP6RouteTable::add_route 'int (IP6Address, IP6Address, IP6Address, int, ErrorHandler *)' ]
| |-ParmVarDecl 0x563d99469128 <col:17> col:27 'IP6Address'
| |-ParmVarDecl 0x563d994691a0 <col:29> col:39 'IP6Address'
| |-ParmVarDecl 0x563d99469218 <col:41> col:51 'IP6Address'
| |-ParmVarDecl 0x563d99469298 <col:53> col:56 'int'
| `-ParmVarDecl 0x563d99469310 <col:58, col:71> col:72 'ErrorHandler *'
|-CXXMethodDecl 0x563d99469638 <line:58:3, col:58> col:7 remove_route 'int (IP6Address, IP6Address, ErrorHandler *)'
| |-Overrides: [ 0x563d99460e90 IP6RouteTable::remove_route 'int (IP6Address, IP6Address, ErrorHandler *)' ]
| |-ParmVarDecl 0x563d994694a0 <col:20> col:30 'IP6Address'
| |-ParmVarDecl 0x563d99469518 <col:32> col:42 'IP6Address'
| `-ParmVarDecl 0x563d99469590 <col:44, col:57> col:58 'ErrorHandler *'
|-CXXMethodDecl 0x563d99469710 <line:59:3, col:44> col:10 dump_routes 'String ()'
| |-Overrides: [ 0x563d99460f68 IP6RouteTable::dump_routes 'String ()' ]
| `-CompoundStmt 0x563d99469f08 <col:24, col:44>
|   `-ReturnStmt 0x563d99469ef8 <col:26, col:41>
|     `-ExprWithCleanups 0x563d99469ee0 <col:33, col:41> 'String'
|       `-CXXConstructExpr 0x563d99469eb0 <col:33, col:41> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x563d99469e98 <col:33, col:41> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x563d99469e78 <col:33, col:41> 'String' (CXXTemporary 0x563d99469e78)
|             `-CXXMemberCallExpr 0x563d99469e50 <col:33, col:41> 'String'
|               `-MemberExpr 0x563d99469e20 <col:33, col:36> '<bound member function type>' .dump 0x563d99454928
|                 `-MemberExpr 0x563d99469df0 <col:33> 'IP6Table' lvalue ->_t 0x563d994697e8
|                   `-CXXThisExpr 0x563d99469de0 <col:33> 'LookupIP6Route *' implicit this
|-AccessSpecDecl 0x563d994697b0 <line:61:1, col:8> col:1 private
|-FieldDecl 0x563d994697e8 <line:63:3, col:12> col:12 referenced _t 'IP6Table'
|-FieldDecl 0x563d99469848 <line:65:3, col:14> col:14 _last_addr 'IP6Address'
|-FieldDecl 0x563d994698a8 <line:66:3, col:14> col:14 _last_gw 'IP6Address'
|-FieldDecl 0x563d99469910 <line:67:3, col:7> col:7 _last_output 'int'
|-CXXConstructorDecl 0x563d99469988 <line:42:7> col:7 implicit LookupIP6Route 'void (const LookupIP6Route &)' inline default_delete noexcept-unevaluated 0x563d99469988
| `-ParmVarDecl 0x563d99469a98 <col:7> col:7 'const LookupIP6Route &'
`-CXXMethodDecl 0x563d99469b38 <col:7> col:7 implicit operator= 'LookupIP6Route &(const LookupIP6Route &)' inline default_delete noexcept-unevaluated 0x563d99469b38
  `-ParmVarDecl 0x563d99469c48 <col:7> col:7 'const LookupIP6Route &'

Layout: <CGRecordLayout
  LLVMType:%class.LookupIP6Route = type <{ %class.IP6RouteTable.base, [4 x i8], %class.IP6Table, %class.IP6Address, %class.IP6Address, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.LookupIP6Route.base = type <{ %class.IP6RouteTable.base, [4 x i8], %class.IP6Table, %class.IP6Address, %class.IP6Address, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563d991dd490 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x563d991dd5a8 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x563d991dd648 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x563d991dd6a8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x563d991dd708 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x563d991dd7b8 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563d991ddac0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563d991ddbd8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x563d991ddc80 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x563d991ddce8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x563d991ddd78 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x563d991e3e10 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x563d991e4248 <col:12>
|-CXXConstructorDecl 0x563d991e3f18 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x563d991e4028 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x563d991ddc80 'data' 'const char *'
| | `-ImplicitCastExpr 0x563d991e67d0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x563d991e67a0 <col:12> 'const char *const' lvalue .data 0x563d991ddc80
| |     `-DeclRefExpr 0x563d991e6780 <col:12> 'const String::rep_t' lvalue ParmVar 0x563d991e4028 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x563d991ddce8 'length' 'int'
| | `-ImplicitCastExpr 0x563d991e6860 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x563d991e6830 <col:12> 'const int' lvalue .length 0x563d991ddce8
| |     `-DeclRefExpr 0x563d991e6810 <col:12> 'const String::rep_t' lvalue ParmVar 0x563d991e4028 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x563d991ddd78 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x563d991e68f0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x563d991e68c0 <col:12> 'String::memo_t *const' lvalue .memo 0x563d991ddd78
| |     `-DeclRefExpr 0x563d991e68a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x563d991e4028 '' 'const String::rep_t &'
| `-CompoundStmt 0x563d991e6948 <col:12>
|-CXXConstructorDecl 0x563d991e40c8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x563d991e40c8
| `-ParmVarDecl 0x563d991e41d8 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x563d991e9730 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x563d991f5148 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x563d991f5258 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x563d991f5770 <col:12>
|   |-BinaryOperator 0x563d991f5588 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x563d991f5540 <col:12> 'const char *' lvalue ->data 0x563d991ddc80
|   | | `-CXXThisExpr 0x563d991f5530 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x563d991f5570 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x563d991f5500 <col:12> 'const char *const' lvalue .data 0x563d991ddc80
|   |     `-DeclRefExpr 0x563d991f54e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x563d991f5258 '' 'const String::rep_t &'
|   |-BinaryOperator 0x563d991f5650 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x563d991f5608 <col:12> 'int' lvalue ->length 0x563d991ddce8
|   | | `-CXXThisExpr 0x563d991f55f8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x563d991f5638 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x563d991f55c8 <col:12> 'const int' lvalue .length 0x563d991ddce8
|   |     `-DeclRefExpr 0x563d991f55a8 <col:12> 'const String::rep_t' lvalue ParmVar 0x563d991f5258 '' 'const String::rep_t &'
|   |-BinaryOperator 0x563d991f5718 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x563d991f56d0 <col:12> 'String::memo_t *' lvalue ->memo 0x563d991ddd78
|   | | `-CXXThisExpr 0x563d991f56c0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x563d991f5700 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x563d991f5690 <col:12> 'String::memo_t *const' lvalue .memo 0x563d991ddd78
|   |     `-DeclRefExpr 0x563d991f5670 <col:12> 'const String::rep_t' lvalue ParmVar 0x563d991f5258 '' 'const String::rep_t &'
|   `-ReturnStmt 0x563d991f5760 <col:12>
|     `-UnaryOperator 0x563d991f5748 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563d991f5738 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x563d991f52c8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x563d991f52c8
  `-ParmVarDecl 0x563d991f53d8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563d991d4a00 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563d991d4b18 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x563d991d4ba8 <col:16, col:22> col:16 public
|-TypedefDecl 0x563d991d4be8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x563d98ea7dc0 'const char *'
|   `-QualType 0x563d98ea7311 'const char' const
|     `-BuiltinType 0x563d98ea7310 'char'
|-TypedefDecl 0x563d991d4c70 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x563d991d4c40 'String::const_iterator' sugar
|   |-Typedef 0x563d991d4be8 'const_iterator'
|   `-PointerType 0x563d98ea7dc0 'const char *'
|     `-QualType 0x563d98ea7311 'const char' const
|       `-BuiltinType 0x563d98ea7310 'char'
|-TypedefDecl 0x563d991d4de0 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x563d991d4d50 'int (String::*)() const'
|   |-RecordType 0x563d991d4a90 'String'
|   | `-CXXRecord 0x563d991d4a00 'String'
|   `-ParenType 0x563d991d4cf0 'int () const' sugar
|     `-FunctionProtoType 0x563d991a8880 'int () const' const cdecl
|       `-BuiltinType 0x563d98ea7370 'int'
|-TypedefDecl 0x563d991d4e48 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x563d98ffd460 'int64_t' sugar
|   |-Typedef 0x563d98f102d0 'int64_t'
|   `-TypedefType 0x563d98ee94d0 '__int64_t' sugar
|     |-Typedef 0x563d98ee90a8 '__int64_t'
|     `-BuiltinType 0x563d98ea7390 'long'
|-TypedefDecl 0x563d991d4eb0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x563d98ffd380 'uint64_t' sugar
|   |-Typedef 0x563d98f10470 'uint64_t'
|   `-TypedefType 0x563d98ee9560 '__uint64_t' sugar
|     |-Typedef 0x563d98ee9118 '__uint64_t'
|     `-BuiltinType 0x563d98ea7430 'unsigned long'
|-TypedefDecl 0x563d991d4f40 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x563d991d4f10 'String::intmax_t' sugar
|   |-Typedef 0x563d991d4e48 'intmax_t'
|   `-TypedefType 0x563d98ffd460 'int64_t' sugar
|     |-Typedef 0x563d98f102d0 'int64_t'
|     `-TypedefType 0x563d98ee94d0 '__int64_t' sugar
|       |-Typedef 0x563d98ee90a8 '__int64_t'
|       `-BuiltinType 0x563d98ea7390 'long'
|-TypedefDecl 0x563d991d4fd0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x563d991d4fa0 'String::uintmax_t' sugar
|   |-Typedef 0x563d991d4eb0 'uintmax_t'
|   `-TypedefType 0x563d98ffd380 'uint64_t' sugar
|     |-Typedef 0x563d98f10470 'uint64_t'
|     `-TypedefType 0x563d98ee9560 '__uint64_t' sugar
|       |-Typedef 0x563d98ee9118 '__uint64_t'
|       `-BuiltinType 0x563d98ea7430 'unsigned long'
|-CXXConstructorDecl 0x563d991d5090 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x563d991d5238 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x563d991d5178 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x563d991d53e8 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x563d991d5328 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x563d991d5540 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x563d991d54b0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x563d991d5758 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x563d991d5608 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x563d991d5688 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x563d991d5978 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x563d991d5828 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x563d991d58a8 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x563d991d5b98 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x563d991d5a48 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x563d991d5ac8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x563d991d5db8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x563d991d5c68 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x563d991d5ce8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x563d991d5f48 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x563d991d5e80 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x563d991d60c8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x563d991d6008 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x563d991d6258 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x563d991d6190 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x563d991d63b0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x563d991d6320 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x563d991d6508 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x563d991d6478 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x563d991d6660 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x563d991d65d0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x563d991d67e8 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x563d991d6728 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x563d991d6978 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x563d991d68b0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x563d991d6b08 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x563d991d6a40 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x563d991d6c98 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x563d991d6bd0 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x563d991d6d90 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x563d991d6eb8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x563d991d7038 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x563d991d6f70 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x563d991d7188 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x563d991d70f8 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x563d991d7240 <col:63> "" ""
|-CXXMethodDecl 0x563d991d7388 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x563d991d72c8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x563d991d7598 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x563d991d7448 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x563d991d74c8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x563d991d77b8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x563d991d7660 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x563d991d76e0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x563d991d7a98 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x563d991d7878 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x563d991d78f8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x563d991e38e0 <col:55> 'int' 10
| `-ParmVarDecl 0x563d991d7970 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563d991e3900 <col:76> 'bool' true
|-CXXMethodDecl 0x563d991d7d78 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x563d991d7b60 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x563d991d7be0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x563d991e3910 <col:56> 'int' 10
| `-ParmVarDecl 0x563d991d7c58 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563d991e3930 <col:77> 'bool' true
|-CXXMethodDecl 0x563d991d7e80 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x563d991d7f48 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x563d991d8010 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x563d991d80b0 <col:20>
| `-OptimizeNoneAttr 0x563d991d8108 <col:30>
|-CXXConversionDecl 0x563d991d81f8 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x563d991d82c8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x563d991d8388 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x563d991d8478 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x563d991d8538 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x563d991d86b8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x563d991d85f0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x563d991d8808 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x563d991d8778 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x563d991d88f8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x563d991d89b8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x563d991d8c08 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x563d991d8a70 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x563d991d8af0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x563d991d8e68 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x563d991d8cd0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x563d991d8d50 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x563d991d8f38 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x563d991d9148 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x563d991d8ff0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x563d991d9070 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x563d991d9368 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x563d991d9210 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x563d991d9290 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x563d991d94f8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x563d991d9430 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x563d991d95e8 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x563d991d9758 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x563d991d9698 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x563d991d9968 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x563d991d9818 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x563d991d9898 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x563d991d9b80 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x563d991d9a28 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x563d991d9aa0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x563d991d9d10 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x563d991d9c40 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x563d991d9f30 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x563d991d9dd0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x563d991d9e50 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x563d991da080 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x563d991d9ff0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x563d991da258 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x563d991da140 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x563d991da1c0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x563d991da3a8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x563d991da318 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x563d991da5c0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x563d991da460 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x563d991da4e0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x563d991e3940 <col:39> 'int' 0
|-CXXMethodDecl 0x563d991da7e0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x563d991da680 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x563d991da700 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x563d991e3960 <col:48> 'int' 0
|-CXXMethodDecl 0x563d991da9c0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x563d991da8a0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x563d991da920 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x563d991e3980 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x563d991daa90 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x563d991dab50 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x563d991dac10 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x563d991dacd0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x563d991dad90 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x563d991daf38 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x563d991dae40 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x563d991db0b8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x563d991daff0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x563d991db290 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x563d991db178 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x563d991db408 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x563d991db348 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x563d991db550 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x563d991db4c0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x563d991db6a0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x563d991db610 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x563d991db878 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x563d991db760 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x563d991db7e0 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x563d991dba58 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x563d991db940 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x563d991db9c0 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x563d991dbba8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x563d991dbb18 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x563d991dbdb8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x563d991dbc68 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x563d991dbce8 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x563d991dbf18 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x563d991dbe80 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x563d991dc070 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x563d991dbfd8 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x563d991dc118 <col:57> "" ""
|-CXXMethodDecl 0x563d991dc228 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x563d991dc198 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x563d991dc378 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x563d991dc2e8 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x563d991dc4f8 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x563d991dc430 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x563d991dc5c0 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x563d991dc680 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x563d991dc740 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x563d991dc7e0 <col:49> "" ""
|-CXXMethodDecl 0x563d991dc870 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x563d991dc930 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x563d991dca20 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x563d991dcae8 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x563d991dcba8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x563d991dcc68 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x563d991dcd60 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x563d991dce28 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x563d991dcef0 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x563d991dd0c8 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x563d991dcfa8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x563d991dd028 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x563d991dd2f0 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x563d991dd190 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x563d991dd210 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x563d991dd400 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x563d991dd468 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x563d991dd490 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x563d991dd5a8 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x563d991dd648 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x563d991dd6a8 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x563d991dd708 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x563d991dd7b8 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x563d991dd820 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x563d991dda58 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x563d991ddaa8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563d991dda38 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x563d991dd948 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x563d991dd8f0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x563d991dd930 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x563d991dd910 <col:32> 'int' 8
|-CXXRecordDecl 0x563d991ddac0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563d991ddbd8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x563d991ddc80 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x563d991ddce8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x563d991ddd78 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x563d991e3e10 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x563d991e4248 <col:12>
| |-CXXConstructorDecl 0x563d991e3f18 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x563d991e4028 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x563d991ddc80 'data' 'const char *'
| | | `-ImplicitCastExpr 0x563d991e67d0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x563d991e67a0 <col:12> 'const char *const' lvalue .data 0x563d991ddc80
| | |     `-DeclRefExpr 0x563d991e6780 <col:12> 'const String::rep_t' lvalue ParmVar 0x563d991e4028 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x563d991ddce8 'length' 'int'
| | | `-ImplicitCastExpr 0x563d991e6860 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x563d991e6830 <col:12> 'const int' lvalue .length 0x563d991ddce8
| | |     `-DeclRefExpr 0x563d991e6810 <col:12> 'const String::rep_t' lvalue ParmVar 0x563d991e4028 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x563d991ddd78 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x563d991e68f0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x563d991e68c0 <col:12> 'String::memo_t *const' lvalue .memo 0x563d991ddd78
| | |     `-DeclRefExpr 0x563d991e68a0 <col:12> 'const String::rep_t' lvalue ParmVar 0x563d991e4028 '' 'const String::rep_t &'
| | `-CompoundStmt 0x563d991e6948 <col:12>
| |-CXXConstructorDecl 0x563d991e40c8 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x563d991e40c8
| | `-ParmVarDecl 0x563d991e41d8 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x563d991e9730 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x563d991f5148 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x563d991f5258 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x563d991f5770 <col:12>
| |   |-BinaryOperator 0x563d991f5588 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x563d991f5540 <col:12> 'const char *' lvalue ->data 0x563d991ddc80
| |   | | `-CXXThisExpr 0x563d991f5530 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x563d991f5570 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x563d991f5500 <col:12> 'const char *const' lvalue .data 0x563d991ddc80
| |   |     `-DeclRefExpr 0x563d991f54e0 <col:12> 'const String::rep_t' lvalue ParmVar 0x563d991f5258 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x563d991f5650 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x563d991f5608 <col:12> 'int' lvalue ->length 0x563d991ddce8
| |   | | `-CXXThisExpr 0x563d991f55f8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x563d991f5638 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x563d991f55c8 <col:12> 'const int' lvalue .length 0x563d991ddce8
| |   |     `-DeclRefExpr 0x563d991f55a8 <col:12> 'const String::rep_t' lvalue ParmVar 0x563d991f5258 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x563d991f5718 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x563d991f56d0 <col:12> 'String::memo_t *' lvalue ->memo 0x563d991ddd78
| |   | | `-CXXThisExpr 0x563d991f56c0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x563d991f5700 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x563d991f5690 <col:12> 'String::memo_t *const' lvalue .memo 0x563d991ddd78
| |   |     `-DeclRefExpr 0x563d991f5670 <col:12> 'const String::rep_t' lvalue ParmVar 0x563d991f5258 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x563d991f5760 <col:12>
| |     `-UnaryOperator 0x563d991f5748 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x563d991f5738 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x563d991f52c8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x563d991f52c8
|   `-ParmVarDecl 0x563d991f53d8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x563d991dddf0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x563d991de038 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x563d991dde58 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x563d991dded8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x563d991ddf50 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x563d991e3dd0 <col:79, line:261:5>
|   |-BinaryOperator 0x563d991e3a48 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x563d991e39e0 <col:2, col:5> 'const char *' lvalue .data 0x563d991ddc80
|   | | `-MemberExpr 0x563d991e39b0 <col:2> 'String::rep_t' lvalue ->_r 0x563d991dddf0
|   | |   `-CXXThisExpr 0x563d991e39a0 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x563d991e3a30 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x563d991e3a10 <col:12> 'const char *' lvalue ParmVar 0x563d991dde58 'data' 'const char *'
|   |-BinaryOperator 0x563d991e3b10 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x563d991e3aa8 <col:2, col:5> 'int' lvalue .length 0x563d991ddce8
|   | | `-MemberExpr 0x563d991e3a78 <col:2> 'String::rep_t' lvalue ->_r 0x563d991dddf0
|   | |   `-CXXThisExpr 0x563d991e3a68 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x563d991e3af8 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563d991e3ad8 <col:14> 'int' lvalue ParmVar 0x563d991dded8 'length' 'int'
|   `-IfStmt 0x563d991e3db8 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x563d991e3c30 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x563d991e3c18 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x563d991e3bf8 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x563d991e3bd8 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x563d991e3b70 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x563d991ddd78
|     |       | `-MemberExpr 0x563d991e3b40 <col:7> 'String::rep_t' lvalue ->_r 0x563d991dddf0
|     |       |   `-CXXThisExpr 0x563d991e3b30 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x563d991e3bc0 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x563d991e3ba0 <col:17> 'String::memo_t *' lvalue ParmVar 0x563d991ddf50 'memo' 'String::memo_t *'
|     `-CallExpr 0x563d991e3d90 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x563d991e3d78 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x563d991e3c80 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x563d991cca68 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x563d991e3ce8 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x563d991dd648
|         `-ImplicitCastExpr 0x563d991e3cd0 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x563d991e3cb0 <col:27> 'String::memo_t *' lvalue ParmVar 0x563d991ddf50 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x563d991de2e8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x563d991de108 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x563d991de188 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x563d991de200 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x563d991dddf0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x563d991e4258 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x563d991e43e8 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x563d991e4350 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x563d991e42c0 <col:2> '<bound member function type>' ->assign_memo 0x563d991de038
|     | `-ImplicitCastExpr 0x563d991e4388 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x563d991e42b0 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x563d991e43a0 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x563d991e42f0 <col:14> 'const char *' lvalue ParmVar 0x563d991de108 'data' 'const char *'
|     |-ImplicitCastExpr 0x563d991e43b8 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x563d991e4310 <col:20> 'int' lvalue ParmVar 0x563d991de188 'length' 'int'
|     `-ImplicitCastExpr 0x563d991e43d0 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x563d991e4330 <col:28> 'String::memo_t *' lvalue ParmVar 0x563d991de200 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x563d991de478 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x563d991de3b8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x563d991e4640 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x563d991e45c0 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x563d991e4410 <col:2> '<bound member function type>' ->assign_memo 0x563d991de038
|     | `-CXXThisExpr 0x563d991e4400 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x563d991e45f8 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x563d991e4490 <col:14, col:19> 'const char *' lvalue .data 0x563d991ddc80
|     |   `-MemberExpr 0x563d991e4460 <col:14, col:16> 'String::rep_t' lvalue ._r 0x563d991dddf0
|     |     `-DeclRefExpr 0x563d991e4440 <col:14> 'const String' lvalue ParmVar 0x563d991de3b8 'x' 'const String &'
|     |-ImplicitCastExpr 0x563d991e4610 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x563d991e4510 <col:25, col:30> 'int' lvalue .length 0x563d991ddce8
|     |   `-MemberExpr 0x563d991e44e0 <col:25, col:27> 'String::rep_t' lvalue ._r 0x563d991dddf0
|     |     `-DeclRefExpr 0x563d991e44c0 <col:25> 'const String' lvalue ParmVar 0x563d991de3b8 'x' 'const String &'
|     `-ImplicitCastExpr 0x563d991e4628 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x563d991e4590 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x563d991ddd78
|         `-MemberExpr 0x563d991e4560 <col:38, col:40> 'String::rep_t' lvalue ._r 0x563d991dddf0
|           `-DeclRefExpr 0x563d991e4540 <col:38> 'const String' lvalue ParmVar 0x563d991de3b8 'x' 'const String &'
|-CXXMethodDecl 0x563d991de540 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x563d991e5000 <col:31, line:278:5>
|   `-IfStmt 0x563d991e4fe8 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x563d991e46e0 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x563d991e46c8 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x563d991e4698 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x563d991ddd78
|     |     `-MemberExpr 0x563d991e4668 <col:6> 'String::rep_t' lvalue ->_r 0x563d991dddf0
|     |       `-CXXThisExpr 0x563d991e4658 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x563d991e4fc0 <col:15, line:277:2>
|       |-ParenExpr 0x563d991e4b90 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x563d991e4b60 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x563d991e47f0 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x563d991e47d8 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x563d991e47c0 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x563d991e4780 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x563d991dd648
|       |   |       `-ImplicitCastExpr 0x563d991e4768 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x563d991e4738 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x563d991ddd78
|       |   |           `-MemberExpr 0x563d991e4708 <col:27> 'String::rep_t' lvalue ->_r 0x563d991dddf0
|       |   |             `-CXXThisExpr 0x563d991e46f8 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x563d991e4850 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x563d991e4830 <col:54> 'int' 0
|       |   `-CallExpr 0x563d991e4ac0 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x563d991e4aa8 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x563d991e4a28 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563d98f43cc0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x563d991e4b00 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x563d991e4938 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x563d991e4b18 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x563d991e4968 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x563d991e4b30 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x563d991e49a0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x563d991e4b48 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x563d991e4a10 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x563d991e49f8 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x563d991e49c0 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x563d991e4ee0 <line:274:6, line:275:22>
|       | |-CallExpr 0x563d991e4da0 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x563d991e4d88 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x563d991e4d00 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x563d991cdeb0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x563d991e4cd0 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x563d991dd648
|       | |   `-ImplicitCastExpr 0x563d991e4cb8 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x563d991e4c88 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x563d991ddd78
|       | |       `-MemberExpr 0x563d991e4c58 <col:40> 'String::rep_t' lvalue ->_r 0x563d991dddf0
|       | |         `-CXXThisExpr 0x563d991e4c48 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x563d991e4ea0 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x563d991e4e88 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x563d991e4dc8 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x563d991e2d20 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x563d991e4ec8 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x563d991e4e28 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x563d991ddd78
|       |       `-MemberExpr 0x563d991e4df8 <col:15> 'String::rep_t' lvalue ->_r 0x563d991dddf0
|       |         `-CXXThisExpr 0x563d991e4de8 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x563d991e4fa0 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x563d991e4f38 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x563d991ddd78
|         | `-MemberExpr 0x563d991e4f08 <col:6> 'String::rep_t' lvalue ->_r 0x563d991dddf0
|         |   `-CXXThisExpr 0x563d991e4ef8 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x563d991e4f88 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x563d991e4f68 <col:16> 'int' 0
|-CXXMethodDecl 0x563d991de7d8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x563d991de5f8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x563d991de678 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x563d991de6f0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x563d991de8b0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x563d991deb00 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x563d991de968 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x563d991de9e8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x563d991dea60 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x563d991dece8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x563d991debd0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x563d991dec50 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x563d991dede8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x563d991e50d8 <col:41, line:286:5>
|   `-ReturnStmt 0x563d991e50c8 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x563d991e5098 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x563d991e5060 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x563d991e5048 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x563d991e5028 <col:46> 'int' 1
|-CXXMethodDecl 0x563d991df088 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x563d991deea0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x563d991def20 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x563d991defa0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x563d991e2d20 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x563d991df150 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x563d991e2df0 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x563d991e2fc0 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x563d991e2ea8 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x563d991e2f28 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x563d991e3080 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x563d991e3148 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x563d991e3248 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x563d991e32c0 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x563d991e3338 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x563d991e33a0 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x563d991e34a0 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x563d991e34f0 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563d991e3480 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x563d991e3460 <col:22> 'int' 14
|-CXXMethodDecl 0x563d991e3708 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x563d991e3520 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x563d991e35a0 <col:38> col:41 'int'
| `-ParmVarDecl 0x563d991e3620 <col:43> col:46 'int'
|-FriendDecl 0x563d991e3810 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x563d991e38a0 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563d99497e40 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x563d99498018 prev 0x563d99497e40 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x563d994980a8 <col:46, col:52> col:46 public
|-TypedefDecl 0x563d994980d0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563d98ea7370 'int'
|-TypedefDecl 0x563d99499a30 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x563d994999e0 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x563d994999c0 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x563d994982e8 'type'
|     `-SubstTemplateTypeParmType 0x563d994982b0 'String' sugar
|       |-TemplateTypeParmType 0x563d991982a0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563d99198250 'T'
|       `-RecordType 0x563d991d4a90 'String'
|         `-CXXRecord 0x563d991d4a00 'String'
|-TypedefDecl 0x563d99499ae8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x563d99499ab0 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x563d99499a90 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x563d99499a30 'type'
|     `-ElaboratedType 0x563d994999e0 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x563d994999c0 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x563d994982e8 'type'
|         `-SubstTemplateTypeParmType 0x563d994982b0 'String' sugar
|           |-TemplateTypeParmType 0x563d991982a0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x563d99198250 'T'
|           `-RecordType 0x563d991d4a90 'String'
|             `-CXXRecord 0x563d991d4a00 'String'
|-CXXMethodDecl 0x563d99499c68 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x563d99499b78 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x563d99499d58 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x563d99499e38 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x563d9949a108 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x563d9949a010 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x563d9949a348 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x563d9949a1c0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563d9949a238 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x563d9949a518 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x563d9949a408 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563d9949a480 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x563d9949a678 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x563d9949a748 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x563d9949a998 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x563d9949a808 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x563d9949a880 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x563d9949abf8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x563d9949aa68 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x563d9949aae0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x563d9949adb8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x563d9949acc8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x563d9949af78 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x563d9949ae80 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x563d9949b030 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563d9949b0e0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x563d9949b318 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x563d9949b190 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563d9949b208 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x563d9949b5b8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x563d9949b4c0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x563d9949b690 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x563d9949b6e0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x563d9949b730 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.1 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563d9940c230 <../dummy_inc/click/ipaddress.hh:13:1, col:29> ../dummy_inc/click/vector.hh:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x563d99496ae8 prev 0x563d9940c230 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x563d99497db0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x563d99497d60 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x563d99497d40 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x563d99497bf0 'type'
|     `-SubstTemplateTypeParmType 0x563d99497a80 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x563d9916e050 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x563d9916dff8 'F'
|       `-RecordType 0x563d994976e0 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x563d99497600 'typed_array_memory'
|-FieldDecl 0x563d9949b780 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x563d9949b7d0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x563d9949b808 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x563d99496b80 'String' sugar
|   |-TemplateTypeParmType 0x563d991a55c0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563d991a5568 'T'
|   `-RecordType 0x563d991d4a90 'String'
|     `-CXXRecord 0x563d991d4a00 'String'
|-TypedefDecl 0x563d9949b898 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x563d9949b860 'String &'
|   `-SubstTemplateTypeParmType 0x563d99496b80 'String' sugar
|     |-TemplateTypeParmType 0x563d991a55c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563d991a5568 'T'
|     `-RecordType 0x563d991d4a90 'String'
|       `-CXXRecord 0x563d991d4a00 'String'
|-TypedefDecl 0x563d9949b928 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x563d9949b8f0 'const String &'
|   `-QualType 0x563d99496b81 'const String' const
|     `-SubstTemplateTypeParmType 0x563d99496b80 'String' sugar
|       |-TemplateTypeParmType 0x563d991a55c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563d991a5568 'T'
|       `-RecordType 0x563d991d4a90 'String'
|         `-CXXRecord 0x563d991d4a00 'String'
|-TypedefDecl 0x563d9949b9b8 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x563d9949b980 'String *'
|   `-SubstTemplateTypeParmType 0x563d99496b80 'String' sugar
|     |-TemplateTypeParmType 0x563d991a55c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563d991a5568 'T'
|     `-RecordType 0x563d991d4a90 'String'
|       `-CXXRecord 0x563d991d4a00 'String'
|-TypedefDecl 0x563d9949ba48 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x563d9949ba10 'const String *'
|   `-QualType 0x563d99496b81 'const String' const
|     `-SubstTemplateTypeParmType 0x563d99496b80 'String' sugar
|       |-TemplateTypeParmType 0x563d991a55c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563d991a5568 'T'
|       `-RecordType 0x563d991d4a90 'String'
|         `-CXXRecord 0x563d991d4a00 'String'
|-TypedefDecl 0x563d9949c6a0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x563d9949c650 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x563d9949c630 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x563d9949c568 'type'
|     `-LValueReferenceType 0x563d9949c530 'const String &'
|       `-QualType 0x563d9949c2d1 'const String' const
|         `-SubstTemplateTypeParmType 0x563d9949c2d0 'String' sugar
|           |-TemplateTypeParmType 0x563d99177fa0 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x563d99177f48 'T'
|           `-RecordType 0x563d991d4a90 'String'
|             `-CXXRecord 0x563d991d4a00 'String'
|-TypedefDecl 0x563d9949c708 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x563d9949b8f0 'const String &'
|   `-QualType 0x563d99496b81 'const String' const
|     `-SubstTemplateTypeParmType 0x563d99496b80 'String' sugar
|       |-TemplateTypeParmType 0x563d991a55c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563d991a5568 'T'
|       `-RecordType 0x563d991d4a90 'String'
|         `-CXXRecord 0x563d991d4a00 'String'
|-TypedefDecl 0x563d9949c760 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563d98ea7370 'int'
|-TypedefDecl 0x563d9949c7c8 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x563d9949b980 'String *'
|   `-SubstTemplateTypeParmType 0x563d99496b80 'String' sugar
|     |-TemplateTypeParmType 0x563d991a55c0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563d991a5568 'T'
|     `-RecordType 0x563d991d4a90 'String'
|       `-CXXRecord 0x563d991d4a00 'String'
|-TypedefDecl 0x563d9949c830 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x563d9949ba10 'const String *'
|   `-QualType 0x563d99496b81 'const String' const
|     `-SubstTemplateTypeParmType 0x563d99496b80 'String' sugar
|       |-TemplateTypeParmType 0x563d991a55c0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563d991a5568 'T'
|       `-RecordType 0x563d991d4a90 'String'
|         `-CXXRecord 0x563d991d4a00 'String'
|-EnumDecl 0x563d9949c888 <line:134:5> col:5
| `-EnumConstantDecl 0x563d9949c980 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x563d9949c960 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x563d991a6c48 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x563d991a6c20 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x563d991a6c00 <col:40> 'int' 1
|-CXXConstructorDecl 0x563d9949ca08 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x563d9949cc98 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x563d9949cac0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563d9949cb60 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x563d9949cf28 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x563d9949ce10 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x563d9949d1e8 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x563d9949d0d0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x563d9949d500 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x563d9949d3e0 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x563d9949d810 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x563d9949d6f0 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x563d9949db00 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x563d9949d948 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563d9949d9c0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x563d9949dc28 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x563d9949dcd8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563d9949dd30 <col:30> Inherited
|-CXXMethodDecl 0x563d9949dd78 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x563d9949de28 <col:20> Inherited
| `-OptimizeNoneAttr 0x563d9949de80 <col:30> Inherited
|-CXXMethodDecl 0x563d9949df48 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x563d9949dff8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563d9949e050 <col:30> Inherited
|-CXXMethodDecl 0x563d9949e098 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x563d9949e148 <col:20> Inherited
| `-OptimizeNoneAttr 0x563d9949e1a0 <col:30> Inherited
|-CXXMethodDecl 0x563d9949e1e8 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x563d9949e298 <col:20> Inherited
| `-OptimizeNoneAttr 0x563d9949e2f0 <col:30> Inherited
|-CXXMethodDecl 0x563d9949e338 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x563d9949e3e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563d9949e440 <col:30> Inherited
|-CXXMethodDecl 0x563d9949e468 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563d9949e518 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563d9949e5c8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x563d9949e788 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x563d9949e678 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563d9949e6f0 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x563d9949e8d8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x563d9949e848 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x563d9949ea88 <line:163:5, col:65> col:43 used operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x563d9949e990 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563d9949eb40 <col:20>
| `-OptimizeNoneAttr 0x563d9949eb98 <col:30>
|-CXXMethodDecl 0x563d9949ecb8 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x563d9949ebc0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563d9949ed70 <col:20>
| `-OptimizeNoneAttr 0x563d9949edc8 <col:30>
|-CXXMethodDecl 0x563d9949ee80 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x563d9949edf0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563d9949efc8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563d9949ef38 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563d9949f0f8 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x563d9949f1f8 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x563d9949f2c8 <line:169:5, col:20> col:15 used back 'String &()' inline
|-CXXMethodDecl 0x563d9949f398 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x563d9949f4d8 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x563d9949f448 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563d9949f620 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563d9949f590 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563d9949f768 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x563d9949f6d8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563d9949f820 <col:48> Inherited "" ""
|-CXXMethodDecl 0x563d9949f920 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x563d9949f890 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563d9949f9d8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x563d9949fa98 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x563d9949fb98 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x563d9949fd18 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x563d9949fc58 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x563d994a04a8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x563d9949fdd0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x563d994a0408 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x563d994a0308 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x563d994a0588 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563d994a06d8 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x563d994a0648 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x563d994a0790 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x563d994a09d8 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x563d994a0850 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x563d994a08c8 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x563d994a0b68 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x563d994a0aa8 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x563d994a0d78 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x563d994a0c30 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x563d994a0ca8 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x563d994a0e38 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x563d994a1098 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x563d994a0fa0 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x563d994a1168 <../dummy_inc/click/ipaddress.hh:13:29> col:29 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x563d99528520 <col:29>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  NonVirtualBaseLLVMType:%class.Vector.0 = type { %class.vector_memory.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563d995163e8 prev 0x563d994abd18 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563d995164e0 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x563d99516570 <col:22, col:28> col:22 public
|-EnumDecl 0x563d99516598 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x563d995166b8 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x563d99516698 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x563d99516680 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x563d99516660 <col:14> 'int' 999
| |-EnumConstantDecl 0x563d99516760 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x563d99516740 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x563d99516728 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x563d99516708 <col:14> 'int' 1
| |-EnumConstantDecl 0x563d995167f0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x563d995167d0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x563d995167b0 <col:17> 'int' 0
| |-EnumConstantDecl 0x563d99516880 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x563d99516860 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x563d99516840 <col:13> 'int' 1
| |-EnumConstantDecl 0x563d99516910 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x563d995168f0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x563d995168d0 <col:16> 'int' 2
| |-EnumConstantDecl 0x563d995169a0 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x563d99516980 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x563d99516960 <col:13> 'int' 3
| |-EnumConstantDecl 0x563d99516a30 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x563d99516a10 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x563d995169f0 <col:15> 'int' 4
| |-EnumConstantDecl 0x563d99516ac0 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x563d99516aa0 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x563d99516a80 <col:14> 'int' 5
| |-EnumConstantDecl 0x563d99516b50 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x563d99516b30 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x563d99516b10 <col:12> 'int' 6
| `-EnumConstantDecl 0x563d99516be0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x563d99516bc0 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x563d99516ba0 <col:13> 'int' 7
|-VarDecl 0x563d99516c50 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x563d99516cd8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x563d99516d60 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x563d99516de8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x563d99516e70 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x563d99516ef8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x563d99516f80 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x563d99517008 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x563d99517090 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x563d99517118 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x563d995171a0 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x563d995172a0 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x563d9951c588 '_nerrors' 'int'
| | `-IntegerLiteral 0x563d9951cd18 <line:128:13> 'int' 0
| `-CompoundStmt 0x563d9951cd88 <col:16, line:129:5>
|-CXXDestructorDecl 0x563d99517390 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x563d9951cd98 <col:29, line:132:5>
|-CXXMethodDecl 0x563d99517548 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x563d99517480 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563d99517610 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x563d995176f8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x563d9951ce18 <col:44, line:161:5>
|   `-ReturnStmt 0x563d9951ce08 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x563d9951cdf0 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x563d9951cdd0 <col:9> 'ErrorHandler *' lvalue Var 0x563d9951c5e8 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x563d99517838 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x563d995177a8 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563d99517900 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x563d9951ce78 <col:43, line:173:5>
|   `-ReturnStmt 0x563d9951ce68 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x563d9951ce50 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x563d9951ce30 <col:9> 'ErrorHandler *' lvalue Var 0x563d9951c660 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x563d995179b8 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x563d99517a38 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x563d99517b48 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x563d99517ab8 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x563d99517c98 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x563d99517c08 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x563d99517df0 <line:193:5, col:37> col:9 used warning 'int (const char *, ...)'
| `-ParmVarDecl 0x563d99517d58 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x563d99517f48 <line:196:5, col:35> col:9 used error 'int (const char *, ...)'
| `-ParmVarDecl 0x563d99517eb0 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x563d995180a0 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x563d99518008 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x563d995182b0 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x563d99518158 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x563d995181d8 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x563d99518488 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x563d99518370 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x563d995183f0 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x563d995186a8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x563d99518548 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x563d995185c8 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x563d99518888 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x563d99518768 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x563d995187e8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x563d99518a68 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x563d99518948 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x563d995189c8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x563d99518bf0 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x563d99518b28 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x563d99518dc0 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x563d99518ca8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x563d99518d20 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x563d9951d0d8 <col:57, line:234:5>
|   `-ReturnStmt 0x563d9951d0c8 <line:233:2, col:41>
|     `-ExprWithCleanups 0x563d9951d0b0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x563d9951d058 <col:9, col:41> 'int'
|         |-MemberExpr 0x563d9951d028 <col:9> '<bound member function type>' ->xmessage 0x563d99518bf0
|         | `-CXXThisExpr 0x563d9951d018 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x563d9951d098 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x563d9951d080 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x563d9951cff8 <col:18, col:40> 'String' (CXXTemporary 0x563d9951cff8)
|               `-CallExpr 0x563d9951cfc0 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x563d9951cfa8 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x563d9951cf18 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x563d9951adb8 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x563d9951cf38 <col:31> 'const String' lvalue ParmVar 0x563d99518d20 'str' 'const String &'
|                 `-DeclRefExpr 0x563d9951cf58 <col:36> 'const String' lvalue ParmVar 0x563d99518ca8 'anno' 'const String &'
|-CXXMethodDecl 0x563d995190a0 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x563d99518e80 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x563d99518f00 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x563d99518f78 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x563d9951d368 <col:68, line:243:5>
|   `-ReturnStmt 0x563d9951d358 <line:242:2, col:41>
|     `-ExprWithCleanups 0x563d9951d340 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x563d9951d2e0 <col:9, col:41> 'int'
|         |-MemberExpr 0x563d9951d2b0 <col:9> '<bound member function type>' ->xmessage 0x563d99518dc0
|         | `-CXXThisExpr 0x563d9951d2a0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x563d9951d178 <col:18> 'const String' lvalue ParmVar 0x563d99518e80 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x563d9951d328 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x563d9951d310 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x563d9951d280 <col:24, col:40> 'String' (CXXTemporary 0x563d9951d280)
|               `-CXXMemberCallExpr 0x563d9951d218 <col:24, col:40> 'String'
|                 |-MemberExpr 0x563d9951d1a8 <col:24> '<bound member function type>' ->vformat 0x563d9951a280
|                 | `-CXXThisExpr 0x563d9951d198 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x563d9951d248 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x563d9951d1d8 <col:32> 'const char *' lvalue ParmVar 0x563d99518f00 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x563d9951d260 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x563d9951d1f8 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x563d99518f78 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x563d99519340 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x563d99519168 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x563d995191e0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x563d99519258 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x563d9951d6a8 <col:23, line:254:5>
|   `-ReturnStmt 0x563d9951d698 <line:253:2, col:71>
|     `-ExprWithCleanups 0x563d9951d680 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x563d9951d620 <col:9, col:71> 'int'
|         |-MemberExpr 0x563d9951d5f0 <col:9> '<bound member function type>' ->xmessage 0x563d99518dc0
|         | `-CXXThisExpr 0x563d9951d5e0 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x563d9951d668 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x563d9951d650 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x563d9951d5a0 <col:18, col:65> 'String' (CXXTemporary 0x563d9951d5a0)
|         |     `-CallExpr 0x563d9951d538 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x563d9951d520 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x563d9951d408 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x563d9951adb8 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x563d9951d428 <col:31> 'const String' lvalue ParmVar 0x563d995191e0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x563d9951d580 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x563d9951d568 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x563d9951d500 <col:37, col:64> 'String' (CXXTemporary 0x563d9951d500)
|         |             `-CallExpr 0x563d9951d4d0 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x563d9951d4b8 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x563d9951d448 <col:37> 'String (const String &)' lvalue CXXMethod 0x563d9951b408 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x563d9951d468 <col:56> 'const String' lvalue ParmVar 0x563d99519168 'landmark' 'const String &'
|         `-DeclRefExpr 0x563d9951d5c0 <col:68> 'const String' lvalue ParmVar 0x563d99519258 'str' 'const String &'
|-CXXMethodDecl 0x563d995196c0 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x563d99519408 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x563d99519480 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x563d99519500 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x563d99519578 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x563d9951d960 <col:34, line:267:5>
|   `-ReturnStmt 0x563d9951d950 <line:266:2, col:51>
|     `-ExprWithCleanups 0x563d9951d938 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x563d9951d8d0 <col:9, col:51> 'int'
|         |-MemberExpr 0x563d9951d8a0 <col:9> '<bound member function type>' ->xmessage 0x563d99519340
|         | `-CXXThisExpr 0x563d9951d890 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x563d9951d748 <col:18> 'const String' lvalue ParmVar 0x563d99519408 'landmark' 'const String &'
|         |-DeclRefExpr 0x563d9951d768 <col:28> 'const String' lvalue ParmVar 0x563d99519480 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x563d9951d920 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x563d9951d908 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x563d9951d870 <col:34, col:50> 'String' (CXXTemporary 0x563d9951d870)
|               `-CXXMemberCallExpr 0x563d9951d808 <col:34, col:50> 'String'
|                 |-MemberExpr 0x563d9951d798 <col:34> '<bound member function type>' ->vformat 0x563d9951a280
|                 | `-CXXThisExpr 0x563d9951d788 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x563d9951d838 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x563d9951d7c8 <col:42> 'const char *' lvalue ParmVar 0x563d99519500 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x563d9951d850 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x563d9951d7e8 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x563d99519578 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x563d995197d0 <line:286:5, line:288:5> line:286:9 used nerrors 'int () const'
| `-CompoundStmt 0x563d9951d9e0 <col:25, line:288:5>
|   `-ReturnStmt 0x563d9951d9d0 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x563d9951d9b8 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x563d9951d988 <col:9> 'const int' lvalue ->_nerrors 0x563d9951c588
|         `-CXXThisExpr 0x563d9951d978 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x563d995199e0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x563d99519888 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x563d99519908 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x563d99519cc8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x563d99519aa8 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x563d99519b28 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x563d99519ba0 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x563d99519e60 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x563d99519d98 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x563d9951a0a8 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x563d99519f20 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x563d99519f98 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x563d9951dc40 <col:58, line:357:5>
|   `-ReturnStmt 0x563d9951dc30 <line:356:2, col:29>
|     `-ExprWithCleanups 0x563d9951dc18 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x563d9951dbe8 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x563d9951dbd0 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x563d9951dbb0 <col:9, col:29> 'String' (CXXTemporary 0x563d9951dbb0)
|             `-CallExpr 0x563d9951db40 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x563d9951db28 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x563d9951daa8 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x563d99519cc8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x563d9951da48 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x563d9951db78 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x563d9951da68 <col:21> 'const char *' lvalue ParmVar 0x563d99519f20 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x563d9951db90 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x563d9951da88 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x563d99519f98 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x563d9951a280 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x563d9951a170 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x563d9951a1e8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x563d9951a3d8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x563d9951a348 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x563d9951a520 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x563d9951a490 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x563d9951a7c0 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x563d9951a5d8 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x563d9951a658 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x563d9951a6d0 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x563d9951a920 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x563d9951a890 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x563d9951dd58 <col:37, line:441:5>
|   `-IfStmt 0x563d9951dd40 <line:439:2, line:440:8>
|     |-BinaryOperator 0x563d9951dcc8 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x563d9951dc98 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x563d9951dc58 <col:6> 'int' lvalue ParmVar 0x563d9951a890 'level' 'int'
|     | `-ImplicitCastExpr 0x563d9951dcb0 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x563d9951dc78 <col:15> 'ErrorHandler::Level' EnumConstant 0x563d995169a0 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x563d9951dd28 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x563d9951dcf8 <col:8> 'int' lvalue ->_nerrors 0x563d9951c588
|         `-CXXThisExpr 0x563d9951dce8 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x563d9951a9e8 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x563d9951ddf0 <col:26, line:448:5>
|   `-BinaryOperator 0x563d9951ddd0 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x563d9951dd80 <col:2> 'int' lvalue ->_nerrors 0x563d9951c588
|     | `-CXXThisExpr 0x563d9951dd70 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x563d9951ddb0 <col:13> 'int' 0
|-CXXMethodDecl 0x563d9951abb0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x563d9951aaa0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x563d9951ab18 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x563d9951adb8 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x563d9951ac70 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x563d9951ace8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x563d9951b068 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x563d9951ae78 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x563d9951aef8 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x563d9951af78 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x563d9951b120 <col:59> 0 0
|-CXXMethodDecl 0x563d9951b2b8 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x563d9951b198 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x563d9951b218 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x563d9951e460 <col:70, line:534:5>
|   |-DeclStmt 0x563d9951df60 <line:528:2, col:20>
|   | |-VarDecl 0x563d9951de18 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x563d9951de80 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x563d9951deb8 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x563d9951df20 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x563d9951e030 <line:529:2, col:23>
|   | `-VarDecl 0x563d9951df90 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x563d9951e018 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x563d9951dff8 <col:18> 'const char *' lvalue ParmVar 0x563d9951b198 'begin' 'const char *'
|   |-DoStmt 0x563d9951e3f8 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x563d9951e328 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x563d9951e310 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x563d9951e2f0 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x563d9951e048 <col:6> 'const char *' lvalue Var 0x563d9951df90 'x' 'const char *'
|   | |     `-CallExpr 0x563d9951e240 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x563d9951e228 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x563d9951e1e0 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x563d9951ca60 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x563d9951e2a8 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x563d9951e290 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x563d9951e100 <col:20, col:27> 'String' (CXXTemporary 0x563d9951e100)
|   | |       |     `-CXXTemporaryObjectExpr 0x563d9951e0c8 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x563d9951e2c0 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x563d9951e120 <col:30> 'const char *' lvalue Var 0x563d9951df90 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x563d9951e2d8 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x563d9951e140 <col:33> 'const char *' lvalue ParmVar 0x563d9951b218 'end' 'const char *'
|   | |       |-UnaryOperator 0x563d9951e180 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x563d9951e160 <col:39> 'String' lvalue Var 0x563d9951de18 'name' 'String'
|   | |       |-UnaryOperator 0x563d9951e1b8 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x563d9951e198 <col:46> 'String' lvalue Var 0x563d9951deb8 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x563d9951e1d0 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x563d9951e3e0 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x563d9951e3c8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x563d9951e3a8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x563d9951e378 <col:11> '<bound member function type>' .operator int (String::*)() const 0x563d991d81f8
|   |         `-ImplicitCastExpr 0x563d9951e360 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x563d9951e340 <col:11> 'String' lvalue Var 0x563d9951de18 'name' 'String'
|   `-ReturnStmt 0x563d9951e450 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x563d9951e438 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x563d9951e418 <col:9> 'const char *' lvalue Var 0x563d9951df90 'x' 'const char *'
|-CXXMethodDecl 0x563d9951b408 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x563d9951b378 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x563d9951ea68 <col:55, line:550:5>
|   `-IfStmt 0x563d9951ea40 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x563d9951e6a0 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x563d9951e688 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x563d9951e670 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x563d9951e650 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x563d9951e620 <col:6> '<bound member function type>' .operator int (String::*)() const 0x563d991d81f8
|     | |       `-DeclRefExpr 0x563d9951e4c0 <col:6> 'const String' lvalue ParmVar 0x563d9951b378 'x' 'const String &'
|     | `-BinaryOperator 0x563d9951e600 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x563d9951e5d0 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x563d9951e580 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x563d9951e568 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x563d9951e520 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x563d991f1a30 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x563d9951e4e0 <col:11> 'const String' lvalue ParmVar 0x563d9951b378 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x563d9951e500 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x563d9951e5e8 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x563d9951e5b8 <col:19> 'char' 123
|     |-ReturnStmt 0x563d9951e710 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x563d9951e6e0 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x563d9951e6c0 <col:13> 'const String' lvalue ParmVar 0x563d9951b378 'x' 'const String &'
|     `-IfStmt 0x563d9951ea18 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x563d9951e7a8 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x563d9951e790 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x563d9951e770 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x563d9951e740 <col:11> '<bound member function type>' .operator int (String::*)() const 0x563d991d81f8
|       |       `-DeclRefExpr 0x563d9951e720 <col:11> 'const String' lvalue ParmVar 0x563d9951b378 'x' 'const String &'
|       |-ReturnStmt 0x563d9951e930 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x563d9951e918 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x563d9951e8e8 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x563d9951e8d0 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x563d9951e8b0 <col:13, col:29> 'String' (CXXTemporary 0x563d9951e8b0)
|       |         `-CallExpr 0x563d9951e860 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x563d9951e848 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x563d9951e7c0 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x563d9951abb0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x563d9951e890 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x563d9951e7e0 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x563d9951e800 <col:28> 'const String' lvalue ParmVar 0x563d9951b378 'x' 'const String &'
|       `-ReturnStmt 0x563d9951ea08 <line:549:6, col:20>
|         `-ExprWithCleanups 0x563d9951e9f0 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x563d9951e9c0 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x563d9951e9a8 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x563d9951e988 <col:13, col:20> 'String' (CXXTemporary 0x563d9951e988)
|                 `-CXXTemporaryObjectExpr 0x563d9951e950 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x563d9951b5d0 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x563d9951b4c0 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x563d9951b538 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563d9951cd08 <col:71> 'bool' false
|-CXXRecordDecl 0x563d9951b680 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x563d9951b978 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x563d9951b910 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x563d9951b8b0 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x563d9951b870 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x563d991d4a90 'String'
|       | `-CXXRecord 0x563d991d4a00 'String'
|       |-BuiltinType 0x563d98ea7370 'int'
|       `-DecayedType 0x563d994acd60 '__va_list_tag *' sugar
|         |-TypedefType 0x563d994acd30 'va_list' sugar
|         | |-Typedef 0x563d990c5b40 'va_list'
|         | `-TypedefType 0x563d990c5af0 '__gnuc_va_list' sugar
|         |   |-Typedef 0x563d98ffd718 '__gnuc_va_list'
|         |   `-TypedefType 0x563d98ffd680 '__builtin_va_list' sugar
|         |     |-Typedef 0x563d98ee8bd8 '__builtin_va_list'
|         |     `-ConstantArrayType 0x563d98ee8b80 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x563d98ea80c0 '__va_list_tag'
|         |         `-CXXRecord 0x563d98ea8028 '__va_list_tag'
|         `-PointerType 0x563d990cb3e0 '__va_list_tag *'
|           `-RecordType 0x563d98ea80c0 '__va_list_tag'
|             `-CXXRecord 0x563d98ea8028 '__va_list_tag'
|-EnumDecl 0x563d9951b9d0 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x563d9951bad0 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563d9951c030 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d9951bab0 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x563d9951ba90 <col:16> 'int' 1
| |-EnumConstantDecl 0x563d9951bb60 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563d9951c048 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d9951bb40 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x563d9951bb20 <col:21> 'int' 2
| |-EnumConstantDecl 0x563d9951bbf0 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563d9951c060 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d9951bbd0 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x563d9951bbb0 <col:22> 'int' 4
| |-EnumConstantDecl 0x563d9951bc80 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563d9951c078 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d9951bc60 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x563d9951bc40 <col:17> 'int' 8
| |-EnumConstantDecl 0x563d9951bd10 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563d9951c090 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d9951bcf0 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x563d9951bcd0 <col:22> 'int' 16
| |-EnumConstantDecl 0x563d9951bda0 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563d9951c0a8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d9951bd80 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x563d9951bd60 <col:19> 'int' 32
| |-EnumConstantDecl 0x563d9951be30 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563d9951c0c0 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d9951be10 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x563d9951bdf0 <col:17> 'int' 64
| |-EnumConstantDecl 0x563d9951bec0 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563d9951c0d8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d9951bea0 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x563d9951be80 <col:14> 'int' 128
| |-EnumConstantDecl 0x563d9951bf50 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563d9951c0f0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d9951bf30 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x563d9951bf10 <col:16> 'int' 256
| `-EnumConstantDecl 0x563d9951bfe0 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x563d9951c108 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563d9951bfc0 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x563d9951bfa0 <col:12> 'int' 1024
|-CXXMethodDecl 0x563d9951c318 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x563d9951c130 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x563d9951c1d0 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x563d9951c4a0 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x563d9951c3d8 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x563d9951c548 <line:580:3, col:10> col:3 private
|-FieldDecl 0x563d9951c588 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x563d9951c5e8 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x563d9951c660 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x563d9951ca60 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x563d9951c6d8 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x563d9951c758 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x563d9951c7d8 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x563d9951c850 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x563d9951c8c8 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x563d9951c940 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x563d9951cb88 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x563d9951cb88
| `-ParmVarDecl 0x563d9951cc98 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x563d9951edc8 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x563d9951edc8
  `-ParmVarDecl 0x563d9951eed8 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class NumArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class IntArg
         0 |   class NumArg (base) (empty)
         0 |   int base
         4 |   int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563d99500c10 <../dummy_inc/click/args.hh:1013:1, line:1027:1> line:1013:7 referenced class NumArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563d99500d28 <col:1, col:7> col:7 implicit class NumArg
|-AccessSpecDecl 0x563d99500db8 <col:16, col:22> col:16 public
|-EnumDecl 0x563d99500de0 <line:1014:5, line:1026:5> line:1014:5
| |-EnumConstantDecl 0x563d99500ee0 <line:1015:9, col:21> col:9 status_ok 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x563d99501130 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d99500ec0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x563d99500ea0 <col:21> 'int' 0
| |-EnumConstantDecl 0x563d99500f70 <line:1016:9, col:24> col:9 referenced status_inval 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x563d99501148 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d99500f50 <col:24> 'int' Int: 22
| |     `-IntegerLiteral 0x563d99500f30 <col:24> 'int' 22
| |-EnumConstantDecl 0x563d99501000 <line:1017:9, col:24> col:9 referenced status_range 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x563d99501160 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d99500fe0 <col:24> 'int' Int: 34
| |     `-IntegerLiteral 0x563d99500fc0 <col:24> 'int' 34
| |-EnumConstantDecl 0x563d99501090 <line:1019:9, col:25> col:9 status_notsup 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x563d99501178 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d99501070 <col:25> 'int' Int: 95
| |     `-IntegerLiteral 0x563d99501050 <col:25> 'int' 95
| `-EnumConstantDecl 0x563d995010e0 <line:1025:9> col:9 status_unitless 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|-CXXConstructorDecl 0x563d99502af0 <line:1013:7> col:7 implicit used constexpr NumArg 'void () noexcept' inline default trivial
| `-CompoundStmt 0x563d99502f28 <col:7>
|-CXXConstructorDecl 0x563d99502bf8 <col:7> col:7 implicit constexpr NumArg 'void (const NumArg &)' inline default trivial noexcept-unevaluated 0x563d99502bf8
| `-ParmVarDecl 0x563d99502d08 <col:7> col:7 'const NumArg &'
|-CXXConstructorDecl 0x563d99502da8 <col:7> col:7 implicit constexpr NumArg 'void (NumArg &&)' inline default trivial noexcept-unevaluated 0x563d99502da8
| `-ParmVarDecl 0x563d99502eb8 <col:7> col:7 'NumArg &&'
`-CXXDestructorDecl 0x563d99505068 <col:7> col:7 implicit ~NumArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.NumArg = type { i8 }
  NonVirtualBaseLLVMType:%class.NumArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563d995011a8 <../dummy_inc/click/args.hh:1040:1, line:1095:1> line:1040:7 referenced class IntArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x563d99501308 <col:1, col:7> col:7 implicit referenced class IntArg
|-AccessSpecDecl 0x563d99501398 <col:32, col:38> col:32 public
|-TypedefDecl 0x563d995013d0 <line:1042:5, col:22> col:22 referenced limb_type 'uint32_t':'unsigned int'
| `-TypedefType 0x563d98ffd1c0 'uint32_t' sugar
|   |-Typedef 0x563d98f10408 'uint32_t'
|   `-TypedefType 0x563d98ee9440 '__uint32_t' sugar
|     |-Typedef 0x563d98ee9038 '__uint32_t'
|     `-BuiltinType 0x563d98ea7410 'unsigned int'
|-CXXConstructorDecl 0x563d99501518 <line:1044:5, line:1046:5> line:1044:5 used IntArg 'void (int)'
| |-ParmVarDecl 0x563d99501440 <col:12, col:20> col:16 used b 'int' cinit
| | `-IntegerLiteral 0x563d995029f8 <col:20> 'int' 0
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x563d99502f38 <col:5> 'NumArg' 'void () noexcept'
| |-CXXCtorInitializer Field 0x563d995022b0 'base' 'int'
| | `-ImplicitCastExpr 0x563d99502a98 <line:1045:16> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x563d99502a58 <col:16> 'int' lvalue ParmVar 0x563d99501440 'b' 'int'
| `-CompoundStmt 0x563d99502fa8 <col:19, line:1046:5>
|-CXXMethodDecl 0x563d99501a10 <line:1048:5, line:1050:50> line:1048:17 parse 'const char *(const char *, const char *, bool, int, IntArg::limb_type *, int)'
| |-ParmVarDecl 0x563d995015e0 <col:23, col:35> col:35 begin 'const char *'
| |-ParmVarDecl 0x563d99501660 <col:42, col:54> col:54 end 'const char *'
| |-ParmVarDecl 0x563d995016d8 <line:1049:23, col:28> col:28 is_signed 'bool'
| |-ParmVarDecl 0x563d99501758 <col:39, col:43> col:43 size 'int'
| |-ParmVarDecl 0x563d99501818 <line:1050:23, col:34> col:34 value 'IntArg::limb_type *'
| `-ParmVarDecl 0x563d99501898 <col:41, col:45> col:45 nlimb 'int'
|-FunctionTemplateDecl 0x563d99501e68 <line:1052:5, line:1067:5> line:1053:10 parse_saturating
| |-TemplateTypeParmDecl 0x563d99501ae0 <line:1052:14, col:23> col:23 referenced typename depth 0 index 0 V
| `-CXXMethodDecl 0x563d99501dc8 <line:1053:5, line:1067:5> line:1053:10 parse_saturating 'bool (const String &, V &, const ArgContext &)'
|   |-ParmVarDecl 0x563d99501b88 <col:27, col:41> col:41 referenced str 'const String &'
|   |-ParmVarDecl 0x563d99501c28 <col:46, col:49> col:49 referenced result 'V &'
|   |-ParmVarDecl 0x563d99501ca0 <col:57, col:82> col:75 referenced args 'const ArgContext &' cinit
|   | `-DeclRefExpr 0x563d99502a18 <col:82> 'const ArgContext' lvalue Var 0x563d994f6c58 'blank_args' 'const ArgContext'
|   `-CompoundStmt 0x563d99503ee8 <col:94, line:1067:5>
|     |-DeclStmt 0x563d99503138 <line:1054:9, col:64>
|     | `-VarDecl 0x563d99502fc8 <col:9, col:55> col:24 referenced is_signed 'const bool' constexpr cinit
|     |   `-CXXDependentScopeMemberExpr 0x563d995030f0 <col:36, col:55> '<dependent type>' lvalue ->is_signed
|     |-DeclStmt 0x563d99503358 <line:1055:9, col:91>
|     | `-VarDecl 0x563d99503168 <col:9, col:90> col:23 referenced nlimb 'const int' constexpr cinit
|     |   `-CXXFunctionalCastExpr 0x563d99503330 <col:31, col:90> 'int' functional cast to int <Dependent>
|     |     `-BinaryOperator 0x563d99503310 <col:35, col:89> 'unsigned long' '/'
|     |       |-ParenExpr 0x563d995032c0 <col:35, col:69> 'unsigned long'
|     |       | `-BinaryOperator 0x563d995032a0 <col:36, col:68> 'unsigned long' '-'
|     |       |   |-BinaryOperator 0x563d99503248 <col:36, col:64> 'unsigned long' '+'
|     |       |   | |-UnaryExprOrTypeTraitExpr 0x563d995031f8 <col:36, col:44> 'unsigned long' sizeof 'V'
|     |       |   | `-UnaryExprOrTypeTraitExpr 0x563d99503228 <col:48, col:64> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |       |   `-ImplicitCastExpr 0x563d99503288 <col:68> 'unsigned long' <IntegralCast>
|     |       |     `-IntegerLiteral 0x563d99503268 <col:68> 'int' 1
|     |       `-UnaryExprOrTypeTraitExpr 0x563d995032f0 <col:73, col:89> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |-DeclStmt 0x563d995034b8 <line:1056:9, col:27>
|     | `-VarDecl 0x563d99503450 <col:9, col:26> col:19 referenced x 'IntArg::limb_type [nlimb]'
|     |-IfStmt 0x563d99503910 <line:1057:9, line:1059:22>
|     | |-CXXOperatorCallExpr 0x563d99503840 <line:1057:13, line:1058:24> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x563d995037b0 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x563d99445fd8 0x563d99428a10 0x563d993c71a8 0x563d99210788 0x563d99210460 0x563d99201c40 0x563d992018f0 0x563d992011e0 0x563d991d3b50 0x563d99160010
|     | | |-CallExpr 0x563d995036f0 <line:1057:13, col:78> '<dependent type>'
|     | | | |-UnresolvedMemberExpr 0x563d995034e0 <col:13> '<bound member function type>' lvalue
|     | | | |-CXXMemberCallExpr 0x563d99503590 <col:19, col:29> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x563d99503560 <col:19, col:23> '<bound member function type>' .begin 0x563d991f0e48
|     | | | |   `-DeclRefExpr 0x563d99503540 <col:19> 'const String' lvalue ParmVar 0x563d99501b88 'str' 'const String &'
|     | | | |-CXXMemberCallExpr 0x563d99503600 <col:32, col:40> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x563d995035d0 <col:32, col:36> '<bound member function type>' .end 0x563d991f1060
|     | | | |   `-DeclRefExpr 0x563d995035b0 <col:32> 'const String' lvalue ParmVar 0x563d99501b88 'str' 'const String &'
|     | | | |-DeclRefExpr 0x563d99503620 <col:43> 'const bool' lvalue Var 0x563d99502fc8 'is_signed' 'const bool'
|     | | | |-CXXFunctionalCastExpr 0x563d99503688 <col:54, col:67> 'int' functional cast to int <Dependent>
|     | | | | `-UnaryExprOrTypeTraitExpr 0x563d99503668 <col:58, col:66> 'unsigned long' sizeof 'V'
|     | | | |-DeclRefExpr 0x563d995036b0 <col:70> 'IntArg::limb_type [nlimb]' lvalue Var 0x563d99503450 'x' 'IntArg::limb_type [nlimb]'
|     | | | `-DeclRefExpr 0x563d995036d0 <col:73> 'const int' lvalue Var 0x563d99503168 'nlimb' 'const int'
|     | | `-CXXMemberCallExpr 0x563d99503790 <line:1058:16, col:24> 'String::const_iterator':'const char *'
|     | |   `-MemberExpr 0x563d99503760 <col:16, col:20> '<bound member function type>' .end 0x563d991f1060
|     | |     `-DeclRefExpr 0x563d99503740 <col:16> 'const String' lvalue ParmVar 0x563d99501b88 'str' 'const String &'
|     | `-BinaryOperator 0x563d995038f0 <line:1059:13, col:22> 'int' lvalue '='
|     |   |-MemberExpr 0x563d99503888 <col:13> 'int' lvalue ->status 0x563d99502318
|     |   | `-CXXThisExpr 0x563d99503878 <col:13> 'IntArg *' implicit this
|     |   `-ImplicitCastExpr 0x563d995038d8 <col:22> 'int' <IntegralCast>
|     |     `-DeclRefExpr 0x563d995038b8 <col:22> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x563d99500f70 'status_inval' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     |-IfStmt 0x563d99503b60 <line:1060:9, line:1063:9>
|     | |-BinaryOperator 0x563d99503a48 <line:1060:13, col:33> 'bool' '&&'
|     | | |-ImplicitCastExpr 0x563d99503a30 <col:13> 'bool' <IntegralToBoolean>
|     | | | `-ImplicitCastExpr 0x563d99503a18 <col:13> 'int' <LValueToRValue>
|     | | |   `-MemberExpr 0x563d99503938 <col:13> 'int' lvalue ->status 0x563d99502318
|     | | |     `-CXXThisExpr 0x563d99503928 <col:13> 'IntArg *' implicit this
|     | | `-BinaryOperator 0x563d995039f8 <col:23, col:33> 'bool' '!='
|     | |   |-ImplicitCastExpr 0x563d995039c8 <col:23> 'int' <LValueToRValue>
|     | |   | `-MemberExpr 0x563d99503978 <col:23> 'int' lvalue ->status 0x563d99502318
|     | |   |   `-CXXThisExpr 0x563d99503968 <col:23> 'IntArg *' implicit this
|     | |   `-ImplicitCastExpr 0x563d995039e0 <col:33> 'int' <IntegralCast>
|     | |     `-DeclRefExpr 0x563d995039a8 <col:33> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x563d99501000 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     | `-CompoundStmt 0x563d99503b40 <col:47, line:1063:9>
|     |   |-CXXMemberCallExpr 0x563d99503ae0 <line:1061:13, col:40> 'void'
|     |   | |-MemberExpr 0x563d99503a88 <col:13, col:18> '<bound member function type>' .error 0x563d994ac6e0
|     |   | | `-DeclRefExpr 0x563d99503a68 <col:13> 'const ArgContext' lvalue ParmVar 0x563d99501ca0 'args' 'const ArgContext &'
|     |   | `-ImplicitCastExpr 0x563d99503b08 <col:24> 'const char *' <ArrayToPointerDecay>
|     |   |   `-StringLiteral 0x563d99503ab8 <col:24> 'const char [15]' lvalue "invalid number"
|     |   `-ReturnStmt 0x563d99503b30 <line:1062:13, col:20>
|     |     `-CXXBoolLiteralExpr 0x563d99503b20 <col:20> 'bool' false
|     |-DeclStmt 0x563d99503d38 <line:1064:9, col:64>
|     | `-TypedefDecl 0x563d99503ce0 <col:9, col:49> col:49 referenced unsigned_v_type 'typename make_unsigned<V>::type'
|     |   `-DependentNameType 0x563d99503c70 'typename make_unsigned<V>::type' dependent
|     |-CallExpr 0x563d99503e98 <line:1065:9, col:71> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x563d99503d50 <col:9> '<overloaded function type>' lvalue (ADL) = 'extract_integer' 0x563d99193fd8
|     | |-DeclRefExpr 0x563d99503d98 <col:25> 'IntArg::limb_type [nlimb]' lvalue Var 0x563d99503450 'x' 'IntArg::limb_type [nlimb]'
|     | `-CXXReinterpretCastExpr 0x563d99503e68 <col:28, col:70> 'unsigned_v_type':'typename make_unsigned<V>::type' lvalue reinterpret_cast<unsigned_v_type &> <Dependent>
|     |   `-DeclRefExpr 0x563d99503de0 <col:64> 'V' lvalue ParmVar 0x563d99501c28 'result' 'V &'
|     `-ReturnStmt 0x563d99503ed8 <line:1066:9, col:16>
|       `-CXXBoolLiteralExpr 0x563d99503ec8 <col:16> 'bool' true
|-FunctionTemplateDecl 0x563d99502228 <line:1069:5, line:1083:5> line:1070:10 parse
| |-TemplateTypeParmDecl 0x563d99501ed8 <line:1069:14, col:23> col:23 referenced typename depth 0 index 0 V
| |-CXXMethodDecl 0x563d99502188 <line:1070:5, line:1083:5> line:1070:10 parse 'bool (const String &, V &, const ArgContext &)'
| | |-ParmVarDecl 0x563d99501f88 <col:16, col:30> col:30 referenced str 'const String &'
| | |-ParmVarDecl 0x563d99502028 <col:35, col:38> col:38 referenced result 'V &'
| | |-ParmVarDecl 0x563d995020a0 <col:46, col:71> col:64 referenced args 'const ArgContext &' cinit
| | | `-DeclRefExpr 0x563d99502a38 <col:71> 'const ArgContext' lvalue Var 0x563d994f6c58 'blank_args' 'const ArgContext'
| | `-CompoundStmt 0x563d99504658 <col:83, line:1083:5>
| |   |-DeclStmt 0x563d99503fb0 <line:1071:9, col:12>
| |   | `-VarDecl 0x563d99503f48 <col:9, col:11> col:11 referenced x 'V'
| |   `-IfStmt 0x563d99504630 <line:1072:9, line:1082:9> has_else
| |     |-BinaryOperator 0x563d99504240 <line:1072:13, line:1073:49> '<dependent type>' '||'
| |     | |-UnaryOperator 0x563d995040c8 <line:1072:13, col:43> '<dependent type>' prefix '!' cannot overflow
| |     | | `-CallExpr 0x563d99504090 <col:14, col:43> '<dependent type>'
| |     | |   |-UnresolvedMemberExpr 0x563d99503fd8 <col:14> '<bound member function type>' lvalue
| |     | |   |-DeclRefExpr 0x563d99504030 <col:31> 'const String' lvalue ParmVar 0x563d99501f88 'str' 'const String &'
| |     | |   |-DeclRefExpr 0x563d99504050 <col:36> 'V' lvalue Var 0x563d99503f48 'x' 'V'
| |     | |   `-DeclRefExpr 0x563d99504070 <col:39> 'const ArgContext' lvalue ParmVar 0x563d995020a0 'args' 'const ArgContext &'
| |     | `-ParenExpr 0x563d99504220 <line:1073:16, col:49> 'bool'
| |     |   `-BinaryOperator 0x563d99504200 <col:17, col:37> 'bool' '&&'
| |     |     |-ImplicitCastExpr 0x563d995041e8 <col:17> 'bool' <IntegralToBoolean>
| |     |     | `-ImplicitCastExpr 0x563d995041d0 <col:17> 'int' <LValueToRValue>
| |     |     |   `-MemberExpr 0x563d995040f0 <col:17> 'int' lvalue ->status 0x563d99502318
| |     |     |     `-CXXThisExpr 0x563d995040e0 <col:17> 'IntArg *' implicit this
| |     |     `-BinaryOperator 0x563d995041b0 <col:27, col:37> 'bool' '!='
| |     |       |-ImplicitCastExpr 0x563d99504180 <col:27> 'int' <LValueToRValue>
| |     |       | `-MemberExpr 0x563d99504130 <col:27> 'int' lvalue ->status 0x563d99502318
| |     |       |   `-CXXThisExpr 0x563d99504120 <col:27> 'IntArg *' implicit this
| |     |       `-ImplicitCastExpr 0x563d99504198 <col:37> 'int' <IntegralCast>
| |     |         `-DeclRefExpr 0x563d99504160 <col:37> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x563d99501000 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |     |-ReturnStmt 0x563d99504270 <line:1074:13, col:20>
| |     | `-CXXBoolLiteralExpr 0x563d99504260 <col:20> 'bool' false
| |     `-IfStmt 0x563d99504608 <line:1075:14, line:1082:9> has_else
| |       |-BinaryOperator 0x563d99504310 <line:1075:18, col:28> 'bool' '=='
| |       | |-ImplicitCastExpr 0x563d995042e0 <col:18> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x563d99504290 <col:18> 'int' lvalue ->status 0x563d99502318
| |       | |   `-CXXThisExpr 0x563d99504280 <col:18> 'IntArg *' implicit this
| |       | `-ImplicitCastExpr 0x563d995042f8 <col:28> 'int' <IntegralCast>
| |       |   `-DeclRefExpr 0x563d995042c0 <col:28> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x563d99501000 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |       |-CompoundStmt 0x563d99504548 <col:42, line:1079:9>
| |       | |-CallExpr 0x563d995044f0 <line:1076:13, line:1077:45> '<dependent type>'
| |       | | |-MemberExpr 0x563d99504340 <line:1076:13> '<bound member function type>' ->range_error 0x563d99502928
| |       | | | `-CXXThisExpr 0x563d99504330 <col:13> 'IntArg *' implicit this
| |       | | |-DeclRefExpr 0x563d99504370 <col:25> 'const ArgContext' lvalue ParmVar 0x563d995020a0 'args' 'const ArgContext &'
| |       | | |-CXXDependentScopeMemberExpr 0x563d99504450 <col:31, col:50> '<dependent type>' lvalue ->is_signed
| |       | | `-CXXUnresolvedConstructExpr 0x563d995044c8 <line:1077:25, col:44> 'click_int_large_t':'long long' 'click_int_large_t':'long long'
| |       | |   `-DeclRefExpr 0x563d995044a8 <col:43> 'V' lvalue Var 0x563d99503f48 'x' 'V'
| |       | `-ReturnStmt 0x563d99504538 <line:1078:13, col:20>
| |       |   `-CXXBoolLiteralExpr 0x563d99504528 <col:20> 'bool' false
| |       `-CompoundStmt 0x563d995045e8 <line:1079:16, line:1082:9>
| |         |-BinaryOperator 0x563d995045a8 <line:1080:13, col:22> '<dependent type>' '='
| |         | |-DeclRefExpr 0x563d99504568 <col:13> 'V' lvalue ParmVar 0x563d99502028 'result' 'V &'
| |         | `-DeclRefExpr 0x563d99504588 <col:22> 'V' lvalue Var 0x563d99503f48 'x' 'V'
| |         `-ReturnStmt 0x563d995045d8 <line:1081:13, col:20>
| |           `-CXXBoolLiteralExpr 0x563d995045c8 <col:20> 'bool' true
| `-CXXMethodDecl 0x563d99529248 <line:1070:5, line:1083:5> line:1070:10 used parse 'bool (const String &, int &, const ArgContext &)'
|   |-TemplateArgument type 'int'
|   |-ParmVarDecl 0x563d99529028 <col:16, col:30> col:30 str 'const String &'
|   |-ParmVarDecl 0x563d995290f8 <col:35, col:38> col:38 result 'int &'
|   `-ParmVarDecl 0x563d99529160 <col:46, col:71> col:64 args 'const ArgContext &' cinit
|     `-DeclRefExpr 0x563d99502a38 <col:71> 'const ArgContext' lvalue Var 0x563d994f6c58 'blank_args' 'const ArgContext'
|-FieldDecl 0x563d995022b0 <line:1085:5, col:9> col:9 base 'int'
|-FieldDecl 0x563d99502318 <line:1086:5, col:9> col:9 referenced status 'int'
|-AccessSpecDecl 0x563d99502368 <line:1088:3, col:12> col:3 protected
|-CXXMethodDecl 0x563d99502620 <line:1090:5, line:1091:51> line:1090:24 span 'const char *(const char *, const char *, bool, int &)' static
| |-ParmVarDecl 0x563d995023a8 <col:29, col:41> col:41 begin 'const char *'
| |-ParmVarDecl 0x563d99502428 <col:48, col:60> col:60 end 'const char *'
| |-ParmVarDecl 0x563d995024a0 <line:1091:29, col:34> col:34 is_signed 'bool'
| `-ParmVarDecl 0x563d99502520 <col:45, col:50> col:50 b 'int &'
|-CXXMethodDecl 0x563d99502928 <line:1092:5, line:1093:45> line:1092:10 referenced range_error 'void (const ArgContext &, bool, click_int_large_t)'
| |-ParmVarDecl 0x563d995026f0 <col:22, col:40> col:40 args 'const ArgContext &'
| |-ParmVarDecl 0x563d99502768 <col:46, col:51> col:51 is_signed 'bool'
| `-ParmVarDecl 0x563d99502800 <line:1093:22, col:40> col:40 value 'click_int_large_t':'long long'
|-CXXConstructorDecl 0x563d99504ee8 <line:1040:7> col:7 implicit constexpr IntArg 'void (const IntArg &)' inline default trivial noexcept-unevaluated 0x563d99504ee8
| `-ParmVarDecl 0x563d99504ff8 <col:7> col:7 'const IntArg &'
|-CXXConstructorDecl 0x563d99505178 <col:7> col:7 implicit constexpr IntArg 'void (IntArg &&)' inline default trivial noexcept-unevaluated 0x563d99505178
| `-ParmVarDecl 0x563d99505288 <col:7> col:7 'IntArg &&'
`-CXXDestructorDecl 0x563d99528d20 <col:7> col:7 implicit referenced ~IntArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IntArg = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.IntArg = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563d994abda8 prev 0x563d99388a98 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x563d994abea0 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x563d994abf30 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x563d994ac068 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x563d994abf68 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x563d994ad490 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x563d994ad470 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x563d994ad008 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x563d994ad520 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x563d994ad4e0 <col:17> 'ErrorHandler *' lvalue ParmVar 0x563d994abf68 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x563d994ad070 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x563d994ad5a0 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x563d994ad560 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x563d994ad0d0 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x563d994ad5e0 <col:54> 'bool' false
| `-CompoundStmt 0x563d994ad6e8 <col:61, line:38:5>
|   `-BinaryOperator 0x563d994ad6c8 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x563d994ad660 <col:9> 'const Element *' lvalue ->_context 0x563d994acfa8
|     | `-CXXThisExpr 0x563d994ad650 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x563d994ad6b0 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x563d994ad690 <col:20> 'int' 0
|-CXXConstructorDecl 0x563d994ac278 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x563d994ac128 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x563d994ac1a0 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x563d994ad4c8 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x563d994ad4a8 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x563d994acfa8 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x563d994ad740 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x563d994ad700 <col:20> 'const Element *' lvalue ParmVar 0x563d994ac128 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x563d994ad008 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x563d994ad7c0 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x563d994ad780 <col:36> 'ErrorHandler *' lvalue ParmVar 0x563d994ac1a0 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x563d994ad070 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x563d994ad840 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x563d994ad800 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x563d994ad0d0 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x563d994ad880 <col:73> 'bool' false
| `-CompoundStmt 0x563d994ad8f8 <col:80, line:46:5>
|-CXXMethodDecl 0x563d994ac3a8 <line:49:5, line:51:5> line:49:20 context 'const Element *() const'
| `-CompoundStmt 0x563d994ad970 <col:36, line:51:5>
|   `-ReturnStmt 0x563d994ad960 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x563d994ad948 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x563d994ad918 <col:16> 'const Element *const' lvalue ->_context 0x563d994acfa8
|         `-CXXThisExpr 0x563d994ad908 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x563d994ac498 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x563d994ad9f0 <col:32, line:57:5>
|   `-ReturnStmt 0x563d994ad9e0 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x563d994ad9c8 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x563d994ad998 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x563d994ad008
|         `-CXXThisExpr 0x563d994ad988 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x563d994ac558 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x563d994ac6e0 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x563d994ac610 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x563d994ac830 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x563d994ac7a0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x563d994ac980 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x563d994ac8f0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x563d994acb88 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x563d994aca38 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x563d994acab0 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x563d994aceb8 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x563d994acc48 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x563d994accc8 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x563d994acd90 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x563d994acf70 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x563d994acfa8 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x563d994ad008 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x563d994ad070 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x563d994ad0d0 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x563d994ad120 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x563d994ad120
| `-ParmVarDecl 0x563d994ad238 <col:7> col:7 'const ArgContext &'
`-CXXMethodDecl 0x563d994ad2d8 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x563d994ad2d8
  `-ParmVarDecl 0x563d994ad3e8 <col:7> col:7 'const ArgContext &'

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563d991c80a0 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563d991c81b8 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x563d991c8248 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x563d991c8318 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x563d991c8400 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x563d991c8618 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x563d991c84c0 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563d991c87c8 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x563d991c86d0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x563d991c8910 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x563d991c8880 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x563d991c8a58 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x563d991c89c8 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563d991c8ba0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x563d991c8b10 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563d991c8c68 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x563d991c8db0 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x563d991c8d20 <col:28> col:31 'int'
|-CXXMethodDecl 0x563d991c8e78 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x563d991c8fc0 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x563d991c8f30 <col:28> col:31 'int'
|-CXXMethodDecl 0x563d991c9138 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x563d991c9078 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563d991c9280 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x563d991c91f0 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563d991c9348 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x563d991c9508 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x563d991c93f8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x563d991c9470 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563d991c9758 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x563d991c95c8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563d991c9640 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563d991c9808 <col:86> "" ""
|-CXXMethodDecl 0x563d991c9a78 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x563d991c98e8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x563d991c9960 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563d991c9c28 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x563d991c9b38 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x563d991c9dd8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x563d991c9ce0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x563d991ca0a8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x563d991c9e90 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x563d991c9f08 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x563d991c9f80 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563d991ca388 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x563d991ca170 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x563d991ca1e8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563d991ca260 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563d991ca440 <col:115> "" ""
|-AccessSpecDecl 0x563d991ca4b0 <line:84:3, col:10> col:3 private
|-FieldDecl 0x563d991ca4e8 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563d991cba00 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x563d991cba00
| `-ParmVarDecl 0x563d991cbb08 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x563d991cbba8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x563d991cbba8
| `-ParmVarDecl 0x563d991cbcb8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x563d992012e8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x563d993f30e0 <col:7>
|-CXXConstructorDecl 0x563d992013c0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x563d992013c0
| `-ParmVarDecl 0x563d992014d8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x563d99201548 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x563d99201548
| `-ParmVarDecl 0x563d99201658 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x563d993f5ae0 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563d993e1c88 prev 0x563d993d6e90 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563d993e1d80 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x563d993e1e70 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x563d993e1f98 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x563d993e2118 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x563d993e2298 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x563d993e2418 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x563d993f3248 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x563d993f3ab8 <col:11>
|-CXXDestructorDecl 0x563d993f3320 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x563d993f3458 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x563d993f3458
| `-ParmVarDecl 0x563d993f3568 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x563d993f3608 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x563d993f3608
| `-ParmVarDecl 0x563d993f3718 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x563d993f64d8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x563d993f65e8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x563d993f6868 <col:11>
|   `-ReturnStmt 0x563d993f6858 <col:11>
|     `-UnaryOperator 0x563d993f6840 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563d993f6830 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x563d993f6658 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x563d993f6658
  `-ParmVarDecl 0x563d993f6768 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563d993e2480 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563d993e2598 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x563d993e2638 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x563d993e26a0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x563d993e2708 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x563d993e2770 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x563d993e27d0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x563d993e2890 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x563d993e28f0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x563d993e2950 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x563d993f3158 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x563d993e2638 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x563d993f3ac8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x563d993f3b20 <col:12>
|-CXXConstructorDecl 0x563d993f3788 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x563d993f3788
| `-ParmVarDecl 0x563d993f3898 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x563d993f3938 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x563d993f3938
| `-ParmVarDecl 0x563d993f3a48 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x563d993f5bc0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563d993d05a0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563d993d06b8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x563d993d0748 <col:16, col:22> col:16 public
|-EnumDecl 0x563d993d0770 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x563d993d0870 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x563d993d0950 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d993d0850 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x563d993d0830 <col:21> 'int' 28
| `-EnumConstantDecl 0x563d993d0900 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x563d993d0968 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563d993d08e0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x563d993d08c0 <col:22> 'int' 64
|-CXXMethodDecl 0x563d993d0ca8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x563d993d0990 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563d993d0a10 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x563d993d0a88 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563d993d0b00 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563d993d0d68 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x563d993d0f68 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x563d993d0de0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x563d993d0e58 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563d993d1018 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x563d993d1178 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x563d993d1088 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563d993d1220 <col:72> warn_unused_result ""
|-TypedefDecl 0x563d993d1580 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x563d993d1510 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x563d993d14b0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x563d993d1470 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x563d98ea72d0 'void'
|       |-PointerType 0x563d99150940 'unsigned char *'
|       | `-BuiltinType 0x563d98ea73d0 'unsigned char'
|       |-TypedefType 0x563d98f4ceb0 'size_t' sugar
|       | |-Typedef 0x563d98f17b20 'size_t'
|       | `-BuiltinType 0x563d98ea7430 'unsigned long'
|       `-PointerType 0x563d98ea7ad0 'void *'
|         `-BuiltinType 0x563d98ea72d0 'void'
|-CXXMethodDecl 0x563d993d19f8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x563d993d15f0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x563d993d1668 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563d993d1700 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x563d993d1780 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x563d993ec0f0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x563d993ec0d8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x563d993ec0a0 <col:58> 'int' 0
| |-ParmVarDecl 0x563d993d1800 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x563d993ec118 <col:76> 'int' 0
| |-ParmVarDecl 0x563d993d1880 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x563d993ec138 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x563d993d1ac8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x563d993d1b48 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x563d993d1c08 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x563d993d1ca8 <col:20>
| `-OptimizeNoneAttr 0x563d993d1d00 <col:30>
|-CXXMethodDecl 0x563d993d1d78 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x563d993d1e18 <col:20>
| `-OptimizeNoneAttr 0x563d993d1e70 <col:30>
|-CXXMethodDecl 0x563d993d1ee8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x563d993d1f88 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x563d993d2038 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x563d993d20d8 <col:20>
| |-OptimizeNoneAttr 0x563d993d2130 <col:30>
| `-WarnUnusedResultAttr 0x563d993d2158 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x563d993d21b0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x563d993d2250 <col:20>
| `-OptimizeNoneAttr 0x563d993d22a8 <col:30>
|-CXXMethodDecl 0x563d993d22f8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x563d993d2398 <col:20>
| `-OptimizeNoneAttr 0x563d993d23f0 <col:30>
|-CXXMethodDecl 0x563d993d2438 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x563d993d24d8 <col:20>
| `-OptimizeNoneAttr 0x563d993d2530 <col:30>
|-CXXMethodDecl 0x563d993d2578 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x563d993d2638 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x563d993d2700 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x563d993d27c8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x563d993d2888 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x563d993d29a8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x563d993ec200 <col:54, line:99:5>
|   `-ReturnStmt 0x563d993ec1f0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x563d993ec1d8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x563d993ec1a8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x563d993e2c88
|         `-CXXThisExpr 0x563d993ec198 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x563d993d2b48 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x563d993d2a58 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x563d993ec2b0 <col:67, line:103:5>
|   `-BinaryOperator 0x563d993ec290 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x563d993ec228 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x563d993e2c88
|     | `-CXXThisExpr 0x563d993ec218 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x563d993ec278 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x563d993ec258 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x563d993d2a58 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x563d993d2c40 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x563d993ec330 <col:33, line:107:5>
|   `-ReturnStmt 0x563d993ec320 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x563d993ec308 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x563d993ec2d8 <col:16> 'void *' lvalue ->_destructor_argument 0x563d993e2cf0
|         `-CXXThisExpr 0x563d993ec2c8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x563d993d2d00 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x563d993ec960 <col:25, line:113:5>
|   |-ParenExpr 0x563d993ec6a8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x563d993ec678 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x563d993ec3e8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x563d993ec3c0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x563d993ec388 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x563d993ec358 <col:24> '<bound member function type>' ->shared 0x563d993d1d78
|   |   |       `-ImplicitCastExpr 0x563d993ec3a8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x563d993ec348 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x563d993ec448 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563d993ec428 <col:42> 'int' 0
|   |   `-CallExpr 0x563d993ec5d8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x563d993ec5c0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563d993ec5a0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563d98f43cc0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563d993ec618 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d993ec4b8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x563d993ec630 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d993ec4e0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563d993ec648 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563d993ec518 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x563d993ec660 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563d993ec588 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563d993ec570 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563d993ec538 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x563d993ec8a8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x563d993ec6d8 <col:2> 'unsigned char *' lvalue ->_head 0x563d993e2a90
|   | | `-CXXThisExpr 0x563d993ec6c8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x563d993ec890 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x563d993ec870 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x563d993ec718 <col:10> 'unsigned char *' lvalue ->_data 0x563d993e2af8
|   |     | `-CXXThisExpr 0x563d993ec708 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x563d993ec858 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x563d993ec838 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x563d993ec758 <col:18> 'unsigned char *' lvalue ->_tail 0x563d993e2b60
|   |         | `-CXXThisExpr 0x563d993ec748 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x563d993ec820 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x563d993ec800 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x563d993ec798 <col:26> 'unsigned char *' lvalue ->_end 0x563d993e2bc8
|   |             | `-CXXThisExpr 0x563d993ec788 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x563d993ec7e8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x563d993ec7c8 <col:33> 'int' 0
|   `-BinaryOperator 0x563d993ec940 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x563d993ec8d8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x563d993e2c88
|     | `-CXXThisExpr 0x563d993ec8c8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x563d993ec928 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x563d993ec908 <col:16> 'int' 0
|-CXXMethodDecl 0x563d993d2e40 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x563d993d2db0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563d993d2ee8 <col:20>
| |-OptimizeNoneAttr 0x563d993d2f40 <col:30>
| `-WarnUnusedResultAttr 0x563d993d2f68 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x563d993d3038 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x563d993d2fa8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563d993d30e0 <col:20>
| |-OptimizeNoneAttr 0x563d993d3138 <col:30>
| `-WarnUnusedResultAttr 0x563d993d3160 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x563d993d3298 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x563d993d31a0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563d993d3340 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x563d993d3440 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x563d993d33b0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563d993d34e8 <col:20>
| `-OptimizeNoneAttr 0x563d993d3540 <col:30>
|-CXXMethodDecl 0x563d993d3608 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x563d993d3578 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563d993d36b0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x563d993d37b0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x563d993d3720 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563d993d3858 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x563d993d3958 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x563d993d38c8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563d993d3a00 <col:20>
| `-OptimizeNoneAttr 0x563d993d3a58 <col:30>
|-CXXMethodDecl 0x563d993d3be8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x563d993d3a98 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x563d993d3b10 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x563d993ec158 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x563d993d3c98 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x563d993d3e98 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x563d993d3d10 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x563d993d3d88 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563d993d40a8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x563d993d3f58 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x563d993d3fd0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563d993d42b8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x563d993d4168 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x563d993d41e8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x563d993ec168 <col:39> 'int' 0
|-CXXMethodDecl 0x563d993d4388 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x563d993d4450 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x563d993d4518 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x563d993d45d8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x563d993d46a0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x563d993d47e8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x563d993d4758 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x563d993d49b8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x563d993d48a8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x563d993d4920 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563d993d4a88 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x563d993d4b48 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x563d993d4be8 <col:20>
| `-OptimizeNoneAttr 0x563d993d4c40 <col:30>
|-CXXMethodDecl 0x563d993d4c90 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x563d993d4d30 <col:20>
| `-OptimizeNoneAttr 0x563d993d4d88 <col:30>
|-CXXMethodDecl 0x563d993d4dd8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x563d993d4e98 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x563d993d4f60 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x563d993d5000 <col:20>
| `-OptimizeNoneAttr 0x563d993d5058 <col:30>
|-CXXMethodDecl 0x563d993d51a8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x563d993d5098 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x563d993d5110 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563d993d52f8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x563d993d5268 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563d993d53d0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x563d993d5490 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x563d993d5530 <col:20>
| `-OptimizeNoneAttr 0x563d993d5588 <col:30>
|-CXXMethodDecl 0x563d993d55d8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x563d993d5678 <col:20>
| `-OptimizeNoneAttr 0x563d993d56d0 <col:30>
|-CXXMethodDecl 0x563d993d5720 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x563d993d57e8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x563d993d5888 <col:20>
| `-OptimizeNoneAttr 0x563d993d58e0 <col:30>
|-CXXMethodDecl 0x563d993d5928 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x563d993d5a48 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x563d993d5bb8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x563d993d5af8 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x563d993d5ca8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x563d993d5d48 <col:20>
| `-OptimizeNoneAttr 0x563d993d5da0 <col:30>
|-CXXMethodDecl 0x563d993d5df0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x563d993d5eb0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x563d993d60e8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x563d993d5f60 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x563d993d5fd8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563d993d6198 <col:20>
| `-OptimizeNoneAttr 0x563d993d61f0 <col:30>
|-CXXMethodDecl 0x563d993d6298 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x563d993d6338 <col:20>
| `-OptimizeNoneAttr 0x563d993d6390 <col:30>
|-CXXMethodDecl 0x563d993d63e0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x563d993d6480 <col:20>
| `-OptimizeNoneAttr 0x563d993d64d8 <col:30>
|-CXXMethodDecl 0x563d993d6520 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x563d993d65c0 <col:20>
| `-OptimizeNoneAttr 0x563d993d6618 <col:30>
|-CXXMethodDecl 0x563d993d6718 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x563d993d6650 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x563d993d67c0 <col:20>
| `-OptimizeNoneAttr 0x563d993d6818 <col:30>
|-CXXMethodDecl 0x563d993d69d8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x563d993d6850 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x563d993d68c8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563d993d6a88 <col:20>
| `-OptimizeNoneAttr 0x563d993d6ae0 <col:30>
|-CXXMethodDecl 0x563d993d6b88 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x563d993d6ca8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x563d993d6dc8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x563d993d6e68 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x563d993d6e90 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x563d993d6fb8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x563d993d7058 <col:20>
| `-OptimizeNoneAttr 0x563d993d70b0 <col:30>
|-CXXMethodDecl 0x563d993d7158 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x563d993d71f8 <col:20>
| `-OptimizeNoneAttr 0x563d993d7250 <col:30>
|-AccessSpecDecl 0x563d993d7278 <line:344:3, col:9> col:3 public
|-EnumDecl 0x563d993d72a0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x563d993d73a0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x563d993d73f0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563d993d7380 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x563d993d7360 <col:14> 'int' 48
|-CXXMethodDecl 0x563d993d7458 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x563d993d74f8 <col:20>
| `-OptimizeNoneAttr 0x563d993d7550 <col:30>
|-CXXMethodDecl 0x563d993d75c8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x563d993d7668 <col:20>
| `-OptimizeNoneAttr 0x563d993d76c0 <col:30>
|-CXXMethodDecl 0x563d993d7788 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x563d993d76f8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x563d993d7928 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x563d993d7ac8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x563d993d79d8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x563d993d7b70 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x563d993d7c70 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563d993d8020 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d993d7c50 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x563d993d7c30 <col:9> 'int' 0
| |-EnumConstantDecl 0x563d993d7d00 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563d993d8038 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d993d7ce0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x563d993d7cc0 <col:14> 'int' 1
| |-EnumConstantDecl 0x563d993d7d90 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563d993d8050 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d993d7d70 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x563d993d7d50 <col:14> 'int' 2
| |-EnumConstantDecl 0x563d993d7e20 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563d993d8068 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d993d7e00 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x563d993d7de0 <col:14> 'int' 3
| |-EnumConstantDecl 0x563d993d7eb0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563d993d8080 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d993d7e90 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x563d993d7e70 <col:13> 'int' 4
| |-EnumConstantDecl 0x563d993d7f40 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563d993d8098 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d993d7f20 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x563d993d7f00 <col:13> 'int' 5
| `-EnumConstantDecl 0x563d993d7fd0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x563d993d80b0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563d993d7fb0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x563d993d7f90 <col:14> 'int' 6
|-CXXMethodDecl 0x563d993d8118 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x563d993d81b8 <col:20>
| `-OptimizeNoneAttr 0x563d993d8210 <col:30>
|-CXXMethodDecl 0x563d993d8308 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x563d993d8248 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x563d993d83b0 <col:20>
| `-OptimizeNoneAttr 0x563d993d8408 <col:30>
|-CXXMethodDecl 0x563d993d8478 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x563d993d85a0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x563d993d8718 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x563d993d8650 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x563d993d87e0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x563d993d88a8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x563d993d89e8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x563d993d8958 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x563d993d8a90 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x563d993d8b90 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x563d993d8d90 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d993d8b70 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x563d993d8b50 <col:23> 'int' 0
| |-EnumConstantDecl 0x563d993d8c20 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x563d993d8da8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d993d8c00 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x563d993d8be0 <col:45> 'int' 4
| |-EnumConstantDecl 0x563d993d8cb0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x563d993d8dc0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d993d8c90 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x563d993d8c70 <col:24> 'int' 0
| `-EnumConstantDecl 0x563d993d8d40 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x563d993d8dd8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563d993d8d20 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x563d993d8d00 <col:47> 'int' 16
|-CXXMethodDecl 0x563d993d8e38 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x563d993d8fa8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x563d993d8ee8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x563d993d9050 <col:20>
| `-OptimizeNoneAttr 0x563d993d90a8 <col:30>
|-CXXMethodDecl 0x563d993d90f8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x563d993eca80 <col:18, col:36>
|   `-ReturnStmt 0x563d993eca70 <col:20, col:33>
|     `-ImplicitCastExpr 0x563d993eca58 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x563d993eca38 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x563d993eca08 <col:27> '<bound member function type>' ->xanno 0x563d993d7158
|           `-CXXThisExpr 0x563d993ec9f8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x563d993d91f0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x563d993ecb90 <col:30, col:48>
|   `-ReturnStmt 0x563d993ecb80 <col:32, col:45>
|     `-ImplicitCastExpr 0x563d993ecb68 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x563d993ecb48 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x563d993ecb18 <col:39> '<bound member function type>' ->xanno 0x563d993d6fb8
|           `-CXXThisExpr 0x563d993ecb08 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x563d993d92d8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x563d993ecd28 <col:24, col:50>
|   `-ReturnStmt 0x563d993ecd18 <col:26, col:47>
|     `-UnaryOperator 0x563d993ecd00 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x563d993ecce0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x563d993eccc8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563d993ecc78 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x563d993e1f98
|         |   `-CXXMemberCallExpr 0x563d993ecc58 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x563d993ecc28 <col:34> '<bound member function type>' ->xanno 0x563d993d7158
|         |       `-CXXThisExpr 0x563d993ecc18 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x563d993ecca8 <col:46> 'int' 0
|-CXXMethodDecl 0x563d993d93e0 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x563d993ecef8 <col:36, col:62>
|   `-ReturnStmt 0x563d993ecee8 <col:38, col:59>
|     `-UnaryOperator 0x563d993eced0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x563d993eceb0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x563d993ece98 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563d993ece10 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x563d993e1f98
|         |   `-CXXMemberCallExpr 0x563d993ecdf0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x563d993ecdc0 <col:46> '<bound member function type>' ->xanno 0x563d993d6fb8
|         |       `-CXXThisExpr 0x563d993ecdb0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x563d993ece40 <col:58> 'int' 0
|-CXXMethodDecl 0x563d993d94f8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x563d993ed090 <col:26, col:53>
|   `-ReturnStmt 0x563d993ed080 <col:28, col:50>
|     `-UnaryOperator 0x563d993ed068 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x563d993ed048 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x563d993ed030 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563d993ecfe0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x563d993e2298
|         |   `-CXXMemberCallExpr 0x563d993ecfc0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x563d993ecf90 <col:36> '<bound member function type>' ->xanno 0x563d993d7158
|         |       `-CXXThisExpr 0x563d993ecf80 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x563d993ed010 <col:49> 'int' 0
|-CXXMethodDecl 0x563d993d9618 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x563d993ed268 <col:38, col:65>
|   `-ReturnStmt 0x563d993ed258 <col:40, col:62>
|     `-UnaryOperator 0x563d993ed240 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x563d993ed220 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x563d993ed208 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563d993ed178 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x563d993e2298
|         |   `-CXXMemberCallExpr 0x563d993ed158 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x563d993ed128 <col:48> '<bound member function type>' ->xanno 0x563d993d6fb8
|         |       `-CXXThisExpr 0x563d993ed118 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x563d993ed1a8 <col:61> 'int' 0
|-CXXMethodDecl 0x563d993d97c8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x563d993d96d0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x563d993ed938 <col:34, line:463:5>
|   |-ParenExpr 0x563d993ed780 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x563d993ed750 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x563d993ed3b8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563d993ed388 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563d993ed2d8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563d993ed2c0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563d993ed280 <col:23> 'int' lvalue ParmVar 0x563d993d96d0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563d993ed2a0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563d993ed368 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563d993ed338 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563d993ed2f8 <col:33> 'int' lvalue ParmVar 0x563d993d96d0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x563d993ed350 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x563d993ed318 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563d993d73a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x563d993ed418 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563d993ed3f8 <col:56> 'int' 0
|   |   `-CallExpr 0x563d993ed6b0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x563d993ed698 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563d993ed678 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563d98f43cc0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563d993ed6f0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d993ed508 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x563d993ed708 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d993ed538 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563d993ed720 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563d993ed570 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x563d993ed738 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563d993ed660 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563d993ed648 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563d993ed608 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x563d993ed928 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x563d993ed910 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x563d993ed8f0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x563d993ed8c0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563d993ed870 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x563d993e1f98
|         |   `-CXXMemberCallExpr 0x563d993ed850 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x563d993ed820 <col:9> '<bound member function type>' ->xanno 0x563d993d6fb8
|         |       `-CXXThisExpr 0x563d993ed810 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x563d993ed8d8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x563d993ed8a0 <col:21> 'int' lvalue ParmVar 0x563d993d96d0 'i' 'int'
|-CXXMethodDecl 0x563d993d9a18 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x563d993d9888 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x563d993d9900 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x563d993edfc8 <col:40, line:472:5>
|   |-ParenExpr 0x563d993edde0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x563d993eddb0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x563d993eda90 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563d993eda60 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563d993ed9b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563d993ed998 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563d993ed958 <col:23> 'int' lvalue ParmVar 0x563d993d9888 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563d993ed978 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563d993eda40 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563d993eda10 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563d993ed9d0 <col:33> 'int' lvalue ParmVar 0x563d993d9888 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x563d993eda28 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x563d993ed9f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563d993d73a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x563d993edaf0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563d993edad0 <col:56> 'int' 0
|   |   `-CallExpr 0x563d993edd10 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x563d993edcf8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563d993edcd8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563d98f43cc0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563d993edd50 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d993edb60 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x563d993edd68 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d993edb90 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563d993edd80 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563d993edbc8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x563d993edd98 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563d993edcc0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563d993edca8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563d993edc68 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x563d993edfa8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x563d993edf50 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x563d993edf20 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x563d993eded0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x563d993e1f98
|     | |   `-CXXMemberCallExpr 0x563d993edeb0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x563d993ede80 <col:2> '<bound member function type>' ->xanno 0x563d993d7158
|     | |       `-CXXThisExpr 0x563d993ede70 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x563d993edf38 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x563d993edf00 <col:14> 'int' lvalue ParmVar 0x563d993d9888 'i' 'int'
|     `-ImplicitCastExpr 0x563d993edf90 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x563d993edf70 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x563d993d9900 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x563d993d9bd8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x563d993d9ae0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x563d993ee748 <col:36, line:485:5>
|   |-ParenExpr 0x563d993ee4b0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x563d993ee480 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563d993ee160 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563d993ee130 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563d993ee040 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563d993ee028 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563d993edfe8 <col:23> 'int' lvalue ParmVar 0x563d993d9ae0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563d993ee008 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563d993ee110 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563d993ee0f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563d993ee060 <col:33> 'int' lvalue ParmVar 0x563d993d9ae0 'i' 'int'
|   |   |     `-BinaryOperator 0x563d993ee0d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563d993ee0c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563d993ee080 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563d993d73a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563d993ee0a0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x563d993ee1c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563d993ee1a0 <col:60> 'int' 0
|   |   `-CallExpr 0x563d993ee3e0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563d993ee3c8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563d993ee3a8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563d98f43cc0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563d993ee420 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d993ee230 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x563d993ee438 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d993ee268 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563d993ee450 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563d993ee2a0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x563d993ee468 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563d993ee390 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563d993ee378 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563d993ee338 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x563d993ee738 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x563d993ee720 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x563d993ee708 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563d993ee6d8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x563d993ee678 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x563d993ee648 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563d993ee5c0 <col:61, col:70> 'char const[48]' lvalue ->c 0x563d993e1e70
|             |   `-CXXMemberCallExpr 0x563d993ee5a0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563d993ee570 <col:61> '<bound member function type>' ->xanno 0x563d993d6fb8
|             |       `-CXXThisExpr 0x563d993ee560 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563d993ee660 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563d993ee5f0 <col:74> 'int' lvalue ParmVar 0x563d993d9ae0 'i' 'int'
|-CXXMethodDecl 0x563d993d9e28 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x563d993d9c98 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x563d993d9d10 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x563d993eee98 <col:42, line:500:5>
|   |-ParenExpr 0x563d993eec30 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x563d993eec00 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563d993ee8e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563d993ee8b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563d993ee7c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563d993ee7a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563d993ee768 <col:23> 'int' lvalue ParmVar 0x563d993d9c98 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563d993ee788 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563d993ee890 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563d993ee878 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563d993ee7e0 <col:33> 'int' lvalue ParmVar 0x563d993d9c98 'i' 'int'
|   |   |     `-BinaryOperator 0x563d993ee858 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563d993ee840 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563d993ee800 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563d993d73a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563d993ee820 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x563d993ee940 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563d993ee920 <col:60> 'int' 0
|   |   `-CallExpr 0x563d993eeb60 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563d993eeb48 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563d993eeb28 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563d98f43cc0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563d993eeba0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d993ee9b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x563d993eebb8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d993ee9e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563d993eebd0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563d993eea20 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x563d993eebe8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563d993eeb10 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563d993eeaf8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563d993eeab8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x563d993eee78 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x563d993eee28 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x563d993eedf8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x563d993eeda0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x563d993eed70 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x563d993eed20 <col:48, col:57> 'char [48]' lvalue ->c 0x563d993e1e70
|     |     |   `-CXXMemberCallExpr 0x563d993eed00 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x563d993eecd0 <col:48> '<bound member function type>' ->xanno 0x563d993d7158
|     |     |       `-CXXThisExpr 0x563d993eecc0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x563d993eed88 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x563d993eed50 <col:61> 'int' lvalue ParmVar 0x563d993d9c98 'i' 'int'
|     `-ImplicitCastExpr 0x563d993eee60 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x563d993eee40 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x563d993d9d10 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x563d993d9fe8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x563d993d9ef0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x563d993ef5f8 <col:35, line:513:5>
|   |-ParenExpr 0x563d993ef308 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x563d993ef2d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563d993ef030 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563d993ef000 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563d993eef10 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563d993eeef8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563d993eeeb8 <col:23> 'int' lvalue ParmVar 0x563d993d9ef0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563d993eeed8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563d993eefe0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563d993eefc8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563d993eef30 <col:33> 'int' lvalue ParmVar 0x563d993d9ef0 'i' 'int'
|   |   |     `-BinaryOperator 0x563d993eefa8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563d993eef90 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563d993eef50 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563d993d73a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563d993eef70 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x563d993ef090 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563d993ef070 <col:60> 'int' 0
|   |   `-CallExpr 0x563d993ef238 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563d993ef220 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563d993ef200 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563d98f43cc0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563d993ef278 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d993ef100 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x563d993ef290 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d993ef138 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563d993ef2a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563d993ef170 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x563d993ef2c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563d993ef1e8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563d993ef1d0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563d993ef190 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x563d993ef5e8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x563d993ef5d0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x563d993ef5b8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563d993ef588 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x563d993ef500 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x563d993ef4d0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563d993ef480 <col:60, col:69> 'char const[48]' lvalue ->c 0x563d993e1e70
|             |   `-CXXMemberCallExpr 0x563d993ef460 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563d993ef430 <col:60> '<bound member function type>' ->xanno 0x563d993d6fb8
|             |       `-CXXThisExpr 0x563d993ef420 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563d993ef4e8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563d993ef4b0 <col:73> 'int' lvalue ParmVar 0x563d993d9ef0 'i' 'int'
|-CXXMethodDecl 0x563d993da238 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x563d993da0a8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x563d993da120 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x563d993efd18 <col:41, line:528:5>
|   |-ParenExpr 0x563d993efaa0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x563d993efa70 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563d993ef790 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563d993ef760 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563d993ef670 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563d993ef658 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563d993ef618 <col:23> 'int' lvalue ParmVar 0x563d993da0a8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563d993ef638 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563d993ef740 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563d993ef728 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563d993ef690 <col:33> 'int' lvalue ParmVar 0x563d993da0a8 'i' 'int'
|   |   |     `-BinaryOperator 0x563d993ef708 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563d993ef6f0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563d993ef6b0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563d993d73a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563d993ef6d0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x563d993ef7f0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563d993ef7d0 <col:60> 'int' 0
|   |   `-CallExpr 0x563d993ef9d0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563d993ef9b8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563d993ef998 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563d98f43cc0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563d993efa10 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d993ef860 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x563d993efa28 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d993ef898 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563d993efa40 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563d993ef8d0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x563d993efa58 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563d993ef980 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563d993ef968 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563d993ef928 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x563d993efcf8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x563d993efca8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x563d993efc78 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x563d993efc20 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x563d993efbe0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x563d993efb90 <col:47, col:56> 'char [48]' lvalue ->c 0x563d993e1e70
|     |     |   `-CXXMemberCallExpr 0x563d993efb70 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x563d993efb40 <col:47> '<bound member function type>' ->xanno 0x563d993d7158
|     |     |       `-CXXThisExpr 0x563d993efb30 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x563d993efbf8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x563d993efbc0 <col:60> 'int' lvalue ParmVar 0x563d993da0a8 'i' 'int'
|     `-ImplicitCastExpr 0x563d993efce0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x563d993efcc0 <col:65> 'int16_t':'short' lvalue ParmVar 0x563d993da120 'x' 'int16_t':'short'
|-CXXMethodDecl 0x563d993da3f8 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x563d993da300 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x563d993f03e8 <col:36, line:541:5>
|   |-ParenExpr 0x563d993f0188 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x563d993f0158 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563d993efeb0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563d993efe80 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563d993efd90 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563d993efd78 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563d993efd38 <col:23> 'int' lvalue ParmVar 0x563d993da300 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563d993efd58 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563d993efe60 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563d993efe48 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563d993efdb0 <col:33> 'int' lvalue ParmVar 0x563d993da300 'i' 'int'
|   |   |     `-BinaryOperator 0x563d993efe28 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563d993efe10 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563d993efdd0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563d993d73a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563d993efdf0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x563d993eff10 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563d993efef0 <col:60> 'int' 0
|   |   `-CallExpr 0x563d993f00b8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563d993f00a0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563d993f0080 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563d98f43cc0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563d993f00f8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d993eff80 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x563d993f0110 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d993effb8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563d993f0128 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563d993efff0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x563d993f0140 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563d993f0068 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563d993f0050 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563d993f0010 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x563d993f03d8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x563d993f03c0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x563d993f03a8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563d993f0378 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x563d993f0320 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x563d993f02f0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563d993f02a0 <col:61, col:70> 'char const[48]' lvalue ->c 0x563d993e1e70
|             |   `-CXXMemberCallExpr 0x563d993f0280 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563d993f0250 <col:61> '<bound member function type>' ->xanno 0x563d993d6fb8
|             |       `-CXXThisExpr 0x563d993f0240 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563d993f0308 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563d993f02d0 <col:74> 'int' lvalue ParmVar 0x563d993da300 'i' 'int'
|-CXXMethodDecl 0x563d993da5c8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x563d993da4b8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x563d993da530 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563d993da678 <col:20>
| `-OptimizeNoneAttr 0x563d993da6d0 <col:30>
|-CXXMethodDecl 0x563d993da808 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x563d993da710 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x563d993f0ab8 <col:35, line:562:5>
|   |-ParenExpr 0x563d993f0858 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x563d993f0828 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563d993f0580 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563d993f0550 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563d993f0460 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563d993f0448 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563d993f0408 <col:23> 'int' lvalue ParmVar 0x563d993da710 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563d993f0428 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563d993f0530 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563d993f0518 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563d993f0480 <col:33> 'int' lvalue ParmVar 0x563d993da710 'i' 'int'
|   |   |     `-BinaryOperator 0x563d993f04f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563d993f04e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563d993f04a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563d993d73a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563d993f04c0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x563d993f05e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563d993f05c0 <col:60> 'int' 0
|   |   `-CallExpr 0x563d993f0788 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563d993f0770 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563d993f0750 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563d98f43cc0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563d993f07c8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d993f0650 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x563d993f07e0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d993f0688 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563d993f07f8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563d993f06c0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x563d993f0810 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563d993f0738 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563d993f0720 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563d993f06e0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x563d993f0aa8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x563d993f0a90 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x563d993f0a78 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563d993f0a48 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x563d993f09f0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x563d993f09c0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563d993f0970 <col:60, col:69> 'char const[48]' lvalue ->c 0x563d993e1e70
|             |   `-CXXMemberCallExpr 0x563d993f0950 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563d993f0920 <col:60> '<bound member function type>' ->xanno 0x563d993d6fb8
|             |       `-CXXThisExpr 0x563d993f0910 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563d993f09d8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563d993f09a0 <col:73> 'int' lvalue ParmVar 0x563d993da710 'i' 'int'
|-CXXMethodDecl 0x563d993daa18 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x563d993da8c8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x563d993da940 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x563d993f1198 <col:41, line:577:5>
|   |-ParenExpr 0x563d993f0f28 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x563d993f0ef8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563d993f0c50 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563d993f0c20 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563d993f0b30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563d993f0b18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563d993f0ad8 <col:23> 'int' lvalue ParmVar 0x563d993da8c8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563d993f0af8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563d993f0c00 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563d993f0be8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563d993f0b50 <col:33> 'int' lvalue ParmVar 0x563d993da8c8 'i' 'int'
|   |   |     `-BinaryOperator 0x563d993f0bc8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563d993f0bb0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563d993f0b70 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563d993d73a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563d993f0b90 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x563d993f0cb0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563d993f0c90 <col:60> 'int' 0
|   |   `-CallExpr 0x563d993f0e58 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563d993f0e40 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563d993f0e20 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563d98f43cc0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563d993f0e98 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d993f0d20 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x563d993f0eb0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d993f0d58 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563d993f0ec8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563d993f0d90 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x563d993f0ee0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563d993f0e08 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563d993f0df0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563d993f0db0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x563d993f1178 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x563d993f1128 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x563d993f10f8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x563d993f1098 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x563d993f1068 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x563d993f1018 <col:47, col:56> 'char [48]' lvalue ->c 0x563d993e1e70
|     |     |   `-CXXMemberCallExpr 0x563d993f0ff8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x563d993f0fc8 <col:47> '<bound member function type>' ->xanno 0x563d993d7158
|     |     |       `-CXXThisExpr 0x563d993f0fb8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x563d993f1080 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x563d993f1048 <col:60> 'int' lvalue ParmVar 0x563d993da8c8 'i' 'int'
|     `-ImplicitCastExpr 0x563d993f1160 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x563d993f1140 <col:65> 'int32_t':'int' lvalue ParmVar 0x563d993da940 'x' 'int32_t':'int'
|-CXXMethodDecl 0x563d993dabd8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x563d993daae0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x563d993f18c8 <col:36, line:591:5>
|   |-ParenExpr 0x563d993f1608 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x563d993f15d8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563d993f1330 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563d993f1300 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563d993f1210 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563d993f11f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563d993f11b8 <col:23> 'int' lvalue ParmVar 0x563d993daae0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563d993f11d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563d993f12e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563d993f12c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563d993f1230 <col:33> 'int' lvalue ParmVar 0x563d993daae0 'i' 'int'
|   |   |     `-BinaryOperator 0x563d993f12a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563d993f1290 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563d993f1250 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563d993d73a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563d993f1270 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x563d993f1390 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563d993f1370 <col:60> 'int' 0
|   |   `-CallExpr 0x563d993f1538 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563d993f1520 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563d993f1500 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563d98f43cc0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563d993f1578 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d993f1400 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x563d993f1590 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d993f1438 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563d993f15a8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563d993f1470 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x563d993f15c0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563d993f14e8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563d993f14d0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563d993f1490 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x563d993f18b8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x563d993f18a0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x563d993f1888 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563d993f1858 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x563d993f17d0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x563d993f17a0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563d993f1750 <col:61, col:70> 'char const[48]' lvalue ->c 0x563d993e1e70
|             |   `-CXXMemberCallExpr 0x563d993f1730 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563d993f1700 <col:61> '<bound member function type>' ->xanno 0x563d993d6fb8
|             |       `-CXXThisExpr 0x563d993f16f0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563d993f17b8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563d993f1780 <col:74> 'int' lvalue ParmVar 0x563d993daae0 'i' 'int'
|-CXXMethodDecl 0x563d993dae28 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x563d993dac98 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x563d993dad10 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x563d993f1fa8 <col:42, line:606:5>
|   |-ParenExpr 0x563d993f1d38 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x563d993f1d08 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563d993f1a60 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563d993f1a30 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563d993f1940 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563d993f1928 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563d993f18e8 <col:23> 'int' lvalue ParmVar 0x563d993dac98 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563d993f1908 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563d993f1a10 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563d993f19f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563d993f1960 <col:33> 'int' lvalue ParmVar 0x563d993dac98 'i' 'int'
|   |   |     `-BinaryOperator 0x563d993f19d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563d993f19c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563d993f1980 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563d993d73a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563d993f19a0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x563d993f1ac0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563d993f1aa0 <col:60> 'int' 0
|   |   `-CallExpr 0x563d993f1c68 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563d993f1c50 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563d993f1c30 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563d98f43cc0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563d993f1ca8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d993f1b30 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x563d993f1cc0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d993f1b68 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563d993f1cd8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563d993f1ba0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x563d993f1cf0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563d993f1c18 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563d993f1c00 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563d993f1bc0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x563d993f1f88 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x563d993f1f38 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x563d993f1f08 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x563d993f1ea8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x563d993f1e78 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x563d993f1e28 <col:48, col:57> 'char [48]' lvalue ->c 0x563d993e1e70
|     |     |   `-CXXMemberCallExpr 0x563d993f1e08 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x563d993f1dd8 <col:48> '<bound member function type>' ->xanno 0x563d993d7158
|     |     |       `-CXXThisExpr 0x563d993f1dc8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x563d993f1e90 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x563d993f1e58 <col:61> 'int' lvalue ParmVar 0x563d993dac98 'i' 'int'
|     `-ImplicitCastExpr 0x563d993f1f70 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x563d993f1f50 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x563d993dad10 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x563d993dafc0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x563d993daef0 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x563d993f2818 <col:33, line:620:5>
|   |-ParenExpr 0x563d993f2590 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x563d993f2560 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x563d993f21b0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563d993f2180 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563d993f2020 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563d993f2008 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563d993f1fc8 <col:23> 'int' lvalue ParmVar 0x563d993daef0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563d993f1fe8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563d993f2160 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x563d993f2148 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563d993f2040 <col:33> 'int' lvalue ParmVar 0x563d993daef0 'i' 'int'
|   |   |     `-BinaryOperator 0x563d993f2128 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563d993f2110 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563d993f2060 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563d993d73a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x563d993f20e8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x563d993f20d0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x563d993f2098 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x563d993f2210 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563d993f21f0 <col:79> 'int' 0
|   |   `-CallExpr 0x563d993f24c0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x563d993f24a8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563d993f2488 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563d98f43cc0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563d993f2500 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d993f22f8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x563d993f2518 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d993f2340 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563d993f2530 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563d993f2378 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x563d993f2548 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563d993f2470 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563d993f2458 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563d993f2418 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x563d993f2808 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x563d993f27f0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x563d993f27d8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563d993f27a8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x563d993f2720 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x563d993f26f0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563d993f26a0 <col:67, col:76> 'char const[48]' lvalue ->c 0x563d993e1e70
|             |   `-CXXMemberCallExpr 0x563d993f2680 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563d993f2650 <col:67> '<bound member function type>' ->xanno 0x563d993d6fb8
|             |       `-CXXThisExpr 0x563d993f2640 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563d993f2708 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563d993f26d0 <col:80> 'int' lvalue ParmVar 0x563d993daef0 'i' 'int'
|-CXXMethodDecl 0x563d993db1d8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x563d993db080 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x563d993db100 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x563d993f3040 <col:45, line:635:5>
|   |-ParenExpr 0x563d993f2d88 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x563d993f2d58 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x563d993f2a20 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563d993f29f0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563d993f2890 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563d993f2878 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563d993f2838 <col:23> 'int' lvalue ParmVar 0x563d993db080 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563d993f2858 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563d993f29d0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x563d993f29b8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563d993f28b0 <col:33> 'int' lvalue ParmVar 0x563d993db080 'i' 'int'
|   |   |     `-BinaryOperator 0x563d993f2998 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563d993f2980 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563d993f28d0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563d993d73a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x563d993f2958 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x563d993f2940 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x563d993f2908 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x563d993f2a80 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563d993f2a60 <col:79> 'int' 0
|   |   `-CallExpr 0x563d993f2cb8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x563d993f2ca0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563d993f2c80 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563d98f43cc0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563d993f2cf8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d993f2af0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x563d993f2d10 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563d993f2b38 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563d993f2d28 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563d993f2b70 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x563d993f2d40 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563d993f2c68 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563d993f2c50 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563d993f2c08 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x563d993f3020 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x563d993f2f88 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x563d993f2f58 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x563d993f2ef8 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x563d993f2ec8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x563d993f2e78 <col:54, col:63> 'char [48]' lvalue ->c 0x563d993e1e70
|     |     |   `-CXXMemberCallExpr 0x563d993f2e58 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x563d993f2e28 <col:54> '<bound member function type>' ->xanno 0x563d993d7158
|     |     |       `-CXXThisExpr 0x563d993f2e18 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x563d993f2ee0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x563d993f2ea8 <col:67> 'int' lvalue ParmVar 0x563d993db080 'i' 'int'
|     `-CXXConstCastExpr 0x563d993f2ff0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x563d993f2fd8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x563d993f2fa0 <col:91> 'const void *' lvalue ParmVar 0x563d993db100 'x' 'const void *'
|-CXXMethodDecl 0x563d993db2a8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x563d993f30c8 <col:34, line:640:5>
|   `-ReturnStmt 0x563d993f30b8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x563d993f30a0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x563d993f3070 <col:16> 'Packet *' lvalue ->_data_packet 0x563d993e2a28
|         `-CXXThisExpr 0x563d993f3060 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x563d993db3e8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x563d993db358 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563d993ec188 <col:46> 'bool' true
|-CXXMethodDecl 0x563d993db568 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x563d993db4a0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x563d993db610 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x563d993dbdc0 <line:660:22> "" ""
| |-EnumConstantDecl 0x563d993db710 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563d993dbe30 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d993db6f0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x563d993db6d0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x563d993d0870 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x563d993db7a0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563d993dbe48 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d993db780 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x563d993db760 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x563d993d0900 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x563d993db830 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563d993dbe60 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d993db810 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x563d993db7f0 <col:21> 'int' 0
| |-EnumConstantDecl 0x563d993db8c0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563d993dbe78 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d993db8a0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x563d993db880 <col:19> 'int' 16
| |-EnumConstantDecl 0x563d993db950 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563d993dbe90 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d993db930 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x563d993db910 <col:21> 'int' 16
| |-EnumConstantDecl 0x563d993db9e0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563d993dbea8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d993db9c0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x563d993db9a0 <col:19> 'int' 32
| |-EnumConstantDecl 0x563d993dba70 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563d993dbec0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d993dba50 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x563d993dba30 <col:19> 'int' EnumConstant 0x563d993db8c0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x563d993dbb00 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563d993dbed8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d993dbae0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x563d993dbac0 <col:19> 'int' EnumConstant 0x563d993db9e0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x563d993dbbd0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563d993dbef0 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d993dbbb0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x563d993dbb90 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x563d993dbb50 <col:23> 'int' EnumConstant 0x563d993dbb00 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x563d993dbb70 <col:40> 'int' 2
| |-EnumConstantDecl 0x563d993dbca0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563d993dbf08 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563d993dbc80 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x563d993dbc60 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x563d993dbc20 <col:23> 'int' EnumConstant 0x563d993dbb00 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x563d993dbc40 <col:40> 'int' 4
| `-EnumConstantDecl 0x563d993dbd70 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x563d993dbf20 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563d993dbd50 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x563d993dbd30 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x563d993dbcf0 <col:23> 'int' EnumConstant 0x563d993dbb00 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x563d993dbd10 <col:40> 'int' 8
|-CXXMethodDecl 0x563d993dbf60 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x563d993dc000 <col:68> "" ""
|-CXXMethodDecl 0x563d993dc098 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x563d993dc138 <col:45> "" ""
|-CXXMethodDecl 0x563d993dc1d0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x563d993dc270 <col:57> "" ""
|-CXXMethodDecl 0x563d993dc308 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x563d993dc3a8 <col:45> "" ""
|-CXXMethodDecl 0x563d993dc440 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x563d993dc4e0 <col:57> "" ""
|-CXXMethodDecl 0x563d993dc570 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x563d993dc610 <col:51> "" ""
|-CXXMethodDecl 0x563d993dc6a0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x563d993dc740 <col:63> "" ""
|-CXXMethodDecl 0x563d993dc7d0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x563d993dc870 <col:53> "" ""
|-CXXMethodDecl 0x563d993dc900 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x563d993dc9a0 <col:65> "" ""
|-CXXMethodDecl 0x563d993dcab8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x563d993dca28 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x563d993dcb60 <col:61> "" ""
|-CXXMethodDecl 0x563d993dccf8 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x563d993dcbe8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x563d993dcc60 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x563d993dcda8 <col:67> "" ""
|-CXXMethodDecl 0x563d993dcec0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x563d993dce30 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x563d993dcf68 <col:63> "" ""
|-CXXMethodDecl 0x563d993dd100 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x563d993dcff0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x563d993dd068 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x563d993dd1b0 <col:69> "" ""
|-CXXMethodDecl 0x563d993dd2c8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x563d993dd238 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x563d993dd370 <col:63> "" ""
|-CXXMethodDecl 0x563d993dfa48 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x563d993df938 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x563d993df9b0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563d993dfaf8 <col:69> "" ""
|-CXXMethodDecl 0x563d993dfc10 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x563d993dfb80 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x563d993dfcb8 <col:62> "" ""
|-CXXMethodDecl 0x563d993dfe50 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x563d993dfd40 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x563d993dfdb8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x563d993dff00 <col:68> "" ""
|-CXXMethodDecl 0x563d993e0018 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x563d993dff88 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x563d993e00c0 <col:63> "" ""
|-CXXMethodDecl 0x563d993e0258 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x563d993e0148 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x563d993e01c0 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x563d993e0308 <col:69> "" ""
|-CXXMethodDecl 0x563d993e0398 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x563d993e0438 <col:64> "" ""
|-CXXMethodDecl 0x563d993e04c8 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x563d993e0568 <col:52> "" ""
|-CXXMethodDecl 0x563d993e05f8 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x563d993e0698 <col:67> "" ""
|-CXXMethodDecl 0x563d993e0728 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x563d993e07c8 <col:55> "" ""
|-CXXMethodDecl 0x563d993e08e0 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x563d993e0850 <col:32> col:35 'int'
| `-DeprecatedAttr 0x563d993e0988 <col:58> "" ""
|-CXXMethodDecl 0x563d993e0b20 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x563d993e0a10 <col:33> col:36 'int'
| |-ParmVarDecl 0x563d993e0a88 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x563d993e0bd0 <col:62> "" ""
|-CXXMethodDecl 0x563d993e0ce8 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x563d993e0c58 <col:32> col:35 'int'
| `-DeprecatedAttr 0x563d993e0d90 <col:58> "" ""
|-CXXMethodDecl 0x563d993e0f28 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x563d993e0e18 <col:33> col:36 'int'
| |-ParmVarDecl 0x563d993e0e90 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x563d993e0fd8 <col:62> "" ""
|-CXXMethodDecl 0x563d993e10f0 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x563d993e1060 <col:34> col:37 'int'
| `-DeprecatedAttr 0x563d993e1198 <col:60> "" ""
|-CXXMethodDecl 0x563d993e1330 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x563d993e1220 <col:34> col:37 'int'
| |-ParmVarDecl 0x563d993e1298 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x563d993e13e0 <col:64> "" ""
|-CXXMethodDecl 0x563d993e14f8 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x563d993e1468 <col:32> col:35 'int'
| `-DeprecatedAttr 0x563d993e15a0 <col:58> "" ""
|-CXXMethodDecl 0x563d993e1738 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x563d993e1628 <col:33> col:36 'int'
| |-ParmVarDecl 0x563d993e16a0 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x563d993e17e8 <col:62> "" ""
|-CXXMethodDecl 0x563d993e1900 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x563d993e1870 <col:33> col:36 'int'
| `-DeprecatedAttr 0x563d993e19a8 <col:59> "" ""
|-CXXMethodDecl 0x563d993e1b40 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x563d993e1a30 <col:33> col:36 'int'
| |-ParmVarDecl 0x563d993e1aa8 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563d993e1bf0 <col:63> "" ""
|-AccessSpecDecl 0x563d993e1c60 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x563d993e1c88 prev 0x563d993d6e90 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563d993e1d80 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x563d993e1e70 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x563d993e1f98 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x563d993e2118 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x563d993e2298 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x563d993e2418 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x563d993f3248 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x563d993f3ab8 <col:11>
| |-CXXDestructorDecl 0x563d993f3320 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x563d993f3458 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x563d993f3458
| | `-ParmVarDecl 0x563d993f3568 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x563d993f3608 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x563d993f3608
| | `-ParmVarDecl 0x563d993f3718 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x563d993f64d8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x563d993f65e8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x563d993f6868 <col:11>
| |   `-ReturnStmt 0x563d993f6858 <col:11>
| |     `-UnaryOperator 0x563d993f6840 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x563d993f6830 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x563d993f6658 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x563d993f6658
|   `-ParmVarDecl 0x563d993f6768 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x563d993e2480 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563d993e2598 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x563d993e2638 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x563d993e26a0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x563d993e2708 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x563d993e2770 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x563d993e27d0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x563d993e2890 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x563d993e28f0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x563d993e2950 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x563d993f3158 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x563d993e2638 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x563d993f3ac8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x563d993f3b20 <col:12>
| |-CXXConstructorDecl 0x563d993f3788 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x563d993f3788
| | `-ParmVarDecl 0x563d993f3898 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x563d993f3938 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x563d993f3938
| | `-ParmVarDecl 0x563d993f3a48 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x563d993f5bc0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x563d993e29c8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x563d993e2a28 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x563d993e2a90 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x563d993e2af8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x563d993e2b60 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x563d993e2bc8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x563d993e2c28 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x563d993e2c88 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x563d993e2cf0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x563d993e2d78 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x563d993e29c8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x563d993f30f0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x563d993e2c28 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x563d993f3b30 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x563d993f3b90 <col:21, line:755:5>
|-CXXConstructorDecl 0x563d993e2f18 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x563d993e2e58 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x563d993e3010 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x563d993e31f8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x563d993e3100 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x563d993e34c8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x563d993e32b0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563d993e3328 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x563d993e33a0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563d993e36e8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x563d993e3598 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x563d993e3610 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x563d993ebcc8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x563d993e37a8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x563d993e3820 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x563d993e3898 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x563d993ebe20 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x563d993ebd90 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563d993ebf68 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x563d993ebed8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x563d993ec060 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>
