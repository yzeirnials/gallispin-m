
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:18:2)
         0 |   uint32_t ip6_un1_flow
         4 |   uint16_t ip6_un1_plen
         6 |   uint8_t ip6_un1_nxt
         7 |   uint8_t ip6_un1_hlim
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:30:2)
     0:0-3 |   unsigned int ip6_un3_fc
     0:4-7 |   unsigned int ip6_un3_v
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:17:5)
         0 |   struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:18:2) ip6_un1
         0 |     uint32_t ip6_un1_flow
         4 |     uint16_t ip6_un1_plen
         6 |     uint8_t ip6_un1_nxt
         7 |     uint8_t ip6_un1_hlim
         0 |   uint8_t ip6_un2_vfc
         0 |   struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:30:2) ip6_un3
     0:0-3 |     unsigned int ip6_un3_fc
     0:4-7 |     unsigned int ip6_un3_v
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56085c5a9c78 prev 0x56085c5a1418 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56085c5a9d70 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x56085c5a9e00 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x56085c5a9e78 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x56085c5a9f38 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x56085c5aa000 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x56085c5aa178 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x56085c5aa0b0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x56085c5aa220 <col:24>
| `-OptimizeNoneAttr 0x56085c5aa278 <col:34>
|-CXXMethodDecl 0x56085c5aa2c0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x56085c5aa578 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x56085c5aa370 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x56085c5aa3e8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x56085c5aa468 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x56085c5aa630 <line:229:7, col:14> col:7 private
|-FieldDecl 0x56085c5aa668 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x56085c5aa6d0 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x56085c5aa758 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x56085c5aaa78 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x56085c5aa810 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x56085c5aa888 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x56085c5aa900 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x56085c5aa980 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x56085c5aab90 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x56085c5b2508 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x56085c5b2508
| `-ParmVarDecl 0x56085c5b2618 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x56085c5b26b8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x56085c5b26b8
| `-ParmVarDecl 0x56085c5b27c8 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x56085c5b8328 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56085c59cc90 prev 0x56085c59ca10 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56085c59cd88 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x56085c59ce18 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x56085c59ce78 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x56085c59cf68 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x56085c59d068 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x56085c59d238 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x56085c59d0e8 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x56085c59d160 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x56085c59d3c8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x56085c59d300 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x56085c59d470 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x56085c59d5a8 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x56085c59d4e0 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x56085c59d748 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x56085c59d688 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x56085c59d8e8 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x56085c59d828 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x56085c59d990 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x56085c59da90 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x56085c59db70 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c59da70 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x56085c59da50 <col:26> 'int' 1
| `-EnumConstantDecl 0x56085c59db20 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x56085c59db88 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56085c59db00 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x56085c59dae0 <col:44> 'int' 2
|-CXXMethodDecl 0x56085c59dcd0 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x56085c59dbb8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x56085c59dc38 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x56085c59de28 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x56085c59dd98 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x56085c59e068 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x56085c59dee8 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x56085c59df60 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x56085c59e118 <col:20>
| `-OptimizeNoneAttr 0x56085c59e170 <col:30>
|-CXXMethodDecl 0x56085c59e278 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x56085c59e1b0 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x56085c59e320 <col:20>
| `-OptimizeNoneAttr 0x56085c59e378 <col:30>
|-CXXMethodDecl 0x56085c59e3c8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x56085c59e490 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x56085c59e5a8 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x56085c59e630 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x56085c59e6b8 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x56085c59e740 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x56085c59e7c8 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x56085c59e858 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x56085c59e918 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x56085c59e9a0 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x56085c59ea28 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x56085c59eab0 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x56085c59eb38 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x56085c59ebc0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x56085c59ec50 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x56085c59ed10 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x56085c59eda0 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x56085c59eef0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x56085c59ee58 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x56085c59f080 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x56085c59efb0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x56085c59f330 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x56085c59f138 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x56085c59f1b8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x56085c59f238 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x56085c59f3e8 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x56085c59f4f0 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56085c59f780 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c59f4d0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x56085c59f4b0 <col:33> 'int' 0
| |-EnumConstantDecl 0x56085c59f580 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56085c59f798 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c59f560 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x56085c59f540 <col:32> 'int' 20
| |-EnumConstantDecl 0x56085c59f610 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56085c59f7b0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c59f5f0 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x56085c59f5d0 <col:38> 'int' 90
| |-EnumConstantDecl 0x56085c59f6a0 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x56085c59f7c8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c59f680 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x56085c59f660 <col:35> 'int' 100
| `-EnumConstantDecl 0x56085c59f730 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x56085c59f7e0 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56085c59f710 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x56085c59f6f0 <col:32> 'int' 2000
|-CXXMethodDecl 0x56085c59f820 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x56085c59fc60 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56085c59fad0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x56085c59fb48 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56085c59fd30 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x56085c59feb0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x56085c59fde0 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56085c5a00b8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56085c59ff68 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x56085c59ffe0 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56085c5a01b8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x56085c5a0258 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x56085c5a0320 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x56085c5a03b0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x56085c5a05e0 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c5a0390 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x56085c5a0370 <col:36> 'int' EnumConstant 0x56085c5a0320 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x56085c5a0400 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56085c5a0450 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56085c5a04a0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56085c5a04f0 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x56085c5a0540 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x56085c5a0590 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x56085c5a06c8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x56085c5a0608 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x56085c5a0790 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x56085c5a0850 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x56085c5a0910 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x56085c5a09d0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x56085c5a0ae8 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x56085c5a0bb0 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x56085c5a0d30 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x56085c5a0c60 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x56085c5a0e58 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x56085c5a1058 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x56085c5a0f08 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x56085c5a0f88 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x56085c5ae9a8 <col:54, line:127:5>
|   |-ParenExpr 0x56085c5ae858 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x56085c5ae828 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x56085c5ae518 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x56085c5ae4f0 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x56085c5ae4d8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x56085c5ae4c0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x56085c5ae490 <col:31> 'Router *' lvalue ->_router 0x56085c5ac370
|   |   |         `-CXXThisExpr 0x56085c5ae480 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x56085c5ae578 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56085c5ae558 <col:48> 'int' 0
|   |   `-CallExpr 0x56085c5ae788 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x56085c5ae770 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56085c5ae750 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56085c0d70f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56085c5ae7c8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c5ae5e8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x56085c5ae7e0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c5ae608 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x56085c5ae7f8 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56085c5ae640 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x56085c5ae810 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56085c5ae738 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56085c5ae720 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56085c5ae6d8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x56085c5ae8f0 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x56085c5ae888 <col:9> 'Router *' lvalue ->_router 0x56085c5ac370
|   | | `-CXXThisExpr 0x56085c5ae878 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x56085c5ae8d8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x56085c5ae8b8 <col:19> 'Router *' lvalue ParmVar 0x56085c5a0f08 'r' 'Router *'
|   `-BinaryOperator 0x56085c5ae988 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x56085c5ae920 <col:9> 'int' lvalue ->_eindex 0x56085c5ac3d8
|     | `-CXXThisExpr 0x56085c5ae910 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x56085c5ae970 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x56085c5ae950 <col:19> 'int' lvalue ParmVar 0x56085c5a0f88 'eindex' 'int'
|-CXXMethodDecl 0x56085c5a11e0 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x56085c5a1118 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x56085c5a12b0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x56085c5a1378 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x56085c5a1418 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x56085c5a1668 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x56085c5a14e0 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x56085c5a1560 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x56085c5a1718 <col:20>
| `-OptimizeNoneAttr 0x56085c5a1770 <col:30>
|-CXXMethodDecl 0x56085c5a1878 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x56085c5a17b0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x56085c5a1920 <col:20>
| `-OptimizeNoneAttr 0x56085c5a1978 <col:30>
|-CXXMethodDecl 0x56085c5a1a48 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x56085c5a19b8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x56085c5a1af0 <col:20>
| `-OptimizeNoneAttr 0x56085c5a1b48 <col:30>
|-CXXMethodDecl 0x56085c5a1cd8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x56085c5a1b80 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x56085c5a1c00 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x56085c5a1e68 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x56085c5a1da0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x56085c5a1fb8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x56085c5a1f28 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x56085c5a2108 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x56085c5a2078 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x56085c5a2258 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x56085c5a21c8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x56085c5a2518 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x56085c5a2310 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x56085c5a2390 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x56085c5a2438 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x56085c5a25f0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x56085c5a26b0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x56085c5a2980 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x56085c5a2830 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x56085c5a28a8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x56085c5a2aa8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x56085c5a2c80 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x56085c5a2b60 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x56085c5a2be0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x56085c5a2e68 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x56085c5a2d48 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x56085c5a2dc8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x56085c5a31d8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x56085c5a2f28 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56085c5a2fa0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56085c5a3020 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56085c5adf90 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56085c5adf70 <col:106> 'int' 0
| `-ParmVarDecl 0x56085c5a3098 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56085c5adfc8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56085c5adfa8 <col:126> 'int' 0
|-CXXMethodDecl 0x56085c5a3578 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56085c5a32a8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56085c5a3340 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56085c5a33c0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x56085c5a3438 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56085c5ae000 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56085c5adfe0 <col:114> 'int' 0
|-CXXMethodDecl 0x56085c5a3908 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56085c5a3650 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x56085c5a36c8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x56085c5a3748 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x56085c5ae018 <col:96> 'int' 0
| `-ParmVarDecl 0x56085c5a37c0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56085c5ae058 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56085c5ae038 <col:116> 'int' 0
|-CXXMethodDecl 0x56085c5a3c88 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x56085c5a39d8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x56085c5a3a50 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56085c5a3ad0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56085c5ae090 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56085c5ae070 <col:109> 'int' 0
| `-ParmVarDecl 0x56085c5a3b48 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56085c5ae0c8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56085c5ae0a8 <col:129> 'int' 0
|-CXXMethodDecl 0x56085c5a4008 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56085c5a3d58 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x56085c5a3dd0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56085c5a3e50 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x56085c5a3ec8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56085c5ae100 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56085c5ae0e0 <col:117> 'int' 0
|-CXXMethodDecl 0x56085c5a4398 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x56085c5a40e0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56085c5a4158 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x56085c5a41d8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x56085c5ae118 <col:99> 'int' 0
| `-ParmVarDecl 0x56085c5a4250 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x56085c5ae158 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x56085c5ae138 <col:119> 'int' 0
|-CXXMethodDecl 0x56085c5a47b8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x56085c5a4468 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x56085c5a44e8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x56085c5a4560 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56085c5a45e0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x56085c5ae190 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x56085c5ae170 <col:108> 'int' 0
| `-ParmVarDecl 0x56085c5a4660 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x56085c5ae1c8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x56085c5ae1a8 <col:141> 'int' 0
|-CXXMethodDecl 0x56085c5a4bd8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x56085c5a4890 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x56085c5a4910 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x56085c5a4988 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56085c5a4a08 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x56085c5a4a88 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x56085c5ae1e0 <col:121> 'int' 0
|-CXXMethodDecl 0x56085c5a5008 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x56085c5a4cb8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x56085c5a4d38 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x56085c5a4db0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x56085c5a4e30 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x56085c5ae200 <col:98> 'int' 0
| `-ParmVarDecl 0x56085c5a4eb0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x56085c5ae220 <col:123> 'int' 0
|-CXXMethodDecl 0x56085c5a52d0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x56085c5a50e0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x56085c5a5160 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x56085c5a51e0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x56085c5ae240 <col:80> 'int' 0
|-EnumDecl 0x56085c5a5388 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x56085c5a5490 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56085c5a5720 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c5a5470 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x56085c5a5450 <col:42> 'int' 1
| |-EnumConstantDecl 0x56085c5a5520 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56085c5a5738 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c5a5500 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x56085c5a54e0 <col:40> 'int' 2
| |-EnumConstantDecl 0x56085c5a55b0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56085c5a5750 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c5a5590 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x56085c5a5570 <col:44> 'int' 4
| |-EnumConstantDecl 0x56085c5a5640 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x56085c5a5768 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c5a5620 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x56085c5a5600 <col:36> 'int' 7
| `-EnumConstantDecl 0x56085c5a56d0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x56085c5a5780 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56085c5a56b0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x56085c5a5690 <col:34> 'int' 6
|-CXXMethodDecl 0x56085c5a5a38 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x56085c5a57a8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x56085c5a5848 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x56085c5a58c8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x56085c5a5940 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x56085c5ae2f8 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x56085c5ae2e0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x56085c5ae2c8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x56085c5ae2a8 <col:98, col:105> 'String' (CXXTemporary 0x56085c5ae2a8)
|           `-CXXTemporaryObjectExpr 0x56085c5ae270 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x56085c5a5cd8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x56085c5a5b08 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x56085c5a5b80 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x56085c5a5bf8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x56085c5ae3a8 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x56085c5ae390 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x56085c5ae378 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x56085c5ae358 <col:94, col:101> 'String' (CXXTemporary 0x56085c5ae358)
| |         `-CXXTemporaryObjectExpr 0x56085c5ae320 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x56085c5aeb90 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x56085c5aeb08 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x56085c5aead8 <col:9> '<bound member function type>' ->add_task_handlers 0x56085c5a5a38
|     | `-CXXThisExpr 0x56085c5aeac8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x56085c5aeb48 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x56085c5aea48 <col:27> 'Task *' lvalue ParmVar 0x56085c5a5b08 'task' 'Task *'
|     |-ImplicitCastExpr 0x56085c5aeb60 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x56085c5aea68 <col:33> 'NotifierSignal *' lvalue ParmVar 0x56085c5a5b80 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x56085c5aeb78 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x56085c5aea88 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x56085c5a56d0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x56085c5aeaa8 <col:62> 'const String' lvalue ParmVar 0x56085c5a5bf8 'prefix' 'const String &'
|-CXXMethodDecl 0x56085c5a5ee8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x56085c5a5da0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x56085c5a5e18 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x56085c5ae458 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x56085c5ae440 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x56085c5ae428 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x56085c5ae408 <col:70, col:77> 'String' (CXXTemporary 0x56085c5ae408)
| |         `-CXXTemporaryObjectExpr 0x56085c5ae3d0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x56085c5aed68 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x56085c5aece0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x56085c5aecb0 <col:9> '<bound member function type>' ->add_task_handlers 0x56085c5a5a38
|     | `-CXXThisExpr 0x56085c5aeca0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x56085c5aed20 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x56085c5aec20 <col:27> 'Task *' lvalue ParmVar 0x56085c5a5da0 'task' 'Task *'
|     |-ImplicitCastExpr 0x56085c5aed38 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x56085c5aec40 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x56085c5aed50 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x56085c5aec60 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x56085c5a56d0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x56085c5aec80 <col:57> 'const String' lvalue ParmVar 0x56085c5a5e18 'prefix' 'const String &'
|-CXXMethodDecl 0x56085c5a61c8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x56085c5a5fb0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56085c5a6030 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56085c5a60a8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x56085c5a6478 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x56085c5a6298 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56085c5a6318 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56085c5a6398 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x56085c5a6768 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x56085c5a6548 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56085c5a65c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56085c5a6640 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x56085c5a6a18 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x56085c5a6838 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56085c5a68b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56085c5a6938 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x56085c5a6cc8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x56085c5a6ae8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56085c5a6b68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56085c5a6be8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x56085c5a6f78 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x56085c5a6d98 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56085c5a6e18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56085c5a6e90 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x56085c5a7228 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x56085c5a7048 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56085c5a70c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56085c5a7148 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x56085c5a7538 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x56085c5a7350 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56085c5a73d0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56085c5a7450 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x56085c5a7818 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x56085c5a7608 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56085c5a7688 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56085c5a7730 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x56085c5a7af8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x56085c5a78e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56085c5a7968 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56085c5a7a10 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x56085c5a7d60 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x56085c5a7bc8 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x56085c5a7c48 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x56085c5a7cc0 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x56085c5a8008 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x56085c5a7e30 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x56085c5a7eb0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x56085c5a7f28 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x56085c5a82b8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x56085c5a80d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56085c5a8158 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56085c5a81d8 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x56085c5a8568 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x56085c5a8388 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56085c5a8408 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56085c5a8480 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x56085c5a8818 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x56085c5a8638 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56085c5a86b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56085c5a8730 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x56085c5a8ae8 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x56085c5a88e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56085c5a8968 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x56085c5a8a08 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x56085c5a8e18 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x56085c5a8bb8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x56085c5a8c38 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x56085c5a8cb0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x56085c5a8d28 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56085c5ae470 <col:93> 'bool' false
|-CXXMethodDecl 0x56085c5a9000 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56085c5a8ee8 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x56085c5a8f68 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x56085c5a91d8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56085c5a90c0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x56085c5a9140 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x56085c5a94b8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56085c5a9298 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x56085c5a9310 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x56085c5a9390 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x56085c5a9408 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x56085c5a97a8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x56085c5a9588 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x56085c5a9600 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x56085c5a9680 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x56085c5a96f8 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x56085c5a99e0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x56085c5a9880 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x56085c5a9900 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x56085c5a9bc8 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x56085c5a9aa8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x56085c5a9b28 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x56085c5a9c78 prev 0x56085c5a1418 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56085c5a9d70 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x56085c5a9e00 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x56085c5a9e78 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x56085c5a9f38 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x56085c5aa000 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x56085c5aa178 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x56085c5aa0b0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x56085c5aa220 <col:24>
| | `-OptimizeNoneAttr 0x56085c5aa278 <col:34>
| |-CXXMethodDecl 0x56085c5aa2c0 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x56085c5aa578 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x56085c5aa370 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x56085c5aa3e8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x56085c5aa468 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x56085c5aa630 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x56085c5aa668 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x56085c5aa6d0 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x56085c5aa758 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x56085c5aaa78 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x56085c5aa810 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x56085c5aa888 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x56085c5aa900 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x56085c5aa980 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x56085c5aab90 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x56085c5b2508 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x56085c5b2508
| | `-ParmVarDecl 0x56085c5b2618 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x56085c5b26b8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x56085c5b26b8
| | `-ParmVarDecl 0x56085c5b27c8 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x56085c5b8328 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56085c5aac08 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x56085c5aaca8 <col:38> "" ""
|-CXXMethodDecl 0x56085c5aad38 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x56085c5aadd8 <col:44> "" ""
|-AccessSpecDecl 0x56085c5aae48 <line:260:3, col:10> col:3 private
|-EnumDecl 0x56085c5aae70 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x56085c5aaf70 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x56085c5aafc0 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56085c5aaf50 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x56085c5aaf30 <col:27> 'int' 4
|-FieldDecl 0x56085c5ab078 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x56085c5ab228 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x56085c5ab2e0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x56085c5ac370 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x56085c5ac3d8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x56085c5ac528 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x56085c5ac468 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x56085c5ac6d8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x56085c5ac5e8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x56085c5ac8b8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x56085c5ac798 <col:20> col:23 'int'
| `-ParmVarDecl 0x56085c5ac818 <col:25> col:28 'int'
|-CXXMethodDecl 0x56085c5acb60 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x56085c5ac980 <col:23> col:26 'int'
| |-ParmVarDecl 0x56085c5aca00 <col:28> col:31 'int'
| `-ParmVarDecl 0x56085c5aca78 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x56085c5acc18 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x56085c5acce0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x56085c5acd30 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x56085c5acd80 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x56085c5acf60 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x56085c5ace10 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x56085c5ace88 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x56085c5ad208 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x56085c5ad028 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x56085c5ad0a8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x56085c5ad120 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x56085c5ad428 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x56085c5ad2d8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x56085c5ad358 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x56085c5ad760 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x56085c5ad4e8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x56085c5ad568 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x56085c5ad5e0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x56085c5ad660 <col:57> col:60 'int'
|-CXXMethodDecl 0x56085c5ad948 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x56085c5ad830 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x56085c5ad8b0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x56085c5ada98 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x56085c5ada08 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x56085c5ade18 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x56085c5adb58 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x56085c5adbd8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x56085c5adc50 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x56085c5adcd0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x56085c5adf30 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IP6Mirror
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56085c5b5678 <../elements/ip6/ip6mirror.hh:27:1, line:39:1> line:27:7 class IP6Mirror definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x56085c5b57d8 <col:1, col:7> col:7 implicit referenced class IP6Mirror
|-AccessSpecDecl 0x56085c5b5868 <line:29:2, col:8> col:2 public
|-CXXConstructorDecl 0x56085c5b58f0 <line:31:3, col:13> col:3 IP6Mirror 'void ()'
|-CXXDestructorDecl 0x56085c5b59e0 <line:32:3, col:14> col:3 ~IP6Mirror 'void ()' noexcept-unevaluated 0x56085c5b59e0
| `-Overrides: [ 0x56085c59cf68 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x56085c5b5b10 <line:34:3, col:56> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x56085c59e3c8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x56085c5b6168 <col:34, col:56>
|   `-ReturnStmt 0x56085c5b6158 <col:36, col:43>
|     `-ImplicitCastExpr 0x56085c5b6140 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x56085c5b6118 <col:43> 'const char [10]' lvalue "IP6Mirror"
|-CXXMethodDecl 0x56085c5b5bd8 <line:35:3, col:54> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x56085c59e490 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x56085c5b61c8 <col:34, col:54>
|   `-ReturnStmt 0x56085c5b61b8 <col:36, col:43>
|     `-ImplicitCastExpr 0x56085c5b61a0 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x56085c5b6180 <col:43> 'const char []' lvalue Var 0x56085c59e740 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x56085c5b5d18 <line:37:3, col:33> col:11 simple_action 'Packet *(Packet *)'
| |-Overrides: [ 0x56085c59d5a8 Element::simple_action 'Packet *(Packet *)' ]
| `-ParmVarDecl 0x56085c5b5c88 <col:25, col:32> col:33 'Packet *'
|-CXXConstructorDecl 0x56085c5b5de8 <line:27:7> col:7 implicit IP6Mirror 'void (const IP6Mirror &)' inline default_delete noexcept-unevaluated 0x56085c5b5de8
| `-ParmVarDecl 0x56085c5b5ef8 <col:7> col:7 'const IP6Mirror &'
`-CXXMethodDecl 0x56085c5b5f98 <col:7> col:7 implicit operator= 'IP6Mirror &(const IP6Mirror &)' inline default_delete noexcept-unevaluated 0x56085c5b5f98
  `-ParmVarDecl 0x56085c5b60a8 <col:7> col:7 'const IP6Mirror &'

Layout: <CGRecordLayout
  LLVMType:%class.IP6Mirror = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.IP6Mirror.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56085c35b740 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56085c35b858 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x56085c35b8e8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x56085c35b9b8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x56085c35baa0 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x56085c35bcb8 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56085c35bb60 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56085c35be68 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x56085c35bd70 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x56085c35bfb0 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x56085c35bf20 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x56085c35c0f8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56085c35c068 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56085c35c240 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x56085c35c1b0 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56085c35c308 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x56085c35c450 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x56085c35c3c0 <col:28> col:31 'int'
|-CXXMethodDecl 0x56085c35c518 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x56085c35c660 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x56085c35c5d0 <col:28> col:31 'int'
|-CXXMethodDecl 0x56085c35c7d8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x56085c35c718 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56085c35c920 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x56085c35c890 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56085c35c9e8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x56085c35cba8 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56085c35ca98 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56085c35cb10 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56085c35cdf8 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56085c35cc68 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56085c35cce0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56085c35cea8 <col:86> "" ""
|-CXXMethodDecl 0x56085c35d118 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x56085c35cf88 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x56085c35d000 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56085c35d2c8 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x56085c35d1d8 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x56085c35d478 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x56085c35d380 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x56085c35d748 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x56085c35d530 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x56085c35d5a8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56085c35d620 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56085c35da28 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x56085c35d810 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x56085c35d888 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56085c35d900 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56085c35dae0 <col:115> "" ""
|-AccessSpecDecl 0x56085c35db50 <line:84:3, col:10> col:3 private
|-FieldDecl 0x56085c35db88 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56085c35e090 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x56085c35e090
| `-ParmVarDecl 0x56085c35e198 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x56085c35e238 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x56085c35e238
| `-ParmVarDecl 0x56085c35e348 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x56085c393978 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56085c586780 <col:7>
|-CXXConstructorDecl 0x56085c393a50 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x56085c393a50
| `-ParmVarDecl 0x56085c393b68 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x56085c393bd8 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x56085c393bd8
| `-ParmVarDecl 0x56085c393ce8 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x56085c589180 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56085c575328 prev 0x56085c56a530 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56085c575420 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x56085c575510 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x56085c575638 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x56085c5757b8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x56085c575938 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x56085c575ab8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x56085c5868e8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56085c587158 <col:11>
|-CXXDestructorDecl 0x56085c5869c0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x56085c586af8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x56085c586af8
| `-ParmVarDecl 0x56085c586c08 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x56085c586ca8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56085c586ca8
| `-ParmVarDecl 0x56085c586db8 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x56085c589b78 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x56085c589c88 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x56085c589f08 <col:11>
|   `-ReturnStmt 0x56085c589ef8 <col:11>
|     `-UnaryOperator 0x56085c589ee0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56085c589ed0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x56085c589cf8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56085c589cf8
  `-ParmVarDecl 0x56085c589e08 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56085c575b20 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56085c575c38 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x56085c575cd8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x56085c575d40 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x56085c575da8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x56085c575e10 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x56085c575e70 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x56085c575f30 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x56085c575f90 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x56085c575ff0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x56085c5867f8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x56085c575cd8 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x56085c587168 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x56085c5871c0 <col:12>
|-CXXConstructorDecl 0x56085c586e28 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x56085c586e28
| `-ParmVarDecl 0x56085c586f38 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x56085c586fd8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x56085c586fd8
| `-ParmVarDecl 0x56085c5870e8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x56085c589260 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56085c563c40 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56085c563d58 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x56085c563de8 <col:16, col:22> col:16 public
|-EnumDecl 0x56085c563e10 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x56085c563f10 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x56085c563ff0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c563ef0 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x56085c563ed0 <col:21> 'int' 28
| `-EnumConstantDecl 0x56085c563fa0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x56085c564008 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56085c563f80 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x56085c563f60 <col:22> 'int' 64
|-CXXMethodDecl 0x56085c564348 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x56085c564030 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56085c5640b0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x56085c564128 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56085c5641a0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56085c564408 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x56085c564608 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x56085c564480 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x56085c5644f8 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56085c5646b8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x56085c564818 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x56085c564728 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56085c5648c0 <col:72> warn_unused_result ""
|-TypedefDecl 0x56085c564c20 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x56085c564bb0 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x56085c564b50 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x56085c564b10 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x56085c03d4e0 'void'
|       |-PointerType 0x56085c2e3dc0 'unsigned char *'
|       | `-BuiltinType 0x56085c03d5e0 'unsigned char'
|       |-TypedefType 0x56085c0e0390 'size_t' sugar
|       | |-Typedef 0x56085c0adbe0 'size_t'
|       | `-BuiltinType 0x56085c03d640 'unsigned long'
|       `-PointerType 0x56085c03dce0 'void *'
|         `-BuiltinType 0x56085c03d4e0 'void'
|-CXXMethodDecl 0x56085c565098 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x56085c564c90 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x56085c564d08 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56085c564da0 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x56085c564e20 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x56085c57f790 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x56085c57f778 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x56085c57f740 <col:58> 'int' 0
| |-ParmVarDecl 0x56085c564ea0 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x56085c57f7b8 <col:76> 'int' 0
| |-ParmVarDecl 0x56085c564f20 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x56085c57f7d8 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x56085c565168 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x56085c5651e8 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x56085c5652a8 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x56085c565348 <col:20>
| `-OptimizeNoneAttr 0x56085c5653a0 <col:30>
|-CXXMethodDecl 0x56085c565418 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x56085c5654b8 <col:20>
| `-OptimizeNoneAttr 0x56085c565510 <col:30>
|-CXXMethodDecl 0x56085c565588 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x56085c565628 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x56085c5656d8 <line:77:5, col:102> col:56 used uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x56085c565778 <col:20>
| |-OptimizeNoneAttr 0x56085c5657d0 <col:30>
| `-WarnUnusedResultAttr 0x56085c5657f8 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x56085c565850 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x56085c5658f0 <col:20>
| `-OptimizeNoneAttr 0x56085c565948 <col:30>
|-CXXMethodDecl 0x56085c565998 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x56085c565a38 <col:20>
| `-OptimizeNoneAttr 0x56085c565a90 <col:30>
|-CXXMethodDecl 0x56085c565ad8 <line:81:5, col:58> col:49 used length 'uint32_t () const'
| |-NoInlineAttr 0x56085c565b78 <col:20>
| `-OptimizeNoneAttr 0x56085c565bd0 <col:30>
|-CXXMethodDecl 0x56085c565c18 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x56085c565cd8 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x56085c565da0 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56085c565e68 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56085c565f28 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56085c566048 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x56085c57f8a0 <col:54, line:99:5>
|   `-ReturnStmt 0x56085c57f890 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x56085c57f878 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x56085c57f848 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56085c576328
|         `-CXXThisExpr 0x56085c57f838 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x56085c5661e8 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x56085c5660f8 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x56085c57f950 <col:67, line:103:5>
|   `-BinaryOperator 0x56085c57f930 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x56085c57f8c8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56085c576328
|     | `-CXXThisExpr 0x56085c57f8b8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x56085c57f918 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x56085c57f8f8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x56085c5660f8 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x56085c5662e0 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x56085c57f9d0 <col:33, line:107:5>
|   `-ReturnStmt 0x56085c57f9c0 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x56085c57f9a8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x56085c57f978 <col:16> 'void *' lvalue ->_destructor_argument 0x56085c576390
|         `-CXXThisExpr 0x56085c57f968 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x56085c5663a0 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x56085c580000 <col:25, line:113:5>
|   |-ParenExpr 0x56085c57fd48 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x56085c57fd18 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x56085c57fa88 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x56085c57fa60 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x56085c57fa28 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x56085c57f9f8 <col:24> '<bound member function type>' ->shared 0x56085c565418
|   |   |       `-ImplicitCastExpr 0x56085c57fa48 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x56085c57f9e8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x56085c57fae8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56085c57fac8 <col:42> 'int' 0
|   |   `-CallExpr 0x56085c57fc78 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x56085c57fc60 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56085c57fc40 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56085c0d70f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56085c57fcb8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c57fb58 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x56085c57fcd0 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c57fb80 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56085c57fce8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56085c57fbb8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x56085c57fd00 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56085c57fc28 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56085c57fc10 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56085c57fbd8 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x56085c57ff48 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x56085c57fd78 <col:2> 'unsigned char *' lvalue ->_head 0x56085c576130
|   | | `-CXXThisExpr 0x56085c57fd68 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x56085c57ff30 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x56085c57ff10 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x56085c57fdb8 <col:10> 'unsigned char *' lvalue ->_data 0x56085c576198
|   |     | `-CXXThisExpr 0x56085c57fda8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x56085c57fef8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x56085c57fed8 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x56085c57fdf8 <col:18> 'unsigned char *' lvalue ->_tail 0x56085c576200
|   |         | `-CXXThisExpr 0x56085c57fde8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x56085c57fec0 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x56085c57fea0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x56085c57fe38 <col:26> 'unsigned char *' lvalue ->_end 0x56085c576268
|   |             | `-CXXThisExpr 0x56085c57fe28 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x56085c57fe88 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x56085c57fe68 <col:33> 'int' 0
|   `-BinaryOperator 0x56085c57ffe0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x56085c57ff78 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x56085c576328
|     | `-CXXThisExpr 0x56085c57ff68 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x56085c57ffc8 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x56085c57ffa8 <col:16> 'int' 0
|-CXXMethodDecl 0x56085c5664e0 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56085c566450 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56085c566588 <col:20>
| |-OptimizeNoneAttr 0x56085c5665e0 <col:30>
| `-WarnUnusedResultAttr 0x56085c566608 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x56085c5666d8 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56085c566648 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56085c566780 <col:20>
| |-OptimizeNoneAttr 0x56085c5667d8 <col:30>
| `-WarnUnusedResultAttr 0x56085c566800 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x56085c566938 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x56085c566840 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56085c5669e0 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x56085c566ae0 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x56085c566a50 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56085c566b88 <col:20>
| `-OptimizeNoneAttr 0x56085c566be0 <col:30>
|-CXXMethodDecl 0x56085c566ca8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x56085c566c18 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56085c566d50 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x56085c566e50 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x56085c566dc0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x56085c566ef8 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x56085c566ff8 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x56085c566f68 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56085c5670a0 <col:20>
| `-OptimizeNoneAttr 0x56085c5670f8 <col:30>
|-CXXMethodDecl 0x56085c567288 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x56085c567138 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x56085c5671b0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x56085c57f7f8 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x56085c567338 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x56085c567538 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56085c5673b0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x56085c567428 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56085c567748 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x56085c5675f8 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56085c567670 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56085c567958 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x56085c567808 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x56085c567888 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x56085c57f808 <col:39> 'int' 0
|-CXXMethodDecl 0x56085c567a28 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x56085c567af0 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x56085c567bb8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x56085c567c78 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56085c567d40 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x56085c567e88 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x56085c567df8 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x56085c568058 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56085c567f48 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x56085c567fc0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56085c568128 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x56085c5681e8 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x56085c568288 <col:20>
| `-OptimizeNoneAttr 0x56085c5682e0 <col:30>
|-CXXMethodDecl 0x56085c568330 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x56085c5683d0 <col:20>
| `-OptimizeNoneAttr 0x56085c568428 <col:30>
|-CXXMethodDecl 0x56085c568478 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x56085c568538 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56085c568600 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x56085c5686a0 <col:20>
| `-OptimizeNoneAttr 0x56085c5686f8 <col:30>
|-CXXMethodDecl 0x56085c568848 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x56085c568738 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x56085c5687b0 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56085c568998 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x56085c568908 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56085c568a70 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x56085c568b30 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x56085c568bd0 <col:20>
| `-OptimizeNoneAttr 0x56085c568c28 <col:30>
|-CXXMethodDecl 0x56085c568c78 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x56085c568d18 <col:20>
| `-OptimizeNoneAttr 0x56085c568d70 <col:30>
|-CXXMethodDecl 0x56085c568dc0 <line:299:5, col:42> col:16 used transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x56085c568e88 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x56085c568f28 <col:20>
| `-OptimizeNoneAttr 0x56085c568f80 <col:30>
|-CXXMethodDecl 0x56085c568fc8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x56085c5690e8 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x56085c569258 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x56085c569198 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x56085c569348 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x56085c5693e8 <col:20>
| `-OptimizeNoneAttr 0x56085c569440 <col:30>
|-CXXMethodDecl 0x56085c569490 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x56085c569550 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x56085c569788 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x56085c569600 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x56085c569678 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56085c569838 <col:20>
| `-OptimizeNoneAttr 0x56085c569890 <col:30>
|-CXXMethodDecl 0x56085c569938 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x56085c5699d8 <col:20>
| `-OptimizeNoneAttr 0x56085c569a30 <col:30>
|-CXXMethodDecl 0x56085c569a80 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x56085c569b20 <col:20>
| `-OptimizeNoneAttr 0x56085c569b78 <col:30>
|-CXXMethodDecl 0x56085c569bc0 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x56085c569c60 <col:20>
| `-OptimizeNoneAttr 0x56085c569cb8 <col:30>
|-CXXMethodDecl 0x56085c569db8 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x56085c569cf0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x56085c569e60 <col:20>
| `-OptimizeNoneAttr 0x56085c569eb8 <col:30>
|-CXXMethodDecl 0x56085c56a078 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x56085c569ef0 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x56085c569f68 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56085c56a128 <col:20>
| `-OptimizeNoneAttr 0x56085c56a180 <col:30>
|-CXXMethodDecl 0x56085c56a228 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x56085c56a348 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x56085c56a468 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x56085c56a508 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x56085c56a530 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x56085c56a658 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x56085c56a6f8 <col:20>
| `-OptimizeNoneAttr 0x56085c56a750 <col:30>
|-CXXMethodDecl 0x56085c56a7f8 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x56085c56a898 <col:20>
| `-OptimizeNoneAttr 0x56085c56a8f0 <col:30>
|-AccessSpecDecl 0x56085c56a918 <line:344:3, col:9> col:3 public
|-EnumDecl 0x56085c56a940 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x56085c56aa40 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x56085c56aa90 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56085c56aa20 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x56085c56aa00 <col:14> 'int' 48
|-CXXMethodDecl 0x56085c56aaf8 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x56085c56ab98 <col:20>
| `-OptimizeNoneAttr 0x56085c56abf0 <col:30>
|-CXXMethodDecl 0x56085c56ac68 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x56085c56ad08 <col:20>
| `-OptimizeNoneAttr 0x56085c56ad60 <col:30>
|-CXXMethodDecl 0x56085c56ae28 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x56085c56ad98 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x56085c56afc8 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x56085c56b168 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x56085c56b078 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x56085c56b210 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x56085c56b310 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56085c56b6c0 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c56b2f0 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x56085c56b2d0 <col:9> 'int' 0
| |-EnumConstantDecl 0x56085c56b3a0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56085c56b6d8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c56b380 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x56085c56b360 <col:14> 'int' 1
| |-EnumConstantDecl 0x56085c56b430 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56085c56b6f0 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c56b410 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x56085c56b3f0 <col:14> 'int' 2
| |-EnumConstantDecl 0x56085c56b4c0 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56085c56b708 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c56b4a0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x56085c56b480 <col:14> 'int' 3
| |-EnumConstantDecl 0x56085c56b550 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56085c56b720 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c56b530 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x56085c56b510 <col:13> 'int' 4
| |-EnumConstantDecl 0x56085c56b5e0 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x56085c56b738 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c56b5c0 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x56085c56b5a0 <col:13> 'int' 5
| `-EnumConstantDecl 0x56085c56b670 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x56085c56b750 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56085c56b650 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x56085c56b630 <col:14> 'int' 6
|-CXXMethodDecl 0x56085c56b7b8 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x56085c56b858 <col:20>
| `-OptimizeNoneAttr 0x56085c56b8b0 <col:30>
|-CXXMethodDecl 0x56085c56b9a8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x56085c56b8e8 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x56085c56ba50 <col:20>
| `-OptimizeNoneAttr 0x56085c56baa8 <col:30>
|-CXXMethodDecl 0x56085c56bb18 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x56085c56bc40 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x56085c56bdb8 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x56085c56bcf0 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x56085c56be80 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x56085c56bf48 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x56085c56c088 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x56085c56bff8 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x56085c56c130 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x56085c56c230 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56085c56c430 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c56c210 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x56085c56c1f0 <col:23> 'int' 0
| |-EnumConstantDecl 0x56085c56c2c0 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56085c56c448 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c56c2a0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x56085c56c280 <col:45> 'int' 4
| |-EnumConstantDecl 0x56085c56c350 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x56085c56c460 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c56c330 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x56085c56c310 <col:24> 'int' 0
| `-EnumConstantDecl 0x56085c56c3e0 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x56085c56c478 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56085c56c3c0 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x56085c56c3a0 <col:47> 'int' 16
|-CXXMethodDecl 0x56085c56c4d8 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x56085c56c648 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x56085c56c588 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x56085c56c6f0 <col:20>
| `-OptimizeNoneAttr 0x56085c56c748 <col:30>
|-CXXMethodDecl 0x56085c56c798 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x56085c580120 <col:18, col:36>
|   `-ReturnStmt 0x56085c580110 <col:20, col:33>
|     `-ImplicitCastExpr 0x56085c5800f8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x56085c5800d8 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x56085c5800a8 <col:27> '<bound member function type>' ->xanno 0x56085c56a7f8
|           `-CXXThisExpr 0x56085c580098 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x56085c56c890 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x56085c580230 <col:30, col:48>
|   `-ReturnStmt 0x56085c580220 <col:32, col:45>
|     `-ImplicitCastExpr 0x56085c580208 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x56085c5801e8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x56085c5801b8 <col:39> '<bound member function type>' ->xanno 0x56085c56a658
|           `-CXXThisExpr 0x56085c5801a8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x56085c56c978 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x56085c5803c8 <col:24, col:50>
|   `-ReturnStmt 0x56085c5803b8 <col:26, col:47>
|     `-UnaryOperator 0x56085c5803a0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56085c580380 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x56085c580368 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56085c580318 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x56085c575638
|         |   `-CXXMemberCallExpr 0x56085c5802f8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x56085c5802c8 <col:34> '<bound member function type>' ->xanno 0x56085c56a7f8
|         |       `-CXXThisExpr 0x56085c5802b8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x56085c580348 <col:46> 'int' 0
|-CXXMethodDecl 0x56085c56ca80 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x56085c580598 <col:36, col:62>
|   `-ReturnStmt 0x56085c580588 <col:38, col:59>
|     `-UnaryOperator 0x56085c580570 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56085c580550 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x56085c580538 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56085c5804b0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x56085c575638
|         |   `-CXXMemberCallExpr 0x56085c580490 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56085c580460 <col:46> '<bound member function type>' ->xanno 0x56085c56a658
|         |       `-CXXThisExpr 0x56085c580450 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x56085c5804e0 <col:58> 'int' 0
|-CXXMethodDecl 0x56085c56cb98 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x56085c580730 <col:26, col:53>
|   `-ReturnStmt 0x56085c580720 <col:28, col:50>
|     `-UnaryOperator 0x56085c580708 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56085c5806e8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x56085c5806d0 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56085c580680 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x56085c575938
|         |   `-CXXMemberCallExpr 0x56085c580660 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x56085c580630 <col:36> '<bound member function type>' ->xanno 0x56085c56a7f8
|         |       `-CXXThisExpr 0x56085c580620 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x56085c5806b0 <col:49> 'int' 0
|-CXXMethodDecl 0x56085c56ccb8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x56085c580908 <col:38, col:65>
|   `-ReturnStmt 0x56085c5808f8 <col:40, col:62>
|     `-UnaryOperator 0x56085c5808e0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x56085c5808c0 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x56085c5808a8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56085c580818 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x56085c575938
|         |   `-CXXMemberCallExpr 0x56085c5807f8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56085c5807c8 <col:48> '<bound member function type>' ->xanno 0x56085c56a658
|         |       `-CXXThisExpr 0x56085c5807b8 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x56085c580848 <col:61> 'int' 0
|-CXXMethodDecl 0x56085c56ce68 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x56085c56cd70 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x56085c580fd8 <col:34, line:463:5>
|   |-ParenExpr 0x56085c580e20 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x56085c580df0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x56085c580a58 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56085c580a28 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56085c580978 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56085c580960 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56085c580920 <col:23> 'int' lvalue ParmVar 0x56085c56cd70 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56085c580940 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56085c580a08 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56085c5809d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56085c580998 <col:33> 'int' lvalue ParmVar 0x56085c56cd70 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x56085c5809f0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x56085c5809b8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56085c56aa40 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x56085c580ab8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56085c580a98 <col:56> 'int' 0
|   |   `-CallExpr 0x56085c580d50 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x56085c580d38 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56085c580d18 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56085c0d70f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56085c580d90 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c580ba8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x56085c580da8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c580bd8 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56085c580dc0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56085c580c10 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x56085c580dd8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56085c580d00 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56085c580ce8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56085c580ca8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x56085c580fc8 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x56085c580fb0 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x56085c580f90 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x56085c580f60 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x56085c580f10 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x56085c575638
|         |   `-CXXMemberCallExpr 0x56085c580ef0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x56085c580ec0 <col:9> '<bound member function type>' ->xanno 0x56085c56a658
|         |       `-CXXThisExpr 0x56085c580eb0 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x56085c580f78 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x56085c580f40 <col:21> 'int' lvalue ParmVar 0x56085c56cd70 'i' 'int'
|-CXXMethodDecl 0x56085c56d0b8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x56085c56cf28 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x56085c56cfa0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x56085c581668 <col:40, line:472:5>
|   |-ParenExpr 0x56085c581480 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x56085c581450 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x56085c581130 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56085c581100 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56085c581050 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56085c581038 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56085c580ff8 <col:23> 'int' lvalue ParmVar 0x56085c56cf28 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56085c581018 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56085c5810e0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56085c5810b0 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56085c581070 <col:33> 'int' lvalue ParmVar 0x56085c56cf28 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x56085c5810c8 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x56085c581090 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56085c56aa40 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x56085c581190 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56085c581170 <col:56> 'int' 0
|   |   `-CallExpr 0x56085c5813b0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x56085c581398 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56085c581378 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56085c0d70f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56085c5813f0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c581200 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x56085c581408 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c581230 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56085c581420 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56085c581268 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x56085c581438 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56085c581360 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56085c581348 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56085c581308 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x56085c581648 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x56085c5815f0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x56085c5815c0 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x56085c581570 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x56085c575638
|     | |   `-CXXMemberCallExpr 0x56085c581550 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x56085c581520 <col:2> '<bound member function type>' ->xanno 0x56085c56a7f8
|     | |       `-CXXThisExpr 0x56085c581510 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x56085c5815d8 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x56085c5815a0 <col:14> 'int' lvalue ParmVar 0x56085c56cf28 'i' 'int'
|     `-ImplicitCastExpr 0x56085c581630 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x56085c581610 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x56085c56cfa0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x56085c56d278 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x56085c56d180 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56085c581de8 <col:36, line:485:5>
|   |-ParenExpr 0x56085c581b50 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x56085c581b20 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56085c581800 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56085c5817d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56085c5816e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56085c5816c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56085c581688 <col:23> 'int' lvalue ParmVar 0x56085c56d180 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56085c5816a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56085c5817b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56085c581798 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56085c581700 <col:33> 'int' lvalue ParmVar 0x56085c56d180 'i' 'int'
|   |   |     `-BinaryOperator 0x56085c581778 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56085c581760 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56085c581720 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56085c56aa40 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56085c581740 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56085c581860 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56085c581840 <col:60> 'int' 0
|   |   `-CallExpr 0x56085c581a80 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56085c581a68 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56085c581a48 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56085c0d70f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56085c581ac0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c5818d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56085c581ad8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c581908 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56085c581af0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56085c581940 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x56085c581b08 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56085c581a30 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56085c581a18 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56085c5819d8 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x56085c581dd8 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x56085c581dc0 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x56085c581da8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56085c581d78 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x56085c581d18 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56085c581ce8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56085c581c60 <col:61, col:70> 'char const[48]' lvalue ->c 0x56085c575510
|             |   `-CXXMemberCallExpr 0x56085c581c40 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56085c581c10 <col:61> '<bound member function type>' ->xanno 0x56085c56a658
|             |       `-CXXThisExpr 0x56085c581c00 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56085c581d00 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56085c581c90 <col:74> 'int' lvalue ParmVar 0x56085c56d180 'i' 'int'
|-CXXMethodDecl 0x56085c56d4c8 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x56085c56d338 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56085c56d3b0 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x56085c582538 <col:42, line:500:5>
|   |-ParenExpr 0x56085c5822d0 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x56085c5822a0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56085c581f80 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56085c581f50 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56085c581e60 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56085c581e48 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56085c581e08 <col:23> 'int' lvalue ParmVar 0x56085c56d338 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56085c581e28 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56085c581f30 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56085c581f18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56085c581e80 <col:33> 'int' lvalue ParmVar 0x56085c56d338 'i' 'int'
|   |   |     `-BinaryOperator 0x56085c581ef8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56085c581ee0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56085c581ea0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56085c56aa40 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56085c581ec0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56085c581fe0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56085c581fc0 <col:60> 'int' 0
|   |   `-CallExpr 0x56085c582200 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56085c5821e8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56085c5821c8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56085c0d70f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56085c582240 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c582050 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56085c582258 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c582088 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56085c582270 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56085c5820c0 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x56085c582288 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56085c5821b0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56085c582198 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56085c582158 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x56085c582518 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x56085c5824c8 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56085c582498 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x56085c582440 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56085c582410 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56085c5823c0 <col:48, col:57> 'char [48]' lvalue ->c 0x56085c575510
|     |     |   `-CXXMemberCallExpr 0x56085c5823a0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56085c582370 <col:48> '<bound member function type>' ->xanno 0x56085c56a7f8
|     |     |       `-CXXThisExpr 0x56085c582360 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56085c582428 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56085c5823f0 <col:61> 'int' lvalue ParmVar 0x56085c56d338 'i' 'int'
|     `-ImplicitCastExpr 0x56085c582500 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x56085c5824e0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x56085c56d3b0 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x56085c56d688 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x56085c56d590 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x56085c582c98 <col:35, line:513:5>
|   |-ParenExpr 0x56085c5829a8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x56085c582978 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56085c5826d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56085c5826a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56085c5825b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56085c582598 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56085c582558 <col:23> 'int' lvalue ParmVar 0x56085c56d590 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56085c582578 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56085c582680 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56085c582668 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56085c5825d0 <col:33> 'int' lvalue ParmVar 0x56085c56d590 'i' 'int'
|   |   |     `-BinaryOperator 0x56085c582648 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56085c582630 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56085c5825f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56085c56aa40 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56085c582610 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56085c582730 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56085c582710 <col:60> 'int' 0
|   |   `-CallExpr 0x56085c5828d8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56085c5828c0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56085c5828a0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56085c0d70f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56085c582918 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c5827a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56085c582930 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c5827d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56085c582948 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56085c582810 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x56085c582960 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56085c582888 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56085c582870 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56085c582830 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x56085c582c88 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x56085c582c70 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x56085c582c58 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56085c582c28 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x56085c582ba0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x56085c582b70 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56085c582b20 <col:60, col:69> 'char const[48]' lvalue ->c 0x56085c575510
|             |   `-CXXMemberCallExpr 0x56085c582b00 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56085c582ad0 <col:60> '<bound member function type>' ->xanno 0x56085c56a658
|             |       `-CXXThisExpr 0x56085c582ac0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56085c582b88 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56085c582b50 <col:73> 'int' lvalue ParmVar 0x56085c56d590 'i' 'int'
|-CXXMethodDecl 0x56085c56d8d8 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x56085c56d748 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56085c56d7c0 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x56085c5833b8 <col:41, line:528:5>
|   |-ParenExpr 0x56085c583140 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x56085c583110 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56085c582e30 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56085c582e00 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56085c582d10 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56085c582cf8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56085c582cb8 <col:23> 'int' lvalue ParmVar 0x56085c56d748 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56085c582cd8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56085c582de0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56085c582dc8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56085c582d30 <col:33> 'int' lvalue ParmVar 0x56085c56d748 'i' 'int'
|   |   |     `-BinaryOperator 0x56085c582da8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56085c582d90 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56085c582d50 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56085c56aa40 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56085c582d70 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x56085c582e90 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56085c582e70 <col:60> 'int' 0
|   |   `-CallExpr 0x56085c583070 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56085c583058 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56085c583038 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56085c0d70f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56085c5830b0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c582f00 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x56085c5830c8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c582f38 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56085c5830e0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56085c582f70 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x56085c5830f8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56085c583020 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56085c583008 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56085c582fc8 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x56085c583398 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x56085c583348 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56085c583318 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x56085c5832c0 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56085c583280 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56085c583230 <col:47, col:56> 'char [48]' lvalue ->c 0x56085c575510
|     |     |   `-CXXMemberCallExpr 0x56085c583210 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56085c5831e0 <col:47> '<bound member function type>' ->xanno 0x56085c56a7f8
|     |     |       `-CXXThisExpr 0x56085c5831d0 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56085c583298 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56085c583260 <col:60> 'int' lvalue ParmVar 0x56085c56d748 'i' 'int'
|     `-ImplicitCastExpr 0x56085c583380 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x56085c583360 <col:65> 'int16_t':'short' lvalue ParmVar 0x56085c56d7c0 'x' 'int16_t':'short'
|-CXXMethodDecl 0x56085c56da98 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x56085c56d9a0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56085c583a88 <col:36, line:541:5>
|   |-ParenExpr 0x56085c583828 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x56085c5837f8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56085c583550 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56085c583520 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56085c583430 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56085c583418 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56085c5833d8 <col:23> 'int' lvalue ParmVar 0x56085c56d9a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56085c5833f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56085c583500 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56085c5834e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56085c583450 <col:33> 'int' lvalue ParmVar 0x56085c56d9a0 'i' 'int'
|   |   |     `-BinaryOperator 0x56085c5834c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56085c5834b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56085c583470 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56085c56aa40 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56085c583490 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56085c5835b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56085c583590 <col:60> 'int' 0
|   |   `-CallExpr 0x56085c583758 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56085c583740 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56085c583720 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56085c0d70f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56085c583798 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c583620 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56085c5837b0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c583658 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56085c5837c8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56085c583690 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x56085c5837e0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56085c583708 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56085c5836f0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56085c5836b0 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x56085c583a78 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x56085c583a60 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x56085c583a48 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56085c583a18 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x56085c5839c0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56085c583990 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56085c583940 <col:61, col:70> 'char const[48]' lvalue ->c 0x56085c575510
|             |   `-CXXMemberCallExpr 0x56085c583920 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56085c5838f0 <col:61> '<bound member function type>' ->xanno 0x56085c56a658
|             |       `-CXXThisExpr 0x56085c5838e0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56085c5839a8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56085c583970 <col:74> 'int' lvalue ParmVar 0x56085c56d9a0 'i' 'int'
|-CXXMethodDecl 0x56085c56dc68 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x56085c56db58 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x56085c56dbd0 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x56085c56dd18 <col:20>
| `-OptimizeNoneAttr 0x56085c56dd70 <col:30>
|-CXXMethodDecl 0x56085c56dea8 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x56085c56ddb0 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x56085c584158 <col:35, line:562:5>
|   |-ParenExpr 0x56085c583ef8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x56085c583ec8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56085c583c20 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56085c583bf0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56085c583b00 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56085c583ae8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56085c583aa8 <col:23> 'int' lvalue ParmVar 0x56085c56ddb0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56085c583ac8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56085c583bd0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56085c583bb8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56085c583b20 <col:33> 'int' lvalue ParmVar 0x56085c56ddb0 'i' 'int'
|   |   |     `-BinaryOperator 0x56085c583b98 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56085c583b80 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56085c583b40 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56085c56aa40 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56085c583b60 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56085c583c80 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56085c583c60 <col:60> 'int' 0
|   |   `-CallExpr 0x56085c583e28 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56085c583e10 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56085c583df0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56085c0d70f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56085c583e68 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c583cf0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56085c583e80 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c583d28 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56085c583e98 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56085c583d60 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x56085c583eb0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56085c583dd8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56085c583dc0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56085c583d80 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x56085c584148 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x56085c584130 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x56085c584118 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56085c5840e8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x56085c584090 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x56085c584060 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56085c584010 <col:60, col:69> 'char const[48]' lvalue ->c 0x56085c575510
|             |   `-CXXMemberCallExpr 0x56085c583ff0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56085c583fc0 <col:60> '<bound member function type>' ->xanno 0x56085c56a658
|             |       `-CXXThisExpr 0x56085c583fb0 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56085c584078 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56085c584040 <col:73> 'int' lvalue ParmVar 0x56085c56ddb0 'i' 'int'
|-CXXMethodDecl 0x56085c56e0b8 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x56085c56df68 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56085c56dfe0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x56085c584838 <col:41, line:577:5>
|   |-ParenExpr 0x56085c5845c8 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x56085c584598 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56085c5842f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56085c5842c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56085c5841d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56085c5841b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56085c584178 <col:23> 'int' lvalue ParmVar 0x56085c56df68 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56085c584198 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56085c5842a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56085c584288 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56085c5841f0 <col:33> 'int' lvalue ParmVar 0x56085c56df68 'i' 'int'
|   |   |     `-BinaryOperator 0x56085c584268 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56085c584250 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56085c584210 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56085c56aa40 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56085c584230 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x56085c584350 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56085c584330 <col:60> 'int' 0
|   |   `-CallExpr 0x56085c5844f8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56085c5844e0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56085c5844c0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56085c0d70f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56085c584538 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c5843c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x56085c584550 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c5843f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56085c584568 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56085c584430 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x56085c584580 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56085c5844a8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56085c584490 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56085c584450 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x56085c584818 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x56085c5847c8 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56085c584798 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x56085c584738 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56085c584708 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56085c5846b8 <col:47, col:56> 'char [48]' lvalue ->c 0x56085c575510
|     |     |   `-CXXMemberCallExpr 0x56085c584698 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56085c584668 <col:47> '<bound member function type>' ->xanno 0x56085c56a7f8
|     |     |       `-CXXThisExpr 0x56085c584658 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56085c584720 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56085c5846e8 <col:60> 'int' lvalue ParmVar 0x56085c56df68 'i' 'int'
|     `-ImplicitCastExpr 0x56085c584800 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x56085c5847e0 <col:65> 'int32_t':'int' lvalue ParmVar 0x56085c56dfe0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x56085c56e278 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x56085c56e180 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x56085c584f68 <col:36, line:591:5>
|   |-ParenExpr 0x56085c584ca8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x56085c584c78 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56085c5849d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56085c5849a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56085c5848b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56085c584898 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56085c584858 <col:23> 'int' lvalue ParmVar 0x56085c56e180 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56085c584878 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56085c584980 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56085c584968 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56085c5848d0 <col:33> 'int' lvalue ParmVar 0x56085c56e180 'i' 'int'
|   |   |     `-BinaryOperator 0x56085c584948 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56085c584930 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56085c5848f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56085c56aa40 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56085c584910 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x56085c584a30 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56085c584a10 <col:60> 'int' 0
|   |   `-CallExpr 0x56085c584bd8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56085c584bc0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56085c584ba0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56085c0d70f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56085c584c18 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c584aa0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x56085c584c30 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c584ad8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56085c584c48 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56085c584b10 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x56085c584c60 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56085c584b88 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56085c584b70 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56085c584b30 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x56085c584f58 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x56085c584f40 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x56085c584f28 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56085c584ef8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x56085c584e70 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x56085c584e40 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56085c584df0 <col:61, col:70> 'char const[48]' lvalue ->c 0x56085c575510
|             |   `-CXXMemberCallExpr 0x56085c584dd0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56085c584da0 <col:61> '<bound member function type>' ->xanno 0x56085c56a658
|             |       `-CXXThisExpr 0x56085c584d90 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56085c584e58 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56085c584e20 <col:74> 'int' lvalue ParmVar 0x56085c56e180 'i' 'int'
|-CXXMethodDecl 0x56085c56e4c8 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x56085c56e338 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56085c56e3b0 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x56085c585648 <col:42, line:606:5>
|   |-ParenExpr 0x56085c5853d8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x56085c5853a8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x56085c585100 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56085c5850d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56085c584fe0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56085c584fc8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56085c584f88 <col:23> 'int' lvalue ParmVar 0x56085c56e338 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56085c584fa8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56085c5850b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x56085c585098 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56085c585000 <col:33> 'int' lvalue ParmVar 0x56085c56e338 'i' 'int'
|   |   |     `-BinaryOperator 0x56085c585078 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56085c585060 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56085c585020 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56085c56aa40 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x56085c585040 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x56085c585160 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56085c585140 <col:60> 'int' 0
|   |   `-CallExpr 0x56085c585308 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x56085c5852f0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56085c5852d0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56085c0d70f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56085c585348 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c5851d0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x56085c585360 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c585208 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56085c585378 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56085c585240 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x56085c585390 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56085c5852b8 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56085c5852a0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56085c585260 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x56085c585628 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x56085c5855d8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56085c5855a8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x56085c585548 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56085c585518 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56085c5854c8 <col:48, col:57> 'char [48]' lvalue ->c 0x56085c575510
|     |     |   `-CXXMemberCallExpr 0x56085c5854a8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56085c585478 <col:48> '<bound member function type>' ->xanno 0x56085c56a7f8
|     |     |       `-CXXThisExpr 0x56085c585468 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56085c585530 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56085c5854f8 <col:61> 'int' lvalue ParmVar 0x56085c56e338 'i' 'int'
|     `-ImplicitCastExpr 0x56085c585610 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x56085c5855f0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x56085c56e3b0 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x56085c56e660 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x56085c56e590 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x56085c585eb8 <col:33, line:620:5>
|   |-ParenExpr 0x56085c585c30 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x56085c585c00 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x56085c585850 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56085c585820 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56085c5856c0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56085c5856a8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56085c585668 <col:23> 'int' lvalue ParmVar 0x56085c56e590 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56085c585688 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56085c585800 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x56085c5857e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56085c5856e0 <col:33> 'int' lvalue ParmVar 0x56085c56e590 'i' 'int'
|   |   |     `-BinaryOperator 0x56085c5857c8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56085c5857b0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56085c585700 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56085c56aa40 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x56085c585788 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x56085c585770 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x56085c585738 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x56085c5858b0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56085c585890 <col:79> 'int' 0
|   |   `-CallExpr 0x56085c585b60 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x56085c585b48 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56085c585b28 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56085c0d70f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56085c585ba0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c585998 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x56085c585bb8 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c5859e0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56085c585bd0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56085c585a18 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x56085c585be8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56085c585b10 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56085c585af8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56085c585ab8 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x56085c585ea8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x56085c585e90 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x56085c585e78 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x56085c585e48 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x56085c585dc0 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x56085c585d90 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x56085c585d40 <col:67, col:76> 'char const[48]' lvalue ->c 0x56085c575510
|             |   `-CXXMemberCallExpr 0x56085c585d20 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x56085c585cf0 <col:67> '<bound member function type>' ->xanno 0x56085c56a658
|             |       `-CXXThisExpr 0x56085c585ce0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x56085c585da8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x56085c585d70 <col:80> 'int' lvalue ParmVar 0x56085c56e590 'i' 'int'
|-CXXMethodDecl 0x56085c56e878 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x56085c56e720 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x56085c56e7a0 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x56085c5866e0 <col:45, line:635:5>
|   |-ParenExpr 0x56085c586428 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x56085c5863f8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x56085c5860c0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x56085c586090 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x56085c585f30 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x56085c585f18 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x56085c585ed8 <col:23> 'int' lvalue ParmVar 0x56085c56e720 'i' 'int'
|   |   |   | `-IntegerLiteral 0x56085c585ef8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x56085c586070 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x56085c586058 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x56085c585f50 <col:33> 'int' lvalue ParmVar 0x56085c56e720 'i' 'int'
|   |   |     `-BinaryOperator 0x56085c586038 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x56085c586020 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x56085c585f70 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x56085c56aa40 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x56085c585ff8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x56085c585fe0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x56085c585fa8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x56085c586120 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x56085c586100 <col:79> 'int' 0
|   |   `-CallExpr 0x56085c586358 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x56085c586340 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x56085c586320 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56085c0d70f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x56085c586398 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c586190 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x56085c5863b0 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x56085c5861d8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x56085c5863c8 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x56085c586210 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x56085c5863e0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x56085c586308 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x56085c5862f0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x56085c5862a8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x56085c5866c0 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x56085c586628 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x56085c5865f8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x56085c586598 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x56085c586568 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x56085c586518 <col:54, col:63> 'char [48]' lvalue ->c 0x56085c575510
|     |     |   `-CXXMemberCallExpr 0x56085c5864f8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x56085c5864c8 <col:54> '<bound member function type>' ->xanno 0x56085c56a7f8
|     |     |       `-CXXThisExpr 0x56085c5864b8 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x56085c586580 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x56085c586548 <col:67> 'int' lvalue ParmVar 0x56085c56e720 'i' 'int'
|     `-CXXConstCastExpr 0x56085c586690 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x56085c586678 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x56085c586640 <col:91> 'const void *' lvalue ParmVar 0x56085c56e7a0 'x' 'const void *'
|-CXXMethodDecl 0x56085c56e948 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x56085c586768 <col:34, line:640:5>
|   `-ReturnStmt 0x56085c586758 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x56085c586740 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x56085c586710 <col:16> 'Packet *' lvalue ->_data_packet 0x56085c5760c8
|         `-CXXThisExpr 0x56085c586700 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x56085c56ea88 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x56085c56e9f8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56085c57f828 <col:46> 'bool' true
|-CXXMethodDecl 0x56085c56ec08 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x56085c56eb40 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x56085c56ecb0 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x56085c56f460 <line:660:22> "" ""
| |-EnumConstantDecl 0x56085c56edb0 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56085c56f4d0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c56ed90 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x56085c56ed70 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x56085c563f10 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x56085c56ee40 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56085c56f4e8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c56ee20 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x56085c56ee00 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x56085c563fa0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x56085c56eed0 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56085c56f500 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c56eeb0 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x56085c56ee90 <col:21> 'int' 0
| |-EnumConstantDecl 0x56085c56ef60 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56085c56f518 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c56ef40 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x56085c56ef20 <col:19> 'int' 16
| |-EnumConstantDecl 0x56085c56eff0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56085c56f530 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c56efd0 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x56085c56efb0 <col:21> 'int' 16
| |-EnumConstantDecl 0x56085c56f080 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56085c56f548 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c56f060 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x56085c56f040 <col:19> 'int' 32
| |-EnumConstantDecl 0x56085c56f110 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56085c56f560 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c56f0f0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x56085c56f0d0 <col:19> 'int' EnumConstant 0x56085c56ef60 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x56085c56f1a0 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56085c56f578 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c56f180 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x56085c56f160 <col:19> 'int' EnumConstant 0x56085c56f080 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x56085c56f270 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56085c56f590 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c56f250 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x56085c56f230 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x56085c56f1f0 <col:23> 'int' EnumConstant 0x56085c56f1a0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x56085c56f210 <col:40> 'int' 2
| |-EnumConstantDecl 0x56085c56f340 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x56085c56f5a8 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x56085c56f320 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x56085c56f300 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x56085c56f2c0 <col:23> 'int' EnumConstant 0x56085c56f1a0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x56085c56f2e0 <col:40> 'int' 4
| `-EnumConstantDecl 0x56085c56f410 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x56085c56f5c0 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56085c56f3f0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x56085c56f3d0 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x56085c56f390 <col:23> 'int' EnumConstant 0x56085c56f1a0 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x56085c56f3b0 <col:40> 'int' 8
|-CXXMethodDecl 0x56085c56f600 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x56085c56f6a0 <col:68> "" ""
|-CXXMethodDecl 0x56085c56f738 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x56085c56f7d8 <col:45> "" ""
|-CXXMethodDecl 0x56085c56f870 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x56085c56f910 <col:57> "" ""
|-CXXMethodDecl 0x56085c56f9a8 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x56085c56fa48 <col:45> "" ""
|-CXXMethodDecl 0x56085c56fae0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x56085c56fb80 <col:57> "" ""
|-CXXMethodDecl 0x56085c56fc10 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x56085c56fcb0 <col:51> "" ""
|-CXXMethodDecl 0x56085c56fd40 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x56085c56fde0 <col:63> "" ""
|-CXXMethodDecl 0x56085c56fe70 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x56085c56ff10 <col:53> "" ""
|-CXXMethodDecl 0x56085c56ffa0 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x56085c570040 <col:65> "" ""
|-CXXMethodDecl 0x56085c570158 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x56085c5700c8 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x56085c570200 <col:61> "" ""
|-CXXMethodDecl 0x56085c570398 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x56085c570288 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x56085c570300 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x56085c570448 <col:67> "" ""
|-CXXMethodDecl 0x56085c570560 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x56085c5704d0 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56085c570608 <col:63> "" ""
|-CXXMethodDecl 0x56085c5707a0 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x56085c570690 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56085c570708 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x56085c570850 <col:69> "" ""
|-CXXMethodDecl 0x56085c570968 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x56085c5708d8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56085c570a10 <col:63> "" ""
|-CXXMethodDecl 0x56085c5730e8 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56085c572fd8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56085c573050 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56085c573198 <col:69> "" ""
|-CXXMethodDecl 0x56085c5732b0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x56085c573220 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x56085c573358 <col:62> "" ""
|-CXXMethodDecl 0x56085c5734f0 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x56085c5733e0 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56085c573458 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x56085c5735a0 <col:68> "" ""
|-CXXMethodDecl 0x56085c5736b8 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x56085c573628 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x56085c573760 <col:63> "" ""
|-CXXMethodDecl 0x56085c5738f8 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x56085c5737e8 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x56085c573860 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x56085c5739a8 <col:69> "" ""
|-CXXMethodDecl 0x56085c573a38 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x56085c573ad8 <col:64> "" ""
|-CXXMethodDecl 0x56085c573b68 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x56085c573c08 <col:52> "" ""
|-CXXMethodDecl 0x56085c573c98 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x56085c573d38 <col:67> "" ""
|-CXXMethodDecl 0x56085c573dc8 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x56085c573e68 <col:55> "" ""
|-CXXMethodDecl 0x56085c573f80 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x56085c573ef0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56085c574028 <col:58> "" ""
|-CXXMethodDecl 0x56085c5741c0 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x56085c5740b0 <col:33> col:36 'int'
| |-ParmVarDecl 0x56085c574128 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x56085c574270 <col:62> "" ""
|-CXXMethodDecl 0x56085c574388 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x56085c5742f8 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56085c574430 <col:58> "" ""
|-CXXMethodDecl 0x56085c5745c8 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x56085c5744b8 <col:33> col:36 'int'
| |-ParmVarDecl 0x56085c574530 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x56085c574678 <col:62> "" ""
|-CXXMethodDecl 0x56085c574790 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x56085c574700 <col:34> col:37 'int'
| `-DeprecatedAttr 0x56085c574838 <col:60> "" ""
|-CXXMethodDecl 0x56085c5749d0 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x56085c5748c0 <col:34> col:37 'int'
| |-ParmVarDecl 0x56085c574938 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x56085c574a80 <col:64> "" ""
|-CXXMethodDecl 0x56085c574b98 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x56085c574b08 <col:32> col:35 'int'
| `-DeprecatedAttr 0x56085c574c40 <col:58> "" ""
|-CXXMethodDecl 0x56085c574dd8 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x56085c574cc8 <col:33> col:36 'int'
| |-ParmVarDecl 0x56085c574d40 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x56085c574e88 <col:62> "" ""
|-CXXMethodDecl 0x56085c574fa0 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x56085c574f10 <col:33> col:36 'int'
| `-DeprecatedAttr 0x56085c575048 <col:59> "" ""
|-CXXMethodDecl 0x56085c5751e0 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x56085c5750d0 <col:33> col:36 'int'
| |-ParmVarDecl 0x56085c575148 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x56085c575290 <col:63> "" ""
|-AccessSpecDecl 0x56085c575300 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x56085c575328 prev 0x56085c56a530 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56085c575420 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x56085c575510 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x56085c575638 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x56085c5757b8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x56085c575938 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x56085c575ab8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x56085c5868e8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56085c587158 <col:11>
| |-CXXDestructorDecl 0x56085c5869c0 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x56085c586af8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x56085c586af8
| | `-ParmVarDecl 0x56085c586c08 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x56085c586ca8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56085c586ca8
| | `-ParmVarDecl 0x56085c586db8 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x56085c589b78 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56085c589c88 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x56085c589f08 <col:11>
| |   `-ReturnStmt 0x56085c589ef8 <col:11>
| |     `-UnaryOperator 0x56085c589ee0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56085c589ed0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x56085c589cf8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x56085c589cf8
|   `-ParmVarDecl 0x56085c589e08 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x56085c575b20 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56085c575c38 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x56085c575cd8 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x56085c575d40 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x56085c575da8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x56085c575e10 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x56085c575e70 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x56085c575f30 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x56085c575f90 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x56085c575ff0 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x56085c5867f8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x56085c575cd8 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x56085c587168 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x56085c5871c0 <col:12>
| |-CXXConstructorDecl 0x56085c586e28 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x56085c586e28
| | `-ParmVarDecl 0x56085c586f38 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x56085c586fd8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x56085c586fd8
| | `-ParmVarDecl 0x56085c5870e8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x56085c589260 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x56085c576068 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x56085c5760c8 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x56085c576130 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x56085c576198 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x56085c576200 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x56085c576268 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x56085c5762c8 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x56085c576328 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x56085c576390 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x56085c576418 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x56085c576068 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x56085c586790 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x56085c5762c8 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x56085c5871d0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x56085c587230 <col:21, line:755:5>
|-CXXConstructorDecl 0x56085c5765b8 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x56085c5764f8 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x56085c5766b0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x56085c576898 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x56085c5767a0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x56085c576b68 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x56085c576950 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56085c5769c8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56085c576a40 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56085c576d88 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x56085c576c38 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x56085c576cb0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x56085c57f368 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x56085c576e48 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x56085c576ec0 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x56085c576f38 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x56085c57f4c0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x56085c57f430 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56085c57f608 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x56085c57f578 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x56085c57f700 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class WritablePacket
         0 |   class Packet (base)
         0 |     class atomic_uint32_t _use_count
         0 |       uint32_t _val
         8 |     class Packet * _data_packet
        16 |     unsigned char * _head
        24 |     unsigned char * _data
        32 |     unsigned char * _tail
        40 |     unsigned char * _end
        48 |     struct Packet::AllAnno _aa
        48 |       union Packet::Anno cb
        48 |         char [48] c
        48 |         uint8_t [48] u8
        48 |         uint16_t [24] u16
        48 |         uint32_t [12] u32
        48 |         uint64_t [6] u64
        96 |       unsigned char * mac
       104 |       unsigned char * nh
       112 |       unsigned char * h
       120 |       enum Packet::PacketType pkt_type
       124 |       char [8] timestamp
       136 |       class Packet * next
       144 |       class Packet * prev
       152 |     Packet::buffer_destructor_type _destructor
       160 |     void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56085c5872d0 prev 0x56085c563b90 <../dummy_inc/click/packet.hh:778:1, line:816:1> line:778:7 referenced class WritablePacket definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Packet'
|-CXXRecordDecl 0x56085c587408 <col:1, col:7> col:7 implicit referenced class WritablePacket
|-AccessSpecDecl 0x56085c587498 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x56085c587540 <line:780:5, col:62> col:55 data 'unsigned char *() const'
| |-NoInlineAttr 0x56085c5875e0 <col:20>
| `-OptimizeNoneAttr 0x56085c587638 <col:30>
|-CXXMethodDecl 0x56085c587688 <line:781:5, col:66> col:55 end_data 'unsigned char *() const'
| |-NoInlineAttr 0x56085c587728 <col:20>
| `-OptimizeNoneAttr 0x56085c587780 <col:30>
|-CXXMethodDecl 0x56085c5877d0 <line:782:5, col:36> col:27 buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x56085c587898 <line:783:5, col:40> col:27 end_buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x56085c587960 <line:784:5, col:40> col:27 mac_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x56085c587a78 <line:785:5, col:40> col:25 ether_header 'click_ether *() const' inline
|-CXXMethodDecl 0x56085c587b40 <line:786:5, col:72> col:55 network_header 'unsigned char *() const'
| |-NoInlineAttr 0x56085c587be0 <col:20>
| `-OptimizeNoneAttr 0x56085c587c38 <col:30>
|-CXXMethodDecl 0x56085c587ca8 <line:787:5, col:62> col:50 ip_header 'click_ip *() const'
| |-NoInlineAttr 0x56085c587d48 <col:20>
| `-OptimizeNoneAttr 0x56085c587da0 <col:30>
|-CXXMethodDecl 0x56085c587e48 <line:788:5, col:64> col:51 used ip6_header 'click_ip6 *() const'
| |-NoInlineAttr 0x56085c587ee8 <col:20>
| `-OptimizeNoneAttr 0x56085c587f40 <col:30>
|-CXXMethodDecl 0x56085c587f90 <line:789:5, col:46> col:27 used transport_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x56085c5880a8 <line:790:5, col:38> col:24 icmp_header 'click_icmp *() const' inline
|-CXXMethodDecl 0x56085c5881c8 <line:791:5, col:36> col:23 tcp_header 'click_tcp *() const' inline
|-CXXMethodDecl 0x56085c5882e8 <line:792:5, col:36> col:23 udp_header 'click_udp *() const' inline
|-CXXMethodDecl 0x56085c5883b0 <line:795:5, col:73> col:27 buffer_data 'unsigned char *() const' inline
| `-DeprecatedAttr 0x56085c588450 <col:62> "" ""
|-AccessSpecDecl 0x56085c5884c0 <line:798:2, col:9> col:2 private
|-CXXConstructorDecl 0x56085c588520 <line:800:5, col:31> col:12 WritablePacket 'void ()' inline
| |-CXXCtorInitializer 'Packet'
| | `-CXXConstructExpr 0x56085c589118 <col:12> 'Packet' 'void ()'
| `-CompoundStmt 0x56085c589340 <col:29, col:31>
|-CXXMethodDecl 0x56085c5885e8 <line:802:5, col:28> col:17 initialize 'void ()' inline
|-CXXConstructorDecl 0x56085c588728 <line:804:5, col:35> col:5 WritablePacket 'void (const Packet &)'
| `-ParmVarDecl 0x56085c588698 <col:20, col:34> col:34 x 'const Packet &'
|-CXXDestructorDecl 0x56085c588820 <line:805:5, col:25> col:5 ~WritablePacket 'void () noexcept'
| `-CompoundStmt 0x56085c589350 <col:23, col:25>
|-CXXMethodDecl 0x56085c5889d8 <line:808:5, col:56> col:28 pool_allocate 'WritablePacket *(bool)' static
| `-ParmVarDecl 0x56085c588910 <col:42, col:47> col:47 with_data 'bool'
|-CXXMethodDecl 0x56085c588ca8 <line:809:5, line:810:24> line:809:28 pool_allocate 'WritablePacket *(uint32_t, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x56085c588a90 <col:42, col:51> col:51 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x56085c588b08 <col:61, col:70> col:70 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x56085c588b80 <line:810:7, col:16> col:16 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x56085c588e38 <line:811:5, col:42> col:17 recycle 'void (WritablePacket *)' static
| `-ParmVarDecl 0x56085c588d70 <col:25, col:41> col:41 p 'WritablePacket *'
|-FriendDecl 0x56085c588f30 <line:814:5, col:18> col:12 'class Packet':'Packet'
`-CXXConstructorDecl 0x56085c588f98 <line:778:7> col:7 implicit WritablePacket 'void (const WritablePacket &)' inline default noexcept-unevaluated 0x56085c588f98
  `-ParmVarDecl 0x56085c5890a8 <col:7> col:7 'const WritablePacket &'

Layout: <CGRecordLayout
  LLVMType:%class.WritablePacket = type { %class.Packet }
  NonVirtualBaseLLVMType:%class.WritablePacket = type { %class.Packet }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_ip6
         0 |   union click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:17:5) ip6_ctlun
         0 |     struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:18:2) ip6_un1
         0 |       uint32_t ip6_un1_flow
         4 |       uint16_t ip6_un1_plen
         6 |       uint8_t ip6_un1_nxt
         7 |       uint8_t ip6_un1_hlim
         0 |     uint8_t ip6_un2_vfc
         0 |     struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:30:2) ip6_un3
     0:0-3 |       unsigned int ip6_un3_fc
     0:4-7 |       unsigned int ip6_un3_v
         8 |   struct in6_addr ip6_src
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   struct in6_addr ip6_dst
        24 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
        24 |       uint8_t [16] __u6_addr8
        24 |       uint16_t [8] __u6_addr16
        24 |       uint32_t [4] __u6_addr32
           | [sizeof=40, dsize=40, align=4,
           |  nvsize=40, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56085c5b64f8 <../dummy_inc/clicknet/ip6.h:18:2, line:27:2> line:18:2 struct definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x56085c5b6628 <line:19:6, col:15> col:15 ip6_un1_flow 'uint32_t':'unsigned int'
|-FieldDecl 0x56085c5b6688 <line:24:6, col:15> col:15 ip6_un1_plen 'uint16_t':'unsigned short'
|-FieldDecl 0x56085c5b66e8 <line:25:6, col:14> col:14 referenced ip6_un1_nxt 'uint8_t':'unsigned char'
`-FieldDecl 0x56085c5b6748 <line:26:6, col:14> col:14 ip6_un1_hlim 'uint8_t':'unsigned char'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i32, i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i32, i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56085c5b68d0 <../dummy_inc/clicknet/ip6.h:30:2, line:38:2> line:30:2 struct definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x56085c5b6a40 <line:35:6, col:28> col:15 ip6_un3_fc 'unsigned int'
| `-ConstantExpr 0x56085c5b6a20 <col:28> 'int' Int: 4
|   `-IntegerLiteral 0x56085c5b69e8 <col:28> 'int' 4
`-FieldDecl 0x56085c5b6ae8 <line:36:6, col:27> col:15 ip6_un3_v 'unsigned int'
  `-ConstantExpr 0x56085c5b6ac8 <col:27> 'int' Int: 4
    `-IntegerLiteral 0x56085c5b6a90 <col:27> 'int' 4

Layout: <CGRecordLayout
  LLVMType:%struct.anon.0 = type { i8, [3 x i8] }
  NonVirtualBaseLLVMType:%struct.anon.0 = type { i8, [3 x i8] }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56085c5b63d8 <../dummy_inc/clicknet/ip6.h:17:5, line:39:5> line:17:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56085c5b64f8 <line:18:2, line:27:2> line:18:2 struct definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x56085c5b6628 <line:19:6, col:15> col:15 ip6_un1_flow 'uint32_t':'unsigned int'
| |-FieldDecl 0x56085c5b6688 <line:24:6, col:15> col:15 ip6_un1_plen 'uint16_t':'unsigned short'
| |-FieldDecl 0x56085c5b66e8 <line:25:6, col:14> col:14 referenced ip6_un1_nxt 'uint8_t':'unsigned char'
| `-FieldDecl 0x56085c5b6748 <line:26:6, col:14> col:14 ip6_un1_hlim 'uint8_t':'unsigned char'
|-FieldDecl 0x56085c5b6808 <line:18:2, line:27:4> col:4 referenced ip6_un1 'struct (anonymous struct at ../dummy_inc/clicknet/ip6.h:18:2)':'click_ip6::(anonymous struct at ../dummy_inc/clicknet/ip6.h:18:2)'
|-FieldDecl 0x56085c5b6880 <line:28:2, col:10> col:10 ip6_un2_vfc 'uint8_t':'unsigned char'
|-CXXRecordDecl 0x56085c5b68d0 <line:30:2, line:38:2> line:30:2 struct definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x56085c5b6a40 <line:35:6, col:28> col:15 ip6_un3_fc 'unsigned int'
| | `-ConstantExpr 0x56085c5b6a20 <col:28> 'int' Int: 4
| |   `-IntegerLiteral 0x56085c5b69e8 <col:28> 'int' 4
| `-FieldDecl 0x56085c5b6ae8 <line:36:6, col:27> col:15 ip6_un3_v 'unsigned int'
|   `-ConstantExpr 0x56085c5b6ac8 <col:27> 'int' Int: 4
|     `-IntegerLiteral 0x56085c5b6a90 <col:27> 'int' 4
`-FieldDecl 0x56085c5b6ba8 <line:30:2, line:38:4> col:4 ip6_un3 'struct (anonymous struct at ../dummy_inc/clicknet/ip6.h:30:2)':'click_ip6::(anonymous struct at ../dummy_inc/clicknet/ip6.h:30:2)'

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { %struct.anon }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56085c2db9b8 </usr/include/netinet/in.h:214:5, line:219:7> line:214:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x56085c2dbbd8 <line:216:2, col:23> col:10 __u6_addr8 'uint8_t [16]'
|-FieldDecl 0x56085c2dbd08 <line:217:2, col:24> col:11 __u6_addr16 'uint16_t [8]'
|-FieldDecl 0x56085c2dbe38 <line:218:2, col:24> col:11 __u6_addr32 'uint32_t [4]'
|-CXXConstructorDecl 0x56085c5b8f48 <line:214:5> col:5 implicit  'void ()' inline default trivial noexcept-unevaluated 0x56085c5b8f48
|-CXXDestructorDecl 0x56085c5b9020 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x56085c5b9020
|-CXXConstructorDecl 0x56085c5b9158 <col:5> col:5 implicit used constexpr  'void (const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept' inline default trivial
| |-ParmVarDecl 0x56085c5b9268 <col:5> col:5 'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &'
| `-CompoundStmt 0x56085c5b9880 <col:5>
|-CXXConstructorDecl 0x56085c5b9308 <col:5> col:5 implicit constexpr  'void (in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&)' inline default trivial noexcept-unevaluated 0x56085c5b9308
| `-ParmVarDecl 0x56085c5b9418 <col:5> col:5 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&'
|-CXXMethodDecl 0x56085c5b9a78 <col:5> col:5 implicit used constexpr operator= 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &(const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept' inline default trivial
| |-ParmVarDecl 0x56085c5b9b88 <col:5> col:5 'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &'
| `-CompoundStmt 0x56085c5ba2e0 <col:5>
|   `-ReturnStmt 0x56085c5ba2d0 <col:5>
|     `-UnaryOperator 0x56085c5ba2b8 <col:5> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56085c5ba2a8 <col:5> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) *' this
`-CXXMethodDecl 0x56085c5b9bf8 <col:5> col:5 implicit constexpr operator= 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &(in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&)' inline default trivial noexcept-unevaluated 0x56085c5b9bf8
  `-ParmVarDecl 0x56085c5b9d08 <col:5> col:5 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&'

Layout: <CGRecordLayout
  LLVMType:%union.anon.1 = type { [4 x i32] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56085c27a150 </usr/include/netinet/in.h:212:1, line:225:3> line:212:8 struct in6_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56085c2db928 <col:1, col:8> col:8 implicit struct in6_addr
|-CXXRecordDecl 0x56085c2db9b8 <line:214:5, line:219:7> line:214:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x56085c2dbbd8 <line:216:2, col:23> col:10 __u6_addr8 'uint8_t [16]'
| |-FieldDecl 0x56085c2dbd08 <line:217:2, col:24> col:11 __u6_addr16 'uint16_t [8]'
| |-FieldDecl 0x56085c2dbe38 <line:218:2, col:24> col:11 __u6_addr32 'uint32_t [4]'
| |-CXXConstructorDecl 0x56085c5b8f48 <line:214:5> col:5 implicit  'void ()' inline default trivial noexcept-unevaluated 0x56085c5b8f48
| |-CXXDestructorDecl 0x56085c5b9020 <col:5> col:5 implicit ~ 'void ()' inline default trivial noexcept-unevaluated 0x56085c5b9020
| |-CXXConstructorDecl 0x56085c5b9158 <col:5> col:5 implicit used constexpr  'void (const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56085c5b9268 <col:5> col:5 'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &'
| | `-CompoundStmt 0x56085c5b9880 <col:5>
| |-CXXConstructorDecl 0x56085c5b9308 <col:5> col:5 implicit constexpr  'void (in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&)' inline default trivial noexcept-unevaluated 0x56085c5b9308
| | `-ParmVarDecl 0x56085c5b9418 <col:5> col:5 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&'
| |-CXXMethodDecl 0x56085c5b9a78 <col:5> col:5 implicit used constexpr operator= 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &(const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56085c5b9b88 <col:5> col:5 'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &'
| | `-CompoundStmt 0x56085c5ba2e0 <col:5>
| |   `-ReturnStmt 0x56085c5ba2d0 <col:5>
| |     `-UnaryOperator 0x56085c5ba2b8 <col:5> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56085c5ba2a8 <col:5> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) *' this
| `-CXXMethodDecl 0x56085c5b9bf8 <col:5> col:5 implicit constexpr operator= 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &(in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&)' inline default trivial noexcept-unevaluated 0x56085c5b9bf8
|   `-ParmVarDecl 0x56085c5b9d08 <col:5> col:5 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&'
|-FieldDecl 0x56085c2dbef8 <col:5, line:219:9> col:9 referenced __in6_u 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)'
|-CXXConstructorDecl 0x56085c5b8e50 <line:212:8> col:8 implicit in6_addr 'void ()' inline default trivial noexcept-unevaluated 0x56085c5b8e50
|-CXXConstructorDecl 0x56085c5b9488 <col:8> col:8 implicit used constexpr in6_addr 'void (const in6_addr &) noexcept' inline default trivial
| |-ParmVarDecl 0x56085c5b9598 <col:8> col:8 used 'const in6_addr &'
| |-CXXCtorInitializer Field 0x56085c2dbef8 '__in6_u' 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)'
| | `-CXXConstructExpr 0x56085c5b9890 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' 'void (const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept'
| |   `-MemberExpr 0x56085c5b9850 <col:8> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x56085c2dbef8
| |     `-DeclRefExpr 0x56085c5b9830 <col:8> 'const in6_addr' lvalue ParmVar 0x56085c5b9598 '' 'const in6_addr &'
| `-CompoundStmt 0x56085c5b98f0 <col:8>
|-CXXConstructorDecl 0x56085c5b9638 <col:8> col:8 implicit constexpr in6_addr 'void (in6_addr &&)' inline default trivial noexcept-unevaluated 0x56085c5b9638
| `-ParmVarDecl 0x56085c5b9748 <col:8> col:8 'in6_addr &&'
|-CXXMethodDecl 0x56085c5b9d78 <col:8> col:8 implicit used constexpr operator= 'in6_addr &(const in6_addr &) noexcept' inline default trivial
| |-ParmVarDecl 0x56085c5b9e88 <col:8> col:8 used 'const in6_addr &'
| `-CompoundStmt 0x56085c5ba358 <col:8>
|   |-CXXMemberCallExpr 0x56085c5ba2f8 <col:8> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue
|   | |-MemberExpr 0x56085c5ba238 <col:8> '<bound member function type>' .operator= 0x56085c5b9a78
|   | | `-MemberExpr 0x56085c5ba148 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue ->__in6_u 0x56085c2dbef8
|   | |   `-CXXThisExpr 0x56085c5ba138 <col:8> 'in6_addr *' this
|   | `-MemberExpr 0x56085c5ba208 <col:8> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x56085c2dbef8
|   |   `-DeclRefExpr 0x56085c5ba1e8 <col:8> 'const in6_addr' lvalue ParmVar 0x56085c5b9e88 '' 'const in6_addr &'
|   `-ReturnStmt 0x56085c5ba348 <col:8>
|     `-UnaryOperator 0x56085c5ba330 <col:8> 'in6_addr' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56085c5ba320 <col:8> 'in6_addr *' this
`-CXXMethodDecl 0x56085c5b9ef8 <col:8> col:8 implicit constexpr operator= 'in6_addr &(in6_addr &&)' inline default trivial noexcept-unevaluated 0x56085c5b9ef8
  `-ParmVarDecl 0x56085c5ba008 <col:8> col:8 'in6_addr &&'

Layout: <CGRecordLayout
  LLVMType:%struct.in6_addr = type { %union.anon.1 }
  NonVirtualBaseLLVMType:%struct.in6_addr = type { %union.anon.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56085c5b6250 prev 0x56085c5638d0 <../dummy_inc/clicknet/ip6.h:16:1, line:42:1> line:16:8 referenced struct click_ip6 definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56085c5b6348 <col:1, col:8> col:8 implicit struct click_ip6
|-CXXRecordDecl 0x56085c5b63d8 <line:17:5, line:39:5> line:17:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56085c5b64f8 <line:18:2, line:27:2> line:18:2 struct definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-FieldDecl 0x56085c5b6628 <line:19:6, col:15> col:15 ip6_un1_flow 'uint32_t':'unsigned int'
| | |-FieldDecl 0x56085c5b6688 <line:24:6, col:15> col:15 ip6_un1_plen 'uint16_t':'unsigned short'
| | |-FieldDecl 0x56085c5b66e8 <line:25:6, col:14> col:14 referenced ip6_un1_nxt 'uint8_t':'unsigned char'
| | `-FieldDecl 0x56085c5b6748 <line:26:6, col:14> col:14 ip6_un1_hlim 'uint8_t':'unsigned char'
| |-FieldDecl 0x56085c5b6808 <line:18:2, line:27:4> col:4 referenced ip6_un1 'struct (anonymous struct at ../dummy_inc/clicknet/ip6.h:18:2)':'click_ip6::(anonymous struct at ../dummy_inc/clicknet/ip6.h:18:2)'
| |-FieldDecl 0x56085c5b6880 <line:28:2, col:10> col:10 ip6_un2_vfc 'uint8_t':'unsigned char'
| |-CXXRecordDecl 0x56085c5b68d0 <line:30:2, line:38:2> line:30:2 struct definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-FieldDecl 0x56085c5b6a40 <line:35:6, col:28> col:15 ip6_un3_fc 'unsigned int'
| | | `-ConstantExpr 0x56085c5b6a20 <col:28> 'int' Int: 4
| | |   `-IntegerLiteral 0x56085c5b69e8 <col:28> 'int' 4
| | `-FieldDecl 0x56085c5b6ae8 <line:36:6, col:27> col:15 ip6_un3_v 'unsigned int'
| |   `-ConstantExpr 0x56085c5b6ac8 <col:27> 'int' Int: 4
| |     `-IntegerLiteral 0x56085c5b6a90 <col:27> 'int' 4
| `-FieldDecl 0x56085c5b6ba8 <line:30:2, line:38:4> col:4 ip6_un3 'struct (anonymous struct at ../dummy_inc/clicknet/ip6.h:30:2)':'click_ip6::(anonymous struct at ../dummy_inc/clicknet/ip6.h:30:2)'
|-FieldDecl 0x56085c5b6d58 <line:17:5, line:39:7> col:7 referenced ip6_ctlun 'union (anonymous union at ../dummy_inc/clicknet/ip6.h:17:5)':'click_ip6::(anonymous union at ../dummy_inc/clicknet/ip6.h:17:5)'
|-FieldDecl 0x56085c5b6de0 <line:40:5, col:21> col:21 referenced ip6_src 'struct in6_addr':'in6_addr'
`-FieldDecl 0x56085c5b6e50 <line:41:5, col:21> col:21 referenced ip6_dst 'struct in6_addr':'in6_addr'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ip6 = type { %union.anon, %struct.in6_addr, %struct.in6_addr }
  NonVirtualBaseLLVMType:%struct.click_ip6 = type { %union.anon, %struct.in6_addr, %struct.in6_addr }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_udp
         0 |   uint16_t uh_sport
         2 |   uint16_t uh_dport
         4 |   uint16_t uh_ulen
         6 |   uint16_t uh_sum
           | [sizeof=8, dsize=8, align=2,
           |  nvsize=8, nvalign=2]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56085c5b7e60 prev 0x56085c563a30 <../dummy_inc/clicknet/udp.h:11:1, line:16:1> line:11:8 referenced struct click_udp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56085c5b7f58 <col:1, col:8> col:8 implicit struct click_udp
|-FieldDecl 0x56085c5b7ff8 <line:12:5, col:14> col:14 referenced uh_sport 'uint16_t':'unsigned short'
|-FieldDecl 0x56085c5b8058 <line:13:5, col:14> col:14 referenced uh_dport 'uint16_t':'unsigned short'
|-FieldDecl 0x56085c5b80b8 <line:14:5, col:14> col:14 uh_ulen 'uint16_t':'unsigned short'
`-FieldDecl 0x56085c5b8118 <line:15:5, col:14> col:14 uh_sum 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_udp = type { i16, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_udp = type { i16, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56085c36fb20 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x56085c36fc38 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x56085c36fcd8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x56085c36fd38 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x56085c36fd98 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x56085c36fe48 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56085c370150 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x56085c370268 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x56085c370310 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x56085c370378 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x56085c370408 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x56085c3764a0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x56085c3768d8 <col:12>
|-CXXConstructorDecl 0x56085c3765a8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56085c3766b8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56085c370310 'data' 'const char *'
| | `-ImplicitCastExpr 0x56085c378e60 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x56085c378e30 <col:12> 'const char *const' lvalue .data 0x56085c370310
| |     `-DeclRefExpr 0x56085c378e10 <col:12> 'const String::rep_t' lvalue ParmVar 0x56085c3766b8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56085c370378 'length' 'int'
| | `-ImplicitCastExpr 0x56085c378ef0 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x56085c378ec0 <col:12> 'const int' lvalue .length 0x56085c370378
| |     `-DeclRefExpr 0x56085c378ea0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56085c3766b8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x56085c370408 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x56085c378f80 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x56085c378f50 <col:12> 'String::memo_t *const' lvalue .memo 0x56085c370408
| |     `-DeclRefExpr 0x56085c378f30 <col:12> 'const String::rep_t' lvalue ParmVar 0x56085c3766b8 '' 'const String::rep_t &'
| `-CompoundStmt 0x56085c378fd8 <col:12>
|-CXXConstructorDecl 0x56085c376758 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56085c376758
| `-ParmVarDecl 0x56085c376868 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x56085c37bdc0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x56085c3877d8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x56085c3878e8 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x56085c387e00 <col:12>
|   |-BinaryOperator 0x56085c387c18 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x56085c387bd0 <col:12> 'const char *' lvalue ->data 0x56085c370310
|   | | `-CXXThisExpr 0x56085c387bc0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56085c387c00 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x56085c387b90 <col:12> 'const char *const' lvalue .data 0x56085c370310
|   |     `-DeclRefExpr 0x56085c387b70 <col:12> 'const String::rep_t' lvalue ParmVar 0x56085c3878e8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x56085c387ce0 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x56085c387c98 <col:12> 'int' lvalue ->length 0x56085c370378
|   | | `-CXXThisExpr 0x56085c387c88 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56085c387cc8 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x56085c387c58 <col:12> 'const int' lvalue .length 0x56085c370378
|   |     `-DeclRefExpr 0x56085c387c38 <col:12> 'const String::rep_t' lvalue ParmVar 0x56085c3878e8 '' 'const String::rep_t &'
|   |-BinaryOperator 0x56085c387da8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x56085c387d60 <col:12> 'String::memo_t *' lvalue ->memo 0x56085c370408
|   | | `-CXXThisExpr 0x56085c387d50 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x56085c387d90 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x56085c387d20 <col:12> 'String::memo_t *const' lvalue .memo 0x56085c370408
|   |     `-DeclRefExpr 0x56085c387d00 <col:12> 'const String::rep_t' lvalue ParmVar 0x56085c3878e8 '' 'const String::rep_t &'
|   `-ReturnStmt 0x56085c387df0 <col:12>
|     `-UnaryOperator 0x56085c387dd8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x56085c387dc8 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x56085c387958 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56085c387958
  `-ParmVarDecl 0x56085c387a68 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x56085c367090 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x56085c3671a8 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x56085c367238 <col:16, col:22> col:16 public
|-TypedefDecl 0x56085c367278 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x56085c03dfd0 'const char *'
|   `-QualType 0x56085c03d521 'const char' const
|     `-BuiltinType 0x56085c03d520 'char'
|-TypedefDecl 0x56085c367300 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x56085c3672d0 'String::const_iterator' sugar
|   |-Typedef 0x56085c367278 'const_iterator'
|   `-PointerType 0x56085c03dfd0 'const char *'
|     `-QualType 0x56085c03d521 'const char' const
|       `-BuiltinType 0x56085c03d520 'char'
|-TypedefDecl 0x56085c367470 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x56085c3673e0 'int (String::*)() const'
|   |-RecordType 0x56085c367120 'String'
|   | `-CXXRecord 0x56085c367090 'String'
|   `-ParenType 0x56085c367380 'int () const' sugar
|     `-FunctionProtoType 0x56085c33bf20 'int () const' const cdecl
|       `-BuiltinType 0x56085c03d580 'int'
|-TypedefDecl 0x56085c3674d8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x56085c1908e0 'int64_t' sugar
|   |-Typedef 0x56085c0a6390 'int64_t'
|   `-TypedefType 0x56085c07f630 '__int64_t' sugar
|     |-Typedef 0x56085c07f208 '__int64_t'
|     `-BuiltinType 0x56085c03d5a0 'long'
|-TypedefDecl 0x56085c367540 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x56085c190800 'uint64_t' sugar
|   |-Typedef 0x56085c0a6530 'uint64_t'
|   `-TypedefType 0x56085c07f6c0 '__uint64_t' sugar
|     |-Typedef 0x56085c07f278 '__uint64_t'
|     `-BuiltinType 0x56085c03d640 'unsigned long'
|-TypedefDecl 0x56085c3675d0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x56085c3675a0 'String::intmax_t' sugar
|   |-Typedef 0x56085c3674d8 'intmax_t'
|   `-TypedefType 0x56085c1908e0 'int64_t' sugar
|     |-Typedef 0x56085c0a6390 'int64_t'
|     `-TypedefType 0x56085c07f630 '__int64_t' sugar
|       |-Typedef 0x56085c07f208 '__int64_t'
|       `-BuiltinType 0x56085c03d5a0 'long'
|-TypedefDecl 0x56085c367660 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x56085c367630 'String::uintmax_t' sugar
|   |-Typedef 0x56085c367540 'uintmax_t'
|   `-TypedefType 0x56085c190800 'uint64_t' sugar
|     |-Typedef 0x56085c0a6530 'uint64_t'
|     `-TypedefType 0x56085c07f6c0 '__uint64_t' sugar
|       |-Typedef 0x56085c07f278 '__uint64_t'
|       `-BuiltinType 0x56085c03d640 'unsigned long'
|-CXXConstructorDecl 0x56085c367720 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x56085c3678c8 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x56085c367808 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x56085c367a78 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x56085c3679b8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x56085c367bd0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x56085c367b40 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x56085c367de8 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x56085c367c98 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x56085c367d18 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x56085c368008 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x56085c367eb8 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x56085c367f38 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x56085c368228 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x56085c3680d8 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x56085c368158 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x56085c368448 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x56085c3682f8 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x56085c368378 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x56085c3685d8 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x56085c368510 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x56085c368758 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x56085c368698 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x56085c3688e8 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x56085c368820 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x56085c368a40 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x56085c3689b0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x56085c368b98 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x56085c368b08 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x56085c368cf0 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x56085c368c60 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x56085c368e78 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x56085c368db8 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x56085c369008 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x56085c368f40 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x56085c369198 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x56085c3690d0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x56085c369328 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x56085c369260 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x56085c369420 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x56085c369548 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x56085c3696c8 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x56085c369600 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x56085c369818 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x56085c369788 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x56085c3698d0 <col:63> "" ""
|-CXXMethodDecl 0x56085c369a18 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x56085c369958 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x56085c369c28 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x56085c369ad8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x56085c369b58 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x56085c369e48 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x56085c369cf0 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x56085c369d70 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x56085c36a128 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x56085c369f08 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x56085c369f88 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x56085c375f70 <col:55> 'int' 10
| `-ParmVarDecl 0x56085c36a000 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56085c375f90 <col:76> 'bool' true
|-CXXMethodDecl 0x56085c36a408 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x56085c36a1f0 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x56085c36a270 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x56085c375fa0 <col:56> 'int' 10
| `-ParmVarDecl 0x56085c36a2e8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x56085c375fc0 <col:77> 'bool' true
|-CXXMethodDecl 0x56085c36a510 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x56085c36a5d8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x56085c36a6a0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x56085c36a740 <col:20>
| `-OptimizeNoneAttr 0x56085c36a798 <col:30>
|-CXXConversionDecl 0x56085c36a888 <line:83:5, col:45> col:12 operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x56085c36a958 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x56085c36aa18 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x56085c36ab08 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x56085c36abc8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x56085c36ad48 <line:90:5, col:35> col:17 operator[] 'char (int) const' inline
| `-ParmVarDecl 0x56085c36ac80 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x56085c36ae98 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x56085c36ae08 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x56085c36af88 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x56085c36b048 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x56085c36b298 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x56085c36b100 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x56085c36b180 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x56085c36b4f8 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x56085c36b360 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x56085c36b3e0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x56085c36b5c8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x56085c36b7d8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x56085c36b680 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x56085c36b700 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x56085c36b9f8 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x56085c36b8a0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x56085c36b920 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x56085c36bb88 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x56085c36bac0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x56085c36bc78 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x56085c36bde8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x56085c36bd28 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56085c36bff8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x56085c36bea8 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x56085c36bf28 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x56085c36c210 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x56085c36c0b8 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x56085c36c130 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x56085c36c3a0 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x56085c36c2d0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56085c36c5c0 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x56085c36c460 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x56085c36c4e0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x56085c36c710 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x56085c36c680 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x56085c36c8e8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x56085c36c7d0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x56085c36c850 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x56085c36ca38 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x56085c36c9a8 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x56085c36cc50 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x56085c36caf0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x56085c36cb70 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x56085c375fd0 <col:39> 'int' 0
|-CXXMethodDecl 0x56085c36ce70 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x56085c36cd10 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x56085c36cd90 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x56085c375ff0 <col:48> 'int' 0
|-CXXMethodDecl 0x56085c36d050 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x56085c36cf30 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x56085c36cfb0 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x56085c376010 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x56085c36d120 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x56085c36d1e0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x56085c36d2a0 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x56085c36d360 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x56085c36d420 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x56085c36d5c8 <line:135:5, col:45> col:20 operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x56085c36d4d0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x56085c36d748 <line:137:5, col:40> col:20 operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x56085c36d680 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x56085c36d920 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x56085c36d808 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x56085c36da98 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x56085c36d9d8 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x56085c36dbe0 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x56085c36db50 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x56085c36dd30 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x56085c36dca0 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x56085c36df08 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x56085c36ddf0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x56085c36de70 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x56085c36e0e8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x56085c36dfd0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x56085c36e050 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x56085c36e238 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x56085c36e1a8 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x56085c36e448 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x56085c36e2f8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x56085c36e378 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x56085c36e5a8 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x56085c36e510 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x56085c36e700 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x56085c36e668 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x56085c36e7a8 <col:57> "" ""
|-CXXMethodDecl 0x56085c36e8b8 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x56085c36e828 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x56085c36ea08 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x56085c36e978 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x56085c36eb88 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x56085c36eac0 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x56085c36ec50 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x56085c36ed10 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x56085c36edd0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x56085c36ee70 <col:49> "" ""
|-CXXMethodDecl 0x56085c36ef00 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x56085c36efc0 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x56085c36f0b0 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x56085c36f178 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x56085c36f238 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x56085c36f2f8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x56085c36f3f0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x56085c36f4b8 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x56085c36f580 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x56085c36f758 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x56085c36f638 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x56085c36f6b8 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x56085c36f980 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x56085c36f820 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x56085c36f8a0 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x56085c36fa90 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x56085c36faf8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x56085c36fb20 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x56085c36fc38 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x56085c36fcd8 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x56085c36fd38 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x56085c36fd98 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x56085c36fe48 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x56085c36feb0 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x56085c3700e8 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x56085c370138 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56085c3700c8 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x56085c36ffd8 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x56085c36ff80 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x56085c36ffc0 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x56085c36ffa0 <col:32> 'int' 8
|-CXXRecordDecl 0x56085c370150 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x56085c370268 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x56085c370310 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x56085c370378 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x56085c370408 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x56085c3764a0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x56085c3768d8 <col:12>
| |-CXXConstructorDecl 0x56085c3765a8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56085c3766b8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56085c370310 'data' 'const char *'
| | | `-ImplicitCastExpr 0x56085c378e60 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x56085c378e30 <col:12> 'const char *const' lvalue .data 0x56085c370310
| | |     `-DeclRefExpr 0x56085c378e10 <col:12> 'const String::rep_t' lvalue ParmVar 0x56085c3766b8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56085c370378 'length' 'int'
| | | `-ImplicitCastExpr 0x56085c378ef0 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x56085c378ec0 <col:12> 'const int' lvalue .length 0x56085c370378
| | |     `-DeclRefExpr 0x56085c378ea0 <col:12> 'const String::rep_t' lvalue ParmVar 0x56085c3766b8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x56085c370408 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x56085c378f80 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x56085c378f50 <col:12> 'String::memo_t *const' lvalue .memo 0x56085c370408
| | |     `-DeclRefExpr 0x56085c378f30 <col:12> 'const String::rep_t' lvalue ParmVar 0x56085c3766b8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x56085c378fd8 <col:12>
| |-CXXConstructorDecl 0x56085c376758 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56085c376758
| | `-ParmVarDecl 0x56085c376868 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x56085c37bdc0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x56085c3877d8 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x56085c3878e8 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x56085c387e00 <col:12>
| |   |-BinaryOperator 0x56085c387c18 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x56085c387bd0 <col:12> 'const char *' lvalue ->data 0x56085c370310
| |   | | `-CXXThisExpr 0x56085c387bc0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56085c387c00 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x56085c387b90 <col:12> 'const char *const' lvalue .data 0x56085c370310
| |   |     `-DeclRefExpr 0x56085c387b70 <col:12> 'const String::rep_t' lvalue ParmVar 0x56085c3878e8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x56085c387ce0 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x56085c387c98 <col:12> 'int' lvalue ->length 0x56085c370378
| |   | | `-CXXThisExpr 0x56085c387c88 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56085c387cc8 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x56085c387c58 <col:12> 'const int' lvalue .length 0x56085c370378
| |   |     `-DeclRefExpr 0x56085c387c38 <col:12> 'const String::rep_t' lvalue ParmVar 0x56085c3878e8 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x56085c387da8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x56085c387d60 <col:12> 'String::memo_t *' lvalue ->memo 0x56085c370408
| |   | | `-CXXThisExpr 0x56085c387d50 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x56085c387d90 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x56085c387d20 <col:12> 'String::memo_t *const' lvalue .memo 0x56085c370408
| |   |     `-DeclRefExpr 0x56085c387d00 <col:12> 'const String::rep_t' lvalue ParmVar 0x56085c3878e8 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x56085c387df0 <col:12>
| |     `-UnaryOperator 0x56085c387dd8 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x56085c387dc8 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x56085c387958 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x56085c387958
|   `-ParmVarDecl 0x56085c387a68 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x56085c370480 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x56085c3706c8 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x56085c3704e8 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x56085c370568 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x56085c3705e0 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x56085c376460 <col:79, line:261:5>
|   |-BinaryOperator 0x56085c3760d8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x56085c376070 <col:2, col:5> 'const char *' lvalue .data 0x56085c370310
|   | | `-MemberExpr 0x56085c376040 <col:2> 'String::rep_t' lvalue ->_r 0x56085c370480
|   | |   `-CXXThisExpr 0x56085c376030 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x56085c3760c0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x56085c3760a0 <col:12> 'const char *' lvalue ParmVar 0x56085c3704e8 'data' 'const char *'
|   |-BinaryOperator 0x56085c3761a0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x56085c376138 <col:2, col:5> 'int' lvalue .length 0x56085c370378
|   | | `-MemberExpr 0x56085c376108 <col:2> 'String::rep_t' lvalue ->_r 0x56085c370480
|   | |   `-CXXThisExpr 0x56085c3760f8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x56085c376188 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x56085c376168 <col:14> 'int' lvalue ParmVar 0x56085c370568 'length' 'int'
|   `-IfStmt 0x56085c376448 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x56085c3762c0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x56085c3762a8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x56085c376288 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x56085c376268 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x56085c376200 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x56085c370408
|     |       | `-MemberExpr 0x56085c3761d0 <col:7> 'String::rep_t' lvalue ->_r 0x56085c370480
|     |       |   `-CXXThisExpr 0x56085c3761c0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x56085c376250 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x56085c376230 <col:17> 'String::memo_t *' lvalue ParmVar 0x56085c3705e0 'memo' 'String::memo_t *'
|     `-CallExpr 0x56085c376420 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x56085c376408 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x56085c376310 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x56085c35f0f8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x56085c376378 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56085c36fcd8
|         `-ImplicitCastExpr 0x56085c376360 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x56085c376340 <col:27> 'String::memo_t *' lvalue ParmVar 0x56085c3705e0 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x56085c370978 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x56085c370798 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x56085c370818 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x56085c370890 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x56085c370480 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x56085c3768e8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x56085c376a78 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x56085c3769e0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x56085c376950 <col:2> '<bound member function type>' ->assign_memo 0x56085c3706c8
|     | `-ImplicitCastExpr 0x56085c376a18 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x56085c376940 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x56085c376a30 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x56085c376980 <col:14> 'const char *' lvalue ParmVar 0x56085c370798 'data' 'const char *'
|     |-ImplicitCastExpr 0x56085c376a48 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x56085c3769a0 <col:20> 'int' lvalue ParmVar 0x56085c370818 'length' 'int'
|     `-ImplicitCastExpr 0x56085c376a60 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x56085c3769c0 <col:28> 'String::memo_t *' lvalue ParmVar 0x56085c370890 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x56085c370b08 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x56085c370a48 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x56085c376cd0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x56085c376c50 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x56085c376aa0 <col:2> '<bound member function type>' ->assign_memo 0x56085c3706c8
|     | `-CXXThisExpr 0x56085c376a90 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x56085c376c88 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x56085c376b20 <col:14, col:19> 'const char *' lvalue .data 0x56085c370310
|     |   `-MemberExpr 0x56085c376af0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x56085c370480
|     |     `-DeclRefExpr 0x56085c376ad0 <col:14> 'const String' lvalue ParmVar 0x56085c370a48 'x' 'const String &'
|     |-ImplicitCastExpr 0x56085c376ca0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x56085c376ba0 <col:25, col:30> 'int' lvalue .length 0x56085c370378
|     |   `-MemberExpr 0x56085c376b70 <col:25, col:27> 'String::rep_t' lvalue ._r 0x56085c370480
|     |     `-DeclRefExpr 0x56085c376b50 <col:25> 'const String' lvalue ParmVar 0x56085c370a48 'x' 'const String &'
|     `-ImplicitCastExpr 0x56085c376cb8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x56085c376c20 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x56085c370408
|         `-MemberExpr 0x56085c376bf0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x56085c370480
|           `-DeclRefExpr 0x56085c376bd0 <col:38> 'const String' lvalue ParmVar 0x56085c370a48 'x' 'const String &'
|-CXXMethodDecl 0x56085c370bd0 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x56085c377690 <col:31, line:278:5>
|   `-IfStmt 0x56085c377678 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x56085c376d70 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x56085c376d58 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x56085c376d28 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x56085c370408
|     |     `-MemberExpr 0x56085c376cf8 <col:6> 'String::rep_t' lvalue ->_r 0x56085c370480
|     |       `-CXXThisExpr 0x56085c376ce8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x56085c377650 <col:15, line:277:2>
|       |-ParenExpr 0x56085c377220 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x56085c3771f0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x56085c376e80 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x56085c376e68 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x56085c376e50 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x56085c376e10 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56085c36fcd8
|       |   |       `-ImplicitCastExpr 0x56085c376df8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x56085c376dc8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x56085c370408
|       |   |           `-MemberExpr 0x56085c376d98 <col:27> 'String::rep_t' lvalue ->_r 0x56085c370480
|       |   |             `-CXXThisExpr 0x56085c376d88 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x56085c376ee0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x56085c376ec0 <col:54> 'int' 0
|       |   `-CallExpr 0x56085c377150 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x56085c377138 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x56085c3770b8 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x56085c0d70f0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x56085c377190 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x56085c376fc8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x56085c3771a8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x56085c376ff8 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x56085c3771c0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x56085c377030 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x56085c3771d8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x56085c3770a0 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x56085c377088 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x56085c377050 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x56085c377570 <line:274:6, line:275:22>
|       | |-CallExpr 0x56085c377430 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x56085c377418 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x56085c377390 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x56085c360540 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x56085c377360 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x56085c36fcd8
|       | |   `-ImplicitCastExpr 0x56085c377348 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x56085c377318 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x56085c370408
|       | |       `-MemberExpr 0x56085c3772e8 <col:40> 'String::rep_t' lvalue ->_r 0x56085c370480
|       | |         `-CXXThisExpr 0x56085c3772d8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x56085c377530 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x56085c377518 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x56085c377458 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x56085c3753b0 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x56085c377558 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x56085c3774b8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x56085c370408
|       |       `-MemberExpr 0x56085c377488 <col:15> 'String::rep_t' lvalue ->_r 0x56085c370480
|       |         `-CXXThisExpr 0x56085c377478 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x56085c377630 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x56085c3775c8 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x56085c370408
|         | `-MemberExpr 0x56085c377598 <col:6> 'String::rep_t' lvalue ->_r 0x56085c370480
|         |   `-CXXThisExpr 0x56085c377588 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x56085c377618 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x56085c3775f8 <col:16> 'int' 0
|-CXXMethodDecl 0x56085c370e68 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x56085c370c88 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x56085c370d08 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x56085c370d80 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x56085c370f40 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x56085c371190 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x56085c370ff8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x56085c371078 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x56085c3710f0 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x56085c371378 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x56085c371260 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x56085c3712e0 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x56085c371478 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x56085c377768 <col:41, line:286:5>
|   `-ReturnStmt 0x56085c377758 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x56085c377728 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x56085c3776f0 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x56085c3776d8 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x56085c3776b8 <col:46> 'int' 1
|-CXXMethodDecl 0x56085c371718 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x56085c371530 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x56085c3715b0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x56085c371630 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x56085c3753b0 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x56085c3717e0 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x56085c375480 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x56085c375650 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x56085c375538 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x56085c3755b8 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x56085c375710 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x56085c3757d8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x56085c3758d8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x56085c375950 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x56085c3759c8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x56085c375a30 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x56085c375b30 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x56085c375b80 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x56085c375b10 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x56085c375af0 <col:22> 'int' 14
|-CXXMethodDecl 0x56085c375d98 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x56085c375bb0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x56085c375c30 <col:38> col:41 'int'
| `-ParmVarDecl 0x56085c375cb0 <col:43> col:46 'int'
|-FriendDecl 0x56085c375ea0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x56085c375f30 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>
