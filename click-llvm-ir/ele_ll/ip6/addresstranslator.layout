
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:18:2)
         0 |   uint32_t ip6_un1_flow
         4 |   uint16_t ip6_un1_plen
         6 |   uint8_t ip6_un1_nxt
         7 |   uint8_t ip6_un1_hlim
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:30:2)
     0:0-3 |   unsigned int ip6_un3_fc
     0:4-7 |   unsigned int ip6_un3_v
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:17:5)
         0 |   struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:18:2) ip6_un1
         0 |     uint32_t ip6_un1_flow
         4 |     uint16_t ip6_un1_plen
         6 |     uint8_t ip6_un1_nxt
         7 |     uint8_t ip6_un1_hlim
         0 |   uint8_t ip6_un2_vfc
         0 |   struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:30:2) ip6_un3
     0:0-3 |     unsigned int ip6_un3_fc
     0:4-7 |     unsigned int ip6_un3_v
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | class IP6Address
         0 |   struct in6_addr _addr
         0 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |       uint8_t [16] __u6_addr8
         0 |       uint16_t [8] __u6_addr16
         0 |       uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct AddressTranslator::EntryMap
         0 |   class IP6Address _iai
         0 |     struct in6_addr _addr
         0 |       union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |         uint8_t [16] __u6_addr8
         0 |         uint16_t [8] __u6_addr16
         0 |         uint32_t [4] __u6_addr32
        16 |   unsigned short _ipi
        20 |   class IP6Address _mai
        20 |     struct in6_addr _addr
        20 |       union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
        20 |         uint8_t [16] __u6_addr8
        20 |         uint16_t [8] __u6_addr16
        20 |         uint32_t [4] __u6_addr32
        36 |   unsigned short _mpi
        40 |   class IP6Address _ea
        40 |     struct in6_addr _addr
        40 |       union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
        40 |         uint8_t [16] __u6_addr8
        40 |         uint16_t [8] __u6_addr16
        40 |         uint32_t [4] __u6_addr32
        56 |   unsigned short _ep
        58 |   _Bool _binding
        59 |   _Bool _static
           | [sizeof=60, dsize=60, align=4,
           |  nvsize=60, nvalign=4]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a8fa0ee8 prev 0x5572a8f8f698 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5572a8fa0fe0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x5572a8fa1070 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x5572a8fa10e8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x5572a8fa11a8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x5572a8fa1270 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x5572a8fa13e8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x5572a8fa1320 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x5572a8fa1490 <col:24>
| `-OptimizeNoneAttr 0x5572a8fa14e8 <col:34>
|-CXXMethodDecl 0x5572a8fa1530 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x5572a8fa17e8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x5572a8fa15e0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5572a8fa1658 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x5572a8fa16d8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x5572a8fa18a0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x5572a8fa18d8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x5572a8fa1940 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x5572a8fa19c8 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x5572a8fa1ce8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x5572a8fa1a80 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5572a8fa1af8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x5572a8fa1b70 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x5572a8fa1bf0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x5572a8fa1e00 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x5572a8fa8718 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5572a8fa8718
| `-ParmVarDecl 0x5572a8fa8828 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x5572a8fa88c8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5572a8fa88c8
| `-ParmVarDecl 0x5572a8fa89d8 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x5572a8ef1228 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a8f8af28 prev 0x5572a8f8ac70 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5572a8f8b020 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x5572a8f8b0b0 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x5572a8f8b110 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x5572a8f8b200 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x5572a8f8b2f8 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x5572a8f8b4c8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x5572a8f8b378 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x5572a8f8b3f0 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x5572a8f8b658 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x5572a8f8b590 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x5572a8f8b700 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x5572a8f8b838 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x5572a8f8b770 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x5572a8f8b9d8 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x5572a8f8b918 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x5572a8f8bb78 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x5572a8f8bab8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x5572a8f8bc20 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x5572a8f8bd20 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x5572a8f8be00 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f8bd00 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x5572a8f8bce0 <col:26> 'int' 1
| `-EnumConstantDecl 0x5572a8f8bdb0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x5572a8f8be18 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5572a8f8bd90 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x5572a8f8bd70 <col:44> 'int' 2
|-CXXMethodDecl 0x5572a8f8bf60 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x5572a8f8be48 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x5572a8f8bec8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x5572a8f8c0b8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x5572a8f8c028 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x5572a8f8c2f8 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x5572a8f8c178 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x5572a8f8c1f0 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x5572a8f8c3a8 <col:20>
| `-OptimizeNoneAttr 0x5572a8f8c400 <col:30>
|-CXXMethodDecl 0x5572a8f8c508 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x5572a8f8c440 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x5572a8f8c5b0 <col:20>
| `-OptimizeNoneAttr 0x5572a8f8c608 <col:30>
|-CXXMethodDecl 0x5572a8f8c658 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x5572a8f8c720 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x5572a8f8c838 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x5572a8f8c8c0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x5572a8f8c948 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x5572a8f8c9d0 <line:58:5, col:33> col:23 PORTS_1_1 'const char []' static
|-VarDecl 0x5572a8f8ca58 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x5572a8f8cae8 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x5572a8f8cba8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x5572a8f8cc30 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x5572a8f8ccb8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x5572a8f8cd40 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x5572a8f8cdc8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x5572a8f8ce50 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x5572a8f8cee0 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x5572a8f8cfa0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x5572a8f8d030 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x5572a8f8d180 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x5572a8f8d0e8 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x5572a8f8d310 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x5572a8f8d240 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x5572a8f8d5b0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x5572a8f8d3c8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x5572a8f8d448 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x5572a8f8d4c8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x5572a8f8d668 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x5572a8f8d770 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5572a8f8da00 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f8d750 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x5572a8f8d730 <col:33> 'int' 0
| |-EnumConstantDecl 0x5572a8f8d800 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5572a8f8da18 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f8d7e0 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x5572a8f8d7c0 <col:32> 'int' 20
| |-EnumConstantDecl 0x5572a8f8d890 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5572a8f8da30 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f8d870 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x5572a8f8d850 <col:38> 'int' 90
| |-EnumConstantDecl 0x5572a8f8d920 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5572a8f8da48 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f8d900 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x5572a8f8d8e0 <col:35> 'int' 100
| `-EnumConstantDecl 0x5572a8f8d9b0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x5572a8f8da60 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5572a8f8d990 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x5572a8f8d970 <col:32> 'int' 2000
|-CXXMethodDecl 0x5572a8f8daa0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x5572a8f8dee0 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5572a8f8dd50 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x5572a8f8ddc8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5572a8f8dfb0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x5572a8f8e130 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x5572a8f8e060 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5572a8f8e338 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5572a8f8e1e8 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x5572a8f8e260 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5572a8f8e438 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x5572a8f8e4d8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x5572a8f8e5a0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x5572a8f8e630 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x5572a8f8e860 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f8e610 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x5572a8f8e5f0 <col:36> 'int' EnumConstant 0x5572a8f8e5a0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x5572a8f8e680 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5572a8f8e6d0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5572a8f8e720 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5572a8f8e770 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5572a8f8e7c0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x5572a8f8e810 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x5572a8f8e948 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x5572a8f8e888 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x5572a8f8ea10 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x5572a8f8ead0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x5572a8f8eb90 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x5572a8f8ec50 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x5572a8f8ed68 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x5572a8f8ee30 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x5572a8f8efb0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x5572a8f8eee0 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x5572a8f8f0d8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x5572a8f8f2d8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x5572a8f8f188 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x5572a8f8f208 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x5572a8fa4be8 <col:54, line:127:5>
|   |-ParenExpr 0x5572a8fa4a98 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x5572a8fa4a68 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x5572a8fa4758 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5572a8fa4730 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x5572a8fa4718 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x5572a8fa4700 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x5572a8fa46d0 <col:31> 'Router *' lvalue ->_router 0x5572a8fa25b0
|   |   |         `-CXXThisExpr 0x5572a8fa46c0 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5572a8fa47b8 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5572a8fa4798 <col:48> 'int' 0
|   |   `-CallExpr 0x5572a8fa49c8 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x5572a8fa49b0 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5572a8fa4990 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5572a8a97500 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5572a8fa4a08 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8fa4828 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x5572a8fa4a20 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8fa4848 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x5572a8fa4a38 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5572a8fa4880 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x5572a8fa4a50 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5572a8fa4978 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5572a8fa4960 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5572a8fa4918 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x5572a8fa4b30 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x5572a8fa4ac8 <col:9> 'Router *' lvalue ->_router 0x5572a8fa25b0
|   | | `-CXXThisExpr 0x5572a8fa4ab8 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x5572a8fa4b18 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5572a8fa4af8 <col:19> 'Router *' lvalue ParmVar 0x5572a8f8f188 'r' 'Router *'
|   `-BinaryOperator 0x5572a8fa4bc8 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x5572a8fa4b60 <col:9> 'int' lvalue ->_eindex 0x5572a8fa2618
|     | `-CXXThisExpr 0x5572a8fa4b50 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x5572a8fa4bb0 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x5572a8fa4b90 <col:19> 'int' lvalue ParmVar 0x5572a8f8f208 'eindex' 'int'
|-CXXMethodDecl 0x5572a8f8f460 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x5572a8f8f398 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x5572a8f8f530 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x5572a8f8f5f8 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x5572a8f8f698 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x5572a8f8f8e8 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x5572a8f8f760 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x5572a8f8f7e0 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x5572a8f8f998 <col:20>
| `-OptimizeNoneAttr 0x5572a8f8f9f0 <col:30>
|-CXXMethodDecl 0x5572a8f98b78 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5572a8f98ab0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x5572a8f98c20 <col:20>
| `-OptimizeNoneAttr 0x5572a8f98c78 <col:30>
|-CXXMethodDecl 0x5572a8f98d48 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5572a8f98cb8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x5572a8f98df0 <col:20>
| `-OptimizeNoneAttr 0x5572a8f98e48 <col:30>
|-CXXMethodDecl 0x5572a8f98fd8 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x5572a8f98e80 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x5572a8f98f00 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x5572a8f99168 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5572a8f990a0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5572a8f992b8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5572a8f99228 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5572a8f99408 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5572a8f99378 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5572a8f99558 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5572a8f994c8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5572a8f99818 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x5572a8f99610 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x5572a8f99690 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x5572a8f99738 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x5572a8f998f0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x5572a8f999b0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x5572a8f99c80 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5572a8f99b30 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x5572a8f99ba8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x5572a8f99da8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x5572a8f99f80 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x5572a8f99e60 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x5572a8f99ee0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x5572a8f9a168 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x5572a8f9a048 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x5572a8f9a0c8 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x5572a8f9a4d8 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5572a8f9a228 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5572a8f9a2a0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5572a8f9a320 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5572a8fa41d0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5572a8fa41b0 <col:106> 'int' 0
| `-ParmVarDecl 0x5572a8f9a398 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5572a8fa4208 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5572a8fa41e8 <col:126> 'int' 0
|-CXXMethodDecl 0x5572a8f9a858 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5572a8f9a5a8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5572a8f9a620 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5572a8f9a6a0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x5572a8f9a718 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5572a8fa4240 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5572a8fa4220 <col:114> 'int' 0
|-CXXMethodDecl 0x5572a8f9abe8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5572a8f9a930 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x5572a8f9a9a8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5572a8f9aa28 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x5572a8fa4258 <col:96> 'int' 0
| `-ParmVarDecl 0x5572a8f9aaa0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5572a8fa4298 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5572a8fa4278 <col:116> 'int' 0
|-CXXMethodDecl 0x5572a8f9af68 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5572a8f9acb8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5572a8f9ad30 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5572a8f9adb0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5572a8fa42d0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5572a8fa42b0 <col:109> 'int' 0
| `-ParmVarDecl 0x5572a8f9ae28 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5572a8fa4308 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5572a8fa42e8 <col:129> 'int' 0
|-CXXMethodDecl 0x5572a8f9b2e8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5572a8f9b038 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5572a8f9b0b0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5572a8f9b130 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x5572a8f9b1a8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5572a8fa4340 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5572a8fa4320 <col:117> 'int' 0
|-CXXMethodDecl 0x5572a8f9b678 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5572a8f9b3c0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5572a8f9b438 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5572a8f9b4b8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x5572a8fa4358 <col:99> 'int' 0
| `-ParmVarDecl 0x5572a8f9b530 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5572a8fa4398 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5572a8fa4378 <col:119> 'int' 0
|-CXXMethodDecl 0x5572a8f9ba98 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x5572a8f9b748 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5572a8f9b7c8 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5572a8f9b840 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5572a8f9b8c0 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5572a8fa43d0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5572a8fa43b0 <col:108> 'int' 0
| `-ParmVarDecl 0x5572a8f9b940 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x5572a8fa4408 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x5572a8fa43e8 <col:141> 'int' 0
|-CXXMethodDecl 0x5572a8f9beb8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5572a8f9bb70 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5572a8f9bbf0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5572a8f9bc68 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5572a8f9bce8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x5572a8f9bd68 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5572a8fa4420 <col:121> 'int' 0
|-CXXMethodDecl 0x5572a8f9c2e8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5572a8f9bf98 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x5572a8f9c018 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x5572a8f9c090 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5572a8f9c110 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x5572a8fa4440 <col:98> 'int' 0
| `-ParmVarDecl 0x5572a8f9c190 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5572a8fa4460 <col:123> 'int' 0
|-CXXMethodDecl 0x5572a8f9c5b0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x5572a8f9c3c0 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5572a8f9c440 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x5572a8f9c4c0 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x5572a8fa4480 <col:80> 'int' 0
|-EnumDecl 0x5572a8f9c668 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x5572a8f9c770 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5572a8f9ca00 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f9c750 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x5572a8f9c730 <col:42> 'int' 1
| |-EnumConstantDecl 0x5572a8f9c800 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5572a8f9ca18 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f9c7e0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x5572a8f9c7c0 <col:40> 'int' 2
| |-EnumConstantDecl 0x5572a8f9c890 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5572a8f9ca30 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f9c870 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x5572a8f9c850 <col:44> 'int' 4
| |-EnumConstantDecl 0x5572a8f9c920 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5572a8f9ca48 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f9c900 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x5572a8f9c8e0 <col:36> 'int' 7
| `-EnumConstantDecl 0x5572a8f9c9b0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x5572a8f9ca60 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5572a8f9c990 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x5572a8f9c970 <col:34> 'int' 6
|-CXXMethodDecl 0x5572a8f9cd18 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x5572a8f9ca88 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x5572a8f9cb28 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x5572a8f9cba8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x5572a8f9cc20 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x5572a8fa4538 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5572a8fa4520 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x5572a8fa4508 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5572a8fa44e8 <col:98, col:105> 'String' (CXXTemporary 0x5572a8fa44e8)
|           `-CXXTemporaryObjectExpr 0x5572a8fa44b0 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x5572a8f9cfb8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x5572a8f9cde8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5572a8f9ce60 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x5572a8f9ced8 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5572a8fa45e8 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5572a8fa45d0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5572a8fa45b8 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5572a8fa4598 <col:94, col:101> 'String' (CXXTemporary 0x5572a8fa4598)
| |         `-CXXTemporaryObjectExpr 0x5572a8fa4560 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x5572a8fa4dd0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x5572a8fa4d48 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x5572a8fa4d18 <col:9> '<bound member function type>' ->add_task_handlers 0x5572a8f9cd18
|     | `-CXXThisExpr 0x5572a8fa4d08 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5572a8fa4d88 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5572a8fa4c88 <col:27> 'Task *' lvalue ParmVar 0x5572a8f9cde8 'task' 'Task *'
|     |-ImplicitCastExpr 0x5572a8fa4da0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x5572a8fa4ca8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x5572a8f9ce60 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x5572a8fa4db8 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5572a8fa4cc8 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5572a8f9c9b0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5572a8fa4ce8 <col:62> 'const String' lvalue ParmVar 0x5572a8f9ced8 'prefix' 'const String &'
|-CXXMethodDecl 0x5572a8f9d1c8 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x5572a8f9d080 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5572a8f9d0f8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5572a8fa4698 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5572a8fa4680 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5572a8fa4668 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5572a8fa4648 <col:70, col:77> 'String' (CXXTemporary 0x5572a8fa4648)
| |         `-CXXTemporaryObjectExpr 0x5572a8fa4610 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x5572a8fa4fa8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x5572a8fa4f20 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x5572a8fa4ef0 <col:9> '<bound member function type>' ->add_task_handlers 0x5572a8f9cd18
|     | `-CXXThisExpr 0x5572a8fa4ee0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5572a8fa4f60 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5572a8fa4e60 <col:27> 'Task *' lvalue ParmVar 0x5572a8f9d080 'task' 'Task *'
|     |-ImplicitCastExpr 0x5572a8fa4f78 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x5572a8fa4e80 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x5572a8fa4f90 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5572a8fa4ea0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5572a8f9c9b0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5572a8fa4ec0 <col:57> 'const String' lvalue ParmVar 0x5572a8f9d0f8 'prefix' 'const String &'
|-CXXMethodDecl 0x5572a8f9d4a8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x5572a8f9d290 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5572a8f9d310 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5572a8f9d388 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x5572a8f9d758 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x5572a8f9d578 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5572a8f9d5f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5572a8f9d678 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x5572a8f9da48 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5572a8f9d828 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5572a8f9d8a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5572a8f9d920 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x5572a8f9dcf8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x5572a8f9db18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5572a8f9db98 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5572a8f9dc18 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x5572a8f9dfa8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x5572a8f9ddc8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5572a8f9de48 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5572a8f9dec8 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x5572a8f9e258 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x5572a8f9e078 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5572a8f9e0f8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5572a8f9e170 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x5572a8f9e508 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x5572a8f9e328 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5572a8f9e3a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5572a8f9e428 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x5572a8f9e7b8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x5572a8f9e5d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5572a8f9e658 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5572a8f9e6d8 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x5572a8f9ea98 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x5572a8f9e888 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5572a8f9e908 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5572a8f9e9b0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x5572a8f9ed78 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x5572a8f9eb68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5572a8f9ebe8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5572a8f9ec90 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x5572a8f9efe0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5572a8f9ee48 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5572a8f9eec8 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5572a8f9ef40 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x5572a8f9f288 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x5572a8f9f0b0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5572a8f9f130 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5572a8f9f1a8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x5572a8f9f538 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x5572a8f9f358 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5572a8f9f3d8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5572a8f9f458 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x5572a8f9f7e8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x5572a8f9f608 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5572a8f9f688 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5572a8f9f700 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x5572a8f9fa98 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x5572a8f9f8b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5572a8f9f938 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5572a8f9f9b0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x5572a8f9fd48 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x5572a8f9fb68 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5572a8f9fbe8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5572a8f9fc60 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x5572a8fa0078 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x5572a8f9fe18 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5572a8f9fe98 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x5572a8f9ff10 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x5572a8f9ff88 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5572a8fa46b0 <col:93> 'bool' false
|-CXXMethodDecl 0x5572a8fa0260 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5572a8fa0148 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x5572a8fa01c8 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x5572a8fa0438 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5572a8fa0320 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x5572a8fa03a0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x5572a8fa0718 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5572a8fa04f8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x5572a8fa0570 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x5572a8fa05f0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x5572a8fa0668 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x5572a8fa0a08 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5572a8fa07e8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x5572a8fa0860 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x5572a8fa08e0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x5572a8fa0958 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x5572a8fa0c50 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x5572a8fa0af8 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x5572a8fa0b78 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x5572a8fa0e38 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x5572a8fa0d18 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x5572a8fa0d98 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x5572a8fa0ee8 prev 0x5572a8f8f698 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5572a8fa0fe0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x5572a8fa1070 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x5572a8fa10e8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x5572a8fa11a8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x5572a8fa1270 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x5572a8fa13e8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x5572a8fa1320 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x5572a8fa1490 <col:24>
| | `-OptimizeNoneAttr 0x5572a8fa14e8 <col:34>
| |-CXXMethodDecl 0x5572a8fa1530 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x5572a8fa17e8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x5572a8fa15e0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5572a8fa1658 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x5572a8fa16d8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x5572a8fa18a0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x5572a8fa18d8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x5572a8fa1940 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x5572a8fa19c8 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x5572a8fa1ce8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x5572a8fa1a80 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5572a8fa1af8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x5572a8fa1b70 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x5572a8fa1bf0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x5572a8fa1e00 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x5572a8fa8718 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5572a8fa8718
| | `-ParmVarDecl 0x5572a8fa8828 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x5572a8fa88c8 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5572a8fa88c8
| | `-ParmVarDecl 0x5572a8fa89d8 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x5572a8ef1228 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5572a8fa1e78 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x5572a8fa1f18 <col:38> "" ""
|-CXXMethodDecl 0x5572a8fa1fa8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x5572a8fa2048 <col:44> "" ""
|-AccessSpecDecl 0x5572a8fa20b8 <line:260:3, col:10> col:3 private
|-EnumDecl 0x5572a8fa20e0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x5572a8fa21e0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x5572a8fa2230 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5572a8fa21c0 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x5572a8fa21a0 <col:27> 'int' 4
|-FieldDecl 0x5572a8fa22e8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x5572a8fa2498 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x5572a8fa2550 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x5572a8fa25b0 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x5572a8fa2618 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x5572a8fa2768 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x5572a8fa26a8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x5572a8fa2918 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x5572a8fa2828 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x5572a8fa2af8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x5572a8fa29d8 <col:20> col:23 'int'
| `-ParmVarDecl 0x5572a8fa2a58 <col:25> col:28 'int'
|-CXXMethodDecl 0x5572a8fa2da0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x5572a8fa2bc0 <col:23> col:26 'int'
| |-ParmVarDecl 0x5572a8fa2c40 <col:28> col:31 'int'
| `-ParmVarDecl 0x5572a8fa2cb8 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x5572a8fa2e58 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x5572a8fa2f20 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x5572a8fa2f70 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x5572a8fa2fc0 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x5572a8fa31a0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x5572a8fa3050 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x5572a8fa30c8 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5572a8fa3448 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x5572a8fa3268 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x5572a8fa32e8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x5572a8fa3360 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x5572a8fa3668 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x5572a8fa3518 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x5572a8fa3598 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x5572a8fa39a0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x5572a8fa3728 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x5572a8fa37a8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x5572a8fa3820 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x5572a8fa38a0 <col:57> col:60 'int'
|-CXXMethodDecl 0x5572a8fa3b88 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5572a8fa3a70 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x5572a8fa3af0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x5572a8fa3cd8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x5572a8fa3c48 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x5572a8fa4058 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x5572a8fa3d98 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x5572a8fa3e18 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x5572a8fa3e90 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x5572a8fa3f10 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x5572a8fa4170 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class sized_array_memory<60> >
         0 |   vector_memory<class sized_array_memory<60> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<struct AddressTranslator::EntryMap>
         0 |   class vector_memory<class sized_array_memory<60> > vm_
         0 |     vector_memory<class sized_array_memory<60> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashMap<class IP6FlowID, void *>
         0 |   struct HashMap<class IP6FlowID, void *>::Elt ** _buckets
         8 |   size_t _nbuckets
        16 |   void * _default_value
        24 |   size_t _n
        32 |   size_t _capacity
        40 |   class HashMap_Arena * _arena
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class HashMap<class IP6FlowID, class AddressTranslator::Mapping *>
         0 |   class HashMap<class IP6FlowID, void *> (base)
         0 |     struct HashMap<class IP6FlowID, void *>::Elt ** _buckets
         8 |     size_t _nbuckets
        16 |     void * _default_value
        24 |     size_t _n
        32 |     size_t _capacity
        40 |     class HashMap_Arena * _arena
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | class AddressTranslator
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
       112 |   class Vector<struct AddressTranslator::EntryMap> _v
       112 |     class vector_memory<class sized_array_memory<60> > vm_
       112 |       vector_memory<class sized_array_memory<60> >::type * l_
       120 |       vector_memory::size_type n_
       124 |       vector_memory::size_type capacity_
       128 |   int _number_of_smap
       132 |   _Bool _static_portmapping
       133 |   _Bool _dynamic_mapping
       134 |   _Bool _dynamic_portmapping
       135 |   _Bool _dynamic_mapping_allocation_direction
       136 |   _Bool [6] _static_mapping
       144 |   class HashMap<class IP6FlowID, class AddressTranslator::Mapping *> _in_map
       144 |     class HashMap<class IP6FlowID, void *> (base)
       144 |       struct HashMap<class IP6FlowID, void *>::Elt ** _buckets
       152 |       size_t _nbuckets
       160 |       void * _default_value
       168 |       size_t _n
       176 |       size_t _capacity
       184 |       class HashMap_Arena * _arena
       192 |   class HashMap<class IP6FlowID, class AddressTranslator::Mapping *> _out_map
       192 |     class HashMap<class IP6FlowID, void *> (base)
       192 |       struct HashMap<class IP6FlowID, void *>::Elt ** _buckets
       200 |       size_t _nbuckets
       208 |       void * _default_value
       216 |       size_t _n
       224 |       size_t _capacity
       232 |       class HashMap_Arena * _arena
       240 |   class IP6Address _maddr
       240 |     struct in6_addr _addr
       240 |       union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
       240 |         uint8_t [16] __u6_addr8
       240 |         uint16_t [8] __u6_addr16
       240 |         uint32_t [4] __u6_addr32
       256 |   unsigned short _mportl
       258 |   unsigned short _mporth
       264 |   class AddressTranslator::Mapping * _rover
       272 |   class AddressTranslator::Mapping * _rover2
       280 |   int _nmappings
       284 |   int _nmappings2
           | [sizeof=288, dsize=288, align=8,
           |  nvsize=288, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5572a9028a00 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'sized_array_memory<60>'
|-CXXRecordDecl 0x5572a9028bd8 prev 0x5572a9028a00 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5572a9028c68 <col:46, col:52> col:46 public
|-TypedefDecl 0x5572a9028c90 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5572a89f8370 'int'
|-TypedefDecl 0x5572a902a860 <line:13:5, col:31> col:31 type 'typename sized_array_memory<60>::type':'char_array<60>'
| `-ElaboratedType 0x5572a902a810 'typename sized_array_memory<60>::type' sugar
|   `-TypedefType 0x5572a9029140 'sized_array_memory<60>::type' sugar
|     |-Typedef 0x5572a9029040 'type'
|     `-TemplateSpecializationType 0x5572a9028fd0 'char_array<60UL>' sugar char_array
|       |-TemplateArgument expr
|       | `-ConstantExpr 0x5572a9028eb0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 60
|       |   `-SubstNonTypeTemplateParmExpr 0x5572a9028e90 <col:24> 'unsigned long'
|       |     `-IntegerLiteral 0x5572a9028e70 <col:24> 'unsigned long' 60
|       `-RecordType 0x5572a9028fb0 'char_array<60>'
|         `-ClassTemplateSpecialization 0x5572a9028ed0 'char_array'
|-TypedefDecl 0x5572a902a918 <../dummy_inc/click/vector.hh:14:5, col:19> col:19 iterator 'vector_memory<sized_array_memory<60> >::type *'
| `-PointerType 0x5572a902a8e0 'vector_memory<sized_array_memory<60> >::type *'
|   `-TypedefType 0x5572a902a8c0 'vector_memory<sized_array_memory<60> >::type' sugar
|     |-Typedef 0x5572a902a860 'type'
|     `-ElaboratedType 0x5572a902a810 'typename sized_array_memory<60>::type' sugar
|       `-TypedefType 0x5572a9029140 'sized_array_memory<60>::type' sugar
|         |-Typedef 0x5572a9029040 'type'
|         `-TemplateSpecializationType 0x5572a9028fd0 'char_array<60UL>' sugar char_array
|           |-TemplateArgument expr
|           | `-ConstantExpr 0x5572a9028eb0 <../dummy_inc/click/array_memory.hh:11:24> 'unsigned long' Int: 60
|           |   `-SubstNonTypeTemplateParmExpr 0x5572a9028e90 <col:24> 'unsigned long'
|           |     `-IntegerLiteral 0x5572a9028e70 <col:24> 'unsigned long' 60
|           `-RecordType 0x5572a9028fb0 'char_array<60>'
|             `-ClassTemplateSpecialization 0x5572a9028ed0 'char_array'
|-CXXMethodDecl 0x5572a902aa98 <../dummy_inc/click/vector.hh:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<sized_array_memory<60> >::type *) const' inline
| `-ParmVarDecl 0x5572a902a9a8 <col:36, col:48> col:48 argp 'const vector_memory<sized_array_memory<60> >::type *'
|-CXXConstructorDecl 0x5572a902ab88 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5572a902ac68 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x5572a902af38 <line:25:5, col:43> col:10 assign 'void (const vector_memory<sized_array_memory<60> > &)'
| `-ParmVarDecl 0x5572a902ae40 <col:17, col:42> col:42 x 'const vector_memory<sized_array_memory<60> > &'
|-CXXMethodDecl 0x5572a902b178 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<sized_array_memory<60> >::type *)'
| |-ParmVarDecl 0x5572a902aff0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5572a902b068 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<60> >::type *'
|-CXXMethodDecl 0x5572a902b348 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<sized_array_memory<60> >::type *)'
| |-ParmVarDecl 0x5572a902b238 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5572a902b2b0 <col:30, col:42> col:42 vp 'const vector_memory<sized_array_memory<60> >::type *'
|-CXXMethodDecl 0x5572a902b4a8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<sized_array_memory<60> >::iterator ()'
|-CXXMethodDecl 0x5572a902b578 <line:31:5, line:33:5> line:31:14 end 'vector_memory<sized_array_memory<60> >::iterator ()'
|-CXXMethodDecl 0x5572a902b7c8 <line:34:5, col:48> col:14 insert 'vector_memory<sized_array_memory<60> >::iterator (vector_memory<sized_array_memory<60> >::iterator, const vector_memory<sized_array_memory<60> >::type *)'
| |-ParmVarDecl 0x5572a902b638 <col:21, col:30> col:30 it 'vector_memory<sized_array_memory<60> >::iterator':'vector_memory<sized_array_memory<60> >::type *'
| `-ParmVarDecl 0x5572a902b6b0 <col:34, col:46> col:46 vp 'const vector_memory<sized_array_memory<60> >::type *'
|-CXXMethodDecl 0x5572a902ba28 <line:35:5, col:42> col:14 erase 'vector_memory<sized_array_memory<60> >::iterator (vector_memory<sized_array_memory<60> >::iterator, vector_memory<sized_array_memory<60> >::iterator)'
| |-ParmVarDecl 0x5572a902b898 <col:20, col:29> col:29 a 'vector_memory<sized_array_memory<60> >::iterator':'vector_memory<sized_array_memory<60> >::type *'
| `-ParmVarDecl 0x5572a902b910 <col:32, col:41> col:41 b 'vector_memory<sized_array_memory<60> >::iterator':'vector_memory<sized_array_memory<60> >::type *'
|-CXXMethodDecl 0x5572a902bbe8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<sized_array_memory<60> >::type *)' inline
| `-ParmVarDecl 0x5572a902baf8 <col:27, col:39> col:39 vp 'const vector_memory<sized_array_memory<60> >::type *'
|-CXXMethodDecl 0x5572a902bda8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<sized_array_memory<60> >::type *)' inline
| `-ParmVarDecl 0x5572a902bcb0 <col:37, col:43> col:43 vp 'vector_memory<sized_array_memory<60> >::type *'
|-CXXMethodDecl 0x5572a902be60 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5572a902bf10 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5572a902c148 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<sized_array_memory<60> >::type *)'
| |-ParmVarDecl 0x5572a902bfc0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5572a902c038 <col:45, col:57> col:57 vp 'const vector_memory<sized_array_memory<60> >::type *'
|-CXXMethodDecl 0x5572a902c3e8 <line:66:5, col:35> col:10 swap 'void (vector_memory<sized_array_memory<60> > &)'
| `-ParmVarDecl 0x5572a902c2f0 <col:15, col:34> col:34 x 'vector_memory<sized_array_memory<60> > &'
|-FieldDecl 0x5572a902c4b0 <line:68:5, col:11> col:11 l_ 'vector_memory<sized_array_memory<60> >::type *'
|-FieldDecl 0x5572a902c500 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5572a902c550 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %struct.char_array*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5572a9027238 <../dummy_inc/click/vector.hh:110:1, line:197:1> line:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'AddressTranslator::EntryMap'
|-CXXRecordDecl 0x5572a9027448 prev 0x5572a9027238 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5572a9028970 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<EntryMap>::type':'sized_array_memory<60>'
| `-ElaboratedType 0x5572a9028920 'typename array_memory<EntryMap>::type' sugar
|   `-TypedefType 0x5572a9028900 'conditional<true, sized_array_memory<60>, typed_array_memory<AddressTranslator::EntryMap> >::type' sugar
|     |-Typedef 0x5572a90287b0 'type'
|     `-SubstTemplateTypeParmType 0x5572a90285d0 'sized_array_memory<60>' sugar
|       |-TemplateTypeParmType 0x5572a8d09120 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5572a8d090c8 'T'
|       `-RecordType 0x5572a9028120 'sized_array_memory<60>'
|         `-ClassTemplateSpecialization 0x5572a9028040 'sized_array_memory'
|-FieldDecl 0x5572a902c5a0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<AddressTranslator::EntryMap>::array_memory_type>':'vector_memory<sized_array_memory<60> >' mutable
|-AccessSpecDecl 0x5572a902c5f0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5572a902c628 <line:118:5, col:15> col:15 value_type 'AddressTranslator::EntryMap':'AddressTranslator::EntryMap'
| `-SubstTemplateTypeParmType 0x5572a90274e0 'AddressTranslator::EntryMap' sugar
|   |-TemplateTypeParmType 0x5572a8f6aa10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5572a8f6a9b8 'T'
|   `-RecordType 0x5572a9026de0 'AddressTranslator::EntryMap'
|     `-CXXRecord 0x5572a9026d50 'EntryMap'
|-TypedefDecl 0x5572a902c6e8 <line:119:5, col:16> col:16 reference 'AddressTranslator::EntryMap &'
| `-LValueReferenceType 0x5572a902c6b0 'AddressTranslator::EntryMap &'
|   `-SubstTemplateTypeParmType 0x5572a90274e0 'AddressTranslator::EntryMap' sugar
|     |-TemplateTypeParmType 0x5572a8f6aa10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5572a8f6a9b8 'T'
|     `-RecordType 0x5572a9026de0 'AddressTranslator::EntryMap'
|       `-CXXRecord 0x5572a9026d50 'EntryMap'
|-TypedefDecl 0x5572a902c800 <line:120:5, col:22> col:22 const_reference 'const AddressTranslator::EntryMap &'
| `-LValueReferenceType 0x5572a902c770 'const AddressTranslator::EntryMap &'
|   `-QualType 0x5572a90274e1 'const AddressTranslator::EntryMap' const
|     `-SubstTemplateTypeParmType 0x5572a90274e0 'AddressTranslator::EntryMap' sugar
|       |-TemplateTypeParmType 0x5572a8f6aa10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5572a8f6a9b8 'T'
|       `-RecordType 0x5572a9026de0 'AddressTranslator::EntryMap'
|         `-CXXRecord 0x5572a9026d50 'EntryMap'
|-TypedefDecl 0x5572a902c8c8 <line:121:5, col:16> col:16 pointer 'AddressTranslator::EntryMap *'
| `-PointerType 0x5572a902c890 'AddressTranslator::EntryMap *'
|   `-SubstTemplateTypeParmType 0x5572a90274e0 'AddressTranslator::EntryMap' sugar
|     |-TemplateTypeParmType 0x5572a8f6aa10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5572a8f6a9b8 'T'
|     `-RecordType 0x5572a9026de0 'AddressTranslator::EntryMap'
|       `-CXXRecord 0x5572a9026d50 'EntryMap'
|-TypedefDecl 0x5572a902c988 <line:122:5, col:22> col:22 const_pointer 'const AddressTranslator::EntryMap *'
| `-PointerType 0x5572a902c950 'const AddressTranslator::EntryMap *'
|   `-QualType 0x5572a90274e1 'const AddressTranslator::EntryMap' const
|     `-SubstTemplateTypeParmType 0x5572a90274e0 'AddressTranslator::EntryMap' sugar
|       |-TemplateTypeParmType 0x5572a8f6aa10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5572a8f6a9b8 'T'
|       `-RecordType 0x5572a9026de0 'AddressTranslator::EntryMap'
|         `-CXXRecord 0x5572a9026d50 'EntryMap'
|-TypedefDecl 0x5572a902d7f0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<EntryMap>::type':'const AddressTranslator::EntryMap &'
| `-ElaboratedType 0x5572a902d7a0 'typename fast_argument<EntryMap>::type' sugar
|   `-TypedefType 0x5572a902d780 'fast_argument<AddressTranslator::EntryMap, true>::type' sugar
|     |-Typedef 0x5572a902d6b8 'type'
|     `-LValueReferenceType 0x5572a902d680 'const AddressTranslator::EntryMap &'
|       `-QualType 0x5572a902d421 'const AddressTranslator::EntryMap' const
|         `-SubstTemplateTypeParmType 0x5572a902d420 'AddressTranslator::EntryMap' sugar
|           |-TemplateTypeParmType 0x5572a8d11210 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5572a8d111b8 'T'
|           `-RecordType 0x5572a9026de0 'AddressTranslator::EntryMap'
|             `-CXXRecord 0x5572a9026d50 'EntryMap'
|-TypedefDecl 0x5572a902d858 <line:126:5, col:22> col:22 const_access_type 'const AddressTranslator::EntryMap &'
| `-LValueReferenceType 0x5572a902c770 'const AddressTranslator::EntryMap &'
|   `-QualType 0x5572a90274e1 'const AddressTranslator::EntryMap' const
|     `-SubstTemplateTypeParmType 0x5572a90274e0 'AddressTranslator::EntryMap' sugar
|       |-TemplateTypeParmType 0x5572a8f6aa10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5572a8f6a9b8 'T'
|       `-RecordType 0x5572a9026de0 'AddressTranslator::EntryMap'
|         `-CXXRecord 0x5572a9026d50 'EntryMap'
|-TypedefDecl 0x5572a902d8b0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5572a89f8370 'int'
|-TypedefDecl 0x5572a902d918 <line:130:5, col:16> col:16 iterator 'AddressTranslator::EntryMap *'
| `-PointerType 0x5572a902c890 'AddressTranslator::EntryMap *'
|   `-SubstTemplateTypeParmType 0x5572a90274e0 'AddressTranslator::EntryMap' sugar
|     |-TemplateTypeParmType 0x5572a8f6aa10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5572a8f6a9b8 'T'
|     `-RecordType 0x5572a9026de0 'AddressTranslator::EntryMap'
|       `-CXXRecord 0x5572a9026d50 'EntryMap'
|-TypedefDecl 0x5572a902d980 <line:131:5, col:22> col:22 const_iterator 'const AddressTranslator::EntryMap *'
| `-PointerType 0x5572a902c950 'const AddressTranslator::EntryMap *'
|   `-QualType 0x5572a90274e1 'const AddressTranslator::EntryMap' const
|     `-SubstTemplateTypeParmType 0x5572a90274e0 'AddressTranslator::EntryMap' sugar
|       |-TemplateTypeParmType 0x5572a8f6aa10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5572a8f6a9b8 'T'
|       `-RecordType 0x5572a9026de0 'AddressTranslator::EntryMap'
|         `-CXXRecord 0x5572a9026d50 'EntryMap'
|-EnumDecl 0x5572a902d9d8 <line:134:5> col:5
| `-EnumConstantDecl 0x5572a902dad0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<AddressTranslator::EntryMap>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5572a902dab0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5572a8f6ba48 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5572a8f6ba20 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5572a8f6ba00 <col:40> 'int' 1
|-CXXConstructorDecl 0x5572a902db58 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x5572a902dde8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<AddressTranslator::EntryMap>::value_argument_type)' inline
| |-ParmVarDecl 0x5572a902dc10 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5572a902dcb0 <col:41, col:61> col:61 v 'Vector<AddressTranslator::EntryMap>::value_argument_type':'const AddressTranslator::EntryMap &'
|-CXXConstructorDecl 0x5572a902e0a8 <line:139:5, col:37> col:12 Vector 'void (const Vector<AddressTranslator::EntryMap> &)' inline
| `-ParmVarDecl 0x5572a902df90 <col:19, col:36> col:36 x 'const Vector<AddressTranslator::EntryMap> &'
|-CXXConstructorDecl 0x5572a902e368 <line:141:5, col:32> col:12 Vector 'void (Vector<AddressTranslator::EntryMap> &&)' inline
| `-ParmVarDecl 0x5572a902e250 <col:19, col:31> col:31 x 'Vector<AddressTranslator::EntryMap> &&'
|-CXXMethodDecl 0x5572a902e6b0 <line:144:5, col:51> col:23 operator= 'Vector<AddressTranslator::EntryMap> &(const Vector<AddressTranslator::EntryMap> &)' inline
| `-ParmVarDecl 0x5572a902e590 <col:33, col:50> col:50 x 'const Vector<AddressTranslator::EntryMap> &'
|-CXXMethodDecl 0x5572a902e9c0 <line:146:5, col:46> col:23 operator= 'Vector<AddressTranslator::EntryMap> &(Vector<AddressTranslator::EntryMap> &&)' inline
| `-ParmVarDecl 0x5572a902e8a0 <col:33, col:45> col:45 x 'Vector<AddressTranslator::EntryMap> &&'
|-CXXMethodDecl 0x5572a902ecb0 <line:148:5, col:70> col:23 assign 'Vector<AddressTranslator::EntryMap> &(Vector::size_type, Vector<AddressTranslator::EntryMap>::value_argument_type)' inline
| |-ParmVarDecl 0x5572a902eaf8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5572a902eb70 <col:43, col:69> col:63 v 'Vector<AddressTranslator::EntryMap>::value_argument_type':'const AddressTranslator::EntryMap &'
|-CXXMethodDecl 0x5572a902ee08 <line:150:5, col:55> col:49 begin 'Vector<AddressTranslator::EntryMap>::iterator ()'
| |-NoInlineAttr 0x5572a902eee8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5572a902ef40 <col:30> Inherited
|-CXXMethodDecl 0x5572a902ef88 <line:151:5, col:53> col:49 end 'Vector<AddressTranslator::EntryMap>::iterator ()'
| |-NoInlineAttr 0x5572a902f038 <col:20> Inherited
| `-OptimizeNoneAttr 0x5572a902f090 <col:30> Inherited
|-CXXMethodDecl 0x5572a902f158 <line:152:5, col:63> col:55 begin 'Vector<AddressTranslator::EntryMap>::const_iterator () const'
| |-NoInlineAttr 0x5572a902f208 <col:20> Inherited
| `-OptimizeNoneAttr 0x5572a902f260 <col:30> Inherited
|-CXXMethodDecl 0x5572a902f2a8 <line:153:5, col:61> col:55 end 'Vector<AddressTranslator::EntryMap>::const_iterator () const'
| |-NoInlineAttr 0x5572a902f358 <col:20> Inherited
| `-OptimizeNoneAttr 0x5572a902f3b0 <col:30> Inherited
|-CXXMethodDecl 0x5572a902f3f8 <line:154:5, col:64> col:55 cbegin 'Vector<AddressTranslator::EntryMap>::const_iterator () const'
| |-NoInlineAttr 0x5572a902f4a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5572a902f500 <col:30> Inherited
|-CXXMethodDecl 0x5572a902f548 <line:155:5, col:62> col:55 cend 'Vector<AddressTranslator::EntryMap>::const_iterator () const'
| |-NoInlineAttr 0x5572a902f5f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5572a902f650 <col:30> Inherited
|-CXXMethodDecl 0x5572a902f678 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5572a902f728 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5572a902f7d8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5572a902f998 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<AddressTranslator::EntryMap>::value_argument_type)' inline
| |-ParmVarDecl 0x5572a902f888 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5572a902f900 <col:37, col:63> col:57 v 'Vector<AddressTranslator::EntryMap>::value_argument_type':'const AddressTranslator::EntryMap &'
|-CXXMethodDecl 0x5572a902fae8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5572a902fa58 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5572a902fc98 <line:163:5, col:65> col:43 operator[] 'AddressTranslator::EntryMap &(Vector::size_type)'
| |-ParmVarDecl 0x5572a902fba0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5572a902fd50 <col:20>
| `-OptimizeNoneAttr 0x5572a902fda8 <col:30>
|-CXXMethodDecl 0x5572a902fec8 <line:164:5, col:73> col:49 operator[] 'const AddressTranslator::EntryMap &(Vector::size_type) const'
| |-ParmVarDecl 0x5572a902fdd0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5572a902ff80 <col:20>
| `-OptimizeNoneAttr 0x5572a902ffd8 <col:30>
|-CXXMethodDecl 0x5572a9030090 <line:165:5, col:29> col:15 at 'AddressTranslator::EntryMap &(Vector::size_type)' inline
| `-ParmVarDecl 0x5572a9030000 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5572a90301d8 <line:166:5, col:37> col:21 at 'const AddressTranslator::EntryMap &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5572a9030148 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5572a9030308 <line:167:5, col:21> col:15 front 'AddressTranslator::EntryMap &()' inline
|-CXXMethodDecl 0x5572a9030438 <line:168:5, col:29> col:21 front 'const AddressTranslator::EntryMap &() const' inline
|-CXXMethodDecl 0x5572a9030508 <line:169:5, col:20> col:15 back 'AddressTranslator::EntryMap &()' inline
|-CXXMethodDecl 0x5572a90305d8 <line:170:5, col:28> col:21 back 'const AddressTranslator::EntryMap &() const' inline
|-CXXMethodDecl 0x5572a9030718 <line:172:5, col:39> col:15 unchecked_at 'AddressTranslator::EntryMap &(Vector::size_type)' inline
| `-ParmVarDecl 0x5572a9030688 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5572a9030860 <line:173:5, col:47> col:21 unchecked_at 'const AddressTranslator::EntryMap &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5572a90307d0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5572a90309a8 <line:174:5, col:59> col:15 at_u 'AddressTranslator::EntryMap &(Vector::size_type)' inline
| |-ParmVarDecl 0x5572a9030918 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5572a9030a60 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5572a9030b60 <line:175:5, col:71> col:21 at_u 'const AddressTranslator::EntryMap &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5572a9030ad0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5572a9030c18 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5572a9030cd8 <line:177:5, col:20> col:15 data 'AddressTranslator::EntryMap *()' inline
|-CXXMethodDecl 0x5572a9030dd8 <line:178:5, col:28> col:21 data 'const AddressTranslator::EntryMap *() const' inline
|-CXXMethodDecl 0x5572a9030f88 <line:180:5, col:48> col:17 push_back 'void (Vector<AddressTranslator::EntryMap>::value_argument_type)' inline
| `-ParmVarDecl 0x5572a9030e98 <col:27, col:47> col:47 v 'Vector<AddressTranslator::EntryMap>::value_argument_type':'const AddressTranslator::EntryMap &'
|-FunctionTemplateDecl 0x5572a9031778 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5572a9031040 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<AddressTranslator::EntryMap>':'fast_argument<AddressTranslator::EntryMap, true>'
| `-CXXMethodDecl 0x5572a90316d8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (AddressTranslator::EntryMap &&)' inline
|   `-ParmVarDecl 0x5572a90315d8 <col:58, col:62> col:62 v 'AddressTranslator::EntryMap &&'
|-CXXMethodDecl 0x5572a9031858 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5572a90319a8 <line:186:5, col:49> col:17 push_front 'void (Vector<AddressTranslator::EntryMap>::value_argument_type)' inline
| `-ParmVarDecl 0x5572a9031918 <col:28, col:48> col:48 v 'Vector<AddressTranslator::EntryMap>::value_argument_type':'const AddressTranslator::EntryMap &'
|-CXXMethodDecl 0x5572a9031a60 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5572a9031ca8 <line:189:5, col:62> col:21 insert 'Vector<AddressTranslator::EntryMap>::iterator (Vector<AddressTranslator::EntryMap>::iterator, Vector<AddressTranslator::EntryMap>::value_argument_type)' inline
| |-ParmVarDecl 0x5572a9031b20 <col:28, col:37> col:37 it 'Vector<AddressTranslator::EntryMap>::iterator':'AddressTranslator::EntryMap *'
| `-ParmVarDecl 0x5572a9031b98 <col:41, col:61> col:61 v 'Vector<AddressTranslator::EntryMap>::value_argument_type':'const AddressTranslator::EntryMap &'
|-CXXMethodDecl 0x5572a9031e68 <line:190:5, col:38> col:21 erase 'Vector<AddressTranslator::EntryMap>::iterator (Vector<AddressTranslator::EntryMap>::iterator)' inline
| `-ParmVarDecl 0x5572a9031d78 <col:27, col:36> col:36 it 'Vector<AddressTranslator::EntryMap>::iterator':'AddressTranslator::EntryMap *'
|-CXXMethodDecl 0x5572a90320b8 <line:191:5, col:49> col:21 erase 'Vector<AddressTranslator::EntryMap>::iterator (Vector<AddressTranslator::EntryMap>::iterator, Vector<AddressTranslator::EntryMap>::iterator)' inline
| |-ParmVarDecl 0x5572a9031f30 <col:27, col:36> col:36 a 'Vector<AddressTranslator::EntryMap>::iterator':'AddressTranslator::EntryMap *'
| `-ParmVarDecl 0x5572a9031fa8 <col:39, col:48> col:48 b 'Vector<AddressTranslator::EntryMap>::iterator':'AddressTranslator::EntryMap *'
|-CXXMethodDecl 0x5572a9032178 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5572a90323d8 <line:195:5, col:34> col:17 swap 'void (Vector<AddressTranslator::EntryMap> &)' inline
| `-ParmVarDecl 0x5572a90322e0 <col:22, col:33> col:33 x 'Vector<AddressTranslator::EntryMap> &'
`-CXXDestructorDecl 0x5572a90324a8 <line:111:7> col:7 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x5572a8ef1218 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HashMap_Arena
         0 |   struct HashMap_Arena::Link * _free
         8 |   char * _cur_buffer
        16 |   int _buffer_pos
        20 |   uint32_t _element_size
        24 |   char ** _buffers
        32 |   int _nbuffers
        36 |   int _buffers_cap
        40 |   uint32_t _refcount
        44 |   _Bool _detached
           | [sizeof=48, dsize=45, align=8,
           |  nvsize=45, nvalign=8]

*** Dumping AST Record Layout
         0 | struct HashMap_Arena::Link
         0 |   struct HashMap_Arena::Link * next
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a8fe3be8 <../dummy_inc/click/bighashmap_arena.hh:21:5, line:23:5> line:21:12 referenced struct Link definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5572a8fe3d08 <col:5, col:12> col:12 implicit referenced struct Link
`-FieldDecl 0x5572a8fe3dd8 <line:22:2, col:8> col:8 referenced next 'HashMap_Arena::Link *'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashMap_Arena::Link" = type { %"struct.HashMap_Arena::Link"* }
  NonVirtualBaseLLVMType:%"struct.HashMap_Arena::Link" = type { %"struct.HashMap_Arena::Link"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a8fe3368 prev 0x5572a8fb01e8 <../dummy_inc/click/bighashmap_arena.hh:6:1, line:48:1> line:6:7 referenced class HashMap_Arena definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5572a8fe3460 <col:1, col:7> col:7 implicit referenced class HashMap_Arena
|-AccessSpecDecl 0x5572a8fe34f0 <col:23, col:29> col:23 public
|-CXXConstructorDecl 0x5572a8fe35d0 <line:8:5, col:40> col:5 HashMap_Arena 'void (uint32_t)'
| `-ParmVarDecl 0x5572a8fe3528 <col:19, col:28> col:28 element_size 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5572a8fe36a0 <line:10:5, col:31> col:10 referenced use 'void ()'
| `-CompoundStmt 0x5572a8fe5998 <col:16, col:31>
|   `-UnaryOperator 0x5572a8fe5980 <col:18, col:27> 'uint32_t':'unsigned int' postfix '++'
|     `-MemberExpr 0x5572a8fe5950 <col:18> 'uint32_t':'unsigned int' lvalue ->_refcount 0x5572a8fe52a8
|       `-CXXThisExpr 0x5572a8fe5940 <col:18> 'HashMap_Arena *' implicit this
|-CXXMethodDecl 0x5572a8fe3760 <line:11:5, col:16> col:10 unuse 'void ()'
|-CXXMethodDecl 0x5572a8fe3848 <line:13:5, col:47> col:10 detached 'bool () const'
| `-CompoundStmt 0x5572a8fe5a18 <col:27, col:47>
|   `-ReturnStmt 0x5572a8fe5a08 <col:29, col:36>
|     `-ImplicitCastExpr 0x5572a8fe59f0 <col:36> 'bool' <LValueToRValue>
|       `-MemberExpr 0x5572a8fe59c0 <col:36> 'const bool' lvalue ->_detached 0x5572a8fe5308
|         `-CXXThisExpr 0x5572a8fe59b0 <col:36> 'const HashMap_Arena *' implicit this
|-CXXMethodDecl 0x5572a8fe3908 <line:14:5, col:39> col:10 detach 'void ()'
| `-CompoundStmt 0x5572a8fe5aa0 <col:19, col:39>
|   `-BinaryOperator 0x5572a8fe5a80 <col:21, col:33> 'bool' lvalue '='
|     |-MemberExpr 0x5572a8fe5a40 <col:21> 'bool' lvalue ->_detached 0x5572a8fe5308
|     | `-CXXThisExpr 0x5572a8fe5a30 <col:21> 'HashMap_Arena *' implicit this
|     `-CXXBoolLiteralExpr 0x5572a8fe5a70 <col:33> 'bool' true
|-CXXMethodDecl 0x5572a8fe39d0 <line:16:5, col:17> col:11 alloc 'void *()'
|-CXXMethodDecl 0x5572a8fe3b18 <line:17:5, col:21> col:10 free 'void (void *)'
| `-ParmVarDecl 0x5572a8fe3a88 <col:15, col:20> col:21 'void *'
|-AccessSpecDecl 0x5572a8fe3bc0 <line:19:3, col:10> col:3 private
|-CXXRecordDecl 0x5572a8fe3be8 <line:21:5, line:23:5> line:21:12 referenced struct Link definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5572a8fe3d08 <col:5, col:12> col:12 implicit referenced struct Link
| `-FieldDecl 0x5572a8fe3dd8 <line:22:2, col:8> col:8 referenced next 'HashMap_Arena::Link *'
|-FieldDecl 0x5572a8fe3e50 <line:24:5, col:11> col:11 referenced _free 'HashMap_Arena::Link *'
|-EnumDecl 0x5572a8fe3ea0 <line:26:5, col:28> col:5
| `-EnumConstantDecl 0x5572a8fe3fa0 <col:12, col:24> col:12 NELEMENTS 'HashMap_Arena::(anonymous enum at ../dummy_inc/click/bighashmap_arena.hh:26:5)'
|   `-ImplicitCastExpr 0x5572a8fe3ff0 <col:24> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5572a8fe3f80 <col:24> 'int' Int: 127
|       `-IntegerLiteral 0x5572a8fe3f60 <col:24> 'int' 127
|-FieldDecl 0x5572a8fe4020 <line:28:5, col:11> col:11 referenced _cur_buffer 'char *'
|-FieldDecl 0x5572a8fe50b0 <line:29:5, col:9> col:9 referenced _buffer_pos 'int'
|-FieldDecl 0x5572a8fe5110 <line:31:5, col:14> col:14 referenced _element_size 'uint32_t':'unsigned int'
|-FieldDecl 0x5572a8fe5178 <line:33:5, col:12> col:12 _buffers 'char **'
|-FieldDecl 0x5572a8fe51e0 <line:34:5, col:9> col:9 _nbuffers 'int'
|-FieldDecl 0x5572a8fe5248 <line:35:5, col:9> col:9 _buffers_cap 'int'
|-FieldDecl 0x5572a8fe52a8 <line:37:5, col:14> col:14 referenced _refcount 'uint32_t':'unsigned int'
|-FieldDecl 0x5572a8fe5308 <line:38:5, col:10> col:10 referenced _detached 'bool'
|-CXXConstructorDecl 0x5572a8fe5458 <line:40:5, col:40> col:5 HashMap_Arena 'void (const HashMap_Arena &)'
| `-ParmVarDecl 0x5572a8fe5398 <col:19, col:39> col:40 'const HashMap_Arena &'
|-CXXDestructorDecl 0x5572a8fe5550 <line:41:5, col:20> col:5 used ~HashMap_Arena 'void () noexcept'
|-CXXMethodDecl 0x5572a8fe5738 <line:42:5, col:51> col:20 operator= 'HashMap_Arena &(const HashMap_Arena &)'
| `-ParmVarDecl 0x5572a8fe5640 <col:30, col:50> col:51 'const HashMap_Arena &'
|-CXXMethodDecl 0x5572a8fe5808 <line:44:5, col:22> col:11 used hard_alloc 'void *()'
`-FriendDecl 0x5572a8fe5900 <line:46:5, col:19> col:12 'struct Link':'HashMap_Arena::Link'

Layout: <CGRecordLayout
  LLVMType:%class.HashMap_Arena = type <{ %"struct.HashMap_Arena::Link"*, i8*, i32, i32, i8**, i32, i32, i32, i8, [3 x i8] }>
  NonVirtualBaseLLVMType:%class.HashMap_Arena.base = type <{ %"struct.HashMap_Arena::Link"*, i8*, i32, i32, i8**, i32, i32, i32, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5572a9033300 <../dummy_inc/click/hashmap.hh:228:1, line:319:1> line:229:7 class HashMap definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'IP6FlowID'
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x5572a90337c0 prev 0x5572a9033300 <col:1, col:7> col:7 implicit class HashMap
|-AccessSpecDecl 0x5572a9033850 <col:28, col:34> col:28 public
|-TypedefDecl 0x5572a9033888 <line:231:5, col:15> col:15 key_type 'IP6FlowID':'IP6FlowID'
| `-SubstTemplateTypeParmType 0x5572a9033500 'IP6FlowID' sugar
|   |-TemplateTypeParmType 0x5572a8fc2220 'K' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5572a8fc21d0 'K'
|   `-RecordType 0x5572a90156c0 'IP6FlowID'
|     `-CXXRecord 0x5572a9015628 'IP6FlowID'
|-TypedefDecl 0x5572a90338e0 <line:232:5, col:19> col:19 mapped_type 'void *'
| `-PointerType 0x5572a89f8ad0 'void *'
|   `-BuiltinType 0x5572a89f82d0 'void'
|-CXXRecordDecl 0x5572a9033938 <line:233:5, col:12> col:12 struct Pair
|-CXXConstructorDecl 0x5572a9033a38 <line:235:3, col:11> col:3 HashMap 'void ()'
|-CXXConstructorDecl 0x5572a9033c10 <line:236:3, col:54> col:12 HashMap 'void (void *, HashMap_ArenaFactory *)'
| |-ParmVarDecl 0x5572a9033af0 <col:20, col:25> col:26 'void *'
| `-ParmVarDecl 0x5572a9033b58 <col:28, col:53> col:51 'HashMap_ArenaFactory *'
|-CXXConstructorDecl 0x5572a9033f08 <line:237:3, col:37> col:3 HashMap 'void (const HashMap<IP6FlowID, void *> &)'
| `-ParmVarDecl 0x5572a9033df8 <col:11, col:36> col:37 'const HashMap<IP6FlowID, void *> &'
|-CXXDestructorDecl 0x5572a9033ff0 <line:238:3, col:12> col:3 ~HashMap 'void () noexcept'
|-CXXMethodDecl 0x5572a9034170 <line:240:3, col:40> col:8 set_arena 'void (HashMap_ArenaFactory *)'
| `-ParmVarDecl 0x5572a90340e0 <col:18, col:39> col:40 'HashMap_ArenaFactory *'
|-CXXMethodDecl 0x5572a9034228 <line:242:3, col:36> col:10 size 'size_t () const'
|-CXXMethodDecl 0x5572a90342d8 <line:243:3, col:40> col:8 empty 'bool () const'
|-CXXMethodDecl 0x5572a9034388 <line:244:3, col:47> col:10 nbuckets 'size_t () const'
|-CXXMethodDecl 0x5572a9034598 <line:246:3, col:30> col:9 find_pair 'HashMap<IP6FlowID, void *>::Pair *(const IP6FlowID &) const'
| `-ParmVarDecl 0x5572a90344a8 <col:19, col:27> col:28 'const IP6FlowID &'
|-CXXMethodDecl 0x5572a9034760 <line:247:3, col:34> col:17 findp 'void **(const IP6FlowID &) const' inline
| `-ParmVarDecl 0x5572a9034660 <col:23, col:31> col:32 'const IP6FlowID &'
|-CXXMethodDecl 0x5572a9036de0 <line:248:3, col:40> col:16 find 'void *(const IP6FlowID &, void *) const' inline
| |-ParmVarDecl 0x5572a9036c58 <col:21, col:29> col:30 'const IP6FlowID &'
| `-ParmVarDecl 0x5572a9036cc0 <col:32, col:37> col:38 'void *'
|-CXXMethodDecl 0x5572a9036fb0 <line:249:3, col:32> col:16 find 'void *(const IP6FlowID &) const' inline
| `-ParmVarDecl 0x5572a9036eb0 <col:21, col:29> col:30 'const IP6FlowID &'
|-CXXMethodDecl 0x5572a9037110 <line:250:3, col:38> col:16 operator[] 'void *(const IP6FlowID &) const' inline
| `-ParmVarDecl 0x5572a9037078 <col:27, col:35> col:36 'const IP6FlowID &'
|-CXXMethodDecl 0x5572a9037358 <line:252:3, col:42> col:9 find_pair_force 'HashMap<IP6FlowID, void *>::Pair *(const IP6FlowID &, void *)'
| |-ParmVarDecl 0x5572a90371d8 <col:25, col:33> col:34 'const IP6FlowID &'
| `-ParmVarDecl 0x5572a9037240 <col:36, col:41> col:42 'void *'
|-CXXMethodDecl 0x5572a9037518 <line:253:3, col:82> col:9 find_pair_force 'HashMap<IP6FlowID, void *>::Pair *(const IP6FlowID &)'
| `-ParmVarDecl 0x5572a9037428 <col:25, col:34> col:34 k 'const IP6FlowID &'
|-CXXMethodDecl 0x5572a9037760 <line:254:3, col:115> col:10 findp_force 'void **(const IP6FlowID &, void *)'
| |-ParmVarDecl 0x5572a90375e0 <col:22, col:31> col:31 k 'const IP6FlowID &'
| `-ParmVarDecl 0x5572a9037648 <col:34, col:40> col:40 v 'void *'
|-CXXMethodDecl 0x5572a90379b0 <line:255:3, col:71> col:10 find_force 'void *&(const IP6FlowID &, void *)'
| |-ParmVarDecl 0x5572a9037830 <col:21, col:30> col:30 k 'const IP6FlowID &'
| `-ParmVarDecl 0x5572a9037898 <col:33, col:39> col:39 v 'void *'
|-CXXMethodDecl 0x5572a9037b80 <line:256:3, col:75> col:10 findp_force 'void **(const IP6FlowID &)'
| `-ParmVarDecl 0x5572a9037a80 <col:22, col:31> col:31 k 'const IP6FlowID &'
|-CXXMethodDecl 0x5572a9037d40 <line:257:3, col:75> col:10 find_force 'void *&(const IP6FlowID &)'
| `-ParmVarDecl 0x5572a9037c48 <col:21, col:30> col:30 k 'const IP6FlowID &'
|-CXXMethodDecl 0x5572a9037f88 <line:259:3, col:32> col:8 insert 'bool (const IP6FlowID &, void *)'
| |-ParmVarDecl 0x5572a9037e08 <col:15, col:23> col:24 'const IP6FlowID &'
| `-ParmVarDecl 0x5572a9037e70 <col:26, col:31> col:32 'void *'
|-CXXMethodDecl 0x5572a9038148 <line:260:3, col:23> col:8 erase 'bool (const IP6FlowID &)'
| `-ParmVarDecl 0x5572a9038058 <col:14, col:22> col:23 'const IP6FlowID &'
|-CXXMethodDecl 0x5572a90382a0 <line:261:3, line:263:3> line:261:8 remove 'bool (const IP6FlowID &)'
| `-ParmVarDecl 0x5572a9038210 <col:15, col:24> col:24 key 'const IP6FlowID &'
|-CXXMethodDecl 0x5572a9038358 <line:264:3, col:14> col:8 clear 'void ()'
|-CXXMethodDecl 0x5572a9038618 <line:266:3, col:33> col:8 swap 'void (HashMap<IP6FlowID, void *> &)'
| `-ParmVarDecl 0x5572a9038528 <col:13, col:32> col:33 'HashMap<IP6FlowID, void *> &'
|-TypedefDecl 0x5572a90388a0 <line:269:3, col:46> col:46 const_iterator '_HashMap_const_iterator<IP6FlowID, void *>':'_HashMap_const_iterator<IP6FlowID, void *>'
| `-TemplateSpecializationType 0x5572a9038800 '_HashMap_const_iterator<IP6FlowID, void *>' sugar _HashMap_const_iterator
|   |-TemplateArgument type 'IP6FlowID':'IP6FlowID'
|   |-TemplateArgument type 'void *'
|   `-RecordType 0x5572a90387e0 '_HashMap_const_iterator<IP6FlowID, void *>'
|     `-ClassTemplateSpecialization 0x5572a90386e0 '_HashMap_const_iterator'
|-TypedefDecl 0x5572a9038ac0 <line:270:3, col:40> col:40 iterator '_HashMap_iterator<IP6FlowID, void *>':'_HashMap_iterator<IP6FlowID, void *>'
| `-TemplateSpecializationType 0x5572a9038a20 '_HashMap_iterator<IP6FlowID, void *>' sugar _HashMap_iterator
|   |-TemplateArgument type 'IP6FlowID':'IP6FlowID'
|   |-TemplateArgument type 'void *'
|   `-RecordType 0x5572a9038a00 '_HashMap_iterator<IP6FlowID, void *>'
|     `-ClassTemplateSpecialization 0x5572a9038908 '_HashMap_iterator'
|-CXXMethodDecl 0x5572a9038bb8 <line:271:3, col:33> col:25 begin 'HashMap<IP6FlowID, void *>::const_iterator () const' inline
|-CXXMethodDecl 0x5572a9038d08 <line:272:3, col:25> col:19 begin 'HashMap<IP6FlowID, void *>::iterator ()' inline
|-CXXMethodDecl 0x5572a9038dd8 <line:273:3, col:31> col:25 end 'HashMap<IP6FlowID, void *>::const_iterator () const' inline
|-CXXMethodDecl 0x5572a9038ea8 <line:274:3, col:23> col:19 end 'HashMap<IP6FlowID, void *>::iterator ()' inline
|-CXXMethodDecl 0x5572a9038fe8 <line:277:3, col:21> col:8 resize 'void (size_t)'
| `-ParmVarDecl 0x5572a9038f58 <col:15> col:21 'size_t':'unsigned long'
|-CXXMethodDecl 0x5572a90390a0 <line:278:3, col:66> col:8 dynamic_resizing 'bool () const'
|-CXXMethodDecl 0x5572a90391e0 <line:279:3, col:33> col:8 set_dynamic_resizing 'void (bool)'
| `-ParmVarDecl 0x5572a9039150 <col:29> col:33 'bool'
|-CXXMethodDecl 0x5572a9039558 <line:281:3, col:59> col:23 operator= 'HashMap<IP6FlowID, void *> &(const HashMap<IP6FlowID, void *> &)'
| `-ParmVarDecl 0x5572a9039428 <col:33, col:58> col:59 'const HashMap<IP6FlowID, void *> &'
|-CXXRecordDecl 0x5572a9039610 prev 0x5572a9033938 <line:283:3, col:10> col:10 struct Pair
|-EnumDecl 0x5572a90396b0 <line:288:3> col:3
| |-EnumConstantDecl 0x5572a90397a0 <col:10, col:25> col:10 MAX_NBUCKETS 'HashMap<IP6FlowID, void *>::(anonymous enum at ../dummy_inc/click/hashmap.hh:288:3)'
| | `-ImplicitCastExpr 0x5572a90398d0 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a9039780 <col:25> 'int' Int: 32767
| |     `-IntegerLiteral 0x5572a8fc6480 <col:25> 'int' 32767
| |-EnumConstantDecl 0x5572a9039810 <line:289:3, col:30> col:3 DEFAULT_INITIAL_NBUCKETS 'HashMap<IP6FlowID, void *>::(anonymous enum at ../dummy_inc/click/hashmap.hh:288:3)'
| | `-ImplicitCastExpr 0x5572a90398e8 <col:30> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a90397f0 <col:30> 'int' Int: 127
| |     `-IntegerLiteral 0x5572a8fc64f0 <col:30> 'int' 127
| `-EnumConstantDecl 0x5572a9039880 <line:290:3, col:30> col:3 DEFAULT_RESIZE_THRESHOLD 'HashMap<IP6FlowID, void *>::(anonymous enum at ../dummy_inc/click/hashmap.hh:288:3)'
|   `-ImplicitCastExpr 0x5572a9039900 <col:30> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5572a9039860 <col:30> 'int' Int: 2
|       `-IntegerLiteral 0x5572a8fc6560 <col:30> 'int' 2
|-AccessSpecDecl 0x5572a9039918 <line:292:3, col:10> col:3 private
|-CXXRecordDecl 0x5572a9039940 <line:294:5, col:12> col:12 struct Elt
|-FieldDecl 0x5572a9039a70 <line:302:3, col:9> col:9 _buckets 'HashMap<IP6FlowID, void *>::Elt **'
|-FieldDecl 0x5572a9039ac0 <line:303:3, col:10> col:10 _nbuckets 'size_t':'unsigned long'
|-FieldDecl 0x5572a9039b10 <line:304:3, col:9> col:9 _default_value 'void *'
|-FieldDecl 0x5572a9039b60 <line:306:3, col:10> col:10 _n 'size_t':'unsigned long'
|-FieldDecl 0x5572a9039bb0 <line:307:3, col:10> col:10 _capacity 'size_t':'unsigned long'
|-FieldDecl 0x5572a9039c00 <line:309:3, col:18> col:18 _arena 'HashMap_Arena *'
|-CXXMethodDecl 0x5572a9039d50 <line:311:3, col:49> col:8 initialize 'void (HashMap_ArenaFactory *, size_t)'
| |-ParmVarDecl 0x5572a9039c50 <col:19, col:40> col:41 'HashMap_ArenaFactory *'
| `-ParmVarDecl 0x5572a9039cb8 <col:43> col:49 'size_t':'unsigned long'
|-CXXMethodDecl 0x5572a9039fb8 <line:312:3, col:44> col:8 copy_from 'void (const HashMap<IP6FlowID, void *> &)'
| `-ParmVarDecl 0x5572a9039ef8 <col:18, col:43> col:44 'const HashMap<IP6FlowID, void *> &'
|-CXXMethodDecl 0x5572a903a100 <line:313:3, col:22> col:8 resize0 'void (size_t)'
| `-ParmVarDecl 0x5572a903a070 <col:16> col:22 'size_t':'unsigned long'
|-CXXMethodDecl 0x5572a903a2b8 <line:314:3, col:28> col:10 bucket 'size_t (const IP6FlowID &) const'
| `-ParmVarDecl 0x5572a903a1c8 <col:17, col:25> col:26 'const IP6FlowID &'
|-FriendDecl 0x5572a903a468 <line:316:3, col:43> col:10 'class _HashMap_iterator<IP6FlowID, void *>':'_HashMap_iterator<IP6FlowID, void *>'
`-FriendDecl 0x5572a903a5a8 <line:317:3, col:49> col:10 'class _HashMap_const_iterator<IP6FlowID, void *>':'_HashMap_const_iterator<IP6FlowID, void *>'

Layout: <CGRecordLayout
  LLVMType:%class.HashMap.0 = type { %"struct.HashMap<IP6FlowID, void *>::Elt"**, i64, i8*, i64, i64, %class.HashMap_Arena* }
  NonVirtualBaseLLVMType:%class.HashMap.0 = type { %"struct.HashMap<IP6FlowID, void *>::Elt"**, i64, i8*, i64, i64, %class.HashMap_Arena* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5572a9032908 <../dummy_inc/click/hashmap.hh:431:1, line:488:1> line:432:7 class HashMap definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'HashMap<IP6FlowID, void *>':'HashMap<IP6FlowID, void *>'
|-TemplateArgument type 'IP6FlowID'
|-TemplateArgument type 'AddressTranslator::Mapping *'
|-CXXRecordDecl 0x5572a903a618 prev 0x5572a9032908 <col:1, col:7> col:7 implicit class HashMap
|-AccessSpecDecl 0x5572a903a6a8 <col:53, col:59> col:53 public
|-TypedefDecl 0x5572a903a6e0 <line:434:5, col:15> col:15 key_type 'IP6FlowID':'IP6FlowID'
| `-SubstTemplateTypeParmType 0x5572a90331d0 'IP6FlowID' sugar
|   |-TemplateTypeParmType 0x5572a8fd1a60 'K' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5572a8fd1a10 'K'
|   `-RecordType 0x5572a90156c0 'IP6FlowID'
|     `-CXXRecord 0x5572a9015628 'IP6FlowID'
|-TypedefDecl 0x5572a903a748 <line:435:5, col:16> col:16 mapped_type 'AddressTranslator::Mapping *'
| `-PointerType 0x5572a9033240 'AddressTranslator::Mapping *'
|   `-SubstTemplateTypeParmType 0x5572a9033210 'AddressTranslator::Mapping' sugar
|     |-TemplateTypeParmType 0x5572a8fd1ae0 'T' dependent depth 0 index 1
|     | `-TemplateTypeParm 0x5572a8fd1a88 'T'
|     `-RecordType 0x5572a9025490 'AddressTranslator::Mapping'
|       `-CXXRecord 0x5572a903e248 'Mapping'
|-TypedefDecl 0x5572a903a850 <line:436:5, col:32> col:32 inherited 'HashMap<IP6FlowID, void *>':'HashMap<IP6FlowID, void *>'
| `-TemplateSpecializationType 0x5572a903a7b0 'HashMap<IP6FlowID, void *>' sugar HashMap
|   |-TemplateArgument type 'IP6FlowID':'IP6FlowID'
|   |-TemplateArgument type 'void *'
|   `-RecordType 0x5572a9033400 'HashMap<IP6FlowID, void *>'
|     `-ClassTemplateSpecialization 0x5572a9033300 'HashMap'
|-CXXRecordDecl 0x5572a903a8a8 <line:437:5, col:12> col:12 struct Pair
|-CXXConstructorDecl 0x5572a903a9a8 <line:439:3, col:29> col:3 HashMap 'void ()'
|-CXXConstructorDecl 0x5572a903ac08 <line:440:3, line:441:34> line:440:12 used HashMap 'void (AddressTranslator::Mapping *, HashMap_ArenaFactory *)'
| |-ParmVarDecl 0x5572a903aa70 <col:20, col:23> col:23 def 'AddressTranslator::Mapping *'
| `-ParmVarDecl 0x5572a903aad8 <col:28, col:60> col:50 factory 'HashMap_ArenaFactory *' cinit
|   `-ImplicitCastExpr 0x5572a8ef0df8 <col:60> 'HashMap_ArenaFactory *' <NullToPointer>
|     `-IntegerLiteral 0x5572a8fd5560 <col:60> 'int' 0
|-CXXConstructorDecl 0x5572a903af08 <line:442:3, col:54> col:3 HashMap 'void (const HashMap<IP6FlowID, AddressTranslator::Mapping *> &)'
| `-ParmVarDecl 0x5572a903adf8 <col:11, col:34> col:34 o 'const HashMap<IP6FlowID, AddressTranslator::Mapping *> &'
|-CXXDestructorDecl 0x5572a903aff0 <line:443:3, col:16> col:3 used ~HashMap 'void () noexcept'
|-CXXMethodDecl 0x5572a903b170 <line:445:3, col:72> col:8 set_arena 'void (HashMap_ArenaFactory *)'
| `-ParmVarDecl 0x5572a903b0e0 <col:18, col:40> col:40 af 'HashMap_ArenaFactory *'
|-CXXMethodDecl 0x5572a903b388 <line:451:3, col:97> col:9 find_pair 'HashMap<IP6FlowID, AddressTranslator::Mapping *>::Pair *(const IP6FlowID &) const'
| `-ParmVarDecl 0x5572a903b298 <col:19, col:28> col:28 k 'const IP6FlowID &'
|-CXXMethodDecl 0x5572a903b5a0 <line:452:3, col:85> col:7 findp 'AddressTranslator::Mapping **(const IP6FlowID &) const'
| `-ParmVarDecl 0x5572a903b4a8 <col:13, col:22> col:22 k 'const IP6FlowID &'
|-CXXMethodDecl 0x5572a903b7f8 <line:453:3, col:90> col:6 find 'AddressTranslator::Mapping *(const IP6FlowID &, AddressTranslator::Mapping *) const'
| |-ParmVarDecl 0x5572a903b668 <col:11, col:20> col:20 k 'const IP6FlowID &'
| `-ParmVarDecl 0x5572a903b6e0 <col:23, col:26> col:26 v 'AddressTranslator::Mapping *'
|-CXXMethodDecl 0x5572a903b9b8 <line:454:3, col:81> col:6 find 'AddressTranslator::Mapping *(const IP6FlowID &) const'
| `-ParmVarDecl 0x5572a903b8c8 <col:11, col:20> col:20 k 'const IP6FlowID &'
|-CXXMethodDecl 0x5572a903bb10 <line:455:3, col:93> col:6 operator[] 'AddressTranslator::Mapping *(const IP6FlowID &) const'
| `-ParmVarDecl 0x5572a903ba80 <col:17, col:26> col:26 k 'const IP6FlowID &'
|-CXXMethodDecl 0x5572a903bd68 <line:457:3, col:112> col:9 find_pair_force 'HashMap<IP6FlowID, AddressTranslator::Mapping *>::Pair *(const IP6FlowID &, AddressTranslator::Mapping *)'
| |-ParmVarDecl 0x5572a903bbd8 <col:25, col:34> col:34 k 'const IP6FlowID &'
| `-ParmVarDecl 0x5572a903bc50 <col:37, col:40> col:40 v 'AddressTranslator::Mapping *'
|-CXXMethodDecl 0x5572a903bf28 <line:458:3, col:103> col:9 find_pair_force 'HashMap<IP6FlowID, AddressTranslator::Mapping *>::Pair *(const IP6FlowID &)'
| `-ParmVarDecl 0x5572a903be38 <col:25, col:34> col:34 k 'const IP6FlowID &'
|-CXXMethodDecl 0x5572a903c180 <line:459:3, col:100> col:7 findp_force 'AddressTranslator::Mapping **(const IP6FlowID &, AddressTranslator::Mapping *)'
| |-ParmVarDecl 0x5572a903bff0 <col:19, col:28> col:28 k 'const IP6FlowID &'
| `-ParmVarDecl 0x5572a903c068 <col:31, col:34> col:34 v 'AddressTranslator::Mapping *'
|-CXXMethodDecl 0x5572a903c440 <line:460:3, col:100> col:7 find_force 'AddressTranslator::Mapping *&(const IP6FlowID &, AddressTranslator::Mapping *)'
| |-ParmVarDecl 0x5572a903c2a8 <col:18, col:27> col:27 k 'const IP6FlowID &'
| `-ParmVarDecl 0x5572a903c320 <col:30, col:33> col:33 v 'AddressTranslator::Mapping *'
|-CXXMethodDecl 0x5572a903c610 <line:461:3, col:91> col:7 findp_force 'AddressTranslator::Mapping **(const IP6FlowID &)'
| `-ParmVarDecl 0x5572a903c510 <col:19, col:28> col:28 k 'const IP6FlowID &'
|-CXXMethodDecl 0x5572a903c7d0 <line:462:3, col:91> col:7 find_force 'AddressTranslator::Mapping *&(const IP6FlowID &)'
| `-ParmVarDecl 0x5572a903c6d8 <col:18, col:27> col:27 k 'const IP6FlowID &'
|-CXXMethodDecl 0x5572a903ca28 <line:464:3, col:67> col:8 insert 'bool (const IP6FlowID &, AddressTranslator::Mapping *)'
| |-ParmVarDecl 0x5572a903c898 <col:15, col:24> col:24 k 'const IP6FlowID &'
| `-ParmVarDecl 0x5572a903c910 <col:27, col:30> col:30 v 'AddressTranslator::Mapping *'
|-CXXMethodDecl 0x5572a903ccd8 <line:469:3, col:55> col:8 swap 'void (HashMap<IP6FlowID, AddressTranslator::Mapping *> &)'
| `-ParmVarDecl 0x5572a903cbe8 <col:13, col:30> col:30 o 'HashMap<IP6FlowID, AddressTranslator::Mapping *> &'
|-TypedefDecl 0x5572a903cf70 <line:472:3, col:43> col:43 const_iterator '_HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *>':'_HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *>'
| `-TemplateSpecializationType 0x5572a903ced0 '_HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *>' sugar _HashMap_const_iterator
|   |-TemplateArgument type 'IP6FlowID':'IP6FlowID'
|   |-TemplateArgument type 'AddressTranslator::Mapping *'
|   `-RecordType 0x5572a903ceb0 '_HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *>'
|     `-ClassTemplateSpecialization 0x5572a903cdb0 '_HashMap_const_iterator'
|-TypedefDecl 0x5572a903d1a0 <line:473:3, col:37> col:37 iterator '_HashMap_iterator<IP6FlowID, AddressTranslator::Mapping *>':'_HashMap_iterator<IP6FlowID, AddressTranslator::Mapping *>'
| `-TemplateSpecializationType 0x5572a903d100 '_HashMap_iterator<IP6FlowID, AddressTranslator::Mapping *>' sugar _HashMap_iterator
|   |-TemplateArgument type 'IP6FlowID':'IP6FlowID'
|   |-TemplateArgument type 'AddressTranslator::Mapping *'
|   `-RecordType 0x5572a903d0e0 '_HashMap_iterator<IP6FlowID, AddressTranslator::Mapping *>'
|     `-ClassTemplateSpecialization 0x5572a903cfe8 '_HashMap_iterator'
|-CXXMethodDecl 0x5572a903d298 <line:474:3, col:33> col:25 begin 'HashMap<IP6FlowID, AddressTranslator::Mapping *>::const_iterator () const' inline
|-CXXMethodDecl 0x5572a903d3e8 <line:475:3, col:25> col:19 begin 'HashMap<IP6FlowID, AddressTranslator::Mapping *>::iterator ()' inline
|-CXXMethodDecl 0x5572a903d4b8 <line:476:3, col:31> col:25 end 'HashMap<IP6FlowID, AddressTranslator::Mapping *>::const_iterator () const' inline
|-CXXMethodDecl 0x5572a903d588 <line:477:3, col:23> col:19 end 'HashMap<IP6FlowID, AddressTranslator::Mapping *>::iterator ()' inline
|-CXXMethodDecl 0x5572a903d918 <line:481:3, col:122> col:20 operator= 'HashMap<IP6FlowID, AddressTranslator::Mapping *> &(const HashMap<IP6FlowID, AddressTranslator::Mapping *> &)'
| `-ParmVarDecl 0x5572a903d7e8 <col:30, col:53> col:53 o 'const HashMap<IP6FlowID, AddressTranslator::Mapping *> &'
`-CXXRecordDecl 0x5572a903d9d0 prev 0x5572a903a8a8 <line:483:3, col:10> col:10 struct Pair

Layout: <CGRecordLayout
  LLVMType:%class.HashMap = type { %class.HashMap.0 }
  NonVirtualBaseLLVMType:%class.HashMap = type { %class.HashMap.0 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a8c7e5a8 </usr/include/netinet/in.h:214:5, line:219:7> line:214:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x5572a8c7e7c8 <line:216:2, col:23> col:10 referenced __u6_addr8 'uint8_t [16]'
|-FieldDecl 0x5572a8c7e8f8 <line:217:2, col:24> col:11 __u6_addr16 'uint16_t [8]'
|-FieldDecl 0x5572a8c7ea28 <line:218:2, col:24> col:11 __u6_addr32 'uint32_t [4]'
|-CXXConstructorDecl 0x5572a8f40b78 <line:214:5> col:5 implicit used  'void () noexcept' inline default trivial
| `-CompoundStmt 0x5572a8f41388 <col:5>
|-CXXDestructorDecl 0x5572a8f40c50 <col:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5572a8f40d58 <col:5> col:5 implicit used constexpr  'void (const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept' inline default trivial
| |-ParmVarDecl 0x5572a8f40e68 <col:5> col:5 'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &'
| `-CompoundStmt 0x5572a8f42d90 <col:5>
|-CXXConstructorDecl 0x5572a8f40f08 <col:5> col:5 implicit used constexpr  'void (in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5572a8f41018 <col:5> col:5 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&'
| `-CompoundStmt 0x5572a8ebd8e8 <col:5>
|-CXXMethodDecl 0x5572a8f41ab8 <col:5> col:5 implicit used constexpr operator= 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &(const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept' inline default trivial
| |-ParmVarDecl 0x5572a8f41bc8 <col:5> col:5 'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &'
| `-CompoundStmt 0x5572a8f5a010 <col:5>
|   `-ReturnStmt 0x5572a8f5a000 <col:5>
|     `-UnaryOperator 0x5572a8f59fe8 <col:5> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5572a8f59fd8 <col:5> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) *' this
`-CXXMethodDecl 0x5572a8f41c38 <col:5> col:5 implicit constexpr operator= 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &(in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&)' inline default trivial noexcept-unevaluated 0x5572a8f41c38
  `-ParmVarDecl 0x5572a8f41d48 <col:5> col:5 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&'

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { [4 x i32] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a8c7e400 </usr/include/netinet/in.h:212:1, line:225:3> line:212:8 struct in6_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5572a8c7e518 <col:1, col:8> col:8 implicit struct in6_addr
|-CXXRecordDecl 0x5572a8c7e5a8 <line:214:5, line:219:7> line:214:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x5572a8c7e7c8 <line:216:2, col:23> col:10 referenced __u6_addr8 'uint8_t [16]'
| |-FieldDecl 0x5572a8c7e8f8 <line:217:2, col:24> col:11 __u6_addr16 'uint16_t [8]'
| |-FieldDecl 0x5572a8c7ea28 <line:218:2, col:24> col:11 __u6_addr32 'uint32_t [4]'
| |-CXXConstructorDecl 0x5572a8f40b78 <line:214:5> col:5 implicit used  'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5572a8f41388 <col:5>
| |-CXXDestructorDecl 0x5572a8f40c50 <col:5> col:5 implicit ~ 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x5572a8f40d58 <col:5> col:5 implicit used constexpr  'void (const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5572a8f40e68 <col:5> col:5 'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &'
| | `-CompoundStmt 0x5572a8f42d90 <col:5>
| |-CXXConstructorDecl 0x5572a8f40f08 <col:5> col:5 implicit used constexpr  'void (in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x5572a8f41018 <col:5> col:5 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&'
| | `-CompoundStmt 0x5572a8ebd8e8 <col:5>
| |-CXXMethodDecl 0x5572a8f41ab8 <col:5> col:5 implicit used constexpr operator= 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &(const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5572a8f41bc8 <col:5> col:5 'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &'
| | `-CompoundStmt 0x5572a8f5a010 <col:5>
| |   `-ReturnStmt 0x5572a8f5a000 <col:5>
| |     `-UnaryOperator 0x5572a8f59fe8 <col:5> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5572a8f59fd8 <col:5> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) *' this
| `-CXXMethodDecl 0x5572a8f41c38 <col:5> col:5 implicit constexpr operator= 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &(in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&)' inline default trivial noexcept-unevaluated 0x5572a8f41c38
|   `-ParmVarDecl 0x5572a8f41d48 <col:5> col:5 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&'
|-FieldDecl 0x5572a8c7eae8 <col:5, line:219:9> col:9 referenced __in6_u 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)'
|-CXXConstructorDecl 0x5572a8f40a88 <line:212:8> col:8 implicit used in6_addr 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x5572a8c7eae8 '__in6_u' 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)'
| | `-CXXConstructExpr 0x5572a8f41398 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' 'void () noexcept'
| `-CompoundStmt 0x5572a8f413f0 <col:8>
|-CXXConstructorDecl 0x5572a8f41088 <col:8> col:8 implicit used constexpr in6_addr 'void (const in6_addr &) noexcept' inline default trivial
| |-ParmVarDecl 0x5572a8f41168 <col:8> col:8 used 'const in6_addr &'
| |-CXXCtorInitializer Field 0x5572a8c7eae8 '__in6_u' 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)'
| | `-CXXConstructExpr 0x5572a8f42da0 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' 'void (const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept'
| |   `-MemberExpr 0x5572a8f42d60 <col:8> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5572a8c7eae8
| |     `-DeclRefExpr 0x5572a8f42d40 <col:8> 'const in6_addr' lvalue ParmVar 0x5572a8f41168 '' 'const in6_addr &'
| `-CompoundStmt 0x5572a8f42e00 <col:8>
|-CXXConstructorDecl 0x5572a8f41208 <col:8> col:8 implicit used constexpr in6_addr 'void (in6_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5572a8f41318 <col:8> col:8 used 'in6_addr &&'
| |-CXXCtorInitializer Field 0x5572a8c7eae8 '__in6_u' 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)'
| | `-CXXConstructExpr 0x5572a8ebd8f8 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' 'void (in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&) noexcept'
| |   `-MemberExpr 0x5572a8ebd8b8 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' xvalue .__in6_u 0x5572a8c7eae8
| |     `-CXXStaticCastExpr 0x5572a8ebd888 <col:8> 'in6_addr' xvalue static_cast<struct in6_addr &&> <NoOp>
| |       `-DeclRefExpr 0x5572a8ebd858 <col:8> 'in6_addr' lvalue ParmVar 0x5572a8f41318 '' 'in6_addr &&'
| `-CompoundStmt 0x5572a8ebd958 <col:8>
|-CXXMethodDecl 0x5572a8f41db8 <col:8> col:8 implicit used constexpr operator= 'in6_addr &(const in6_addr &) noexcept' inline default trivial
| |-ParmVarDecl 0x5572a8f41f10 <col:8> col:8 used 'const in6_addr &'
| `-CompoundStmt 0x5572a8f5a088 <col:8>
|   |-CXXMemberCallExpr 0x5572a8f5a028 <col:8> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue
|   | |-MemberExpr 0x5572a8f59f68 <col:8> '<bound member function type>' .operator= 0x5572a8f41ab8
|   | | `-MemberExpr 0x5572a8f59e78 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue ->__in6_u 0x5572a8c7eae8
|   | |   `-CXXThisExpr 0x5572a8f59e68 <col:8> 'in6_addr *' this
|   | `-MemberExpr 0x5572a8f59f38 <col:8> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5572a8c7eae8
|   |   `-DeclRefExpr 0x5572a8f59f18 <col:8> 'const in6_addr' lvalue ParmVar 0x5572a8f41f10 '' 'const in6_addr &'
|   `-ReturnStmt 0x5572a8f5a078 <col:8>
|     `-UnaryOperator 0x5572a8f5a060 <col:8> 'in6_addr' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5572a8f5a050 <col:8> 'in6_addr *' this
|-CXXMethodDecl 0x5572a8f41f80 <col:8> col:8 implicit constexpr operator= 'in6_addr &(in6_addr &&)' inline default trivial noexcept-unevaluated 0x5572a8f41f80
| `-ParmVarDecl 0x5572a8f42088 <col:8> col:8 'in6_addr &&'
`-CXXDestructorDecl 0x5572a8f42428 <col:8> col:8 implicit ~in6_addr 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.in6_addr = type { %union.anon }
  NonVirtualBaseLLVMType:%struct.in6_addr = type { %union.anon }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a8f3d350 prev 0x5572a8f01530 <../dummy_inc/click/ip6address.hh:14:1, line:175:1> line:14:7 referenced class IP6Address definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5572a8f3d448 <col:1, col:7> col:7 implicit referenced class IP6Address
|-AccessSpecDecl 0x5572a8f3d4d8 <col:20, col:26> col:20 public
|-TypedefDecl 0x5572a8f3d510 <line:16:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x5572a8b50710 'uninitialized_type'
|   `-CXXRecord 0x5572a8b50678 'uninitialized_type'
|-CXXConstructorDecl 0x5572a8f3d5d0 <line:19:5, line:21:5> line:19:12 used IP6Address 'void ()' inline
| |-CXXCtorInitializer Field 0x5572a8f40a08 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x5572a8f41400 <col:12> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x5572a8f41620 <col:25, line:21:5>
|   `-CallExpr 0x5572a8f415d0 <line:20:2, col:33> 'void *'
|     |-ImplicitCastExpr 0x5572a8f415b8 <col:2> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5572a8f41598 <col:2> 'void *(void *, int, size_t) throw()' lvalue Function 0x5572a8c25c38 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x5572a8f41608 <col:9, col:10> 'void *' <BitCast>
|     | `-UnaryOperator 0x5572a8f414e0 <col:9, col:10> 'struct in6_addr *' prefix '&' cannot overflow
|     |   `-MemberExpr 0x5572a8f414b0 <col:10> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x5572a8f40a08
|     |     `-CXXThisExpr 0x5572a8f414a0 <col:10> 'IP6Address *' implicit this
|     |-IntegerLiteral 0x5572a8f414f8 <col:17> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x5572a8f41578 <col:20, col:32> 'unsigned long' sizeof
|       `-ParenExpr 0x5572a8f41558 <col:26, col:32> 'struct in6_addr':'in6_addr' lvalue
|         `-MemberExpr 0x5572a8f41528 <col:27> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x5572a8f40a08 non_odr_use_unevaluated
|           `-CXXThisExpr 0x5572a8f41518 <col:27> 'IP6Address *' implicit this
|-CXXConstructorDecl 0x5572a8f3d720 <line:24:5, line:26:5> line:24:21 IP6Address 'void (const unsigned char *)' inline
| |-ParmVarDecl 0x5572a8f3d690 <col:32, col:53> col:53 used x 'const unsigned char *'
| |-CXXCtorInitializer Field 0x5572a8f40a08 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x5572a8f41638 <col:21> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x5572a8f41888 <col:56, line:26:5>
|   `-CallExpr 0x5572a8f41808 <line:25:2, col:33> 'void *'
|     |-ImplicitCastExpr 0x5572a8f417f0 <col:2> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5572a8f417d0 <col:2> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x5572a8c25108 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
|     |-ImplicitCastExpr 0x5572a8f41840 <col:9, col:10> 'void *' <BitCast>
|     | `-UnaryOperator 0x5572a8f41718 <col:9, col:10> 'struct in6_addr *' prefix '&' cannot overflow
|     |   `-MemberExpr 0x5572a8f416e8 <col:10> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x5572a8f40a08
|     |     `-CXXThisExpr 0x5572a8f416d8 <col:10> 'IP6Address *' implicit this
|     |-ImplicitCastExpr 0x5572a8f41870 <col:17> 'const void *' <BitCast>
|     | `-ImplicitCastExpr 0x5572a8f41858 <col:17> 'const unsigned char *' <LValueToRValue>
|     |   `-DeclRefExpr 0x5572a8f41730 <col:17> 'const unsigned char *' lvalue ParmVar 0x5572a8f3d690 'x' 'const unsigned char *'
|     `-UnaryExprOrTypeTraitExpr 0x5572a8f417b0 <col:20, col:32> 'unsigned long' sizeof
|       `-ParenExpr 0x5572a8f41790 <col:26, col:32> 'struct in6_addr':'in6_addr' lvalue
|         `-MemberExpr 0x5572a8f41760 <col:27> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x5572a8f40a08 non_odr_use_unevaluated
|           `-CXXThisExpr 0x5572a8f41750 <col:27> 'IP6Address *' implicit this
|-CXXConstructorDecl 0x5572a8f3d870 <line:31:5, line:33:5> line:31:21 used IP6Address 'void (IPAddress)' inline
| |-ParmVarDecl 0x5572a8f3d7e0 <col:32, col:42> col:42 used x 'IPAddress'
| |-CXXCtorInitializer Field 0x5572a8f40a08 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x5572a8f418a0 <col:21> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x5572a8f42c80 <col:45, line:33:5>
|   `-ExprWithCleanups 0x5572a8f42c68 <line:32:2, col:10> 'IP6Address' lvalue
|     `-CXXOperatorCallExpr 0x5572a8f42c30 <col:2, col:10> 'IP6Address' lvalue
|       |-ImplicitCastExpr 0x5572a8f42c18 <col:8> 'IP6Address &(*)(const struct in_addr &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5572a8f42b98 <col:8> 'IP6Address &(const struct in_addr &)' lvalue CXXMethod 0x5572a8f403a8 'operator=' 'IP6Address &(const struct in_addr &)'
|       |-UnaryOperator 0x5572a8f41908 <col:2, col:3> 'IP6Address' lvalue prefix '*' cannot overflow
|       | `-CXXThisExpr 0x5572a8f418f8 <col:3> 'IP6Address *' this
|       `-MaterializeTemporaryExpr 0x5572a8f42b80 <col:10> 'const struct in_addr':'const in_addr' lvalue
|         `-ImplicitCastExpr 0x5572a8f42b68 <col:10> 'const struct in_addr':'const in_addr' <NoOp>
|           `-ImplicitCastExpr 0x5572a8f42b50 <col:10> 'struct in_addr':'in_addr' <UserDefinedConversion>
|             `-CXXMemberCallExpr 0x5572a8f42b30 <col:10> 'struct in_addr':'in_addr'
|               `-MemberExpr 0x5572a8f42b00 <col:10> '<bound member function type>' .operator in_addr 0x5572a8d305f0
|                 `-ImplicitCastExpr 0x5572a8f42ae8 <col:10> 'const IPAddress' lvalue <NoOp>
|                   `-DeclRefExpr 0x5572a8f41920 <col:10> 'IPAddress' lvalue ParmVar 0x5572a8f3d7e0 'x' 'IPAddress'
|-CXXConstructorDecl 0x5572a8f3d9c0 <line:36:5, col:40> col:14 IP6Address 'void (const String &)'
| `-ParmVarDecl 0x5572a8f3d930 <col:25, col:39> col:39 x 'const String &'
|-CXXConstructorDecl 0x5572a8f3dbe8 <line:39:5, line:41:5> line:39:21 IP6Address 'void (const struct in6_addr &)' inline
| |-ParmVarDecl 0x5572a8f3daf0 <col:32, col:55> col:55 used x 'const struct in6_addr &'
| |-CXXCtorInitializer Field 0x5572a8f40a08 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x5572a8f42e10 <line:40:4, col:11> 'struct in6_addr':'in6_addr' 'void (const in6_addr &) noexcept'
| |   `-DeclRefExpr 0x5572a8f42c98 <col:10> 'const struct in6_addr':'const in6_addr' lvalue ParmVar 0x5572a8f3daf0 'x' 'const struct in6_addr &'
| `-CompoundStmt 0x5572a8f42e70 <col:13, line:41:5>
|-CXXConstructorDecl 0x5572a8f3ddb8 <line:44:5, line:46:5> line:44:21 IP6Address 'void (const struct in_addr &)' inline
| |-ParmVarDecl 0x5572a8f3dcf0 <col:32, col:54> col:54 used x 'const struct in_addr &'
| |-CXXCtorInitializer Field 0x5572a8f40a08 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x5572a8f42e80 <col:21> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x5572a8f42f90 <col:57, line:46:5>
|   `-CXXOperatorCallExpr 0x5572a8f42f58 <line:45:2, col:10> 'IP6Address' lvalue
|     |-ImplicitCastExpr 0x5572a8f42f40 <col:8> 'IP6Address &(*)(const struct in_addr &)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5572a8f42f20 <col:8> 'IP6Address &(const struct in_addr &)' lvalue CXXMethod 0x5572a8f403a8 'operator=' 'IP6Address &(const struct in_addr &)'
|     |-UnaryOperator 0x5572a8f42ee8 <col:2, col:3> 'IP6Address' lvalue prefix '*' cannot overflow
|     | `-CXXThisExpr 0x5572a8f42ed8 <col:3> 'IP6Address *' this
|     `-DeclRefExpr 0x5572a8f42f00 <col:10> 'const struct in_addr':'const in_addr' lvalue ParmVar 0x5572a8f3dcf0 'x' 'const struct in_addr &'
|-CXXConstructorDecl 0x5572a8f3df28 <line:49:5, line:51:5> line:49:12 used IP6Address 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x5572a8f3de78 <col:23, col:49> col:49 used unused 'const uninitialized_type &'
| |-CXXCtorInitializer Field 0x5572a8f40a08 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x5572a8f42fa8 <col:12> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x5572a8f43058 <col:57, line:51:5>
|   `-CStyleCastExpr 0x5572a8f43030 <line:50:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x5572a8f43000 <col:9> 'const uninitialized_type' lvalue ParmVar 0x5572a8f3de78 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x5572a8f3e0b8 <line:62:5, col:49> col:23 make_prefix 'IP6Address (int)' static
| `-ParmVarDecl 0x5572a8f3dff0 <col:35, col:39> col:39 prefix_len 'int'
|-CXXMethodDecl 0x5572a8f3e208 <line:69:5, col:58> col:23 make_inverted_prefix 'IP6Address (int)' static
| `-ParmVarDecl 0x5572a8f3e178 <col:44, col:48> col:48 prefix_len 'int'
|-TypedefDecl 0x5572a8f3e3b8 <line:71:5, col:61> col:36 referenced unspecified_bool_type 'uint32_t (IP6Address::*)() const'
| `-MemberPointerType 0x5572a8f3e330 'uint32_t (IP6Address::*)() const'
|   |-RecordType 0x5572a8f015c0 'IP6Address'
|   | `-CXXRecord 0x5572a8f3d350 'IP6Address'
|   `-ParenType 0x5572a8f3e2d0 'uint32_t () const' sugar
|     `-FunctionProtoType 0x5572a8c18270 'uint32_t () const' const cdecl
|       `-TypedefType 0x5572a8b50a00 'uint32_t' sugar
|         |-Typedef 0x5572a8a61408 'uint32_t'
|         `-TypedefType 0x5572a8a3a440 '__uint32_t' sugar
|           |-Typedef 0x5572a8a3a038 '__uint32_t'
|           `-BuiltinType 0x5572a89f8410 'unsigned int'
|-CXXConversionDecl 0x5572a8f3e4f8 <line:72:5, col:45> col:12 used operator unsigned int (IP6Address::*)() const 'IP6Address::unspecified_bool_type () const' inline
|-CXXConversionDecl 0x5572a8f3e680 <line:74:5, col:62> col:5 operator const in6_addr & 'const struct in6_addr &() const'
| `-CompoundStmt 0x5572a8f430c0 <col:46, col:62>
|   `-ReturnStmt 0x5572a8f430b0 <col:48, col:55>
|     `-MemberExpr 0x5572a8f43080 <col:55> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x5572a8f40a08
|       `-CXXThisExpr 0x5572a8f43070 <col:55> 'const IP6Address *' implicit this
|-CXXConversionDecl 0x5572a8f3e870 <line:75:5, col:50> col:5 operator in6_addr & 'struct in6_addr &()'
| `-CompoundStmt 0x5572a8f43128 <col:34, col:50>
|   `-ReturnStmt 0x5572a8f43118 <col:36, col:43>
|     `-MemberExpr 0x5572a8f430e8 <col:43> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x5572a8f40a08
|       `-CXXThisExpr 0x5572a8f430d8 <col:43> 'IP6Address *' implicit this
|-CXXMethodDecl 0x5572a8f3e970 <line:76:5, col:61> col:28 in6_addr 'const struct in6_addr &() const'
| `-CompoundStmt 0x5572a8f43190 <col:45, col:61>
|   `-ReturnStmt 0x5572a8f43180 <col:47, col:54>
|     `-MemberExpr 0x5572a8f43150 <col:54> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x5572a8f40a08
|       `-CXXThisExpr 0x5572a8f43140 <col:54> 'const IP6Address *' implicit this
|-CXXMethodDecl 0x5572a8f3ea48 <line:77:5, col:49> col:22 in6_addr 'struct in6_addr &()'
| `-CompoundStmt 0x5572a8f431f8 <col:33, col:49>
|   `-ReturnStmt 0x5572a8f431e8 <col:35, col:42>
|     `-MemberExpr 0x5572a8f431b8 <col:42> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x5572a8f40a08
|       `-CXXThisExpr 0x5572a8f431a8 <col:42> 'IP6Address *' implicit this
|-CXXMethodDecl 0x5572a8f3eb10 <line:79:5, col:66> col:20 data 'unsigned char *()'
| `-CompoundStmt 0x5572a8f43330 <col:27, col:66>
|   `-ReturnStmt 0x5572a8f43320 <col:29, col:63>
|     `-UnaryOperator 0x5572a8f43308 <col:36, col:63> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5572a8f432e8 <col:37, col:63> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x5572a8f432d0 <col:37, col:51> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5572a8f43280 <col:37, col:51> 'uint8_t [16]' lvalue .__u6_addr8 0x5572a8c7e7c8
|         |   `-MemberExpr 0x5572a8f43250 <col:37, col:43> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5572a8c7eae8
|         |     `-MemberExpr 0x5572a8f43220 <col:37> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x5572a8f40a08
|         |       `-CXXThisExpr 0x5572a8f43210 <col:37> 'IP6Address *' implicit this
|         `-IntegerLiteral 0x5572a8f432b0 <col:62> 'int' 0
|-CXXMethodDecl 0x5572a8f3ebd8 <line:80:5, col:78> col:26 used data 'const unsigned char *() const'
| `-CompoundStmt 0x5572a8f434a8 <col:39, col:78>
|   `-ReturnStmt 0x5572a8f43498 <col:41, col:75>
|     `-UnaryOperator 0x5572a8f43480 <col:48, col:75> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5572a8f43460 <col:49, col:75> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5572a8f43448 <col:49, col:63> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5572a8f433b8 <col:49, col:63> 'uint8_t const[16]' lvalue .__u6_addr8 0x5572a8c7e7c8
|         |   `-MemberExpr 0x5572a8f43388 <col:49, col:55> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5572a8c7eae8
|         |     `-MemberExpr 0x5572a8f43358 <col:49> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x5572a8f40a08
|         |       `-CXXThisExpr 0x5572a8f43348 <col:49> 'const IP6Address *' implicit this
|         `-IntegerLiteral 0x5572a8f433e8 <col:74> 'int' 0
|-CXXMethodDecl 0x5572a8f3ecf8 <line:81:5, col:75> col:15 used data16 'uint16_t *()'
| `-CompoundStmt 0x5572a8f43618 <col:24, col:75>
|   `-ReturnStmt 0x5572a8f43608 <col:26, col:72>
|     `-CStyleCastExpr 0x5572a8f435e0 <col:33, col:72> 'uint16_t *' <BitCast>
|       `-UnaryOperator 0x5572a8f435b8 <col:45, col:72> 'uint8_t *' prefix '&' cannot overflow
|         `-ArraySubscriptExpr 0x5572a8f43598 <col:46, col:72> 'uint8_t':'unsigned char' lvalue
|           |-ImplicitCastExpr 0x5572a8f43580 <col:46, col:60> 'uint8_t *' <ArrayToPointerDecay>
|           | `-MemberExpr 0x5572a8f43530 <col:46, col:60> 'uint8_t [16]' lvalue .__u6_addr8 0x5572a8c7e7c8
|           |   `-MemberExpr 0x5572a8f43500 <col:46, col:52> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5572a8c7eae8
|           |     `-MemberExpr 0x5572a8f434d0 <col:46> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x5572a8f40a08
|           |       `-CXXThisExpr 0x5572a8f434c0 <col:46> 'IP6Address *' implicit this
|           `-IntegerLiteral 0x5572a8f43560 <col:71> 'int' 0
|-CXXMethodDecl 0x5572a8f3edb8 <line:82:5, col:87> col:21 data16 'const uint16_t *() const'
| `-CompoundStmt 0x5572a8f437a0 <col:36, col:87>
|   `-ReturnStmt 0x5572a8f43790 <col:38, col:84>
|     `-ImplicitCastExpr 0x5572a8f43778 <col:45, col:84> 'const uint16_t *' <NoOp>
|       `-CStyleCastExpr 0x5572a8f43750 <col:45, col:84> 'uint16_t *' <BitCast>
|         `-UnaryOperator 0x5572a8f43728 <col:57, col:84> 'const uint8_t *' prefix '&' cannot overflow
|           `-ArraySubscriptExpr 0x5572a8f43708 <col:58, col:84> 'const uint8_t':'const unsigned char' lvalue
|             |-ImplicitCastExpr 0x5572a8f436f0 <col:58, col:72> 'const uint8_t *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5572a8f436a0 <col:58, col:72> 'uint8_t const[16]' lvalue .__u6_addr8 0x5572a8c7e7c8
|             |   `-MemberExpr 0x5572a8f43670 <col:58, col:64> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5572a8c7eae8
|             |     `-MemberExpr 0x5572a8f43640 <col:58> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x5572a8f40a08
|             |       `-CXXThisExpr 0x5572a8f43630 <col:58> 'const IP6Address *' implicit this
|             `-IntegerLiteral 0x5572a8f436d0 <col:83> 'int' 0
|-CXXMethodDecl 0x5572a8f3ee78 <line:83:5, col:75> col:15 used data32 'uint32_t *()'
| `-CompoundStmt 0x5572a8f43910 <col:24, col:75>
|   `-ReturnStmt 0x5572a8f43900 <col:26, col:72>
|     `-CStyleCastExpr 0x5572a8f438d8 <col:33, col:72> 'uint32_t *' <BitCast>
|       `-UnaryOperator 0x5572a8f438b0 <col:45, col:72> 'uint8_t *' prefix '&' cannot overflow
|         `-ArraySubscriptExpr 0x5572a8f43890 <col:46, col:72> 'uint8_t':'unsigned char' lvalue
|           |-ImplicitCastExpr 0x5572a8f43878 <col:46, col:60> 'uint8_t *' <ArrayToPointerDecay>
|           | `-MemberExpr 0x5572a8f43828 <col:46, col:60> 'uint8_t [16]' lvalue .__u6_addr8 0x5572a8c7e7c8
|           |   `-MemberExpr 0x5572a8f437f8 <col:46, col:52> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5572a8c7eae8
|           |     `-MemberExpr 0x5572a8f437c8 <col:46> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x5572a8f40a08
|           |       `-CXXThisExpr 0x5572a8f437b8 <col:46> 'IP6Address *' implicit this
|           `-IntegerLiteral 0x5572a8f43858 <col:71> 'int' 0
|-CXXMethodDecl 0x5572a8f3ef38 <line:84:5, col:87> col:21 used data32 'const uint32_t *() const'
| `-CompoundStmt 0x5572a8f43a98 <col:36, col:87>
|   `-ReturnStmt 0x5572a8f43a88 <col:38, col:84>
|     `-ImplicitCastExpr 0x5572a8f43a70 <col:45, col:84> 'const uint32_t *' <NoOp>
|       `-CStyleCastExpr 0x5572a8f43a48 <col:45, col:84> 'uint32_t *' <BitCast>
|         `-UnaryOperator 0x5572a8f43a20 <col:57, col:84> 'const uint8_t *' prefix '&' cannot overflow
|           `-ArraySubscriptExpr 0x5572a8f43a00 <col:58, col:84> 'const uint8_t':'const unsigned char' lvalue
|             |-ImplicitCastExpr 0x5572a8f439e8 <col:58, col:72> 'const uint8_t *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5572a8f43998 <col:58, col:72> 'uint8_t const[16]' lvalue .__u6_addr8 0x5572a8c7e7c8
|             |   `-MemberExpr 0x5572a8f43968 <col:58, col:64> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5572a8c7eae8
|             |     `-MemberExpr 0x5572a8f43938 <col:58> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x5572a8f40a08
|             |       `-CXXThisExpr 0x5572a8f43928 <col:58> 'const IP6Address *' implicit this
|             `-IntegerLiteral 0x5572a8f439c8 <col:83> 'int' 0
|-CXXMethodDecl 0x5572a8f3eff8 <line:86:5, col:32> col:21 used hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x5572a8f3f0c0 <line:88:5, col:30> col:9 mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x5572a8f3f2e8 <line:89:5, col:80> col:17 matches_prefix 'bool (const IP6Address &, const IP6Address &) const' inline
| |-ParmVarDecl 0x5572a8f3f198 <col:32, col:50> col:50 addr 'const IP6Address &'
| `-ParmVarDecl 0x5572a8f3f210 <col:56, col:74> col:74 mask 'const IP6Address &'
|-CXXMethodDecl 0x5572a8f3f468 <line:90:5, col:54> col:17 mask_as_specific 'bool (const IP6Address &) const' inline
| `-ParmVarDecl 0x5572a8f3f3a8 <col:34, col:51> col:52 'const IP6Address &'
|-CXXMethodDecl 0x5572a8f3f530 <line:97:5, line:99:5> line:97:10 has_ether_address 'bool () const'
| `-CompoundStmt 0x5572a8f43db0 <col:36, line:99:5>
|   `-ReturnStmt 0x5572a8f43da0 <line:98:2, col:81>
|     `-BinaryOperator 0x5572a8f43d80 <col:9, col:81> 'bool' '&&'
|       |-BinaryOperator 0x5572a8f43bf8 <col:9, col:41> 'bool' '=='
|       | |-ImplicitCastExpr 0x5572a8f43be0 <col:9, col:36> 'int' <IntegralCast>
|       | | `-ImplicitCastExpr 0x5572a8f43bc8 <col:9, col:36> 'uint8_t':'unsigned char' <LValueToRValue>
|       | |   `-ArraySubscriptExpr 0x5572a8f43b88 <col:9, col:36> 'const uint8_t':'const unsigned char' lvalue
|       | |     |-ImplicitCastExpr 0x5572a8f43b70 <col:9, col:23> 'const uint8_t *' <ArrayToPointerDecay>
|       | |     | `-MemberExpr 0x5572a8f43b20 <col:9, col:23> 'uint8_t const[16]' lvalue .__u6_addr8 0x5572a8c7e7c8
|       | |     |   `-MemberExpr 0x5572a8f43af0 <col:9, col:15> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5572a8c7eae8
|       | |     |     `-MemberExpr 0x5572a8f43ac0 <col:9> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x5572a8f40a08
|       | |     |       `-CXXThisExpr 0x5572a8f43ab0 <col:9> 'const IP6Address *' implicit this
|       | |     `-IntegerLiteral 0x5572a8f43b50 <col:34> 'int' 11
|       | `-IntegerLiteral 0x5572a8f43ba8 <col:41> 'int' 255
|       `-BinaryOperator 0x5572a8f43d60 <col:49, col:81> 'bool' '=='
|         |-ImplicitCastExpr 0x5572a8f43d48 <col:49, col:76> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x5572a8f43d30 <col:49, col:76> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x5572a8f43cf0 <col:49, col:76> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x5572a8f43cd8 <col:49, col:63> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x5572a8f43c88 <col:49, col:63> 'uint8_t const[16]' lvalue .__u6_addr8 0x5572a8c7e7c8
|         |     |   `-MemberExpr 0x5572a8f43c58 <col:49, col:55> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5572a8c7eae8
|         |     |     `-MemberExpr 0x5572a8f43c28 <col:49> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x5572a8f40a08
|         |     |       `-CXXThisExpr 0x5572a8f43c18 <col:49> 'const IP6Address *' implicit this
|         |     `-IntegerLiteral 0x5572a8f43cb8 <col:74> 'int' 12
|         `-IntegerLiteral 0x5572a8f43d10 <col:81> 'int' 254
|-CXXMethodDecl 0x5572a8f3f6a8 <line:104:5, col:41> col:10 ether_address 'bool (EtherAddress &) const'
| `-ParmVarDecl 0x5572a8f3f5e0 <col:24, col:38> col:38 x 'EtherAddress &'
|-CXXMethodDecl 0x5572a8f3f770 <line:111:5, line:114:5> line:111:17 is_ip4_compatible 'bool () const' inline
| `-CompoundStmt 0x5572a8f44298 <col:43, line:114:5>
|   `-ReturnStmt 0x5572a8f44288 <line:112:2, line:113:24>
|     `-BinaryOperator 0x5572a8f44268 <line:112:9, line:113:24> 'bool' '&&'
|       |-BinaryOperator 0x5572a8f440c8 <line:112:9, col:44> 'bool' '&&'
|       | |-BinaryOperator 0x5572a8f43f28 <col:9, col:24> 'bool' '=='
|       | | |-ImplicitCastExpr 0x5572a8f43ef8 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|       | | | `-ArraySubscriptExpr 0x5572a8f43eb8 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|       | | |   |-CXXMemberCallExpr 0x5572a8f43e78 <col:9, col:16> 'const uint32_t *'
|       | | |   | `-MemberExpr 0x5572a8f43e48 <col:9> '<bound member function type>' ->data32 0x5572a8f3ef38
|       | | |   |   `-CXXThisExpr 0x5572a8f43e38 <col:9> 'const IP6Address *' implicit this
|       | | |   `-IntegerLiteral 0x5572a8f43e98 <col:18> 'int' 0
|       | | `-ImplicitCastExpr 0x5572a8f43f10 <col:24> 'unsigned int' <IntegralCast>
|       | |   `-IntegerLiteral 0x5572a8f43ed8 <col:24> 'int' 0
|       | `-BinaryOperator 0x5572a8f440a8 <col:29, col:44> 'bool' '=='
|       |   |-ImplicitCastExpr 0x5572a8f44078 <col:29, col:39> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-ArraySubscriptExpr 0x5572a8f44038 <col:29, col:39> 'const uint32_t':'const unsigned int' lvalue
|       |   |   |-CXXMemberCallExpr 0x5572a8f43ff8 <col:29, col:36> 'const uint32_t *'
|       |   |   | `-MemberExpr 0x5572a8f43fc8 <col:29> '<bound member function type>' ->data32 0x5572a8f3ef38
|       |   |   |   `-CXXThisExpr 0x5572a8f43fb8 <col:29> 'const IP6Address *' implicit this
|       |   |   `-IntegerLiteral 0x5572a8f44018 <col:38> 'int' 1
|       |   `-ImplicitCastExpr 0x5572a8f44090 <col:44> 'unsigned int' <IntegralCast>
|       |     `-IntegerLiteral 0x5572a8f44058 <col:44> 'int' 0
|       `-BinaryOperator 0x5572a8f44248 <line:113:9, col:24> 'bool' '=='
|         |-ImplicitCastExpr 0x5572a8f44218 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-ArraySubscriptExpr 0x5572a8f441d8 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|         |   |-CXXMemberCallExpr 0x5572a8f44198 <col:9, col:16> 'const uint32_t *'
|         |   | `-MemberExpr 0x5572a8f44168 <col:9> '<bound member function type>' ->data32 0x5572a8f3ef38
|         |   |   `-CXXThisExpr 0x5572a8f44158 <col:9> 'const IP6Address *' implicit this
|         |   `-IntegerLiteral 0x5572a8f441b8 <col:18> 'int' 2
|         `-ImplicitCastExpr 0x5572a8f44230 <col:24> 'unsigned int' <IntegralCast>
|           `-IntegerLiteral 0x5572a8f441f8 <col:24> 'int' 0
|-CXXMethodDecl 0x5572a8f3f830 <line:120:5, line:123:5> line:120:17 used is_ip4_mapped 'bool () const' inline
| `-CompoundStmt 0x5572a8f44810 <col:39, line:123:5>
|   `-ReturnStmt 0x5572a8f44800 <line:121:2, line:122:41>
|     `-BinaryOperator 0x5572a8f447e0 <line:121:9, line:122:41> 'bool' '&&'
|       |-BinaryOperator 0x5572a8f445b0 <line:121:9, col:44> 'bool' '&&'
|       | |-BinaryOperator 0x5572a8f44410 <col:9, col:24> 'bool' '=='
|       | | |-ImplicitCastExpr 0x5572a8f443e0 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|       | | | `-ArraySubscriptExpr 0x5572a8f443a0 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|       | | |   |-CXXMemberCallExpr 0x5572a8f44360 <col:9, col:16> 'const uint32_t *'
|       | | |   | `-MemberExpr 0x5572a8f44330 <col:9> '<bound member function type>' ->data32 0x5572a8f3ef38
|       | | |   |   `-CXXThisExpr 0x5572a8f44320 <col:9> 'const IP6Address *' implicit this
|       | | |   `-IntegerLiteral 0x5572a8f44380 <col:18> 'int' 0
|       | | `-ImplicitCastExpr 0x5572a8f443f8 <col:24> 'unsigned int' <IntegralCast>
|       | |   `-IntegerLiteral 0x5572a8f443c0 <col:24> 'int' 0
|       | `-BinaryOperator 0x5572a8f44590 <col:29, col:44> 'bool' '=='
|       |   |-ImplicitCastExpr 0x5572a8f44560 <col:29, col:39> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-ArraySubscriptExpr 0x5572a8f44520 <col:29, col:39> 'const uint32_t':'const unsigned int' lvalue
|       |   |   |-CXXMemberCallExpr 0x5572a8f444e0 <col:29, col:36> 'const uint32_t *'
|       |   |   | `-MemberExpr 0x5572a8f444b0 <col:29> '<bound member function type>' ->data32 0x5572a8f3ef38
|       |   |   |   `-CXXThisExpr 0x5572a8f444a0 <col:29> 'const IP6Address *' implicit this
|       |   |   `-IntegerLiteral 0x5572a8f44500 <col:38> 'int' 1
|       |   `-ImplicitCastExpr 0x5572a8f44578 <col:44> 'unsigned int' <IntegralCast>
|       |     `-IntegerLiteral 0x5572a8f44540 <col:44> 'int' 0
|       `-BinaryOperator 0x5572a8f447c0 <line:122:9, col:41> 'bool' '=='
|         |-ImplicitCastExpr 0x5572a8f447a8 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-ArraySubscriptExpr 0x5572a8f446c0 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|         |   |-CXXMemberCallExpr 0x5572a8f44680 <col:9, col:16> 'const uint32_t *'
|         |   | `-MemberExpr 0x5572a8f44650 <col:9> '<bound member function type>' ->data32 0x5572a8f3ef38
|         |   |   `-CXXThisExpr 0x5572a8f44640 <col:9> 'const IP6Address *' implicit this
|         |   `-IntegerLiteral 0x5572a8f446a0 <col:18> 'int' 2
|         `-CallExpr 0x5572a8f44780 <col:24, col:41> 'uint32_t':'unsigned int'
|           |-ImplicitCastExpr 0x5572a8f44768 <col:24> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x5572a8f44748 <col:24> 'uint32_t (uint32_t) throw()' lvalue Function 0x5572a8c85da0 'htonl' 'uint32_t (uint32_t) throw()'
|           `-IntegerLiteral 0x5572a8f44728 <col:30> 'unsigned int' 65535
|-CXXMethodDecl 0x5572a8f3f8f0 <line:129:5, line:131:5> line:129:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x5572a8f449a0 <col:38, line:131:5>
|   `-ReturnStmt 0x5572a8f44990 <line:130:9, col:47>
|     `-BinaryOperator 0x5572a8f44970 <col:16, col:47> 'bool' '=='
|       |-ImplicitCastExpr 0x5572a8f44958 <col:16, col:42> 'int' <IntegralCast>
|       | `-ImplicitCastExpr 0x5572a8f44940 <col:16, col:42> 'uint8_t':'unsigned char' <LValueToRValue>
|       |   `-ArraySubscriptExpr 0x5572a8f44900 <col:16, col:42> 'const uint8_t':'const unsigned char' lvalue
|       |     |-ImplicitCastExpr 0x5572a8f448e8 <col:16, col:30> 'const uint8_t *' <ArrayToPointerDecay>
|       |     | `-MemberExpr 0x5572a8f44898 <col:16, col:30> 'uint8_t const[16]' lvalue .__u6_addr8 0x5572a8c7e7c8
|       |     |   `-MemberExpr 0x5572a8f44868 <col:16, col:22> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5572a8c7eae8
|       |     |     `-MemberExpr 0x5572a8f44838 <col:16> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x5572a8f40a08
|       |     |       `-CXXThisExpr 0x5572a8f44828 <col:16> 'const IP6Address *' implicit this
|       |     `-IntegerLiteral 0x5572a8f448c8 <col:41> 'int' 0
|       `-IntegerLiteral 0x5572a8f44920 <col:47> 'int' 255
|-CXXMethodDecl 0x5572a8f3f9b0 <line:137:5, line:139:5> line:137:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x5572a8f44d78 <col:39, line:139:5>
|   `-ReturnStmt 0x5572a8f44d68 <line:138:9, col:67>
|     `-BinaryOperator 0x5572a8f44d48 <col:16, col:67> 'bool' '&&'
|       |-BinaryOperator 0x5572a8f44ba8 <col:16, col:47> 'bool' '=='
|       | |-ImplicitCastExpr 0x5572a8f44b90 <col:16, col:26> 'uint32_t':'unsigned int' <LValueToRValue>
|       | | `-ArraySubscriptExpr 0x5572a8f44aa8 <col:16, col:26> 'const uint32_t':'const unsigned int' lvalue
|       | |   |-CXXMemberCallExpr 0x5572a8f44a68 <col:16, col:23> 'const uint32_t *'
|       | |   | `-MemberExpr 0x5572a8f44a38 <col:16> '<bound member function type>' ->data32 0x5572a8f3ef38
|       | |   |   `-CXXThisExpr 0x5572a8f44a28 <col:16> 'const IP6Address *' implicit this
|       | |   `-IntegerLiteral 0x5572a8f44a88 <col:25> 'int' 0
|       | `-CallExpr 0x5572a8f44b68 <col:31, col:47> 'uint32_t':'unsigned int'
|       |   |-ImplicitCastExpr 0x5572a8f44b50 <col:31> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x5572a8f44b30 <col:31> 'uint32_t (uint32_t) throw()' lvalue Function 0x5572a8c85da0 'htonl' 'uint32_t (uint32_t) throw()'
|       |   `-IntegerLiteral 0x5572a8f44b10 <col:37> 'unsigned int' 4269801472
|       `-BinaryOperator 0x5572a8f44d28 <col:52, col:67> 'bool' '=='
|         |-ImplicitCastExpr 0x5572a8f44cf8 <col:52, col:62> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-ArraySubscriptExpr 0x5572a8f44cb8 <col:52, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |   |-CXXMemberCallExpr 0x5572a8f44c78 <col:52, col:59> 'const uint32_t *'
|         |   | `-MemberExpr 0x5572a8f44c48 <col:52> '<bound member function type>' ->data32 0x5572a8f3ef38
|         |   |   `-CXXThisExpr 0x5572a8f44c38 <col:52> 'const IP6Address *' implicit this
|         |   `-IntegerLiteral 0x5572a8f44c98 <col:61> 'int' 1
|         `-ImplicitCastExpr 0x5572a8f44d10 <col:67> 'unsigned int' <IntegralCast>
|           `-IntegerLiteral 0x5572a8f44cd8 <col:67> 'int' 0
|-CXXMethodDecl 0x5572a8f3fa70 <line:145:5, col:29> col:15 used ip4_address 'IPAddress () const'
|-CXXMethodDecl 0x5572a8f3fc18 <line:154:5, col:53> col:24 operator&= 'IP6Address &(const IP6Address &)' inline
| `-ParmVarDecl 0x5572a8f3fb20 <col:35, col:52> col:53 'const IP6Address &'
|-CXXMethodDecl 0x5572a8f3fdd8 <line:155:5, col:58> col:24 operator&= 'IP6Address &(const struct in6_addr &)' inline
| `-ParmVarDecl 0x5572a8f3fce8 <col:35, col:57> col:58 'const struct in6_addr &'
|-CXXMethodDecl 0x5572a8f3ff20 <line:156:5, col:53> col:24 operator|= 'IP6Address &(const IP6Address &)' inline
| `-ParmVarDecl 0x5572a8f3fe90 <col:35, col:52> col:53 'const IP6Address &'
|-CXXMethodDecl 0x5572a8f40080 <line:157:5, col:58> col:24 operator|= 'IP6Address &(const struct in6_addr &)' inline
| `-ParmVarDecl 0x5572a8f3fff0 <col:35, col:57> col:58 'const struct in6_addr &'
|-CXXMethodDecl 0x5572a8f401e0 <line:159:5, col:57> col:24 operator= 'IP6Address &(const struct in6_addr &)' inline
| `-ParmVarDecl 0x5572a8f40150 <col:34, col:56> col:57 'const struct in6_addr &'
|-CXXMethodDecl 0x5572a8f403a8 <line:160:5, col:56> col:24 used operator= 'IP6Address &(const struct in_addr &)' inline
| `-ParmVarDecl 0x5572a8f402b0 <col:34, col:55> col:56 'const struct in_addr &'
|-CXXMethodDecl 0x5572a8f40528 <line:162:5, col:35> col:10 used unparse 'void (StringAccum &) const'
| `-ParmVarDecl 0x5572a8f40460 <col:18, col:31> col:31 sa 'StringAccum &'
|-CXXMethodDecl 0x5572a8f405f0 <line:163:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x5572a8f406b0 <line:164:5, col:31> col:12 unparse_expanded 'String () const'
|-CXXMethodDecl 0x5572a8f40770 <line:166:5, col:42> col:12 s 'String () const'
| `-CompoundStmt 0x5572a8f44ef8 <col:22, col:42>
|   `-ReturnStmt 0x5572a8f44ee8 <col:24, col:39>
|     `-ExprWithCleanups 0x5572a8f44ed0 <col:31, col:39> 'String'
|       `-CXXConstructExpr 0x5572a8f44ea0 <col:31, col:39> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x5572a8f44e88 <col:31, col:39> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x5572a8f44e68 <col:31, col:39> 'String' (CXXTemporary 0x5572a8f44e68)
|             `-CXXMemberCallExpr 0x5572a8f44e40 <col:31, col:39> 'String'
|               `-MemberExpr 0x5572a8f44e10 <col:31> '<bound member function type>' ->unparse 0x5572a8f405f0
|                 `-CXXThisExpr 0x5572a8f44e00 <col:31> 'const IP6Address *' implicit this
|-CXXConversionDecl 0x5572a8f40840 <line:167:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x5572a8f408e8 <col:51> "" ""
|-TypedefDecl 0x5572a8f40968 <line:169:5, col:31> col:31 parameter_type 'const IP6Address &'
| `-LValueReferenceType 0x5572a8f3f160 'const IP6Address &'
|   `-QualType 0x5572a8f015c1 'const IP6Address' const
|     `-RecordType 0x5572a8f015c0 'IP6Address'
|       `-CXXRecord 0x5572a8f3d350 'IP6Address'
|-AccessSpecDecl 0x5572a8f409c0 <line:171:3, col:10> col:3 private
|-FieldDecl 0x5572a8f40a08 <line:173:5, col:21> col:21 referenced _addr 'struct in6_addr':'in6_addr'
|-CXXMethodDecl 0x5572a8f41940 <line:14:7> col:7 implicit used operator= 'IP6Address &(const IP6Address &) noexcept' inline default trivial
| |-ParmVarDecl 0x5572a8f41a18 <col:7> col:7 used 'const IP6Address &'
| `-CompoundStmt 0x5572a901c2b0 <col:7>
|   |-CXXMemberCallExpr 0x5572a901c250 <col:7> 'in6_addr' lvalue
|   | |-MemberExpr 0x5572a901c208 <col:7> '<bound member function type>' .operator= 0x5572a8f41db8
|   | | `-MemberExpr 0x5572a901c118 <col:7> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x5572a8f40a08
|   | |   `-CXXThisExpr 0x5572a901c108 <col:7> 'IP6Address *' this
|   | `-MemberExpr 0x5572a901c1d8 <col:7> 'const struct in6_addr':'const in6_addr' lvalue ._addr 0x5572a8f40a08
|   |   `-DeclRefExpr 0x5572a901c1b8 <col:7> 'const IP6Address' lvalue ParmVar 0x5572a8f41a18 '' 'const IP6Address &'
|   `-ReturnStmt 0x5572a901c2a0 <col:7>
|     `-UnaryOperator 0x5572a901c288 <col:7> 'IP6Address' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5572a901c278 <col:7> 'IP6Address *' this
|-CXXMethodDecl 0x5572a8f42128 <col:7> col:7 implicit operator= 'IP6Address &(IP6Address &&)' inline default trivial noexcept-unevaluated 0x5572a8f42128
| `-ParmVarDecl 0x5572a8f42238 <col:7> col:7 'IP6Address &&'
|-CXXConstructorDecl 0x5572a8f422a8 <col:7> col:7 implicit used constexpr IP6Address 'void (const IP6Address &) noexcept' inline default trivial
| |-ParmVarDecl 0x5572a8f423b8 <col:7> col:7 used 'const IP6Address &'
| |-CXXCtorInitializer Field 0x5572a8f40a08 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x5572a901de18 <col:7> 'struct in6_addr':'in6_addr' 'void (const in6_addr &) noexcept'
| |   `-MemberExpr 0x5572a901ddd0 <col:7> 'const struct in6_addr':'const in6_addr' lvalue ._addr 0x5572a8f40a08
| |     `-DeclRefExpr 0x5572a901ddb0 <col:7> 'const IP6Address' lvalue ParmVar 0x5572a8f423b8 '' 'const IP6Address &'
| `-CompoundStmt 0x5572a901de78 <col:7>
|-CXXConstructorDecl 0x5572a8f42510 <col:7> col:7 implicit used constexpr IP6Address 'void (IP6Address &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5572a8f42628 <col:7> col:7 used 'IP6Address &&'
| |-CXXCtorInitializer Field 0x5572a8f40a08 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x5572a8ebd968 <col:7> 'struct in6_addr':'in6_addr' 'void (in6_addr &&) noexcept'
| |   `-MemberExpr 0x5572a8ebd810 <col:7> 'struct in6_addr':'in6_addr' xvalue ._addr 0x5572a8f40a08
| |     `-CXXStaticCastExpr 0x5572a8ebd7e0 <col:7> 'IP6Address' xvalue static_cast<class IP6Address &&> <NoOp>
| |       `-DeclRefExpr 0x5572a8ebd7b0 <col:7> 'IP6Address' lvalue ParmVar 0x5572a8f42628 '' 'IP6Address &&'
| `-CompoundStmt 0x5572a8ebd9c8 <col:7>
`-CXXDestructorDecl 0x5572a8ebd618 <col:7> col:7 implicit referenced ~IP6Address 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IP6Address = type { %struct.in6_addr }
  NonVirtualBaseLLVMType:%class.IP6Address = type { %struct.in6_addr }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IP6FlowID
         0 |   class IP6Address _saddr
         0 |     struct in6_addr _addr
         0 |       union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |         uint8_t [16] __u6_addr8
         0 |         uint16_t [8] __u6_addr16
         0 |         uint32_t [4] __u6_addr32
        16 |   class IP6Address _daddr
        16 |     struct in6_addr _addr
        16 |       union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
        16 |         uint8_t [16] __u6_addr8
        16 |         uint16_t [8] __u6_addr16
        16 |         uint32_t [4] __u6_addr32
        32 |   uint16_t _sport
        34 |   uint16_t _dport
           | [sizeof=36, dsize=36, align=4,
           |  nvsize=36, nvalign=4]

*** Dumping AST Record Layout
         0 | class AddressTranslator::Mapping
         0 |   class IP6FlowID _mapto
         0 |     class IP6Address _saddr
         0 |       struct in6_addr _addr
         0 |         union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |           uint8_t [16] __u6_addr8
         0 |           uint16_t [8] __u6_addr16
         0 |           uint32_t [4] __u6_addr32
        16 |     class IP6Address _daddr
        16 |       struct in6_addr _addr
        16 |         union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
        16 |           uint8_t [16] __u6_addr8
        16 |           uint16_t [8] __u6_addr16
        16 |           uint32_t [4] __u6_addr32
        32 |     uint16_t _sport
        34 |     uint16_t _dport
        40 |   class AddressTranslator::Mapping * _prev
        48 |   class AddressTranslator::Mapping * _next
        56 |   class AddressTranslator::Mapping * _free_next
           | [sizeof=64, dsize=64, align=8,
           |  nvsize=64, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a9015628 <../dummy_inc/click/ip6flowid.hh:10:1, line:156:1> line:10:7 referenced class IP6FlowID definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5572a9015748 <col:1, col:7> col:7 implicit referenced class IP6FlowID
|-AccessSpecDecl 0x5572a90157d8 <col:19, col:25> col:19 public
|-TypedefDecl 0x5572a9015810 <line:12:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x5572a8b50710 'uninitialized_type'
|   `-CXXRecord 0x5572a8b50678 'uninitialized_type'
|-CXXConstructorDecl 0x5572a90158d0 <line:17:3, col:20> col:10 IP6FlowID 'void ()' inline
|-CXXConstructorDecl 0x5572a9015c38 <line:24:3, col:78> col:10 used IP6FlowID 'void (const IP6Address &, uint16_t, const IP6Address &, uint16_t)' inline
| |-ParmVarDecl 0x5572a9015988 <col:20, col:37> col:38 'const IP6Address &'
| |-ParmVarDecl 0x5572a9015a00 <col:40> col:48 'uint16_t':'unsigned short'
| |-ParmVarDecl 0x5572a9015a78 <col:50, col:67> col:68 'const IP6Address &'
| `-ParmVarDecl 0x5572a9015af0 <col:70> col:78 'uint16_t':'unsigned short'
|-CXXConstructorDecl 0x5572a9015fb8 <line:34:3, col:76> col:10 IP6FlowID 'void (const IPAddress &, uint16_t, const IPAddress &, uint16_t)' inline
| |-ParmVarDecl 0x5572a9015d10 <col:20, col:36> col:37 'const IPAddress &'
| |-ParmVarDecl 0x5572a9015d88 <col:39> col:47 'uint16_t':'unsigned short'
| |-ParmVarDecl 0x5572a9015e00 <col:49, col:65> col:66 'const IPAddress &'
| `-ParmVarDecl 0x5572a9015e78 <col:68> col:76 'uint16_t':'unsigned short'
|-CXXConstructorDecl 0x5572a90161a0 <line:45:3, col:58> col:12 IP6FlowID 'void (const Packet *, bool)'
| |-ParmVarDecl 0x5572a9016090 <col:22, col:35> col:36 'const Packet *'
| `-ParmVarDecl 0x5572a9016108 <col:38, col:53> col:43 reverse 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5572a901bad8 <col:53> 'bool' false
|-CXXConstructorDecl 0x5572a90163b8 <line:54:3, col:65> col:12 IP6FlowID 'void (const click_ip6 *, bool)'
| |-ParmVarDecl 0x5572a9016268 <col:22, col:39> col:39 ip6h 'const click_ip6 *'
| `-ParmVarDecl 0x5572a90162e0 <col:45, col:60> col:50 reverse 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5572a901bae8 <col:60> 'bool' false
|-CXXConstructorDecl 0x5572a9016590 <line:66:3, col:63> col:12 IP6FlowID 'void (const click_ip *, bool)'
| |-ParmVarDecl 0x5572a9016480 <col:22, col:38> col:38 iph 'const click_ip *'
| `-ParmVarDecl 0x5572a90164f8 <col:43, col:58> col:48 reverse 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5572a901baf8 <col:58> 'bool' false
|-CXXConstructorDecl 0x5572a90166e8 <line:73:3, col:38> col:12 IP6FlowID 'void (const IPFlowID &)'
| `-ParmVarDecl 0x5572a9016658 <col:22, col:37> col:38 'const IPFlowID &'
|-CXXConstructorDecl 0x5572a9016838 <line:77:3, line:79:3> line:77:10 IP6FlowID 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x5572a90167a8 <col:20, col:46> col:46 used unused 'const uninitialized_type &'
| |-CXXCtorInitializer Field 0x5572a901b950 '_saddr' 'IP6Address'
| | `-CXXConstructExpr 0x5572a901bb08 <col:10> 'IP6Address' 'void ()'
| |-CXXCtorInitializer Field 0x5572a901b9b0 '_daddr' 'IP6Address'
| | `-CXXConstructExpr 0x5572a901bb58 <col:10> 'IP6Address' 'void ()'
| `-CompoundStmt 0x5572a901bc10 <col:54, line:79:3>
|   `-CStyleCastExpr 0x5572a901bbe8 <line:78:5, col:12> 'void' <ToVoid>
|     `-DeclRefExpr 0x5572a901bbb8 <col:12> 'const uninitialized_type' lvalue ParmVar 0x5572a90167a8 'unused' 'const uninitialized_type &'
|-TypedefDecl 0x5572a9016a28 <line:81:3, col:67> col:42 referenced unspecified_bool_type 'const IP6Address &(IP6FlowID::*)() const'
| `-MemberPointerType 0x5572a90169a0 'const IP6Address &(IP6FlowID::*)() const'
|   |-RecordType 0x5572a90156c0 'IP6FlowID'
|   | `-CXXRecord 0x5572a9015628 'IP6FlowID'
|   `-ParenType 0x5572a9016940 'const IP6Address &() const' sugar
|     `-FunctionProtoType 0x5572a9016910 'const IP6Address &() const' const cdecl
|       `-LValueReferenceType 0x5572a8f3f160 'const IP6Address &'
|         `-QualType 0x5572a8f015c1 'const IP6Address' const
|           `-RecordType 0x5572a8f015c0 'IP6Address'
|             `-CXXRecord 0x5572a8f3d350 'IP6Address'
|-CXXConversionDecl 0x5572a9016b68 <line:82:3, col:43> col:10 operator const IP6Address &(IP6FlowID::*)() const 'IP6FlowID::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x5572a9016c38 <line:84:3, col:52> col:21 used saddr 'const IP6Address &() const'
| `-CompoundStmt 0x5572a901bc78 <col:35, col:52>
|   `-ReturnStmt 0x5572a901bc68 <col:37, col:44>
|     `-MemberExpr 0x5572a901bc38 <col:44> 'const IP6Address' lvalue ->_saddr 0x5572a901b950
|       `-CXXThisExpr 0x5572a901bc28 <col:44> 'const IP6FlowID *' implicit this
|-CXXMethodDecl 0x5572a9016cf8 <line:85:3, col:52> col:21 used daddr 'const IP6Address &() const'
| `-CompoundStmt 0x5572a901bce0 <col:35, col:52>
|   `-ReturnStmt 0x5572a901bcd0 <col:37, col:44>
|     `-MemberExpr 0x5572a901bca0 <col:44> 'const IP6Address' lvalue ->_daddr 0x5572a901b9b0
|       `-CXXThisExpr 0x5572a901bc90 <col:44> 'const IP6FlowID *' implicit this
|-CXXMethodDecl 0x5572a9016db8 <line:86:3, col:59> col:13 saddr4 'IPAddress () const'
| `-CompoundStmt 0x5572a901bdf8 <col:28, col:59>
|   `-ReturnStmt 0x5572a901bde8 <col:30, col:56>
|     `-ExprWithCleanups 0x5572a901bdd0 <col:37, col:56> 'IPAddress'
|       `-CXXConstructExpr 0x5572a901bda0 <col:37, col:56> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5572a901bd88 <col:37, col:56> 'IPAddress' xvalue
|           `-CXXMemberCallExpr 0x5572a901bd68 <col:37, col:56> 'IPAddress'
|             `-MemberExpr 0x5572a901bd38 <col:37, col:44> '<bound member function type>' .ip4_address 0x5572a8f3fa70
|               `-MemberExpr 0x5572a901bd08 <col:37> 'const IP6Address' lvalue ->_saddr 0x5572a901b950
|                 `-CXXThisExpr 0x5572a901bcf8 <col:37> 'const IP6FlowID *' implicit this
|-CXXMethodDecl 0x5572a9016e78 <line:87:3, col:59> col:13 daddr4 'IPAddress () const'
| `-CompoundStmt 0x5572a901bf10 <col:28, col:59>
|   `-ReturnStmt 0x5572a901bf00 <col:30, col:56>
|     `-ExprWithCleanups 0x5572a901bee8 <col:37, col:56> 'IPAddress'
|       `-CXXConstructExpr 0x5572a901beb8 <col:37, col:56> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5572a901bea0 <col:37, col:56> 'IPAddress' xvalue
|           `-CXXMemberCallExpr 0x5572a901be80 <col:37, col:56> 'IPAddress'
|             `-MemberExpr 0x5572a901be50 <col:37, col:44> '<bound member function type>' .ip4_address 0x5572a8f3fa70
|               `-MemberExpr 0x5572a901be20 <col:37> 'const IP6Address' lvalue ->_daddr 0x5572a901b9b0
|                 `-CXXThisExpr 0x5572a901be10 <col:37> 'const IP6FlowID *' implicit this
|-CXXMethodDecl 0x5572a9016f38 <line:88:3, col:43> col:12 used sport 'uint16_t () const'
| `-CompoundStmt 0x5572a901bf90 <col:26, col:43>
|   `-ReturnStmt 0x5572a901bf80 <col:28, col:35>
|     `-ImplicitCastExpr 0x5572a901bf68 <col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-MemberExpr 0x5572a901bf38 <col:35> 'const uint16_t':'const unsigned short' lvalue ->_sport 0x5572a901ba10
|         `-CXXThisExpr 0x5572a901bf28 <col:35> 'const IP6FlowID *' implicit this
|-CXXMethodDecl 0x5572a9016ff8 <line:89:3, col:43> col:12 used dport 'uint16_t () const'
| `-CompoundStmt 0x5572a901c010 <col:26, col:43>
|   `-ReturnStmt 0x5572a901c000 <col:28, col:35>
|     `-ImplicitCastExpr 0x5572a901bfe8 <col:35> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-MemberExpr 0x5572a901bfb8 <col:35> 'const uint16_t':'const unsigned short' lvalue ->_dport 0x5572a901ba70
|         `-CXXThisExpr 0x5572a901bfa8 <col:35> 'const IP6FlowID *' implicit this
|-CXXMethodDecl 0x5572a901a2e8 <line:91:3, col:53> col:8 set_saddr 'void (const IP6Address &)'
| |-ParmVarDecl 0x5572a90170a8 <col:18, col:36> col:36 used a 'const IP6Address &'
| `-CompoundStmt 0x5572a901c378 <col:39, col:53>
|   `-CXXOperatorCallExpr 0x5572a901c340 <col:41, col:50> 'IP6Address' lvalue
|     |-ImplicitCastExpr 0x5572a901c328 <col:48> 'IP6Address &(*)(const IP6Address &) noexcept' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5572a901c088 <col:48> 'IP6Address &(const IP6Address &) noexcept' lvalue CXXMethod 0x5572a8f41940 'operator=' 'IP6Address &(const IP6Address &) noexcept'
|     |-MemberExpr 0x5572a901c038 <col:41> 'IP6Address' lvalue ->_saddr 0x5572a901b950
|     | `-CXXThisExpr 0x5572a901c028 <col:41> 'IP6FlowID *' implicit this
|     `-DeclRefExpr 0x5572a901c068 <col:50> 'const IP6Address' lvalue ParmVar 0x5572a90170a8 'a' 'const IP6Address &'
|-CXXMethodDecl 0x5572a901a430 <line:92:3, col:53> col:8 set_daddr 'void (const IP6Address &)'
| |-ParmVarDecl 0x5572a901a3a0 <col:18, col:36> col:36 used a 'const IP6Address &'
| `-CompoundStmt 0x5572a901c460 <col:39, col:53>
|   `-CXXOperatorCallExpr 0x5572a901c428 <col:41, col:50> 'IP6Address' lvalue
|     |-ImplicitCastExpr 0x5572a901c410 <col:48> 'IP6Address &(*)(const IP6Address &) noexcept' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5572a901c3f0 <col:48> 'IP6Address &(const IP6Address &) noexcept' lvalue CXXMethod 0x5572a8f41940 'operator=' 'IP6Address &(const IP6Address &) noexcept'
|     |-MemberExpr 0x5572a901c3a0 <col:41> 'IP6Address' lvalue ->_daddr 0x5572a901b9b0
|     | `-CXXThisExpr 0x5572a901c390 <col:41> 'IP6FlowID *' implicit this
|     `-DeclRefExpr 0x5572a901c3d0 <col:50> 'const IP6Address' lvalue ParmVar 0x5572a901a3a0 'a' 'const IP6Address &'
|-CXXMethodDecl 0x5572a901a5a8 <line:93:3, col:51> col:8 set_saddr 'void (const IPAddress)'
| |-ParmVarDecl 0x5572a901a4e8 <col:18, col:34> col:34 used a 'const IPAddress'
| `-CompoundStmt 0x5572a901c5f8 <col:37, col:51>
|   `-ExprWithCleanups 0x5572a901c5e0 <col:39, col:48> 'IP6Address' lvalue
|     `-CXXOperatorCallExpr 0x5572a901c5a8 <col:39, col:48> 'IP6Address' lvalue
|       |-ImplicitCastExpr 0x5572a901c590 <col:46> 'IP6Address &(*)(const struct in_addr &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5572a901c570 <col:46> 'IP6Address &(const struct in_addr &)' lvalue CXXMethod 0x5572a8f5a270 'operator=' 'IP6Address &(const struct in_addr &)'
|       |-MemberExpr 0x5572a901c488 <col:39> 'IP6Address' lvalue ->_saddr 0x5572a901b950
|       | `-CXXThisExpr 0x5572a901c478 <col:39> 'IP6FlowID *' implicit this
|       `-MaterializeTemporaryExpr 0x5572a901c558 <col:48> 'const struct in_addr':'const in_addr' lvalue
|         `-ImplicitCastExpr 0x5572a901c540 <col:48> 'const struct in_addr':'const in_addr' <NoOp>
|           `-ImplicitCastExpr 0x5572a901c528 <col:48> 'struct in_addr':'in_addr' <UserDefinedConversion>
|             `-CXXMemberCallExpr 0x5572a901c508 <col:48> 'struct in_addr':'in_addr'
|               `-MemberExpr 0x5572a901c4d8 <col:48> '<bound member function type>' .operator in_addr 0x5572a8d305f0
|                 `-DeclRefExpr 0x5572a901c4b8 <col:48> 'const IPAddress' lvalue ParmVar 0x5572a901a4e8 'a' 'const IPAddress'
|-CXXMethodDecl 0x5572a901a6f0 <line:94:3, col:51> col:8 set_daddr 'void (const IPAddress)'
| |-ParmVarDecl 0x5572a901a660 <col:18, col:34> col:34 used a 'const IPAddress'
| `-CompoundStmt 0x5572a901c790 <col:37, col:51>
|   `-ExprWithCleanups 0x5572a901c778 <col:39, col:48> 'IP6Address' lvalue
|     `-CXXOperatorCallExpr 0x5572a901c740 <col:39, col:48> 'IP6Address' lvalue
|       |-ImplicitCastExpr 0x5572a901c728 <col:46> 'IP6Address &(*)(const struct in_addr &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5572a901c708 <col:46> 'IP6Address &(const struct in_addr &)' lvalue CXXMethod 0x5572a8f5a270 'operator=' 'IP6Address &(const struct in_addr &)'
|       |-MemberExpr 0x5572a901c620 <col:39> 'IP6Address' lvalue ->_daddr 0x5572a901b9b0
|       | `-CXXThisExpr 0x5572a901c610 <col:39> 'IP6FlowID *' implicit this
|       `-MaterializeTemporaryExpr 0x5572a901c6f0 <col:48> 'const struct in_addr':'const in_addr' lvalue
|         `-ImplicitCastExpr 0x5572a901c6d8 <col:48> 'const struct in_addr':'const in_addr' <NoOp>
|           `-ImplicitCastExpr 0x5572a901c6c0 <col:48> 'struct in_addr':'in_addr' <UserDefinedConversion>
|             `-CXXMemberCallExpr 0x5572a901c6a0 <col:48> 'struct in_addr':'in_addr'
|               `-MemberExpr 0x5572a901c670 <col:48> '<bound member function type>' .operator in_addr 0x5572a8d305f0
|                 `-DeclRefExpr 0x5572a901c650 <col:48> 'const IPAddress' lvalue ParmVar 0x5572a901a660 'a' 'const IPAddress'
|-CXXMethodDecl 0x5572a901a838 <line:95:3, col:44> col:8 set_sport 'void (uint16_t)'
| |-ParmVarDecl 0x5572a901a7a8 <col:18, col:27> col:27 used p 'uint16_t':'unsigned short'
| `-CompoundStmt 0x5572a901c840 <col:30, col:44>
|   `-BinaryOperator 0x5572a901c820 <col:32, col:41> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x5572a901c7b8 <col:32> 'uint16_t':'unsigned short' lvalue ->_sport 0x5572a901ba10
|     | `-CXXThisExpr 0x5572a901c7a8 <col:32> 'IP6FlowID *' implicit this
|     `-ImplicitCastExpr 0x5572a901c808 <col:41> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x5572a901c7e8 <col:41> 'uint16_t':'unsigned short' lvalue ParmVar 0x5572a901a7a8 'p' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x5572a901a980 <line:96:3, col:44> col:8 set_dport 'void (uint16_t)'
| |-ParmVarDecl 0x5572a901a8f0 <col:18, col:27> col:27 used p 'uint16_t':'unsigned short'
| `-CompoundStmt 0x5572a901c8f0 <col:30, col:44>
|   `-BinaryOperator 0x5572a901c8d0 <col:32, col:41> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x5572a901c868 <col:32> 'uint16_t':'unsigned short' lvalue ->_dport 0x5572a901ba70
|     | `-CXXThisExpr 0x5572a901c858 <col:32> 'IP6FlowID *' implicit this
|     `-ImplicitCastExpr 0x5572a901c8b8 <col:41> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x5572a901c898 <col:41> 'uint16_t':'unsigned short' lvalue ParmVar 0x5572a901a8f0 'p' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x5572a901ac48 <line:103:3, line:108:3> line:103:8 assign 'void (const IP6Address &, uint16_t, const IP6Address &, uint16_t)'
| |-ParmVarDecl 0x5572a901aa38 <col:15, col:33> col:33 used saddr 'const IP6Address &'
| |-ParmVarDecl 0x5572a901aab0 <col:40, col:49> col:49 used sport 'uint16_t':'unsigned short'
| |-ParmVarDecl 0x5572a901ab28 <col:56, col:74> col:74 used daddr 'const IP6Address &'
| |-ParmVarDecl 0x5572a901aba0 <col:81, col:90> col:90 used dport 'uint16_t':'unsigned short'
| `-CompoundStmt 0x5572a901cbd8 <col:97, line:108:3>
|   |-CXXOperatorCallExpr 0x5572a901c9a0 <line:104:5, col:14> 'IP6Address' lvalue
|   | |-ImplicitCastExpr 0x5572a901c988 <col:12> 'IP6Address &(*)(const IP6Address &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5572a901c968 <col:12> 'IP6Address &(const IP6Address &) noexcept' lvalue CXXMethod 0x5572a8f41940 'operator=' 'IP6Address &(const IP6Address &) noexcept'
|   | |-MemberExpr 0x5572a901c918 <col:5> 'IP6Address' lvalue ->_saddr 0x5572a901b950
|   | | `-CXXThisExpr 0x5572a901c908 <col:5> 'IP6FlowID *' implicit this
|   | `-DeclRefExpr 0x5572a901c948 <col:14> 'const IP6Address' lvalue ParmVar 0x5572a901aa38 'saddr' 'const IP6Address &'
|   |-CXXOperatorCallExpr 0x5572a901ca70 <line:105:5, col:14> 'IP6Address' lvalue
|   | |-ImplicitCastExpr 0x5572a901ca58 <col:12> 'IP6Address &(*)(const IP6Address &) noexcept' <FunctionToPointerDecay>
|   | | `-DeclRefExpr 0x5572a901ca38 <col:12> 'IP6Address &(const IP6Address &) noexcept' lvalue CXXMethod 0x5572a8f41940 'operator=' 'IP6Address &(const IP6Address &) noexcept'
|   | |-MemberExpr 0x5572a901c9e8 <col:5> 'IP6Address' lvalue ->_daddr 0x5572a901b9b0
|   | | `-CXXThisExpr 0x5572a901c9d8 <col:5> 'IP6FlowID *' implicit this
|   | `-DeclRefExpr 0x5572a901ca18 <col:14> 'const IP6Address' lvalue ParmVar 0x5572a901ab28 'daddr' 'const IP6Address &'
|   |-BinaryOperator 0x5572a901cb20 <line:106:5, col:14> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x5572a901cab8 <col:5> 'uint16_t':'unsigned short' lvalue ->_sport 0x5572a901ba10
|   | | `-CXXThisExpr 0x5572a901caa8 <col:5> 'IP6FlowID *' implicit this
|   | `-ImplicitCastExpr 0x5572a901cb08 <col:14> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-DeclRefExpr 0x5572a901cae8 <col:14> 'uint16_t':'unsigned short' lvalue ParmVar 0x5572a901aab0 'sport' 'uint16_t':'unsigned short'
|   `-BinaryOperator 0x5572a901cbb8 <line:107:5, col:14> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x5572a901cb50 <col:5> 'uint16_t':'unsigned short' lvalue ->_dport 0x5572a901ba70
|     | `-CXXThisExpr 0x5572a901cb40 <col:5> 'IP6FlowID *' implicit this
|     `-ImplicitCastExpr 0x5572a901cba0 <col:14> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x5572a901cb80 <col:14> 'uint16_t':'unsigned short' lvalue ParmVar 0x5572a901aba0 'dport' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x5572a901af28 <line:115:3, line:120:3> line:115:8 used assign 'void (IPAddress, uint16_t, IPAddress, uint16_t)'
| |-ParmVarDecl 0x5572a901ad18 <col:15, col:25> col:25 used saddr 'IPAddress'
| |-ParmVarDecl 0x5572a901ad90 <col:32, col:41> col:41 used sport 'uint16_t':'unsigned short'
| |-ParmVarDecl 0x5572a901ae08 <col:48, col:58> col:58 used daddr 'IPAddress'
| |-ParmVarDecl 0x5572a901ae80 <col:65, col:74> col:74 used dport 'uint16_t':'unsigned short'
| `-CompoundStmt 0x5572a901d068 <col:81, line:120:3>
|   |-ExprWithCleanups 0x5572a901cd88 <line:116:5, col:14> 'IP6Address' lvalue
|   | `-CXXOperatorCallExpr 0x5572a901cd50 <col:5, col:14> 'IP6Address' lvalue
|   |   |-ImplicitCastExpr 0x5572a901cd38 <col:12> 'IP6Address &(*)(const struct in_addr &)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x5572a901cd18 <col:12> 'IP6Address &(const struct in_addr &)' lvalue CXXMethod 0x5572a8f5a270 'operator=' 'IP6Address &(const struct in_addr &)'
|   |   |-MemberExpr 0x5572a901cc18 <col:5> 'IP6Address' lvalue ->_saddr 0x5572a901b950
|   |   | `-CXXThisExpr 0x5572a901cc08 <col:5> 'IP6FlowID *' implicit this
|   |   `-MaterializeTemporaryExpr 0x5572a901cd00 <col:14> 'const struct in_addr':'const in_addr' lvalue
|   |     `-ImplicitCastExpr 0x5572a901cce8 <col:14> 'const struct in_addr':'const in_addr' <NoOp>
|   |       `-ImplicitCastExpr 0x5572a901ccd0 <col:14> 'struct in_addr':'in_addr' <UserDefinedConversion>
|   |         `-CXXMemberCallExpr 0x5572a901ccb0 <col:14> 'struct in_addr':'in_addr'
|   |           `-MemberExpr 0x5572a901cc80 <col:14> '<bound member function type>' .operator in_addr 0x5572a8d305f0
|   |             `-ImplicitCastExpr 0x5572a901cc68 <col:14> 'const IPAddress' lvalue <NoOp>
|   |               `-DeclRefExpr 0x5572a901cc48 <col:14> 'IPAddress' lvalue ParmVar 0x5572a901ad18 'saddr' 'IPAddress'
|   |-ExprWithCleanups 0x5572a901cf20 <line:117:5, col:14> 'IP6Address' lvalue
|   | `-CXXOperatorCallExpr 0x5572a901cee8 <col:5, col:14> 'IP6Address' lvalue
|   |   |-ImplicitCastExpr 0x5572a901ced0 <col:12> 'IP6Address &(*)(const struct in_addr &)' <FunctionToPointerDecay>
|   |   | `-DeclRefExpr 0x5572a901ceb0 <col:12> 'IP6Address &(const struct in_addr &)' lvalue CXXMethod 0x5572a8f5a270 'operator=' 'IP6Address &(const struct in_addr &)'
|   |   |-MemberExpr 0x5572a901cdb0 <col:5> 'IP6Address' lvalue ->_daddr 0x5572a901b9b0
|   |   | `-CXXThisExpr 0x5572a901cda0 <col:5> 'IP6FlowID *' implicit this
|   |   `-MaterializeTemporaryExpr 0x5572a901ce98 <col:14> 'const struct in_addr':'const in_addr' lvalue
|   |     `-ImplicitCastExpr 0x5572a901ce80 <col:14> 'const struct in_addr':'const in_addr' <NoOp>
|   |       `-ImplicitCastExpr 0x5572a901ce68 <col:14> 'struct in_addr':'in_addr' <UserDefinedConversion>
|   |         `-CXXMemberCallExpr 0x5572a901ce48 <col:14> 'struct in_addr':'in_addr'
|   |           `-MemberExpr 0x5572a901ce18 <col:14> '<bound member function type>' .operator in_addr 0x5572a8d305f0
|   |             `-ImplicitCastExpr 0x5572a901ce00 <col:14> 'const IPAddress' lvalue <NoOp>
|   |               `-DeclRefExpr 0x5572a901cde0 <col:14> 'IPAddress' lvalue ParmVar 0x5572a901ae08 'daddr' 'IPAddress'
|   |-BinaryOperator 0x5572a901cfb0 <line:118:5, col:14> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x5572a901cf48 <col:5> 'uint16_t':'unsigned short' lvalue ->_sport 0x5572a901ba10
|   | | `-CXXThisExpr 0x5572a901cf38 <col:5> 'IP6FlowID *' implicit this
|   | `-ImplicitCastExpr 0x5572a901cf98 <col:14> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-DeclRefExpr 0x5572a901cf78 <col:14> 'uint16_t':'unsigned short' lvalue ParmVar 0x5572a901ad90 'sport' 'uint16_t':'unsigned short'
|   `-BinaryOperator 0x5572a901d048 <line:119:5, col:14> 'uint16_t':'unsigned short' lvalue '='
|     |-MemberExpr 0x5572a901cfe0 <col:5> 'uint16_t':'unsigned short' lvalue ->_dport 0x5572a901ba70
|     | `-CXXThisExpr 0x5572a901cfd0 <col:5> 'IP6FlowID *' implicit this
|     `-ImplicitCastExpr 0x5572a901d030 <col:14> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x5572a901d010 <col:14> 'uint16_t':'unsigned short' lvalue ParmVar 0x5572a901ae80 'dport' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x5572a901b038 <line:122:3, col:30> col:20 used reverse 'IP6FlowID () const' inline
|-CXXMethodDecl 0x5572a901b0f8 <line:123:3, col:58> col:20 rev 'IP6FlowID () const' inline
| `-DeprecatedAttr 0x5572a901b198 <col:47> "" ""
|-CXXMethodDecl 0x5572a901b228 <line:127:3, col:70> col:15 is_ip4_mapped 'bool () const' inline
| `-CompoundStmt 0x5572a901d138 <col:37, col:70>
|   `-ReturnStmt 0x5572a901d128 <col:39, col:67>
|     `-CXXMemberCallExpr 0x5572a901d108 <col:46, col:67> 'bool'
|       `-MemberExpr 0x5572a901d0d8 <col:46, col:53> '<bound member function type>' .is_ip4_mapped 0x5572a8f3f830
|         `-MemberExpr 0x5572a901d0a8 <col:46> 'const IP6Address' lvalue ->_saddr 0x5572a901b950
|           `-CXXThisExpr 0x5572a901d098 <col:46> 'const IP6FlowID *' implicit this
|-CXXMethodDecl 0x5572a901b2e8 <line:133:3, col:23> col:12 flow_id4 'IPFlowID () const'
|-CXXMethodDecl 0x5572a901b3a8 <line:138:3, col:24> col:13 flow_id6 'IP6FlowID () const'
|-CXXMethodDecl 0x5572a901b548 <line:140:3, col:47> col:21 used operator= 'IP6FlowID &(const IPFlowID &)' inline
| `-ParmVarDecl 0x5572a901b458 <col:31, col:46> col:47 'const IPFlowID &'
|-CXXMethodDecl 0x5572a901b610 <line:142:3, col:32> col:21 hashcode 'hashcode_t () const' inline
|-CXXMethodDecl 0x5572a901b6d0 <line:144:3, col:20> col:10 used unparse 'String () const'
|-CXXConversionDecl 0x5572a901b7a0 <line:145:3, col:47> col:3 operator String 'String () const'
| `-CompoundStmt 0x5572a901d248 <col:27, col:47>
|   `-ReturnStmt 0x5572a901d238 <col:29, col:44>
|     `-ExprWithCleanups 0x5572a901d220 <col:36, col:44> 'String'
|       `-CXXConstructExpr 0x5572a901d1f0 <col:36, col:44> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x5572a901d1d8 <col:36, col:44> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x5572a901d1b8 <col:36, col:44> 'String' (CXXTemporary 0x5572a901d1b8)
|             `-CXXMemberCallExpr 0x5572a901d190 <col:36, col:44> 'String'
|               `-MemberExpr 0x5572a901d160 <col:36> '<bound member function type>' ->unparse 0x5572a901b6d0
|                 `-CXXThisExpr 0x5572a901d150 <col:36> 'const IP6FlowID *' implicit this
|-CXXMethodDecl 0x5572a901b878 <line:146:3, col:40> col:10 s 'String () const'
| `-CompoundStmt 0x5572a901d358 <col:20, col:40>
|   `-ReturnStmt 0x5572a901d348 <col:22, col:37>
|     `-ExprWithCleanups 0x5572a901d330 <col:29, col:37> 'String'
|       `-CXXConstructExpr 0x5572a901d300 <col:29, col:37> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x5572a901d2e8 <col:29, col:37> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x5572a901d2c8 <col:29, col:37> 'String' (CXXTemporary 0x5572a901d2c8)
|             `-CXXMemberCallExpr 0x5572a901d2a0 <col:29, col:37> 'String'
|               `-MemberExpr 0x5572a901d270 <col:29> '<bound member function type>' ->unparse 0x5572a901b6d0
|                 `-CXXThisExpr 0x5572a901d260 <col:29> 'const IP6FlowID *' implicit this
|-AccessSpecDecl 0x5572a901b918 <line:148:2, col:11> col:2 protected
|-FieldDecl 0x5572a901b950 <line:151:3, col:14> col:14 referenced _saddr 'IP6Address'
|-FieldDecl 0x5572a901b9b0 <line:152:3, col:14> col:14 referenced _daddr 'IP6Address'
|-FieldDecl 0x5572a901ba10 <line:153:3, col:12> col:12 referenced _sport 'uint16_t':'unsigned short'
|-FieldDecl 0x5572a901ba70 <line:154:3, col:12> col:12 referenced _dport 'uint16_t':'unsigned short'
|-CXXConstructorDecl 0x5572a901d3d8 <line:10:7> col:7 implicit constexpr IP6FlowID 'void (const IP6FlowID &)' inline default trivial noexcept-unevaluated 0x5572a901d3d8
| `-ParmVarDecl 0x5572a901d4e8 <col:7> col:7 'const IP6FlowID &'
|-CXXConstructorDecl 0x5572a901d588 <col:7> col:7 implicit used constexpr IP6FlowID 'void (IP6FlowID &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5572a901d698 <col:7> col:7 used 'IP6FlowID &&'
| |-CXXCtorInitializer Field 0x5572a901b950 '_saddr' 'IP6Address'
| | `-CXXConstructExpr 0x5572a901fe68 <col:7> 'IP6Address' 'void (IP6Address &&) noexcept'
| |   `-MemberExpr 0x5572a901fe20 <col:7> 'IP6Address' xvalue ._saddr 0x5572a901b950
| |     `-CXXStaticCastExpr 0x5572a901fdf0 <col:7> 'IP6FlowID' xvalue static_cast<class IP6FlowID &&> <NoOp>
| |       `-DeclRefExpr 0x5572a901fdc0 <col:7> 'IP6FlowID' lvalue ParmVar 0x5572a901d698 '' 'IP6FlowID &&'
| |-CXXCtorInitializer Field 0x5572a901b9b0 '_daddr' 'IP6Address'
| | `-CXXConstructExpr 0x5572a901ff68 <col:7> 'IP6Address' 'void (IP6Address &&) noexcept'
| |   `-MemberExpr 0x5572a901ff20 <col:7> 'IP6Address' xvalue ._daddr 0x5572a901b9b0
| |     `-CXXStaticCastExpr 0x5572a901fef0 <col:7> 'IP6FlowID' xvalue static_cast<class IP6FlowID &&> <NoOp>
| |       `-DeclRefExpr 0x5572a901fec0 <col:7> 'IP6FlowID' lvalue ParmVar 0x5572a901d698 '' 'IP6FlowID &&'
| |-CXXCtorInitializer Field 0x5572a901ba10 '_sport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x5572a9020068 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-MemberExpr 0x5572a9020020 <col:7> 'uint16_t':'unsigned short' xvalue ._sport 0x5572a901ba10
| |     `-CXXStaticCastExpr 0x5572a901fff0 <col:7> 'IP6FlowID' xvalue static_cast<class IP6FlowID &&> <NoOp>
| |       `-DeclRefExpr 0x5572a901ffc0 <col:7> 'IP6FlowID' lvalue ParmVar 0x5572a901d698 '' 'IP6FlowID &&'
| |-CXXCtorInitializer Field 0x5572a901ba70 '_dport' 'uint16_t':'unsigned short'
| | `-ImplicitCastExpr 0x5572a9020150 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
| |   `-MemberExpr 0x5572a9020108 <col:7> 'uint16_t':'unsigned short' xvalue ._dport 0x5572a901ba70
| |     `-CXXStaticCastExpr 0x5572a90200d8 <col:7> 'IP6FlowID' xvalue static_cast<class IP6FlowID &&> <NoOp>
| |       `-DeclRefExpr 0x5572a90200a8 <col:7> 'IP6FlowID' lvalue ParmVar 0x5572a901d698 '' 'IP6FlowID &&'
| `-CompoundStmt 0x5572a90201b0 <col:7>
|-CXXMethodDecl 0x5572a901e958 <col:7> col:7 implicit used operator= 'IP6FlowID &(const IP6FlowID &) noexcept' inline default trivial
| |-ParmVarDecl 0x5572a901ea68 <col:7> col:7 used 'const IP6FlowID &'
| `-CompoundStmt 0x5572a9041778 <col:7>
|   |-CXXMemberCallExpr 0x5572a90413f8 <col:7> 'IP6Address' lvalue
|   | |-MemberExpr 0x5572a90413b0 <col:7> '<bound member function type>' .operator= 0x5572a8f41940
|   | | `-MemberExpr 0x5572a90412b0 <col:7> 'IP6Address' lvalue ->_saddr 0x5572a901b950
|   | |   `-CXXThisExpr 0x5572a90412a0 <col:7> 'IP6FlowID *' this
|   | `-MemberExpr 0x5572a9041380 <col:7> 'const IP6Address' lvalue ._saddr 0x5572a901b950
|   |   `-DeclRefExpr 0x5572a9041360 <col:7> 'const IP6FlowID' lvalue ParmVar 0x5572a901ea68 '' 'const IP6FlowID &'
|   |-CXXMemberCallExpr 0x5572a9041588 <col:7> 'IP6Address' lvalue
|   | |-MemberExpr 0x5572a9041540 <col:7> '<bound member function type>' .operator= 0x5572a8f41940
|   | | `-MemberExpr 0x5572a9041440 <col:7> 'IP6Address' lvalue ->_daddr 0x5572a901b9b0
|   | |   `-CXXThisExpr 0x5572a9041430 <col:7> 'IP6FlowID *' this
|   | `-MemberExpr 0x5572a9041510 <col:7> 'const IP6Address' lvalue ._daddr 0x5572a901b9b0
|   |   `-DeclRefExpr 0x5572a90414f0 <col:7> 'const IP6FlowID' lvalue ParmVar 0x5572a901ea68 '' 'const IP6FlowID &'
|   |-BinaryOperator 0x5572a9041658 <col:7> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x5572a9041610 <col:7> 'uint16_t':'unsigned short' lvalue ->_sport 0x5572a901ba10
|   | | `-CXXThisExpr 0x5572a9041600 <col:7> 'IP6FlowID *' this
|   | `-ImplicitCastExpr 0x5572a9041640 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-MemberExpr 0x5572a90415d0 <col:7> 'const uint16_t':'const unsigned short' lvalue ._sport 0x5572a901ba10
|   |     `-DeclRefExpr 0x5572a90415b0 <col:7> 'const IP6FlowID' lvalue ParmVar 0x5572a901ea68 '' 'const IP6FlowID &'
|   |-BinaryOperator 0x5572a9041720 <col:7> 'uint16_t':'unsigned short' lvalue '='
|   | |-MemberExpr 0x5572a90416d8 <col:7> 'uint16_t':'unsigned short' lvalue ->_dport 0x5572a901ba70
|   | | `-CXXThisExpr 0x5572a90416c8 <col:7> 'IP6FlowID *' this
|   | `-ImplicitCastExpr 0x5572a9041708 <col:7> 'uint16_t':'unsigned short' <LValueToRValue>
|   |   `-MemberExpr 0x5572a9041698 <col:7> 'const uint16_t':'const unsigned short' lvalue ._dport 0x5572a901ba70
|   |     `-DeclRefExpr 0x5572a9041678 <col:7> 'const IP6FlowID' lvalue ParmVar 0x5572a901ea68 '' 'const IP6FlowID &'
|   `-ReturnStmt 0x5572a9041768 <col:7>
|     `-UnaryOperator 0x5572a9041750 <col:7> 'IP6FlowID' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5572a9041740 <col:7> 'IP6FlowID *' this
|-CXXMethodDecl 0x5572a901ead8 <col:7> col:7 implicit operator= 'IP6FlowID &(IP6FlowID &&)' inline default trivial noexcept-unevaluated 0x5572a901ead8
| `-ParmVarDecl 0x5572a901ebe8 <col:7> col:7 'IP6FlowID &&'
`-CXXDestructorDecl 0x5572a901fc40 <col:7> col:7 implicit referenced ~IP6FlowID 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IP6FlowID = type { %class.IP6Address, %class.IP6Address, i16, i16 }
  NonVirtualBaseLLVMType:%class.IP6FlowID = type { %class.IP6Address, %class.IP6Address, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a903e248 parent 0x5572a90251e8 prev 0x5572a9025400 <../elements/ip6/addresstranslator.hh:138:1, line:164:1> line:138:26 class Mapping definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5572a903e380 <col:1, col:26> col:26 implicit referenced class Mapping
|-AccessSpecDecl 0x5572a903e410 <line:140:2, col:8> col:2 public
|-CXXConstructorDecl 0x5572a903e470 <line:142:3, col:11> col:3 Mapping 'void ()'
|-CXXMethodDecl 0x5572a903e5b8 <line:143:3, col:68> col:8 initialize 'void (const IP6FlowID &)'
| |-ParmVarDecl 0x5572a903e528 <col:19, col:37> col:37 used new_flow 'const IP6FlowID &'
| `-CompoundStmt 0x5572a9041858 <col:47, col:68>
|   `-CXXOperatorCallExpr 0x5572a9041820 <col:49, col:58> 'IP6FlowID' lvalue
|     |-ImplicitCastExpr 0x5572a9041808 <col:56> 'IP6FlowID &(*)(const IP6FlowID &) noexcept' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5572a9041238 <col:56> 'IP6FlowID &(const IP6FlowID &) noexcept' lvalue CXXMethod 0x5572a901e958 'operator=' 'IP6FlowID &(const IP6FlowID &) noexcept'
|     |-MemberExpr 0x5572a90411e8 <col:49> 'IP6FlowID' lvalue ->_mapto 0x5572a9040fb8
|     | `-CXXThisExpr 0x5572a90411d8 <col:49> 'AddressTranslator::Mapping *' implicit this
|     `-DeclRefExpr 0x5572a9041218 <col:58> 'const IP6FlowID' lvalue ParmVar 0x5572a903e528 'new_flow' 'const IP6FlowID &'
|-CXXMethodDecl 0x5572a903e6d8 <line:144:3, col:53> col:20 flow_id 'const IP6FlowID &() const'
| `-CompoundStmt 0x5572a90418c0 <col:36, col:53>
|   `-ReturnStmt 0x5572a90418b0 <col:38, col:45>
|     `-MemberExpr 0x5572a9041880 <col:45> 'const IP6FlowID' lvalue ->_mapto 0x5572a9040fb8
|       `-CXXThisExpr 0x5572a9041870 <col:45> 'const AddressTranslator::Mapping *' implicit this
|-CXXMethodDecl 0x5572a903e7a0 <line:145:3, col:57> col:18 sport 'unsigned short () const'
| `-CompoundStmt 0x5572a9041978 <col:32, col:57>
|   `-ReturnStmt 0x5572a9041968 <col:34, col:54>
|     `-CXXMemberCallExpr 0x5572a9041948 <col:41, col:54> 'uint16_t':'unsigned short'
|       `-MemberExpr 0x5572a9041918 <col:41, col:48> '<bound member function type>' .sport 0x5572a9016f38
|         `-MemberExpr 0x5572a90418e8 <col:41> 'const IP6FlowID' lvalue ->_mapto 0x5572a9040fb8
|           `-CXXThisExpr 0x5572a90418d8 <col:41> 'const AddressTranslator::Mapping *' implicit this
|-CXXMethodDecl 0x5572a903e868 <line:146:3, col:57> col:18 dport 'unsigned short () const'
| `-CompoundStmt 0x5572a9041a30 <col:32, col:57>
|   `-ReturnStmt 0x5572a9041a20 <col:34, col:54>
|     `-CXXMemberCallExpr 0x5572a9041a00 <col:41, col:54> 'uint16_t':'unsigned short'
|       `-MemberExpr 0x5572a90419d0 <col:41, col:48> '<bound member function type>' .dport 0x5572a9016ff8
|         `-MemberExpr 0x5572a90419a0 <col:41> 'const IP6FlowID' lvalue ->_mapto 0x5572a9040fb8
|           `-CXXThisExpr 0x5572a9041990 <col:41> 'const AddressTranslator::Mapping *' implicit this
|-CXXMethodDecl 0x5572a903e958 <line:148:3, col:40> col:13 get_next 'AddressTranslator::Mapping *()'
| `-CompoundStmt 0x5572a9041ab0 <col:24, col:40>
|   `-ReturnStmt 0x5572a9041aa0 <col:26, col:33>
|     `-ImplicitCastExpr 0x5572a9041a88 <col:33> 'AddressTranslator::Mapping *' <LValueToRValue>
|       `-MemberExpr 0x5572a9041a58 <col:33> 'AddressTranslator::Mapping *' lvalue ->_next 0x5572a9041078
|         `-CXXThisExpr 0x5572a9041a48 <col:33> 'AddressTranslator::Mapping *' implicit this
|-CXXMethodDecl 0x5572a903ea18 <line:149:3, col:40> col:13 get_prev 'AddressTranslator::Mapping *()'
| `-CompoundStmt 0x5572a9041b30 <col:24, col:40>
|   `-ReturnStmt 0x5572a9041b20 <col:26, col:33>
|     `-ImplicitCastExpr 0x5572a9041b08 <col:33> 'AddressTranslator::Mapping *' <LValueToRValue>
|       `-MemberExpr 0x5572a9041ad8 <col:33> 'AddressTranslator::Mapping *' lvalue ->_prev 0x5572a9041018
|         `-CXXThisExpr 0x5572a9041ac8 <col:33> 'AddressTranslator::Mapping *' implicit this
|-CXXMethodDecl 0x5572a903eb88 <line:150:3, col:49> col:8 set_next 'void (AddressTranslator::Mapping *)'
| |-ParmVarDecl 0x5572a903eac8 <col:17, col:27> col:27 used next 'AddressTranslator::Mapping *'
| `-CompoundStmt 0x5572a9041be0 <col:33, col:49>
|   `-BinaryOperator 0x5572a9041bc0 <col:35, col:43> 'AddressTranslator::Mapping *' lvalue '='
|     |-MemberExpr 0x5572a9041b58 <col:35> 'AddressTranslator::Mapping *' lvalue ->_next 0x5572a9041078
|     | `-CXXThisExpr 0x5572a9041b48 <col:35> 'AddressTranslator::Mapping *' implicit this
|     `-ImplicitCastExpr 0x5572a9041ba8 <col:43> 'AddressTranslator::Mapping *' <LValueToRValue>
|       `-DeclRefExpr 0x5572a9041b88 <col:43> 'AddressTranslator::Mapping *' lvalue ParmVar 0x5572a903eac8 'next' 'AddressTranslator::Mapping *'
|-CXXMethodDecl 0x5572a9040ca0 <line:151:3, col:49> col:8 set_prev 'void (AddressTranslator::Mapping *)'
| |-ParmVarDecl 0x5572a9040c10 <col:17, col:27> col:27 used prev 'AddressTranslator::Mapping *'
| `-CompoundStmt 0x5572a9041c90 <col:33, col:49>
|   `-BinaryOperator 0x5572a9041c70 <col:35, col:43> 'AddressTranslator::Mapping *' lvalue '='
|     |-MemberExpr 0x5572a9041c08 <col:35> 'AddressTranslator::Mapping *' lvalue ->_prev 0x5572a9041018
|     | `-CXXThisExpr 0x5572a9041bf8 <col:35> 'AddressTranslator::Mapping *' implicit this
|     `-ImplicitCastExpr 0x5572a9041c58 <col:43> 'AddressTranslator::Mapping *' <LValueToRValue>
|       `-DeclRefExpr 0x5572a9041c38 <col:43> 'AddressTranslator::Mapping *' lvalue ParmVar 0x5572a9040c10 'prev' 'AddressTranslator::Mapping *'
|-CXXMethodDecl 0x5572a9040d98 <line:152:3, col:51> col:12 free_next 'AddressTranslator::Mapping *() const'
| `-CompoundStmt 0x5572a9041d10 <col:30, col:51>
|   `-ReturnStmt 0x5572a9041d00 <col:32, col:39>
|     `-ImplicitCastExpr 0x5572a9041ce8 <col:39> 'AddressTranslator::Mapping *' <LValueToRValue>
|       `-MemberExpr 0x5572a9041cb8 <col:39> 'AddressTranslator::Mapping *const' lvalue ->_free_next 0x5572a90410d8
|         `-CXXThisExpr 0x5572a9041ca8 <col:39> 'const AddressTranslator::Mapping *' implicit this
|-CXXMethodDecl 0x5572a9040ed8 <line:153:3, col:50> col:8 set_free_next 'void (AddressTranslator::Mapping *)'
| |-ParmVarDecl 0x5572a9040e48 <col:22, col:31> col:31 used m 'AddressTranslator::Mapping *'
| `-CompoundStmt 0x5572a9041dc0 <col:34, col:50>
|   `-BinaryOperator 0x5572a9041da0 <col:35, col:48> 'AddressTranslator::Mapping *' lvalue '='
|     |-MemberExpr 0x5572a9041d38 <col:35> 'AddressTranslator::Mapping *' lvalue ->_free_next 0x5572a90410d8
|     | `-CXXThisExpr 0x5572a9041d28 <col:35> 'AddressTranslator::Mapping *' implicit this
|     `-ImplicitCastExpr 0x5572a9041d88 <col:48> 'AddressTranslator::Mapping *' <LValueToRValue>
|       `-DeclRefExpr 0x5572a9041d68 <col:48> 'AddressTranslator::Mapping *' lvalue ParmVar 0x5572a9040e48 'm' 'AddressTranslator::Mapping *'
|-AccessSpecDecl 0x5572a9040f80 <line:156:2, col:11> col:2 protected
|-FieldDecl 0x5572a9040fb8 <line:158:3, col:13> col:13 referenced _mapto 'IP6FlowID'
|-FieldDecl 0x5572a9041018 <line:159:3, col:12> col:12 referenced _prev 'AddressTranslator::Mapping *'
|-FieldDecl 0x5572a9041078 <line:160:3, col:12> col:12 referenced _next 'AddressTranslator::Mapping *'
|-FieldDecl 0x5572a90410d8 <line:161:3, col:12> col:12 referenced _free_next 'AddressTranslator::Mapping *'
`-FriendDecl 0x5572a9041180 <line:163:3, col:16> col:10 'class AddressTranslator':'AddressTranslator'

Layout: <CGRecordLayout
  LLVMType:%"class.AddressTranslator::Mapping" = type { %class.IP6FlowID, %"class.AddressTranslator::Mapping"*, %"class.AddressTranslator::Mapping"*, %"class.AddressTranslator::Mapping"* }
  NonVirtualBaseLLVMType:%"class.AddressTranslator::Mapping" = type { %class.IP6FlowID, %"class.AddressTranslator::Mapping"*, %"class.AddressTranslator::Mapping"*, %"class.AddressTranslator::Mapping"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a90251e8 <../elements/ip6/addresstranslator.hh:68:1, line:136:1> line:68:7 class AddressTranslator definition
|-DefinitionData polymorphic has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x5572a9025348 <col:1, col:7> col:7 implicit referenced class AddressTranslator
|-AccessSpecDecl 0x5572a90253d8 <line:70:2, col:8> col:2 public
|-CXXRecordDecl 0x5572a9025400 <line:72:3, col:9> col:9 referenced class Mapping
|-CXXConstructorDecl 0x5572a9025510 <line:74:3, col:21> col:3 AddressTranslator 'void ()'
|-CXXDestructorDecl 0x5572a9025600 <line:75:3, col:22> col:3 ~AddressTranslator 'void ()' noexcept-unevaluated 0x5572a9025600
| `-Overrides: [ 0x5572a8f8b200 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x5572a9025730 <line:77:3, col:64> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x5572a8f8c658 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x5572a903e1b0 <col:34, col:64>
|   `-ReturnStmt 0x5572a903e1a0 <col:36, col:43>
|     `-ImplicitCastExpr 0x5572a903e188 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5572a903e158 <col:43> 'const char [18]' lvalue "AddressTranslator"
|-CXXMethodDecl 0x5572a90257f8 <line:78:3, col:50> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x5572a8f8c720 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x5572a903e210 <col:34, col:50>
|   `-ReturnStmt 0x5572a903e200 <col:36, col:43>
|     `-ImplicitCastExpr 0x5572a903e1e8 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5572a903e1c8 <col:43> 'const char [4]' lvalue "2/2"
|-CXXMethodDecl 0x5572a9025ad0 <line:79:3, col:49> col:7 configure 'int (Vector<String> &, ErrorHandler *)'
| |-Overrides: [ 0x5572a8f8dee0 Element::configure 'int (Vector<String> &, ErrorHandler *)' ]
| |-ParmVarDecl 0x5572a9025980 <col:17, col:32> col:33 'Vector<String> &'
| `-ParmVarDecl 0x5572a90259f8 <col:35, col:48> col:49 'ErrorHandler *'
|-CXXMethodDecl 0x5572a9025ca8 <line:80:3, col:32> col:8 push 'void (int, Packet *)'
| |-Overrides: [ 0x5572a8f8b4c8 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x5572a9025b98 <col:13, col:17> col:17 port 'int'
| `-ParmVarDecl 0x5572a9025c10 <col:23, col:31> col:31 p 'Packet *'
|-CXXMethodDecl 0x5572a9025eb8 <line:81:3, col:45> col:8 add_map 'void (IP6Address &, bool)'
| |-ParmVarDecl 0x5572a9025d68 <col:16, col:28> col:28 mai 'IP6Address &'
| `-ParmVarDecl 0x5572a9025de0 <col:33, col:38> col:38 binding 'bool'
|-CXXMethodDecl 0x5572a9026388 <line:82:3, col:137> col:8 add_map 'void (IP6Address &, unsigned short, IP6Address &, unsigned short, IP6Address &, unsigned short, bool)'
| |-ParmVarDecl 0x5572a9025f78 <col:16, col:28> col:28 iai 'IP6Address &'
| |-ParmVarDecl 0x5572a9025ff8 <col:33, col:48> col:48 ipi 'unsigned short'
| |-ParmVarDecl 0x5572a9026070 <col:53, col:65> col:65 mai 'IP6Address &'
| |-ParmVarDecl 0x5572a90260f0 <col:70, col:85> col:85 mpi 'unsigned short'
| |-ParmVarDecl 0x5572a9026168 <col:90, col:102> col:102 ea 'IP6Address &'
| |-ParmVarDecl 0x5572a90261e8 <col:106, col:121> col:121 ep 'unsigned short'
| `-ParmVarDecl 0x5572a9026260 <col:125, col:130> col:130 binding 'bool'
|-CXXMethodDecl 0x5572a9026500 <line:83:3, col:32> col:8 handle_outward 'void (Packet *)'
| `-ParmVarDecl 0x5572a9026470 <col:23, col:31> col:31 p 'Packet *'
|-CXXMethodDecl 0x5572a9026648 <line:84:3, col:31> col:8 handle_inward 'void (Packet *)'
| `-ParmVarDecl 0x5572a90265b8 <col:22, col:30> col:30 p 'Packet *'
|-CXXMethodDecl 0x5572a9026b08 <line:86:3, col:115> col:8 lookup 'bool (IP6Address &, unsigned short &, IP6Address &, unsigned short &, IP6Address &, unsigned short &, bool)'
| |-ParmVarDecl 0x5572a9026700 <col:15, col:26> col:27 'IP6Address &'
| |-ParmVarDecl 0x5572a9026780 <col:29, col:44> col:45 'unsigned short &'
| |-ParmVarDecl 0x5572a90267f8 <col:47, col:58> col:59 'IP6Address &'
| |-ParmVarDecl 0x5572a9026878 <col:61, col:76> col:77 'unsigned short &'
| |-ParmVarDecl 0x5572a90268f0 <col:79, col:90> col:91 'IP6Address &'
| |-ParmVarDecl 0x5572a9026970 <col:93, col:108> col:109 'unsigned short &'
| `-ParmVarDecl 0x5572a90269e8 <col:111> col:115 'bool'
|-CXXMethodDecl 0x5572a9026c80 <line:87:3, col:28> col:8 cleanup 'void (Element::CleanupStage)'
| |-Overrides: [ 0x5572a8f8e948 Element::cleanup 'void (Element::CleanupStage)' ]
| `-ParmVarDecl 0x5572a9026bf0 <col:16> col:28 'Element::CleanupStage'
|-AccessSpecDecl 0x5572a9026d28 <line:89:1, col:10> col:1 protected
|-CXXRecordDecl 0x5572a9026d50 <line:91:2, line:105:1> line:91:9 referenced struct EntryMap definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable
| | |-DefaultConstructor exists non_trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5572a9026e68 <col:2, col:9> col:9 implicit struct EntryMap
| |-FieldDecl 0x5572a9026f08 <line:92:5, col:16> col:16 _iai 'IP6Address'
| |-FieldDecl 0x5572a9026f70 <line:93:5, col:20> col:20 _ipi 'unsigned short'
| |-FieldDecl 0x5572a9026fd0 <line:94:5, col:16> col:16 _mai 'IP6Address'
| |-FieldDecl 0x5572a9027038 <line:95:5, col:20> col:20 _mpi 'unsigned short'
| |-FieldDecl 0x5572a9027098 <line:96:5, col:16> col:16 _ea 'IP6Address'
| |-FieldDecl 0x5572a9027100 <line:97:5, col:20> col:20 _ep 'unsigned short'
| |-FieldDecl 0x5572a9027160 <line:103:5, col:10> col:10 _binding 'bool'
| `-FieldDecl 0x5572a90271c0 <line:104:5, col:10> col:10 _static 'bool'
|-FieldDecl 0x5572a9032590 <line:106:3, col:20> col:20 _v 'Vector<AddressTranslator::EntryMap>':'Vector<AddressTranslator::EntryMap>'
|-FieldDecl 0x5572a90325f8 <line:109:3, col:7> col:7 _number_of_smap 'int'
|-FieldDecl 0x5572a9032658 <line:110:3, col:8> col:8 _static_portmapping 'bool'
|-FieldDecl 0x5572a90326b8 <line:111:3, col:8> col:8 _dynamic_mapping 'bool'
|-FieldDecl 0x5572a9032718 <line:112:3, col:8> col:8 _dynamic_portmapping 'bool'
|-FieldDecl 0x5572a9032778 <line:113:3, col:8> col:8 _dynamic_mapping_allocation_direction 'bool'
|-FieldDecl 0x5572a9032868 <line:118:3, col:25> col:8 _static_mapping 'bool [6]'
|-TypedefDecl 0x5572a9032b08 <line:122:3, col:41> col:41 referenced Map6 'HashMap<IP6FlowID, AddressTranslator::Mapping *>':'HashMap<IP6FlowID, AddressTranslator::Mapping *>'
| `-TemplateSpecializationType 0x5572a9032a20 'HashMap<IP6FlowID, AddressTranslator::Mapping *>' sugar HashMap
|   |-TemplateArgument type 'IP6FlowID'
|   |-TemplateArgument type 'AddressTranslator::Mapping *'
|   `-RecordType 0x5572a9032a00 'HashMap<IP6FlowID, AddressTranslator::Mapping *>'
|     `-ClassTemplateSpecialization 0x5572a9032908 'HashMap'
|-CXXMethodDecl 0x5572a9032d78 <line:123:3, col:30> col:8 clean_map 'void (AddressTranslator::Map6 &, bool)'
| |-ParmVarDecl 0x5572a9032be8 <col:18, col:23> col:24 'AddressTranslator::Map6 &'
| `-ParmVarDecl 0x5572a9032c60 <col:26> col:30 'bool'
|-CXXMethodDecl 0x5572a9032e80 <line:124:3, col:30> col:18 find_mport 'unsigned short ()'
|-CXXMethodDecl 0x5572a9033078 <line:125:3, col:37> col:8 mapping_freed 'void (AddressTranslator::Mapping *, bool)'
| |-ParmVarDecl 0x5572a9032f30 <col:22, col:30> col:31 'AddressTranslator::Mapping *'
| `-ParmVarDecl 0x5572a9032fa8 <col:33> col:37 'bool'
|-FieldDecl 0x5572a903da70 <line:127:3, col:8> col:8 _in_map 'AddressTranslator::Map6':'HashMap<IP6FlowID, AddressTranslator::Mapping *>'
|-FieldDecl 0x5572a903dad0 <line:128:3, col:8> col:8 _out_map 'AddressTranslator::Map6':'HashMap<IP6FlowID, AddressTranslator::Mapping *>'
|-FieldDecl 0x5572a903db30 <line:129:3, col:14> col:14 _maddr 'IP6Address'
|-FieldDecl 0x5572a903db98 <line:130:3, col:18> col:18 _mportl 'unsigned short'
|-FieldDecl 0x5572a903dc00 <col:3, col:27> col:27 _mporth 'unsigned short'
|-FieldDecl 0x5572a903dc78 <line:131:3, col:12> col:12 _rover 'AddressTranslator::Mapping *'
|-FieldDecl 0x5572a903dcd8 <line:132:3, col:12> col:12 _rover2 'AddressTranslator::Mapping *'
|-FieldDecl 0x5572a903dd40 <line:133:3, col:7> col:7 _nmappings 'int'
|-FieldDecl 0x5572a903dda8 <line:134:3, col:7> col:7 _nmappings2 'int'
|-CXXConstructorDecl 0x5572a903de28 <line:68:7> col:7 implicit AddressTranslator 'void (const AddressTranslator &)' inline default_delete noexcept-unevaluated 0x5572a903de28
| `-ParmVarDecl 0x5572a903df38 <col:7> col:7 'const AddressTranslator &'
`-CXXMethodDecl 0x5572a903dfd8 <col:7> col:7 implicit operator= 'AddressTranslator &(const AddressTranslator &)' inline default_delete noexcept-unevaluated 0x5572a903dfd8
  `-ParmVarDecl 0x5572a903e0e8 <col:7> col:7 'const AddressTranslator &'

Layout: <CGRecordLayout
  LLVMType:%class.AddressTranslator = type { %class.Element.base, %class.Vector, i32, i8, i8, i8, i8, [6 x i8], %class.HashMap, %class.HashMap, %class.IP6Address, i16, i16, %"class.AddressTranslator::Mapping"*, %"class.AddressTranslator::Mapping"*, i32, i32 }
  NonVirtualBaseLLVMType:%class.AddressTranslator = type { %class.Element.base, %class.Vector, i32, i8, i8, i8, i8, [6 x i8], %class.HashMap, %class.HashMap, %class.IP6Address, i16, i16, %"class.AddressTranslator::Mapping"*, %"class.AddressTranslator::Mapping"*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class HashMap_ArenaFactory
         0 |   (HashMap_ArenaFactory vtable pointer)
         8 |   class HashMap_Arena **[2] _arenas
        24 |   int [2] _narenas
           | [sizeof=32, dsize=32, align=8,
           |  nvsize=32, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a8fe5ab8 prev 0x5572a8fb02a0 <../dummy_inc/click/bighashmap_arena.hh:50:1, line:68:1> line:50:7 referenced class HashMap_ArenaFactory definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5572a8fe5bb0 <col:1, col:7> col:7 implicit referenced class HashMap_ArenaFactory
|-AccessSpecDecl 0x5572a8fe5c40 <col:30, col:36> col:30 public
|-CXXConstructorDecl 0x5572a8fe5ca0 <line:52:5, col:26> col:5 HashMap_ArenaFactory 'void ()'
|-CXXDestructorDecl 0x5572a8fe5d90 <line:53:5, col:35> col:13 ~HashMap_ArenaFactory 'void ()' virtual noexcept-unevaluated 0x5572a8fe5d90
|-CXXMethodDecl 0x5572a8fe5e90 <line:55:5, col:35> col:17 static_initialize 'void ()' static
|-CXXMethodDecl 0x5572a8fe5f50 <line:56:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5572a8fe6188 <line:58:5, col:72> col:27 referenced get_arena 'HashMap_Arena *(uint32_t, HashMap_ArenaFactory *)' static
| |-ParmVarDecl 0x5572a8fe6000 <col:37> col:45 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5572a8fe6078 <col:47, col:71> col:70 'HashMap_ArenaFactory *' cinit
|   `-ImplicitCastExpr 0x5572a8fe6858 <col:71> 'HashMap_ArenaFactory *' <NullToPointer>
|     `-IntegerLiteral 0x5572a8fe6838 <col:71> 'int' 0
|-CXXMethodDecl 0x5572a8fe6338 <line:59:5, col:51> col:28 get_arena_func 'HashMap_Arena *(uint32_t)' virtual
| `-ParmVarDecl 0x5572a8fe6248 <col:43> col:51 'uint32_t':'unsigned int'
|-AccessSpecDecl 0x5572a8fe63e0 <line:61:3, col:10> col:3 private
|-FieldDecl 0x5572a8fe64e0 <line:63:5, col:30> col:21 _arenas 'HashMap_Arena **[2]'
|-FieldDecl 0x5572a8fe6598 <line:64:5, col:19> col:9 _narenas 'int [2]'
|-VarDecl 0x5572a8fe65f8 <line:66:5, col:34> col:34 the_factory 'HashMap_ArenaFactory *' static
`-CXXMethodDecl 0x5572a8fe66b8 <line:50:7> col:7 implicit operator= 'HashMap_ArenaFactory &(const HashMap_ArenaFactory &)' inline default noexcept-unevaluated 0x5572a8fe66b8
  `-ParmVarDecl 0x5572a8fe67c8 <col:7> col:7 'const HashMap_ArenaFactory &'

Layout: <CGRecordLayout
  LLVMType:%class.HashMap_ArenaFactory = type { i32 (...)**, [2 x %class.HashMap_Arena**], [2 x i32] }
  NonVirtualBaseLLVMType:%class.HashMap_ArenaFactory = type { i32 (...)**, [2 x %class.HashMap_Arena**], [2 x i32] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class _HashMap_const_iterator<class IP6FlowID, void *>
         0 |   const HashMap<class IP6FlowID, void *> * _hm
         8 |   typename HashMap<class IP6FlowID, void *>::Elt * _elt
        16 |   size_t _bucket
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class _HashMap_const_iterator<class IP6FlowID, class AddressTranslator::Mapping *>
         0 |   class _HashMap_const_iterator<class IP6FlowID, void *> _i
         0 |     const HashMap<class IP6FlowID, void *> * _hm
         8 |     typename HashMap<class IP6FlowID, void *>::Elt * _elt
        16 |     size_t _bucket
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class _HashMap_iterator<class IP6FlowID, class AddressTranslator::Mapping *>
         0 |   class _HashMap_const_iterator<class IP6FlowID, class AddressTranslator::Mapping *> (base)
         0 |     class _HashMap_const_iterator<class IP6FlowID, void *> _i
         0 |       const HashMap<class IP6FlowID, void *> * _hm
         8 |       typename HashMap<class IP6FlowID, void *>::Elt * _elt
        16 |       size_t _bucket
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5572a90386e0 <../dummy_inc/click/hashmap.hh:321:1, line:347:1> line:322:7 class _HashMap_const_iterator definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'IP6FlowID'
|-TemplateArgument type 'void *'
|-CXXRecordDecl 0x5572a912b190 prev 0x5572a90386e0 <col:1, col:7> col:7 implicit class _HashMap_const_iterator
|-AccessSpecDecl 0x5572a912b220 <col:44, col:50> col:44 public
|-CXXMethodDecl 0x5572a912b248 <line:324:3, col:36> col:8 live 'bool () const'
|-TypedefDecl 0x5572a912b3a8 <line:325:3, col:68> col:43 referenced unspecified_bool_type 'bool (_HashMap_const_iterator<IP6FlowID, void *>::*)() const'
| `-MemberPointerType 0x5572a912b340 'bool (_HashMap_const_iterator<IP6FlowID, void *>::*)() const'
|   |-RecordType 0x5572a90387e0 '_HashMap_const_iterator<IP6FlowID, void *>'
|   | `-ClassTemplateSpecialization 0x5572a90386e0 '_HashMap_const_iterator'
|   `-ParenType 0x5572a8d454d0 'bool () const' sugar
|     `-FunctionProtoType 0x5572a8aa3430 'bool () const' const cdecl
|       `-BuiltinType 0x5572a89f82f0 'bool'
|-CXXConversionDecl 0x5572a912b4c0 <line:326:3, col:75> col:10 operator bool (_HashMap_const_iterator<IP6FlowID, void *>::*)() const '_HashMap_const_iterator<IP6FlowID, void *>::unspecified_bool_type () const' inline
| `-DeprecatedAttr 0x5572a912b5a8 <col:64> Inherited "" ""
|-CXXMethodDecl 0x5572a912b6b0 <line:327:3, col:22> col:8 operator++ 'void (int)'
| `-ParmVarDecl 0x5572a912b620 <col:19> col:22 'int'
|-CXXMethodDecl 0x5572a912b768 <line:328:3, col:34> col:8 operator++ 'void ()'
|-TypedefDecl 0x5572a912b950 <line:330:3, col:45> col:45 Pair 'typename HashMap<IP6FlowID, void *>::Pair':'HashMap<IP6FlowID, void *>::Pair'
| `-ElaboratedType 0x5572a912b900 'typename HashMap<IP6FlowID, void *>::Pair' sugar
|   `-RecordType 0x5572a90339d0 'HashMap<IP6FlowID, void *>::Pair'
|     `-CXXRecord 0x5572a9033938 'Pair'
|-CXXMethodDecl 0x5572a912baa8 <line:331:3, col:43> col:15 pair 'const _HashMap_const_iterator<IP6FlowID, void *>::Pair *() const'
|-CXXMethodDecl 0x5572a912bbd8 <line:333:3, col:44> col:12 key 'const IP6FlowID &() const'
|-CXXMethodDecl 0x5572a912bc88 <line:334:3, col:45> col:9 value 'void *() const'
|-AccessSpecDecl 0x5572a912bd38 <line:336:2, col:9> col:2 private
|-FieldDecl 0x5572a912be78 <line:338:3, col:29> col:29 referenced _hm 'const HashMap<IP6FlowID, void *> *'
|-FieldDecl 0x5572a912c030 <line:339:3, col:37> col:37 referenced _elt 'typename HashMap<IP6FlowID, void *>::Elt *'
|-FieldDecl 0x5572a912c080 <line:340:3, col:10> col:10 referenced _bucket 'size_t':'unsigned long'
|-CXXConstructorDecl 0x5572a912c370 <line:342:3, col:65> col:3 _HashMap_const_iterator 'void (const HashMap<IP6FlowID, void *> *, bool)'
| |-ParmVarDecl 0x5572a912c1b8 <col:27, col:52> col:53 'const HashMap<IP6FlowID, void *> *'
| `-ParmVarDecl 0x5572a912c220 <col:55, col:60> col:60 begin 'bool'
|-FriendDecl 0x5572a912c668 <line:343:3, col:40> col:40
| `-ClassTemplateDecl 0x5572a912c5f0 parent 0x5572a89f8278 prev 0x5572a8fbafb0 <col:3, col:40> col:40 _HashMap_const_iterator
|   |-TemplateTypeParmDecl 0x5572a912c438 <col:13> col:18 class depth 0 index 0
|   |-TemplateTypeParmDecl 0x5572a912c4b8 <col:20> col:25 class depth 0 index 1
|   | `-TemplateArgument type 'void'
|   |   `-inherited from TemplateTypeParm 0x5572a8fb03d8 'V'
|   |-CXXRecordDecl 0x5572a912c560 parent 0x5572a89f8278 prev 0x5572a8fbaf20 <col:34, col:40> col:40 class _HashMap_const_iterator
|   |-ClassTemplateSpecialization 0x5572a90386e0 '_HashMap_const_iterator'
|   `-ClassTemplateSpecialization 0x5572a903cdb0 '_HashMap_const_iterator'
|-FriendDecl 0x5572a912c8d8 <line:344:3, col:40> col:40
| `-ClassTemplateDecl 0x5572a912c860 parent 0x5572a89f8278 prev 0x5572a8fbce00 <col:3, col:40> col:40 _HashMap_iterator
|   |-TemplateTypeParmDecl 0x5572a912c6a8 <col:13> col:18 class depth 0 index 0
|   |-TemplateTypeParmDecl 0x5572a912c728 <col:20> col:25 class depth 0 index 1
|   | `-TemplateArgument type 'void'
|   |   `-inherited from TemplateTypeParm 0x5572a8fb07c8 'V'
|   |-CXXRecordDecl 0x5572a912c7d0 parent 0x5572a89f8278 prev 0x5572a8fbcd70 <col:34, col:40> col:40 class _HashMap_iterator
|   |-ClassTemplateSpecialization 0x5572a9038908 '_HashMap_iterator'
|   `-ClassTemplateSpecialization 0x5572a903cfe8 '_HashMap_iterator'
|-FriendDecl 0x5572a912cb48 <line:345:3, col:40> col:40
| `-ClassTemplateDecl 0x5572a912cad0 parent 0x5572a89f8278 prev 0x5572a8fb5120 <col:3, col:40> col:40 HashMap
|   |-TemplateTypeParmDecl 0x5572a912c918 <col:13> col:18 class depth 0 index 0
|   |-TemplateTypeParmDecl 0x5572a912c998 <col:20> col:25 class depth 0 index 1
|   | `-TemplateArgument type 'void'
|   |   `-inherited from TemplateTypeParm 0x5572a8fb4c08 'V'
|   |-CXXRecordDecl 0x5572a912ca40 parent 0x5572a89f8278 prev 0x5572a8fb5090 <col:34, col:40> col:40 class HashMap
|   |-ClassTemplateSpecialization 0x5572a9032908 'HashMap'
|   `-ClassTemplateSpecialization 0x5572a9033300 'HashMap'
|-CXXDestructorDecl 0x5572a912ec20 <line:322:7> col:7 implicit ~_HashMap_const_iterator 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5572a912ed88 <col:7> col:7 implicit constexpr _HashMap_const_iterator 'void (const _HashMap_const_iterator<IP6FlowID, void *> &)' inline default trivial noexcept-unevaluated 0x5572a912ed88
| `-ParmVarDecl 0x5572a912ee98 <col:7> col:7 'const _HashMap_const_iterator<IP6FlowID, void *> &'
`-CXXConstructorDecl 0x5572a912ef38 <col:7> col:7 implicit used constexpr _HashMap_const_iterator 'void (_HashMap_const_iterator<IP6FlowID, void *> &&) noexcept' inline default trivial
  |-ParmVarDecl 0x5572a912f048 <col:7> col:7 used '_HashMap_const_iterator<IP6FlowID, void *> &&'
  |-CXXCtorInitializer Field 0x5572a912be78 '_hm' 'const HashMap<IP6FlowID, void *> *'
  | `-ImplicitCastExpr 0x5572a912f990 <col:7> 'const HashMap<IP6FlowID, void *> *' <LValueToRValue>
  |   `-MemberExpr 0x5572a912f948 <col:7> 'const HashMap<IP6FlowID, void *> *' xvalue ._hm 0x5572a912be78
  |     `-CXXStaticCastExpr 0x5572a912f918 <col:7> '_HashMap_const_iterator<IP6FlowID, void *>' xvalue static_cast<class _HashMap_const_iterator<class IP6FlowID, void *> &&> <NoOp>
  |       `-DeclRefExpr 0x5572a912f8e8 <col:7> '_HashMap_const_iterator<IP6FlowID, void *>' lvalue ParmVar 0x5572a912f048 '' '_HashMap_const_iterator<IP6FlowID, void *> &&'
  |-CXXCtorInitializer Field 0x5572a912c030 '_elt' 'typename HashMap<IP6FlowID, void *>::Elt *'
  | `-ImplicitCastExpr 0x5572a912fa78 <col:7> 'typename HashMap<IP6FlowID, void *>::Elt *' <LValueToRValue>
  |   `-MemberExpr 0x5572a912fa30 <col:7> 'typename HashMap<IP6FlowID, void *>::Elt *' xvalue ._elt 0x5572a912c030
  |     `-CXXStaticCastExpr 0x5572a912fa00 <col:7> '_HashMap_const_iterator<IP6FlowID, void *>' xvalue static_cast<class _HashMap_const_iterator<class IP6FlowID, void *> &&> <NoOp>
  |       `-DeclRefExpr 0x5572a912f9d0 <col:7> '_HashMap_const_iterator<IP6FlowID, void *>' lvalue ParmVar 0x5572a912f048 '' '_HashMap_const_iterator<IP6FlowID, void *> &&'
  |-CXXCtorInitializer Field 0x5572a912c080 '_bucket' 'size_t':'unsigned long'
  | `-ImplicitCastExpr 0x5572a912fb60 <col:7> 'size_t':'unsigned long' <LValueToRValue>
  |   `-MemberExpr 0x5572a912fb18 <col:7> 'size_t':'unsigned long' xvalue ._bucket 0x5572a912c080
  |     `-CXXStaticCastExpr 0x5572a912fae8 <col:7> '_HashMap_const_iterator<IP6FlowID, void *>' xvalue static_cast<class _HashMap_const_iterator<class IP6FlowID, void *> &&> <NoOp>
  |       `-DeclRefExpr 0x5572a912fab8 <col:7> '_HashMap_const_iterator<IP6FlowID, void *>' lvalue ParmVar 0x5572a912f048 '' '_HashMap_const_iterator<IP6FlowID, void *> &&'
  `-CompoundStmt 0x5572a912fbb8 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class._HashMap_const_iterator.1 = type { %class.HashMap.0*, %"struct.HashMap<IP6FlowID, void *>::Elt"*, i64 }
  NonVirtualBaseLLVMType:%class._HashMap_const_iterator.1 = type { %class.HashMap.0*, %"struct.HashMap<IP6FlowID, void *>::Elt"*, i64 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5572a903cdb0 <../dummy_inc/click/hashmap.hh:490:1, line:515:1> line:491:7 class _HashMap_const_iterator definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-TemplateArgument type 'IP6FlowID'
|-TemplateArgument type 'AddressTranslator::Mapping *'
|-CXXRecordDecl 0x5572a912abc0 prev 0x5572a903cdb0 <col:1, col:7> col:7 implicit class _HashMap_const_iterator
|-AccessSpecDecl 0x5572a912ac50 <col:41, col:47> col:41 public
|-TypedefDecl 0x5572a912ad30 <line:493:5, col:48> col:48 inherited '_HashMap_const_iterator<IP6FlowID, void *>':'_HashMap_const_iterator<IP6FlowID, void *>'
| `-TemplateSpecializationType 0x5572a912ac90 '_HashMap_const_iterator<IP6FlowID, void *>' sugar _HashMap_const_iterator
|   |-TemplateArgument type 'IP6FlowID':'IP6FlowID'
|   |-TemplateArgument type 'void *'
|   `-RecordType 0x5572a90387e0 '_HashMap_const_iterator<IP6FlowID, void *>'
|     `-ClassTemplateSpecialization 0x5572a90386e0 '_HashMap_const_iterator'
|-CXXMethodDecl 0x5572a912ad88 <line:495:5, col:43> col:10 used live 'bool () const'
|-TypedefDecl 0x5572a912cbf0 <line:496:5, col:55> col:55 unspecified_bool_type 'typename inherited::unspecified_bool_type':'bool (_HashMap_const_iterator<IP6FlowID, void *>::*)() const'
| `-ElaboratedType 0x5572a912cba0 'typename inherited::unspecified_bool_type' sugar
|   `-TypedefType 0x5572a912b400 '_HashMap_const_iterator<IP6FlowID, void *>::unspecified_bool_type' sugar
|     |-Typedef 0x5572a912b3a8 'unspecified_bool_type'
|     `-MemberPointerType 0x5572a912b340 'bool (_HashMap_const_iterator<IP6FlowID, void *>::*)() const'
|       |-RecordType 0x5572a90387e0 '_HashMap_const_iterator<IP6FlowID, void *>'
|       | `-ClassTemplateSpecialization 0x5572a90386e0 '_HashMap_const_iterator'
|       `-ParenType 0x5572a8d454d0 'bool () const' sugar
|         `-FunctionProtoType 0x5572a8aa3430 'bool () const' const cdecl
|           `-BuiltinType 0x5572a89f82f0 'bool'
|-CXXConversionDecl 0x5572a912ccc8 <line:497:5, col:77> col:12 operator bool (_HashMap_const_iterator<IP6FlowID, void *>::*)() const '_HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *>::unspecified_bool_type () const' inline
| `-DeprecatedAttr 0x5572a912cda8 <col:66> Inherited "" ""
|-CXXMethodDecl 0x5572a912ceb0 <line:498:5, col:46> col:10 used operator++ 'void (int)'
| `-ParmVarDecl 0x5572a912ce20 <col:21> col:24 'int'
|-CXXMethodDecl 0x5572a912cf68 <line:499:5, col:42> col:10 operator++ 'void ()'
|-TypedefDecl 0x5572a912d160 <line:501:5, col:44> col:44 Pair 'typename HashMap<IP6FlowID, Mapping *>::Pair':'HashMap<IP6FlowID, AddressTranslator::Mapping *>::Pair'
| `-ElaboratedType 0x5572a912d110 'typename HashMap<IP6FlowID, Mapping *>::Pair' sugar
|   `-RecordType 0x5572a903a940 'HashMap<IP6FlowID, AddressTranslator::Mapping *>::Pair'
|     `-CXXRecord 0x5572a903a8a8 'Pair'
|-CXXMethodDecl 0x5572a912d2b8 <line:502:5, col:82> col:17 pair 'const _HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *>::Pair *() const'
|-CXXMethodDecl 0x5572a912d3e8 <line:504:5, col:45> col:14 key 'const IP6FlowID &() const'
|-CXXMethodDecl 0x5572a912d4e8 <line:505:5, col:66> col:8 value 'AddressTranslator::Mapping *() const'
|-AccessSpecDecl 0x5572a912d598 <line:507:2, col:9> col:2 private
|-FieldDecl 0x5572a912d5d0 <line:509:5, col:15> col:15 referenced _i '_HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *>::inherited':'_HashMap_const_iterator<IP6FlowID, void *>'
|-CXXConstructorDecl 0x5572a912d900 <line:511:5, col:84> col:5 _HashMap_const_iterator 'void (const HashMap<IP6FlowID, AddressTranslator::Mapping *> *, bool)'
| |-ParmVarDecl 0x5572a912d748 <col:29, col:52> col:52 t 'const HashMap<IP6FlowID, AddressTranslator::Mapping *> *'
| `-ParmVarDecl 0x5572a912d7b0 <col:55, col:60> col:60 begin 'bool'
|-FriendDecl 0x5572a912dad8 <line:512:5, col:42> col:12 'class _HashMap_iterator<IP6FlowID, Mapping *>':'_HashMap_iterator<IP6FlowID, AddressTranslator::Mapping *>'
|-FriendDecl 0x5572a912dd48 <line:513:5, col:42> col:42
| `-ClassTemplateDecl 0x5572a912dcd0 parent 0x5572a89f8278 prev 0x5572a912cad0 <col:5, col:42> col:42 HashMap
|   |-TemplateTypeParmDecl 0x5572a912db18 <col:15> col:20 class depth 0 index 0
|   |-TemplateTypeParmDecl 0x5572a912db98 <col:22> col:27 class depth 0 index 1
|   | `-TemplateArgument type 'void'
|   |   `-inherited from TemplateTypeParm 0x5572a8fb4c08 'V'
|   |-CXXRecordDecl 0x5572a912dc40 parent 0x5572a89f8278 prev 0x5572a912ca40 <col:36, col:42> col:42 class HashMap
|   |-ClassTemplateSpecialization 0x5572a9032908 'HashMap'
|   `-ClassTemplateSpecialization 0x5572a9033300 'HashMap'
|-CXXDestructorDecl 0x5572a912eb40 <line:491:7> col:7 implicit ~_HashMap_const_iterator 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5572a912f0b8 <col:7> col:7 implicit constexpr _HashMap_const_iterator 'void (const _HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *> &)' inline default trivial noexcept-unevaluated 0x5572a912f0b8
| `-ParmVarDecl 0x5572a912f1c8 <col:7> col:7 'const _HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *> &'
`-CXXConstructorDecl 0x5572a912f268 <col:7> col:7 implicit used constexpr _HashMap_const_iterator 'void (_HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *> &&) noexcept' inline default trivial
  |-ParmVarDecl 0x5572a912f378 <col:7> col:7 used '_HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *> &&'
  |-CXXCtorInitializer Field 0x5572a912d5d0 '_i' '_HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *>::inherited':'_HashMap_const_iterator<IP6FlowID, void *>'
  | `-CXXConstructExpr 0x5572a912fbc8 <col:7> '_HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *>::inherited':'_HashMap_const_iterator<IP6FlowID, void *>' 'void (_HashMap_const_iterator<IP6FlowID, void *> &&) noexcept'
  |   `-MemberExpr 0x5572a912f8a0 <col:7> '_HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *>::inherited':'_HashMap_const_iterator<IP6FlowID, void *>' xvalue ._i 0x5572a912d5d0
  |     `-CXXStaticCastExpr 0x5572a912f870 <col:7> '_HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *>' xvalue static_cast<class _HashMap_const_iterator<class IP6FlowID, class AddressTranslator::Mapping *> &&> <NoOp>
  |       `-DeclRefExpr 0x5572a912f840 <col:7> '_HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *>' lvalue ParmVar 0x5572a912f378 '' '_HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *> &&'
  `-CompoundStmt 0x5572a912fc28 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class._HashMap_const_iterator = type { %class._HashMap_const_iterator.1 }
  NonVirtualBaseLLVMType:%class._HashMap_const_iterator = type { %class._HashMap_const_iterator.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5572a903cfe8 <../dummy_inc/click/hashmap.hh:517:1, line:531:1> line:518:7 class _HashMap_iterator definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public '_HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *>':'_HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *>'
|-TemplateArgument type 'IP6FlowID'
|-TemplateArgument type 'AddressTranslator::Mapping *'
|-CXXRecordDecl 0x5572a912ddd0 prev 0x5572a903cfe8 <col:1, col:7> col:7 implicit class _HashMap_iterator
|-AccessSpecDecl 0x5572a912de60 <col:76, col:82> col:76 public
|-TypedefDecl 0x5572a912df50 <line:520:3, col:43> col:43 inherited '_HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *>':'_HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *>'
| `-TemplateSpecializationType 0x5572a912deb0 '_HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *>' sugar _HashMap_const_iterator
|   |-TemplateArgument type 'IP6FlowID':'IP6FlowID'
|   |-TemplateArgument type 'AddressTranslator::Mapping *'
|   `-RecordType 0x5572a903ceb0 '_HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *>'
|     `-ClassTemplateSpecialization 0x5572a903cdb0 '_HashMap_const_iterator'
|-TypedefDecl 0x5572a912e0f0 <line:522:3, col:42> col:42 Pair 'typename HashMap<IP6FlowID, Mapping *>::Pair':'HashMap<IP6FlowID, AddressTranslator::Mapping *>::Pair'
| `-ElaboratedType 0x5572a912e0a0 'typename HashMap<IP6FlowID, Mapping *>::Pair' sugar
|   `-RecordType 0x5572a903a940 'HashMap<IP6FlowID, AddressTranslator::Mapping *>::Pair'
|     `-CXXRecord 0x5572a903a8a8 'Pair'
|-CXXMethodDecl 0x5572a912e218 <line:523:3, col:70> col:9 pair '_HashMap_iterator<IP6FlowID, AddressTranslator::Mapping *>::Pair *() const'
|-CXXMethodDecl 0x5572a912e380 <line:524:3, col:45> col:7 used value 'AddressTranslator::Mapping *&() const'
|-AccessSpecDecl 0x5572a912e430 <line:526:2, col:9> col:2 private
|-CXXConstructorDecl 0x5572a912e710 <line:528:3, col:77> col:3 _HashMap_iterator 'void (HashMap<IP6FlowID, AddressTranslator::Mapping *> *, bool)'
| |-ParmVarDecl 0x5572a912e558 <col:21, col:38> col:38 t 'HashMap<IP6FlowID, AddressTranslator::Mapping *> *'
| `-ParmVarDecl 0x5572a912e5c0 <col:41, col:46> col:46 begin 'bool'
|-FriendDecl 0x5572a912ea08 <line:529:3, col:40> col:40
| `-ClassTemplateDecl 0x5572a912e990 parent 0x5572a89f8278 prev 0x5572a912dcd0 <col:3, col:40> col:40 HashMap
|   |-TemplateTypeParmDecl 0x5572a912e7d8 <col:13> col:18 class depth 0 index 0
|   |-TemplateTypeParmDecl 0x5572a912e858 <col:20> col:25 class depth 0 index 1
|   | `-TemplateArgument type 'void'
|   |   `-inherited from TemplateTypeParm 0x5572a8fb4c08 'V'
|   |-CXXRecordDecl 0x5572a912e900 parent 0x5572a89f8278 prev 0x5572a912dc40 <col:34, col:40> col:40 class HashMap
|   |-ClassTemplateSpecialization 0x5572a9032908 'HashMap'
|   `-ClassTemplateSpecialization 0x5572a9033300 'HashMap'
|-CXXDestructorDecl 0x5572a912ea60 <line:518:7> col:7 implicit referenced ~_HashMap_iterator 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5572a912f3e8 <col:7> col:7 implicit constexpr _HashMap_iterator 'void (const _HashMap_iterator<IP6FlowID, AddressTranslator::Mapping *> &)' inline default trivial noexcept-unevaluated 0x5572a912f3e8
| `-ParmVarDecl 0x5572a912f4f8 <col:7> col:7 'const _HashMap_iterator<IP6FlowID, AddressTranslator::Mapping *> &'
`-CXXConstructorDecl 0x5572a912f598 <col:7> col:7 implicit used constexpr _HashMap_iterator 'void (_HashMap_iterator<IP6FlowID, AddressTranslator::Mapping *> &&) noexcept' inline default trivial
  |-ParmVarDecl 0x5572a912f6a8 <col:7> col:7 used '_HashMap_iterator<IP6FlowID, AddressTranslator::Mapping *> &&'
  |-CXXCtorInitializer '_HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *>':'_HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *>'
  | `-CXXConstructExpr 0x5572a912fc38 <col:7> '_HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *>':'_HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *>' 'void (_HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *> &&) noexcept'
  |   `-ImplicitCastExpr 0x5572a912f820 <col:7> '_HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *>':'_HashMap_const_iterator<IP6FlowID, AddressTranslator::Mapping *>' xvalue <UncheckedDerivedToBase (_HashMap_const_iterator)>
  |     `-CXXStaticCastExpr 0x5572a912f7f0 <col:7> '_HashMap_iterator<IP6FlowID, AddressTranslator::Mapping *>' xvalue static_cast<class _HashMap_iterator<class IP6FlowID, class AddressTranslator::Mapping *> &&> <NoOp>
  |       `-DeclRefExpr 0x5572a912f7c0 <col:7> '_HashMap_iterator<IP6FlowID, AddressTranslator::Mapping *>' lvalue ParmVar 0x5572a912f6a8 '' '_HashMap_iterator<IP6FlowID, AddressTranslator::Mapping *> &&'
  `-CompoundStmt 0x5572a912fd00 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class._HashMap_iterator = type { %class._HashMap_const_iterator }
  NonVirtualBaseLLVMType:%class._HashMap_iterator = type { %class._HashMap_const_iterator }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a9026d50 <../elements/ip6/addresstranslator.hh:91:2, line:105:1> line:91:9 referenced struct EntryMap definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable
| |-DefaultConstructor exists non_trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5572a9026e68 <col:2, col:9> col:9 implicit struct EntryMap
|-FieldDecl 0x5572a9026f08 <line:92:5, col:16> col:16 referenced _iai 'IP6Address'
|-FieldDecl 0x5572a9026f70 <line:93:5, col:20> col:20 _ipi 'unsigned short'
|-FieldDecl 0x5572a9026fd0 <line:94:5, col:16> col:16 referenced _mai 'IP6Address'
|-FieldDecl 0x5572a9027038 <line:95:5, col:20> col:20 _mpi 'unsigned short'
|-FieldDecl 0x5572a9027098 <line:96:5, col:16> col:16 _ea 'IP6Address'
|-FieldDecl 0x5572a9027100 <line:97:5, col:20> col:20 _ep 'unsigned short'
|-FieldDecl 0x5572a9027160 <line:103:5, col:10> col:10 referenced _binding 'bool'
|-FieldDecl 0x5572a90271c0 <line:104:5, col:10> col:10 referenced _static 'bool'
|-CXXConstructorDecl 0x5572a9142e80 <line:91:9> col:9 implicit used EntryMap 'void () noexcept(false)' inline default
| |-CXXCtorInitializer Field 0x5572a9026f08 '_iai' 'IP6Address'
| | `-CXXConstructExpr 0x5572a9143280 <col:9> 'IP6Address' 'void ()'
| |-CXXCtorInitializer Field 0x5572a9026fd0 '_mai' 'IP6Address'
| | `-CXXConstructExpr 0x5572a91432d0 <col:9> 'IP6Address' 'void ()'
| |-CXXCtorInitializer Field 0x5572a9027098 '_ea' 'IP6Address'
| | `-CXXConstructExpr 0x5572a9143320 <col:9> 'IP6Address' 'void ()'
| `-CompoundStmt 0x5572a9143388 <col:9>
|-CXXConstructorDecl 0x5572a9142f60 <col:9> col:9 implicit constexpr EntryMap 'void (const AddressTranslator::EntryMap &)' inline default trivial noexcept-unevaluated 0x5572a9142f60
| `-ParmVarDecl 0x5572a9143048 <col:9> col:9 'const AddressTranslator::EntryMap &'
`-CXXConstructorDecl 0x5572a91430b8 <col:9> col:9 implicit constexpr EntryMap 'void (AddressTranslator::EntryMap &&)' inline default trivial noexcept-unevaluated 0x5572a91430b8
  `-ParmVarDecl 0x5572a91431c8 <col:9> col:9 'AddressTranslator::EntryMap &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.AddressTranslator::EntryMap" = type { %class.IP6Address, i16, %class.IP6Address, i16, %class.IP6Address, i16, i8, i8 }
  NonVirtualBaseLLVMType:%"struct.AddressTranslator::EntryMap" = type { %class.IP6Address, i16, %class.IP6Address, i16, %class.IP6Address, i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class BoolArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a8c3f3e0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5572a8c41680 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x5572a8c41720 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x5572a8c41780 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x5572a8c417e0 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x5572a8c41890 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a8c41ba0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5572a8c41cb8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x5572a8c41d60 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x5572a8c41dc8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x5572a8c41e58 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x5572a8c46090 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5572a8c464c8 <col:12>
|-CXXConstructorDecl 0x5572a8c46198 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5572a8c462a8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5572a8c41d60 'data' 'const char *'
| | `-ImplicitCastExpr 0x5572a8c49180 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x5572a8c49150 <col:12> 'const char *const' lvalue .data 0x5572a8c41d60
| |     `-DeclRefExpr 0x5572a8c49130 <col:12> 'const String::rep_t' lvalue ParmVar 0x5572a8c462a8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5572a8c41dc8 'length' 'int'
| | `-ImplicitCastExpr 0x5572a8c49210 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x5572a8c491e0 <col:12> 'const int' lvalue .length 0x5572a8c41dc8
| |     `-DeclRefExpr 0x5572a8c491c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5572a8c462a8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5572a8c41e58 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x5572a8c492a0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x5572a8c49270 <col:12> 'String::memo_t *const' lvalue .memo 0x5572a8c41e58
| |     `-DeclRefExpr 0x5572a8c49250 <col:12> 'const String::rep_t' lvalue ParmVar 0x5572a8c462a8 '' 'const String::rep_t &'
| `-CompoundStmt 0x5572a8c492f8 <col:12>
|-CXXConstructorDecl 0x5572a8c46348 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5572a8c46348
| `-ParmVarDecl 0x5572a8c46458 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x5572a8c4e8d0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5572a8c5a238 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5572a8c5a348 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x5572a8c5a860 <col:12>
|   |-BinaryOperator 0x5572a8c5a678 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5572a8c5a630 <col:12> 'const char *' lvalue ->data 0x5572a8c41d60
|   | | `-CXXThisExpr 0x5572a8c5a620 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5572a8c5a660 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x5572a8c5a5f0 <col:12> 'const char *const' lvalue .data 0x5572a8c41d60
|   |     `-DeclRefExpr 0x5572a8c5a5d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5572a8c5a348 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5572a8c5a740 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x5572a8c5a6f8 <col:12> 'int' lvalue ->length 0x5572a8c41dc8
|   | | `-CXXThisExpr 0x5572a8c5a6e8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5572a8c5a728 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x5572a8c5a6b8 <col:12> 'const int' lvalue .length 0x5572a8c41dc8
|   |     `-DeclRefExpr 0x5572a8c5a698 <col:12> 'const String::rep_t' lvalue ParmVar 0x5572a8c5a348 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5572a8c5a808 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x5572a8c5a7c0 <col:12> 'String::memo_t *' lvalue ->memo 0x5572a8c41e58
|   | | `-CXXThisExpr 0x5572a8c5a7b0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5572a8c5a7f0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x5572a8c5a780 <col:12> 'String::memo_t *const' lvalue .memo 0x5572a8c41e58
|   |     `-DeclRefExpr 0x5572a8c5a760 <col:12> 'const String::rep_t' lvalue ParmVar 0x5572a8c5a348 '' 'const String::rep_t &'
|   `-ReturnStmt 0x5572a8c5a850 <col:12>
|     `-UnaryOperator 0x5572a8c5a838 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5572a8c5a828 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x5572a8c5a3b8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5572a8c5a3b8
  `-ParmVarDecl 0x5572a8c5a4c8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a8c35b30 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5572a8c35c48 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x5572a8c35cd8 <col:16, col:22> col:16 public
|-TypedefDecl 0x5572a8c35d18 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x5572a89f8dc0 'const char *'
|   `-QualType 0x5572a89f8311 'const char' const
|     `-BuiltinType 0x5572a89f8310 'char'
|-TypedefDecl 0x5572a8c35da0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x5572a8c35d70 'String::const_iterator' sugar
|   |-Typedef 0x5572a8c35d18 'const_iterator'
|   `-PointerType 0x5572a89f8dc0 'const char *'
|     `-QualType 0x5572a89f8311 'const char' const
|       `-BuiltinType 0x5572a89f8310 'char'
|-TypedefDecl 0x5572a8c35f40 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x5572a8c35eb0 'int (String::*)() const'
|   |-RecordType 0x5572a8c35bc0 'String'
|   | `-CXXRecord 0x5572a8c35b30 'String'
|   `-ParenType 0x5572a8c35e50 'int () const' sugar
|     `-FunctionProtoType 0x5572a8c35e20 'int () const' const cdecl
|       `-BuiltinType 0x5572a89f8370 'int'
|-TypedefDecl 0x5572a8c35fa8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x5572a8b50ca0 'int64_t' sugar
|   |-Typedef 0x5572a8a612d0 'int64_t'
|   `-TypedefType 0x5572a8a3a4d0 '__int64_t' sugar
|     |-Typedef 0x5572a8a3a0a8 '__int64_t'
|     `-BuiltinType 0x5572a89f8390 'long'
|-TypedefDecl 0x5572a8c36010 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x5572a8b50bc0 'uint64_t' sugar
|   |-Typedef 0x5572a8a61470 'uint64_t'
|   `-TypedefType 0x5572a8a3a560 '__uint64_t' sugar
|     |-Typedef 0x5572a8a3a118 '__uint64_t'
|     `-BuiltinType 0x5572a89f8430 'unsigned long'
|-TypedefDecl 0x5572a8c360a0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x5572a8c36070 'String::intmax_t' sugar
|   |-Typedef 0x5572a8c35fa8 'intmax_t'
|   `-TypedefType 0x5572a8b50ca0 'int64_t' sugar
|     |-Typedef 0x5572a8a612d0 'int64_t'
|     `-TypedefType 0x5572a8a3a4d0 '__int64_t' sugar
|       |-Typedef 0x5572a8a3a0a8 '__int64_t'
|       `-BuiltinType 0x5572a89f8390 'long'
|-TypedefDecl 0x5572a8c36130 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x5572a8c36100 'String::uintmax_t' sugar
|   |-Typedef 0x5572a8c36010 'uintmax_t'
|   `-TypedefType 0x5572a8b50bc0 'uint64_t' sugar
|     |-Typedef 0x5572a8a61470 'uint64_t'
|     `-TypedefType 0x5572a8a3a560 '__uint64_t' sugar
|       |-Typedef 0x5572a8a3a118 '__uint64_t'
|       `-BuiltinType 0x5572a89f8430 'unsigned long'
|-CXXConstructorDecl 0x5572a8c361f0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x5572a8c36398 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x5572a8c362d8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x5572a8c36548 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x5572a8c36488 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x5572a8c366a0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x5572a8c36610 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x5572a8c36920 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x5572a8c36768 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x5572a8c367e8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x5572a8c36b78 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x5572a8c36a20 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x5572a8c36aa0 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x5572a8c36d98 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5572a8c36c48 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x5572a8c36cc8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x5572a8c36fb8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x5572a8c36e68 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x5572a8c36ee8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x5572a8c37148 <line:49:5, col:34> col:21 used String 'void (bool)' inline
| `-ParmVarDecl 0x5572a8c37080 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x5572a8c372c8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x5572a8c37208 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x5572a8c37458 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x5572a8c37390 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x5572a8c375b0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x5572a8c37520 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x5572a8c37738 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x5572a8c37678 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x5572a8c378c8 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x5572a8c37800 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x5572a8c37a58 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x5572a8c37990 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x5572a8c37be8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x5572a8c37b20 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x5572a8c37d78 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x5572a8c37cb0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x5572a8c37f08 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x5572a8c37e40 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x5572a8c38000 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x5572a8c38128 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x5572a8c382a8 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x5572a8c381e0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x5572a8c383f8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x5572a8c38368 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x5572a8c384a0 <col:63> "" ""
|-CXXMethodDecl 0x5572a8c385e8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x5572a8c38528 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x5572a8c387f8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x5572a8c386a8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x5572a8c38728 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x5572a8c38e98 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x5572a8c38d40 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x5572a8c38dc0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x5572a8c39178 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x5572a8c38f58 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x5572a8c38fd8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x5572a8c45b60 <col:55> 'int' 10
| `-ParmVarDecl 0x5572a8c39050 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5572a8c45b80 <col:76> 'bool' true
|-CXXMethodDecl 0x5572a8c39458 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x5572a8c39240 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x5572a8c392c0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x5572a8c45b90 <col:56> 'int' 10
| `-ParmVarDecl 0x5572a8c39338 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5572a8c45bb0 <col:77> 'bool' true
|-CXXMethodDecl 0x5572a8c39560 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x5572a8c39628 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x5572a8c396f0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x5572a8c39790 <col:20>
| `-OptimizeNoneAttr 0x5572a8c397e8 <col:30>
|-CXXConversionDecl 0x5572a8c398d8 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x5572a8c399a8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x5572a8c39a68 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x5572a8c39b58 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5572a8c39c18 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5572a8c39d98 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x5572a8c39cd0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x5572a8c39ee8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x5572a8c39e58 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x5572a8c39fd8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x5572a8c3a098 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x5572a8c3a2e8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x5572a8c3a150 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x5572a8c3a1d0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x5572a8c3a548 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x5572a8c3a3b0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x5572a8c3a430 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x5572a8c3a618 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x5572a8c3a828 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x5572a8c3a6d0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x5572a8c3a750 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x5572a8c3aa48 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x5572a8c3a8f0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x5572a8c3a970 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x5572a8c3abd8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x5572a8c3ab10 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x5572a8c3b220 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x5572a8c3b398 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x5572a8c3b2d0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5572a8c3b5a8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x5572a8c3b458 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5572a8c3b4d8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5572a8c3b7c0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x5572a8c3b668 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x5572a8c3b6e0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x5572a8c3b950 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x5572a8c3b880 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5572a8c3bb70 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x5572a8c3ba10 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x5572a8c3ba90 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5572a8c3bcc0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x5572a8c3bc30 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x5572a8c3be98 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x5572a8c3bd80 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5572a8c3be00 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x5572a8c3bfe8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x5572a8c3bf58 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x5572a8c3c200 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x5572a8c3c0a0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x5572a8c3c120 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x5572a8c45bc0 <col:39> 'int' 0
|-CXXMethodDecl 0x5572a8c3c420 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x5572a8c3c2c0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x5572a8c3c340 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x5572a8c45be0 <col:48> 'int' 0
|-CXXMethodDecl 0x5572a8c3c600 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x5572a8c3c4e0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x5572a8c3c560 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x5572a8c45c00 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x5572a8c3c6d0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x5572a8c3c790 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x5572a8c3c850 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x5572a8c3c910 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x5572a8c3c9d0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x5572a8c3cb78 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x5572a8c3ca80 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x5572a8c3ccf8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x5572a8c3cc30 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x5572a8c3ce78 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x5572a8c3cdb8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x5572a8c3cff8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x5572a8c3cf30 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x5572a8c3d140 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x5572a8c3d0b0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5572a8c3d5f0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x5572a8c3d560 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x5572a8c3d7c8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x5572a8c3d6b0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5572a8c3d730 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5572a8c3d9a8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5572a8c3d890 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x5572a8c3d910 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x5572a8c3daf8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x5572a8c3da68 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x5572a8c3dd08 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x5572a8c3dbb8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x5572a8c3dc38 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x5572a8c3de68 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x5572a8c3ddd0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5572a8c3dfc0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x5572a8c3df28 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x5572a8c3e068 <col:57> "" ""
|-CXXMethodDecl 0x5572a8c3e178 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x5572a8c3e0e8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x5572a8c3e2c8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x5572a8c3e238 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x5572a8c3e448 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x5572a8c3e380 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x5572a8c3e510 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x5572a8c3e5d0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x5572a8c3e690 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x5572a8c3e730 <col:49> "" ""
|-CXXMethodDecl 0x5572a8c3e7c0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x5572a8c3e880 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x5572a8c3e970 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x5572a8c3ea38 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x5572a8c3eaf8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x5572a8c3ebb8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x5572a8c3ecb0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x5572a8c3ed78 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x5572a8c3ee40 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x5572a8c3f018 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x5572a8c3eef8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x5572a8c3ef78 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x5572a8c3f240 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x5572a8c3f0e0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x5572a8c3f160 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x5572a8c3f350 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x5572a8c3f3b8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x5572a8c3f3e0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5572a8c41680 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x5572a8c41720 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x5572a8c41780 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x5572a8c417e0 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x5572a8c41890 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x5572a8c418f8 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x5572a8c41b38 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x5572a8c41b88 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5572a8c41b18 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x5572a8c41a28 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x5572a8c419d0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x5572a8c41a10 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x5572a8c419f0 <col:32> 'int' 8
|-CXXRecordDecl 0x5572a8c41ba0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5572a8c41cb8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x5572a8c41d60 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x5572a8c41dc8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x5572a8c41e58 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x5572a8c46090 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5572a8c464c8 <col:12>
| |-CXXConstructorDecl 0x5572a8c46198 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5572a8c462a8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5572a8c41d60 'data' 'const char *'
| | | `-ImplicitCastExpr 0x5572a8c49180 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x5572a8c49150 <col:12> 'const char *const' lvalue .data 0x5572a8c41d60
| | |     `-DeclRefExpr 0x5572a8c49130 <col:12> 'const String::rep_t' lvalue ParmVar 0x5572a8c462a8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5572a8c41dc8 'length' 'int'
| | | `-ImplicitCastExpr 0x5572a8c49210 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x5572a8c491e0 <col:12> 'const int' lvalue .length 0x5572a8c41dc8
| | |     `-DeclRefExpr 0x5572a8c491c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5572a8c462a8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5572a8c41e58 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x5572a8c492a0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x5572a8c49270 <col:12> 'String::memo_t *const' lvalue .memo 0x5572a8c41e58
| | |     `-DeclRefExpr 0x5572a8c49250 <col:12> 'const String::rep_t' lvalue ParmVar 0x5572a8c462a8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x5572a8c492f8 <col:12>
| |-CXXConstructorDecl 0x5572a8c46348 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5572a8c46348
| | `-ParmVarDecl 0x5572a8c46458 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x5572a8c4e8d0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x5572a8c5a238 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5572a8c5a348 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x5572a8c5a860 <col:12>
| |   |-BinaryOperator 0x5572a8c5a678 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x5572a8c5a630 <col:12> 'const char *' lvalue ->data 0x5572a8c41d60
| |   | | `-CXXThisExpr 0x5572a8c5a620 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5572a8c5a660 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x5572a8c5a5f0 <col:12> 'const char *const' lvalue .data 0x5572a8c41d60
| |   |     `-DeclRefExpr 0x5572a8c5a5d0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5572a8c5a348 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5572a8c5a740 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x5572a8c5a6f8 <col:12> 'int' lvalue ->length 0x5572a8c41dc8
| |   | | `-CXXThisExpr 0x5572a8c5a6e8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5572a8c5a728 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x5572a8c5a6b8 <col:12> 'const int' lvalue .length 0x5572a8c41dc8
| |   |     `-DeclRefExpr 0x5572a8c5a698 <col:12> 'const String::rep_t' lvalue ParmVar 0x5572a8c5a348 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5572a8c5a808 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x5572a8c5a7c0 <col:12> 'String::memo_t *' lvalue ->memo 0x5572a8c41e58
| |   | | `-CXXThisExpr 0x5572a8c5a7b0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5572a8c5a7f0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x5572a8c5a780 <col:12> 'String::memo_t *const' lvalue .memo 0x5572a8c41e58
| |   |     `-DeclRefExpr 0x5572a8c5a760 <col:12> 'const String::rep_t' lvalue ParmVar 0x5572a8c5a348 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x5572a8c5a850 <col:12>
| |     `-UnaryOperator 0x5572a8c5a838 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5572a8c5a828 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x5572a8c5a3b8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5572a8c5a3b8
|   `-ParmVarDecl 0x5572a8c5a4c8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x5572a8c41ed0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x5572a8c42118 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x5572a8c41f38 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x5572a8c41fb8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x5572a8c42030 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x5572a8c46050 <col:79, line:261:5>
|   |-BinaryOperator 0x5572a8c45cc8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5572a8c45c60 <col:2, col:5> 'const char *' lvalue .data 0x5572a8c41d60
|   | | `-MemberExpr 0x5572a8c45c30 <col:2> 'String::rep_t' lvalue ->_r 0x5572a8c41ed0
|   | |   `-CXXThisExpr 0x5572a8c45c20 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5572a8c45cb0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5572a8c45c90 <col:12> 'const char *' lvalue ParmVar 0x5572a8c41f38 'data' 'const char *'
|   |-BinaryOperator 0x5572a8c45d90 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x5572a8c45d28 <col:2, col:5> 'int' lvalue .length 0x5572a8c41dc8
|   | | `-MemberExpr 0x5572a8c45cf8 <col:2> 'String::rep_t' lvalue ->_r 0x5572a8c41ed0
|   | |   `-CXXThisExpr 0x5572a8c45ce8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5572a8c45d78 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5572a8c45d58 <col:14> 'int' lvalue ParmVar 0x5572a8c41fb8 'length' 'int'
|   `-IfStmt 0x5572a8c46038 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x5572a8c45eb0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5572a8c45e98 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x5572a8c45e78 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x5572a8c45e58 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x5572a8c45df0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x5572a8c41e58
|     |       | `-MemberExpr 0x5572a8c45dc0 <col:7> 'String::rep_t' lvalue ->_r 0x5572a8c41ed0
|     |       |   `-CXXThisExpr 0x5572a8c45db0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x5572a8c45e40 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x5572a8c45e20 <col:17> 'String::memo_t *' lvalue ParmVar 0x5572a8c42030 'memo' 'String::memo_t *'
|     `-CallExpr 0x5572a8c46010 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x5572a8c45ff8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5572a8c45f00 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x5572a8c1c788 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x5572a8c45f68 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5572a8c41720
|         `-ImplicitCastExpr 0x5572a8c45f50 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x5572a8c45f30 <col:27> 'String::memo_t *' lvalue ParmVar 0x5572a8c42030 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x5572a8c423c8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x5572a8c421e8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x5572a8c42268 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x5572a8c422e0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x5572a8c41ed0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x5572a8c464d8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5572a8c46668 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x5572a8c465d0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x5572a8c46540 <col:2> '<bound member function type>' ->assign_memo 0x5572a8c42118
|     | `-ImplicitCastExpr 0x5572a8c46608 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x5572a8c46530 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x5572a8c46620 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x5572a8c46570 <col:14> 'const char *' lvalue ParmVar 0x5572a8c421e8 'data' 'const char *'
|     |-ImplicitCastExpr 0x5572a8c46638 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5572a8c46590 <col:20> 'int' lvalue ParmVar 0x5572a8c42268 'length' 'int'
|     `-ImplicitCastExpr 0x5572a8c46650 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x5572a8c465b0 <col:28> 'String::memo_t *' lvalue ParmVar 0x5572a8c422e0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x5572a8c42558 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x5572a8c42498 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x5572a8c468c0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x5572a8c46840 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x5572a8c46690 <col:2> '<bound member function type>' ->assign_memo 0x5572a8c42118
|     | `-CXXThisExpr 0x5572a8c46680 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x5572a8c46878 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x5572a8c46710 <col:14, col:19> 'const char *' lvalue .data 0x5572a8c41d60
|     |   `-MemberExpr 0x5572a8c466e0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x5572a8c41ed0
|     |     `-DeclRefExpr 0x5572a8c466c0 <col:14> 'const String' lvalue ParmVar 0x5572a8c42498 'x' 'const String &'
|     |-ImplicitCastExpr 0x5572a8c46890 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x5572a8c46790 <col:25, col:30> 'int' lvalue .length 0x5572a8c41dc8
|     |   `-MemberExpr 0x5572a8c46760 <col:25, col:27> 'String::rep_t' lvalue ._r 0x5572a8c41ed0
|     |     `-DeclRefExpr 0x5572a8c46740 <col:25> 'const String' lvalue ParmVar 0x5572a8c42498 'x' 'const String &'
|     `-ImplicitCastExpr 0x5572a8c468a8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x5572a8c46810 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x5572a8c41e58
|         `-MemberExpr 0x5572a8c467e0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x5572a8c41ed0
|           `-DeclRefExpr 0x5572a8c467c0 <col:38> 'const String' lvalue ParmVar 0x5572a8c42498 'x' 'const String &'
|-CXXMethodDecl 0x5572a8c42620 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x5572a8c47988 <col:31, line:278:5>
|   `-IfStmt 0x5572a8c47970 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x5572a8c46960 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5572a8c46948 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x5572a8c46918 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5572a8c41e58
|     |     `-MemberExpr 0x5572a8c468e8 <col:6> 'String::rep_t' lvalue ->_r 0x5572a8c41ed0
|     |       `-CXXThisExpr 0x5572a8c468d8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x5572a8c47948 <col:15, line:277:2>
|       |-ParenExpr 0x5572a8c46f00 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x5572a8c46ed0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x5572a8c46a70 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x5572a8c46a58 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x5572a8c46a40 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x5572a8c46a00 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5572a8c41720
|       |   |       `-ImplicitCastExpr 0x5572a8c469e8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x5572a8c469b8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x5572a8c41e58
|       |   |           `-MemberExpr 0x5572a8c46988 <col:27> 'String::rep_t' lvalue ->_r 0x5572a8c41ed0
|       |   |             `-CXXThisExpr 0x5572a8c46978 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x5572a8c46ad0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x5572a8c46ab0 <col:54> 'int' 0
|       |   `-CallExpr 0x5572a8c46e30 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x5572a8c46e18 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x5572a8c46da0 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5572a8a97500 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x5572a8c46e70 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5572a8c46bb8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x5572a8c46e88 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5572a8c46c68 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x5572a8c46ea0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x5572a8c46ca0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x5572a8c46eb8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x5572a8c46d88 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x5572a8c46d70 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x5572a8c46d38 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x5572a8c47868 <line:274:6, line:275:22>
|       | |-CallExpr 0x5572a8c47110 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x5572a8c470f8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x5572a8c47070 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x5572a8c21b20 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x5572a8c47040 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5572a8c41720
|       | |   `-ImplicitCastExpr 0x5572a8c47028 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x5572a8c46ff8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x5572a8c41e58
|       | |       `-MemberExpr 0x5572a8c46fc8 <col:40> 'String::rep_t' lvalue ->_r 0x5572a8c41ed0
|       | |         `-CXXThisExpr 0x5572a8c46fb8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x5572a8c47210 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x5572a8c471f8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x5572a8c47138 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x5572a8c432f8 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x5572a8c47850 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x5572a8c47198 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x5572a8c41e58
|       |       `-MemberExpr 0x5572a8c47168 <col:15> 'String::rep_t' lvalue ->_r 0x5572a8c41ed0
|       |         `-CXXThisExpr 0x5572a8c47158 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x5572a8c47928 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x5572a8c478c0 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5572a8c41e58
|         | `-MemberExpr 0x5572a8c47890 <col:6> 'String::rep_t' lvalue ->_r 0x5572a8c41ed0
|         |   `-CXXThisExpr 0x5572a8c47880 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x5572a8c47910 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x5572a8c478f0 <col:16> 'int' 0
|-CXXMethodDecl 0x5572a8c428b8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x5572a8c426d8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5572a8c42758 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5572a8c427d0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x5572a8c42990 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x5572a8c42be0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x5572a8c42a48 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5572a8c42ac8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5572a8c42b40 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x5572a8c42dc8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x5572a8c42cb0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x5572a8c42d30 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x5572a8c42ec8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x5572a8c47a80 <col:41, line:286:5>
|   `-ReturnStmt 0x5572a8c47a70 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x5572a8c47a40 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x5572a8c47a08 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x5572a8c479f0 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x5572a8c479d0 <col:46> 'int' 1
|-CXXMethodDecl 0x5572a8c43168 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x5572a8c42f80 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x5572a8c43000 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x5572a8c43080 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x5572a8c432f8 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x5572a8c43230 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x5572a8c433c8 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x5572a8c43598 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x5572a8c43480 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5572a8c43500 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x5572a8c45240 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x5572a8c45388 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x5572a8c454c8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x5572a8c45540 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x5572a8c455b8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x5572a8c45620 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x5572a8c45720 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x5572a8c45770 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5572a8c45700 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x5572a8c456e0 <col:22> 'int' 14
|-CXXMethodDecl 0x5572a8c45988 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x5572a8c457a0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x5572a8c45820 <col:38> col:41 'int'
| `-ParmVarDecl 0x5572a8c458a0 <col:43> col:46 'int'
|-FriendDecl 0x5572a8c45a90 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x5572a8c45b20 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5572a906dd10 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x5572a906dee8 prev 0x5572a906dd10 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5572a906df78 <col:46, col:52> col:46 public
|-TypedefDecl 0x5572a906dfa0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5572a89f8370 'int'
|-TypedefDecl 0x5572a906f900 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x5572a906f8b0 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x5572a906f890 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x5572a906e1b8 'type'
|     `-SubstTemplateTypeParmType 0x5572a906e180 'String' sugar
|       |-TemplateTypeParmType 0x5572a8f61190 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5572a8f61140 'T'
|       `-RecordType 0x5572a8c35bc0 'String'
|         `-CXXRecord 0x5572a8c35b30 'String'
|-TypedefDecl 0x5572a906f9b8 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x5572a906f980 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x5572a906f960 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x5572a906f900 'type'
|     `-ElaboratedType 0x5572a906f8b0 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x5572a906f890 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x5572a906e1b8 'type'
|         `-SubstTemplateTypeParmType 0x5572a906e180 'String' sugar
|           |-TemplateTypeParmType 0x5572a8f61190 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5572a8f61140 'T'
|           `-RecordType 0x5572a8c35bc0 'String'
|             `-CXXRecord 0x5572a8c35b30 'String'
|-CXXMethodDecl 0x5572a906fb38 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x5572a906fa48 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x5572a906fc28 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5572a906fd08 <line:23:5, col:20> col:5 used ~vector_memory 'void () noexcept'
|-CXXMethodDecl 0x5572a906ffd8 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x5572a906fee0 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x5572a9070218 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5572a9070090 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5572a9070108 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5572a90703e8 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5572a90702d8 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5572a9070350 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5572a9070548 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x5572a9070618 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x5572a9070868 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5572a90706d8 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x5572a9070750 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5572a9070ac8 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x5572a9070938 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x5572a90709b0 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5572a9070c88 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x5572a9070b98 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5572a9070e48 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x5572a9070d50 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5572a9070f00 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5572a9070fb0 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5572a90711e8 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5572a9071060 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5572a90710d8 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5572a9071488 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x5572a9071390 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x5572a9071550 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x5572a90715a0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5572a90715f0 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory.3 = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory.3 = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5572a8f8db50 <../dummy_inc/click/vector.hh:110:1, line:197:1> line:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x5572a906c9b8 prev 0x5572a8f8db50 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5572a906dc80 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x5572a906dc30 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x5572a906dc10 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x5572a906dac0 'type'
|     `-SubstTemplateTypeParmType 0x5572a906d950 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x5572a8d098a0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x5572a8d09848 'F'
|       `-RecordType 0x5572a906d5b0 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x5572a906d4d0 'typed_array_memory'
|-FieldDecl 0x5572a9071640 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x5572a9071690 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5572a90716c8 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x5572a906ca50 'String' sugar
|   |-TemplateTypeParmType 0x5572a8f6aa10 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5572a8f6a9b8 'T'
|   `-RecordType 0x5572a8c35bc0 'String'
|     `-CXXRecord 0x5572a8c35b30 'String'
|-TypedefDecl 0x5572a9071758 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x5572a9071720 'String &'
|   `-SubstTemplateTypeParmType 0x5572a906ca50 'String' sugar
|     |-TemplateTypeParmType 0x5572a8f6aa10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5572a8f6a9b8 'T'
|     `-RecordType 0x5572a8c35bc0 'String'
|       `-CXXRecord 0x5572a8c35b30 'String'
|-TypedefDecl 0x5572a90717e8 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x5572a90717b0 'const String &'
|   `-QualType 0x5572a906ca51 'const String' const
|     `-SubstTemplateTypeParmType 0x5572a906ca50 'String' sugar
|       |-TemplateTypeParmType 0x5572a8f6aa10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5572a8f6a9b8 'T'
|       `-RecordType 0x5572a8c35bc0 'String'
|         `-CXXRecord 0x5572a8c35b30 'String'
|-TypedefDecl 0x5572a9071878 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x5572a9071840 'String *'
|   `-SubstTemplateTypeParmType 0x5572a906ca50 'String' sugar
|     |-TemplateTypeParmType 0x5572a8f6aa10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5572a8f6a9b8 'T'
|     `-RecordType 0x5572a8c35bc0 'String'
|       `-CXXRecord 0x5572a8c35b30 'String'
|-TypedefDecl 0x5572a9071908 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x5572a90718d0 'const String *'
|   `-QualType 0x5572a906ca51 'const String' const
|     `-SubstTemplateTypeParmType 0x5572a906ca50 'String' sugar
|       |-TemplateTypeParmType 0x5572a8f6aa10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5572a8f6a9b8 'T'
|       `-RecordType 0x5572a8c35bc0 'String'
|         `-CXXRecord 0x5572a8c35b30 'String'
|-TypedefDecl 0x5572a9072580 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x5572a9072530 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x5572a9072510 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x5572a9072448 'type'
|     `-LValueReferenceType 0x5572a9072410 'const String &'
|       `-QualType 0x5572a90721b1 'const String' const
|         `-SubstTemplateTypeParmType 0x5572a90721b0 'String' sugar
|           |-TemplateTypeParmType 0x5572a8d11210 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5572a8d111b8 'T'
|           `-RecordType 0x5572a8c35bc0 'String'
|             `-CXXRecord 0x5572a8c35b30 'String'
|-TypedefDecl 0x5572a90725e8 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x5572a90717b0 'const String &'
|   `-QualType 0x5572a906ca51 'const String' const
|     `-SubstTemplateTypeParmType 0x5572a906ca50 'String' sugar
|       |-TemplateTypeParmType 0x5572a8f6aa10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5572a8f6a9b8 'T'
|       `-RecordType 0x5572a8c35bc0 'String'
|         `-CXXRecord 0x5572a8c35b30 'String'
|-TypedefDecl 0x5572a9072640 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5572a89f8370 'int'
|-TypedefDecl 0x5572a90726a8 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x5572a9071840 'String *'
|   `-SubstTemplateTypeParmType 0x5572a906ca50 'String' sugar
|     |-TemplateTypeParmType 0x5572a8f6aa10 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5572a8f6a9b8 'T'
|     `-RecordType 0x5572a8c35bc0 'String'
|       `-CXXRecord 0x5572a8c35b30 'String'
|-TypedefDecl 0x5572a9072710 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x5572a90718d0 'const String *'
|   `-QualType 0x5572a906ca51 'const String' const
|     `-SubstTemplateTypeParmType 0x5572a906ca50 'String' sugar
|       |-TemplateTypeParmType 0x5572a8f6aa10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5572a8f6a9b8 'T'
|       `-RecordType 0x5572a8c35bc0 'String'
|         `-CXXRecord 0x5572a8c35b30 'String'
|-EnumDecl 0x5572a9072768 <line:134:5> col:5
| `-EnumConstantDecl 0x5572a9072860 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5572a9072840 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5572a8f6ba48 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5572a8f6ba20 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5572a8f6ba00 <col:40> 'int' 1
|-CXXConstructorDecl 0x5572a90728e8 <line:137:5, col:28> col:21 used Vector 'void ()' inline
|-CXXConstructorDecl 0x5572a9072b78 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5572a90729a0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5572a9072a40 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x5572a9072e08 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x5572a9072cf0 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x5572a90730c8 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x5572a9072fb0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x5572a90733e0 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x5572a90732c0 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x5572a90736f0 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x5572a90735d0 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x5572a90739e0 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5572a9073828 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5572a90738a0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5572a9073b08 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x5572a9073bb8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5572a9073c10 <col:30> Inherited
|-CXXMethodDecl 0x5572a9073c58 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x5572a9073d08 <col:20> Inherited
| `-OptimizeNoneAttr 0x5572a9073d60 <col:30> Inherited
|-CXXMethodDecl 0x5572a9073e28 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5572a9073ed8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5572a9073f30 <col:30> Inherited
|-CXXMethodDecl 0x5572a9073f78 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5572a9074028 <col:20> Inherited
| `-OptimizeNoneAttr 0x5572a9074080 <col:30> Inherited
|-CXXMethodDecl 0x5572a90740c8 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5572a9074178 <col:20> Inherited
| `-OptimizeNoneAttr 0x5572a90741d0 <col:30> Inherited
|-CXXMethodDecl 0x5572a9074218 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5572a90742c8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5572a9074320 <col:30> Inherited
|-CXXMethodDecl 0x5572a9074348 <line:157:5, col:29> col:22 used size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5572a90743f8 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5572a90744a8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5572a9074668 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5572a9074558 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5572a90745d0 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5572a90747b8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5572a9074728 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5572a9074968 <line:163:5, col:65> col:43 used operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x5572a9074870 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5572a9074a20 <col:20>
| `-OptimizeNoneAttr 0x5572a9074a78 <col:30>
|-CXXMethodDecl 0x5572a9074b98 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x5572a9074aa0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5572a9074c50 <col:20>
| `-OptimizeNoneAttr 0x5572a9074ca8 <col:30>
|-CXXMethodDecl 0x5572a9074d60 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x5572a9074cd0 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5572a9074ea8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5572a9074e18 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5572a9074fd8 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x5572a90750d8 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x5572a90751a8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x5572a9075278 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x5572a90753b8 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x5572a9075328 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5572a9075500 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5572a9075470 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5572a9075648 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x5572a90755b8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5572a9075700 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5572a9075800 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5572a9075770 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5572a90758b8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5572a9075978 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x5572a9075a78 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x5572a9075bf8 <line:180:5, col:48> col:17 used push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x5572a9075b38 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x5572a9076388 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5572a9075cb0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x5572a90762e8 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x5572a90761e8 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x5572a9076468 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5572a90765b8 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x5572a9076528 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5572a9076670 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5572a90768b8 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5572a9076730 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x5572a90767a8 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5572a9076a48 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x5572a9076988 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x5572a9076c58 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x5572a9076b10 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x5572a9076b88 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x5572a9076d18 <line:193:5, col:23> col:17 used clear 'void ()' inline
|-CXXMethodDecl 0x5572a9076f78 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x5572a9076e80 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x5572a9077048 <line:111:7> col:7 implicit used ~Vector 'void () noexcept' inline default
  `-CompoundStmt 0x5572a9147330 <col:7>

Layout: <CGRecordLayout
  LLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  NonVirtualBaseLLVMType:%class.Vector.2 = type { %class.vector_memory.3 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a90f0878 prev 0x5572a9081bb8 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5572a90f0970 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x5572a90f0a00 <col:22, col:28> col:22 public
|-EnumDecl 0x5572a90f0a28 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x5572a90f0b48 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x5572a90f0b28 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x5572a90f0b10 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x5572a90f0af0 <col:14> 'int' 999
| |-EnumConstantDecl 0x5572a90f0bf0 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x5572a90f0bd0 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x5572a90f0bb8 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x5572a90f0b98 <col:14> 'int' 1
| |-EnumConstantDecl 0x5572a90f0c80 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x5572a90f0c60 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x5572a90f0c40 <col:17> 'int' 0
| |-EnumConstantDecl 0x5572a90f0d10 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x5572a90f0cf0 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x5572a90f0cd0 <col:13> 'int' 1
| |-EnumConstantDecl 0x5572a90f0da0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x5572a90f0d80 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x5572a90f0d60 <col:16> 'int' 2
| |-EnumConstantDecl 0x5572a90f0e30 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x5572a90f0e10 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x5572a90f0df0 <col:13> 'int' 3
| |-EnumConstantDecl 0x5572a90f0ec0 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x5572a90f0ea0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x5572a90f0e80 <col:15> 'int' 4
| |-EnumConstantDecl 0x5572a90f0f50 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x5572a90f0f30 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x5572a90f0f10 <col:14> 'int' 5
| |-EnumConstantDecl 0x5572a90f0fe0 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x5572a90f0fc0 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x5572a90f0fa0 <col:12> 'int' 6
| `-EnumConstantDecl 0x5572a90f1070 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x5572a90f1050 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x5572a90f1030 <col:13> 'int' 7
|-VarDecl 0x5572a90f10e0 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x5572a90f1168 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x5572a90f11f0 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x5572a90f1278 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x5572a90f1300 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x5572a90f1388 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x5572a90f1410 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x5572a90f1498 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x5572a90f1520 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x5572a90f15a8 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x5572a90f1630 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x5572a90f1730 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x5572a90f6a18 '_nerrors' 'int'
| | `-IntegerLiteral 0x5572a90f71a8 <line:128:13> 'int' 0
| `-CompoundStmt 0x5572a90f7218 <col:16, line:129:5>
|-CXXDestructorDecl 0x5572a90f1820 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x5572a90f7228 <col:29, line:132:5>
|-CXXMethodDecl 0x5572a90f19d8 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x5572a90f1910 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5572a90f1aa0 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5572a90f1b88 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x5572a90f7280 <col:44, line:161:5>
|   `-ReturnStmt 0x5572a90f7270 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x5572a90f7258 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x5572a90f7238 <col:9> 'ErrorHandler *' lvalue Var 0x5572a90f6a78 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x5572a90f1cc8 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x5572a90f1c38 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5572a90f1d90 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x5572a90f72e0 <col:43, line:173:5>
|   `-ReturnStmt 0x5572a90f72d0 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x5572a90f72b8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x5572a90f7298 <col:9> 'ErrorHandler *' lvalue Var 0x5572a90f6af0 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x5572a90f1e48 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x5572a90f1ec8 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x5572a90f1fd8 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x5572a90f1f48 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x5572a90f2128 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x5572a90f2098 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x5572a90f2280 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x5572a90f21e8 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x5572a90f23d8 <line:196:5, col:35> col:9 used error 'int (const char *, ...)'
| `-ParmVarDecl 0x5572a90f2340 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x5572a90f2530 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x5572a90f2498 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x5572a90f2740 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x5572a90f25e8 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x5572a90f2668 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x5572a90f2918 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x5572a90f2800 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x5572a90f2880 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x5572a90f2b38 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5572a90f29d8 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x5572a90f2a58 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x5572a90f2d18 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5572a90f2bf8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x5572a90f2c78 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x5572a90f2ef8 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5572a90f2dd8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x5572a90f2e58 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x5572a90f3080 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x5572a90f2fb8 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x5572a90f3250 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x5572a90f3138 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x5572a90f31b0 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x5572a90f7538 <col:57, line:234:5>
|   `-ReturnStmt 0x5572a90f7528 <line:233:2, col:41>
|     `-ExprWithCleanups 0x5572a90f7510 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x5572a90f74b8 <col:9, col:41> 'int'
|         |-MemberExpr 0x5572a90f7488 <col:9> '<bound member function type>' ->xmessage 0x5572a90f3080
|         | `-CXXThisExpr 0x5572a90f7478 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x5572a90f74f8 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x5572a90f74e0 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5572a90f7458 <col:18, col:40> 'String' (CXXTemporary 0x5572a90f7458)
|               `-CallExpr 0x5572a90f7420 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x5572a90f7408 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x5572a90f7380 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x5572a90f5248 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x5572a90f73a0 <col:31> 'const String' lvalue ParmVar 0x5572a90f31b0 'str' 'const String &'
|                 `-DeclRefExpr 0x5572a90f73c0 <col:36> 'const String' lvalue ParmVar 0x5572a90f3138 'anno' 'const String &'
|-CXXMethodDecl 0x5572a90f3530 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x5572a90f3310 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x5572a90f3390 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x5572a90f3408 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x5572a90f77c8 <col:68, line:243:5>
|   `-ReturnStmt 0x5572a90f77b8 <line:242:2, col:41>
|     `-ExprWithCleanups 0x5572a90f77a0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x5572a90f7740 <col:9, col:41> 'int'
|         |-MemberExpr 0x5572a90f7710 <col:9> '<bound member function type>' ->xmessage 0x5572a90f3250
|         | `-CXXThisExpr 0x5572a90f7700 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x5572a90f75d8 <col:18> 'const String' lvalue ParmVar 0x5572a90f3310 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x5572a90f7788 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x5572a90f7770 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5572a90f76e0 <col:24, col:40> 'String' (CXXTemporary 0x5572a90f76e0)
|               `-CXXMemberCallExpr 0x5572a90f7678 <col:24, col:40> 'String'
|                 |-MemberExpr 0x5572a90f7608 <col:24> '<bound member function type>' ->vformat 0x5572a90f4710
|                 | `-CXXThisExpr 0x5572a90f75f8 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x5572a90f76a8 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x5572a90f7638 <col:32> 'const char *' lvalue ParmVar 0x5572a90f3390 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x5572a90f76c0 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x5572a90f7658 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x5572a90f3408 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5572a90f37d0 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x5572a90f35f8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x5572a90f3670 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x5572a90f36e8 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x5572a9101b40 <col:23, line:254:5>
|   `-ReturnStmt 0x5572a9101b30 <line:253:2, col:71>
|     `-ExprWithCleanups 0x5572a9101b18 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x5572a9101ab8 <col:9, col:71> 'int'
|         |-MemberExpr 0x5572a9101a88 <col:9> '<bound member function type>' ->xmessage 0x5572a90f3250
|         | `-CXXThisExpr 0x5572a9101a78 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x5572a9101b00 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x5572a9101ae8 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x5572a9101a38 <col:18, col:65> 'String' (CXXTemporary 0x5572a9101a38)
|         |     `-CallExpr 0x5572a91019d0 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x5572a90f7980 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x5572a90f7868 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x5572a90f5248 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x5572a90f7888 <col:31> 'const String' lvalue ParmVar 0x5572a90f3670 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x5572a9101a18 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x5572a9101a00 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x5572a90f7960 <col:37, col:64> 'String' (CXXTemporary 0x5572a90f7960)
|         |             `-CallExpr 0x5572a90f7930 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x5572a90f7918 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x5572a90f78a8 <col:37> 'String (const String &)' lvalue CXXMethod 0x5572a90f5898 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x5572a90f78c8 <col:56> 'const String' lvalue ParmVar 0x5572a90f35f8 'landmark' 'const String &'
|         `-DeclRefExpr 0x5572a9101a58 <col:68> 'const String' lvalue ParmVar 0x5572a90f36e8 'str' 'const String &'
|-CXXMethodDecl 0x5572a90f3b50 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x5572a90f3898 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x5572a90f3910 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x5572a90f3990 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x5572a90f3a08 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x5572a9101df8 <col:34, line:267:5>
|   `-ReturnStmt 0x5572a9101de8 <line:266:2, col:51>
|     `-ExprWithCleanups 0x5572a9101dd0 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x5572a9101d68 <col:9, col:51> 'int'
|         |-MemberExpr 0x5572a9101d38 <col:9> '<bound member function type>' ->xmessage 0x5572a90f37d0
|         | `-CXXThisExpr 0x5572a9101d28 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x5572a9101be0 <col:18> 'const String' lvalue ParmVar 0x5572a90f3898 'landmark' 'const String &'
|         |-DeclRefExpr 0x5572a9101c00 <col:28> 'const String' lvalue ParmVar 0x5572a90f3910 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x5572a9101db8 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x5572a9101da0 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5572a9101d08 <col:34, col:50> 'String' (CXXTemporary 0x5572a9101d08)
|               `-CXXMemberCallExpr 0x5572a9101ca0 <col:34, col:50> 'String'
|                 |-MemberExpr 0x5572a9101c30 <col:34> '<bound member function type>' ->vformat 0x5572a90f4710
|                 | `-CXXThisExpr 0x5572a9101c20 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x5572a9101cd0 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x5572a9101c60 <col:42> 'const char *' lvalue ParmVar 0x5572a90f3990 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x5572a9101ce8 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x5572a9101c80 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x5572a90f3a08 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5572a90f3c60 <line:286:5, line:288:5> line:286:9 used nerrors 'int () const'
| `-CompoundStmt 0x5572a9101e78 <col:25, line:288:5>
|   `-ReturnStmt 0x5572a9101e68 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x5572a9101e50 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x5572a9101e20 <col:9> 'const int' lvalue ->_nerrors 0x5572a90f6a18
|         `-CXXThisExpr 0x5572a9101e10 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x5572a90f3e70 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x5572a90f3d18 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x5572a90f3d98 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x5572a90f4158 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x5572a90f3f38 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x5572a90f3fb8 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x5572a90f4030 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5572a90f42f0 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x5572a90f4228 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x5572a90f4538 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x5572a90f43b0 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x5572a90f4428 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x5572a91020d0 <col:58, line:357:5>
|   `-ReturnStmt 0x5572a91020c0 <line:356:2, col:29>
|     `-ExprWithCleanups 0x5572a91020a8 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x5572a9102078 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x5572a9102060 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x5572a9102040 <col:9, col:29> 'String' (CXXTemporary 0x5572a9102040)
|             `-CallExpr 0x5572a9101fd0 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x5572a9101fb8 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5572a9101f40 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x5572a90f4158 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x5572a9101ee0 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x5572a9102008 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x5572a9101f00 <col:21> 'const char *' lvalue ParmVar 0x5572a90f43b0 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x5572a9102020 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x5572a9101f20 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x5572a90f4428 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5572a90f4710 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x5572a90f4600 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x5572a90f4678 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5572a90f4868 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x5572a90f47d8 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x5572a90f49b0 <line:393:5, col:46> col:20 decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x5572a90f4920 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x5572a90f4c50 <line:424:5, col:69> col:19 emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x5572a90f4a68 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x5572a90f4ae8 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x5572a90f4b60 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x5572a90f4db0 <line:438:5, line:441:5> line:438:18 account 'void (int)' virtual
| |-ParmVarDecl 0x5572a90f4d20 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x5572a91021e8 <col:37, line:441:5>
|   `-IfStmt 0x5572a91021d0 <line:439:2, line:440:8>
|     |-BinaryOperator 0x5572a9102158 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x5572a9102128 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x5572a91020e8 <col:6> 'int' lvalue ParmVar 0x5572a90f4d20 'level' 'int'
|     | `-ImplicitCastExpr 0x5572a9102140 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x5572a9102108 <col:15> 'ErrorHandler::Level' EnumConstant 0x5572a90f0e30 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x5572a91021b8 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x5572a9102188 <col:8> 'int' lvalue ->_nerrors 0x5572a90f6a18
|         `-CXXThisExpr 0x5572a9102178 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x5572a90f4e78 <line:446:5, line:448:5> line:446:18 clear 'void ()' virtual
| `-CompoundStmt 0x5572a9102280 <col:26, line:448:5>
|   `-BinaryOperator 0x5572a9102260 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x5572a9102210 <col:2> 'int' lvalue ->_nerrors 0x5572a90f6a18
|     | `-CXXThisExpr 0x5572a9102200 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x5572a9102240 <col:13> 'int' 0
|-CXXMethodDecl 0x5572a90f5040 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x5572a90f4f30 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x5572a90f4fa8 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x5572a90f5248 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x5572a90f5100 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x5572a90f5178 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x5572a90f54f8 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x5572a90f5308 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x5572a90f5388 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x5572a90f5408 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x5572a90f55b0 <col:59> 0 0
|-CXXMethodDecl 0x5572a90f5748 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x5572a90f5628 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x5572a90f56a8 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x5572a91028f0 <col:70, line:534:5>
|   |-DeclStmt 0x5572a91023f0 <line:528:2, col:20>
|   | |-VarDecl 0x5572a91022a8 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x5572a9102310 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x5572a9102348 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x5572a91023b0 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x5572a91024c0 <line:529:2, col:23>
|   | `-VarDecl 0x5572a9102420 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x5572a91024a8 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x5572a9102488 <col:18> 'const char *' lvalue ParmVar 0x5572a90f5628 'begin' 'const char *'
|   |-DoStmt 0x5572a9102888 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x5572a91027b8 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x5572a91027a0 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x5572a9102780 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x5572a91024d8 <col:6> 'const char *' lvalue Var 0x5572a9102420 'x' 'const char *'
|   | |     `-CallExpr 0x5572a91026d0 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x5572a91026b8 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x5572a9102670 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x5572a90f6ef0 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x5572a9102738 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x5572a9102720 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x5572a9102590 <col:20, col:27> 'String' (CXXTemporary 0x5572a9102590)
|   | |       |     `-CXXTemporaryObjectExpr 0x5572a9102558 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x5572a9102750 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x5572a91025b0 <col:30> 'const char *' lvalue Var 0x5572a9102420 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x5572a9102768 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x5572a91025d0 <col:33> 'const char *' lvalue ParmVar 0x5572a90f56a8 'end' 'const char *'
|   | |       |-UnaryOperator 0x5572a9102610 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x5572a91025f0 <col:39> 'String' lvalue Var 0x5572a91022a8 'name' 'String'
|   | |       |-UnaryOperator 0x5572a9102648 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x5572a9102628 <col:46> 'String' lvalue Var 0x5572a9102348 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x5572a9102660 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x5572a9102870 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x5572a9102858 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x5572a9102838 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x5572a9102808 <col:11> '<bound member function type>' .operator int (String::*)() const 0x5572a8c398d8
|   |         `-ImplicitCastExpr 0x5572a91027f0 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x5572a91027d0 <col:11> 'String' lvalue Var 0x5572a91022a8 'name' 'String'
|   `-ReturnStmt 0x5572a91028e0 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x5572a91028c8 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x5572a91028a8 <col:9> 'const char *' lvalue Var 0x5572a9102420 'x' 'const char *'
|-CXXMethodDecl 0x5572a90f5898 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x5572a90f5808 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x5572a9102ef8 <col:55, line:550:5>
|   `-IfStmt 0x5572a9102ed0 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x5572a9102b30 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x5572a9102b18 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x5572a9102b00 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x5572a9102ae0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x5572a9102ab0 <col:6> '<bound member function type>' .operator int (String::*)() const 0x5572a8c398d8
|     | |       `-DeclRefExpr 0x5572a9102950 <col:6> 'const String' lvalue ParmVar 0x5572a90f5808 'x' 'const String &'
|     | `-BinaryOperator 0x5572a9102a90 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x5572a9102a60 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x5572a9102a10 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x5572a91029f8 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x5572a91029b0 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x5572a8c54820 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x5572a9102970 <col:11> 'const String' lvalue ParmVar 0x5572a90f5808 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x5572a9102990 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x5572a9102a78 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x5572a9102a48 <col:19> 'char' 123
|     |-ReturnStmt 0x5572a9102ba0 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x5572a9102b70 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x5572a9102b50 <col:13> 'const String' lvalue ParmVar 0x5572a90f5808 'x' 'const String &'
|     `-IfStmt 0x5572a9102ea8 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x5572a9102c38 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x5572a9102c20 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x5572a9102c00 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x5572a9102bd0 <col:11> '<bound member function type>' .operator int (String::*)() const 0x5572a8c398d8
|       |       `-DeclRefExpr 0x5572a9102bb0 <col:11> 'const String' lvalue ParmVar 0x5572a90f5808 'x' 'const String &'
|       |-ReturnStmt 0x5572a9102dc0 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x5572a9102da8 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x5572a9102d78 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x5572a9102d60 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x5572a9102d40 <col:13, col:29> 'String' (CXXTemporary 0x5572a9102d40)
|       |         `-CallExpr 0x5572a9102cf0 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x5572a9102cd8 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x5572a9102c50 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x5572a90f5040 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x5572a9102d20 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x5572a9102c70 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x5572a9102c90 <col:28> 'const String' lvalue ParmVar 0x5572a90f5808 'x' 'const String &'
|       `-ReturnStmt 0x5572a9102e98 <line:549:6, col:20>
|         `-ExprWithCleanups 0x5572a9102e80 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x5572a9102e50 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x5572a9102e38 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x5572a9102e18 <col:13, col:20> 'String' (CXXTemporary 0x5572a9102e18)
|                 `-CXXTemporaryObjectExpr 0x5572a9102de0 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x5572a90f5a60 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x5572a90f5950 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x5572a90f59c8 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5572a90f7198 <col:71> 'bool' false
|-CXXRecordDecl 0x5572a90f5b10 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x5572a90f5e08 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x5572a90f5da0 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x5572a90f5d40 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x5572a90f5d00 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x5572a8c35bc0 'String'
|       | `-CXXRecord 0x5572a8c35b30 'String'
|       |-BuiltinType 0x5572a89f8370 'int'
|       `-DecayedType 0x5572a9082c40 '__va_list_tag *' sugar
|         |-TypedefType 0x5572a9082c10 'va_list' sugar
|         | |-Typedef 0x5572a8c972d0 'va_list'
|         | `-TypedefType 0x5572a8c97280 '__gnuc_va_list' sugar
|         |   |-Typedef 0x5572a8c925d8 '__gnuc_va_list'
|         |   `-TypedefType 0x5572a8c92540 '__builtin_va_list' sugar
|         |     |-Typedef 0x5572a8a39bd8 '__builtin_va_list'
|         |     `-ConstantArrayType 0x5572a8a39b80 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x5572a89f90c0 '__va_list_tag'
|         |         `-CXXRecord 0x5572a89f9028 '__va_list_tag'
|         `-PointerType 0x5572a8c9cf70 '__va_list_tag *'
|           `-RecordType 0x5572a89f90c0 '__va_list_tag'
|             `-CXXRecord 0x5572a89f9028 '__va_list_tag'
|-EnumDecl 0x5572a90f5e60 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x5572a90f5f60 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5572a90f64c0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a90f5f40 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x5572a90f5f20 <col:16> 'int' 1
| |-EnumConstantDecl 0x5572a90f5ff0 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5572a90f64d8 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a90f5fd0 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x5572a90f5fb0 <col:21> 'int' 2
| |-EnumConstantDecl 0x5572a90f6080 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5572a90f64f0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a90f6060 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x5572a90f6040 <col:22> 'int' 4
| |-EnumConstantDecl 0x5572a90f6110 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5572a90f6508 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a90f60f0 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x5572a90f60d0 <col:17> 'int' 8
| |-EnumConstantDecl 0x5572a90f61a0 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5572a90f6520 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a90f6180 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x5572a90f6160 <col:22> 'int' 16
| |-EnumConstantDecl 0x5572a90f6230 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5572a90f6538 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a90f6210 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5572a90f61f0 <col:19> 'int' 32
| |-EnumConstantDecl 0x5572a90f62c0 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5572a90f6550 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a90f62a0 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x5572a90f6280 <col:17> 'int' 64
| |-EnumConstantDecl 0x5572a90f6350 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5572a90f6568 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a90f6330 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x5572a90f6310 <col:14> 'int' 128
| |-EnumConstantDecl 0x5572a90f63e0 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5572a90f6580 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a90f63c0 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x5572a90f63a0 <col:16> 'int' 256
| `-EnumConstantDecl 0x5572a90f6470 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x5572a90f6598 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5572a90f6450 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x5572a90f6430 <col:12> 'int' 1024
|-CXXMethodDecl 0x5572a90f67a8 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x5572a90f65c0 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x5572a90f6660 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x5572a90f6930 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x5572a90f6868 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x5572a90f69d8 <line:580:3, col:10> col:3 private
|-FieldDecl 0x5572a90f6a18 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x5572a90f6a78 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x5572a90f6af0 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x5572a90f6ef0 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x5572a90f6b68 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x5572a90f6be8 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x5572a90f6c68 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x5572a90f6ce0 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x5572a90f6d58 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x5572a90f6dd0 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x5572a90f7018 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x5572a90f7018
| `-ParmVarDecl 0x5572a90f7128 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x5572a9103258 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x5572a9103258
  `-ParmVarDecl 0x5572a9103368 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class NumArg (empty)
           | [sizeof=1, dsize=1, align=1,
           |  nvsize=1, nvalign=1]

*** Dumping AST Record Layout
         0 | class IntArg
         0 |   class NumArg (base) (empty)
         0 |   int base
         4 |   int status
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a90db090 <../dummy_inc/click/args.hh:1013:1, line:1027:1> line:1013:7 referenced class NumArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5572a90db1a8 <col:1, col:7> col:7 implicit class NumArg
|-AccessSpecDecl 0x5572a90db238 <col:16, col:22> col:16 public
|-EnumDecl 0x5572a90db260 <line:1014:5, line:1026:5> line:1014:5
| |-EnumConstantDecl 0x5572a90db360 <line:1015:9, col:21> col:9 status_ok 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x5572a90db5b0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a90db340 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x5572a90db320 <col:21> 'int' 0
| |-EnumConstantDecl 0x5572a90db3f0 <line:1016:9, col:24> col:9 referenced status_inval 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x5572a90db5c8 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a90db3d0 <col:24> 'int' Int: 22
| |     `-IntegerLiteral 0x5572a90db3b0 <col:24> 'int' 22
| |-EnumConstantDecl 0x5572a90db480 <line:1017:9, col:24> col:9 referenced status_range 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x5572a90db5e0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a90db460 <col:24> 'int' Int: 34
| |     `-IntegerLiteral 0x5572a90db440 <col:24> 'int' 34
| |-EnumConstantDecl 0x5572a90db510 <line:1019:9, col:25> col:9 status_notsup 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| | `-ImplicitCastExpr 0x5572a90db5f8 <col:25> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a90db4f0 <col:25> 'int' Int: 95
| |     `-IntegerLiteral 0x5572a90db4d0 <col:25> 'int' 95
| `-EnumConstantDecl 0x5572a90db560 <line:1025:9> col:9 status_unitless 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|-CXXConstructorDecl 0x5572a90dcf70 <line:1013:7> col:7 implicit used constexpr NumArg 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5572a90dd3a8 <col:7>
|-CXXConstructorDecl 0x5572a90dd078 <col:7> col:7 implicit constexpr NumArg 'void (const NumArg &)' inline default trivial noexcept-unevaluated 0x5572a90dd078
| `-ParmVarDecl 0x5572a90dd188 <col:7> col:7 'const NumArg &'
|-CXXConstructorDecl 0x5572a90dd228 <col:7> col:7 implicit constexpr NumArg 'void (NumArg &&)' inline default trivial noexcept-unevaluated 0x5572a90dd228
| `-ParmVarDecl 0x5572a90dd338 <col:7> col:7 'NumArg &&'
`-CXXDestructorDecl 0x5572a90df558 <col:7> col:7 implicit ~NumArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.NumArg = type { i8 }
  NonVirtualBaseLLVMType:%class.NumArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a90db628 <../dummy_inc/click/args.hh:1040:1, line:1095:1> line:1040:7 referenced class IntArg definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-public 'NumArg'
|-CXXRecordDecl 0x5572a90db788 <col:1, col:7> col:7 implicit referenced class IntArg
|-AccessSpecDecl 0x5572a90db818 <col:32, col:38> col:32 public
|-TypedefDecl 0x5572a90db850 <line:1042:5, col:22> col:22 referenced limb_type 'uint32_t':'unsigned int'
| `-TypedefType 0x5572a8b50a00 'uint32_t' sugar
|   |-Typedef 0x5572a8a61408 'uint32_t'
|   `-TypedefType 0x5572a8a3a440 '__uint32_t' sugar
|     |-Typedef 0x5572a8a3a038 '__uint32_t'
|     `-BuiltinType 0x5572a89f8410 'unsigned int'
|-CXXConstructorDecl 0x5572a90db998 <line:1044:5, line:1046:5> line:1044:5 used IntArg 'void (int)'
| |-ParmVarDecl 0x5572a90db8c0 <col:12, col:20> col:16 used b 'int' cinit
| | `-IntegerLiteral 0x5572a90dce78 <col:20> 'int' 0
| |-CXXCtorInitializer 'NumArg'
| | `-CXXConstructExpr 0x5572a90dd3b8 <col:5> 'NumArg' 'void () noexcept'
| |-CXXCtorInitializer Field 0x5572a90dc730 'base' 'int'
| | `-ImplicitCastExpr 0x5572a90dcf18 <line:1045:16> 'int' <LValueToRValue>
| |   `-DeclRefExpr 0x5572a90dced8 <col:16> 'int' lvalue ParmVar 0x5572a90db8c0 'b' 'int'
| `-CompoundStmt 0x5572a90dd428 <col:19, line:1046:5>
|-CXXMethodDecl 0x5572a90dbe90 <line:1048:5, line:1050:50> line:1048:17 parse 'const char *(const char *, const char *, bool, int, IntArg::limb_type *, int)'
| |-ParmVarDecl 0x5572a90dba60 <col:23, col:35> col:35 begin 'const char *'
| |-ParmVarDecl 0x5572a90dbae0 <col:42, col:54> col:54 end 'const char *'
| |-ParmVarDecl 0x5572a90dbb58 <line:1049:23, col:28> col:28 is_signed 'bool'
| |-ParmVarDecl 0x5572a90dbbd8 <col:39, col:43> col:43 size 'int'
| |-ParmVarDecl 0x5572a90dbc98 <line:1050:23, col:34> col:34 value 'IntArg::limb_type *'
| `-ParmVarDecl 0x5572a90dbd18 <col:41, col:45> col:45 nlimb 'int'
|-FunctionTemplateDecl 0x5572a90dc2e8 <line:1052:5, line:1067:5> line:1053:10 parse_saturating
| |-TemplateTypeParmDecl 0x5572a90dbf60 <line:1052:14, col:23> col:23 referenced typename depth 0 index 0 V
| `-CXXMethodDecl 0x5572a90dc248 <line:1053:5, line:1067:5> line:1053:10 parse_saturating 'bool (const String &, V &, const ArgContext &)'
|   |-ParmVarDecl 0x5572a90dc008 <col:27, col:41> col:41 referenced str 'const String &'
|   |-ParmVarDecl 0x5572a90dc0a8 <col:46, col:49> col:49 referenced result 'V &'
|   |-ParmVarDecl 0x5572a90dc120 <col:57, col:82> col:75 referenced args 'const ArgContext &' cinit
|   | `-DeclRefExpr 0x5572a90dce98 <col:82> 'const ArgContext' lvalue Var 0x5572a90d10e8 'blank_args' 'const ArgContext'
|   `-CompoundStmt 0x5572a90de3a8 <col:94, line:1067:5>
|     |-DeclStmt 0x5572a90dd5b8 <line:1054:9, col:64>
|     | `-VarDecl 0x5572a90dd448 <col:9, col:55> col:24 referenced is_signed 'const bool' constexpr cinit
|     |   `-CXXDependentScopeMemberExpr 0x5572a90dd570 <col:36, col:55> '<dependent type>' lvalue ->is_signed
|     |-DeclStmt 0x5572a90dd7d8 <line:1055:9, col:91>
|     | `-VarDecl 0x5572a90dd5e8 <col:9, col:90> col:23 referenced nlimb 'const int' constexpr cinit
|     |   `-CXXFunctionalCastExpr 0x5572a90dd7b0 <col:31, col:90> 'int' functional cast to int <Dependent>
|     |     `-BinaryOperator 0x5572a90dd790 <col:35, col:89> 'unsigned long' '/'
|     |       |-ParenExpr 0x5572a90dd740 <col:35, col:69> 'unsigned long'
|     |       | `-BinaryOperator 0x5572a90dd720 <col:36, col:68> 'unsigned long' '-'
|     |       |   |-BinaryOperator 0x5572a90dd6c8 <col:36, col:64> 'unsigned long' '+'
|     |       |   | |-UnaryExprOrTypeTraitExpr 0x5572a90dd678 <col:36, col:44> 'unsigned long' sizeof 'V'
|     |       |   | `-UnaryExprOrTypeTraitExpr 0x5572a90dd6a8 <col:48, col:64> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |       |   `-ImplicitCastExpr 0x5572a90dd708 <col:68> 'unsigned long' <IntegralCast>
|     |       |     `-IntegerLiteral 0x5572a90dd6e8 <col:68> 'int' 1
|     |       `-UnaryExprOrTypeTraitExpr 0x5572a90dd770 <col:73, col:89> 'unsigned long' sizeof 'IntArg::limb_type':'unsigned int'
|     |-DeclStmt 0x5572a90dd938 <line:1056:9, col:27>
|     | `-VarDecl 0x5572a90dd8d0 <col:9, col:26> col:19 referenced x 'IntArg::limb_type [nlimb]'
|     |-IfStmt 0x5572a90ddda8 <line:1057:9, line:1059:22>
|     | |-CXXOperatorCallExpr 0x5572a90ddcd8 <line:1057:13, line:1058:24> '<dependent type>'
|     | | |-UnresolvedLookupExpr 0x5572a90ddc30 <col:13> '<overloaded function type>' lvalue (ADL) = 'operator!=' 0x5572a9024fd0 0x5572a90145c8 0x5572a8fe30f8 0x5572a8eb7be0 0x5572a8ef52d8 0x5572a8d4b520 0x5572a8d36f78 0x5572a8d36c50 0x5572a8cfec40 0x5572a8c63a40 0x5572a8c636f0 0x5572a8c62fe0 0x5572a8c23fb0
|     | | |-CallExpr 0x5572a90ddb70 <line:1057:13, col:78> '<dependent type>'
|     | | | |-UnresolvedMemberExpr 0x5572a90dd960 <col:13> '<bound member function type>' lvalue
|     | | | |-CXXMemberCallExpr 0x5572a90dda10 <col:19, col:29> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x5572a90dd9e0 <col:19, col:23> '<bound member function type>' .begin 0x5572a8c53c08
|     | | | |   `-DeclRefExpr 0x5572a90dd9c0 <col:19> 'const String' lvalue ParmVar 0x5572a90dc008 'str' 'const String &'
|     | | | |-CXXMemberCallExpr 0x5572a90dda80 <col:32, col:40> 'String::const_iterator':'const char *'
|     | | | | `-MemberExpr 0x5572a90dda50 <col:32, col:36> '<bound member function type>' .end 0x5572a8c53e20
|     | | | |   `-DeclRefExpr 0x5572a90dda30 <col:32> 'const String' lvalue ParmVar 0x5572a90dc008 'str' 'const String &'
|     | | | |-DeclRefExpr 0x5572a90ddaa0 <col:43> 'const bool' lvalue Var 0x5572a90dd448 'is_signed' 'const bool'
|     | | | |-CXXFunctionalCastExpr 0x5572a90ddb08 <col:54, col:67> 'int' functional cast to int <Dependent>
|     | | | | `-UnaryExprOrTypeTraitExpr 0x5572a90ddae8 <col:58, col:66> 'unsigned long' sizeof 'V'
|     | | | |-DeclRefExpr 0x5572a90ddb30 <col:70> 'IntArg::limb_type [nlimb]' lvalue Var 0x5572a90dd8d0 'x' 'IntArg::limb_type [nlimb]'
|     | | | `-DeclRefExpr 0x5572a90ddb50 <col:73> 'const int' lvalue Var 0x5572a90dd5e8 'nlimb' 'const int'
|     | | `-CXXMemberCallExpr 0x5572a90ddc10 <line:1058:16, col:24> 'String::const_iterator':'const char *'
|     | |   `-MemberExpr 0x5572a90ddbe0 <col:16, col:20> '<bound member function type>' .end 0x5572a8c53e20
|     | |     `-DeclRefExpr 0x5572a90ddbc0 <col:16> 'const String' lvalue ParmVar 0x5572a90dc008 'str' 'const String &'
|     | `-BinaryOperator 0x5572a90ddd88 <line:1059:13, col:22> 'int' lvalue '='
|     |   |-MemberExpr 0x5572a90ddd20 <col:13> 'int' lvalue ->status 0x5572a90dc798
|     |   | `-CXXThisExpr 0x5572a90ddd10 <col:13> 'IntArg *' implicit this
|     |   `-ImplicitCastExpr 0x5572a90ddd70 <col:22> 'int' <IntegralCast>
|     |     `-DeclRefExpr 0x5572a90ddd50 <col:22> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x5572a90db3f0 'status_inval' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     |-IfStmt 0x5572a90de028 <line:1060:9, line:1063:9>
|     | |-BinaryOperator 0x5572a90ddf10 <line:1060:13, col:33> 'bool' '&&'
|     | | |-ImplicitCastExpr 0x5572a90ddef8 <col:13> 'bool' <IntegralToBoolean>
|     | | | `-ImplicitCastExpr 0x5572a90ddee0 <col:13> 'int' <LValueToRValue>
|     | | |   `-MemberExpr 0x5572a90dddd0 <col:13> 'int' lvalue ->status 0x5572a90dc798
|     | | |     `-CXXThisExpr 0x5572a90dddc0 <col:13> 'IntArg *' implicit this
|     | | `-BinaryOperator 0x5572a90ddec0 <col:23, col:33> 'bool' '!='
|     | |   |-ImplicitCastExpr 0x5572a90dde90 <col:23> 'int' <LValueToRValue>
|     | |   | `-MemberExpr 0x5572a90dde10 <col:23> 'int' lvalue ->status 0x5572a90dc798
|     | |   |   `-CXXThisExpr 0x5572a90dde00 <col:23> 'IntArg *' implicit this
|     | |   `-ImplicitCastExpr 0x5572a90ddea8 <col:33> 'int' <IntegralCast>
|     | |     `-DeclRefExpr 0x5572a90dde40 <col:33> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x5572a90db480 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
|     | `-CompoundStmt 0x5572a90de008 <col:47, line:1063:9>
|     |   |-CXXMemberCallExpr 0x5572a90ddfa8 <line:1061:13, col:40> 'void'
|     |   | |-MemberExpr 0x5572a90ddf50 <col:13, col:18> '<bound member function type>' .error 0x5572a90825c0
|     |   | | `-DeclRefExpr 0x5572a90ddf30 <col:13> 'const ArgContext' lvalue ParmVar 0x5572a90dc120 'args' 'const ArgContext &'
|     |   | `-ImplicitCastExpr 0x5572a90ddfd0 <col:24> 'const char *' <ArrayToPointerDecay>
|     |   |   `-StringLiteral 0x5572a90ddf80 <col:24> 'const char [15]' lvalue "invalid number"
|     |   `-ReturnStmt 0x5572a90ddff8 <line:1062:13, col:20>
|     |     `-CXXBoolLiteralExpr 0x5572a90ddfe8 <col:20> 'bool' false
|     |-DeclStmt 0x5572a90de1f8 <line:1064:9, col:64>
|     | `-TypedefDecl 0x5572a90de1a0 <col:9, col:49> col:49 referenced unsigned_v_type 'typename make_unsigned<V>::type'
|     |   `-DependentNameType 0x5572a90de130 'typename make_unsigned<V>::type' dependent
|     |-CallExpr 0x5572a90de358 <line:1065:9, col:71> '<dependent type>'
|     | |-UnresolvedLookupExpr 0x5572a90de210 <col:9> '<overloaded function type>' lvalue (ADL) = 'extract_integer' 0x5572a8d2a788
|     | |-DeclRefExpr 0x5572a90de258 <col:25> 'IntArg::limb_type [nlimb]' lvalue Var 0x5572a90dd8d0 'x' 'IntArg::limb_type [nlimb]'
|     | `-CXXReinterpretCastExpr 0x5572a90de328 <col:28, col:70> 'unsigned_v_type':'typename make_unsigned<V>::type' lvalue reinterpret_cast<unsigned_v_type &> <Dependent>
|     |   `-DeclRefExpr 0x5572a90de2a0 <col:64> 'V' lvalue ParmVar 0x5572a90dc0a8 'result' 'V &'
|     `-ReturnStmt 0x5572a90de398 <line:1066:9, col:16>
|       `-CXXBoolLiteralExpr 0x5572a90de388 <col:16> 'bool' true
|-FunctionTemplateDecl 0x5572a90dc6a8 <line:1069:5, line:1083:5> line:1070:10 parse
| |-TemplateTypeParmDecl 0x5572a90dc358 <line:1069:14, col:23> col:23 referenced typename depth 0 index 0 V
| |-CXXMethodDecl 0x5572a90dc608 <line:1070:5, line:1083:5> line:1070:10 parse 'bool (const String &, V &, const ArgContext &)'
| | |-ParmVarDecl 0x5572a90dc408 <col:16, col:30> col:30 referenced str 'const String &'
| | |-ParmVarDecl 0x5572a90dc4a8 <col:35, col:38> col:38 referenced result 'V &'
| | |-ParmVarDecl 0x5572a90dc520 <col:46, col:71> col:64 referenced args 'const ArgContext &' cinit
| | | `-DeclRefExpr 0x5572a90dceb8 <col:71> 'const ArgContext' lvalue Var 0x5572a90d10e8 'blank_args' 'const ArgContext'
| | `-CompoundStmt 0x5572a90deb78 <col:83, line:1083:5>
| |   |-DeclStmt 0x5572a90de470 <line:1071:9, col:12>
| |   | `-VarDecl 0x5572a90de408 <col:9, col:11> col:11 referenced x 'V'
| |   `-IfStmt 0x5572a90deb50 <line:1072:9, line:1082:9> has_else
| |     |-BinaryOperator 0x5572a90de730 <line:1072:13, line:1073:49> '<dependent type>' '||'
| |     | |-UnaryOperator 0x5572a90de588 <line:1072:13, col:43> '<dependent type>' prefix '!' cannot overflow
| |     | | `-CallExpr 0x5572a90de550 <col:14, col:43> '<dependent type>'
| |     | |   |-UnresolvedMemberExpr 0x5572a90de498 <col:14> '<bound member function type>' lvalue
| |     | |   |-DeclRefExpr 0x5572a90de4f0 <col:31> 'const String' lvalue ParmVar 0x5572a90dc408 'str' 'const String &'
| |     | |   |-DeclRefExpr 0x5572a90de510 <col:36> 'V' lvalue Var 0x5572a90de408 'x' 'V'
| |     | |   `-DeclRefExpr 0x5572a90de530 <col:39> 'const ArgContext' lvalue ParmVar 0x5572a90dc520 'args' 'const ArgContext &'
| |     | `-ParenExpr 0x5572a90de710 <line:1073:16, col:49> 'bool'
| |     |   `-BinaryOperator 0x5572a90de6f0 <col:17, col:37> 'bool' '&&'
| |     |     |-ImplicitCastExpr 0x5572a90de6d8 <col:17> 'bool' <IntegralToBoolean>
| |     |     | `-ImplicitCastExpr 0x5572a90de6c0 <col:17> 'int' <LValueToRValue>
| |     |     |   `-MemberExpr 0x5572a90de5b0 <col:17> 'int' lvalue ->status 0x5572a90dc798
| |     |     |     `-CXXThisExpr 0x5572a90de5a0 <col:17> 'IntArg *' implicit this
| |     |     `-BinaryOperator 0x5572a90de6a0 <col:27, col:37> 'bool' '!='
| |     |       |-ImplicitCastExpr 0x5572a90de670 <col:27> 'int' <LValueToRValue>
| |     |       | `-MemberExpr 0x5572a90de5f0 <col:27> 'int' lvalue ->status 0x5572a90dc798
| |     |       |   `-CXXThisExpr 0x5572a90de5e0 <col:27> 'IntArg *' implicit this
| |     |       `-ImplicitCastExpr 0x5572a90de688 <col:37> 'int' <IntegralCast>
| |     |         `-DeclRefExpr 0x5572a90de620 <col:37> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x5572a90db480 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |     |-ReturnStmt 0x5572a90de760 <line:1074:13, col:20>
| |     | `-CXXBoolLiteralExpr 0x5572a90de750 <col:20> 'bool' false
| |     `-IfStmt 0x5572a90deb28 <line:1075:14, line:1082:9> has_else
| |       |-BinaryOperator 0x5572a90de830 <line:1075:18, col:28> 'bool' '=='
| |       | |-ImplicitCastExpr 0x5572a90de800 <col:18> 'int' <LValueToRValue>
| |       | | `-MemberExpr 0x5572a90de780 <col:18> 'int' lvalue ->status 0x5572a90dc798
| |       | |   `-CXXThisExpr 0x5572a90de770 <col:18> 'IntArg *' implicit this
| |       | `-ImplicitCastExpr 0x5572a90de818 <col:28> 'int' <IntegralCast>
| |       |   `-DeclRefExpr 0x5572a90de7b0 <col:28> 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)' EnumConstant 0x5572a90db480 'status_range' 'NumArg::(anonymous enum at ../dummy_inc/click/args.hh:1014:5)'
| |       |-CompoundStmt 0x5572a90dea68 <col:42, line:1079:9>
| |       | |-CallExpr 0x5572a90dea10 <line:1076:13, line:1077:45> '<dependent type>'
| |       | | |-MemberExpr 0x5572a90de860 <line:1076:13> '<bound member function type>' ->range_error 0x5572a90dcda8
| |       | | | `-CXXThisExpr 0x5572a90de850 <col:13> 'IntArg *' implicit this
| |       | | |-DeclRefExpr 0x5572a90de890 <col:25> 'const ArgContext' lvalue ParmVar 0x5572a90dc520 'args' 'const ArgContext &'
| |       | | |-CXXDependentScopeMemberExpr 0x5572a90de970 <col:31, col:50> '<dependent type>' lvalue ->is_signed
| |       | | `-CXXUnresolvedConstructExpr 0x5572a90de9e8 <line:1077:25, col:44> 'click_int_large_t':'long long' 'click_int_large_t':'long long'
| |       | |   `-DeclRefExpr 0x5572a90de9c8 <col:43> 'V' lvalue Var 0x5572a90de408 'x' 'V'
| |       | `-ReturnStmt 0x5572a90dea58 <line:1078:13, col:20>
| |       |   `-CXXBoolLiteralExpr 0x5572a90dea48 <col:20> 'bool' false
| |       `-CompoundStmt 0x5572a90deb08 <line:1079:16, line:1082:9>
| |         |-BinaryOperator 0x5572a90deac8 <line:1080:13, col:22> '<dependent type>' '='
| |         | |-DeclRefExpr 0x5572a90dea88 <col:13> 'V' lvalue ParmVar 0x5572a90dc4a8 'result' 'V &'
| |         | `-DeclRefExpr 0x5572a90deaa8 <col:22> 'V' lvalue Var 0x5572a90de408 'x' 'V'
| |         `-ReturnStmt 0x5572a90deaf8 <line:1081:13, col:20>
| |           `-CXXBoolLiteralExpr 0x5572a90deae8 <col:20> 'bool' true
| `-CXXMethodDecl 0x5572a9145a98 <line:1070:5, line:1083:5> line:1070:10 used parse 'bool (const String &, int &, const ArgContext &)'
|   |-TemplateArgument type 'int'
|   |-ParmVarDecl 0x5572a9145878 <col:16, col:30> col:30 str 'const String &'
|   |-ParmVarDecl 0x5572a9145948 <col:35, col:38> col:38 result 'int &'
|   `-ParmVarDecl 0x5572a91459b0 <col:46, col:71> col:64 args 'const ArgContext &' cinit
|     `-DeclRefExpr 0x5572a90dceb8 <col:71> 'const ArgContext' lvalue Var 0x5572a90d10e8 'blank_args' 'const ArgContext'
|-FieldDecl 0x5572a90dc730 <line:1085:5, col:9> col:9 base 'int'
|-FieldDecl 0x5572a90dc798 <line:1086:5, col:9> col:9 referenced status 'int'
|-AccessSpecDecl 0x5572a90dc7e8 <line:1088:3, col:12> col:3 protected
|-CXXMethodDecl 0x5572a90dcaa0 <line:1090:5, line:1091:51> line:1090:24 span 'const char *(const char *, const char *, bool, int &)' static
| |-ParmVarDecl 0x5572a90dc828 <col:29, col:41> col:41 begin 'const char *'
| |-ParmVarDecl 0x5572a90dc8a8 <col:48, col:60> col:60 end 'const char *'
| |-ParmVarDecl 0x5572a90dc920 <line:1091:29, col:34> col:34 is_signed 'bool'
| `-ParmVarDecl 0x5572a90dc9a0 <col:45, col:50> col:50 b 'int &'
|-CXXMethodDecl 0x5572a90dcda8 <line:1092:5, line:1093:45> line:1092:10 referenced range_error 'void (const ArgContext &, bool, click_int_large_t)'
| |-ParmVarDecl 0x5572a90dcb70 <col:22, col:40> col:40 args 'const ArgContext &'
| |-ParmVarDecl 0x5572a90dcbe8 <col:46, col:51> col:51 is_signed 'bool'
| `-ParmVarDecl 0x5572a90dcc80 <line:1093:22, col:40> col:40 value 'click_int_large_t':'long long'
|-CXXConstructorDecl 0x5572a90df3d8 <line:1040:7> col:7 implicit constexpr IntArg 'void (const IntArg &)' inline default trivial noexcept-unevaluated 0x5572a90df3d8
| `-ParmVarDecl 0x5572a90df4e8 <col:7> col:7 'const IntArg &'
|-CXXConstructorDecl 0x5572a90df668 <col:7> col:7 implicit constexpr IntArg 'void (IntArg &&)' inline default trivial noexcept-unevaluated 0x5572a90df668
| `-ParmVarDecl 0x5572a90df778 <col:7> col:7 'IntArg &&'
`-CXXDestructorDecl 0x5572a9145510 <col:7> col:7 implicit referenced ~IntArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IntArg = type { i32, i32 }
  NonVirtualBaseLLVMType:%class.IntArg = type { i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ArgContext
         0 |   const class Element * _context
         8 |   class ErrorHandler * _errh
        16 |   const char * _arg_keyword
        24 |   _Bool _read_status
           | [sizeof=32, dsize=25, align=8,
           |  nvsize=25, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a9081c80 prev 0x5572a8effde8 <../dummy_inc/click/args.hh:29:1, line:85:1> line:29:7 referenced class ArgContext definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5572a9081d78 <col:1, col:7> col:7 implicit referenced class ArgContext
|-AccessSpecDecl 0x5572a9081e08 <col:20, col:26> col:20 public
|-CXXConstructorDecl 0x5572a9081f48 <line:33:5, line:38:5> line:33:5 ArgContext 'void (ErrorHandler *)'
| |-ParmVarDecl 0x5572a9081e40 <col:16, col:37> col:30 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x5572a9083370 <col:37> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x5572a9083350 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x5572a9082ee8 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x5572a9083400 <line:34:17> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x5572a90833c0 <col:17> 'ErrorHandler *' lvalue ParmVar 0x5572a9081e40 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x5572a9082f50 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x5572a9083480 <col:37> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x5572a9083440 <col:37> 'int' 0
| |-CXXCtorInitializer Field 0x5572a9082fb0 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x5572a90834c0 <col:54> 'bool' false
| `-CompoundStmt 0x5572a90835c8 <col:61, line:38:5>
|   `-BinaryOperator 0x5572a90835a8 <line:36:9, col:20> 'const Element *' lvalue '='
|     |-MemberExpr 0x5572a9083540 <col:9> 'const Element *' lvalue ->_context 0x5572a9082e88
|     | `-CXXThisExpr 0x5572a9083530 <col:9> 'ArgContext *' implicit this
|     `-ImplicitCastExpr 0x5572a9083590 <col:20> 'const Element *' <NullToPointer>
|       `-IntegerLiteral 0x5572a9083570 <col:20> 'int' 0
|-CXXConstructorDecl 0x5572a9082158 <line:44:5, line:46:5> line:44:5 ArgContext 'void (const Element *, ErrorHandler *)'
| |-ParmVarDecl 0x5572a9082008 <col:16, col:31> col:31 used context 'const Element *'
| |-ParmVarDecl 0x5572a9082080 <col:40, col:61> col:54 used errh 'ErrorHandler *' cinit
| | `-ImplicitCastExpr 0x5572a90833a8 <col:61> 'ErrorHandler *' <NullToPointer>
| |   `-IntegerLiteral 0x5572a9083388 <col:61> 'int' 0
| |-CXXCtorInitializer Field 0x5572a9082e88 '_context' 'const Element *'
| | `-ImplicitCastExpr 0x5572a9083620 <line:45:20> 'const Element *' <LValueToRValue>
| |   `-DeclRefExpr 0x5572a90835e0 <col:20> 'const Element *' lvalue ParmVar 0x5572a9082008 'context' 'const Element *'
| |-CXXCtorInitializer Field 0x5572a9082ee8 '_errh' 'ErrorHandler *'
| | `-ImplicitCastExpr 0x5572a90836a0 <col:36> 'ErrorHandler *' <LValueToRValue>
| |   `-DeclRefExpr 0x5572a9083660 <col:36> 'ErrorHandler *' lvalue ParmVar 0x5572a9082080 'errh' 'ErrorHandler *'
| |-CXXCtorInitializer Field 0x5572a9082f50 '_arg_keyword' 'const char *'
| | `-ImplicitCastExpr 0x5572a9083720 <col:56> 'const char *' <NullToPointer>
| |   `-IntegerLiteral 0x5572a90836e0 <col:56> 'int' 0
| |-CXXCtorInitializer Field 0x5572a9082fb0 '_read_status' 'bool'
| | `-CXXBoolLiteralExpr 0x5572a9083760 <col:73> 'bool' false
| `-CompoundStmt 0x5572a90837d8 <col:80, line:46:5>
|-CXXMethodDecl 0x5572a9082288 <line:49:5, line:51:5> line:49:20 context 'const Element *() const'
| `-CompoundStmt 0x5572a9083850 <col:36, line:51:5>
|   `-ReturnStmt 0x5572a9083840 <line:50:9, col:16>
|     `-ImplicitCastExpr 0x5572a9083828 <col:16> 'const Element *' <LValueToRValue>
|       `-MemberExpr 0x5572a90837f8 <col:16> 'const Element *const' lvalue ->_context 0x5572a9082e88
|         `-CXXThisExpr 0x5572a90837e8 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x5572a9082378 <line:55:5, line:57:5> line:55:19 errh 'ErrorHandler *() const'
| `-CompoundStmt 0x5572a90838d0 <col:32, line:57:5>
|   `-ReturnStmt 0x5572a90838c0 <line:56:9, col:16>
|     `-ImplicitCastExpr 0x5572a90838a8 <col:16> 'ErrorHandler *' <LValueToRValue>
|       `-MemberExpr 0x5572a9083878 <col:16> 'ErrorHandler *const' lvalue ->_errh 0x5572a9082ee8
|         `-CXXThisExpr 0x5572a9083868 <col:16> 'const ArgContext *' implicit this
|-CXXMethodDecl 0x5572a9082438 <line:62:5, col:27> col:12 error_prefix 'String () const'
|-CXXMethodDecl 0x5572a90825c0 <line:65:5, col:38> col:10 referenced error 'void (const char *, ...) const'
| `-ParmVarDecl 0x5572a90824f0 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x5572a9082710 <line:68:5, col:40> col:10 warning 'void (const char *, ...) const'
| `-ParmVarDecl 0x5572a9082680 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x5572a9082860 <line:71:5, col:40> col:10 message 'void (const char *, ...) const'
| `-ParmVarDecl 0x5572a90827d0 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x5572a9082a68 <line:73:5, col:58> col:10 xmessage 'void (const String &, const String &) const'
| |-ParmVarDecl 0x5572a9082918 <col:19, col:33> col:33 anno 'const String &'
| `-ParmVarDecl 0x5572a9082990 <col:39, col:53> col:53 str 'const String &'
|-CXXMethodDecl 0x5572a9082d98 <line:74:5, col:69> col:10 xmessage 'void (const String &, const char *, __va_list_tag *) const'
| |-ParmVarDecl 0x5572a9082b28 <col:19, col:33> col:33 anno 'const String &'
| |-ParmVarDecl 0x5572a9082ba8 <col:39, col:51> col:51 fmt 'const char *'
| `-ParmVarDecl 0x5572a9082c70 <col:56, col:64> col:64 val '__va_list_tag *':'__va_list_tag *'
|-AccessSpecDecl 0x5572a9082e50 <line:76:3, col:12> col:3 protected
|-FieldDecl 0x5572a9082e88 <line:79:5, col:20> col:20 referenced _context 'const Element *'
|-FieldDecl 0x5572a9082ee8 <line:81:5, col:19> col:19 referenced _errh 'ErrorHandler *'
|-FieldDecl 0x5572a9082f50 <line:82:5, col:17> col:17 _arg_keyword 'const char *'
|-FieldDecl 0x5572a9082fb0 <line:83:5, col:18> col:18 referenced _read_status 'bool' mutable
|-CXXConstructorDecl 0x5572a9083000 <line:29:7> col:7 implicit constexpr ArgContext 'void (const ArgContext &)' inline default trivial noexcept-unevaluated 0x5572a9083000
| `-ParmVarDecl 0x5572a9083118 <col:7> col:7 'const ArgContext &'
`-CXXMethodDecl 0x5572a90831b8 <col:7> col:7 implicit operator= 'ArgContext &(const ArgContext &)' inline default trivial noexcept-unevaluated 0x5572a90831b8
  `-ParmVarDecl 0x5572a90832c8 <col:7> col:7 'const ArgContext &'

Layout: <CGRecordLayout
  LLVMType:%class.ArgContext = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8, [7 x i8] }>
  NonVirtualBaseLLVMType:%class.ArgContext.base = type <{ %class.Element*, %class.ErrorHandler*, i8*, i8 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a90e8d90 <../dummy_inc/click/args.hh:1257:1, line:1262:1> line:1257:7 referenced class BoolArg definition
|-DefinitionData pass_in_registers empty aggregate standard_layout trivially_copyable pod trivial literal has_constexpr_non_copy_move_ctor can_const_default_init
| |-DefaultConstructor exists trivial constexpr defaulted_is_constexpr
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5572a90e8ea8 <col:1, col:7> col:7 implicit class BoolArg
|-AccessSpecDecl 0x5572a90e8f38 <col:17, col:23> col:17 public
|-CXXMethodDecl 0x5572a90e9178 <line:1258:5, col:91> col:17 used parse 'bool (const String &, bool &, const ArgContext &)' static
| |-ParmVarDecl 0x5572a90e8f70 <col:23, col:37> col:37 str 'const String &'
| |-ParmVarDecl 0x5572a90e8ff0 <col:42, col:48> col:48 result 'bool &'
| `-ParmVarDecl 0x5572a90e9068 <col:56, col:81> col:74 args 'const ArgContext &' cinit
|   `-DeclRefExpr 0x5572a90e9390 <col:81> 'const ArgContext' lvalue Var 0x5572a90d10e8 'blank_args' 'const ArgContext'
|-CXXMethodDecl 0x5572a90e92d0 <line:1259:5, line:1261:5> line:1259:19 unparse 'String (bool)' static
| |-ParmVarDecl 0x5572a90e9240 <col:27, col:32> col:32 used x 'bool'
| `-CompoundStmt 0x5572a90e94e8 <col:35, line:1261:5>
|   `-ReturnStmt 0x5572a90e94d8 <line:1260:9, col:24>
|     `-ExprWithCleanups 0x5572a90e94c0 <col:16, col:24> 'String'
|       `-CXXConstructExpr 0x5572a90e9490 <col:16, col:24> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x5572a90e9478 <col:16, col:24> 'String' xvalue
|           `-CXXFunctionalCastExpr 0x5572a90e9450 <col:16, col:24> 'String' functional cast to class String <ConstructorConversion>
|             `-CXXBindTemporaryExpr 0x5572a90e9430 <col:16, col:24> 'String' (CXXTemporary 0x5572a90e9430)
|               `-CXXConstructExpr 0x5572a90e93f8 <col:16, col:24> 'String' 'void (bool)'
|                 `-ImplicitCastExpr 0x5572a90e93e0 <col:23> 'bool' <LValueToRValue>
|                   `-DeclRefExpr 0x5572a90e93c0 <col:23> 'bool' lvalue ParmVar 0x5572a90e9240 'x' 'bool'
|-CXXConstructorDecl 0x5572a9145fb8 <line:1257:7> col:7 implicit referenced constexpr BoolArg 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5572a91460b8 <col:7> col:7 implicit constexpr BoolArg 'void (const BoolArg &)' inline default trivial noexcept-unevaluated 0x5572a91460b8
| `-ParmVarDecl 0x5572a91461c8 <col:7> col:7 'const BoolArg &'
|-CXXConstructorDecl 0x5572a9146268 <col:7> col:7 implicit constexpr BoolArg 'void (BoolArg &&)' inline default trivial noexcept-unevaluated 0x5572a9146268
| `-ParmVarDecl 0x5572a9146378 <col:7> col:7 'BoolArg &&'
`-CXXDestructorDecl 0x5572a9146418 <col:7> col:7 implicit referenced ~BoolArg 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.BoolArg = type { i8 }
  NonVirtualBaseLLVMType:%class.BoolArg = type { i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a8c18038 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5572a8c18158 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x5572a8c181e8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x5572a8c182b8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x5572a8c183a0 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x5572a8c19258 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5572a8c19100 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5572a8c19408 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5572a8c19310 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5572a8c19550 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5572a8c194c0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5572a8c19698 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5572a8c19608 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5572a8c197e0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5572a8c19750 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5572a8c198a8 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x5572a8c19a28 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x5572a8c19960 <col:28> col:31 'int'
|-CXXMethodDecl 0x5572a8c19af0 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x5572a8c19c38 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x5572a8c19ba8 <col:28> col:31 'int'
|-CXXMethodDecl 0x5572a8c19db8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5572a8c19cf0 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5572a8c19f00 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5572a8c19e70 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5572a8c19fc8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x5572a8c1a208 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5572a8c1a078 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5572a8c1a0f0 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5572a8c1a458 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5572a8c1a2c8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5572a8c1a340 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5572a8c1a508 <col:86> "" ""
|-CXXMethodDecl 0x5572a8c1a778 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x5572a8c1a5e8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x5572a8c1a660 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5572a8c1a928 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5572a8c1a838 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5572a8c1aad8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5572a8c1a9e0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5572a8c1ada8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5572a8c1ab90 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5572a8c1ac08 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5572a8c1ac80 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5572a8c1b110 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5572a8c1ae70 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5572a8c1aee8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5572a8c1af60 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5572a8c1b1c8 <col:115> "" ""
|-AccessSpecDecl 0x5572a8c1b238 <line:84:3, col:10> col:3 private
|-FieldDecl 0x5572a8c1b270 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5572a8c1b718 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5572a8c1b718
| `-ParmVarDecl 0x5572a8c1b828 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x5572a8c1b8c8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5572a8c1b8c8
| `-ParmVarDecl 0x5572a8c1b9d8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x5572a8c630e8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5572a8f24c50 <col:7>
|-CXXConstructorDecl 0x5572a8c631c0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5572a8c631c0
| `-ParmVarDecl 0x5572a8c632d8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x5572a8c63348 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5572a8c63348
| `-ParmVarDecl 0x5572a8c63458 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x5572a8f275f0 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a8f13880 prev 0x5572a8f07f90 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5572a8f13978 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x5572a8f13a68 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x5572a8f13b98 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x5572a8f13d18 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x5572a8f13e98 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x5572a8f14018 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x5572a8f24db8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5572a8f25628 <col:11>
|-CXXDestructorDecl 0x5572a8f24e90 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5572a8f24fc8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5572a8f24fc8
| `-ParmVarDecl 0x5572a8f250d8 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x5572a8f25178 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5572a8f25178
| `-ParmVarDecl 0x5572a8f25288 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x5572a8f27fe8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x5572a8f280f8 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x5572a8f28378 <col:11>
|   `-ReturnStmt 0x5572a8f28368 <col:11>
|     `-UnaryOperator 0x5572a8f28350 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5572a8f28340 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x5572a8f28168 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5572a8f28168
  `-ParmVarDecl 0x5572a8f28278 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a8f14080 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5572a8f14198 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x5572a8f14238 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x5572a8f142a0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x5572a8f14308 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x5572a8f14370 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x5572a8f143d0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x5572a8f14490 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x5572a8f144f0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x5572a8f14550 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x5572a8f24cc8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x5572a8f14238 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x5572a8f25638 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x5572a8f25690 <col:12>
|-CXXConstructorDecl 0x5572a8f252f8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5572a8f252f8
| `-ParmVarDecl 0x5572a8f25408 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x5572a8f254a8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5572a8f254a8
| `-ParmVarDecl 0x5572a8f255b8 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x5572a8f276d0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a8f01690 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5572a8f017a8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x5572a8f01838 <col:16, col:22> col:16 public
|-EnumDecl 0x5572a8f01860 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x5572a8f01960 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x5572a8f01a40 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f01940 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x5572a8f01920 <col:21> 'int' 28
| `-EnumConstantDecl 0x5572a8f019f0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x5572a8f01a58 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5572a8f019d0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x5572a8f019b0 <col:22> 'int' 64
|-CXXMethodDecl 0x5572a8f01d98 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x5572a8f01a80 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5572a8f01b00 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x5572a8f01b78 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5572a8f01bf0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5572a8f01e58 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5572a8f02058 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x5572a8f01ed0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x5572a8f01f48 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5572a8f02108 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5572a8f02268 <line:55:5, col:91> col:35 make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x5572a8f02178 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5572a8f02310 <col:72> warn_unused_result ""
|-TypedefDecl 0x5572a8f02640 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x5572a8f025d0 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x5572a8f02570 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x5572a8f02530 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x5572a89f82d0 'void'
|       |-PointerType 0x5572a8c4e600 'unsigned char *'
|       | `-BuiltinType 0x5572a89f83d0 'unsigned char'
|       |-TypedefType 0x5572a8aa06f0 'size_t' sugar
|       | |-Typedef 0x5572a8a68b20 'size_t'
|       | `-BuiltinType 0x5572a89f8430 'unsigned long'
|       `-PointerType 0x5572a89f8ad0 'void *'
|         `-BuiltinType 0x5572a89f82d0 'void'
|-CXXMethodDecl 0x5572a8f02ab8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x5572a8f026b0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x5572a8f02728 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5572a8f027c0 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x5572a8f02840 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x5572a8f159e0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x5572a8f159c8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x5572a8f15990 <col:58> 'int' 0
| |-ParmVarDecl 0x5572a8f028c0 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x5572a8f15a08 <col:76> 'int' 0
| |-ParmVarDecl 0x5572a8f02940 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x5572a8f15a28 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x5572a8f02b88 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x5572a8f02c30 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5572a8f02cf0 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x5572a8f02d90 <col:20>
| `-OptimizeNoneAttr 0x5572a8f02de8 <col:30>
|-CXXMethodDecl 0x5572a8f02e58 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x5572a8f02ef8 <col:20>
| `-OptimizeNoneAttr 0x5572a8f02f50 <col:30>
|-CXXMethodDecl 0x5572a8f02fc8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x5572a8f03068 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x5572a8f03118 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x5572a8f031b8 <col:20>
| |-OptimizeNoneAttr 0x5572a8f03210 <col:30>
| `-WarnUnusedResultAttr 0x5572a8f03238 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x5572a8f03290 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x5572a8f03330 <col:20>
| `-OptimizeNoneAttr 0x5572a8f03388 <col:30>
|-CXXMethodDecl 0x5572a8f033d8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x5572a8f03478 <col:20>
| `-OptimizeNoneAttr 0x5572a8f034d0 <col:30>
|-CXXMethodDecl 0x5572a8f03518 <line:81:5, col:58> col:49 length 'uint32_t () const'
| |-NoInlineAttr 0x5572a8f035b8 <col:20>
| `-OptimizeNoneAttr 0x5572a8f03610 <col:30>
|-CXXMethodDecl 0x5572a8f03658 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5572a8f03718 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5572a8f037e0 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5572a8f038a8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5572a8f03968 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5572a8f03a88 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x5572a8f15af0 <col:54, line:99:5>
|   `-ReturnStmt 0x5572a8f15ae0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x5572a8f15ac8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x5572a8f15a98 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5572a8f14888
|         `-CXXThisExpr 0x5572a8f15a88 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x5572a8f03c28 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x5572a8f03b38 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x5572a8f15ba0 <col:67, line:103:5>
|   `-BinaryOperator 0x5572a8f15b80 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5572a8f15b18 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5572a8f14888
|     | `-CXXThisExpr 0x5572a8f15b08 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5572a8f15b68 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x5572a8f15b48 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x5572a8f03b38 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x5572a8f03d20 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x5572a8f1de90 <col:33, line:107:5>
|   `-ReturnStmt 0x5572a8f1de80 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x5572a8f15bf8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x5572a8f15bc8 <col:16> 'void *' lvalue ->_destructor_argument 0x5572a8f148f0
|         `-CXXThisExpr 0x5572a8f15bb8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5572a8f03de0 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x5572a8f1e4c0 <col:25, line:113:5>
|   |-ParenExpr 0x5572a8f1e208 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x5572a8f1e1d8 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x5572a8f1df48 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5572a8f1df20 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x5572a8f1dee8 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x5572a8f1deb8 <col:24> '<bound member function type>' ->shared 0x5572a8f02e58
|   |   |       `-ImplicitCastExpr 0x5572a8f1df08 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x5572a8f1dea8 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5572a8f1dfa8 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5572a8f1df88 <col:42> 'int' 0
|   |   `-CallExpr 0x5572a8f1e138 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x5572a8f1e120 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5572a8f1e100 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5572a8a97500 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5572a8f1e178 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8f1e018 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x5572a8f1e190 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8f1e040 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5572a8f1e1a8 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5572a8f1e078 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x5572a8f1e1c0 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5572a8f1e0e8 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5572a8f1e0d0 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5572a8f1e098 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x5572a8f1e408 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x5572a8f1e238 <col:2> 'unsigned char *' lvalue ->_head 0x5572a8f14690
|   | | `-CXXThisExpr 0x5572a8f1e228 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x5572a8f1e3f0 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x5572a8f1e3d0 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x5572a8f1e278 <col:10> 'unsigned char *' lvalue ->_data 0x5572a8f146f8
|   |     | `-CXXThisExpr 0x5572a8f1e268 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x5572a8f1e3b8 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x5572a8f1e398 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x5572a8f1e2b8 <col:18> 'unsigned char *' lvalue ->_tail 0x5572a8f14760
|   |         | `-CXXThisExpr 0x5572a8f1e2a8 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x5572a8f1e380 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x5572a8f1e360 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x5572a8f1e2f8 <col:26> 'unsigned char *' lvalue ->_end 0x5572a8f147c8
|   |             | `-CXXThisExpr 0x5572a8f1e2e8 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x5572a8f1e348 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x5572a8f1e328 <col:33> 'int' 0
|   `-BinaryOperator 0x5572a8f1e4a0 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5572a8f1e438 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5572a8f14888
|     | `-CXXThisExpr 0x5572a8f1e428 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5572a8f1e488 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x5572a8f1e468 <col:16> 'int' 0
|-CXXMethodDecl 0x5572a8f03f20 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5572a8f03e90 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5572a8f03fc8 <col:20>
| |-OptimizeNoneAttr 0x5572a8f04020 <col:30>
| `-WarnUnusedResultAttr 0x5572a8f04048 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5572a8f04118 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5572a8f04088 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5572a8f041c0 <col:20>
| |-OptimizeNoneAttr 0x5572a8f04218 <col:30>
| `-WarnUnusedResultAttr 0x5572a8f04240 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x5572a8f04378 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5572a8f04280 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5572a8f04420 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x5572a8f04520 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x5572a8f04490 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5572a8f045c8 <col:20>
| `-OptimizeNoneAttr 0x5572a8f04620 <col:30>
|-CXXMethodDecl 0x5572a8f046e8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5572a8f04658 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5572a8f04790 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x5572a8f04890 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5572a8f04800 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5572a8f04938 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5572a8f04a38 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x5572a8f049a8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5572a8f04ae0 <col:20>
| `-OptimizeNoneAttr 0x5572a8f04b38 <col:30>
|-CXXMethodDecl 0x5572a8f04cc8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x5572a8f04b78 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x5572a8f04bf0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x5572a8f15a48 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x5572a8f04d78 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x5572a8f04f78 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5572a8f04df0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x5572a8f04e68 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5572a8f05188 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5572a8f05038 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5572a8f050b0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5572a8f05398 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x5572a8f05248 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x5572a8f052c8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x5572a8f15a58 <col:39> 'int' 0
|-CXXMethodDecl 0x5572a8f05468 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x5572a8f05530 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5572a8f055f8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x5572a8f056b8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5572a8f05780 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x5572a8f058c8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x5572a8f05838 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x5572a8f05a98 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5572a8f05988 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x5572a8f05a00 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5572a8f05b68 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x5572a8f05c28 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x5572a8f05cc8 <col:20>
| `-OptimizeNoneAttr 0x5572a8f05d20 <col:30>
|-CXXMethodDecl 0x5572a8f05d70 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5572a8f05e10 <col:20>
| `-OptimizeNoneAttr 0x5572a8f05e68 <col:30>
|-CXXMethodDecl 0x5572a8f05eb8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x5572a8f05f78 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5572a8f06040 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x5572a8f060e0 <col:20>
| `-OptimizeNoneAttr 0x5572a8f06138 <col:30>
|-CXXMethodDecl 0x5572a8f06288 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5572a8f06178 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x5572a8f061f0 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5572a8f063d8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x5572a8f06348 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5572a8f064a0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x5572a8f06560 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x5572a8f06600 <col:20>
| `-OptimizeNoneAttr 0x5572a8f06658 <col:30>
|-CXXMethodDecl 0x5572a8f066a8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5572a8f06748 <col:20>
| `-OptimizeNoneAttr 0x5572a8f067a0 <col:30>
|-CXXMethodDecl 0x5572a8f067f0 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x5572a8f068b8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x5572a8f06958 <col:20>
| `-OptimizeNoneAttr 0x5572a8f069b0 <col:30>
|-CXXMethodDecl 0x5572a8f069f8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x5572a8f06b18 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x5572a8f06cb8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x5572a8f06bf0 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x5572a8f06da8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x5572a8f06e48 <col:20>
| `-OptimizeNoneAttr 0x5572a8f06ea0 <col:30>
|-CXXMethodDecl 0x5572a8f06ef0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x5572a8f06fb0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5572a8f071e8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x5572a8f07060 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x5572a8f070d8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5572a8f07298 <col:20>
| `-OptimizeNoneAttr 0x5572a8f072f0 <col:30>
|-CXXMethodDecl 0x5572a8f07398 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x5572a8f07438 <col:20>
| `-OptimizeNoneAttr 0x5572a8f07490 <col:30>
|-CXXMethodDecl 0x5572a8f074e0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x5572a8f07580 <col:20>
| `-OptimizeNoneAttr 0x5572a8f075d8 <col:30>
|-CXXMethodDecl 0x5572a8f07620 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x5572a8f076c0 <col:20>
| `-OptimizeNoneAttr 0x5572a8f07718 <col:30>
|-CXXMethodDecl 0x5572a8f07818 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x5572a8f07750 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x5572a8f078c0 <col:20>
| `-OptimizeNoneAttr 0x5572a8f07918 <col:30>
|-CXXMethodDecl 0x5572a8f07ad8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x5572a8f07950 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x5572a8f079c8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5572a8f07b88 <col:20>
| `-OptimizeNoneAttr 0x5572a8f07be0 <col:30>
|-CXXMethodDecl 0x5572a8f07c88 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x5572a8f07da8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x5572a8f07ec8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x5572a8f07f68 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x5572a8f07f90 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x5572a8f080b8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x5572a8f08158 <col:20>
| `-OptimizeNoneAttr 0x5572a8f081b0 <col:30>
|-CXXMethodDecl 0x5572a8f08258 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x5572a8f082f8 <col:20>
| `-OptimizeNoneAttr 0x5572a8f08350 <col:30>
|-AccessSpecDecl 0x5572a8f08378 <line:344:3, col:9> col:3 public
|-EnumDecl 0x5572a8f083a0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x5572a8f084a0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x5572a8f084f0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5572a8f08480 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x5572a8f08460 <col:14> 'int' 48
|-CXXMethodDecl 0x5572a8f08558 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x5572a8f085f8 <col:20>
| `-OptimizeNoneAttr 0x5572a8f08650 <col:30>
|-CXXMethodDecl 0x5572a8f086c8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x5572a8f08768 <col:20>
| `-OptimizeNoneAttr 0x5572a8f087c0 <col:30>
|-CXXMethodDecl 0x5572a8f08888 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x5572a8f087f8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x5572a8f08a28 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x5572a8f08bc8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x5572a8f08ad8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x5572a8f08c70 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x5572a8f08d70 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5572a8f09120 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f08d50 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x5572a8f08d30 <col:9> 'int' 0
| |-EnumConstantDecl 0x5572a8f08e00 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5572a8f09138 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f08de0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x5572a8f08dc0 <col:14> 'int' 1
| |-EnumConstantDecl 0x5572a8f08e90 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5572a8f09150 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f08e70 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x5572a8f08e50 <col:14> 'int' 2
| |-EnumConstantDecl 0x5572a8f08f20 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5572a8f09168 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f08f00 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x5572a8f08ee0 <col:14> 'int' 3
| |-EnumConstantDecl 0x5572a8f08fb0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5572a8f09180 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f08f90 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x5572a8f08f70 <col:13> 'int' 4
| |-EnumConstantDecl 0x5572a8f09040 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5572a8f09198 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f09020 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x5572a8f09000 <col:13> 'int' 5
| `-EnumConstantDecl 0x5572a8f090d0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x5572a8f091b0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5572a8f090b0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x5572a8f09090 <col:14> 'int' 6
|-CXXMethodDecl 0x5572a8f09218 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x5572a8f092b8 <col:20>
| `-OptimizeNoneAttr 0x5572a8f09310 <col:30>
|-CXXMethodDecl 0x5572a8f09408 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x5572a8f09348 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x5572a8f094b0 <col:20>
| `-OptimizeNoneAttr 0x5572a8f09508 <col:30>
|-CXXMethodDecl 0x5572a8f09578 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x5572a8f096a0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x5572a8f09818 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x5572a8f09750 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x5572a8f098e0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x5572a8f099a8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x5572a8f09ae8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x5572a8f09a58 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x5572a8f09b90 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x5572a8f09c90 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5572a8f09e90 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f09c70 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x5572a8f09c50 <col:23> 'int' 0
| |-EnumConstantDecl 0x5572a8f09d20 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5572a8f09ea8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f09d00 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x5572a8f09ce0 <col:45> 'int' 4
| |-EnumConstantDecl 0x5572a8f09db0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5572a8f09ec0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f09d90 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x5572a8f09d70 <col:24> 'int' 0
| `-EnumConstantDecl 0x5572a8f09e40 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x5572a8f09ed8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5572a8f09e20 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x5572a8f09e00 <col:47> 'int' 16
|-CXXMethodDecl 0x5572a8f09f38 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x5572a8f0a0a8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x5572a8f09fe8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x5572a8f0a150 <col:20>
| `-OptimizeNoneAttr 0x5572a8f0a1a8 <col:30>
|-CXXMethodDecl 0x5572a8f0a1f8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x5572a8f1e5e0 <col:18, col:36>
|   `-ReturnStmt 0x5572a8f1e5d0 <col:20, col:33>
|     `-ImplicitCastExpr 0x5572a8f1e5b8 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x5572a8f1e598 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x5572a8f1e568 <col:27> '<bound member function type>' ->xanno 0x5572a8f08258
|           `-CXXThisExpr 0x5572a8f1e558 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x5572a8f0a2f0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x5572a8f1e6f0 <col:30, col:48>
|   `-ReturnStmt 0x5572a8f1e6e0 <col:32, col:45>
|     `-ImplicitCastExpr 0x5572a8f1e6c8 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x5572a8f1e6a8 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x5572a8f1e678 <col:39> '<bound member function type>' ->xanno 0x5572a8f080b8
|           `-CXXThisExpr 0x5572a8f1e668 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x5572a8f0a3d8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x5572a8f1e888 <col:24, col:50>
|   `-ReturnStmt 0x5572a8f1e878 <col:26, col:47>
|     `-UnaryOperator 0x5572a8f1e860 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5572a8f1e840 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x5572a8f1e828 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5572a8f1e7d8 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x5572a8f13b98
|         |   `-CXXMemberCallExpr 0x5572a8f1e7b8 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x5572a8f1e788 <col:34> '<bound member function type>' ->xanno 0x5572a8f08258
|         |       `-CXXThisExpr 0x5572a8f1e778 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x5572a8f1e808 <col:46> 'int' 0
|-CXXMethodDecl 0x5572a8f0a4c8 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x5572a8f1ea58 <col:36, col:62>
|   `-ReturnStmt 0x5572a8f1ea48 <col:38, col:59>
|     `-UnaryOperator 0x5572a8f1ea30 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5572a8f1ea10 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5572a8f1e9f8 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5572a8f1e970 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x5572a8f13b98
|         |   `-CXXMemberCallExpr 0x5572a8f1e950 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5572a8f1e920 <col:46> '<bound member function type>' ->xanno 0x5572a8f080b8
|         |       `-CXXThisExpr 0x5572a8f1e910 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5572a8f1e9a0 <col:58> 'int' 0
|-CXXMethodDecl 0x5572a8f0a5e8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x5572a8f1ebf0 <col:26, col:53>
|   `-ReturnStmt 0x5572a8f1ebe0 <col:28, col:50>
|     `-UnaryOperator 0x5572a8f1ebc8 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5572a8f1eba8 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x5572a8f1eb90 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5572a8f1eb40 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x5572a8f13e98
|         |   `-CXXMemberCallExpr 0x5572a8f1eb20 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x5572a8f1eaf0 <col:36> '<bound member function type>' ->xanno 0x5572a8f08258
|         |       `-CXXThisExpr 0x5572a8f1eae0 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x5572a8f1eb70 <col:49> 'int' 0
|-CXXMethodDecl 0x5572a8f0a708 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x5572a8f1edc8 <col:38, col:65>
|   `-ReturnStmt 0x5572a8f1edb8 <col:40, col:62>
|     `-UnaryOperator 0x5572a8f1eda0 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5572a8f1ed80 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x5572a8f1ed68 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5572a8f1ecd8 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x5572a8f13e98
|         |   `-CXXMemberCallExpr 0x5572a8f1ecb8 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5572a8f1ec88 <col:48> '<bound member function type>' ->xanno 0x5572a8f080b8
|         |       `-CXXThisExpr 0x5572a8f1ec78 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5572a8f1ed08 <col:61> 'int' 0
|-CXXMethodDecl 0x5572a8f0a8b8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x5572a8f0a7c0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x5572a8f1f498 <col:34, line:463:5>
|   |-ParenExpr 0x5572a8f1f2e0 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x5572a8f1f2b0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5572a8f1ef18 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5572a8f1eee8 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5572a8f1ee38 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5572a8f1ee20 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5572a8f1ede0 <col:23> 'int' lvalue ParmVar 0x5572a8f0a7c0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5572a8f1ee00 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5572a8f1eec8 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5572a8f1ee98 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5572a8f1ee58 <col:33> 'int' lvalue ParmVar 0x5572a8f0a7c0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5572a8f1eeb0 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5572a8f1ee78 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5572a8f084a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5572a8f1ef78 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5572a8f1ef58 <col:56> 'int' 0
|   |   `-CallExpr 0x5572a8f1f210 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5572a8f1f1f8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5572a8f1f1d8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5572a8a97500 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5572a8f1f250 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8f1f068 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5572a8f1f268 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8f1f098 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5572a8f1f280 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5572a8f1f0d0 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x5572a8f1f298 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5572a8f1f1c0 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5572a8f1f1a8 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5572a8f1f168 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x5572a8f1f488 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x5572a8f1f470 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x5572a8f1f450 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5572a8f1f420 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5572a8f1f3d0 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x5572a8f13b98
|         |   `-CXXMemberCallExpr 0x5572a8f1f3b0 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5572a8f1f380 <col:9> '<bound member function type>' ->xanno 0x5572a8f080b8
|         |       `-CXXThisExpr 0x5572a8f1f370 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x5572a8f1f438 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x5572a8f1f400 <col:21> 'int' lvalue ParmVar 0x5572a8f0a7c0 'i' 'int'
|-CXXMethodDecl 0x5572a8f0ab08 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x5572a8f0a978 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x5572a8f0a9f0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x5572a8f1fb28 <col:40, line:472:5>
|   |-ParenExpr 0x5572a8f1f940 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x5572a8f1f910 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5572a8f1f5f0 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5572a8f1f5c0 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5572a8f1f510 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5572a8f1f4f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5572a8f1f4b8 <col:23> 'int' lvalue ParmVar 0x5572a8f0a978 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5572a8f1f4d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5572a8f1f5a0 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5572a8f1f570 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5572a8f1f530 <col:33> 'int' lvalue ParmVar 0x5572a8f0a978 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5572a8f1f588 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5572a8f1f550 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5572a8f084a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5572a8f1f650 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5572a8f1f630 <col:56> 'int' 0
|   |   `-CallExpr 0x5572a8f1f870 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5572a8f1f858 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5572a8f1f838 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5572a8a97500 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5572a8f1f8b0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8f1f6c0 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5572a8f1f8c8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8f1f6f0 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5572a8f1f8e0 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5572a8f1f728 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x5572a8f1f8f8 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5572a8f1f820 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5572a8f1f808 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5572a8f1f7c8 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x5572a8f1fb08 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x5572a8f1fab0 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x5572a8f1fa80 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x5572a8f1fa30 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x5572a8f13b98
|     | |   `-CXXMemberCallExpr 0x5572a8f1fa10 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x5572a8f1f9e0 <col:2> '<bound member function type>' ->xanno 0x5572a8f08258
|     | |       `-CXXThisExpr 0x5572a8f1f9d0 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x5572a8f1fa98 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x5572a8f1fa60 <col:14> 'int' lvalue ParmVar 0x5572a8f0a978 'i' 'int'
|     `-ImplicitCastExpr 0x5572a8f1faf0 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x5572a8f1fad0 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x5572a8f0a9f0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x5572a8f0acf8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x5572a8f0ac00 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5572a8f202a8 <col:36, line:485:5>
|   |-ParenExpr 0x5572a8f20010 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x5572a8f1ffe0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5572a8f1fcc0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5572a8f1fc90 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5572a8f1fba0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5572a8f1fb88 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5572a8f1fb48 <col:23> 'int' lvalue ParmVar 0x5572a8f0ac00 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5572a8f1fb68 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5572a8f1fc70 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5572a8f1fc58 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5572a8f1fbc0 <col:33> 'int' lvalue ParmVar 0x5572a8f0ac00 'i' 'int'
|   |   |     `-BinaryOperator 0x5572a8f1fc38 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5572a8f1fc20 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5572a8f1fbe0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5572a8f084a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5572a8f1fc00 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5572a8f1fd20 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5572a8f1fd00 <col:60> 'int' 0
|   |   `-CallExpr 0x5572a8f1ff40 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5572a8f1ff28 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5572a8f1ff08 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5572a8a97500 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5572a8f1ff80 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8f1fd90 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5572a8f1ff98 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8f1fdc8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5572a8f1ffb0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5572a8f1fe00 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x5572a8f1ffc8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5572a8f1fef0 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5572a8f1fed8 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5572a8f1fe98 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x5572a8f20298 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x5572a8f20280 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x5572a8f20268 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5572a8f20238 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x5572a8f201d8 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5572a8f201a8 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5572a8f20120 <col:61, col:70> 'char const[48]' lvalue ->c 0x5572a8f13a68
|             |   `-CXXMemberCallExpr 0x5572a8f20100 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5572a8f200d0 <col:61> '<bound member function type>' ->xanno 0x5572a8f080b8
|             |       `-CXXThisExpr 0x5572a8f200c0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5572a8f201c0 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5572a8f20150 <col:74> 'int' lvalue ParmVar 0x5572a8f0ac00 'i' 'int'
|-CXXMethodDecl 0x5572a8f0af48 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x5572a8f0adb8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5572a8f0ae30 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x5572a8f209f8 <col:42, line:500:5>
|   |-ParenExpr 0x5572a8f20790 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x5572a8f20760 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5572a8f20440 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5572a8f20410 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5572a8f20320 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5572a8f20308 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5572a8f202c8 <col:23> 'int' lvalue ParmVar 0x5572a8f0adb8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5572a8f202e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5572a8f203f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5572a8f203d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5572a8f20340 <col:33> 'int' lvalue ParmVar 0x5572a8f0adb8 'i' 'int'
|   |   |     `-BinaryOperator 0x5572a8f203b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5572a8f203a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5572a8f20360 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5572a8f084a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5572a8f20380 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5572a8f204a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5572a8f20480 <col:60> 'int' 0
|   |   `-CallExpr 0x5572a8f206c0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5572a8f206a8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5572a8f20688 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5572a8a97500 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5572a8f20700 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8f20510 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5572a8f20718 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8f20548 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5572a8f20730 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5572a8f20580 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x5572a8f20748 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5572a8f20670 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5572a8f20658 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5572a8f20618 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x5572a8f209d8 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x5572a8f20988 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5572a8f20958 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x5572a8f20900 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5572a8f208d0 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5572a8f20880 <col:48, col:57> 'char [48]' lvalue ->c 0x5572a8f13a68
|     |     |   `-CXXMemberCallExpr 0x5572a8f20860 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5572a8f20830 <col:48> '<bound member function type>' ->xanno 0x5572a8f08258
|     |     |       `-CXXThisExpr 0x5572a8f20820 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5572a8f208e8 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5572a8f208b0 <col:61> 'int' lvalue ParmVar 0x5572a8f0adb8 'i' 'int'
|     `-ImplicitCastExpr 0x5572a8f209c0 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x5572a8f209a0 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x5572a8f0ae30 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x5572a8f0b108 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x5572a8f0b010 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5572a8f21158 <col:35, line:513:5>
|   |-ParenExpr 0x5572a8f20e68 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x5572a8f20e38 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5572a8f20b90 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5572a8f20b60 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5572a8f20a70 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5572a8f20a58 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5572a8f20a18 <col:23> 'int' lvalue ParmVar 0x5572a8f0b010 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5572a8f20a38 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5572a8f20b40 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5572a8f20b28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5572a8f20a90 <col:33> 'int' lvalue ParmVar 0x5572a8f0b010 'i' 'int'
|   |   |     `-BinaryOperator 0x5572a8f20b08 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5572a8f20af0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5572a8f20ab0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5572a8f084a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5572a8f20ad0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5572a8f20bf0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5572a8f20bd0 <col:60> 'int' 0
|   |   `-CallExpr 0x5572a8f20d98 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5572a8f20d80 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5572a8f20d60 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5572a8a97500 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5572a8f20dd8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8f20c60 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5572a8f20df0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8f20c98 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5572a8f20e08 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5572a8f20cd0 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x5572a8f20e20 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5572a8f20d48 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5572a8f20d30 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5572a8f20cf0 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x5572a8f21148 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x5572a8f21130 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x5572a8f21118 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5572a8f210e8 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x5572a8f21060 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5572a8f21030 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5572a8f20fe0 <col:60, col:69> 'char const[48]' lvalue ->c 0x5572a8f13a68
|             |   `-CXXMemberCallExpr 0x5572a8f20fc0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5572a8f20f90 <col:60> '<bound member function type>' ->xanno 0x5572a8f080b8
|             |       `-CXXThisExpr 0x5572a8f20f80 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5572a8f21048 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5572a8f21010 <col:73> 'int' lvalue ParmVar 0x5572a8f0b010 'i' 'int'
|-CXXMethodDecl 0x5572a8f0b358 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x5572a8f0b1c8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5572a8f0b240 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x5572a8f21868 <col:41, line:528:5>
|   |-ParenExpr 0x5572a8f21600 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x5572a8f215d0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5572a8f212f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5572a8f212c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5572a8f211d0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5572a8f211b8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5572a8f21178 <col:23> 'int' lvalue ParmVar 0x5572a8f0b1c8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5572a8f21198 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5572a8f212a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5572a8f21288 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5572a8f211f0 <col:33> 'int' lvalue ParmVar 0x5572a8f0b1c8 'i' 'int'
|   |   |     `-BinaryOperator 0x5572a8f21268 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5572a8f21250 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5572a8f21210 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5572a8f084a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5572a8f21230 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5572a8f21350 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5572a8f21330 <col:60> 'int' 0
|   |   `-CallExpr 0x5572a8f21530 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5572a8f21518 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5572a8f214f8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5572a8a97500 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5572a8f21570 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8f213c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5572a8f21588 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8f213f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5572a8f215a0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5572a8f21430 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x5572a8f215b8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5572a8f214e0 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5572a8f214c8 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5572a8f21488 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x5572a8f21848 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x5572a8f217f8 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5572a8f217c8 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x5572a8f21770 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5572a8f21740 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5572a8f216f0 <col:47, col:56> 'char [48]' lvalue ->c 0x5572a8f13a68
|     |     |   `-CXXMemberCallExpr 0x5572a8f216d0 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5572a8f216a0 <col:47> '<bound member function type>' ->xanno 0x5572a8f08258
|     |     |       `-CXXThisExpr 0x5572a8f21690 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5572a8f21758 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5572a8f21720 <col:60> 'int' lvalue ParmVar 0x5572a8f0b1c8 'i' 'int'
|     `-ImplicitCastExpr 0x5572a8f21830 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x5572a8f21810 <col:65> 'int16_t':'short' lvalue ParmVar 0x5572a8f0b240 'x' 'int16_t':'short'
|-CXXMethodDecl 0x5572a8f0b518 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x5572a8f0b420 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5572a8f21f58 <col:36, line:541:5>
|   |-ParenExpr 0x5572a8f21cd8 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x5572a8f21ca8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5572a8f21a00 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5572a8f219d0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5572a8f218e0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5572a8f218c8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5572a8f21888 <col:23> 'int' lvalue ParmVar 0x5572a8f0b420 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5572a8f218a8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5572a8f219b0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5572a8f21998 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5572a8f21900 <col:33> 'int' lvalue ParmVar 0x5572a8f0b420 'i' 'int'
|   |   |     `-BinaryOperator 0x5572a8f21978 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5572a8f21960 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5572a8f21920 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5572a8f084a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5572a8f21940 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5572a8f21a60 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5572a8f21a40 <col:60> 'int' 0
|   |   `-CallExpr 0x5572a8f21c08 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5572a8f21bf0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5572a8f21bd0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5572a8a97500 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5572a8f21c48 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8f21ad0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5572a8f21c60 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8f21b08 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5572a8f21c78 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5572a8f21b40 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x5572a8f21c90 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5572a8f21bb8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5572a8f21ba0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5572a8f21b60 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x5572a8f21f48 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x5572a8f21f30 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x5572a8f21f18 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5572a8f21ee8 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x5572a8f21e90 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5572a8f21e40 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5572a8f21df0 <col:61, col:70> 'char const[48]' lvalue ->c 0x5572a8f13a68
|             |   `-CXXMemberCallExpr 0x5572a8f21dd0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5572a8f21da0 <col:61> '<bound member function type>' ->xanno 0x5572a8f080b8
|             |       `-CXXThisExpr 0x5572a8f21d90 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5572a8f21e58 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5572a8f21e20 <col:74> 'int' lvalue ParmVar 0x5572a8f0b420 'i' 'int'
|-CXXMethodDecl 0x5572a8f0b6e8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x5572a8f0b5d8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x5572a8f0b650 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5572a8f0b798 <col:20>
| `-OptimizeNoneAttr 0x5572a8f0b7f0 <col:30>
|-CXXMethodDecl 0x5572a8f0b928 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x5572a8f0b830 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5572a8f22628 <col:35, line:562:5>
|   |-ParenExpr 0x5572a8f223c8 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x5572a8f22398 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5572a8f220f0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5572a8f220c0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5572a8f21fd0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5572a8f21fb8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5572a8f21f78 <col:23> 'int' lvalue ParmVar 0x5572a8f0b830 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5572a8f21f98 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5572a8f220a0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5572a8f22088 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5572a8f21ff0 <col:33> 'int' lvalue ParmVar 0x5572a8f0b830 'i' 'int'
|   |   |     `-BinaryOperator 0x5572a8f22068 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5572a8f22050 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5572a8f22010 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5572a8f084a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5572a8f22030 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5572a8f22150 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5572a8f22130 <col:60> 'int' 0
|   |   `-CallExpr 0x5572a8f222f8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5572a8f222e0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5572a8f222c0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5572a8a97500 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5572a8f22338 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8f221c0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5572a8f22350 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8f221f8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5572a8f22368 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5572a8f22230 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x5572a8f22380 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5572a8f222a8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5572a8f22290 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5572a8f22250 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x5572a8f22618 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x5572a8f22600 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x5572a8f225e8 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5572a8f225b8 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x5572a8f22560 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5572a8f22530 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5572a8f224e0 <col:60, col:69> 'char const[48]' lvalue ->c 0x5572a8f13a68
|             |   `-CXXMemberCallExpr 0x5572a8f224c0 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5572a8f22490 <col:60> '<bound member function type>' ->xanno 0x5572a8f080b8
|             |       `-CXXThisExpr 0x5572a8f22480 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5572a8f22548 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5572a8f22510 <col:73> 'int' lvalue ParmVar 0x5572a8f0b830 'i' 'int'
|-CXXMethodDecl 0x5572a8f0bb38 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x5572a8f0b9e8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5572a8f0ba60 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x5572a8f22d08 <col:41, line:577:5>
|   |-ParenExpr 0x5572a8f22a98 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x5572a8f22a68 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5572a8f227c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5572a8f22790 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5572a8f226a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5572a8f22688 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5572a8f22648 <col:23> 'int' lvalue ParmVar 0x5572a8f0b9e8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5572a8f22668 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5572a8f22770 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5572a8f22758 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5572a8f226c0 <col:33> 'int' lvalue ParmVar 0x5572a8f0b9e8 'i' 'int'
|   |   |     `-BinaryOperator 0x5572a8f22738 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5572a8f22720 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5572a8f226e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5572a8f084a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5572a8f22700 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5572a8f22820 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5572a8f22800 <col:60> 'int' 0
|   |   `-CallExpr 0x5572a8f229c8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5572a8f229b0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5572a8f22990 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5572a8a97500 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5572a8f22a08 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8f22890 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5572a8f22a20 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8f228c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5572a8f22a38 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5572a8f22900 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x5572a8f22a50 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5572a8f22978 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5572a8f22960 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5572a8f22920 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x5572a8f22ce8 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x5572a8f22c98 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5572a8f22c68 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x5572a8f22c08 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5572a8f22bd8 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5572a8f22b88 <col:47, col:56> 'char [48]' lvalue ->c 0x5572a8f13a68
|     |     |   `-CXXMemberCallExpr 0x5572a8f22b68 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5572a8f22b38 <col:47> '<bound member function type>' ->xanno 0x5572a8f08258
|     |     |       `-CXXThisExpr 0x5572a8f22b28 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5572a8f22bf0 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5572a8f22bb8 <col:60> 'int' lvalue ParmVar 0x5572a8f0b9e8 'i' 'int'
|     `-ImplicitCastExpr 0x5572a8f22cd0 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x5572a8f22cb0 <col:65> 'int32_t':'int' lvalue ParmVar 0x5572a8f0ba60 'x' 'int32_t':'int'
|-CXXMethodDecl 0x5572a8f0bcf8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x5572a8f0bc00 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5572a8f23438 <col:36, line:591:5>
|   |-ParenExpr 0x5572a8f23178 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x5572a8f23148 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5572a8f22ea0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5572a8f22e70 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5572a8f22d80 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5572a8f22d68 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5572a8f22d28 <col:23> 'int' lvalue ParmVar 0x5572a8f0bc00 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5572a8f22d48 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5572a8f22e50 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5572a8f22e38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5572a8f22da0 <col:33> 'int' lvalue ParmVar 0x5572a8f0bc00 'i' 'int'
|   |   |     `-BinaryOperator 0x5572a8f22e18 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5572a8f22e00 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5572a8f22dc0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5572a8f084a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5572a8f22de0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5572a8f22f00 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5572a8f22ee0 <col:60> 'int' 0
|   |   `-CallExpr 0x5572a8f230a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5572a8f23090 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5572a8f23070 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5572a8a97500 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5572a8f230e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8f22f70 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5572a8f23100 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8f22fa8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5572a8f23118 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5572a8f22fe0 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x5572a8f23130 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5572a8f23058 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5572a8f23040 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5572a8f23000 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x5572a8f23428 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x5572a8f23410 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x5572a8f233f8 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5572a8f233c8 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x5572a8f23340 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5572a8f23310 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5572a8f232c0 <col:61, col:70> 'char const[48]' lvalue ->c 0x5572a8f13a68
|             |   `-CXXMemberCallExpr 0x5572a8f232a0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5572a8f23270 <col:61> '<bound member function type>' ->xanno 0x5572a8f080b8
|             |       `-CXXThisExpr 0x5572a8f23260 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5572a8f23328 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5572a8f232f0 <col:74> 'int' lvalue ParmVar 0x5572a8f0bc00 'i' 'int'
|-CXXMethodDecl 0x5572a8f0bf48 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x5572a8f0bdb8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5572a8f0be30 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x5572a8f23b18 <col:42, line:606:5>
|   |-ParenExpr 0x5572a8f238a8 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x5572a8f23878 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5572a8f235d0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5572a8f235a0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5572a8f234b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5572a8f23498 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5572a8f23458 <col:23> 'int' lvalue ParmVar 0x5572a8f0bdb8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5572a8f23478 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5572a8f23580 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5572a8f23568 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5572a8f234d0 <col:33> 'int' lvalue ParmVar 0x5572a8f0bdb8 'i' 'int'
|   |   |     `-BinaryOperator 0x5572a8f23548 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5572a8f23530 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5572a8f234f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5572a8f084a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5572a8f23510 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5572a8f23630 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5572a8f23610 <col:60> 'int' 0
|   |   `-CallExpr 0x5572a8f237d8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5572a8f237c0 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5572a8f237a0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5572a8a97500 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5572a8f23818 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8f236a0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5572a8f23830 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8f236d8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5572a8f23848 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5572a8f23710 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x5572a8f23860 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5572a8f23788 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5572a8f23770 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5572a8f23730 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x5572a8f23af8 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x5572a8f23aa8 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5572a8f23a78 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x5572a8f23a18 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5572a8f239e8 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5572a8f23998 <col:48, col:57> 'char [48]' lvalue ->c 0x5572a8f13a68
|     |     |   `-CXXMemberCallExpr 0x5572a8f23978 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5572a8f23948 <col:48> '<bound member function type>' ->xanno 0x5572a8f08258
|     |     |       `-CXXThisExpr 0x5572a8f23938 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5572a8f23a00 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5572a8f239c8 <col:61> 'int' lvalue ParmVar 0x5572a8f0bdb8 'i' 'int'
|     `-ImplicitCastExpr 0x5572a8f23ae0 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x5572a8f23ac0 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x5572a8f0be30 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x5572a8f0c0e0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x5572a8f0c010 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x5572a8f24388 <col:33, line:620:5>
|   |-ParenExpr 0x5572a8f24100 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x5572a8f240d0 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5572a8f23d20 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5572a8f23cf0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5572a8f23b90 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5572a8f23b78 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5572a8f23b38 <col:23> 'int' lvalue ParmVar 0x5572a8f0c010 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5572a8f23b58 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5572a8f23cd0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5572a8f23cb8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5572a8f23bb0 <col:33> 'int' lvalue ParmVar 0x5572a8f0c010 'i' 'int'
|   |   |     `-BinaryOperator 0x5572a8f23c98 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5572a8f23c80 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5572a8f23bd0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5572a8f084a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5572a8f23c58 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5572a8f23c40 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5572a8f23c08 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5572a8f23d80 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5572a8f23d60 <col:79> 'int' 0
|   |   `-CallExpr 0x5572a8f24030 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5572a8f24018 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5572a8f23ff8 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5572a8a97500 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5572a8f24070 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8f23e68 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5572a8f24088 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8f23eb0 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5572a8f240a0 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5572a8f23ee8 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x5572a8f240b8 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5572a8f23fe0 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5572a8f23fc8 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5572a8f23f88 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x5572a8f24378 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x5572a8f24360 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x5572a8f24348 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5572a8f24318 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x5572a8f24290 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x5572a8f24260 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5572a8f24210 <col:67, col:76> 'char const[48]' lvalue ->c 0x5572a8f13a68
|             |   `-CXXMemberCallExpr 0x5572a8f241f0 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5572a8f241c0 <col:67> '<bound member function type>' ->xanno 0x5572a8f080b8
|             |       `-CXXThisExpr 0x5572a8f241b0 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5572a8f24278 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5572a8f24240 <col:80> 'int' lvalue ParmVar 0x5572a8f0c010 'i' 'int'
|-CXXMethodDecl 0x5572a8f0c2f8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x5572a8f0c1a0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5572a8f0c220 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x5572a8f24bb0 <col:45, line:635:5>
|   |-ParenExpr 0x5572a8f248f8 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x5572a8f248c8 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5572a8f24590 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5572a8f24560 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5572a8f24400 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5572a8f243e8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5572a8f243a8 <col:23> 'int' lvalue ParmVar 0x5572a8f0c1a0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5572a8f243c8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5572a8f24540 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5572a8f24528 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5572a8f24420 <col:33> 'int' lvalue ParmVar 0x5572a8f0c1a0 'i' 'int'
|   |   |     `-BinaryOperator 0x5572a8f24508 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5572a8f244f0 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5572a8f24440 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5572a8f084a0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5572a8f244c8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5572a8f244b0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5572a8f24478 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5572a8f245f0 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5572a8f245d0 <col:79> 'int' 0
|   |   `-CallExpr 0x5572a8f24828 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5572a8f24810 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5572a8f247f0 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5572a8a97500 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5572a8f24868 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8f24660 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5572a8f24880 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5572a8f246a8 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5572a8f24898 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5572a8f246e0 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x5572a8f248b0 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5572a8f247d8 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5572a8f247c0 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5572a8f24778 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x5572a8f24b90 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x5572a8f24af8 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5572a8f24ac8 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x5572a8f24a68 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5572a8f24a38 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5572a8f249e8 <col:54, col:63> 'char [48]' lvalue ->c 0x5572a8f13a68
|     |     |   `-CXXMemberCallExpr 0x5572a8f249c8 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5572a8f24998 <col:54> '<bound member function type>' ->xanno 0x5572a8f08258
|     |     |       `-CXXThisExpr 0x5572a8f24988 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5572a8f24a50 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5572a8f24a18 <col:67> 'int' lvalue ParmVar 0x5572a8f0c1a0 'i' 'int'
|     `-CXXConstCastExpr 0x5572a8f24b60 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x5572a8f24b48 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x5572a8f24b10 <col:91> 'const void *' lvalue ParmVar 0x5572a8f0c220 'x' 'const void *'
|-CXXMethodDecl 0x5572a8f0c3c8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x5572a8f24c38 <col:34, line:640:5>
|   `-ReturnStmt 0x5572a8f24c28 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x5572a8f24c10 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x5572a8f24be0 <col:16> 'Packet *' lvalue ->_data_packet 0x5572a8f14628
|         `-CXXThisExpr 0x5572a8f24bd0 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5572a8f0c508 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x5572a8f0c478 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5572a8f15a78 <col:46> 'bool' true
|-CXXMethodDecl 0x5572a8f0c688 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x5572a8f0c5c0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x5572a8f0c730 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x5572a8f0cee0 <line:660:22> "" ""
| |-EnumConstantDecl 0x5572a8f0c830 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5572a8f0cf50 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f0c810 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x5572a8f0c7f0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5572a8f01960 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5572a8f0c8c0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5572a8f0cf68 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f0c8a0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x5572a8f0c880 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5572a8f019f0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5572a8f0c950 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5572a8f0cf80 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f0c930 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x5572a8f0c910 <col:21> 'int' 0
| |-EnumConstantDecl 0x5572a8f0c9e0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5572a8f0cf98 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f0c9c0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x5572a8f0c9a0 <col:19> 'int' 16
| |-EnumConstantDecl 0x5572a8f0ca70 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5572a8f0cfb0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f0ca50 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x5572a8f0ca30 <col:21> 'int' 16
| |-EnumConstantDecl 0x5572a8f0cb00 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5572a8f0cfc8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f0cae0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5572a8f0cac0 <col:19> 'int' 32
| |-EnumConstantDecl 0x5572a8f0cb90 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5572a8f0cfe0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f0cb70 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x5572a8f0cb50 <col:19> 'int' EnumConstant 0x5572a8f0c9e0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5572a8f0cc20 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5572a8f0cff8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f0cc00 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x5572a8f0cbe0 <col:19> 'int' EnumConstant 0x5572a8f0cb00 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5572a8f0ccf0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5572a8f0d010 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f0ccd0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x5572a8f0ccb0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5572a8f0cc70 <col:23> 'int' EnumConstant 0x5572a8f0cc20 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5572a8f0cc90 <col:40> 'int' 2
| |-EnumConstantDecl 0x5572a8f0cdc0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5572a8f0d028 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5572a8f0cda0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x5572a8f0cd80 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5572a8f0cd40 <col:23> 'int' EnumConstant 0x5572a8f0cc20 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5572a8f0cd60 <col:40> 'int' 4
| `-EnumConstantDecl 0x5572a8f0ce90 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x5572a8f0d040 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5572a8f0ce70 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x5572a8f0ce50 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x5572a8f0ce10 <col:23> 'int' EnumConstant 0x5572a8f0cc20 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x5572a8f0ce30 <col:40> 'int' 8
|-CXXMethodDecl 0x5572a8f0d080 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x5572a8f0d120 <col:68> "" ""
|-CXXMethodDecl 0x5572a8f0d1b8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x5572a8f0d258 <col:45> "" ""
|-CXXMethodDecl 0x5572a8f0d2f0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5572a8f0d390 <col:57> "" ""
|-CXXMethodDecl 0x5572a8f0d428 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x5572a8f0d4c8 <col:45> "" ""
|-CXXMethodDecl 0x5572a8f0d560 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5572a8f0d600 <col:57> "" ""
|-CXXMethodDecl 0x5572a8f0d690 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x5572a8f0d730 <col:51> "" ""
|-CXXMethodDecl 0x5572a8f0d7c0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5572a8f0d860 <col:63> "" ""
|-CXXMethodDecl 0x5572a8f0d8f0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x5572a8f0d990 <col:53> "" ""
|-CXXMethodDecl 0x5572a8f0da20 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5572a8f0dac0 <col:65> "" ""
|-CXXMethodDecl 0x5572a8f0dbd8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5572a8f0db48 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x5572a8f0dc80 <col:61> "" ""
|-CXXMethodDecl 0x5572a8f0de18 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5572a8f0dd08 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x5572a8f0dd80 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5572a8f0dec8 <col:67> "" ""
|-CXXMethodDecl 0x5572a8f0dfe0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5572a8f0df50 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5572a8f0e088 <col:63> "" ""
|-CXXMethodDecl 0x5572a8f0e220 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5572a8f0e110 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5572a8f0e188 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5572a8f0e2d0 <col:69> "" ""
|-CXXMethodDecl 0x5572a8f0e3e8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5572a8f0e358 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5572a8f0e490 <col:63> "" ""
|-CXXMethodDecl 0x5572a8f0e628 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5572a8f0e518 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5572a8f0e590 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5572a8f0e6d8 <col:69> "" ""
|-CXXMethodDecl 0x5572a8f0e7f0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x5572a8f0e760 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x5572a8f0e898 <col:62> "" ""
|-CXXMethodDecl 0x5572a8f0ea30 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5572a8f0e920 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5572a8f0e998 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x5572a8f0eae0 <col:68> "" ""
|-CXXMethodDecl 0x5572a8f11c10 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x5572a8f0eb68 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5572a8f11cb8 <col:63> "" ""
|-CXXMethodDecl 0x5572a8f11e50 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x5572a8f11d40 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5572a8f11db8 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x5572a8f11f00 <col:69> "" ""
|-CXXMethodDecl 0x5572a8f11f90 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5572a8f12030 <col:64> "" ""
|-CXXMethodDecl 0x5572a8f120c0 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x5572a8f12160 <col:52> "" ""
|-CXXMethodDecl 0x5572a8f121f0 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5572a8f12290 <col:67> "" ""
|-CXXMethodDecl 0x5572a8f12320 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x5572a8f123c0 <col:55> "" ""
|-CXXMethodDecl 0x5572a8f124d8 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5572a8f12448 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5572a8f12580 <col:58> "" ""
|-CXXMethodDecl 0x5572a8f12718 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5572a8f12608 <col:33> col:36 'int'
| |-ParmVarDecl 0x5572a8f12680 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5572a8f127c8 <col:62> "" ""
|-CXXMethodDecl 0x5572a8f128e0 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x5572a8f12850 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5572a8f12988 <col:58> "" ""
|-CXXMethodDecl 0x5572a8f12b20 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x5572a8f12a10 <col:33> col:36 'int'
| |-ParmVarDecl 0x5572a8f12a88 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x5572a8f12bd0 <col:62> "" ""
|-CXXMethodDecl 0x5572a8f12ce8 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5572a8f12c58 <col:34> col:37 'int'
| `-DeprecatedAttr 0x5572a8f12d90 <col:60> "" ""
|-CXXMethodDecl 0x5572a8f12f28 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5572a8f12e18 <col:34> col:37 'int'
| |-ParmVarDecl 0x5572a8f12e90 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5572a8f12fd8 <col:64> "" ""
|-CXXMethodDecl 0x5572a8f130f0 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x5572a8f13060 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5572a8f13198 <col:58> "" ""
|-CXXMethodDecl 0x5572a8f13330 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5572a8f13220 <col:33> col:36 'int'
| |-ParmVarDecl 0x5572a8f13298 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x5572a8f133e0 <col:62> "" ""
|-CXXMethodDecl 0x5572a8f134f8 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5572a8f13468 <col:33> col:36 'int'
| `-DeprecatedAttr 0x5572a8f135a0 <col:59> "" ""
|-CXXMethodDecl 0x5572a8f13738 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5572a8f13628 <col:33> col:36 'int'
| |-ParmVarDecl 0x5572a8f136a0 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5572a8f137e8 <col:63> "" ""
|-AccessSpecDecl 0x5572a8f13858 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x5572a8f13880 prev 0x5572a8f07f90 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5572a8f13978 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x5572a8f13a68 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x5572a8f13b98 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x5572a8f13d18 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x5572a8f13e98 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x5572a8f14018 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x5572a8f24db8 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5572a8f25628 <col:11>
| |-CXXDestructorDecl 0x5572a8f24e90 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x5572a8f24fc8 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5572a8f24fc8
| | `-ParmVarDecl 0x5572a8f250d8 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x5572a8f25178 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5572a8f25178
| | `-ParmVarDecl 0x5572a8f25288 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x5572a8f27fe8 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5572a8f280f8 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x5572a8f28378 <col:11>
| |   `-ReturnStmt 0x5572a8f28368 <col:11>
| |     `-UnaryOperator 0x5572a8f28350 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5572a8f28340 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x5572a8f28168 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5572a8f28168
|   `-ParmVarDecl 0x5572a8f28278 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x5572a8f14080 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5572a8f14198 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x5572a8f14238 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x5572a8f142a0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x5572a8f14308 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x5572a8f14370 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x5572a8f143d0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x5572a8f14490 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x5572a8f144f0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x5572a8f14550 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x5572a8f24cc8 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x5572a8f14238 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x5572a8f25638 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x5572a8f25690 <col:12>
| |-CXXConstructorDecl 0x5572a8f252f8 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5572a8f252f8
| | `-ParmVarDecl 0x5572a8f25408 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x5572a8f254a8 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5572a8f254a8
| | `-ParmVarDecl 0x5572a8f255b8 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x5572a8f276d0 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x5572a8f145c8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x5572a8f14628 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x5572a8f14690 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x5572a8f146f8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x5572a8f14760 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x5572a8f147c8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x5572a8f14828 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x5572a8f14888 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x5572a8f148f0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x5572a8f14978 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x5572a8f145c8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x5572a8f24c60 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x5572a8f14828 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x5572a8f256a0 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x5572a8f25700 <col:21, line:755:5>
|-CXXConstructorDecl 0x5572a8f14b18 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x5572a8f14a58 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x5572a8f14c10 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x5572a8f14df8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x5572a8f14d00 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x5572a8f150c8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x5572a8f14eb0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5572a8f14f28 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5572a8f14fa0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5572a8f152e8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x5572a8f15198 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x5572a8f15210 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x5572a8f155b8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x5572a8f153a8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x5572a8f15420 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x5572a8f15498 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x5572a8f15710 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5572a8f15680 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5572a8f15858 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5572a8f157c8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x5572a8f15950 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_ip6
         0 |   union click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:17:5) ip6_ctlun
         0 |     struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:18:2) ip6_un1
         0 |       uint32_t ip6_un1_flow
         4 |       uint16_t ip6_un1_plen
         6 |       uint8_t ip6_un1_nxt
         7 |       uint8_t ip6_un1_hlim
         0 |     uint8_t ip6_un2_vfc
         0 |     struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:30:2) ip6_un3
     0:0-3 |       unsigned int ip6_un3_fc
     0:4-7 |       unsigned int ip6_un3_v
         8 |   struct in6_addr ip6_src
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   struct in6_addr ip6_dst
        24 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
        24 |       uint8_t [16] __u6_addr8
        24 |       uint16_t [8] __u6_addr16
        24 |       uint32_t [4] __u6_addr32
           | [sizeof=40, dsize=40, align=4,
           |  nvsize=40, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a8c8f048 <../dummy_inc/clicknet/ip6.h:18:2, line:27:2> line:18:2 struct definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x5572a8c8f178 <line:19:6, col:15> col:15 ip6_un1_flow 'uint32_t':'unsigned int'
|-FieldDecl 0x5572a8c8f1d8 <line:24:6, col:15> col:15 referenced ip6_un1_plen 'uint16_t':'unsigned short'
|-FieldDecl 0x5572a8c8f238 <line:25:6, col:14> col:14 referenced ip6_un1_nxt 'uint8_t':'unsigned char'
`-FieldDecl 0x5572a8c8f298 <line:26:6, col:14> col:14 ip6_un1_hlim 'uint8_t':'unsigned char'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i32, i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i32, i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a8c8f420 <../dummy_inc/clicknet/ip6.h:30:2, line:38:2> line:30:2 struct definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x5572a8c8f590 <line:35:6, col:28> col:15 ip6_un3_fc 'unsigned int'
| `-ConstantExpr 0x5572a8c8f570 <col:28> 'int' Int: 4
|   `-IntegerLiteral 0x5572a8c8f538 <col:28> 'int' 4
`-FieldDecl 0x5572a8c8f638 <line:36:6, col:27> col:15 ip6_un3_v 'unsigned int'
  `-ConstantExpr 0x5572a8c8f618 <col:27> 'int' Int: 4
    `-IntegerLiteral 0x5572a8c8f5e0 <col:27> 'int' 4

Layout: <CGRecordLayout
  LLVMType:%struct.anon.5 = type { i8, [3 x i8] }
  NonVirtualBaseLLVMType:%struct.anon.5 = type { i8, [3 x i8] }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a8c8ef28 <../dummy_inc/clicknet/ip6.h:17:5, line:39:5> line:17:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5572a8c8f048 <line:18:2, line:27:2> line:18:2 struct definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x5572a8c8f178 <line:19:6, col:15> col:15 ip6_un1_flow 'uint32_t':'unsigned int'
| |-FieldDecl 0x5572a8c8f1d8 <line:24:6, col:15> col:15 referenced ip6_un1_plen 'uint16_t':'unsigned short'
| |-FieldDecl 0x5572a8c8f238 <line:25:6, col:14> col:14 referenced ip6_un1_nxt 'uint8_t':'unsigned char'
| `-FieldDecl 0x5572a8c8f298 <line:26:6, col:14> col:14 ip6_un1_hlim 'uint8_t':'unsigned char'
|-FieldDecl 0x5572a8c8f358 <line:18:2, line:27:4> col:4 referenced ip6_un1 'struct (anonymous struct at ../dummy_inc/clicknet/ip6.h:18:2)':'click_ip6::(anonymous struct at ../dummy_inc/clicknet/ip6.h:18:2)'
|-FieldDecl 0x5572a8c8f3d0 <line:28:2, col:10> col:10 ip6_un2_vfc 'uint8_t':'unsigned char'
|-CXXRecordDecl 0x5572a8c8f420 <line:30:2, line:38:2> line:30:2 struct definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x5572a8c8f590 <line:35:6, col:28> col:15 ip6_un3_fc 'unsigned int'
| | `-ConstantExpr 0x5572a8c8f570 <col:28> 'int' Int: 4
| |   `-IntegerLiteral 0x5572a8c8f538 <col:28> 'int' 4
| `-FieldDecl 0x5572a8c8f638 <line:36:6, col:27> col:15 ip6_un3_v 'unsigned int'
|   `-ConstantExpr 0x5572a8c8f618 <col:27> 'int' Int: 4
|     `-IntegerLiteral 0x5572a8c8f5e0 <col:27> 'int' 4
`-FieldDecl 0x5572a8c8f6f8 <line:30:2, line:38:4> col:4 ip6_un3 'struct (anonymous struct at ../dummy_inc/clicknet/ip6.h:30:2)':'click_ip6::(anonymous struct at ../dummy_inc/clicknet/ip6.h:30:2)'

Layout: <CGRecordLayout
  LLVMType:%union.anon.4 = type { %struct.anon }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a8c8ed80 <../dummy_inc/clicknet/ip6.h:16:1, line:42:1> line:16:8 struct click_ip6 definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5572a8c8ee98 <col:1, col:8> col:8 implicit struct click_ip6
|-CXXRecordDecl 0x5572a8c8ef28 <line:17:5, line:39:5> line:17:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5572a8c8f048 <line:18:2, line:27:2> line:18:2 struct definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-FieldDecl 0x5572a8c8f178 <line:19:6, col:15> col:15 ip6_un1_flow 'uint32_t':'unsigned int'
| | |-FieldDecl 0x5572a8c8f1d8 <line:24:6, col:15> col:15 referenced ip6_un1_plen 'uint16_t':'unsigned short'
| | |-FieldDecl 0x5572a8c8f238 <line:25:6, col:14> col:14 referenced ip6_un1_nxt 'uint8_t':'unsigned char'
| | `-FieldDecl 0x5572a8c8f298 <line:26:6, col:14> col:14 ip6_un1_hlim 'uint8_t':'unsigned char'
| |-FieldDecl 0x5572a8c8f358 <line:18:2, line:27:4> col:4 referenced ip6_un1 'struct (anonymous struct at ../dummy_inc/clicknet/ip6.h:18:2)':'click_ip6::(anonymous struct at ../dummy_inc/clicknet/ip6.h:18:2)'
| |-FieldDecl 0x5572a8c8f3d0 <line:28:2, col:10> col:10 ip6_un2_vfc 'uint8_t':'unsigned char'
| |-CXXRecordDecl 0x5572a8c8f420 <line:30:2, line:38:2> line:30:2 struct definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-FieldDecl 0x5572a8c8f590 <line:35:6, col:28> col:15 ip6_un3_fc 'unsigned int'
| | | `-ConstantExpr 0x5572a8c8f570 <col:28> 'int' Int: 4
| | |   `-IntegerLiteral 0x5572a8c8f538 <col:28> 'int' 4
| | `-FieldDecl 0x5572a8c8f638 <line:36:6, col:27> col:15 ip6_un3_v 'unsigned int'
| |   `-ConstantExpr 0x5572a8c8f618 <col:27> 'int' Int: 4
| |     `-IntegerLiteral 0x5572a8c8f5e0 <col:27> 'int' 4
| `-FieldDecl 0x5572a8c8f6f8 <line:30:2, line:38:4> col:4 ip6_un3 'struct (anonymous struct at ../dummy_inc/clicknet/ip6.h:30:2)':'click_ip6::(anonymous struct at ../dummy_inc/clicknet/ip6.h:30:2)'
|-FieldDecl 0x5572a8c8f8a8 <line:17:5, line:39:7> col:7 referenced ip6_ctlun 'union (anonymous union at ../dummy_inc/clicknet/ip6.h:17:5)':'click_ip6::(anonymous union at ../dummy_inc/clicknet/ip6.h:17:5)'
|-FieldDecl 0x5572a8c8f930 <line:40:5, col:21> col:21 referenced ip6_src 'struct in6_addr':'in6_addr'
`-FieldDecl 0x5572a8c8f9a0 <line:41:5, col:21> col:21 referenced ip6_dst 'struct in6_addr':'in6_addr'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ip6 = type { %union.anon.4, %struct.in6_addr, %struct.in6_addr }
  NonVirtualBaseLLVMType:%struct.click_ip6 = type { %union.anon.4, %struct.in6_addr, %struct.in6_addr }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class WritablePacket
         0 |   class Packet (base)
         0 |     class atomic_uint32_t _use_count
         0 |       uint32_t _val
         8 |     class Packet * _data_packet
        16 |     unsigned char * _head
        24 |     unsigned char * _data
        32 |     unsigned char * _tail
        40 |     unsigned char * _end
        48 |     struct Packet::AllAnno _aa
        48 |       union Packet::Anno cb
        48 |         char [48] c
        48 |         uint8_t [48] u8
        48 |         uint16_t [24] u16
        48 |         uint32_t [12] u32
        48 |         uint64_t [6] u64
        96 |       unsigned char * mac
       104 |       unsigned char * nh
       112 |       unsigned char * h
       120 |       enum Packet::PacketType pkt_type
       124 |       char [8] timestamp
       136 |       class Packet * next
       144 |       class Packet * prev
       152 |     Packet::buffer_destructor_type _destructor
       160 |     void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a8f25710 prev 0x5572a8f015e0 <../dummy_inc/click/packet.hh:778:1, line:816:1> line:778:7 referenced class WritablePacket definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Packet'
|-CXXRecordDecl 0x5572a8f25848 <col:1, col:7> col:7 implicit referenced class WritablePacket
|-AccessSpecDecl 0x5572a8f258d8 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x5572a8f25980 <line:780:5, col:62> col:55 used data 'unsigned char *() const'
| |-NoInlineAttr 0x5572a8f25a20 <col:20>
| `-OptimizeNoneAttr 0x5572a8f25a78 <col:30>
|-CXXMethodDecl 0x5572a8f25ac8 <line:781:5, col:66> col:55 end_data 'unsigned char *() const'
| |-NoInlineAttr 0x5572a8f25b68 <col:20>
| `-OptimizeNoneAttr 0x5572a8f25bc0 <col:30>
|-CXXMethodDecl 0x5572a8f25c10 <line:782:5, col:36> col:27 buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x5572a8f25cd8 <line:783:5, col:40> col:27 end_buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x5572a8f25da0 <line:784:5, col:40> col:27 mac_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x5572a8f25ee8 <line:785:5, col:40> col:25 ether_header 'click_ether *() const' inline
|-CXXMethodDecl 0x5572a8f25fb0 <line:786:5, col:72> col:55 network_header 'unsigned char *() const'
| |-NoInlineAttr 0x5572a8f26050 <col:20>
| `-OptimizeNoneAttr 0x5572a8f260a8 <col:30>
|-CXXMethodDecl 0x5572a8f26118 <line:787:5, col:62> col:50 ip_header 'click_ip *() const'
| |-NoInlineAttr 0x5572a8f261b8 <col:20>
| `-OptimizeNoneAttr 0x5572a8f26210 <col:30>
|-CXXMethodDecl 0x5572a8f262b8 <line:788:5, col:64> col:51 ip6_header 'click_ip6 *() const'
| |-NoInlineAttr 0x5572a8f26358 <col:20>
| `-OptimizeNoneAttr 0x5572a8f263b0 <col:30>
|-CXXMethodDecl 0x5572a8f26400 <line:789:5, col:46> col:27 transport_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x5572a8f26518 <line:790:5, col:38> col:24 icmp_header 'click_icmp *() const' inline
|-CXXMethodDecl 0x5572a8f26638 <line:791:5, col:36> col:23 tcp_header 'click_tcp *() const' inline
|-CXXMethodDecl 0x5572a8f26758 <line:792:5, col:36> col:23 udp_header 'click_udp *() const' inline
|-CXXMethodDecl 0x5572a8f26820 <line:795:5, col:73> col:27 buffer_data 'unsigned char *() const' inline
| `-DeprecatedAttr 0x5572a8f268c0 <col:62> "" ""
|-AccessSpecDecl 0x5572a8f26930 <line:798:2, col:9> col:2 private
|-CXXConstructorDecl 0x5572a8f26990 <line:800:5, col:31> col:12 WritablePacket 'void ()' inline
| |-CXXCtorInitializer 'Packet'
| | `-CXXConstructExpr 0x5572a8f27588 <col:12> 'Packet' 'void ()'
| `-CompoundStmt 0x5572a8f277b0 <col:29, col:31>
|-CXXMethodDecl 0x5572a8f26a58 <line:802:5, col:28> col:17 initialize 'void ()' inline
|-CXXConstructorDecl 0x5572a8f26b98 <line:804:5, col:35> col:5 WritablePacket 'void (const Packet &)'
| `-ParmVarDecl 0x5572a8f26b08 <col:20, col:34> col:34 x 'const Packet &'
|-CXXDestructorDecl 0x5572a8f26c90 <line:805:5, col:25> col:5 ~WritablePacket 'void () noexcept'
| `-CompoundStmt 0x5572a8f277c0 <col:23, col:25>
|-CXXMethodDecl 0x5572a8f26e48 <line:808:5, col:56> col:28 pool_allocate 'WritablePacket *(bool)' static
| `-ParmVarDecl 0x5572a8f26d80 <col:42, col:47> col:47 with_data 'bool'
|-CXXMethodDecl 0x5572a8f27118 <line:809:5, line:810:24> line:809:28 pool_allocate 'WritablePacket *(uint32_t, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x5572a8f26f00 <col:42, col:51> col:51 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5572a8f26f78 <col:61, col:70> col:70 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5572a8f26ff0 <line:810:7, col:16> col:16 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5572a8f272a8 <line:811:5, col:42> col:17 recycle 'void (WritablePacket *)' static
| `-ParmVarDecl 0x5572a8f271e0 <col:25, col:41> col:41 p 'WritablePacket *'
|-FriendDecl 0x5572a8f273a0 <line:814:5, col:18> col:12 'class Packet':'Packet'
`-CXXConstructorDecl 0x5572a8f27408 <line:778:7> col:7 implicit WritablePacket 'void (const WritablePacket &)' inline default noexcept-unevaluated 0x5572a8f27408
  `-ParmVarDecl 0x5572a8f27518 <col:7> col:7 'const WritablePacket &'

Layout: <CGRecordLayout
  LLVMType:%class.WritablePacket = type { %class.Packet }
  NonVirtualBaseLLVMType:%class.WritablePacket = type { %class.Packet }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_icmp6_sequenced
         0 |   uint8_t icmp6_type
         1 |   uint8_t icmp6_code
         2 |   uint16_t icmp6_cksum
         4 |   uint16_t icmp6_identifier
         6 |   uint16_t icmp6_sequence
           | [sizeof=8, dsize=8, align=2,
           |  nvsize=8, nvalign=2]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a8eef700 <../dummy_inc/clicknet/icmp6.h:78:1, line:87:1> line:78:8 referenced struct click_icmp6_sequenced definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5572a8eef818 <col:1, col:8> col:8 implicit struct click_icmp6_sequenced
|-FieldDecl 0x5572a8eef8b8 <line:79:5, col:13> col:13 icmp6_type 'uint8_t':'unsigned char'
|-FieldDecl 0x5572a8eef918 <line:80:5, col:13> col:13 icmp6_code 'uint8_t':'unsigned char'
|-FieldDecl 0x5572a8eef978 <line:81:5, col:14> col:14 referenced icmp6_cksum 'uint16_t':'unsigned short'
|-FieldDecl 0x5572a8eef9d8 <line:82:5, col:14> col:14 icmp6_identifier 'uint16_t':'unsigned short'
`-FieldDecl 0x5572a8eefa38 <line:83:5, col:14> col:14 icmp6_sequence 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_icmp6_sequenced = type { i8, i8, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_icmp6_sequenced = type { i8, i8, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_icmp6_pkttoobig
         0 |   uint8_t icmp6_type
         1 |   uint8_t icmp6_code
         2 |   uint16_t icmp6_cksum
         4 |   uint32_t icmp6_mtusize
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a8eef080 <../dummy_inc/clicknet/icmp6.h:59:1, line:65:1> line:59:8 referenced struct click_icmp6_pkttoobig definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5572a8eef198 <col:1, col:8> col:8 implicit struct click_icmp6_pkttoobig
|-FieldDecl 0x5572a8eef238 <line:60:5, col:13> col:13 icmp6_type 'uint8_t':'unsigned char'
|-FieldDecl 0x5572a8eef298 <line:61:5, col:13> col:13 icmp6_code 'uint8_t':'unsigned char'
|-FieldDecl 0x5572a8eef2f8 <line:62:5, col:14> col:14 referenced icmp6_cksum 'uint16_t':'unsigned short'
`-FieldDecl 0x5572a8eef358 <line:63:5, col:14> col:14 icmp6_mtusize 'uint32_t':'unsigned int'

Layout: <CGRecordLayout
  LLVMType:%struct.click_icmp6_pkttoobig = type { i8, i8, i16, i32 }
  NonVirtualBaseLLVMType:%struct.click_icmp6_pkttoobig = type { i8, i8, i16, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_icmp6_paramprob
         0 |   uint8_t icmp6_type
         1 |   uint8_t icmp6_code
         2 |   uint16_t icmp6_cksum
         4 |   uint32_t icmp6_pointer
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a8eef3c0 <../dummy_inc/clicknet/icmp6.h:68:1, line:74:1> line:68:8 referenced struct click_icmp6_paramprob definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5572a8eef4d8 <col:1, col:8> col:8 implicit struct click_icmp6_paramprob
|-FieldDecl 0x5572a8eef578 <line:69:5, col:13> col:13 icmp6_type 'uint8_t':'unsigned char'
|-FieldDecl 0x5572a8eef5d8 <line:70:5, col:13> col:13 icmp6_code 'uint8_t':'unsigned char'
|-FieldDecl 0x5572a8eef638 <line:71:5, col:14> col:14 referenced icmp6_cksum 'uint16_t':'unsigned short'
`-FieldDecl 0x5572a8eef698 <line:72:5, col:14> col:14 icmp6_pointer 'uint32_t':'unsigned int'

Layout: <CGRecordLayout
  LLVMType:%struct.click_icmp6_paramprob = type { i8, i8, i16, i32 }
  NonVirtualBaseLLVMType:%struct.click_icmp6_paramprob = type { i8, i8, i16, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_tcp
         0 |   uint16_t th_sport
         2 |   uint16_t th_dport
         4 |   tcp_seq_t th_seq
         8 |   tcp_seq_t th_ack
    12:0-3 |   unsigned int th_flags2
    12:4-7 |   unsigned int th_off
        13 |   uint8_t th_flags
        14 |   uint16_t th_win
        16 |   uint16_t th_sum
        18 |   uint16_t th_urp
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a8ef02c8 prev 0x5572a8f013d0 <../dummy_inc/clicknet/tcp.h:24:1, line:51:1> line:24:8 referenced struct click_tcp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5572a8ef03c0 <col:1, col:8> col:8 implicit struct click_tcp
|-FieldDecl 0x5572a8ef0460 <line:25:5, col:14> col:14 referenced th_sport 'uint16_t':'unsigned short'
|-FieldDecl 0x5572a8ef04c0 <line:26:5, col:14> col:14 referenced th_dport 'uint16_t':'unsigned short'
|-FieldDecl 0x5572a8ef0540 <line:27:5, col:15> col:15 th_seq 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x5572a8ef05a0 <line:28:5, col:15> col:15 th_ack 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x5572a8ef0648 <line:30:5, col:26> col:14 th_flags2 'unsigned int'
| `-ConstantExpr 0x5572a8ef0628 <col:26> 'int' Int: 4
|   `-IntegerLiteral 0x5572a8ef05f0 <col:26> 'int' 4
|-FieldDecl 0x5572a8ef06f0 <line:31:5, col:23> col:14 th_off 'unsigned int'
| `-ConstantExpr 0x5572a8ef06d0 <col:23> 'int' Int: 4
|   `-IntegerLiteral 0x5572a8ef0698 <col:23> 'int' 4
|-FieldDecl 0x5572a8ef0750 <line:39:5, col:13> col:13 th_flags 'uint8_t':'unsigned char'
|-FieldDecl 0x5572a8ef07b0 <line:48:5, col:14> col:14 th_win 'uint16_t':'unsigned short'
|-FieldDecl 0x5572a8ef0810 <line:49:5, col:14> col:14 referenced th_sum 'uint16_t':'unsigned short'
`-FieldDecl 0x5572a8ef0870 <line:50:5, col:14> col:14 th_urp 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
]>

*** Dumping AST Record Layout
         0 | struct click_udp
         0 |   uint16_t uh_sport
         2 |   uint16_t uh_dport
         4 |   uint16_t uh_ulen
         6 |   uint16_t uh_sum
           | [sizeof=8, dsize=8, align=2,
           |  nvsize=8, nvalign=2]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a8ef08d8 prev 0x5572a8f01480 <../dummy_inc/clicknet/udp.h:11:1, line:16:1> line:11:8 referenced struct click_udp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5572a8ef09d0 <col:1, col:8> col:8 implicit struct click_udp
|-FieldDecl 0x5572a8ef0a70 <line:12:5, col:14> col:14 referenced uh_sport 'uint16_t':'unsigned short'
|-FieldDecl 0x5572a8ef0ad0 <line:13:5, col:14> col:14 referenced uh_dport 'uint16_t':'unsigned short'
|-FieldDecl 0x5572a8ef0b30 <line:14:5, col:14> col:14 uh_ulen 'uint16_t':'unsigned short'
`-FieldDecl 0x5572a8ef0b90 <line:15:5, col:14> col:14 referenced uh_sum 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_udp = type { i16, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_udp = type { i16, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct HashMap<class IP6FlowID, void *>::Pair
         0 |   class IP6FlowID key
         0 |     class IP6Address _saddr
         0 |       struct in6_addr _addr
         0 |         union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |           uint8_t [16] __u6_addr8
         0 |           uint16_t [8] __u6_addr16
         0 |           uint32_t [4] __u6_addr32
        16 |     class IP6Address _daddr
        16 |       struct in6_addr _addr
        16 |         union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
        16 |           uint8_t [16] __u6_addr8
        16 |           uint16_t [8] __u6_addr16
        16 |           uint32_t [4] __u6_addr32
        32 |     uint16_t _sport
        34 |     uint16_t _dport
        40 |   void * value
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a9033938 <../dummy_inc/click/hashmap.hh:283:3, line:286:3> line:283:10 struct Pair definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5572a9219cf8 prev 0x5572a9039610 <col:3, col:10> col:10 implicit struct Pair
|-FieldDecl 0x5572a9219d98 <line:284:5, col:7> col:7 key 'IP6FlowID':'IP6FlowID'
`-FieldDecl 0x5572a9219de8 <line:285:5, col:11> col:11 value 'void *'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashMap<IP6FlowID, void *>::Pair" = type { %class.IP6FlowID, i8* }
  NonVirtualBaseLLVMType:%"struct.HashMap<IP6FlowID, void *>::Pair" = type { %class.IP6FlowID, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct HashMap<class IP6FlowID, void *>::Elt
         0 |   struct HashMap<class IP6FlowID, void *>::Pair (base)
         0 |     class IP6FlowID key
         0 |       class IP6Address _saddr
         0 |         struct in6_addr _addr
         0 |           union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |             uint8_t [16] __u6_addr8
         0 |             uint16_t [8] __u6_addr16
         0 |             uint32_t [4] __u6_addr32
        16 |       class IP6Address _daddr
        16 |         struct in6_addr _addr
        16 |           union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
        16 |             uint8_t [16] __u6_addr8
        16 |             uint16_t [8] __u6_addr16
        16 |             uint32_t [4] __u6_addr32
        32 |       uint16_t _sport
        34 |       uint16_t _dport
        40 |     void * value
        48 |   struct HashMap<class IP6FlowID, void *>::Elt * next
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a9039940 <../dummy_inc/click/hashmap.hh:294:5, line:300:5> line:294:12 referenced struct Elt definition
|-DefinitionData pass_in_registers trivially_copyable
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-public 'HashMap<IP6FlowID, void *>::Pair'
|-CXXRecordDecl 0x5572a9219e80 prev 0x5572a9039940 <col:5, col:12> col:12 implicit struct Elt
`-FieldDecl 0x5572a9219f20 <line:295:2, col:7> col:7 next 'HashMap<IP6FlowID, void *>::Elt *'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashMap<IP6FlowID, void *>::Elt" = type { %"struct.HashMap<IP6FlowID, void *>::Pair", %"struct.HashMap<IP6FlowID, void *>::Elt"* }
  NonVirtualBaseLLVMType:%"struct.HashMap<IP6FlowID, void *>::Elt" = type { %"struct.HashMap<IP6FlowID, void *>::Pair", %"struct.HashMap<IP6FlowID, void *>::Elt"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct char_array<60>
         0 |   char [60] x
           | [sizeof=60, dsize=60, align=1,
           |  nvsize=60, nvalign=1]

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5572a9028ed0 <../dummy_inc/click/type_traits.hh:165:1, line:167:1> line:165:28 struct char_array definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-TemplateArgument integral 60
|-PackedAttr 0x5572a921b558 <line:167:18>
|-CXXRecordDecl 0x5572a921b618 prev 0x5572a9028ed0 <line:165:21, col:28> col:28 implicit struct char_array
`-FieldDecl 0x5572a921b768 <line:166:5, col:13> col:10 x 'char [60]'

Layout: <CGRecordLayout
  LLVMType:%struct.char_array = type { [60 x i8] }
  NonVirtualBaseLLVMType:%struct.char_array = type { [60 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct HashMap<class IP6FlowID, class AddressTranslator::Mapping *>::Pair
         0 |   class IP6FlowID key
         0 |     class IP6Address _saddr
         0 |       struct in6_addr _addr
         0 |         union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |           uint8_t [16] __u6_addr8
         0 |           uint16_t [8] __u6_addr16
         0 |           uint32_t [4] __u6_addr32
        16 |     class IP6Address _daddr
        16 |       struct in6_addr _addr
        16 |         union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
        16 |           uint8_t [16] __u6_addr8
        16 |           uint16_t [8] __u6_addr16
        16 |           uint32_t [4] __u6_addr32
        32 |     uint16_t _sport
        34 |     uint16_t _dport
        40 |   class AddressTranslator::Mapping * value
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5572a903a8a8 <../dummy_inc/click/hashmap.hh:483:3, line:486:3> line:483:10 struct Pair definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable
| |-DefaultConstructor exists non_trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5572a921d9b8 prev 0x5572a903d9d0 <col:3, col:10> col:10 implicit struct Pair
|-FieldDecl 0x5572a921da58 <line:484:5, col:7> col:7 key 'IP6FlowID':'IP6FlowID'
`-FieldDecl 0x5572a921dab8 <line:485:5, col:8> col:8 referenced value 'AddressTranslator::Mapping *'

Layout: <CGRecordLayout
  LLVMType:%"struct.HashMap<IP6FlowID, AddressTranslator::Mapping *>::Pair" = type { %class.IP6FlowID, %"class.AddressTranslator::Mapping"* }
  NonVirtualBaseLLVMType:%"struct.HashMap<IP6FlowID, AddressTranslator::Mapping *>::Pair" = type { %class.IP6FlowID, %"class.AddressTranslator::Mapping"* }
  IsZeroInitializable:1
  BitFields:[
]>
