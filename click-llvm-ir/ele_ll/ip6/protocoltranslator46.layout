
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:18:2)
         0 |   uint32_t ip6_un1_flow
         4 |   uint16_t ip6_un1_plen
         6 |   uint8_t ip6_un1_nxt
         7 |   uint8_t ip6_un1_hlim
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:30:2)
     0:0-3 |   unsigned int ip6_un3_fc
     0:4-7 |   unsigned int ip6_un3_v
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:17:5)
         0 |   struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:18:2) ip6_un1
         0 |     uint32_t ip6_un1_flow
         4 |     uint16_t ip6_un1_plen
         6 |     uint8_t ip6_un1_nxt
         7 |     uint8_t ip6_un1_hlim
         0 |   uint8_t ip6_un2_vfc
         0 |   struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:30:2) ip6_un3
     0:0-3 |     unsigned int ip6_un3_fc
     0:4-7 |     unsigned int ip6_un3_v
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c3e3e38 prev 0x563a9c3d4738 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563a9c3e3f30 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x563a9c3e3fc0 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x563a9c3e4038 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x563a9c3e40f8 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x563a9c3e41c0 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x563a9c3e4338 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x563a9c3e4270 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x563a9c3e43e0 <col:24>
| `-OptimizeNoneAttr 0x563a9c3e4438 <col:34>
|-CXXMethodDecl 0x563a9c3e4480 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x563a9c3e4738 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x563a9c3e4530 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x563a9c3e45a8 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x563a9c3e4628 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x563a9c3e47f0 <line:229:7, col:14> col:7 private
|-FieldDecl 0x563a9c3e4828 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x563a9c3e4890 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x563a9c3e4918 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x563a9c3e4c38 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x563a9c3e49d0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x563a9c3e4a48 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x563a9c3e4ac0 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x563a9c3e4b40 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x563a9c3e4d50 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x563a9c3eb668 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x563a9c3eb668
| `-ParmVarDecl 0x563a9c3eb778 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x563a9c3eb818 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x563a9c3eb818
| `-ParmVarDecl 0x563a9c3eb928 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x563a9c44d410 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c3cffc8 prev 0x563a9c3cfd10 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563a9c3d00c0 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x563a9c3d0150 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x563a9c3d01b0 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x563a9c3d02a0 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x563a9c3d0398 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x563a9c3d0568 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x563a9c3d0418 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x563a9c3d0490 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x563a9c3d06f8 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x563a9c3d0630 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x563a9c3d07a0 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x563a9c3d08d8 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x563a9c3d0810 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x563a9c3d0a78 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x563a9c3d09b8 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x563a9c3d0c18 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x563a9c3d0b58 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x563a9c3d0cc0 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x563a9c3d0dc0 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x563a9c3d0ea0 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c3d0da0 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x563a9c3d0d80 <col:26> 'int' 1
| `-EnumConstantDecl 0x563a9c3d0e50 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x563a9c3d0eb8 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563a9c3d0e30 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x563a9c3d0e10 <col:44> 'int' 2
|-CXXMethodDecl 0x563a9c3d1000 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x563a9c3d0ee8 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x563a9c3d0f68 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x563a9c3d1158 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x563a9c3d10c8 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x563a9c3d1398 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x563a9c3d1218 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x563a9c3d1290 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x563a9c3d1448 <col:20>
| `-OptimizeNoneAttr 0x563a9c3d14a0 <col:30>
|-CXXMethodDecl 0x563a9c3d15a8 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x563a9c3d14e0 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x563a9c3d1650 <col:20>
| `-OptimizeNoneAttr 0x563a9c3d16a8 <col:30>
|-CXXMethodDecl 0x563a9c3d16f8 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x563a9c3d17c0 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x563a9c3d18d8 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x563a9c3d1960 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x563a9c3d19e8 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x563a9c3d1a70 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x563a9c3d1af8 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x563a9c3d1b88 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x563a9c3d1c48 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x563a9c3d1cd0 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x563a9c3d1d58 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x563a9c3d1de0 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x563a9c3d1e68 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x563a9c3d1ef0 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x563a9c3d1f80 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x563a9c3d2040 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x563a9c3d20d0 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x563a9c3d2220 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x563a9c3d2188 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x563a9c3d23b0 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x563a9c3d22e0 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x563a9c3d2650 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x563a9c3d2468 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x563a9c3d24e8 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x563a9c3d2568 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x563a9c3d2708 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x563a9c3d2810 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x563a9c3d2aa0 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c3d27f0 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x563a9c3d27d0 <col:33> 'int' 0
| |-EnumConstantDecl 0x563a9c3d28a0 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x563a9c3d2ab8 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c3d2880 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x563a9c3d2860 <col:32> 'int' 20
| |-EnumConstantDecl 0x563a9c3d2930 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x563a9c3d2ad0 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c3d2910 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x563a9c3d28f0 <col:38> 'int' 90
| |-EnumConstantDecl 0x563a9c3d29c0 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x563a9c3d2ae8 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c3d29a0 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x563a9c3d2980 <col:35> 'int' 100
| `-EnumConstantDecl 0x563a9c3d2a50 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x563a9c3d2b00 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563a9c3d2a30 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x563a9c3d2a10 <col:32> 'int' 2000
|-CXXMethodDecl 0x563a9c3d2b40 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x563a9c3d2f80 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x563a9c3d2df0 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x563a9c3d2e68 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563a9c3d3050 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x563a9c3d31d0 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x563a9c3d3100 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563a9c3d33d8 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x563a9c3d3288 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x563a9c3d3300 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563a9c3d34d8 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x563a9c3d3578 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x563a9c3d3640 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x563a9c3d36d0 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x563a9c3d3900 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c3d36b0 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x563a9c3d3690 <col:36> 'int' EnumConstant 0x563a9c3d3640 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x563a9c3d3720 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x563a9c3d3770 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x563a9c3d37c0 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x563a9c3d3810 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x563a9c3d3860 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x563a9c3d38b0 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x563a9c3d39e8 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x563a9c3d3928 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x563a9c3d3ab0 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x563a9c3d3b70 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x563a9c3d3c30 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x563a9c3d3cf0 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x563a9c3d3e08 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x563a9c3d3ed0 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x563a9c3d4050 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x563a9c3d3f80 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x563a9c3d4178 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x563a9c3d4378 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x563a9c3d4228 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x563a9c3d42a8 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x563a9c3e7b38 <col:54, line:127:5>
|   |-ParenExpr 0x563a9c3e79e8 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x563a9c3e79b8 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x563a9c3e76a8 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x563a9c3e7680 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x563a9c3e7668 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x563a9c3e7650 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x563a9c3e7620 <col:31> 'Router *' lvalue ->_router 0x563a9c3e5500
|   |   |         `-CXXThisExpr 0x563a9c3e7610 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x563a9c3e7708 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563a9c3e76e8 <col:48> 'int' 0
|   |   `-CallExpr 0x563a9c3e7918 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x563a9c3e7900 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563a9c3e78e0 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563a9bedcfb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563a9c3e7958 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c3e7778 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x563a9c3e7970 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c3e7798 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x563a9c3e7988 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563a9c3e77d0 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x563a9c3e79a0 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563a9c3e78c8 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563a9c3e78b0 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563a9c3e7868 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x563a9c3e7a80 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x563a9c3e7a18 <col:9> 'Router *' lvalue ->_router 0x563a9c3e5500
|   | | `-CXXThisExpr 0x563a9c3e7a08 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x563a9c3e7a68 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x563a9c3e7a48 <col:19> 'Router *' lvalue ParmVar 0x563a9c3d4228 'r' 'Router *'
|   `-BinaryOperator 0x563a9c3e7b18 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x563a9c3e7ab0 <col:9> 'int' lvalue ->_eindex 0x563a9c3e5568
|     | `-CXXThisExpr 0x563a9c3e7aa0 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x563a9c3e7b00 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x563a9c3e7ae0 <col:19> 'int' lvalue ParmVar 0x563a9c3d42a8 'eindex' 'int'
|-CXXMethodDecl 0x563a9c3d4500 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x563a9c3d4438 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x563a9c3d45d0 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x563a9c3d4698 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x563a9c3d4738 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x563a9c3d4988 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x563a9c3d4800 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x563a9c3d4880 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x563a9c3d4a38 <col:20>
| `-OptimizeNoneAttr 0x563a9c3d4a90 <col:30>
|-CXXMethodDecl 0x563a9c3daab8 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x563a9c3da9f0 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x563a9c3dab60 <col:20>
| `-OptimizeNoneAttr 0x563a9c3dabb8 <col:30>
|-CXXMethodDecl 0x563a9c3dac88 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x563a9c3dabf8 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x563a9c3dad30 <col:20>
| `-OptimizeNoneAttr 0x563a9c3dad88 <col:30>
|-CXXMethodDecl 0x563a9c3daf18 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x563a9c3dadc0 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x563a9c3dae40 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x563a9c3db0a8 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x563a9c3dafe0 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x563a9c3db1f8 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x563a9c3db168 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x563a9c3db348 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x563a9c3db2b8 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x563a9c3db498 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x563a9c3db408 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x563a9c3db758 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x563a9c3db550 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x563a9c3db5d0 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x563a9c3db678 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x563a9c3db830 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x563a9c3db8f0 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x563a9c3dbbc0 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x563a9c3dba70 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x563a9c3dbae8 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x563a9c3dbce8 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x563a9c3dbec0 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x563a9c3dbda0 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x563a9c3dbe20 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x563a9c3dc0a8 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x563a9c3dbf88 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x563a9c3dc008 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x563a9c3dc418 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x563a9c3dc168 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x563a9c3dc1e0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x563a9c3dc260 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x563a9c3e7120 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x563a9c3e7100 <col:106> 'int' 0
| `-ParmVarDecl 0x563a9c3dc2d8 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563a9c3e7158 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563a9c3e7138 <col:126> 'int' 0
|-CXXMethodDecl 0x563a9c3dc798 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x563a9c3dc4e8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x563a9c3dc560 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x563a9c3dc5e0 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x563a9c3dc658 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563a9c3e7190 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563a9c3e7170 <col:114> 'int' 0
|-CXXMethodDecl 0x563a9c3dcb28 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x563a9c3dc870 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x563a9c3dc8e8 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x563a9c3dc968 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x563a9c3e71a8 <col:96> 'int' 0
| `-ParmVarDecl 0x563a9c3dc9e0 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563a9c3e71e8 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563a9c3e71c8 <col:116> 'int' 0
|-CXXMethodDecl 0x563a9c3dcea8 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x563a9c3dcbf8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x563a9c3dcc70 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x563a9c3dccf0 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x563a9c3e7220 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x563a9c3e7200 <col:109> 'int' 0
| `-ParmVarDecl 0x563a9c3dcd68 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563a9c3e7258 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563a9c3e7238 <col:129> 'int' 0
|-CXXMethodDecl 0x563a9c3dd228 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x563a9c3dcf78 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x563a9c3dcff0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x563a9c3dd070 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x563a9c3dd0e8 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563a9c3e7290 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563a9c3e7270 <col:117> 'int' 0
|-CXXMethodDecl 0x563a9c3dd5b8 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x563a9c3dd300 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563a9c3dd378 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x563a9c3dd3f8 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x563a9c3e72a8 <col:99> 'int' 0
| `-ParmVarDecl 0x563a9c3dd470 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x563a9c3e72e8 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x563a9c3e72c8 <col:119> 'int' 0
|-CXXMethodDecl 0x563a9c3dd9d8 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x563a9c3dd688 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x563a9c3dd708 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x563a9c3dd780 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x563a9c3dd800 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x563a9c3e7320 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x563a9c3e7300 <col:108> 'int' 0
| `-ParmVarDecl 0x563a9c3dd880 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x563a9c3e7358 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x563a9c3e7338 <col:141> 'int' 0
|-CXXMethodDecl 0x563a9c3dddf8 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x563a9c3ddab0 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x563a9c3ddb30 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x563a9c3ddba8 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x563a9c3ddc28 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x563a9c3ddca8 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x563a9c3e7370 <col:121> 'int' 0
|-CXXMethodDecl 0x563a9c3de228 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x563a9c3dded8 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x563a9c3ddf58 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x563a9c3ddfd0 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x563a9c3de050 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x563a9c3e7390 <col:98> 'int' 0
| `-ParmVarDecl 0x563a9c3de0d0 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x563a9c3e73b0 <col:123> 'int' 0
|-CXXMethodDecl 0x563a9c3de4f0 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x563a9c3de300 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x563a9c3de380 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x563a9c3de400 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x563a9c3e73d0 <col:80> 'int' 0
|-EnumDecl 0x563a9c3de5a8 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x563a9c3de6b0 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x563a9c3de940 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c3de690 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x563a9c3de670 <col:42> 'int' 1
| |-EnumConstantDecl 0x563a9c3de740 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x563a9c3de958 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c3de720 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x563a9c3de700 <col:40> 'int' 2
| |-EnumConstantDecl 0x563a9c3de7d0 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x563a9c3de970 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c3de7b0 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x563a9c3de790 <col:44> 'int' 4
| |-EnumConstantDecl 0x563a9c3de860 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x563a9c3de988 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c3de840 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x563a9c3de820 <col:36> 'int' 7
| `-EnumConstantDecl 0x563a9c3de8f0 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x563a9c3de9a0 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563a9c3de8d0 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x563a9c3de8b0 <col:34> 'int' 6
|-CXXMethodDecl 0x563a9c3dec58 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x563a9c3de9c8 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x563a9c3dea68 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x563a9c3deae8 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x563a9c3deb60 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x563a9c3e7488 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x563a9c3e7470 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x563a9c3e7458 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x563a9c3e7438 <col:98, col:105> 'String' (CXXTemporary 0x563a9c3e7438)
|           `-CXXTemporaryObjectExpr 0x563a9c3e7400 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x563a9c3deef8 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x563a9c3ded28 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x563a9c3deda0 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x563a9c3dee18 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x563a9c3e7538 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x563a9c3e7520 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x563a9c3e7508 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x563a9c3e74e8 <col:94, col:101> 'String' (CXXTemporary 0x563a9c3e74e8)
| |         `-CXXTemporaryObjectExpr 0x563a9c3e74b0 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x563a9c3e7d20 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x563a9c3e7c98 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x563a9c3e7c68 <col:9> '<bound member function type>' ->add_task_handlers 0x563a9c3dec58
|     | `-CXXThisExpr 0x563a9c3e7c58 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x563a9c3e7cd8 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x563a9c3e7bd8 <col:27> 'Task *' lvalue ParmVar 0x563a9c3ded28 'task' 'Task *'
|     |-ImplicitCastExpr 0x563a9c3e7cf0 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x563a9c3e7bf8 <col:33> 'NotifierSignal *' lvalue ParmVar 0x563a9c3deda0 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x563a9c3e7d08 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x563a9c3e7c18 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x563a9c3de8f0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x563a9c3e7c38 <col:62> 'const String' lvalue ParmVar 0x563a9c3dee18 'prefix' 'const String &'
|-CXXMethodDecl 0x563a9c3df108 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x563a9c3defc0 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x563a9c3df038 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x563a9c3e75e8 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x563a9c3e75d0 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x563a9c3e75b8 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x563a9c3e7598 <col:70, col:77> 'String' (CXXTemporary 0x563a9c3e7598)
| |         `-CXXTemporaryObjectExpr 0x563a9c3e7560 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x563a9c3e7ef8 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x563a9c3e7e70 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x563a9c3e7e40 <col:9> '<bound member function type>' ->add_task_handlers 0x563a9c3dec58
|     | `-CXXThisExpr 0x563a9c3e7e30 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x563a9c3e7eb0 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x563a9c3e7db0 <col:27> 'Task *' lvalue ParmVar 0x563a9c3defc0 'task' 'Task *'
|     |-ImplicitCastExpr 0x563a9c3e7ec8 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x563a9c3e7dd0 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x563a9c3e7ee0 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x563a9c3e7df0 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x563a9c3de8f0 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x563a9c3e7e10 <col:57> 'const String' lvalue ParmVar 0x563a9c3df038 'prefix' 'const String &'
|-CXXMethodDecl 0x563a9c3df3e8 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x563a9c3df1d0 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563a9c3df250 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563a9c3df2c8 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x563a9c3df698 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x563a9c3df4b8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563a9c3df538 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563a9c3df5b8 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x563a9c3df988 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x563a9c3df768 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563a9c3df7e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563a9c3df860 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x563a9c3dfc38 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x563a9c3dfa58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563a9c3dfad8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563a9c3dfb58 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x563a9c3dfee8 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x563a9c3dfd08 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563a9c3dfd88 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563a9c3dfe08 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x563a9c3e0198 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x563a9c3dffb8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563a9c3e0038 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563a9c3e00b0 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x563a9c3e0448 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x563a9c3e0268 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563a9c3e02e8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563a9c3e0368 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x563a9c3e06f8 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x563a9c3e0518 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563a9c3e0598 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563a9c3e0618 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x563a9c3e09d8 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x563a9c3e07c8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563a9c3e0848 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563a9c3e08f0 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x563a9c3e0cb8 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x563a9c3e0aa8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563a9c3e0b28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563a9c3e0bd0 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x563a9c3e0f20 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x563a9c3e0d88 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x563a9c3e0e08 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x563a9c3e0e80 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x563a9c3e11c8 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x563a9c3e0ff0 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x563a9c3e1070 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x563a9c3e10e8 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x563a9c3e1478 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x563a9c3e1298 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563a9c3e1318 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563a9c3e1398 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x563a9c3e1728 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x563a9c3e1548 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563a9c3e15c8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563a9c3e1640 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x563a9c3e19d8 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x563a9c3e17f8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563a9c3e1878 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563a9c3e18f0 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x563a9c3e1c88 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x563a9c3e1aa8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563a9c3e1b28 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x563a9c3e1ba0 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x563a9c3e1fb8 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x563a9c3e1d58 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x563a9c3e1dd8 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x563a9c3e1e50 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x563a9c3e1ec8 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563a9c3e7600 <col:93> 'bool' false
|-CXXMethodDecl 0x563a9c3e21a0 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x563a9c3e2088 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x563a9c3e2108 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x563a9c3e2378 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x563a9c3e2260 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x563a9c3e22e0 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x563a9c3e2658 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x563a9c3e2438 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x563a9c3e24b0 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x563a9c3e2530 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x563a9c3e25a8 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x563a9c3e2948 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x563a9c3e2728 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x563a9c3e27a0 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x563a9c3e2820 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x563a9c3e2898 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x563a9c3e3ba0 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x563a9c3e3a48 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x563a9c3e3ac8 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x563a9c3e3d88 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x563a9c3e3c68 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x563a9c3e3ce8 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x563a9c3e3e38 prev 0x563a9c3d4738 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563a9c3e3f30 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x563a9c3e3fc0 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x563a9c3e4038 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x563a9c3e40f8 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x563a9c3e41c0 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x563a9c3e4338 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x563a9c3e4270 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x563a9c3e43e0 <col:24>
| | `-OptimizeNoneAttr 0x563a9c3e4438 <col:34>
| |-CXXMethodDecl 0x563a9c3e4480 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x563a9c3e4738 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x563a9c3e4530 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x563a9c3e45a8 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x563a9c3e4628 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x563a9c3e47f0 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x563a9c3e4828 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x563a9c3e4890 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x563a9c3e4918 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x563a9c3e4c38 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x563a9c3e49d0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x563a9c3e4a48 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x563a9c3e4ac0 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x563a9c3e4b40 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x563a9c3e4d50 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x563a9c3eb668 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x563a9c3eb668
| | `-ParmVarDecl 0x563a9c3eb778 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x563a9c3eb818 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x563a9c3eb818
| | `-ParmVarDecl 0x563a9c3eb928 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x563a9c44d410 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x563a9c3e4dc8 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x563a9c3e4e68 <col:38> "" ""
|-CXXMethodDecl 0x563a9c3e4ef8 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x563a9c3e4f98 <col:44> "" ""
|-AccessSpecDecl 0x563a9c3e5008 <line:260:3, col:10> col:3 private
|-EnumDecl 0x563a9c3e5030 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x563a9c3e5130 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x563a9c3e5180 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563a9c3e5110 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x563a9c3e50f0 <col:27> 'int' 4
|-FieldDecl 0x563a9c3e5238 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x563a9c3e53e8 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x563a9c3e54a0 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x563a9c3e5500 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x563a9c3e5568 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x563a9c3e56b8 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x563a9c3e55f8 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x563a9c3e5868 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x563a9c3e5778 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x563a9c3e5a48 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x563a9c3e5928 <col:20> col:23 'int'
| `-ParmVarDecl 0x563a9c3e59a8 <col:25> col:28 'int'
|-CXXMethodDecl 0x563a9c3e5cf0 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x563a9c3e5b10 <col:23> col:26 'int'
| |-ParmVarDecl 0x563a9c3e5b90 <col:28> col:31 'int'
| `-ParmVarDecl 0x563a9c3e5c08 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x563a9c3e5da8 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x563a9c3e5e70 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x563a9c3e5ec0 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x563a9c3e5f10 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x563a9c3e60f0 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x563a9c3e5fa0 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x563a9c3e6018 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563a9c3e6398 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x563a9c3e61b8 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x563a9c3e6238 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x563a9c3e62b0 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x563a9c3e65b8 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x563a9c3e6468 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x563a9c3e64e8 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x563a9c3e68f0 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x563a9c3e6678 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x563a9c3e66f8 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x563a9c3e6770 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x563a9c3e67f0 <col:57> col:60 'int'
|-CXXMethodDecl 0x563a9c3e6ad8 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x563a9c3e69c0 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x563a9c3e6a40 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x563a9c3e6c28 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x563a9c3e6b98 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x563a9c3e6fa8 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x563a9c3e6ce8 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x563a9c3e6d68 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x563a9c3e6de0 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x563a9c3e6e60 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x563a9c3e70c0 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ProtocolTranslator46
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c3f0878 <../elements/ip6/protocoltranslator46.hh:29:1, line:54:1> line:29:7 class ProtocolTranslator46 definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x563a9c3f09d8 <col:1, col:7> col:7 implicit referenced class ProtocolTranslator46
|-AccessSpecDecl 0x563a9c3f0a68 <line:32:2, col:8> col:2 public
|-CXXConstructorDecl 0x563a9c3f0af0 <line:34:3, col:24> col:3 ProtocolTranslator46 'void ()'
|-CXXDestructorDecl 0x563a9c3f0be0 <line:35:3, col:25> col:3 ~ProtocolTranslator46 'void ()' noexcept-unevaluated 0x563a9c3f0be0
| `-Overrides: [ 0x563a9c3d02a0 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x563a9c3f0d10 <line:37:3, col:67> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x563a9c3d16f8 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x563a9c3f1c60 <col:34, col:67>
|   `-ReturnStmt 0x563a9c3f1c50 <col:36, col:43>
|     `-ImplicitCastExpr 0x563a9c3f1c38 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x563a9c3f1c08 <col:43> 'const char [21]' lvalue "ProtocolTranslator46"
|-CXXMethodDecl 0x563a9c3f0dd8 <line:38:3, col:54> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x563a9c3d17c0 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x563a9c3f1cc0 <col:34, col:54>
|   `-ReturnStmt 0x563a9c3f1cb0 <col:36, col:43>
|     `-ImplicitCastExpr 0x563a9c3f1c98 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x563a9c3f1c78 <col:43> 'const char []' lvalue Var 0x563a9c3d1a70 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x563a9c3f0fa0 <line:39:3, col:32> col:8 push 'void (int, Packet *)'
| |-Overrides: [ 0x563a9c3d0568 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x563a9c3f0e90 <col:13, col:17> col:17 port 'int'
| `-ParmVarDecl 0x563a9c3f0f08 <col:23, col:31> col:31 p 'Packet *'
|-CXXMethodDecl 0x563a9c3f10f0 <line:40:3, col:27> col:8 handle_ip4 'void (Packet *)'
| `-ParmVarDecl 0x563a9c3f1060 <col:19, col:26> col:27 'Packet *'
|-AccessSpecDecl 0x563a9c3f1198 <line:42:1, col:8> col:1 private
|-CXXMethodDecl 0x563a9c3f1438 <line:44:3, line:47:34> line:44:12 make_icmp_translate46 'Packet *(IP6Address, IP6Address, unsigned char *, unsigned char)'
| |-ParmVarDecl 0x563a9c3f11d0 <col:34, col:45> col:45 ip6_src 'IP6Address'
| |-ParmVarDecl 0x563a9c3f1248 <line:45:6, col:17> col:17 ip6_dst 'IP6Address'
| |-ParmVarDecl 0x563a9c3f12c8 <line:46:6, col:21> col:21 a 'unsigned char *'
| `-ParmVarDecl 0x563a9c3f1348 <line:47:6, col:20> col:20 payload_length 'unsigned char'
|-CXXMethodDecl 0x563a9c3f1768 <line:49:3, line:52:24> line:49:12 make_translate46 'Packet *(IP6Address, IP6Address, click_ip *, unsigned char *)'
| |-ParmVarDecl 0x563a9c3f1508 <col:29, col:40> col:40 src 'IP6Address'
| |-ParmVarDecl 0x563a9c3f1580 <line:50:8, col:19> col:19 dst 'IP6Address'
| |-ParmVarDecl 0x563a9c3f15f8 <line:51:8, col:19> col:19 ip 'click_ip *'
| `-ParmVarDecl 0x563a9c3f1678 <line:52:8, col:23> col:23 a 'unsigned char *'
|-CXXConstructorDecl 0x563a9c3f1858 <line:29:7> col:7 implicit ProtocolTranslator46 'void (const ProtocolTranslator46 &)' inline default_delete noexcept-unevaluated 0x563a9c3f1858
| `-ParmVarDecl 0x563a9c3f1968 <col:7> col:7 'const ProtocolTranslator46 &'
`-CXXMethodDecl 0x563a9c3f1a08 <col:7> col:7 implicit operator= 'ProtocolTranslator46 &(const ProtocolTranslator46 &)' inline default_delete noexcept-unevaluated 0x563a9c3f1a08
  `-ParmVarDecl 0x563a9c3f1b18 <col:7> col:7 'const ProtocolTranslator46 &'

Layout: <CGRecordLayout
  LLVMType:%class.ProtocolTranslator46 = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.ProtocolTranslator46.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_ip6
         0 |   union click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:17:5) ip6_ctlun
         0 |     struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:18:2) ip6_un1
         0 |       uint32_t ip6_un1_flow
         4 |       uint16_t ip6_un1_plen
         6 |       uint8_t ip6_un1_nxt
         7 |       uint8_t ip6_un1_hlim
         0 |     uint8_t ip6_un2_vfc
         0 |     struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:30:2) ip6_un3
     0:0-3 |       unsigned int ip6_un3_fc
     0:4-7 |       unsigned int ip6_un3_v
         8 |   struct in6_addr ip6_src
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   struct in6_addr ip6_dst
        24 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
        24 |       uint8_t [16] __u6_addr8
        24 |       uint16_t [8] __u6_addr16
        24 |       uint32_t [4] __u6_addr32
           | [sizeof=40, dsize=40, align=4,
           |  nvsize=40, nvalign=4]

*** Dumping AST Record Layout
         0 | struct click_ip
     0:0-3 |   unsigned int ip_hl
     0:4-7 |   unsigned int ip_v
         1 |   uint8_t ip_tos
         2 |   uint16_t ip_len
         4 |   uint16_t ip_id
         6 |   uint16_t ip_off
         8 |   uint8_t ip_ttl
         9 |   uint8_t ip_p
        10 |   uint16_t ip_sum
        12 |   struct in_addr ip_src
        12 |     in_addr_t s_addr
        16 |   struct in_addr ip_dst
        16 |     in_addr_t s_addr
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c05e148 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563a9c05e268 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x563a9c05e2f8 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x563a9c05e3c8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x563a9c05e4b0 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x563a9c05f368 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x563a9c05f210 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563a9c05f518 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x563a9c05f420 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x563a9c05f660 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x563a9c05f5d0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x563a9c05f7a8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x563a9c05f718 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563a9c05f8f0 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x563a9c05f860 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563a9c05f9b8 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x563a9c05fb38 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x563a9c05fa70 <col:28> col:31 'int'
|-CXXMethodDecl 0x563a9c05fc00 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x563a9c05fd48 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x563a9c05fcb8 <col:28> col:31 'int'
|-CXXMethodDecl 0x563a9c05fec8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x563a9c05fe00 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563a9c060010 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x563a9c05ff80 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563a9c0600d8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x563a9c060318 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x563a9c060188 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x563a9c060200 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563a9c060568 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x563a9c0603d8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563a9c060450 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563a9c060618 <col:86> "" ""
|-CXXMethodDecl 0x563a9c060888 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x563a9c0606f8 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x563a9c060770 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563a9c060a38 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x563a9c060948 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x563a9c060be8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x563a9c060af0 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x563a9c060eb8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x563a9c060ca0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x563a9c060d18 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x563a9c060d90 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563a9c061220 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x563a9c060f80 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x563a9c060ff8 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563a9c061070 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563a9c0612d8 <col:115> "" ""
|-AccessSpecDecl 0x563a9c061348 <line:84:3, col:10> col:3 private
|-FieldDecl 0x563a9c061380 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563a9c061828 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x563a9c061828
| `-ParmVarDecl 0x563a9c061938 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x563a9c0619d8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x563a9c0619d8
| `-ParmVarDecl 0x563a9c061ae8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x563a9c0a91d8 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x563a9c36a8f0 <col:7>
|-CXXConstructorDecl 0x563a9c0a92b0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x563a9c0a92b0
| `-ParmVarDecl 0x563a9c0a93c8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x563a9c0a9438 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x563a9c0a9438
| `-ParmVarDecl 0x563a9c0a9548 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x563a9c36d290 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c359460 prev 0x563a9c34e080 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563a9c359558 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x563a9c359648 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x563a9c359778 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x563a9c3598f8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x563a9c359a78 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x563a9c359bf8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x563a9c36aa58 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x563a9c36b2c8 <col:11>
|-CXXDestructorDecl 0x563a9c36ab30 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x563a9c36ac68 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x563a9c36ac68
| `-ParmVarDecl 0x563a9c36ad78 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x563a9c36ae18 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x563a9c36ae18
| `-ParmVarDecl 0x563a9c36af28 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x563a9c36dc88 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x563a9c36dd98 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x563a9c36e018 <col:11>
|   `-ReturnStmt 0x563a9c36e008 <col:11>
|     `-UnaryOperator 0x563a9c36dff0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563a9c36dfe0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x563a9c36de08 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x563a9c36de08
  `-ParmVarDecl 0x563a9c36df18 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c359c60 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563a9c359d78 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x563a9c359e18 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x563a9c359e80 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x563a9c359ee8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x563a9c359f50 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x563a9c359fb0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x563a9c35a070 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x563a9c35a0d0 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x563a9c35a130 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x563a9c36a968 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x563a9c359e18 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x563a9c36b2d8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x563a9c36b330 <col:12>
|-CXXConstructorDecl 0x563a9c36af98 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x563a9c36af98
| `-ParmVarDecl 0x563a9c36b0a8 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x563a9c36b148 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x563a9c36b148
| `-ParmVarDecl 0x563a9c36b258 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x563a9c36d370 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c347780 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563a9c347898 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x563a9c347928 <col:16, col:22> col:16 public
|-EnumDecl 0x563a9c347950 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x563a9c347a50 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x563a9c347b30 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c347a30 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x563a9c347a10 <col:21> 'int' 28
| `-EnumConstantDecl 0x563a9c347ae0 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x563a9c347b48 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563a9c347ac0 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x563a9c347aa0 <col:22> 'int' 64
|-CXXMethodDecl 0x563a9c347e88 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x563a9c347b70 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563a9c347bf0 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x563a9c347c68 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563a9c347ce0 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563a9c347f48 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x563a9c348148 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x563a9c347fc0 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x563a9c348038 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563a9c3481f8 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x563a9c348358 <line:55:5, col:91> col:35 used make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x563a9c348268 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563a9c348400 <col:72> warn_unused_result ""
|-TypedefDecl 0x563a9c348730 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x563a9c3486c0 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x563a9c348660 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x563a9c348620 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x563a9be41310 'void'
|       |-PointerType 0x563a9c0946f0 'unsigned char *'
|       | `-BuiltinType 0x563a9be41410 'unsigned char'
|       |-TypedefType 0x563a9bee61f0 'size_t' sugar
|       | |-Typedef 0x563a9beb1af0 'size_t'
|       | `-BuiltinType 0x563a9be41470 'unsigned long'
|       `-PointerType 0x563a9be41b10 'void *'
|         `-BuiltinType 0x563a9be41310 'void'
|-CXXMethodDecl 0x563a9c348ba8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x563a9c3487a0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x563a9c348818 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563a9c3488b0 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x563a9c348930 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x563a9c35b5c0 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x563a9c35b5a8 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x563a9c35b570 <col:58> 'int' 0
| |-ParmVarDecl 0x563a9c3489b0 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x563a9c35b5e8 <col:76> 'int' 0
| |-ParmVarDecl 0x563a9c348a30 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x563a9c35b608 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x563a9c348c78 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x563a9c348d20 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x563a9c348de0 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x563a9c348e80 <col:20>
| `-OptimizeNoneAttr 0x563a9c348ed8 <col:30>
|-CXXMethodDecl 0x563a9c348f48 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x563a9c348fe8 <col:20>
| `-OptimizeNoneAttr 0x563a9c349040 <col:30>
|-CXXMethodDecl 0x563a9c3490b8 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x563a9c349158 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x563a9c349208 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x563a9c3492a8 <col:20>
| |-OptimizeNoneAttr 0x563a9c349300 <col:30>
| `-WarnUnusedResultAttr 0x563a9c349328 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x563a9c349380 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x563a9c349420 <col:20>
| `-OptimizeNoneAttr 0x563a9c349478 <col:30>
|-CXXMethodDecl 0x563a9c3494c8 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x563a9c349568 <col:20>
| `-OptimizeNoneAttr 0x563a9c3495c0 <col:30>
|-CXXMethodDecl 0x563a9c349608 <line:81:5, col:58> col:49 used length 'uint32_t () const'
| |-NoInlineAttr 0x563a9c3496a8 <col:20>
| `-OptimizeNoneAttr 0x563a9c349700 <col:30>
|-CXXMethodDecl 0x563a9c349748 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x563a9c349808 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x563a9c3498d0 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x563a9c349998 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x563a9c349a58 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x563a9c349b78 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x563a9c35b6d0 <col:54, line:99:5>
|   `-ReturnStmt 0x563a9c35b6c0 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x563a9c35b6a8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x563a9c35b678 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x563a9c35a468
|         `-CXXThisExpr 0x563a9c35b668 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x563a9c349d18 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x563a9c349c28 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x563a9c35b780 <col:67, line:103:5>
|   `-BinaryOperator 0x563a9c35b760 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x563a9c35b6f8 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x563a9c35a468
|     | `-CXXThisExpr 0x563a9c35b6e8 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x563a9c35b748 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x563a9c35b728 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x563a9c349c28 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x563a9c349e10 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x563a9c363b30 <col:33, line:107:5>
|   `-ReturnStmt 0x563a9c363b20 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x563a9c35b7d8 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x563a9c35b7a8 <col:16> 'void *' lvalue ->_destructor_argument 0x563a9c35a4d0
|         `-CXXThisExpr 0x563a9c35b798 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x563a9c349ed0 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x563a9c364160 <col:25, line:113:5>
|   |-ParenExpr 0x563a9c363ea8 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x563a9c363e78 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x563a9c363be8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x563a9c363bc0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x563a9c363b88 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x563a9c363b58 <col:24> '<bound member function type>' ->shared 0x563a9c348f48
|   |   |       `-ImplicitCastExpr 0x563a9c363ba8 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x563a9c363b48 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x563a9c363c48 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563a9c363c28 <col:42> 'int' 0
|   |   `-CallExpr 0x563a9c363dd8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x563a9c363dc0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563a9c363da0 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563a9bedcfb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563a9c363e18 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c363cb8 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x563a9c363e30 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c363ce0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563a9c363e48 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563a9c363d18 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x563a9c363e60 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563a9c363d88 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563a9c363d70 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563a9c363d38 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x563a9c3640a8 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x563a9c363ed8 <col:2> 'unsigned char *' lvalue ->_head 0x563a9c35a270
|   | | `-CXXThisExpr 0x563a9c363ec8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x563a9c364090 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x563a9c364070 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x563a9c363f18 <col:10> 'unsigned char *' lvalue ->_data 0x563a9c35a2d8
|   |     | `-CXXThisExpr 0x563a9c363f08 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x563a9c364058 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x563a9c364038 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x563a9c363f58 <col:18> 'unsigned char *' lvalue ->_tail 0x563a9c35a340
|   |         | `-CXXThisExpr 0x563a9c363f48 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x563a9c364020 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x563a9c364000 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x563a9c363f98 <col:26> 'unsigned char *' lvalue ->_end 0x563a9c35a3a8
|   |             | `-CXXThisExpr 0x563a9c363f88 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x563a9c363fe8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x563a9c363fc8 <col:33> 'int' 0
|   `-BinaryOperator 0x563a9c364140 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x563a9c3640d8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x563a9c35a468
|     | `-CXXThisExpr 0x563a9c3640c8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x563a9c364128 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x563a9c364108 <col:16> 'int' 0
|-CXXMethodDecl 0x563a9c34a010 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x563a9c349f80 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563a9c34a0b8 <col:20>
| |-OptimizeNoneAttr 0x563a9c34a110 <col:30>
| `-WarnUnusedResultAttr 0x563a9c34a138 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x563a9c34a208 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x563a9c34a178 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563a9c34a2b0 <col:20>
| |-OptimizeNoneAttr 0x563a9c34a308 <col:30>
| `-WarnUnusedResultAttr 0x563a9c34a330 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x563a9c34a468 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x563a9c34a370 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563a9c34a510 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x563a9c34a610 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x563a9c34a580 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563a9c34a6b8 <col:20>
| `-OptimizeNoneAttr 0x563a9c34a710 <col:30>
|-CXXMethodDecl 0x563a9c34a7d8 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x563a9c34a748 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563a9c34a880 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x563a9c34a980 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x563a9c34a8f0 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x563a9c34aa28 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x563a9c34ab28 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x563a9c34aa98 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563a9c34abd0 <col:20>
| `-OptimizeNoneAttr 0x563a9c34ac28 <col:30>
|-CXXMethodDecl 0x563a9c34adb8 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x563a9c34ac68 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x563a9c34ace0 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x563a9c35b628 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x563a9c34ae68 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x563a9c34b068 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x563a9c34aee0 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x563a9c34af58 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563a9c34b278 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x563a9c34b128 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x563a9c34b1a0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563a9c34b488 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x563a9c34b338 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x563a9c34b3b8 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x563a9c35b638 <col:39> 'int' 0
|-CXXMethodDecl 0x563a9c34b558 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x563a9c34b620 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x563a9c34b6e8 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x563a9c34b7a8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x563a9c34b870 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x563a9c34b9b8 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x563a9c34b928 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x563a9c34bb88 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x563a9c34ba78 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x563a9c34baf0 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563a9c34bc58 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x563a9c34bd18 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x563a9c34bdb8 <col:20>
| `-OptimizeNoneAttr 0x563a9c34be10 <col:30>
|-CXXMethodDecl 0x563a9c34be60 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x563a9c34bf00 <col:20>
| `-OptimizeNoneAttr 0x563a9c34bf58 <col:30>
|-CXXMethodDecl 0x563a9c34bfa8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x563a9c34c068 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x563a9c34c130 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x563a9c34c1d0 <col:20>
| `-OptimizeNoneAttr 0x563a9c34c228 <col:30>
|-CXXMethodDecl 0x563a9c34c378 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x563a9c34c268 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x563a9c34c2e0 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563a9c34c4c8 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x563a9c34c438 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563a9c34c590 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x563a9c34c650 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x563a9c34c6f0 <col:20>
| `-OptimizeNoneAttr 0x563a9c34c748 <col:30>
|-CXXMethodDecl 0x563a9c34c798 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x563a9c34c838 <col:20>
| `-OptimizeNoneAttr 0x563a9c34c890 <col:30>
|-CXXMethodDecl 0x563a9c34c8e0 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x563a9c34c9a8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x563a9c34ca48 <col:20>
| `-OptimizeNoneAttr 0x563a9c34caa0 <col:30>
|-CXXMethodDecl 0x563a9c34cae8 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x563a9c34cc08 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x563a9c34cda8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x563a9c34cce0 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x563a9c34ce98 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x563a9c34cf38 <col:20>
| `-OptimizeNoneAttr 0x563a9c34cf90 <col:30>
|-CXXMethodDecl 0x563a9c34cfe0 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x563a9c34d0a0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x563a9c34d2d8 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x563a9c34d150 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x563a9c34d1c8 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563a9c34d388 <col:20>
| `-OptimizeNoneAttr 0x563a9c34d3e0 <col:30>
|-CXXMethodDecl 0x563a9c34d488 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x563a9c34d528 <col:20>
| `-OptimizeNoneAttr 0x563a9c34d580 <col:30>
|-CXXMethodDecl 0x563a9c34d5d0 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x563a9c34d670 <col:20>
| `-OptimizeNoneAttr 0x563a9c34d6c8 <col:30>
|-CXXMethodDecl 0x563a9c34d710 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x563a9c34d7b0 <col:20>
| `-OptimizeNoneAttr 0x563a9c34d808 <col:30>
|-CXXMethodDecl 0x563a9c34d908 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x563a9c34d840 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x563a9c34d9b0 <col:20>
| `-OptimizeNoneAttr 0x563a9c34da08 <col:30>
|-CXXMethodDecl 0x563a9c34dbc8 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x563a9c34da40 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x563a9c34dab8 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563a9c34dc78 <col:20>
| `-OptimizeNoneAttr 0x563a9c34dcd0 <col:30>
|-CXXMethodDecl 0x563a9c34dd78 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x563a9c34de98 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x563a9c34dfb8 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x563a9c34e058 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x563a9c34e080 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x563a9c34e1a8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x563a9c34e248 <col:20>
| `-OptimizeNoneAttr 0x563a9c34e2a0 <col:30>
|-CXXMethodDecl 0x563a9c34e348 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x563a9c34e3e8 <col:20>
| `-OptimizeNoneAttr 0x563a9c34e440 <col:30>
|-AccessSpecDecl 0x563a9c34e468 <line:344:3, col:9> col:3 public
|-EnumDecl 0x563a9c34e490 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x563a9c34e590 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x563a9c34e5e0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563a9c34e570 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x563a9c34e550 <col:14> 'int' 48
|-CXXMethodDecl 0x563a9c34e648 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x563a9c34e6e8 <col:20>
| `-OptimizeNoneAttr 0x563a9c34e740 <col:30>
|-CXXMethodDecl 0x563a9c34e7b8 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x563a9c34e858 <col:20>
| `-OptimizeNoneAttr 0x563a9c34e8b0 <col:30>
|-CXXMethodDecl 0x563a9c34e978 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x563a9c34e8e8 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x563a9c34eb18 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x563a9c34ecb8 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x563a9c34ebc8 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x563a9c34ed60 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x563a9c34ee60 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563a9c34f210 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c34ee40 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x563a9c34ee20 <col:9> 'int' 0
| |-EnumConstantDecl 0x563a9c34eef0 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563a9c34f228 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c34eed0 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x563a9c34eeb0 <col:14> 'int' 1
| |-EnumConstantDecl 0x563a9c34ef80 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563a9c34f240 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c34ef60 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x563a9c34ef40 <col:14> 'int' 2
| |-EnumConstantDecl 0x563a9c34f010 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563a9c34f258 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c34eff0 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x563a9c34efd0 <col:14> 'int' 3
| |-EnumConstantDecl 0x563a9c34f0a0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563a9c34f270 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c34f080 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x563a9c34f060 <col:13> 'int' 4
| |-EnumConstantDecl 0x563a9c34f130 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x563a9c34f288 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c34f110 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x563a9c34f0f0 <col:13> 'int' 5
| `-EnumConstantDecl 0x563a9c34f1c0 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x563a9c34f2a0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563a9c34f1a0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x563a9c34f180 <col:14> 'int' 6
|-CXXMethodDecl 0x563a9c34f308 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x563a9c34f3a8 <col:20>
| `-OptimizeNoneAttr 0x563a9c34f400 <col:30>
|-CXXMethodDecl 0x563a9c34f4f8 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x563a9c34f438 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x563a9c34f5a0 <col:20>
| `-OptimizeNoneAttr 0x563a9c34f5f8 <col:30>
|-CXXMethodDecl 0x563a9c34f668 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x563a9c34f790 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x563a9c34f908 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x563a9c34f840 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x563a9c34f9d0 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x563a9c34fa98 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x563a9c34fbd8 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x563a9c34fb48 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x563a9c34fc80 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x563a9c34fd80 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x563a9c34ff80 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c34fd60 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x563a9c34fd40 <col:23> 'int' 0
| |-EnumConstantDecl 0x563a9c34fe10 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x563a9c34ff98 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c34fdf0 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x563a9c34fdd0 <col:45> 'int' 4
| |-EnumConstantDecl 0x563a9c34fea0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x563a9c34ffb0 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c34fe80 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x563a9c34fe60 <col:24> 'int' 0
| `-EnumConstantDecl 0x563a9c34ff30 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x563a9c34ffc8 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563a9c34ff10 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x563a9c34fef0 <col:47> 'int' 16
|-CXXMethodDecl 0x563a9c350028 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x563a9c350198 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x563a9c3500d8 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x563a9c350240 <col:20>
| `-OptimizeNoneAttr 0x563a9c350298 <col:30>
|-CXXMethodDecl 0x563a9c3502e8 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x563a9c364280 <col:18, col:36>
|   `-ReturnStmt 0x563a9c364270 <col:20, col:33>
|     `-ImplicitCastExpr 0x563a9c364258 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x563a9c364238 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x563a9c364208 <col:27> '<bound member function type>' ->xanno 0x563a9c34e348
|           `-CXXThisExpr 0x563a9c3641f8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x563a9c3503e0 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x563a9c364390 <col:30, col:48>
|   `-ReturnStmt 0x563a9c364380 <col:32, col:45>
|     `-ImplicitCastExpr 0x563a9c364368 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x563a9c364348 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x563a9c364318 <col:39> '<bound member function type>' ->xanno 0x563a9c34e1a8
|           `-CXXThisExpr 0x563a9c364308 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x563a9c3504c8 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x563a9c364528 <col:24, col:50>
|   `-ReturnStmt 0x563a9c364518 <col:26, col:47>
|     `-UnaryOperator 0x563a9c364500 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x563a9c3644e0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x563a9c3644c8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563a9c364478 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x563a9c359778
|         |   `-CXXMemberCallExpr 0x563a9c364458 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x563a9c364428 <col:34> '<bound member function type>' ->xanno 0x563a9c34e348
|         |       `-CXXThisExpr 0x563a9c364418 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x563a9c3644a8 <col:46> 'int' 0
|-CXXMethodDecl 0x563a9c3505b8 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x563a9c3646f8 <col:36, col:62>
|   `-ReturnStmt 0x563a9c3646e8 <col:38, col:59>
|     `-UnaryOperator 0x563a9c3646d0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x563a9c3646b0 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x563a9c364698 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563a9c364610 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x563a9c359778
|         |   `-CXXMemberCallExpr 0x563a9c3645f0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x563a9c3645c0 <col:46> '<bound member function type>' ->xanno 0x563a9c34e1a8
|         |       `-CXXThisExpr 0x563a9c3645b0 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x563a9c364640 <col:58> 'int' 0
|-CXXMethodDecl 0x563a9c3506d8 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x563a9c364890 <col:26, col:53>
|   `-ReturnStmt 0x563a9c364880 <col:28, col:50>
|     `-UnaryOperator 0x563a9c364868 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x563a9c364848 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x563a9c364830 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563a9c3647e0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x563a9c359a78
|         |   `-CXXMemberCallExpr 0x563a9c3647c0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x563a9c364790 <col:36> '<bound member function type>' ->xanno 0x563a9c34e348
|         |       `-CXXThisExpr 0x563a9c364780 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x563a9c364810 <col:49> 'int' 0
|-CXXMethodDecl 0x563a9c3507f8 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x563a9c364a68 <col:38, col:65>
|   `-ReturnStmt 0x563a9c364a58 <col:40, col:62>
|     `-UnaryOperator 0x563a9c364a40 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x563a9c364a20 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x563a9c364a08 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563a9c364978 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x563a9c359a78
|         |   `-CXXMemberCallExpr 0x563a9c364958 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x563a9c364928 <col:48> '<bound member function type>' ->xanno 0x563a9c34e1a8
|         |       `-CXXThisExpr 0x563a9c364918 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x563a9c3649a8 <col:61> 'int' 0
|-CXXMethodDecl 0x563a9c3509a8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x563a9c3508b0 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x563a9c365138 <col:34, line:463:5>
|   |-ParenExpr 0x563a9c364f80 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x563a9c364f50 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x563a9c364bb8 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563a9c364b88 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563a9c364ad8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563a9c364ac0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563a9c364a80 <col:23> 'int' lvalue ParmVar 0x563a9c3508b0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563a9c364aa0 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563a9c364b68 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563a9c364b38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563a9c364af8 <col:33> 'int' lvalue ParmVar 0x563a9c3508b0 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x563a9c364b50 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x563a9c364b18 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563a9c34e590 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x563a9c364c18 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563a9c364bf8 <col:56> 'int' 0
|   |   `-CallExpr 0x563a9c364eb0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x563a9c364e98 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563a9c364e78 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563a9bedcfb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563a9c364ef0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c364d08 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x563a9c364f08 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c364d38 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563a9c364f20 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563a9c364d70 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x563a9c364f38 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563a9c364e60 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563a9c364e48 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563a9c364e08 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x563a9c365128 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x563a9c365110 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x563a9c3650f0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x563a9c3650c0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563a9c365070 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x563a9c359778
|         |   `-CXXMemberCallExpr 0x563a9c365050 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x563a9c365020 <col:9> '<bound member function type>' ->xanno 0x563a9c34e1a8
|         |       `-CXXThisExpr 0x563a9c365010 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x563a9c3650d8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x563a9c3650a0 <col:21> 'int' lvalue ParmVar 0x563a9c3508b0 'i' 'int'
|-CXXMethodDecl 0x563a9c350bf8 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x563a9c350a68 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x563a9c350ae0 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x563a9c3657c8 <col:40, line:472:5>
|   |-ParenExpr 0x563a9c3655e0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x563a9c3655b0 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x563a9c365290 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563a9c365260 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563a9c3651b0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563a9c365198 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563a9c365158 <col:23> 'int' lvalue ParmVar 0x563a9c350a68 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563a9c365178 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563a9c365240 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563a9c365210 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563a9c3651d0 <col:33> 'int' lvalue ParmVar 0x563a9c350a68 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x563a9c365228 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x563a9c3651f0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563a9c34e590 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x563a9c3652f0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563a9c3652d0 <col:56> 'int' 0
|   |   `-CallExpr 0x563a9c365510 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x563a9c3654f8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563a9c3654d8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563a9bedcfb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563a9c365550 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c365360 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x563a9c365568 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c365390 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563a9c365580 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563a9c3653c8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x563a9c365598 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563a9c3654c0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563a9c3654a8 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563a9c365468 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x563a9c3657a8 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x563a9c365750 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x563a9c365720 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x563a9c3656d0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x563a9c359778
|     | |   `-CXXMemberCallExpr 0x563a9c3656b0 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x563a9c365680 <col:2> '<bound member function type>' ->xanno 0x563a9c34e348
|     | |       `-CXXThisExpr 0x563a9c365670 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x563a9c365738 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x563a9c365700 <col:14> 'int' lvalue ParmVar 0x563a9c350a68 'i' 'int'
|     `-ImplicitCastExpr 0x563a9c365790 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x563a9c365770 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x563a9c350ae0 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x563a9c350de8 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x563a9c350cf0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x563a9c365f48 <col:36, line:485:5>
|   |-ParenExpr 0x563a9c365cb0 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x563a9c365c80 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563a9c365960 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563a9c365930 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563a9c365840 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563a9c365828 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563a9c3657e8 <col:23> 'int' lvalue ParmVar 0x563a9c350cf0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563a9c365808 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563a9c365910 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563a9c3658f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563a9c365860 <col:33> 'int' lvalue ParmVar 0x563a9c350cf0 'i' 'int'
|   |   |     `-BinaryOperator 0x563a9c3658d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563a9c3658c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563a9c365880 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563a9c34e590 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563a9c3658a0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x563a9c3659c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563a9c3659a0 <col:60> 'int' 0
|   |   `-CallExpr 0x563a9c365be0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563a9c365bc8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563a9c365ba8 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563a9bedcfb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563a9c365c20 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c365a30 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x563a9c365c38 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c365a68 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563a9c365c50 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563a9c365aa0 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x563a9c365c68 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563a9c365b90 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563a9c365b78 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563a9c365b38 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x563a9c365f38 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x563a9c365f20 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x563a9c365f08 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563a9c365ed8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x563a9c365e78 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x563a9c365e48 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563a9c365dc0 <col:61, col:70> 'char const[48]' lvalue ->c 0x563a9c359648
|             |   `-CXXMemberCallExpr 0x563a9c365da0 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563a9c365d70 <col:61> '<bound member function type>' ->xanno 0x563a9c34e1a8
|             |       `-CXXThisExpr 0x563a9c365d60 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563a9c365e60 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563a9c365df0 <col:74> 'int' lvalue ParmVar 0x563a9c350cf0 'i' 'int'
|-CXXMethodDecl 0x563a9c351038 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x563a9c350ea8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x563a9c350f20 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x563a9c366698 <col:42, line:500:5>
|   |-ParenExpr 0x563a9c366430 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x563a9c366400 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563a9c3660e0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563a9c3660b0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563a9c365fc0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563a9c365fa8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563a9c365f68 <col:23> 'int' lvalue ParmVar 0x563a9c350ea8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563a9c365f88 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563a9c366090 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563a9c366078 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563a9c365fe0 <col:33> 'int' lvalue ParmVar 0x563a9c350ea8 'i' 'int'
|   |   |     `-BinaryOperator 0x563a9c366058 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563a9c366040 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563a9c366000 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563a9c34e590 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563a9c366020 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x563a9c366140 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563a9c366120 <col:60> 'int' 0
|   |   `-CallExpr 0x563a9c366360 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563a9c366348 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563a9c366328 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563a9bedcfb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563a9c3663a0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c3661b0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x563a9c3663b8 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c3661e8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563a9c3663d0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563a9c366220 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x563a9c3663e8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563a9c366310 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563a9c3662f8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563a9c3662b8 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x563a9c366678 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x563a9c366628 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x563a9c3665f8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x563a9c3665a0 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x563a9c366570 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x563a9c366520 <col:48, col:57> 'char [48]' lvalue ->c 0x563a9c359648
|     |     |   `-CXXMemberCallExpr 0x563a9c366500 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x563a9c3664d0 <col:48> '<bound member function type>' ->xanno 0x563a9c34e348
|     |     |       `-CXXThisExpr 0x563a9c3664c0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x563a9c366588 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x563a9c366550 <col:61> 'int' lvalue ParmVar 0x563a9c350ea8 'i' 'int'
|     `-ImplicitCastExpr 0x563a9c366660 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x563a9c366640 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x563a9c350f20 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x563a9c3511f8 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x563a9c351100 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x563a9c366df8 <col:35, line:513:5>
|   |-ParenExpr 0x563a9c366b08 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x563a9c366ad8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563a9c366830 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563a9c366800 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563a9c366710 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563a9c3666f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563a9c3666b8 <col:23> 'int' lvalue ParmVar 0x563a9c351100 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563a9c3666d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563a9c3667e0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563a9c3667c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563a9c366730 <col:33> 'int' lvalue ParmVar 0x563a9c351100 'i' 'int'
|   |   |     `-BinaryOperator 0x563a9c3667a8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563a9c366790 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563a9c366750 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563a9c34e590 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563a9c366770 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x563a9c366890 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563a9c366870 <col:60> 'int' 0
|   |   `-CallExpr 0x563a9c366a38 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563a9c366a20 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563a9c366a00 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563a9bedcfb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563a9c366a78 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c366900 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x563a9c366a90 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c366938 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563a9c366aa8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563a9c366970 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x563a9c366ac0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563a9c3669e8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563a9c3669d0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563a9c366990 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x563a9c366de8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x563a9c366dd0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x563a9c366db8 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563a9c366d88 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x563a9c366d00 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x563a9c366cd0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563a9c366c80 <col:60, col:69> 'char const[48]' lvalue ->c 0x563a9c359648
|             |   `-CXXMemberCallExpr 0x563a9c366c60 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563a9c366c30 <col:60> '<bound member function type>' ->xanno 0x563a9c34e1a8
|             |       `-CXXThisExpr 0x563a9c366c20 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563a9c366ce8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563a9c366cb0 <col:73> 'int' lvalue ParmVar 0x563a9c351100 'i' 'int'
|-CXXMethodDecl 0x563a9c351448 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x563a9c3512b8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x563a9c351330 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x563a9c367508 <col:41, line:528:5>
|   |-ParenExpr 0x563a9c3672a0 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x563a9c367270 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563a9c366f90 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563a9c366f60 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563a9c366e70 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563a9c366e58 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563a9c366e18 <col:23> 'int' lvalue ParmVar 0x563a9c3512b8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563a9c366e38 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563a9c366f40 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563a9c366f28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563a9c366e90 <col:33> 'int' lvalue ParmVar 0x563a9c3512b8 'i' 'int'
|   |   |     `-BinaryOperator 0x563a9c366f08 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563a9c366ef0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563a9c366eb0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563a9c34e590 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563a9c366ed0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x563a9c366ff0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563a9c366fd0 <col:60> 'int' 0
|   |   `-CallExpr 0x563a9c3671d0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563a9c3671b8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563a9c367198 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563a9bedcfb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563a9c367210 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c367060 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x563a9c367228 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c367098 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563a9c367240 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563a9c3670d0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x563a9c367258 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563a9c367180 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563a9c367168 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563a9c367128 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x563a9c3674e8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x563a9c367498 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x563a9c367468 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x563a9c367410 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x563a9c3673e0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x563a9c367390 <col:47, col:56> 'char [48]' lvalue ->c 0x563a9c359648
|     |     |   `-CXXMemberCallExpr 0x563a9c367370 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x563a9c367340 <col:47> '<bound member function type>' ->xanno 0x563a9c34e348
|     |     |       `-CXXThisExpr 0x563a9c367330 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x563a9c3673f8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x563a9c3673c0 <col:60> 'int' lvalue ParmVar 0x563a9c3512b8 'i' 'int'
|     `-ImplicitCastExpr 0x563a9c3674d0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x563a9c3674b0 <col:65> 'int16_t':'short' lvalue ParmVar 0x563a9c351330 'x' 'int16_t':'short'
|-CXXMethodDecl 0x563a9c351608 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x563a9c351510 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x563a9c367bf8 <col:36, line:541:5>
|   |-ParenExpr 0x563a9c367978 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x563a9c367948 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563a9c3676a0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563a9c367670 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563a9c367580 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563a9c367568 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563a9c367528 <col:23> 'int' lvalue ParmVar 0x563a9c351510 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563a9c367548 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563a9c367650 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563a9c367638 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563a9c3675a0 <col:33> 'int' lvalue ParmVar 0x563a9c351510 'i' 'int'
|   |   |     `-BinaryOperator 0x563a9c367618 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563a9c367600 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563a9c3675c0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563a9c34e590 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563a9c3675e0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x563a9c367700 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563a9c3676e0 <col:60> 'int' 0
|   |   `-CallExpr 0x563a9c3678a8 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563a9c367890 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563a9c367870 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563a9bedcfb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563a9c3678e8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c367770 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x563a9c367900 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c3677a8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563a9c367918 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563a9c3677e0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x563a9c367930 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563a9c367858 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563a9c367840 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563a9c367800 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x563a9c367be8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x563a9c367bd0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x563a9c367bb8 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563a9c367b88 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x563a9c367b30 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x563a9c367ae0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563a9c367a90 <col:61, col:70> 'char const[48]' lvalue ->c 0x563a9c359648
|             |   `-CXXMemberCallExpr 0x563a9c367a70 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563a9c367a40 <col:61> '<bound member function type>' ->xanno 0x563a9c34e1a8
|             |       `-CXXThisExpr 0x563a9c367a30 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563a9c367af8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563a9c367ac0 <col:74> 'int' lvalue ParmVar 0x563a9c351510 'i' 'int'
|-CXXMethodDecl 0x563a9c3517d8 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x563a9c3516c8 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x563a9c351740 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x563a9c351888 <col:20>
| `-OptimizeNoneAttr 0x563a9c3518e0 <col:30>
|-CXXMethodDecl 0x563a9c351a18 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x563a9c351920 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x563a9c3682c8 <col:35, line:562:5>
|   |-ParenExpr 0x563a9c368068 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x563a9c368038 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563a9c367d90 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563a9c367d60 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563a9c367c70 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563a9c367c58 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563a9c367c18 <col:23> 'int' lvalue ParmVar 0x563a9c351920 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563a9c367c38 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563a9c367d40 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563a9c367d28 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563a9c367c90 <col:33> 'int' lvalue ParmVar 0x563a9c351920 'i' 'int'
|   |   |     `-BinaryOperator 0x563a9c367d08 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563a9c367cf0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563a9c367cb0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563a9c34e590 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563a9c367cd0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x563a9c367df0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563a9c367dd0 <col:60> 'int' 0
|   |   `-CallExpr 0x563a9c367f98 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563a9c367f80 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563a9c367f60 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563a9bedcfb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563a9c367fd8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c367e60 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x563a9c367ff0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c367e98 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563a9c368008 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563a9c367ed0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x563a9c368020 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563a9c367f48 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563a9c367f30 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563a9c367ef0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x563a9c3682b8 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x563a9c3682a0 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x563a9c368288 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563a9c368258 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x563a9c368200 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x563a9c3681d0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563a9c368180 <col:60, col:69> 'char const[48]' lvalue ->c 0x563a9c359648
|             |   `-CXXMemberCallExpr 0x563a9c368160 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563a9c368130 <col:60> '<bound member function type>' ->xanno 0x563a9c34e1a8
|             |       `-CXXThisExpr 0x563a9c368120 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563a9c3681e8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563a9c3681b0 <col:73> 'int' lvalue ParmVar 0x563a9c351920 'i' 'int'
|-CXXMethodDecl 0x563a9c351c28 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x563a9c351ad8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x563a9c351b50 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x563a9c3689a8 <col:41, line:577:5>
|   |-ParenExpr 0x563a9c368738 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x563a9c368708 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563a9c368460 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563a9c368430 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563a9c368340 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563a9c368328 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563a9c3682e8 <col:23> 'int' lvalue ParmVar 0x563a9c351ad8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563a9c368308 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563a9c368410 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563a9c3683f8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563a9c368360 <col:33> 'int' lvalue ParmVar 0x563a9c351ad8 'i' 'int'
|   |   |     `-BinaryOperator 0x563a9c3683d8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563a9c3683c0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563a9c368380 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563a9c34e590 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563a9c3683a0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x563a9c3684c0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563a9c3684a0 <col:60> 'int' 0
|   |   `-CallExpr 0x563a9c368668 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563a9c368650 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563a9c368630 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563a9bedcfb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563a9c3686a8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c368530 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x563a9c3686c0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c368568 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563a9c3686d8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563a9c3685a0 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x563a9c3686f0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563a9c368618 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563a9c368600 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563a9c3685c0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x563a9c368988 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x563a9c368938 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x563a9c368908 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x563a9c3688a8 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x563a9c368878 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x563a9c368828 <col:47, col:56> 'char [48]' lvalue ->c 0x563a9c359648
|     |     |   `-CXXMemberCallExpr 0x563a9c368808 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x563a9c3687d8 <col:47> '<bound member function type>' ->xanno 0x563a9c34e348
|     |     |       `-CXXThisExpr 0x563a9c3687c8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x563a9c368890 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x563a9c368858 <col:60> 'int' lvalue ParmVar 0x563a9c351ad8 'i' 'int'
|     `-ImplicitCastExpr 0x563a9c368970 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x563a9c368950 <col:65> 'int32_t':'int' lvalue ParmVar 0x563a9c351b50 'x' 'int32_t':'int'
|-CXXMethodDecl 0x563a9c351de8 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x563a9c351cf0 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x563a9c3690d8 <col:36, line:591:5>
|   |-ParenExpr 0x563a9c368e18 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x563a9c368de8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563a9c368b40 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563a9c368b10 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563a9c368a20 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563a9c368a08 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563a9c3689c8 <col:23> 'int' lvalue ParmVar 0x563a9c351cf0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563a9c3689e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563a9c368af0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563a9c368ad8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563a9c368a40 <col:33> 'int' lvalue ParmVar 0x563a9c351cf0 'i' 'int'
|   |   |     `-BinaryOperator 0x563a9c368ab8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563a9c368aa0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563a9c368a60 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563a9c34e590 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563a9c368a80 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x563a9c368ba0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563a9c368b80 <col:60> 'int' 0
|   |   `-CallExpr 0x563a9c368d48 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563a9c368d30 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563a9c368d10 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563a9bedcfb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563a9c368d88 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c368c10 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x563a9c368da0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c368c48 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563a9c368db8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563a9c368c80 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x563a9c368dd0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563a9c368cf8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563a9c368ce0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563a9c368ca0 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x563a9c3690c8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x563a9c3690b0 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x563a9c369098 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563a9c369068 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x563a9c368fe0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x563a9c368fb0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563a9c368f60 <col:61, col:70> 'char const[48]' lvalue ->c 0x563a9c359648
|             |   `-CXXMemberCallExpr 0x563a9c368f40 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563a9c368f10 <col:61> '<bound member function type>' ->xanno 0x563a9c34e1a8
|             |       `-CXXThisExpr 0x563a9c368f00 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563a9c368fc8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563a9c368f90 <col:74> 'int' lvalue ParmVar 0x563a9c351cf0 'i' 'int'
|-CXXMethodDecl 0x563a9c352038 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x563a9c351ea8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x563a9c351f20 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x563a9c3697b8 <col:42, line:606:5>
|   |-ParenExpr 0x563a9c369548 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x563a9c369518 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x563a9c369270 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563a9c369240 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563a9c369150 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563a9c369138 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563a9c3690f8 <col:23> 'int' lvalue ParmVar 0x563a9c351ea8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563a9c369118 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563a9c369220 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x563a9c369208 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563a9c369170 <col:33> 'int' lvalue ParmVar 0x563a9c351ea8 'i' 'int'
|   |   |     `-BinaryOperator 0x563a9c3691e8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563a9c3691d0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563a9c369190 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563a9c34e590 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x563a9c3691b0 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x563a9c3692d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563a9c3692b0 <col:60> 'int' 0
|   |   `-CallExpr 0x563a9c369478 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x563a9c369460 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563a9c369440 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563a9bedcfb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563a9c3694b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c369340 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x563a9c3694d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c369378 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563a9c3694e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563a9c3693b0 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x563a9c369500 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563a9c369428 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563a9c369410 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563a9c3693d0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x563a9c369798 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x563a9c369748 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x563a9c369718 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x563a9c3696b8 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x563a9c369688 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x563a9c369638 <col:48, col:57> 'char [48]' lvalue ->c 0x563a9c359648
|     |     |   `-CXXMemberCallExpr 0x563a9c369618 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x563a9c3695e8 <col:48> '<bound member function type>' ->xanno 0x563a9c34e348
|     |     |       `-CXXThisExpr 0x563a9c3695d8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x563a9c3696a0 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x563a9c369668 <col:61> 'int' lvalue ParmVar 0x563a9c351ea8 'i' 'int'
|     `-ImplicitCastExpr 0x563a9c369780 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x563a9c369760 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x563a9c351f20 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x563a9c3521d0 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x563a9c352100 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x563a9c36a028 <col:33, line:620:5>
|   |-ParenExpr 0x563a9c369da0 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x563a9c369d70 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x563a9c3699c0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563a9c369990 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563a9c369830 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563a9c369818 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563a9c3697d8 <col:23> 'int' lvalue ParmVar 0x563a9c352100 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563a9c3697f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563a9c369970 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x563a9c369958 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563a9c369850 <col:33> 'int' lvalue ParmVar 0x563a9c352100 'i' 'int'
|   |   |     `-BinaryOperator 0x563a9c369938 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563a9c369920 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563a9c369870 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563a9c34e590 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x563a9c3698f8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x563a9c3698e0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x563a9c3698a8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x563a9c369a20 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563a9c369a00 <col:79> 'int' 0
|   |   `-CallExpr 0x563a9c369cd0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x563a9c369cb8 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563a9c369c98 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563a9bedcfb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563a9c369d10 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c369b08 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x563a9c369d28 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c369b50 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563a9c369d40 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563a9c369b88 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x563a9c369d58 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563a9c369c80 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563a9c369c68 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563a9c369c28 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x563a9c36a018 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x563a9c36a000 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x563a9c369fe8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x563a9c369fb8 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x563a9c369f30 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x563a9c369f00 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563a9c369eb0 <col:67, col:76> 'char const[48]' lvalue ->c 0x563a9c359648
|             |   `-CXXMemberCallExpr 0x563a9c369e90 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x563a9c369e60 <col:67> '<bound member function type>' ->xanno 0x563a9c34e1a8
|             |       `-CXXThisExpr 0x563a9c369e50 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x563a9c369f18 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x563a9c369ee0 <col:80> 'int' lvalue ParmVar 0x563a9c352100 'i' 'int'
|-CXXMethodDecl 0x563a9c3523e8 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x563a9c352290 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x563a9c352310 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x563a9c36a850 <col:45, line:635:5>
|   |-ParenExpr 0x563a9c36a598 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x563a9c36a568 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x563a9c36a230 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x563a9c36a200 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x563a9c36a0a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x563a9c36a088 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x563a9c36a048 <col:23> 'int' lvalue ParmVar 0x563a9c352290 'i' 'int'
|   |   |   | `-IntegerLiteral 0x563a9c36a068 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x563a9c36a1e0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x563a9c36a1c8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x563a9c36a0c0 <col:33> 'int' lvalue ParmVar 0x563a9c352290 'i' 'int'
|   |   |     `-BinaryOperator 0x563a9c36a1a8 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x563a9c36a190 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x563a9c36a0e0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x563a9c34e590 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x563a9c36a168 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x563a9c36a150 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x563a9c36a118 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x563a9c36a290 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x563a9c36a270 <col:79> 'int' 0
|   |   `-CallExpr 0x563a9c36a4c8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x563a9c36a4b0 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x563a9c36a490 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563a9bedcfb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x563a9c36a508 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c36a300 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x563a9c36a520 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x563a9c36a348 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x563a9c36a538 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x563a9c36a380 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x563a9c36a550 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x563a9c36a478 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x563a9c36a460 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x563a9c36a418 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x563a9c36a830 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x563a9c36a798 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x563a9c36a768 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x563a9c36a708 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x563a9c36a6d8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x563a9c36a688 <col:54, col:63> 'char [48]' lvalue ->c 0x563a9c359648
|     |     |   `-CXXMemberCallExpr 0x563a9c36a668 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x563a9c36a638 <col:54> '<bound member function type>' ->xanno 0x563a9c34e348
|     |     |       `-CXXThisExpr 0x563a9c36a628 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x563a9c36a6f0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x563a9c36a6b8 <col:67> 'int' lvalue ParmVar 0x563a9c352290 'i' 'int'
|     `-CXXConstCastExpr 0x563a9c36a800 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x563a9c36a7e8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x563a9c36a7b0 <col:91> 'const void *' lvalue ParmVar 0x563a9c352310 'x' 'const void *'
|-CXXMethodDecl 0x563a9c3524b8 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x563a9c36a8d8 <col:34, line:640:5>
|   `-ReturnStmt 0x563a9c36a8c8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x563a9c36a8b0 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x563a9c36a880 <col:16> 'Packet *' lvalue ->_data_packet 0x563a9c35a208
|         `-CXXThisExpr 0x563a9c36a870 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x563a9c3525f8 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x563a9c352568 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563a9c35b658 <col:46> 'bool' true
|-CXXMethodDecl 0x563a9c352778 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x563a9c3526b0 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x563a9c352820 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x563a9c352fd0 <line:660:22> "" ""
| |-EnumConstantDecl 0x563a9c352920 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563a9c353040 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c352900 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x563a9c3528e0 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x563a9c347a50 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x563a9c3529b0 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563a9c353058 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c352990 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x563a9c352970 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x563a9c347ae0 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x563a9c352a40 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563a9c353070 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c352a20 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x563a9c352a00 <col:21> 'int' 0
| |-EnumConstantDecl 0x563a9c352ad0 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563a9c353088 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c352ab0 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x563a9c352a90 <col:19> 'int' 16
| |-EnumConstantDecl 0x563a9c352b60 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563a9c3530a0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c352b40 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x563a9c352b20 <col:21> 'int' 16
| |-EnumConstantDecl 0x563a9c352bf0 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563a9c3530b8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c352bd0 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x563a9c352bb0 <col:19> 'int' 32
| |-EnumConstantDecl 0x563a9c352c80 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563a9c3530d0 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c352c60 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x563a9c352c40 <col:19> 'int' EnumConstant 0x563a9c352ad0 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x563a9c352d10 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563a9c3530e8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c352cf0 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x563a9c352cd0 <col:19> 'int' EnumConstant 0x563a9c352bf0 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x563a9c352de0 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563a9c353100 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c352dc0 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x563a9c352da0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x563a9c352d60 <col:23> 'int' EnumConstant 0x563a9c352d10 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x563a9c352d80 <col:40> 'int' 2
| |-EnumConstantDecl 0x563a9c352eb0 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x563a9c353118 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c352e90 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x563a9c352e70 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x563a9c352e30 <col:23> 'int' EnumConstant 0x563a9c352d10 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x563a9c352e50 <col:40> 'int' 4
| `-EnumConstantDecl 0x563a9c352f80 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x563a9c353130 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563a9c352f60 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x563a9c352f40 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x563a9c352f00 <col:23> 'int' EnumConstant 0x563a9c352d10 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x563a9c352f20 <col:40> 'int' 8
|-CXXMethodDecl 0x563a9c353170 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x563a9c353210 <col:68> "" ""
|-CXXMethodDecl 0x563a9c3532a8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x563a9c353348 <col:45> "" ""
|-CXXMethodDecl 0x563a9c3533e0 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x563a9c353480 <col:57> "" ""
|-CXXMethodDecl 0x563a9c353518 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x563a9c3535b8 <col:45> "" ""
|-CXXMethodDecl 0x563a9c353650 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x563a9c3536f0 <col:57> "" ""
|-CXXMethodDecl 0x563a9c353780 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x563a9c353820 <col:51> "" ""
|-CXXMethodDecl 0x563a9c3538b0 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x563a9c353950 <col:63> "" ""
|-CXXMethodDecl 0x563a9c3539e0 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x563a9c353a80 <col:53> "" ""
|-CXXMethodDecl 0x563a9c353b10 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x563a9c353bb0 <col:65> "" ""
|-CXXMethodDecl 0x563a9c353cc8 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x563a9c353c38 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x563a9c353d70 <col:61> "" ""
|-CXXMethodDecl 0x563a9c353f08 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x563a9c353df8 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x563a9c353e70 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x563a9c353fb8 <col:67> "" ""
|-CXXMethodDecl 0x563a9c3540d0 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x563a9c354040 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x563a9c354178 <col:63> "" ""
|-CXXMethodDecl 0x563a9c354310 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x563a9c354200 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x563a9c354278 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x563a9c3543c0 <col:69> "" ""
|-CXXMethodDecl 0x563a9c3544d8 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x563a9c354448 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x563a9c354580 <col:63> "" ""
|-CXXMethodDecl 0x563a9c354718 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x563a9c354608 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x563a9c354680 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563a9c3547c8 <col:69> "" ""
|-CXXMethodDecl 0x563a9c3548e0 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x563a9c354850 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x563a9c354988 <col:62> "" ""
|-CXXMethodDecl 0x563a9c354b20 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x563a9c354a10 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x563a9c354a88 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x563a9c354bd0 <col:68> "" ""
|-CXXMethodDecl 0x563a9c3577f0 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x563a9c354c58 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x563a9c357898 <col:63> "" ""
|-CXXMethodDecl 0x563a9c357a30 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x563a9c357920 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x563a9c357998 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x563a9c357ae0 <col:69> "" ""
|-CXXMethodDecl 0x563a9c357b70 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x563a9c357c10 <col:64> "" ""
|-CXXMethodDecl 0x563a9c357ca0 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x563a9c357d40 <col:52> "" ""
|-CXXMethodDecl 0x563a9c357dd0 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x563a9c357e70 <col:67> "" ""
|-CXXMethodDecl 0x563a9c357f00 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x563a9c357fa0 <col:55> "" ""
|-CXXMethodDecl 0x563a9c3580b8 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x563a9c358028 <col:32> col:35 'int'
| `-DeprecatedAttr 0x563a9c358160 <col:58> "" ""
|-CXXMethodDecl 0x563a9c3582f8 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x563a9c3581e8 <col:33> col:36 'int'
| |-ParmVarDecl 0x563a9c358260 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x563a9c3583a8 <col:62> "" ""
|-CXXMethodDecl 0x563a9c3584c0 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x563a9c358430 <col:32> col:35 'int'
| `-DeprecatedAttr 0x563a9c358568 <col:58> "" ""
|-CXXMethodDecl 0x563a9c358700 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x563a9c3585f0 <col:33> col:36 'int'
| |-ParmVarDecl 0x563a9c358668 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x563a9c3587b0 <col:62> "" ""
|-CXXMethodDecl 0x563a9c3588c8 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x563a9c358838 <col:34> col:37 'int'
| `-DeprecatedAttr 0x563a9c358970 <col:60> "" ""
|-CXXMethodDecl 0x563a9c358b08 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x563a9c3589f8 <col:34> col:37 'int'
| |-ParmVarDecl 0x563a9c358a70 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x563a9c358bb8 <col:64> "" ""
|-CXXMethodDecl 0x563a9c358cd0 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x563a9c358c40 <col:32> col:35 'int'
| `-DeprecatedAttr 0x563a9c358d78 <col:58> "" ""
|-CXXMethodDecl 0x563a9c358f10 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x563a9c358e00 <col:33> col:36 'int'
| |-ParmVarDecl 0x563a9c358e78 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x563a9c358fc0 <col:62> "" ""
|-CXXMethodDecl 0x563a9c3590d8 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x563a9c359048 <col:33> col:36 'int'
| `-DeprecatedAttr 0x563a9c359180 <col:59> "" ""
|-CXXMethodDecl 0x563a9c359318 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x563a9c359208 <col:33> col:36 'int'
| |-ParmVarDecl 0x563a9c359280 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x563a9c3593c8 <col:63> "" ""
|-AccessSpecDecl 0x563a9c359438 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x563a9c359460 prev 0x563a9c34e080 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563a9c359558 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x563a9c359648 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x563a9c359778 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x563a9c3598f8 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x563a9c359a78 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x563a9c359bf8 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x563a9c36aa58 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x563a9c36b2c8 <col:11>
| |-CXXDestructorDecl 0x563a9c36ab30 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x563a9c36ac68 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x563a9c36ac68
| | `-ParmVarDecl 0x563a9c36ad78 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x563a9c36ae18 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x563a9c36ae18
| | `-ParmVarDecl 0x563a9c36af28 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x563a9c36dc88 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x563a9c36dd98 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x563a9c36e018 <col:11>
| |   `-ReturnStmt 0x563a9c36e008 <col:11>
| |     `-UnaryOperator 0x563a9c36dff0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x563a9c36dfe0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x563a9c36de08 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x563a9c36de08
|   `-ParmVarDecl 0x563a9c36df18 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x563a9c359c60 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563a9c359d78 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x563a9c359e18 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x563a9c359e80 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x563a9c359ee8 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x563a9c359f50 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x563a9c359fb0 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x563a9c35a070 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x563a9c35a0d0 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x563a9c35a130 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x563a9c36a968 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x563a9c359e18 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x563a9c36b2d8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x563a9c36b330 <col:12>
| |-CXXConstructorDecl 0x563a9c36af98 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x563a9c36af98
| | `-ParmVarDecl 0x563a9c36b0a8 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x563a9c36b148 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x563a9c36b148
| | `-ParmVarDecl 0x563a9c36b258 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x563a9c36d370 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x563a9c35a1a8 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x563a9c35a208 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x563a9c35a270 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x563a9c35a2d8 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x563a9c35a340 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x563a9c35a3a8 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x563a9c35a408 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x563a9c35a468 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x563a9c35a4d0 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x563a9c35a558 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x563a9c35a1a8 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x563a9c36a900 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x563a9c35a408 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x563a9c36b340 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x563a9c36b3a0 <col:21, line:755:5>
|-CXXConstructorDecl 0x563a9c35a6f8 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x563a9c35a638 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x563a9c35a7f0 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x563a9c35a9d8 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x563a9c35a8e0 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x563a9c35aca8 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x563a9c35aa90 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563a9c35ab08 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x563a9c35ab80 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563a9c35aec8 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x563a9c35ad78 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x563a9c35adf0 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x563a9c35b198 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x563a9c35af88 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x563a9c35b000 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x563a9c35b078 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x563a9c35b2f0 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x563a9c35b260 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563a9c35b438 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x563a9c35b3a8 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x563a9c35b530 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IP6Address
         0 |   struct in6_addr _addr
         0 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |       uint8_t [16] __u6_addr8
         0 |       uint16_t [8] __u6_addr16
         0 |       uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c0c4698 </usr/include/netinet/in.h:214:5, line:219:7> line:214:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x563a9c0c48b8 <line:216:2, col:23> col:10 referenced __u6_addr8 'uint8_t [16]'
|-FieldDecl 0x563a9c0c49e8 <line:217:2, col:24> col:11 __u6_addr16 'uint16_t [8]'
|-FieldDecl 0x563a9c0c4b18 <line:218:2, col:24> col:11 __u6_addr32 'uint32_t [4]'
|-CXXConstructorDecl 0x563a9c386818 <line:214:5> col:5 implicit used  'void () noexcept' inline default trivial
| `-CompoundStmt 0x563a9c387028 <col:5>
|-CXXDestructorDecl 0x563a9c3868f0 <col:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x563a9c3869f8 <col:5> col:5 implicit used constexpr  'void (const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept' inline default trivial
| |-ParmVarDecl 0x563a9c386b08 <col:5> col:5 'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &'
| `-CompoundStmt 0x563a9c388a30 <col:5>
|-CXXConstructorDecl 0x563a9c386ba8 <col:5> col:5 implicit used constexpr  'void (in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&) noexcept' inline default trivial
| |-ParmVarDecl 0x563a9c386cb8 <col:5> col:5 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&'
| `-CompoundStmt 0x563a9c3039d8 <col:5>
|-CXXMethodDecl 0x563a9c387758 <col:5> col:5 implicit used constexpr operator= 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &(const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept' inline default trivial
| |-ParmVarDecl 0x563a9c387868 <col:5> col:5 'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &'
| `-CompoundStmt 0x563a9c39fcb0 <col:5>
|   `-ReturnStmt 0x563a9c39fca0 <col:5>
|     `-UnaryOperator 0x563a9c39fc88 <col:5> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563a9c39fc78 <col:5> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) *' this
`-CXXMethodDecl 0x563a9c3878d8 <col:5> col:5 implicit constexpr operator= 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &(in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&)' inline default trivial noexcept-unevaluated 0x563a9c3878d8
  `-ParmVarDecl 0x563a9c3879e8 <col:5> col:5 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&'

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { [4 x i32] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c0c44f0 </usr/include/netinet/in.h:212:1, line:225:3> line:212:8 struct in6_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563a9c0c4608 <col:1, col:8> col:8 implicit struct in6_addr
|-CXXRecordDecl 0x563a9c0c4698 <line:214:5, line:219:7> line:214:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x563a9c0c48b8 <line:216:2, col:23> col:10 referenced __u6_addr8 'uint8_t [16]'
| |-FieldDecl 0x563a9c0c49e8 <line:217:2, col:24> col:11 __u6_addr16 'uint16_t [8]'
| |-FieldDecl 0x563a9c0c4b18 <line:218:2, col:24> col:11 __u6_addr32 'uint32_t [4]'
| |-CXXConstructorDecl 0x563a9c386818 <line:214:5> col:5 implicit used  'void () noexcept' inline default trivial
| | `-CompoundStmt 0x563a9c387028 <col:5>
| |-CXXDestructorDecl 0x563a9c3868f0 <col:5> col:5 implicit ~ 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x563a9c3869f8 <col:5> col:5 implicit used constexpr  'void (const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept' inline default trivial
| | |-ParmVarDecl 0x563a9c386b08 <col:5> col:5 'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &'
| | `-CompoundStmt 0x563a9c388a30 <col:5>
| |-CXXConstructorDecl 0x563a9c386ba8 <col:5> col:5 implicit used constexpr  'void (in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x563a9c386cb8 <col:5> col:5 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&'
| | `-CompoundStmt 0x563a9c3039d8 <col:5>
| |-CXXMethodDecl 0x563a9c387758 <col:5> col:5 implicit used constexpr operator= 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &(const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept' inline default trivial
| | |-ParmVarDecl 0x563a9c387868 <col:5> col:5 'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &'
| | `-CompoundStmt 0x563a9c39fcb0 <col:5>
| |   `-ReturnStmt 0x563a9c39fca0 <col:5>
| |     `-UnaryOperator 0x563a9c39fc88 <col:5> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x563a9c39fc78 <col:5> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) *' this
| `-CXXMethodDecl 0x563a9c3878d8 <col:5> col:5 implicit constexpr operator= 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &(in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&)' inline default trivial noexcept-unevaluated 0x563a9c3878d8
|   `-ParmVarDecl 0x563a9c3879e8 <col:5> col:5 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&'
|-FieldDecl 0x563a9c0c4bd8 <col:5, line:219:9> col:9 referenced __in6_u 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)'
|-CXXConstructorDecl 0x563a9c386728 <line:212:8> col:8 implicit used in6_addr 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x563a9c0c4bd8 '__in6_u' 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)'
| | `-CXXConstructExpr 0x563a9c387038 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' 'void () noexcept'
| `-CompoundStmt 0x563a9c387090 <col:8>
|-CXXConstructorDecl 0x563a9c386d28 <col:8> col:8 implicit used constexpr in6_addr 'void (const in6_addr &) noexcept' inline default trivial
| |-ParmVarDecl 0x563a9c386e08 <col:8> col:8 used 'const in6_addr &'
| |-CXXCtorInitializer Field 0x563a9c0c4bd8 '__in6_u' 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)'
| | `-CXXConstructExpr 0x563a9c388a40 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' 'void (const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept'
| |   `-MemberExpr 0x563a9c388a00 <col:8> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x563a9c0c4bd8
| |     `-DeclRefExpr 0x563a9c3889e0 <col:8> 'const in6_addr' lvalue ParmVar 0x563a9c386e08 '' 'const in6_addr &'
| `-CompoundStmt 0x563a9c388aa0 <col:8>
|-CXXConstructorDecl 0x563a9c386ea8 <col:8> col:8 implicit used constexpr in6_addr 'void (in6_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x563a9c386fb8 <col:8> col:8 used 'in6_addr &&'
| |-CXXCtorInitializer Field 0x563a9c0c4bd8 '__in6_u' 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)'
| | `-CXXConstructExpr 0x563a9c3039e8 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' 'void (in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&) noexcept'
| |   `-MemberExpr 0x563a9c3039a8 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' xvalue .__in6_u 0x563a9c0c4bd8
| |     `-CXXStaticCastExpr 0x563a9c303978 <col:8> 'in6_addr' xvalue static_cast<struct in6_addr &&> <NoOp>
| |       `-DeclRefExpr 0x563a9c303948 <col:8> 'in6_addr' lvalue ParmVar 0x563a9c386fb8 '' 'in6_addr &&'
| `-CompoundStmt 0x563a9c303a48 <col:8>
|-CXXMethodDecl 0x563a9c387a58 <col:8> col:8 implicit used constexpr operator= 'in6_addr &(const in6_addr &) noexcept' inline default trivial
| |-ParmVarDecl 0x563a9c387bb0 <col:8> col:8 used 'const in6_addr &'
| `-CompoundStmt 0x563a9c39fd28 <col:8>
|   |-CXXMemberCallExpr 0x563a9c39fcc8 <col:8> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue
|   | |-MemberExpr 0x563a9c39fc08 <col:8> '<bound member function type>' .operator= 0x563a9c387758
|   | | `-MemberExpr 0x563a9c39fb18 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue ->__in6_u 0x563a9c0c4bd8
|   | |   `-CXXThisExpr 0x563a9c39fb08 <col:8> 'in6_addr *' this
|   | `-MemberExpr 0x563a9c39fbd8 <col:8> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x563a9c0c4bd8
|   |   `-DeclRefExpr 0x563a9c39fbb8 <col:8> 'const in6_addr' lvalue ParmVar 0x563a9c387bb0 '' 'const in6_addr &'
|   `-ReturnStmt 0x563a9c39fd18 <col:8>
|     `-UnaryOperator 0x563a9c39fd00 <col:8> 'in6_addr' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563a9c39fcf0 <col:8> 'in6_addr *' this
|-CXXMethodDecl 0x563a9c387c20 <col:8> col:8 implicit constexpr operator= 'in6_addr &(in6_addr &&)' inline default trivial noexcept-unevaluated 0x563a9c387c20
| `-ParmVarDecl 0x563a9c387d28 <col:8> col:8 'in6_addr &&'
`-CXXDestructorDecl 0x563a9c3880c8 <col:8> col:8 implicit ~in6_addr 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.in6_addr = type { %union.anon }
  NonVirtualBaseLLVMType:%struct.in6_addr = type { %union.anon }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c382ff0 prev 0x563a9c347620 <../dummy_inc/click/ip6address.hh:14:1, line:175:1> line:14:7 referenced class IP6Address definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563a9c3830e8 <col:1, col:7> col:7 implicit referenced class IP6Address
|-AccessSpecDecl 0x563a9c383178 <col:20, col:26> col:20 public
|-TypedefDecl 0x563a9c3831b0 <line:16:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x563a9bf961b0 'uninitialized_type'
|   `-CXXRecord 0x563a9bf96118 'uninitialized_type'
|-CXXConstructorDecl 0x563a9c383270 <line:19:5, line:21:5> line:19:12 IP6Address 'void ()' inline
| |-CXXCtorInitializer Field 0x563a9c3866a8 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x563a9c3870a0 <col:12> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x563a9c3872c0 <col:25, line:21:5>
|   `-CallExpr 0x563a9c387270 <line:20:2, col:33> 'void *'
|     |-ImplicitCastExpr 0x563a9c387258 <col:2> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x563a9c387238 <col:2> 'void *(void *, int, size_t) throw()' lvalue Function 0x563a9c06bcf8 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x563a9c3872a8 <col:9, col:10> 'void *' <BitCast>
|     | `-UnaryOperator 0x563a9c387180 <col:9, col:10> 'struct in6_addr *' prefix '&' cannot overflow
|     |   `-MemberExpr 0x563a9c387150 <col:10> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x563a9c3866a8
|     |     `-CXXThisExpr 0x563a9c387140 <col:10> 'IP6Address *' implicit this
|     |-IntegerLiteral 0x563a9c387198 <col:17> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x563a9c387218 <col:20, col:32> 'unsigned long' sizeof
|       `-ParenExpr 0x563a9c3871f8 <col:26, col:32> 'struct in6_addr':'in6_addr' lvalue
|         `-MemberExpr 0x563a9c3871c8 <col:27> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x563a9c3866a8 non_odr_use_unevaluated
|           `-CXXThisExpr 0x563a9c3871b8 <col:27> 'IP6Address *' implicit this
|-CXXConstructorDecl 0x563a9c3833c0 <line:24:5, line:26:5> line:24:21 IP6Address 'void (const unsigned char *)' inline
| |-ParmVarDecl 0x563a9c383330 <col:32, col:53> col:53 used x 'const unsigned char *'
| |-CXXCtorInitializer Field 0x563a9c3866a8 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x563a9c3872d8 <col:21> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x563a9c387528 <col:56, line:26:5>
|   `-CallExpr 0x563a9c3874a8 <line:25:2, col:33> 'void *'
|     |-ImplicitCastExpr 0x563a9c387490 <col:2> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x563a9c387470 <col:2> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x563a9c06b1c8 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
|     |-ImplicitCastExpr 0x563a9c3874e0 <col:9, col:10> 'void *' <BitCast>
|     | `-UnaryOperator 0x563a9c3873b8 <col:9, col:10> 'struct in6_addr *' prefix '&' cannot overflow
|     |   `-MemberExpr 0x563a9c387388 <col:10> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x563a9c3866a8
|     |     `-CXXThisExpr 0x563a9c387378 <col:10> 'IP6Address *' implicit this
|     |-ImplicitCastExpr 0x563a9c387510 <col:17> 'const void *' <BitCast>
|     | `-ImplicitCastExpr 0x563a9c3874f8 <col:17> 'const unsigned char *' <LValueToRValue>
|     |   `-DeclRefExpr 0x563a9c3873d0 <col:17> 'const unsigned char *' lvalue ParmVar 0x563a9c383330 'x' 'const unsigned char *'
|     `-UnaryExprOrTypeTraitExpr 0x563a9c387450 <col:20, col:32> 'unsigned long' sizeof
|       `-ParenExpr 0x563a9c387430 <col:26, col:32> 'struct in6_addr':'in6_addr' lvalue
|         `-MemberExpr 0x563a9c387400 <col:27> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x563a9c3866a8 non_odr_use_unevaluated
|           `-CXXThisExpr 0x563a9c3873f0 <col:27> 'IP6Address *' implicit this
|-CXXConstructorDecl 0x563a9c383510 <line:31:5, line:33:5> line:31:21 IP6Address 'void (IPAddress)' inline
| |-ParmVarDecl 0x563a9c383480 <col:32, col:42> col:42 used x 'IPAddress'
| |-CXXCtorInitializer Field 0x563a9c3866a8 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x563a9c387540 <col:21> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x563a9c388920 <col:45, line:33:5>
|   `-ExprWithCleanups 0x563a9c388908 <line:32:2, col:10> 'IP6Address' lvalue
|     `-CXXOperatorCallExpr 0x563a9c3888d0 <col:2, col:10> 'IP6Address' lvalue
|       |-ImplicitCastExpr 0x563a9c3888b8 <col:8> 'IP6Address &(*)(const struct in_addr &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x563a9c388838 <col:8> 'IP6Address &(const struct in_addr &)' lvalue CXXMethod 0x563a9c386048 'operator=' 'IP6Address &(const struct in_addr &)'
|       |-UnaryOperator 0x563a9c3875a8 <col:2, col:3> 'IP6Address' lvalue prefix '*' cannot overflow
|       | `-CXXThisExpr 0x563a9c387598 <col:3> 'IP6Address *' this
|       `-MaterializeTemporaryExpr 0x563a9c388820 <col:10> 'const struct in_addr':'const in_addr' lvalue
|         `-ImplicitCastExpr 0x563a9c388808 <col:10> 'const struct in_addr':'const in_addr' <NoOp>
|           `-ImplicitCastExpr 0x563a9c3887f0 <col:10> 'struct in_addr':'in_addr' <UserDefinedConversion>
|             `-CXXMemberCallExpr 0x563a9c3887d0 <col:10> 'struct in_addr':'in_addr'
|               `-MemberExpr 0x563a9c3887a0 <col:10> '<bound member function type>' .operator in_addr 0x563a9c1766e0
|                 `-ImplicitCastExpr 0x563a9c388788 <col:10> 'const IPAddress' lvalue <NoOp>
|                   `-DeclRefExpr 0x563a9c3875c0 <col:10> 'IPAddress' lvalue ParmVar 0x563a9c383480 'x' 'IPAddress'
|-CXXConstructorDecl 0x563a9c383660 <line:36:5, col:40> col:14 IP6Address 'void (const String &)'
| `-ParmVarDecl 0x563a9c3835d0 <col:25, col:39> col:39 x 'const String &'
|-CXXConstructorDecl 0x563a9c383888 <line:39:5, line:41:5> line:39:21 IP6Address 'void (const struct in6_addr &)' inline
| |-ParmVarDecl 0x563a9c383790 <col:32, col:55> col:55 used x 'const struct in6_addr &'
| |-CXXCtorInitializer Field 0x563a9c3866a8 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x563a9c388ab0 <line:40:4, col:11> 'struct in6_addr':'in6_addr' 'void (const in6_addr &) noexcept'
| |   `-DeclRefExpr 0x563a9c388938 <col:10> 'const struct in6_addr':'const in6_addr' lvalue ParmVar 0x563a9c383790 'x' 'const struct in6_addr &'
| `-CompoundStmt 0x563a9c388b10 <col:13, line:41:5>
|-CXXConstructorDecl 0x563a9c383a58 <line:44:5, line:46:5> line:44:21 IP6Address 'void (const struct in_addr &)' inline
| |-ParmVarDecl 0x563a9c383990 <col:32, col:54> col:54 used x 'const struct in_addr &'
| |-CXXCtorInitializer Field 0x563a9c3866a8 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x563a9c388b20 <col:21> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x563a9c388c30 <col:57, line:46:5>
|   `-CXXOperatorCallExpr 0x563a9c388bf8 <line:45:2, col:10> 'IP6Address' lvalue
|     |-ImplicitCastExpr 0x563a9c388be0 <col:8> 'IP6Address &(*)(const struct in_addr &)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x563a9c388bc0 <col:8> 'IP6Address &(const struct in_addr &)' lvalue CXXMethod 0x563a9c386048 'operator=' 'IP6Address &(const struct in_addr &)'
|     |-UnaryOperator 0x563a9c388b88 <col:2, col:3> 'IP6Address' lvalue prefix '*' cannot overflow
|     | `-CXXThisExpr 0x563a9c388b78 <col:3> 'IP6Address *' this
|     `-DeclRefExpr 0x563a9c388ba0 <col:10> 'const struct in_addr':'const in_addr' lvalue ParmVar 0x563a9c383990 'x' 'const struct in_addr &'
|-CXXConstructorDecl 0x563a9c383bc8 <line:49:5, line:51:5> line:49:12 used IP6Address 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x563a9c383b18 <col:23, col:49> col:49 used unused 'const uninitialized_type &'
| |-CXXCtorInitializer Field 0x563a9c3866a8 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x563a9c388c48 <col:12> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x563a9c388cf8 <col:57, line:51:5>
|   `-CStyleCastExpr 0x563a9c388cd0 <line:50:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x563a9c388ca0 <col:9> 'const uninitialized_type' lvalue ParmVar 0x563a9c383b18 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x563a9c383d58 <line:62:5, col:49> col:23 make_prefix 'IP6Address (int)' static
| `-ParmVarDecl 0x563a9c383c90 <col:35, col:39> col:39 prefix_len 'int'
|-CXXMethodDecl 0x563a9c383ea8 <line:69:5, col:58> col:23 make_inverted_prefix 'IP6Address (int)' static
| `-ParmVarDecl 0x563a9c383e18 <col:44, col:48> col:48 prefix_len 'int'
|-TypedefDecl 0x563a9c384058 <line:71:5, col:61> col:36 referenced unspecified_bool_type 'uint32_t (IP6Address::*)() const'
| `-MemberPointerType 0x563a9c383fd0 'uint32_t (IP6Address::*)() const'
|   |-RecordType 0x563a9c3476b0 'IP6Address'
|   | `-CXXRecord 0x563a9c382ff0 'IP6Address'
|   `-ParenType 0x563a9c383f70 'uint32_t () const' sugar
|     `-FunctionProtoType 0x563a9c05e380 'uint32_t () const' const cdecl
|       `-TypedefType 0x563a9bf964a0 'uint32_t' sugar
|         |-Typedef 0x563a9beaa3d8 'uint32_t'
|         `-TypedefType 0x563a9be83480 '__uint32_t' sugar
|           |-Typedef 0x563a9be83078 '__uint32_t'
|           `-BuiltinType 0x563a9be41450 'unsigned int'
|-CXXConversionDecl 0x563a9c384198 <line:72:5, col:45> col:12 operator unsigned int (IP6Address::*)() const 'IP6Address::unspecified_bool_type () const' inline
|-CXXConversionDecl 0x563a9c384320 <line:74:5, col:62> col:5 operator const in6_addr & 'const struct in6_addr &() const'
| `-CompoundStmt 0x563a9c388d60 <col:46, col:62>
|   `-ReturnStmt 0x563a9c388d50 <col:48, col:55>
|     `-MemberExpr 0x563a9c388d20 <col:55> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x563a9c3866a8
|       `-CXXThisExpr 0x563a9c388d10 <col:55> 'const IP6Address *' implicit this
|-CXXConversionDecl 0x563a9c384510 <line:75:5, col:50> col:5 used operator in6_addr & 'struct in6_addr &()'
| `-CompoundStmt 0x563a9c388dc8 <col:34, col:50>
|   `-ReturnStmt 0x563a9c388db8 <col:36, col:43>
|     `-MemberExpr 0x563a9c388d88 <col:43> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x563a9c3866a8
|       `-CXXThisExpr 0x563a9c388d78 <col:43> 'IP6Address *' implicit this
|-CXXMethodDecl 0x563a9c384610 <line:76:5, col:61> col:28 in6_addr 'const struct in6_addr &() const'
| `-CompoundStmt 0x563a9c388e30 <col:45, col:61>
|   `-ReturnStmt 0x563a9c388e20 <col:47, col:54>
|     `-MemberExpr 0x563a9c388df0 <col:54> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x563a9c3866a8
|       `-CXXThisExpr 0x563a9c388de0 <col:54> 'const IP6Address *' implicit this
|-CXXMethodDecl 0x563a9c3846e8 <line:77:5, col:49> col:22 in6_addr 'struct in6_addr &()'
| `-CompoundStmt 0x563a9c388e98 <col:33, col:49>
|   `-ReturnStmt 0x563a9c388e88 <col:35, col:42>
|     `-MemberExpr 0x563a9c388e58 <col:42> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x563a9c3866a8
|       `-CXXThisExpr 0x563a9c388e48 <col:42> 'IP6Address *' implicit this
|-CXXMethodDecl 0x563a9c3847b0 <line:79:5, col:66> col:20 data 'unsigned char *()'
| `-CompoundStmt 0x563a9c388fd0 <col:27, col:66>
|   `-ReturnStmt 0x563a9c388fc0 <col:29, col:63>
|     `-UnaryOperator 0x563a9c388fa8 <col:36, col:63> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x563a9c388f88 <col:37, col:63> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x563a9c388f70 <col:37, col:51> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563a9c388f20 <col:37, col:51> 'uint8_t [16]' lvalue .__u6_addr8 0x563a9c0c48b8
|         |   `-MemberExpr 0x563a9c388ef0 <col:37, col:43> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x563a9c0c4bd8
|         |     `-MemberExpr 0x563a9c388ec0 <col:37> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x563a9c3866a8
|         |       `-CXXThisExpr 0x563a9c388eb0 <col:37> 'IP6Address *' implicit this
|         `-IntegerLiteral 0x563a9c388f50 <col:62> 'int' 0
|-CXXMethodDecl 0x563a9c384878 <line:80:5, col:78> col:26 used data 'const unsigned char *() const'
| `-CompoundStmt 0x563a9c389148 <col:39, col:78>
|   `-ReturnStmt 0x563a9c389138 <col:41, col:75>
|     `-UnaryOperator 0x563a9c389120 <col:48, col:75> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x563a9c389100 <col:49, col:75> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x563a9c3890e8 <col:49, col:63> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x563a9c389058 <col:49, col:63> 'uint8_t const[16]' lvalue .__u6_addr8 0x563a9c0c48b8
|         |   `-MemberExpr 0x563a9c389028 <col:49, col:55> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x563a9c0c4bd8
|         |     `-MemberExpr 0x563a9c388ff8 <col:49> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x563a9c3866a8
|         |       `-CXXThisExpr 0x563a9c388fe8 <col:49> 'const IP6Address *' implicit this
|         `-IntegerLiteral 0x563a9c389088 <col:74> 'int' 0
|-CXXMethodDecl 0x563a9c384998 <line:81:5, col:75> col:15 used data16 'uint16_t *()'
| `-CompoundStmt 0x563a9c3892b8 <col:24, col:75>
|   `-ReturnStmt 0x563a9c3892a8 <col:26, col:72>
|     `-CStyleCastExpr 0x563a9c389280 <col:33, col:72> 'uint16_t *' <BitCast>
|       `-UnaryOperator 0x563a9c389258 <col:45, col:72> 'uint8_t *' prefix '&' cannot overflow
|         `-ArraySubscriptExpr 0x563a9c389238 <col:46, col:72> 'uint8_t':'unsigned char' lvalue
|           |-ImplicitCastExpr 0x563a9c389220 <col:46, col:60> 'uint8_t *' <ArrayToPointerDecay>
|           | `-MemberExpr 0x563a9c3891d0 <col:46, col:60> 'uint8_t [16]' lvalue .__u6_addr8 0x563a9c0c48b8
|           |   `-MemberExpr 0x563a9c3891a0 <col:46, col:52> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x563a9c0c4bd8
|           |     `-MemberExpr 0x563a9c389170 <col:46> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x563a9c3866a8
|           |       `-CXXThisExpr 0x563a9c389160 <col:46> 'IP6Address *' implicit this
|           `-IntegerLiteral 0x563a9c389200 <col:71> 'int' 0
|-CXXMethodDecl 0x563a9c384a58 <line:82:5, col:87> col:21 data16 'const uint16_t *() const'
| `-CompoundStmt 0x563a9c389440 <col:36, col:87>
|   `-ReturnStmt 0x563a9c389430 <col:38, col:84>
|     `-ImplicitCastExpr 0x563a9c389418 <col:45, col:84> 'const uint16_t *' <NoOp>
|       `-CStyleCastExpr 0x563a9c3893f0 <col:45, col:84> 'uint16_t *' <BitCast>
|         `-UnaryOperator 0x563a9c3893c8 <col:57, col:84> 'const uint8_t *' prefix '&' cannot overflow
|           `-ArraySubscriptExpr 0x563a9c3893a8 <col:58, col:84> 'const uint8_t':'const unsigned char' lvalue
|             |-ImplicitCastExpr 0x563a9c389390 <col:58, col:72> 'const uint8_t *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563a9c389340 <col:58, col:72> 'uint8_t const[16]' lvalue .__u6_addr8 0x563a9c0c48b8
|             |   `-MemberExpr 0x563a9c389310 <col:58, col:64> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x563a9c0c4bd8
|             |     `-MemberExpr 0x563a9c3892e0 <col:58> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x563a9c3866a8
|             |       `-CXXThisExpr 0x563a9c3892d0 <col:58> 'const IP6Address *' implicit this
|             `-IntegerLiteral 0x563a9c389370 <col:83> 'int' 0
|-CXXMethodDecl 0x563a9c384b18 <line:83:5, col:75> col:15 used data32 'uint32_t *()'
| `-CompoundStmt 0x563a9c3895b0 <col:24, col:75>
|   `-ReturnStmt 0x563a9c3895a0 <col:26, col:72>
|     `-CStyleCastExpr 0x563a9c389578 <col:33, col:72> 'uint32_t *' <BitCast>
|       `-UnaryOperator 0x563a9c389550 <col:45, col:72> 'uint8_t *' prefix '&' cannot overflow
|         `-ArraySubscriptExpr 0x563a9c389530 <col:46, col:72> 'uint8_t':'unsigned char' lvalue
|           |-ImplicitCastExpr 0x563a9c389518 <col:46, col:60> 'uint8_t *' <ArrayToPointerDecay>
|           | `-MemberExpr 0x563a9c3894c8 <col:46, col:60> 'uint8_t [16]' lvalue .__u6_addr8 0x563a9c0c48b8
|           |   `-MemberExpr 0x563a9c389498 <col:46, col:52> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x563a9c0c4bd8
|           |     `-MemberExpr 0x563a9c389468 <col:46> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x563a9c3866a8
|           |       `-CXXThisExpr 0x563a9c389458 <col:46> 'IP6Address *' implicit this
|           `-IntegerLiteral 0x563a9c3894f8 <col:71> 'int' 0
|-CXXMethodDecl 0x563a9c384bd8 <line:84:5, col:87> col:21 used data32 'const uint32_t *() const'
| `-CompoundStmt 0x563a9c389738 <col:36, col:87>
|   `-ReturnStmt 0x563a9c389728 <col:38, col:84>
|     `-ImplicitCastExpr 0x563a9c389710 <col:45, col:84> 'const uint32_t *' <NoOp>
|       `-CStyleCastExpr 0x563a9c3896e8 <col:45, col:84> 'uint32_t *' <BitCast>
|         `-UnaryOperator 0x563a9c3896c0 <col:57, col:84> 'const uint8_t *' prefix '&' cannot overflow
|           `-ArraySubscriptExpr 0x563a9c3896a0 <col:58, col:84> 'const uint8_t':'const unsigned char' lvalue
|             |-ImplicitCastExpr 0x563a9c389688 <col:58, col:72> 'const uint8_t *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x563a9c389638 <col:58, col:72> 'uint8_t const[16]' lvalue .__u6_addr8 0x563a9c0c48b8
|             |   `-MemberExpr 0x563a9c389608 <col:58, col:64> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x563a9c0c4bd8
|             |     `-MemberExpr 0x563a9c3895d8 <col:58> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x563a9c3866a8
|             |       `-CXXThisExpr 0x563a9c3895c8 <col:58> 'const IP6Address *' implicit this
|             `-IntegerLiteral 0x563a9c389668 <col:83> 'int' 0
|-CXXMethodDecl 0x563a9c384c98 <line:86:5, col:32> col:21 used hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x563a9c384d60 <line:88:5, col:30> col:9 mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x563a9c384f88 <line:89:5, col:80> col:17 matches_prefix 'bool (const IP6Address &, const IP6Address &) const' inline
| |-ParmVarDecl 0x563a9c384e38 <col:32, col:50> col:50 addr 'const IP6Address &'
| `-ParmVarDecl 0x563a9c384eb0 <col:56, col:74> col:74 mask 'const IP6Address &'
|-CXXMethodDecl 0x563a9c385108 <line:90:5, col:54> col:17 mask_as_specific 'bool (const IP6Address &) const' inline
| `-ParmVarDecl 0x563a9c385048 <col:34, col:51> col:52 'const IP6Address &'
|-CXXMethodDecl 0x563a9c3851d0 <line:97:5, line:99:5> line:97:10 has_ether_address 'bool () const'
| `-CompoundStmt 0x563a9c389a50 <col:36, line:99:5>
|   `-ReturnStmt 0x563a9c389a40 <line:98:2, col:81>
|     `-BinaryOperator 0x563a9c389a20 <col:9, col:81> 'bool' '&&'
|       |-BinaryOperator 0x563a9c389898 <col:9, col:41> 'bool' '=='
|       | |-ImplicitCastExpr 0x563a9c389880 <col:9, col:36> 'int' <IntegralCast>
|       | | `-ImplicitCastExpr 0x563a9c389868 <col:9, col:36> 'uint8_t':'unsigned char' <LValueToRValue>
|       | |   `-ArraySubscriptExpr 0x563a9c389828 <col:9, col:36> 'const uint8_t':'const unsigned char' lvalue
|       | |     |-ImplicitCastExpr 0x563a9c389810 <col:9, col:23> 'const uint8_t *' <ArrayToPointerDecay>
|       | |     | `-MemberExpr 0x563a9c3897c0 <col:9, col:23> 'uint8_t const[16]' lvalue .__u6_addr8 0x563a9c0c48b8
|       | |     |   `-MemberExpr 0x563a9c389790 <col:9, col:15> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x563a9c0c4bd8
|       | |     |     `-MemberExpr 0x563a9c389760 <col:9> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x563a9c3866a8
|       | |     |       `-CXXThisExpr 0x563a9c389750 <col:9> 'const IP6Address *' implicit this
|       | |     `-IntegerLiteral 0x563a9c3897f0 <col:34> 'int' 11
|       | `-IntegerLiteral 0x563a9c389848 <col:41> 'int' 255
|       `-BinaryOperator 0x563a9c389a00 <col:49, col:81> 'bool' '=='
|         |-ImplicitCastExpr 0x563a9c3899e8 <col:49, col:76> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x563a9c3899d0 <col:49, col:76> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x563a9c389990 <col:49, col:76> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x563a9c389978 <col:49, col:63> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x563a9c389928 <col:49, col:63> 'uint8_t const[16]' lvalue .__u6_addr8 0x563a9c0c48b8
|         |     |   `-MemberExpr 0x563a9c3898f8 <col:49, col:55> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x563a9c0c4bd8
|         |     |     `-MemberExpr 0x563a9c3898c8 <col:49> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x563a9c3866a8
|         |     |       `-CXXThisExpr 0x563a9c3898b8 <col:49> 'const IP6Address *' implicit this
|         |     `-IntegerLiteral 0x563a9c389958 <col:74> 'int' 12
|         `-IntegerLiteral 0x563a9c3899b0 <col:81> 'int' 254
|-CXXMethodDecl 0x563a9c385348 <line:104:5, col:41> col:10 ether_address 'bool (EtherAddress &) const'
| `-ParmVarDecl 0x563a9c385280 <col:24, col:38> col:38 x 'EtherAddress &'
|-CXXMethodDecl 0x563a9c385410 <line:111:5, line:114:5> line:111:17 is_ip4_compatible 'bool () const' inline
| `-CompoundStmt 0x563a9c389f38 <col:43, line:114:5>
|   `-ReturnStmt 0x563a9c389f28 <line:112:2, line:113:24>
|     `-BinaryOperator 0x563a9c389f08 <line:112:9, line:113:24> 'bool' '&&'
|       |-BinaryOperator 0x563a9c389d68 <line:112:9, col:44> 'bool' '&&'
|       | |-BinaryOperator 0x563a9c389bc8 <col:9, col:24> 'bool' '=='
|       | | |-ImplicitCastExpr 0x563a9c389b98 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|       | | | `-ArraySubscriptExpr 0x563a9c389b58 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|       | | |   |-CXXMemberCallExpr 0x563a9c389b18 <col:9, col:16> 'const uint32_t *'
|       | | |   | `-MemberExpr 0x563a9c389ae8 <col:9> '<bound member function type>' ->data32 0x563a9c384bd8
|       | | |   |   `-CXXThisExpr 0x563a9c389ad8 <col:9> 'const IP6Address *' implicit this
|       | | |   `-IntegerLiteral 0x563a9c389b38 <col:18> 'int' 0
|       | | `-ImplicitCastExpr 0x563a9c389bb0 <col:24> 'unsigned int' <IntegralCast>
|       | |   `-IntegerLiteral 0x563a9c389b78 <col:24> 'int' 0
|       | `-BinaryOperator 0x563a9c389d48 <col:29, col:44> 'bool' '=='
|       |   |-ImplicitCastExpr 0x563a9c389d18 <col:29, col:39> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-ArraySubscriptExpr 0x563a9c389cd8 <col:29, col:39> 'const uint32_t':'const unsigned int' lvalue
|       |   |   |-CXXMemberCallExpr 0x563a9c389c98 <col:29, col:36> 'const uint32_t *'
|       |   |   | `-MemberExpr 0x563a9c389c68 <col:29> '<bound member function type>' ->data32 0x563a9c384bd8
|       |   |   |   `-CXXThisExpr 0x563a9c389c58 <col:29> 'const IP6Address *' implicit this
|       |   |   `-IntegerLiteral 0x563a9c389cb8 <col:38> 'int' 1
|       |   `-ImplicitCastExpr 0x563a9c389d30 <col:44> 'unsigned int' <IntegralCast>
|       |     `-IntegerLiteral 0x563a9c389cf8 <col:44> 'int' 0
|       `-BinaryOperator 0x563a9c389ee8 <line:113:9, col:24> 'bool' '=='
|         |-ImplicitCastExpr 0x563a9c389eb8 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-ArraySubscriptExpr 0x563a9c389e78 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|         |   |-CXXMemberCallExpr 0x563a9c389e38 <col:9, col:16> 'const uint32_t *'
|         |   | `-MemberExpr 0x563a9c389e08 <col:9> '<bound member function type>' ->data32 0x563a9c384bd8
|         |   |   `-CXXThisExpr 0x563a9c389df8 <col:9> 'const IP6Address *' implicit this
|         |   `-IntegerLiteral 0x563a9c389e58 <col:18> 'int' 2
|         `-ImplicitCastExpr 0x563a9c389ed0 <col:24> 'unsigned int' <IntegralCast>
|           `-IntegerLiteral 0x563a9c389e98 <col:24> 'int' 0
|-CXXMethodDecl 0x563a9c3854d0 <line:120:5, line:123:5> line:120:17 is_ip4_mapped 'bool () const' inline
| `-CompoundStmt 0x563a9c38a4b0 <col:39, line:123:5>
|   `-ReturnStmt 0x563a9c38a4a0 <line:121:2, line:122:41>
|     `-BinaryOperator 0x563a9c38a480 <line:121:9, line:122:41> 'bool' '&&'
|       |-BinaryOperator 0x563a9c38a250 <line:121:9, col:44> 'bool' '&&'
|       | |-BinaryOperator 0x563a9c38a0b0 <col:9, col:24> 'bool' '=='
|       | | |-ImplicitCastExpr 0x563a9c38a080 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|       | | | `-ArraySubscriptExpr 0x563a9c38a040 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|       | | |   |-CXXMemberCallExpr 0x563a9c38a000 <col:9, col:16> 'const uint32_t *'
|       | | |   | `-MemberExpr 0x563a9c389fd0 <col:9> '<bound member function type>' ->data32 0x563a9c384bd8
|       | | |   |   `-CXXThisExpr 0x563a9c389fc0 <col:9> 'const IP6Address *' implicit this
|       | | |   `-IntegerLiteral 0x563a9c38a020 <col:18> 'int' 0
|       | | `-ImplicitCastExpr 0x563a9c38a098 <col:24> 'unsigned int' <IntegralCast>
|       | |   `-IntegerLiteral 0x563a9c38a060 <col:24> 'int' 0
|       | `-BinaryOperator 0x563a9c38a230 <col:29, col:44> 'bool' '=='
|       |   |-ImplicitCastExpr 0x563a9c38a200 <col:29, col:39> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-ArraySubscriptExpr 0x563a9c38a1c0 <col:29, col:39> 'const uint32_t':'const unsigned int' lvalue
|       |   |   |-CXXMemberCallExpr 0x563a9c38a180 <col:29, col:36> 'const uint32_t *'
|       |   |   | `-MemberExpr 0x563a9c38a150 <col:29> '<bound member function type>' ->data32 0x563a9c384bd8
|       |   |   |   `-CXXThisExpr 0x563a9c38a140 <col:29> 'const IP6Address *' implicit this
|       |   |   `-IntegerLiteral 0x563a9c38a1a0 <col:38> 'int' 1
|       |   `-ImplicitCastExpr 0x563a9c38a218 <col:44> 'unsigned int' <IntegralCast>
|       |     `-IntegerLiteral 0x563a9c38a1e0 <col:44> 'int' 0
|       `-BinaryOperator 0x563a9c38a460 <line:122:9, col:41> 'bool' '=='
|         |-ImplicitCastExpr 0x563a9c38a448 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-ArraySubscriptExpr 0x563a9c38a360 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|         |   |-CXXMemberCallExpr 0x563a9c38a320 <col:9, col:16> 'const uint32_t *'
|         |   | `-MemberExpr 0x563a9c38a2f0 <col:9> '<bound member function type>' ->data32 0x563a9c384bd8
|         |   |   `-CXXThisExpr 0x563a9c38a2e0 <col:9> 'const IP6Address *' implicit this
|         |   `-IntegerLiteral 0x563a9c38a340 <col:18> 'int' 2
|         `-CallExpr 0x563a9c38a420 <col:24, col:41> 'uint32_t':'unsigned int'
|           |-ImplicitCastExpr 0x563a9c38a408 <col:24> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x563a9c38a3e8 <col:24> 'uint32_t (uint32_t) throw()' lvalue Function 0x563a9c0cbe90 'htonl' 'uint32_t (uint32_t) throw()'
|           `-IntegerLiteral 0x563a9c38a3c8 <col:30> 'unsigned int' 65535
|-CXXMethodDecl 0x563a9c385590 <line:129:5, line:131:5> line:129:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x563a9c38a640 <col:38, line:131:5>
|   `-ReturnStmt 0x563a9c38a630 <line:130:9, col:47>
|     `-BinaryOperator 0x563a9c38a610 <col:16, col:47> 'bool' '=='
|       |-ImplicitCastExpr 0x563a9c38a5f8 <col:16, col:42> 'int' <IntegralCast>
|       | `-ImplicitCastExpr 0x563a9c38a5e0 <col:16, col:42> 'uint8_t':'unsigned char' <LValueToRValue>
|       |   `-ArraySubscriptExpr 0x563a9c38a5a0 <col:16, col:42> 'const uint8_t':'const unsigned char' lvalue
|       |     |-ImplicitCastExpr 0x563a9c38a588 <col:16, col:30> 'const uint8_t *' <ArrayToPointerDecay>
|       |     | `-MemberExpr 0x563a9c38a538 <col:16, col:30> 'uint8_t const[16]' lvalue .__u6_addr8 0x563a9c0c48b8
|       |     |   `-MemberExpr 0x563a9c38a508 <col:16, col:22> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x563a9c0c4bd8
|       |     |     `-MemberExpr 0x563a9c38a4d8 <col:16> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x563a9c3866a8
|       |     |       `-CXXThisExpr 0x563a9c38a4c8 <col:16> 'const IP6Address *' implicit this
|       |     `-IntegerLiteral 0x563a9c38a568 <col:41> 'int' 0
|       `-IntegerLiteral 0x563a9c38a5c0 <col:47> 'int' 255
|-CXXMethodDecl 0x563a9c385650 <line:137:5, line:139:5> line:137:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x563a9c38aa18 <col:39, line:139:5>
|   `-ReturnStmt 0x563a9c38aa08 <line:138:9, col:67>
|     `-BinaryOperator 0x563a9c38a9e8 <col:16, col:67> 'bool' '&&'
|       |-BinaryOperator 0x563a9c38a848 <col:16, col:47> 'bool' '=='
|       | |-ImplicitCastExpr 0x563a9c38a830 <col:16, col:26> 'uint32_t':'unsigned int' <LValueToRValue>
|       | | `-ArraySubscriptExpr 0x563a9c38a748 <col:16, col:26> 'const uint32_t':'const unsigned int' lvalue
|       | |   |-CXXMemberCallExpr 0x563a9c38a708 <col:16, col:23> 'const uint32_t *'
|       | |   | `-MemberExpr 0x563a9c38a6d8 <col:16> '<bound member function type>' ->data32 0x563a9c384bd8
|       | |   |   `-CXXThisExpr 0x563a9c38a6c8 <col:16> 'const IP6Address *' implicit this
|       | |   `-IntegerLiteral 0x563a9c38a728 <col:25> 'int' 0
|       | `-CallExpr 0x563a9c38a808 <col:31, col:47> 'uint32_t':'unsigned int'
|       |   |-ImplicitCastExpr 0x563a9c38a7f0 <col:31> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x563a9c38a7d0 <col:31> 'uint32_t (uint32_t) throw()' lvalue Function 0x563a9c0cbe90 'htonl' 'uint32_t (uint32_t) throw()'
|       |   `-IntegerLiteral 0x563a9c38a7b0 <col:37> 'unsigned int' 4269801472
|       `-BinaryOperator 0x563a9c38a9c8 <col:52, col:67> 'bool' '=='
|         |-ImplicitCastExpr 0x563a9c38a998 <col:52, col:62> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-ArraySubscriptExpr 0x563a9c38a958 <col:52, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |   |-CXXMemberCallExpr 0x563a9c38a918 <col:52, col:59> 'const uint32_t *'
|         |   | `-MemberExpr 0x563a9c38a8e8 <col:52> '<bound member function type>' ->data32 0x563a9c384bd8
|         |   |   `-CXXThisExpr 0x563a9c38a8d8 <col:52> 'const IP6Address *' implicit this
|         |   `-IntegerLiteral 0x563a9c38a938 <col:61> 'int' 1
|         `-ImplicitCastExpr 0x563a9c38a9b0 <col:67> 'unsigned int' <IntegralCast>
|           `-IntegerLiteral 0x563a9c38a978 <col:67> 'int' 0
|-CXXMethodDecl 0x563a9c385710 <line:145:5, col:29> col:15 ip4_address 'IPAddress () const'
|-CXXMethodDecl 0x563a9c3858b8 <line:154:5, col:53> col:24 operator&= 'IP6Address &(const IP6Address &)' inline
| `-ParmVarDecl 0x563a9c3857c0 <col:35, col:52> col:53 'const IP6Address &'
|-CXXMethodDecl 0x563a9c385a78 <line:155:5, col:58> col:24 operator&= 'IP6Address &(const struct in6_addr &)' inline
| `-ParmVarDecl 0x563a9c385988 <col:35, col:57> col:58 'const struct in6_addr &'
|-CXXMethodDecl 0x563a9c385bc0 <line:156:5, col:53> col:24 operator|= 'IP6Address &(const IP6Address &)' inline
| `-ParmVarDecl 0x563a9c385b30 <col:35, col:52> col:53 'const IP6Address &'
|-CXXMethodDecl 0x563a9c385d20 <line:157:5, col:58> col:24 operator|= 'IP6Address &(const struct in6_addr &)' inline
| `-ParmVarDecl 0x563a9c385c90 <col:35, col:57> col:58 'const struct in6_addr &'
|-CXXMethodDecl 0x563a9c385e80 <line:159:5, col:57> col:24 operator= 'IP6Address &(const struct in6_addr &)' inline
| `-ParmVarDecl 0x563a9c385df0 <col:34, col:56> col:57 'const struct in6_addr &'
|-CXXMethodDecl 0x563a9c386048 <line:160:5, col:56> col:24 used operator= 'IP6Address &(const struct in_addr &)' inline
| `-ParmVarDecl 0x563a9c385f50 <col:34, col:55> col:56 'const struct in_addr &'
|-CXXMethodDecl 0x563a9c3861c8 <line:162:5, col:35> col:10 used unparse 'void (StringAccum &) const'
| `-ParmVarDecl 0x563a9c386100 <col:18, col:31> col:31 sa 'StringAccum &'
|-CXXMethodDecl 0x563a9c386290 <line:163:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x563a9c386350 <line:164:5, col:31> col:12 unparse_expanded 'String () const'
|-CXXMethodDecl 0x563a9c386410 <line:166:5, col:42> col:12 s 'String () const'
| `-CompoundStmt 0x563a9c38ab98 <col:22, col:42>
|   `-ReturnStmt 0x563a9c38ab88 <col:24, col:39>
|     `-ExprWithCleanups 0x563a9c38ab70 <col:31, col:39> 'String'
|       `-CXXConstructExpr 0x563a9c38ab40 <col:31, col:39> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x563a9c38ab28 <col:31, col:39> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x563a9c38ab08 <col:31, col:39> 'String' (CXXTemporary 0x563a9c38ab08)
|             `-CXXMemberCallExpr 0x563a9c38aae0 <col:31, col:39> 'String'
|               `-MemberExpr 0x563a9c38aab0 <col:31> '<bound member function type>' ->unparse 0x563a9c386290
|                 `-CXXThisExpr 0x563a9c38aaa0 <col:31> 'const IP6Address *' implicit this
|-CXXConversionDecl 0x563a9c3864e0 <line:167:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x563a9c386588 <col:51> "" ""
|-TypedefDecl 0x563a9c386608 <line:169:5, col:31> col:31 parameter_type 'const IP6Address &'
| `-LValueReferenceType 0x563a9c384e00 'const IP6Address &'
|   `-QualType 0x563a9c3476b1 'const IP6Address' const
|     `-RecordType 0x563a9c3476b0 'IP6Address'
|       `-CXXRecord 0x563a9c382ff0 'IP6Address'
|-AccessSpecDecl 0x563a9c386660 <line:171:3, col:10> col:3 private
|-FieldDecl 0x563a9c3866a8 <line:173:5, col:21> col:21 referenced _addr 'struct in6_addr':'in6_addr'
|-CXXMethodDecl 0x563a9c3875e0 <line:14:7> col:7 implicit operator= 'IP6Address &(const IP6Address &)' inline default trivial noexcept-unevaluated 0x563a9c3875e0
| `-ParmVarDecl 0x563a9c3876b8 <col:7> col:7 'const IP6Address &'
|-CXXMethodDecl 0x563a9c387dc8 <col:7> col:7 implicit operator= 'IP6Address &(IP6Address &&)' inline default trivial noexcept-unevaluated 0x563a9c387dc8
| `-ParmVarDecl 0x563a9c387ed8 <col:7> col:7 'IP6Address &&'
|-CXXConstructorDecl 0x563a9c387f48 <col:7> col:7 implicit constexpr IP6Address 'void (const IP6Address &)' inline default trivial noexcept-unevaluated 0x563a9c387f48
| `-ParmVarDecl 0x563a9c388058 <col:7> col:7 'const IP6Address &'
|-CXXConstructorDecl 0x563a9c3881b0 <col:7> col:7 implicit used constexpr IP6Address 'void (IP6Address &&) noexcept' inline default trivial
| |-ParmVarDecl 0x563a9c3882c8 <col:7> col:7 used 'IP6Address &&'
| |-CXXCtorInitializer Field 0x563a9c3866a8 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x563a9c303a58 <col:7> 'struct in6_addr':'in6_addr' 'void (in6_addr &&) noexcept'
| |   `-MemberExpr 0x563a9c303900 <col:7> 'struct in6_addr':'in6_addr' xvalue ._addr 0x563a9c3866a8
| |     `-CXXStaticCastExpr 0x563a9c3038d0 <col:7> 'IP6Address' xvalue static_cast<class IP6Address &&> <NoOp>
| |       `-DeclRefExpr 0x563a9c3038a0 <col:7> 'IP6Address' lvalue ParmVar 0x563a9c3882c8 '' 'IP6Address &&'
| `-CompoundStmt 0x563a9c303ab8 <col:7>
`-CXXDestructorDecl 0x563a9c303708 <col:7> col:7 implicit referenced ~IP6Address 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IP6Address = type { %struct.in6_addr }
  NonVirtualBaseLLVMType:%class.IP6Address = type { %struct.in6_addr }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c0beb08 </usr/include/netinet/in.h:31:1, line:34:3> line:31:8 struct in_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563a9c0bec28 <col:1, col:8> col:8 implicit struct in_addr
|-FieldDecl 0x563a9c0becf0 <line:33:5, col:15> col:15 referenced s_addr 'in_addr_t':'unsigned int'
|-CXXConstructorDecl 0x563a9c17b260 <line:31:8> col:8 implicit used in_addr 'void () noexcept' inline default trivial
| `-CompoundStmt 0x563a9c17d7e8 <col:8>
|-CXXConstructorDecl 0x563a9c17b368 <col:8> col:8 implicit constexpr in_addr 'void (const in_addr &)' inline default trivial noexcept-unevaluated 0x563a9c17b368
| `-ParmVarDecl 0x563a9c17b478 <col:8> col:8 'const in_addr &'
|-CXXConstructorDecl 0x563a9c17b518 <col:8> col:8 implicit used constexpr in_addr 'void (in_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x563a9c17b628 <col:8> col:8 used 'in_addr &&'
| |-CXXCtorInitializer Field 0x563a9c0becf0 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x563a9c17da00 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x563a9c17d9d0 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x563a9c0becf0
| |     `-CXXStaticCastExpr 0x563a9c17d9a0 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
| |       `-DeclRefExpr 0x563a9c17d970 <col:8> 'in_addr' lvalue ParmVar 0x563a9c17b628 '' 'in_addr &&'
| `-CompoundStmt 0x563a9c17da48 <col:8>
`-CXXDestructorDecl 0x563a9c1805b0 <col:8> col:8 implicit referenced ~in_addr 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.in_addr = type { i32 }
  NonVirtualBaseLLVMType:%struct.in_addr = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c170d58 <../dummy_inc/clicknet/ip.h:23:1, line:52:1> line:23:8 struct click_ip definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x563a9c170e78 <col:1, col:8> col:8 implicit struct click_ip
|-FieldDecl 0x563a9c170f60 <line:28:5, col:22> col:14 referenced ip_hl 'unsigned int'
| `-ConstantExpr 0x563a9c170f40 <col:22> 'int' Int: 4
|   `-IntegerLiteral 0x563a9c170f08 <col:22> 'int' 4
|-FieldDecl 0x563a9c171008 <line:29:5, col:21> col:14 ip_v 'unsigned int'
| `-ConstantExpr 0x563a9c170fe8 <col:21> 'int' Int: 4
|   `-IntegerLiteral 0x563a9c170fb0 <col:21> 'int' 4
|-FieldDecl 0x563a9c171068 <line:33:5, col:13> col:13 ip_tos 'uint8_t':'unsigned char'
|-FieldDecl 0x563a9c1710c8 <line:40:5, col:14> col:14 referenced ip_len 'uint16_t':'unsigned short'
|-FieldDecl 0x563a9c171128 <line:41:5, col:14> col:14 ip_id 'uint16_t':'unsigned short'
|-FieldDecl 0x563a9c171188 <line:42:5, col:14> col:14 ip_off 'uint16_t':'unsigned short'
|-FieldDecl 0x563a9c1711e8 <line:47:5, col:13> col:13 referenced ip_ttl 'uint8_t':'unsigned char'
|-FieldDecl 0x563a9c171248 <line:48:5, col:13> col:13 referenced ip_p 'uint8_t':'unsigned char'
|-FieldDecl 0x563a9c1712a8 <line:49:5, col:14> col:14 ip_sum 'uint16_t':'unsigned short'
|-FieldDecl 0x563a9c171318 <line:50:5, col:20> col:20 referenced ip_src 'struct in_addr':'in_addr'
`-FieldDecl 0x563a9c171388 <line:51:5, col:20> col:20 referenced ip_dst 'struct in_addr':'in_addr'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  NonVirtualBaseLLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
]>

*** Dumping AST Record Layout
         0 | class WritablePacket
         0 |   class Packet (base)
         0 |     class atomic_uint32_t _use_count
         0 |       uint32_t _val
         8 |     class Packet * _data_packet
        16 |     unsigned char * _head
        24 |     unsigned char * _data
        32 |     unsigned char * _tail
        40 |     unsigned char * _end
        48 |     struct Packet::AllAnno _aa
        48 |       union Packet::Anno cb
        48 |         char [48] c
        48 |         uint8_t [48] u8
        48 |         uint16_t [24] u16
        48 |         uint32_t [12] u32
        48 |         uint64_t [6] u64
        96 |       unsigned char * mac
       104 |       unsigned char * nh
       112 |       unsigned char * h
       120 |       enum Packet::PacketType pkt_type
       124 |       char [8] timestamp
       136 |       class Packet * next
       144 |       class Packet * prev
       152 |     Packet::buffer_destructor_type _destructor
       160 |     void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c36b3b0 prev 0x563a9c3476d0 <../dummy_inc/click/packet.hh:778:1, line:816:1> line:778:7 referenced class WritablePacket definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Packet'
|-CXXRecordDecl 0x563a9c36b4e8 <col:1, col:7> col:7 implicit referenced class WritablePacket
|-AccessSpecDecl 0x563a9c36b578 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x563a9c36b620 <line:780:5, col:62> col:55 used data 'unsigned char *() const'
| |-NoInlineAttr 0x563a9c36b6c0 <col:20>
| `-OptimizeNoneAttr 0x563a9c36b718 <col:30>
|-CXXMethodDecl 0x563a9c36b768 <line:781:5, col:66> col:55 end_data 'unsigned char *() const'
| |-NoInlineAttr 0x563a9c36b808 <col:20>
| `-OptimizeNoneAttr 0x563a9c36b860 <col:30>
|-CXXMethodDecl 0x563a9c36b8b0 <line:782:5, col:36> col:27 buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x563a9c36b978 <line:783:5, col:40> col:27 end_buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x563a9c36ba40 <line:784:5, col:40> col:27 mac_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x563a9c36bb88 <line:785:5, col:40> col:25 ether_header 'click_ether *() const' inline
|-CXXMethodDecl 0x563a9c36bc50 <line:786:5, col:72> col:55 network_header 'unsigned char *() const'
| |-NoInlineAttr 0x563a9c36bcf0 <col:20>
| `-OptimizeNoneAttr 0x563a9c36bd48 <col:30>
|-CXXMethodDecl 0x563a9c36bdb8 <line:787:5, col:62> col:50 ip_header 'click_ip *() const'
| |-NoInlineAttr 0x563a9c36be58 <col:20>
| `-OptimizeNoneAttr 0x563a9c36beb0 <col:30>
|-CXXMethodDecl 0x563a9c36bf58 <line:788:5, col:64> col:51 ip6_header 'click_ip6 *() const'
| |-NoInlineAttr 0x563a9c36bff8 <col:20>
| `-OptimizeNoneAttr 0x563a9c36c050 <col:30>
|-CXXMethodDecl 0x563a9c36c0a0 <line:789:5, col:46> col:27 transport_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x563a9c36c1b8 <line:790:5, col:38> col:24 icmp_header 'click_icmp *() const' inline
|-CXXMethodDecl 0x563a9c36c2d8 <line:791:5, col:36> col:23 tcp_header 'click_tcp *() const' inline
|-CXXMethodDecl 0x563a9c36c3f8 <line:792:5, col:36> col:23 udp_header 'click_udp *() const' inline
|-CXXMethodDecl 0x563a9c36c4c0 <line:795:5, col:73> col:27 buffer_data 'unsigned char *() const' inline
| `-DeprecatedAttr 0x563a9c36c560 <col:62> "" ""
|-AccessSpecDecl 0x563a9c36c5d0 <line:798:2, col:9> col:2 private
|-CXXConstructorDecl 0x563a9c36c630 <line:800:5, col:31> col:12 WritablePacket 'void ()' inline
| |-CXXCtorInitializer 'Packet'
| | `-CXXConstructExpr 0x563a9c36d228 <col:12> 'Packet' 'void ()'
| `-CompoundStmt 0x563a9c36d450 <col:29, col:31>
|-CXXMethodDecl 0x563a9c36c6f8 <line:802:5, col:28> col:17 initialize 'void ()' inline
|-CXXConstructorDecl 0x563a9c36c838 <line:804:5, col:35> col:5 WritablePacket 'void (const Packet &)'
| `-ParmVarDecl 0x563a9c36c7a8 <col:20, col:34> col:34 x 'const Packet &'
|-CXXDestructorDecl 0x563a9c36c930 <line:805:5, col:25> col:5 ~WritablePacket 'void () noexcept'
| `-CompoundStmt 0x563a9c36d460 <col:23, col:25>
|-CXXMethodDecl 0x563a9c36cae8 <line:808:5, col:56> col:28 pool_allocate 'WritablePacket *(bool)' static
| `-ParmVarDecl 0x563a9c36ca20 <col:42, col:47> col:47 with_data 'bool'
|-CXXMethodDecl 0x563a9c36cdb8 <line:809:5, line:810:24> line:809:28 pool_allocate 'WritablePacket *(uint32_t, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x563a9c36cba0 <col:42, col:51> col:51 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x563a9c36cc18 <col:61, col:70> col:70 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x563a9c36cc90 <line:810:7, col:16> col:16 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x563a9c36cf48 <line:811:5, col:42> col:17 recycle 'void (WritablePacket *)' static
| `-ParmVarDecl 0x563a9c36ce80 <col:25, col:41> col:41 p 'WritablePacket *'
|-FriendDecl 0x563a9c36d040 <line:814:5, col:18> col:12 'class Packet':'Packet'
`-CXXConstructorDecl 0x563a9c36d0a8 <line:778:7> col:7 implicit WritablePacket 'void (const WritablePacket &)' inline default noexcept-unevaluated 0x563a9c36d0a8
  `-ParmVarDecl 0x563a9c36d1b8 <col:7> col:7 'const WritablePacket &'

Layout: <CGRecordLayout
  LLVMType:%class.WritablePacket = type { %class.Packet }
  NonVirtualBaseLLVMType:%class.WritablePacket = type { %class.Packet }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c0d5138 <../dummy_inc/clicknet/ip6.h:18:2, line:27:2> line:18:2 struct definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x563a9c0d5268 <line:19:6, col:15> col:15 referenced ip6_un1_flow 'uint32_t':'unsigned int'
|-FieldDecl 0x563a9c0d52c8 <line:24:6, col:15> col:15 referenced ip6_un1_plen 'uint16_t':'unsigned short'
|-FieldDecl 0x563a9c0d5328 <line:25:6, col:14> col:14 referenced ip6_un1_nxt 'uint8_t':'unsigned char'
`-FieldDecl 0x563a9c0d5388 <line:26:6, col:14> col:14 referenced ip6_un1_hlim 'uint8_t':'unsigned char'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i32, i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i32, i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c0d5510 <../dummy_inc/clicknet/ip6.h:30:2, line:38:2> line:30:2 struct definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x563a9c0d5680 <line:35:6, col:28> col:15 ip6_un3_fc 'unsigned int'
| `-ConstantExpr 0x563a9c0d5660 <col:28> 'int' Int: 4
|   `-IntegerLiteral 0x563a9c0d5628 <col:28> 'int' 4
`-FieldDecl 0x563a9c0d5728 <line:36:6, col:27> col:15 referenced ip6_un3_v 'unsigned int'
  `-ConstantExpr 0x563a9c0d5708 <col:27> 'int' Int: 4
    `-IntegerLiteral 0x563a9c0d56d0 <col:27> 'int' 4

Layout: <CGRecordLayout
  LLVMType:%struct.anon.1 = type { i8, [3 x i8] }
  NonVirtualBaseLLVMType:%struct.anon.1 = type { i8, [3 x i8] }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c0d5018 <../dummy_inc/clicknet/ip6.h:17:5, line:39:5> line:17:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x563a9c0d5138 <line:18:2, line:27:2> line:18:2 struct definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x563a9c0d5268 <line:19:6, col:15> col:15 referenced ip6_un1_flow 'uint32_t':'unsigned int'
| |-FieldDecl 0x563a9c0d52c8 <line:24:6, col:15> col:15 referenced ip6_un1_plen 'uint16_t':'unsigned short'
| |-FieldDecl 0x563a9c0d5328 <line:25:6, col:14> col:14 referenced ip6_un1_nxt 'uint8_t':'unsigned char'
| `-FieldDecl 0x563a9c0d5388 <line:26:6, col:14> col:14 referenced ip6_un1_hlim 'uint8_t':'unsigned char'
|-FieldDecl 0x563a9c0d5448 <line:18:2, line:27:4> col:4 referenced ip6_un1 'struct (anonymous struct at ../dummy_inc/clicknet/ip6.h:18:2)':'click_ip6::(anonymous struct at ../dummy_inc/clicknet/ip6.h:18:2)'
|-FieldDecl 0x563a9c0d54c0 <line:28:2, col:10> col:10 ip6_un2_vfc 'uint8_t':'unsigned char'
|-CXXRecordDecl 0x563a9c0d5510 <line:30:2, line:38:2> line:30:2 struct definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x563a9c0d5680 <line:35:6, col:28> col:15 ip6_un3_fc 'unsigned int'
| | `-ConstantExpr 0x563a9c0d5660 <col:28> 'int' Int: 4
| |   `-IntegerLiteral 0x563a9c0d5628 <col:28> 'int' 4
| `-FieldDecl 0x563a9c0d5728 <line:36:6, col:27> col:15 referenced ip6_un3_v 'unsigned int'
|   `-ConstantExpr 0x563a9c0d5708 <col:27> 'int' Int: 4
|     `-IntegerLiteral 0x563a9c0d56d0 <col:27> 'int' 4
`-FieldDecl 0x563a9c0d57e8 <line:30:2, line:38:4> col:4 referenced ip6_un3 'struct (anonymous struct at ../dummy_inc/clicknet/ip6.h:30:2)':'click_ip6::(anonymous struct at ../dummy_inc/clicknet/ip6.h:30:2)'

Layout: <CGRecordLayout
  LLVMType:%union.anon.0 = type { %struct.anon }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c0d4e70 <../dummy_inc/clicknet/ip6.h:16:1, line:42:1> line:16:8 struct click_ip6 definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x563a9c0d4f88 <col:1, col:8> col:8 implicit struct click_ip6
|-CXXRecordDecl 0x563a9c0d5018 <line:17:5, line:39:5> line:17:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x563a9c0d5138 <line:18:2, line:27:2> line:18:2 struct definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-FieldDecl 0x563a9c0d5268 <line:19:6, col:15> col:15 referenced ip6_un1_flow 'uint32_t':'unsigned int'
| | |-FieldDecl 0x563a9c0d52c8 <line:24:6, col:15> col:15 referenced ip6_un1_plen 'uint16_t':'unsigned short'
| | |-FieldDecl 0x563a9c0d5328 <line:25:6, col:14> col:14 referenced ip6_un1_nxt 'uint8_t':'unsigned char'
| | `-FieldDecl 0x563a9c0d5388 <line:26:6, col:14> col:14 referenced ip6_un1_hlim 'uint8_t':'unsigned char'
| |-FieldDecl 0x563a9c0d5448 <line:18:2, line:27:4> col:4 referenced ip6_un1 'struct (anonymous struct at ../dummy_inc/clicknet/ip6.h:18:2)':'click_ip6::(anonymous struct at ../dummy_inc/clicknet/ip6.h:18:2)'
| |-FieldDecl 0x563a9c0d54c0 <line:28:2, col:10> col:10 ip6_un2_vfc 'uint8_t':'unsigned char'
| |-CXXRecordDecl 0x563a9c0d5510 <line:30:2, line:38:2> line:30:2 struct definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-FieldDecl 0x563a9c0d5680 <line:35:6, col:28> col:15 ip6_un3_fc 'unsigned int'
| | | `-ConstantExpr 0x563a9c0d5660 <col:28> 'int' Int: 4
| | |   `-IntegerLiteral 0x563a9c0d5628 <col:28> 'int' 4
| | `-FieldDecl 0x563a9c0d5728 <line:36:6, col:27> col:15 referenced ip6_un3_v 'unsigned int'
| |   `-ConstantExpr 0x563a9c0d5708 <col:27> 'int' Int: 4
| |     `-IntegerLiteral 0x563a9c0d56d0 <col:27> 'int' 4
| `-FieldDecl 0x563a9c0d57e8 <line:30:2, line:38:4> col:4 referenced ip6_un3 'struct (anonymous struct at ../dummy_inc/clicknet/ip6.h:30:2)':'click_ip6::(anonymous struct at ../dummy_inc/clicknet/ip6.h:30:2)'
|-FieldDecl 0x563a9c0d5998 <line:17:5, line:39:7> col:7 referenced ip6_ctlun 'union (anonymous union at ../dummy_inc/clicknet/ip6.h:17:5)':'click_ip6::(anonymous union at ../dummy_inc/clicknet/ip6.h:17:5)'
|-FieldDecl 0x563a9c0d5a20 <line:40:5, col:21> col:21 referenced ip6_src 'struct in6_addr':'in6_addr'
`-FieldDecl 0x563a9c0d5a90 <line:41:5, col:21> col:21 referenced ip6_dst 'struct in6_addr':'in6_addr'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ip6 = type { %union.anon.0, %struct.in6_addr, %struct.in6_addr }
  NonVirtualBaseLLVMType:%struct.click_ip6 = type { %union.anon.0, %struct.in6_addr, %struct.in6_addr }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_tcp
         0 |   uint16_t th_sport
         2 |   uint16_t th_dport
         4 |   tcp_seq_t th_seq
         8 |   tcp_seq_t th_ack
    12:0-3 |   unsigned int th_flags2
    12:4-7 |   unsigned int th_off
        13 |   uint8_t th_flags
        14 |   uint16_t th_win
        16 |   uint16_t th_sum
        18 |   uint16_t th_urp
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c44c938 prev 0x563a9c3474c0 <../dummy_inc/clicknet/tcp.h:24:1, line:51:1> line:24:8 referenced struct click_tcp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x563a9c44ca30 <col:1, col:8> col:8 implicit struct click_tcp
|-FieldDecl 0x563a9c44cad0 <line:25:5, col:14> col:14 th_sport 'uint16_t':'unsigned short'
|-FieldDecl 0x563a9c44cb30 <line:26:5, col:14> col:14 th_dport 'uint16_t':'unsigned short'
|-FieldDecl 0x563a9c44cbb0 <line:27:5, col:15> col:15 th_seq 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x563a9c44cc10 <line:28:5, col:15> col:15 th_ack 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x563a9c44ccb8 <line:30:5, col:26> col:14 th_flags2 'unsigned int'
| `-ConstantExpr 0x563a9c44cc98 <col:26> 'int' Int: 4
|   `-IntegerLiteral 0x563a9c44cc60 <col:26> 'int' 4
|-FieldDecl 0x563a9c44cd60 <line:31:5, col:23> col:14 th_off 'unsigned int'
| `-ConstantExpr 0x563a9c44cd40 <col:23> 'int' Int: 4
|   `-IntegerLiteral 0x563a9c44cd08 <col:23> 'int' 4
|-FieldDecl 0x563a9c44cdc0 <line:39:5, col:13> col:13 th_flags 'uint8_t':'unsigned char'
|-FieldDecl 0x563a9c44ce20 <line:48:5, col:14> col:14 th_win 'uint16_t':'unsigned short'
|-FieldDecl 0x563a9c44ce80 <line:49:5, col:14> col:14 referenced th_sum 'uint16_t':'unsigned short'
`-FieldDecl 0x563a9c44cee0 <line:50:5, col:14> col:14 th_urp 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
]>

*** Dumping AST Record Layout
         0 | struct click_udp
         0 |   uint16_t uh_sport
         2 |   uint16_t uh_dport
         4 |   uint16_t uh_ulen
         6 |   uint16_t uh_sum
           | [sizeof=8, dsize=8, align=2,
           |  nvsize=8, nvalign=2]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c44cf48 prev 0x563a9c347570 <../dummy_inc/clicknet/udp.h:11:1, line:16:1> line:11:8 referenced struct click_udp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x563a9c44d040 <col:1, col:8> col:8 implicit struct click_udp
|-FieldDecl 0x563a9c44d0e0 <line:12:5, col:14> col:14 uh_sport 'uint16_t':'unsigned short'
|-FieldDecl 0x563a9c44d140 <line:13:5, col:14> col:14 uh_dport 'uint16_t':'unsigned short'
|-FieldDecl 0x563a9c44d1a0 <line:14:5, col:14> col:14 uh_ulen 'uint16_t':'unsigned short'
`-FieldDecl 0x563a9c44d200 <line:15:5, col:14> col:14 referenced uh_sum 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_udp = type { i16, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_udp = type { i16, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_icmp_sequenced
         0 |   uint8_t icmp_type
         1 |   uint8_t icmp_code
         2 |   uint16_t icmp_cksum
         4 |   uint16_t icmp_identifier
         6 |   uint16_t icmp_sequence
           | [sizeof=8, dsize=8, align=2,
           |  nvsize=8, nvalign=2]

*** Dumping AST Record Layout
         0 | struct click_icmp6_sequenced
         0 |   uint8_t icmp6_type
         1 |   uint8_t icmp6_code
         2 |   uint16_t icmp6_cksum
         4 |   uint16_t icmp6_identifier
         6 |   uint16_t icmp6_sequence
           | [sizeof=8, dsize=8, align=2,
           |  nvsize=8, nvalign=2]

*** Dumping AST Record Layout
         0 | struct click_icmp
         0 |   uint8_t icmp_type
         1 |   uint8_t icmp_code
         2 |   uint16_t icmp_cksum
         4 |   uint32_t padding
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct click_icmp6_paramprob
         0 |   uint8_t icmp6_type
         1 |   uint8_t icmp6_code
         2 |   uint16_t icmp6_cksum
         4 |   uint32_t icmp6_pointer
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct click_icmp6_pkttoobig
         0 |   uint8_t icmp6_type
         1 |   uint8_t icmp6_code
         2 |   uint16_t icmp6_cksum
         4 |   uint32_t icmp6_mtusize
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct click_icmp6
         0 |   uint8_t icmp6_type
         1 |   uint8_t icmp6_code
         2 |   uint16_t icmp6_cksum
         4 |   uint32_t padding
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct click_icmp_paramprob
         0 |   uint8_t icmp_type
         1 |   uint8_t icmp_code
         2 |   uint16_t icmp_cksum
         4 |   uint8_t icmp_pointer
         5 |   uint8_t [3] padding
           | [sizeof=8, dsize=8, align=2,
           |  nvsize=8, nvalign=2]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c449c38 <../dummy_inc/clicknet/icmp.h:27:1, line:33:1> line:27:8 referenced struct click_icmp_sequenced definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x563a9c449d58 <col:1, col:8> col:8 implicit struct click_icmp_sequenced
|-FieldDecl 0x563a9c449df8 <line:28:5, col:13> col:13 icmp_type 'uint8_t':'unsigned char'
|-FieldDecl 0x563a9c449e58 <line:29:5, col:13> col:13 icmp_code 'uint8_t':'unsigned char'
|-FieldDecl 0x563a9c449eb8 <line:30:5, col:14> col:14 referenced icmp_cksum 'uint16_t':'unsigned short'
|-FieldDecl 0x563a9c449f18 <line:31:5, col:14> col:14 referenced icmp_identifier 'uint16_t':'unsigned short'
`-FieldDecl 0x563a9c449f78 <line:32:5, col:14> col:14 referenced icmp_sequence 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_icmp_sequenced = type { i8, i8, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_icmp_sequenced = type { i8, i8, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c44bd70 <../dummy_inc/clicknet/icmp6.h:78:1, line:87:1> line:78:8 referenced struct click_icmp6_sequenced definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x563a9c44be88 <col:1, col:8> col:8 implicit struct click_icmp6_sequenced
|-FieldDecl 0x563a9c44bf28 <line:79:5, col:13> col:13 referenced icmp6_type 'uint8_t':'unsigned char'
|-FieldDecl 0x563a9c44bf88 <line:80:5, col:13> col:13 icmp6_code 'uint8_t':'unsigned char'
|-FieldDecl 0x563a9c44bfe8 <line:81:5, col:14> col:14 referenced icmp6_cksum 'uint16_t':'unsigned short'
|-FieldDecl 0x563a9c44c048 <line:82:5, col:14> col:14 referenced icmp6_identifier 'uint16_t':'unsigned short'
`-FieldDecl 0x563a9c44c0a8 <line:83:5, col:14> col:14 referenced icmp6_sequence 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_icmp6_sequenced = type { i8, i8, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_icmp6_sequenced = type { i8, i8, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c449918 prev 0x563a9c347380 <../dummy_inc/clicknet/icmp.h:17:1, line:23:1> line:17:8 referenced struct click_icmp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x563a9c449a10 <col:1, col:8> col:8 implicit struct click_icmp
|-FieldDecl 0x563a9c449ab0 <line:18:5, col:13> col:13 icmp_type 'uint8_t':'unsigned char'
|-FieldDecl 0x563a9c449b10 <line:19:5, col:13> col:13 icmp_code 'uint8_t':'unsigned char'
|-FieldDecl 0x563a9c449b70 <line:20:5, col:14> col:14 referenced icmp_cksum 'uint16_t':'unsigned short'
`-FieldDecl 0x563a9c449bd0 <line:21:5, col:14> col:14 padding 'uint32_t':'unsigned int'

Layout: <CGRecordLayout
  LLVMType:%struct.click_icmp = type { i8, i8, i16, i32 }
  NonVirtualBaseLLVMType:%struct.click_icmp = type { i8, i8, i16, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c44ba30 <../dummy_inc/clicknet/icmp6.h:68:1, line:74:1> line:68:8 referenced struct click_icmp6_paramprob definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x563a9c44bb48 <col:1, col:8> col:8 implicit struct click_icmp6_paramprob
|-FieldDecl 0x563a9c44bbe8 <line:69:5, col:13> col:13 referenced icmp6_type 'uint8_t':'unsigned char'
|-FieldDecl 0x563a9c44bc48 <line:70:5, col:13> col:13 referenced icmp6_code 'uint8_t':'unsigned char'
|-FieldDecl 0x563a9c44bca8 <line:71:5, col:14> col:14 referenced icmp6_cksum 'uint16_t':'unsigned short'
`-FieldDecl 0x563a9c44bd08 <line:72:5, col:14> col:14 referenced icmp6_pointer 'uint32_t':'unsigned int'

Layout: <CGRecordLayout
  LLVMType:%struct.click_icmp6_paramprob = type { i8, i8, i16, i32 }
  NonVirtualBaseLLVMType:%struct.click_icmp6_paramprob = type { i8, i8, i16, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c44b6f0 <../dummy_inc/clicknet/icmp6.h:59:1, line:65:1> line:59:8 referenced struct click_icmp6_pkttoobig definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x563a9c44b808 <col:1, col:8> col:8 implicit struct click_icmp6_pkttoobig
|-FieldDecl 0x563a9c44b8a8 <line:60:5, col:13> col:13 referenced icmp6_type 'uint8_t':'unsigned char'
|-FieldDecl 0x563a9c44b908 <line:61:5, col:13> col:13 referenced icmp6_code 'uint8_t':'unsigned char'
|-FieldDecl 0x563a9c44b968 <line:62:5, col:14> col:14 referenced icmp6_cksum 'uint16_t':'unsigned short'
`-FieldDecl 0x563a9c44b9c8 <line:63:5, col:14> col:14 icmp6_mtusize 'uint32_t':'unsigned int'

Layout: <CGRecordLayout
  LLVMType:%struct.click_icmp6_pkttoobig = type { i8, i8, i16, i32 }
  NonVirtualBaseLLVMType:%struct.click_icmp6_pkttoobig = type { i8, i8, i16, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c44b3b0 <../dummy_inc/clicknet/icmp6.h:50:1, line:56:1> line:50:8 referenced struct click_icmp6 definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x563a9c44b4c8 <col:1, col:8> col:8 implicit struct click_icmp6
|-FieldDecl 0x563a9c44b568 <line:51:5, col:13> col:13 referenced icmp6_type 'uint8_t':'unsigned char'
|-FieldDecl 0x563a9c44b5c8 <line:52:5, col:13> col:13 referenced icmp6_code 'uint8_t':'unsigned char'
|-FieldDecl 0x563a9c44b628 <line:53:5, col:14> col:14 referenced icmp6_cksum 'uint16_t':'unsigned short'
`-FieldDecl 0x563a9c44b688 <line:54:5, col:14> col:14 padding 'uint32_t':'unsigned int'

Layout: <CGRecordLayout
  LLVMType:%struct.click_icmp6 = type { i8, i8, i16, i32 }
  NonVirtualBaseLLVMType:%struct.click_icmp6 = type { i8, i8, i16, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c449fe0 <../dummy_inc/clicknet/icmp.h:36:1, line:43:1> line:36:8 referenced struct click_icmp_paramprob definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x563a9c44a0f8 <col:1, col:8> col:8 implicit struct click_icmp_paramprob
|-FieldDecl 0x563a9c44a198 <line:37:5, col:13> col:13 icmp_type 'uint8_t':'unsigned char'
|-FieldDecl 0x563a9c44a1f8 <line:38:5, col:13> col:13 icmp_code 'uint8_t':'unsigned char'
|-FieldDecl 0x563a9c44a258 <line:39:5, col:14> col:14 referenced icmp_cksum 'uint16_t':'unsigned short'
|-FieldDecl 0x563a9c44a2b8 <line:40:5, col:13> col:13 icmp_pointer 'uint8_t':'unsigned char'
`-FieldDecl 0x563a9c44a3e8 <line:41:5, col:22> col:13 padding 'uint8_t [3]'

Layout: <CGRecordLayout
  LLVMType:%struct.click_icmp_paramprob = type { i8, i8, i16, i8, [3 x i8] }
  NonVirtualBaseLLVMType:%struct.click_icmp_paramprob = type { i8, i8, i16, i8, [3 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c174ff8 prev 0x563a9c150628 <../dummy_inc/click/ipaddress.hh:15:1, line:154:1> line:15:7 referenced class IPAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563a9c1750f0 <col:1, col:7> col:7 implicit referenced class IPAddress
|-AccessSpecDecl 0x563a9c175180 <col:19, col:25> col:19 public
|-TypedefDecl 0x563a9c1751b8 <line:17:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x563a9bf961b0 'uninitialized_type'
|   `-CXXRecord 0x563a9bf96118 'uninitialized_type'
|-CXXConstructorDecl 0x563a9c175270 <line:20:5, line:22:5> line:20:12 IPAddress 'void ()' inline
| |-CXXCtorInitializer Field 0x563a9c17a870 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x563a9c17a918 <line:21:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x563a9c17a8d8 <col:10> 'int' 0
| `-CompoundStmt 0x563a9c17a960 <col:13, line:22:5>
|-CXXConstructorDecl 0x563a9c1753c0 <line:25:5, line:27:5> line:25:12 used IPAddress 'void (unsigned int)' inline
| |-ParmVarDecl 0x563a9c175330 <col:22, col:31> col:31 used x 'unsigned int'
| |-CXXCtorInitializer Field 0x563a9c17a870 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x563a9c17a9b0 <line:26:10> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x563a9c17a970 <col:10> 'unsigned int' lvalue ParmVar 0x563a9c175330 'x' 'unsigned int'
| `-CompoundStmt 0x563a9c17a9f8 <col:13, line:27:5>
|-CXXConstructorDecl 0x563a9c175518 <line:29:5, line:31:5> line:29:21 IPAddress 'void (int)' inline
| |-ParmVarDecl 0x563a9c175488 <col:31, col:35> col:35 used x 'int'
| |-CXXCtorInitializer Field 0x563a9c17a870 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x563a9c17aa60 <line:30:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x563a9c17aa48 <col:10> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x563a9c17aa08 <col:10> 'int' lvalue ParmVar 0x563a9c175488 'x' 'int'
| `-CompoundStmt 0x563a9c17aaa8 <col:13, line:31:5>
|-CXXConstructorDecl 0x563a9c175670 <line:33:5, line:35:5> line:33:21 IPAddress 'void (unsigned long)' inline
| |-ParmVarDecl 0x563a9c1755e0 <col:31, col:45> col:45 used x 'unsigned long'
| |-CXXCtorInitializer Field 0x563a9c17a870 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x563a9c17ab10 <line:34:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x563a9c17aaf8 <col:10> 'unsigned long' <LValueToRValue>
| |     `-DeclRefExpr 0x563a9c17aab8 <col:10> 'unsigned long' lvalue ParmVar 0x563a9c1755e0 'x' 'unsigned long'
| `-CompoundStmt 0x563a9c17ab58 <col:13, line:35:5>
|-CXXConstructorDecl 0x563a9c1757c8 <line:37:5, line:39:5> line:37:21 IPAddress 'void (long)' inline
| |-ParmVarDecl 0x563a9c175738 <col:31, col:36> col:36 used x 'long'
| |-CXXCtorInitializer Field 0x563a9c17a870 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x563a9c17abc0 <line:38:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x563a9c17aba8 <col:10> 'long' <LValueToRValue>
| |     `-DeclRefExpr 0x563a9c17ab68 <col:10> 'long' lvalue ParmVar 0x563a9c175738 'x' 'long'
| `-CompoundStmt 0x563a9c17ac08 <col:13, line:39:5>
|-CXXConstructorDecl 0x563a9c175988 <line:42:5, line:44:5> line:42:12 used IPAddress 'void (struct in_addr)' inline
| |-ParmVarDecl 0x563a9c175898 <col:22, col:37> col:37 used x 'struct in_addr':'in_addr'
| |-CXXCtorInitializer Field 0x563a9c17a870 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x563a9c17ac88 <line:43:10, col:12> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x563a9c17ac38 <col:10, col:12> 'in_addr_t':'unsigned int' lvalue .s_addr 0x563a9c0becf0
| |     `-DeclRefExpr 0x563a9c17ac18 <col:10> 'struct in_addr':'in_addr' lvalue ParmVar 0x563a9c175898 'x' 'struct in_addr':'in_addr'
| `-CompoundStmt 0x563a9c17acd0 <col:20, line:44:5>
|-CXXConstructorDecl 0x563a9c175b18 <line:50:5, line:56:5> line:50:14 IPAddress 'void (const unsigned char *)'
| |-ParmVarDecl 0x563a9c175a50 <col:24, col:45> col:45 used data 'const unsigned char *'
| `-CompoundStmt 0x563a9c17ae38 <col:51, line:56:5>
|   `-BinaryOperator 0x563a9c17ae18 <line:52:2, col:52> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x563a9c17acf0 <col:2> 'uint32_t':'unsigned int' lvalue ->_addr 0x563a9c17a870
|     | `-CXXThisExpr 0x563a9c17ace0 <col:2> 'IPAddress *' implicit this
|     `-ImplicitCastExpr 0x563a9c17ae00 <col:10, col:52> 'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x563a9c17ade8 <col:10, col:52> 'const unsigned int' lvalue prefix '*' cannot overflow
|         `-ParenExpr 0x563a9c17adc8 <col:11, col:52> 'const unsigned int *'
|           `-CXXReinterpretCastExpr 0x563a9c17ad98 <col:12, col:51> 'const unsigned int *' reinterpret_cast<const unsigned int *> <BitCast>
|             `-ImplicitCastExpr 0x563a9c17ad80 <col:47> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|               `-DeclRefExpr 0x563a9c17ad20 <col:47> 'const unsigned char *' lvalue ParmVar 0x563a9c175a50 'data' 'const unsigned char *'
|-CXXConstructorDecl 0x563a9c175c68 <line:63:5, col:39> col:14 IPAddress 'void (const String &)'
| `-ParmVarDecl 0x563a9c175bd8 <col:24, col:38> col:38 x 'const String &'
|-CXXConstructorDecl 0x563a9c175e18 <line:66:5, line:68:5> line:66:12 IPAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x563a9c175d58 <col:22, col:48> col:48 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x563a9c17aea8 <col:56, line:68:5>
|   `-CStyleCastExpr 0x563a9c17ae80 <line:67:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x563a9c17ae50 <col:9> 'const uninitialized_type' lvalue ParmVar 0x563a9c175d58 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x563a9c175fa8 <line:78:5, col:48> col:22 make_prefix 'IPAddress (int)' static
| `-ParmVarDecl 0x563a9c175ee0 <col:34, col:38> col:38 prefix_len 'int'
|-CXXMethodDecl 0x563a9c176098 <line:81:5, line:83:5> line:81:29 make_broadcast 'IPAddress ()' static inline
| `-CompoundStmt 0x563a9c17be68 <col:46, line:83:5>
|   `-ReturnStmt 0x563a9c17be58 <line:82:2, col:29>
|     `-ExprWithCleanups 0x563a9c17be40 <col:9, col:29> 'IPAddress'
|       `-CXXConstructExpr 0x563a9c17be10 <col:9, col:29> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x563a9c17bcc8 <col:9, col:29> 'IPAddress' xvalue
|           `-CXXFunctionalCastExpr 0x563a9c17bbb0 <col:9, col:29> 'IPAddress' functional cast to class IPAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x563a9c17ba98 <col:9, col:29> 'IPAddress' 'void (unsigned int)'
|               `-IntegerLiteral 0x563a9c17aed0 <col:19> 'unsigned int' 4294967295
|-CXXMethodDecl 0x563a9c176188 <line:86:5, line:88:5> line:86:17 empty 'bool () const' inline
| `-CompoundStmt 0x563a9c17bf18 <col:31, line:88:5>
|   `-ReturnStmt 0x563a9c17bf08 <line:87:2, col:10>
|     `-UnaryOperator 0x563a9c17bef0 <col:9, col:10> 'bool' prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x563a9c17bed8 <col:10> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x563a9c17bec0 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x563a9c17be90 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x563a9c17a870
|             `-CXXThisExpr 0x563a9c17be80 <col:10> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x563a9c176248 <line:91:5, line:93:5> line:91:21 used addr 'uint32_t () const' inline
| `-CompoundStmt 0x563a9c17bf98 <col:34, line:93:5>
|   `-ReturnStmt 0x563a9c17bf88 <line:92:2, col:9>
|     `-ImplicitCastExpr 0x563a9c17bf70 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x563a9c17bf40 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x563a9c17a870
|         `-CXXThisExpr 0x563a9c17bf30 <col:9> 'const IPAddress *' implicit this
|-CXXConversionDecl 0x563a9c176318 <line:99:5, line:101:5> line:99:12 operator unsigned int 'uint32_t () const' inline
| `-CompoundStmt 0x563a9c17c018 <col:38, line:101:5>
|   `-ReturnStmt 0x563a9c17c008 <line:100:2, col:9>
|     `-ImplicitCastExpr 0x563a9c17bff0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x563a9c17bfc0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x563a9c17a870
|         `-CXXThisExpr 0x563a9c17bfb0 <col:9> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x563a9c1763e8 <line:106:5, line:108:5> line:106:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x563a9c17c2e8 <col:38, line:108:5>
|   `-ReturnStmt 0x563a9c17c2d8 <line:107:2, col:58>
|     `-BinaryOperator 0x563a9c17c2b8 <col:9, col:58> 'bool' '=='
|       |-ParenExpr 0x563a9c17c1d0 <col:9, col:36> 'unsigned int'
|       | `-BinaryOperator 0x563a9c17c1b0 <col:10, col:35> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x563a9c17c198 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x563a9c17c040 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x563a9c17a870
|       |   |   `-CXXThisExpr 0x563a9c17c030 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x563a9c17c170 <col:18, col:35> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x563a9c17c158 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x563a9c17c0d8 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x563a9c0cbe90 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x563a9c17c0b8 <col:24> 'unsigned int' 4026531840
|       `-CallExpr 0x563a9c17c290 <col:41, col:58> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x563a9c17c278 <col:41> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x563a9c17c258 <col:41> 'uint32_t (uint32_t) throw()' lvalue Function 0x563a9c0cbe90 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x563a9c17c238 <col:47> 'unsigned int' 3758096384
|-CXXMethodDecl 0x563a9c1764a8 <line:110:5, line:112:5> line:110:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x563a9c17c558 <col:39, line:112:5>
|   `-ReturnStmt 0x563a9c17c548 <line:111:2, col:56>
|     `-BinaryOperator 0x563a9c17c528 <col:9, col:56> 'bool' '=='
|       |-ParenExpr 0x563a9c17c440 <col:9, col:35> 'unsigned int'
|       | `-BinaryOperator 0x563a9c17c420 <col:10, col:34> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x563a9c17c408 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x563a9c17c310 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x563a9c17a870
|       |   |   `-CXXThisExpr 0x563a9c17c300 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x563a9c17c3e0 <col:18, col:34> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x563a9c17c3c8 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x563a9c17c3a8 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x563a9c0cbe90 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x563a9c17c388 <col:24> 'unsigned int' 4294901760
|       `-CallExpr 0x563a9c17c500 <col:40, col:56> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x563a9c17c4e8 <col:40> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x563a9c17c4c8 <col:40> 'uint32_t (uint32_t) throw()' lvalue Function 0x563a9c0cbe90 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x563a9c17c4a8 <col:46> 'unsigned int' 2851995648
|-CXXMethodDecl 0x563a9c1765d8 <line:114:5, col:37> col:27 used in_addr 'struct in_addr () const' inline
|-CXXConversionDecl 0x563a9c1766e0 <line:115:5, col:38> col:12 used operator in_addr 'struct in_addr () const' inline
|-CXXMethodDecl 0x563a9c1767f0 <line:117:5, col:32> col:27 data 'unsigned char *()' inline
|-CXXMethodDecl 0x563a9c1768e0 <line:118:5, col:40> col:33 data 'const unsigned char *() const' inline
|-CXXMethodDecl 0x563a9c1769a0 <line:120:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x563a9c176a68 <line:122:5, col:30> col:9 mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x563a9c176c68 <line:123:5, col:64> col:17 matches_prefix 'bool (IPAddress, IPAddress) const' inline
| |-ParmVarDecl 0x563a9c176b18 <col:32, col:42> col:42 addr 'IPAddress'
| `-ParmVarDecl 0x563a9c176b90 <col:48, col:58> col:58 mask 'IPAddress'
|-CXXMethodDecl 0x563a9c179c60 <line:124:5, col:50> col:17 mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x563a9c176d28 <col:34, col:44> col:44 mask 'IPAddress'
|-CXXMethodDecl 0x563a9c179da8 <line:125:5, col:52> col:17 mask_more_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x563a9c179d18 <col:36, col:46> col:46 mask 'IPAddress'
|-CXXMethodDecl 0x563a9c179f58 <line:137:5, col:43> col:23 operator&= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x563a9c179e60 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x563a9c17a0a0 <line:138:5, col:43> col:23 operator|= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x563a9c17a010 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x563a9c17a1e8 <line:139:5, col:43> col:23 operator^= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x563a9c17a158 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x563a9c17a2b0 <line:141:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x563a9c17a370 <line:142:5, col:27> col:12 unparse_mask 'String () const'
|-CXXMethodDecl 0x563a9c17a4e8 <line:143:5, col:41> col:12 unparse_with_mask 'String (IPAddress) const'
| `-ParmVarDecl 0x563a9c17a420 <col:30> col:39 'IPAddress'
|-CXXMethodDecl 0x563a9c17a5b0 <line:145:5, col:23> col:19 s 'String () const' inline
|-CXXConversionDecl 0x563a9c17a698 <line:146:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x563a9c17a740 <col:51> "" ""
|-TypedefDecl 0x563a9c17a7e0 <line:148:5, col:23> col:23 parameter_type 'IPAddress'
| `-RecordType 0x563a9c1506c0 'IPAddress'
|   `-CXXRecord 0x563a9c174ff8 'IPAddress'
|-AccessSpecDecl 0x563a9c17a838 <line:150:3, col:10> col:3 private
|-FieldDecl 0x563a9c17a870 <line:152:5, col:14> col:14 referenced _addr 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x563a9c17af18 <line:15:7> col:7 implicit constexpr IPAddress 'void (const IPAddress &)' inline default trivial noexcept-unevaluated 0x563a9c17af18
| `-ParmVarDecl 0x563a9c17b028 <col:7> col:7 'const IPAddress &'
|-CXXConstructorDecl 0x563a9c17b0c8 <col:7> col:7 implicit used constexpr IPAddress 'void (IPAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x563a9c17b1d8 <col:7> col:7 used 'IPAddress &&'
| |-CXXCtorInitializer Field 0x563a9c17a870 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x563a9c17bdb8 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x563a9c17bd70 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x563a9c17a870
| |     `-CXXStaticCastExpr 0x563a9c17bd40 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
| |       `-DeclRefExpr 0x563a9c17bd10 <col:7> 'IPAddress' lvalue ParmVar 0x563a9c17b1d8 '' 'IPAddress &&'
| `-CompoundStmt 0x563a9c17be00 <col:7>
`-CXXDestructorDecl 0x563a9c17bac8 <col:7> col:7 implicit referenced ~IPAddress 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IPAddress = type { i32 }
  NonVirtualBaseLLVMType:%class.IPAddress = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c0854d0 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x563a9c087770 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x563a9c087810 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x563a9c087870 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x563a9c0878d0 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x563a9c087980 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c087c90 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x563a9c087da8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x563a9c087e50 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x563a9c087eb8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x563a9c087f48 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x563a9c08c180 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x563a9c08c5b8 <col:12>
|-CXXConstructorDecl 0x563a9c08c288 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x563a9c08c398 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x563a9c087e50 'data' 'const char *'
| | `-ImplicitCastExpr 0x563a9c08f270 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x563a9c08f240 <col:12> 'const char *const' lvalue .data 0x563a9c087e50
| |     `-DeclRefExpr 0x563a9c08f220 <col:12> 'const String::rep_t' lvalue ParmVar 0x563a9c08c398 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x563a9c087eb8 'length' 'int'
| | `-ImplicitCastExpr 0x563a9c08f300 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x563a9c08f2d0 <col:12> 'const int' lvalue .length 0x563a9c087eb8
| |     `-DeclRefExpr 0x563a9c08f2b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x563a9c08c398 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x563a9c087f48 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x563a9c08f390 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x563a9c08f360 <col:12> 'String::memo_t *const' lvalue .memo 0x563a9c087f48
| |     `-DeclRefExpr 0x563a9c08f340 <col:12> 'const String::rep_t' lvalue ParmVar 0x563a9c08c398 '' 'const String::rep_t &'
| `-CompoundStmt 0x563a9c08f3e8 <col:12>
|-CXXConstructorDecl 0x563a9c08c438 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x563a9c08c438
| `-ParmVarDecl 0x563a9c08c548 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x563a9c0949c0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x563a9c0a0328 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x563a9c0a0438 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x563a9c0a0950 <col:12>
|   |-BinaryOperator 0x563a9c0a0768 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x563a9c0a0720 <col:12> 'const char *' lvalue ->data 0x563a9c087e50
|   | | `-CXXThisExpr 0x563a9c0a0710 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x563a9c0a0750 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x563a9c0a06e0 <col:12> 'const char *const' lvalue .data 0x563a9c087e50
|   |     `-DeclRefExpr 0x563a9c0a06c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x563a9c0a0438 '' 'const String::rep_t &'
|   |-BinaryOperator 0x563a9c0a0830 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x563a9c0a07e8 <col:12> 'int' lvalue ->length 0x563a9c087eb8
|   | | `-CXXThisExpr 0x563a9c0a07d8 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x563a9c0a0818 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x563a9c0a07a8 <col:12> 'const int' lvalue .length 0x563a9c087eb8
|   |     `-DeclRefExpr 0x563a9c0a0788 <col:12> 'const String::rep_t' lvalue ParmVar 0x563a9c0a0438 '' 'const String::rep_t &'
|   |-BinaryOperator 0x563a9c0a08f8 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x563a9c0a08b0 <col:12> 'String::memo_t *' lvalue ->memo 0x563a9c087f48
|   | | `-CXXThisExpr 0x563a9c0a08a0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x563a9c0a08e0 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x563a9c0a0870 <col:12> 'String::memo_t *const' lvalue .memo 0x563a9c087f48
|   |     `-DeclRefExpr 0x563a9c0a0850 <col:12> 'const String::rep_t' lvalue ParmVar 0x563a9c0a0438 '' 'const String::rep_t &'
|   `-ReturnStmt 0x563a9c0a0940 <col:12>
|     `-UnaryOperator 0x563a9c0a0928 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x563a9c0a0918 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x563a9c0a04a8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x563a9c0a04a8
  `-ParmVarDecl 0x563a9c0a05b8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c07bbf0 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563a9c07bd08 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x563a9c07bd98 <col:16, col:22> col:16 public
|-TypedefDecl 0x563a9c07bdd8 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x563a9be41e00 'const char *'
|   `-QualType 0x563a9be41351 'const char' const
|     `-BuiltinType 0x563a9be41350 'char'
|-TypedefDecl 0x563a9c07be60 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x563a9c07be30 'String::const_iterator' sugar
|   |-Typedef 0x563a9c07bdd8 'const_iterator'
|   `-PointerType 0x563a9be41e00 'const char *'
|     `-QualType 0x563a9be41351 'const char' const
|       `-BuiltinType 0x563a9be41350 'char'
|-TypedefDecl 0x563a9c07c000 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x563a9c07bf70 'int (String::*)() const'
|   |-RecordType 0x563a9c07bc80 'String'
|   | `-CXXRecord 0x563a9c07bbf0 'String'
|   `-ParenType 0x563a9c07bf10 'int () const' sugar
|     `-FunctionProtoType 0x563a9c07bee0 'int () const' const cdecl
|       `-BuiltinType 0x563a9be413b0 'int'
|-TypedefDecl 0x563a9c07c068 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x563a9bf96740 'int64_t' sugar
|   |-Typedef 0x563a9beaa2a0 'int64_t'
|   `-TypedefType 0x563a9be83510 '__int64_t' sugar
|     |-Typedef 0x563a9be830e8 '__int64_t'
|     `-BuiltinType 0x563a9be413d0 'long'
|-TypedefDecl 0x563a9c07c0d0 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x563a9bf96660 'uint64_t' sugar
|   |-Typedef 0x563a9beaa440 'uint64_t'
|   `-TypedefType 0x563a9be835a0 '__uint64_t' sugar
|     |-Typedef 0x563a9be83158 '__uint64_t'
|     `-BuiltinType 0x563a9be41470 'unsigned long'
|-TypedefDecl 0x563a9c07c160 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x563a9c07c130 'String::intmax_t' sugar
|   |-Typedef 0x563a9c07c068 'intmax_t'
|   `-TypedefType 0x563a9bf96740 'int64_t' sugar
|     |-Typedef 0x563a9beaa2a0 'int64_t'
|     `-TypedefType 0x563a9be83510 '__int64_t' sugar
|       |-Typedef 0x563a9be830e8 '__int64_t'
|       `-BuiltinType 0x563a9be413d0 'long'
|-TypedefDecl 0x563a9c07c1f0 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x563a9c07c1c0 'String::uintmax_t' sugar
|   |-Typedef 0x563a9c07c0d0 'uintmax_t'
|   `-TypedefType 0x563a9bf96660 'uint64_t' sugar
|     |-Typedef 0x563a9beaa440 'uint64_t'
|     `-TypedefType 0x563a9be835a0 '__uint64_t' sugar
|       |-Typedef 0x563a9be83158 '__uint64_t'
|       `-BuiltinType 0x563a9be41470 'unsigned long'
|-CXXConstructorDecl 0x563a9c07c2b0 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x563a9c07c458 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x563a9c07c398 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x563a9c07c608 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x563a9c07c548 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x563a9c07c760 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x563a9c07c6d0 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x563a9c07c9e0 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x563a9c07c828 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x563a9c07c8a8 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x563a9c07cc38 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x563a9c07cae0 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x563a9c07cb60 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x563a9c07ce58 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x563a9c07cd08 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x563a9c07cd88 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x563a9c07d078 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x563a9c07cf28 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x563a9c07cfa8 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x563a9c07d208 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x563a9c07d140 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x563a9c07d388 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x563a9c07d2c8 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x563a9c07d518 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x563a9c07d450 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x563a9c07d670 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x563a9c07d5e0 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x563a9c07d7f8 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x563a9c07d738 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x563a9c07d988 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x563a9c07d8c0 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x563a9c07db18 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x563a9c07da50 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x563a9c07dca8 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x563a9c07dbe0 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x563a9c07de38 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x563a9c07dd70 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x563a9c07dfc8 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x563a9c07df00 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x563a9c07e0c0 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x563a9c07e1e8 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x563a9c07e368 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x563a9c07e2a0 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x563a9c07e4b8 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x563a9c07e428 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x563a9c07e560 <col:63> "" ""
|-CXXMethodDecl 0x563a9c07e6a8 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x563a9c07e5e8 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x563a9c07e8b8 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x563a9c07e768 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x563a9c07e7e8 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x563a9c07ef58 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x563a9c07ee00 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x563a9c07ee80 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x563a9c07f238 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x563a9c07f018 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x563a9c07f098 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x563a9c08bc50 <col:55> 'int' 10
| `-ParmVarDecl 0x563a9c07f110 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563a9c08bc70 <col:76> 'bool' true
|-CXXMethodDecl 0x563a9c07f518 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x563a9c07f300 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x563a9c07f380 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x563a9c08bc80 <col:56> 'int' 10
| `-ParmVarDecl 0x563a9c07f3f8 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563a9c08bca0 <col:77> 'bool' true
|-CXXMethodDecl 0x563a9c07f620 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x563a9c07f6e8 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x563a9c07f7b0 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x563a9c07f850 <col:20>
| `-OptimizeNoneAttr 0x563a9c07f8a8 <col:30>
|-CXXConversionDecl 0x563a9c07f998 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x563a9c07fa68 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x563a9c07fb28 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x563a9c07fc18 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x563a9c07fcd8 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x563a9c07fe58 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x563a9c07fd90 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x563a9c07ffa8 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x563a9c07ff18 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x563a9c080098 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x563a9c080158 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x563a9c0803a8 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x563a9c080210 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x563a9c080290 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x563a9c080608 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x563a9c080470 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x563a9c0804f0 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x563a9c0806d8 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x563a9c0808e8 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x563a9c080790 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x563a9c080810 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x563a9c080b08 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x563a9c0809b0 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x563a9c080a30 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x563a9c080c98 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x563a9c080bd0 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x563a9c0812e0 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x563a9c081458 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x563a9c081390 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x563a9c081668 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x563a9c081518 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x563a9c081598 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x563a9c081880 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x563a9c081728 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x563a9c0817a0 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x563a9c081a10 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x563a9c081940 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x563a9c081c30 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x563a9c081ad0 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x563a9c081b50 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x563a9c081d80 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x563a9c081cf0 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x563a9c081f58 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x563a9c081e40 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x563a9c081ec0 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x563a9c0820a8 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x563a9c082018 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x563a9c0822c0 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x563a9c082160 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x563a9c0821e0 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x563a9c08bcb0 <col:39> 'int' 0
|-CXXMethodDecl 0x563a9c0824e0 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x563a9c082380 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x563a9c082400 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x563a9c08bcd0 <col:48> 'int' 0
|-CXXMethodDecl 0x563a9c0826c0 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x563a9c0825a0 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x563a9c082620 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x563a9c08bcf0 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x563a9c082790 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x563a9c082850 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x563a9c082910 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x563a9c0829d0 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x563a9c082a90 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x563a9c082c38 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x563a9c082b40 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x563a9c082db8 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x563a9c082cf0 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x563a9c082f38 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x563a9c082e78 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x563a9c0830b8 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x563a9c082ff0 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x563a9c083200 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x563a9c083170 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x563a9c0836e0 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x563a9c083650 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x563a9c0838b8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x563a9c0837a0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x563a9c083820 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x563a9c083a98 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x563a9c083980 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x563a9c083a00 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x563a9c083be8 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x563a9c083b58 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x563a9c083df8 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x563a9c083ca8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x563a9c083d28 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x563a9c083f58 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x563a9c083ec0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x563a9c0840b0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x563a9c084018 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x563a9c084158 <col:57> "" ""
|-CXXMethodDecl 0x563a9c084268 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x563a9c0841d8 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x563a9c0843b8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x563a9c084328 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x563a9c084538 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x563a9c084470 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x563a9c084600 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x563a9c0846c0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x563a9c084780 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x563a9c084820 <col:49> "" ""
|-CXXMethodDecl 0x563a9c0848b0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x563a9c084970 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x563a9c084a60 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x563a9c084b28 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x563a9c084be8 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x563a9c084ca8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x563a9c084da0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x563a9c084e68 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x563a9c084f30 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x563a9c085108 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x563a9c084fe8 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x563a9c085068 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x563a9c085330 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x563a9c0851d0 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x563a9c085250 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x563a9c085440 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x563a9c0854a8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x563a9c0854d0 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x563a9c087770 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x563a9c087810 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x563a9c087870 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x563a9c0878d0 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x563a9c087980 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x563a9c0879e8 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x563a9c087c28 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x563a9c087c78 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563a9c087c08 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x563a9c087b18 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x563a9c087ac0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x563a9c087b00 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x563a9c087ae0 <col:32> 'int' 8
|-CXXRecordDecl 0x563a9c087c90 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x563a9c087da8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x563a9c087e50 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x563a9c087eb8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x563a9c087f48 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x563a9c08c180 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x563a9c08c5b8 <col:12>
| |-CXXConstructorDecl 0x563a9c08c288 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x563a9c08c398 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x563a9c087e50 'data' 'const char *'
| | | `-ImplicitCastExpr 0x563a9c08f270 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x563a9c08f240 <col:12> 'const char *const' lvalue .data 0x563a9c087e50
| | |     `-DeclRefExpr 0x563a9c08f220 <col:12> 'const String::rep_t' lvalue ParmVar 0x563a9c08c398 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x563a9c087eb8 'length' 'int'
| | | `-ImplicitCastExpr 0x563a9c08f300 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x563a9c08f2d0 <col:12> 'const int' lvalue .length 0x563a9c087eb8
| | |     `-DeclRefExpr 0x563a9c08f2b0 <col:12> 'const String::rep_t' lvalue ParmVar 0x563a9c08c398 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x563a9c087f48 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x563a9c08f390 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x563a9c08f360 <col:12> 'String::memo_t *const' lvalue .memo 0x563a9c087f48
| | |     `-DeclRefExpr 0x563a9c08f340 <col:12> 'const String::rep_t' lvalue ParmVar 0x563a9c08c398 '' 'const String::rep_t &'
| | `-CompoundStmt 0x563a9c08f3e8 <col:12>
| |-CXXConstructorDecl 0x563a9c08c438 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x563a9c08c438
| | `-ParmVarDecl 0x563a9c08c548 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x563a9c0949c0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x563a9c0a0328 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x563a9c0a0438 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x563a9c0a0950 <col:12>
| |   |-BinaryOperator 0x563a9c0a0768 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x563a9c0a0720 <col:12> 'const char *' lvalue ->data 0x563a9c087e50
| |   | | `-CXXThisExpr 0x563a9c0a0710 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x563a9c0a0750 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x563a9c0a06e0 <col:12> 'const char *const' lvalue .data 0x563a9c087e50
| |   |     `-DeclRefExpr 0x563a9c0a06c0 <col:12> 'const String::rep_t' lvalue ParmVar 0x563a9c0a0438 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x563a9c0a0830 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x563a9c0a07e8 <col:12> 'int' lvalue ->length 0x563a9c087eb8
| |   | | `-CXXThisExpr 0x563a9c0a07d8 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x563a9c0a0818 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x563a9c0a07a8 <col:12> 'const int' lvalue .length 0x563a9c087eb8
| |   |     `-DeclRefExpr 0x563a9c0a0788 <col:12> 'const String::rep_t' lvalue ParmVar 0x563a9c0a0438 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x563a9c0a08f8 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x563a9c0a08b0 <col:12> 'String::memo_t *' lvalue ->memo 0x563a9c087f48
| |   | | `-CXXThisExpr 0x563a9c0a08a0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x563a9c0a08e0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x563a9c0a0870 <col:12> 'String::memo_t *const' lvalue .memo 0x563a9c087f48
| |   |     `-DeclRefExpr 0x563a9c0a0850 <col:12> 'const String::rep_t' lvalue ParmVar 0x563a9c0a0438 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x563a9c0a0940 <col:12>
| |     `-UnaryOperator 0x563a9c0a0928 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x563a9c0a0918 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x563a9c0a04a8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x563a9c0a04a8
|   `-ParmVarDecl 0x563a9c0a05b8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x563a9c087fc0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x563a9c088208 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x563a9c088028 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x563a9c0880a8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x563a9c088120 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x563a9c08c140 <col:79, line:261:5>
|   |-BinaryOperator 0x563a9c08bdb8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x563a9c08bd50 <col:2, col:5> 'const char *' lvalue .data 0x563a9c087e50
|   | | `-MemberExpr 0x563a9c08bd20 <col:2> 'String::rep_t' lvalue ->_r 0x563a9c087fc0
|   | |   `-CXXThisExpr 0x563a9c08bd10 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x563a9c08bda0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x563a9c08bd80 <col:12> 'const char *' lvalue ParmVar 0x563a9c088028 'data' 'const char *'
|   |-BinaryOperator 0x563a9c08be80 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x563a9c08be18 <col:2, col:5> 'int' lvalue .length 0x563a9c087eb8
|   | | `-MemberExpr 0x563a9c08bde8 <col:2> 'String::rep_t' lvalue ->_r 0x563a9c087fc0
|   | |   `-CXXThisExpr 0x563a9c08bdd8 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x563a9c08be68 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x563a9c08be48 <col:14> 'int' lvalue ParmVar 0x563a9c0880a8 'length' 'int'
|   `-IfStmt 0x563a9c08c128 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x563a9c08bfa0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x563a9c08bf88 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x563a9c08bf68 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x563a9c08bf48 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x563a9c08bee0 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x563a9c087f48
|     |       | `-MemberExpr 0x563a9c08beb0 <col:7> 'String::rep_t' lvalue ->_r 0x563a9c087fc0
|     |       |   `-CXXThisExpr 0x563a9c08bea0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x563a9c08bf30 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x563a9c08bf10 <col:17> 'String::memo_t *' lvalue ParmVar 0x563a9c088120 'memo' 'String::memo_t *'
|     `-CallExpr 0x563a9c08c100 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x563a9c08c0e8 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x563a9c08bff0 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x563a9c062898 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x563a9c08c058 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x563a9c087810
|         `-ImplicitCastExpr 0x563a9c08c040 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x563a9c08c020 <col:27> 'String::memo_t *' lvalue ParmVar 0x563a9c088120 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x563a9c0884b8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x563a9c0882d8 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x563a9c088358 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x563a9c0883d0 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x563a9c087fc0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x563a9c08c5c8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x563a9c08c758 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x563a9c08c6c0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x563a9c08c630 <col:2> '<bound member function type>' ->assign_memo 0x563a9c088208
|     | `-ImplicitCastExpr 0x563a9c08c6f8 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x563a9c08c620 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x563a9c08c710 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x563a9c08c660 <col:14> 'const char *' lvalue ParmVar 0x563a9c0882d8 'data' 'const char *'
|     |-ImplicitCastExpr 0x563a9c08c728 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x563a9c08c680 <col:20> 'int' lvalue ParmVar 0x563a9c088358 'length' 'int'
|     `-ImplicitCastExpr 0x563a9c08c740 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x563a9c08c6a0 <col:28> 'String::memo_t *' lvalue ParmVar 0x563a9c0883d0 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x563a9c088648 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x563a9c088588 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x563a9c08c9b0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x563a9c08c930 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x563a9c08c780 <col:2> '<bound member function type>' ->assign_memo 0x563a9c088208
|     | `-CXXThisExpr 0x563a9c08c770 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x563a9c08c968 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x563a9c08c800 <col:14, col:19> 'const char *' lvalue .data 0x563a9c087e50
|     |   `-MemberExpr 0x563a9c08c7d0 <col:14, col:16> 'String::rep_t' lvalue ._r 0x563a9c087fc0
|     |     `-DeclRefExpr 0x563a9c08c7b0 <col:14> 'const String' lvalue ParmVar 0x563a9c088588 'x' 'const String &'
|     |-ImplicitCastExpr 0x563a9c08c980 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x563a9c08c880 <col:25, col:30> 'int' lvalue .length 0x563a9c087eb8
|     |   `-MemberExpr 0x563a9c08c850 <col:25, col:27> 'String::rep_t' lvalue ._r 0x563a9c087fc0
|     |     `-DeclRefExpr 0x563a9c08c830 <col:25> 'const String' lvalue ParmVar 0x563a9c088588 'x' 'const String &'
|     `-ImplicitCastExpr 0x563a9c08c998 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x563a9c08c900 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x563a9c087f48
|         `-MemberExpr 0x563a9c08c8d0 <col:38, col:40> 'String::rep_t' lvalue ._r 0x563a9c087fc0
|           `-DeclRefExpr 0x563a9c08c8b0 <col:38> 'const String' lvalue ParmVar 0x563a9c088588 'x' 'const String &'
|-CXXMethodDecl 0x563a9c088710 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x563a9c08da78 <col:31, line:278:5>
|   `-IfStmt 0x563a9c08da60 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x563a9c08ca50 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x563a9c08ca38 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x563a9c08ca08 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x563a9c087f48
|     |     `-MemberExpr 0x563a9c08c9d8 <col:6> 'String::rep_t' lvalue ->_r 0x563a9c087fc0
|     |       `-CXXThisExpr 0x563a9c08c9c8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x563a9c08da38 <col:15, line:277:2>
|       |-ParenExpr 0x563a9c08cff0 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x563a9c08cfc0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x563a9c08cb60 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x563a9c08cb48 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x563a9c08cb30 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x563a9c08caf0 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x563a9c087810
|       |   |       `-ImplicitCastExpr 0x563a9c08cad8 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x563a9c08caa8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x563a9c087f48
|       |   |           `-MemberExpr 0x563a9c08ca78 <col:27> 'String::rep_t' lvalue ->_r 0x563a9c087fc0
|       |   |             `-CXXThisExpr 0x563a9c08ca68 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x563a9c08cbc0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x563a9c08cba0 <col:54> 'int' 0
|       |   `-CallExpr 0x563a9c08cf20 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x563a9c08cf08 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x563a9c08ce90 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x563a9bedcfb0 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x563a9c08cf60 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x563a9c08cca8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x563a9c08cf78 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x563a9c08cd58 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x563a9c08cf90 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x563a9c08cd90 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x563a9c08cfa8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x563a9c08ce78 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x563a9c08ce60 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x563a9c08ce28 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x563a9c08d958 <line:274:6, line:275:22>
|       | |-CallExpr 0x563a9c08d200 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x563a9c08d1e8 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x563a9c08d160 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x563a9c067be0 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x563a9c08d130 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x563a9c087810
|       | |   `-ImplicitCastExpr 0x563a9c08d118 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x563a9c08d0e8 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x563a9c087f48
|       | |       `-MemberExpr 0x563a9c08d0b8 <col:40> 'String::rep_t' lvalue ->_r 0x563a9c087fc0
|       | |         `-CXXThisExpr 0x563a9c08d0a8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x563a9c08d300 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x563a9c08d2e8 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x563a9c08d228 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x563a9c0893e8 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x563a9c08d940 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x563a9c08d288 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x563a9c087f48
|       |       `-MemberExpr 0x563a9c08d258 <col:15> 'String::rep_t' lvalue ->_r 0x563a9c087fc0
|       |         `-CXXThisExpr 0x563a9c08d248 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x563a9c08da18 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x563a9c08d9b0 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x563a9c087f48
|         | `-MemberExpr 0x563a9c08d980 <col:6> 'String::rep_t' lvalue ->_r 0x563a9c087fc0
|         |   `-CXXThisExpr 0x563a9c08d970 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x563a9c08da00 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x563a9c08d9e0 <col:16> 'int' 0
|-CXXMethodDecl 0x563a9c0889a8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x563a9c0887c8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x563a9c088848 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x563a9c0888c0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x563a9c088a80 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x563a9c088cd0 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x563a9c088b38 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x563a9c088bb8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x563a9c088c30 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x563a9c088eb8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x563a9c088da0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x563a9c088e20 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x563a9c088fb8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x563a9c08db70 <col:41, line:286:5>
|   `-ReturnStmt 0x563a9c08db60 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x563a9c08db30 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x563a9c08daf8 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x563a9c08dae0 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x563a9c08dac0 <col:46> 'int' 1
|-CXXMethodDecl 0x563a9c089258 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x563a9c089070 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x563a9c0890f0 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x563a9c089170 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x563a9c0893e8 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x563a9c089320 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x563a9c0894b8 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x563a9c089688 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x563a9c089570 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x563a9c0895f0 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x563a9c08b330 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x563a9c08b478 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x563a9c08b5b8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x563a9c08b630 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x563a9c08b6a8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x563a9c08b710 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x563a9c08b810 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x563a9c08b860 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563a9c08b7f0 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x563a9c08b7d0 <col:22> 'int' 14
|-CXXMethodDecl 0x563a9c08ba78 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x563a9c08b890 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x563a9c08b910 <col:38> col:41 'int'
| `-ParmVarDecl 0x563a9c08b990 <col:43> col:46 'int'
|-FriendDecl 0x563a9c08bb80 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x563a9c08bc10 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563a9c421490 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x563a9c421668 prev 0x563a9c421490 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x563a9c4216f8 <col:46, col:52> col:46 public
|-TypedefDecl 0x563a9c421720 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563a9be413b0 'int'
|-TypedefDecl 0x563a9c4230a0 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x563a9c423050 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x563a9c423030 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x563a9c421938 'type'
|     `-SubstTemplateTypeParmType 0x563a9c421900 'String' sugar
|       |-TemplateTypeParmType 0x563a9c3a6e30 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563a9c3a6de0 'T'
|       `-RecordType 0x563a9c07bc80 'String'
|         `-CXXRecord 0x563a9c07bbf0 'String'
|-TypedefDecl 0x563a9c423158 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x563a9c423120 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x563a9c423100 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x563a9c4230a0 'type'
|     `-ElaboratedType 0x563a9c423050 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x563a9c423030 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x563a9c421938 'type'
|         `-SubstTemplateTypeParmType 0x563a9c421900 'String' sugar
|           |-TemplateTypeParmType 0x563a9c3a6e30 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x563a9c3a6de0 'T'
|           `-RecordType 0x563a9c07bc80 'String'
|             `-CXXRecord 0x563a9c07bbf0 'String'
|-CXXMethodDecl 0x563a9c4232d8 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x563a9c4231e8 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x563a9c4233c8 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x563a9c4234a8 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x563a9c4234a8
|-CXXMethodDecl 0x563a9c423778 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x563a9c423680 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x563a9c4239b8 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x563a9c423830 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563a9c4238a8 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x563a9c423b88 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x563a9c423a78 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563a9c423af0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x563a9c423ce8 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x563a9c423db8 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x563a9c424008 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x563a9c423e78 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x563a9c423ef0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x563a9c424268 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x563a9c4240d8 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x563a9c424150 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x563a9c424428 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x563a9c424338 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x563a9c4245e8 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x563a9c4244f0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x563a9c4246a0 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563a9c424750 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x563a9c424988 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x563a9c424800 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x563a9c424878 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x563a9c424c28 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x563a9c424b30 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x563a9c424cf0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x563a9c424d40 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x563a9c424d90 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x563a9c3d2bf0 <../dummy_inc/click/vector.hh:110:1, line:197:1> line:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x563a9c41fef8 prev 0x563a9c3d2bf0 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x563a9c421400 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x563a9c4213b0 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x563a9c421390 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x563a9c421240 'type'
|     `-SubstTemplateTypeParmType 0x563a9c4210d0 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x563a9c14f990 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x563a9c14f938 'F'
|       `-RecordType 0x563a9c420d30 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x563a9c420c50 'typed_array_memory'
|-FieldDecl 0x563a9c424de0 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x563a9c424e30 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x563a9c424e68 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x563a9c41ff90 'String' sugar
|   |-TemplateTypeParmType 0x563a9c3b06b0 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x563a9c3b0658 'T'
|   `-RecordType 0x563a9c07bc80 'String'
|     `-CXXRecord 0x563a9c07bbf0 'String'
|-TypedefDecl 0x563a9c424ef8 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x563a9c424ec0 'String &'
|   `-SubstTemplateTypeParmType 0x563a9c41ff90 'String' sugar
|     |-TemplateTypeParmType 0x563a9c3b06b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563a9c3b0658 'T'
|     `-RecordType 0x563a9c07bc80 'String'
|       `-CXXRecord 0x563a9c07bbf0 'String'
|-TypedefDecl 0x563a9c424f88 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x563a9c424f50 'const String &'
|   `-QualType 0x563a9c41ff91 'const String' const
|     `-SubstTemplateTypeParmType 0x563a9c41ff90 'String' sugar
|       |-TemplateTypeParmType 0x563a9c3b06b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563a9c3b0658 'T'
|       `-RecordType 0x563a9c07bc80 'String'
|         `-CXXRecord 0x563a9c07bbf0 'String'
|-TypedefDecl 0x563a9c425018 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x563a9c424fe0 'String *'
|   `-SubstTemplateTypeParmType 0x563a9c41ff90 'String' sugar
|     |-TemplateTypeParmType 0x563a9c3b06b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563a9c3b0658 'T'
|     `-RecordType 0x563a9c07bc80 'String'
|       `-CXXRecord 0x563a9c07bbf0 'String'
|-TypedefDecl 0x563a9c4250a8 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x563a9c425070 'const String *'
|   `-QualType 0x563a9c41ff91 'const String' const
|     `-SubstTemplateTypeParmType 0x563a9c41ff90 'String' sugar
|       |-TemplateTypeParmType 0x563a9c3b06b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563a9c3b0658 'T'
|       `-RecordType 0x563a9c07bc80 'String'
|         `-CXXRecord 0x563a9c07bbf0 'String'
|-TypedefDecl 0x563a9c425d00 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x563a9c425cb0 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x563a9c425c90 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x563a9c425bc8 'type'
|     `-LValueReferenceType 0x563a9c425b90 'const String &'
|       `-QualType 0x563a9c425931 'const String' const
|         `-SubstTemplateTypeParmType 0x563a9c425930 'String' sugar
|           |-TemplateTypeParmType 0x563a9c157300 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x563a9c1572a8 'T'
|           `-RecordType 0x563a9c07bc80 'String'
|             `-CXXRecord 0x563a9c07bbf0 'String'
|-TypedefDecl 0x563a9c425d68 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x563a9c424f50 'const String &'
|   `-QualType 0x563a9c41ff91 'const String' const
|     `-SubstTemplateTypeParmType 0x563a9c41ff90 'String' sugar
|       |-TemplateTypeParmType 0x563a9c3b06b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563a9c3b0658 'T'
|       `-RecordType 0x563a9c07bc80 'String'
|         `-CXXRecord 0x563a9c07bbf0 'String'
|-TypedefDecl 0x563a9c425dc0 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x563a9be413b0 'int'
|-TypedefDecl 0x563a9c425e28 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x563a9c424fe0 'String *'
|   `-SubstTemplateTypeParmType 0x563a9c41ff90 'String' sugar
|     |-TemplateTypeParmType 0x563a9c3b06b0 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x563a9c3b0658 'T'
|     `-RecordType 0x563a9c07bc80 'String'
|       `-CXXRecord 0x563a9c07bbf0 'String'
|-TypedefDecl 0x563a9c425e90 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x563a9c425070 'const String *'
|   `-QualType 0x563a9c41ff91 'const String' const
|     `-SubstTemplateTypeParmType 0x563a9c41ff90 'String' sugar
|       |-TemplateTypeParmType 0x563a9c3b06b0 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x563a9c3b0658 'T'
|       `-RecordType 0x563a9c07bc80 'String'
|         `-CXXRecord 0x563a9c07bbf0 'String'
|-EnumDecl 0x563a9c425ee8 <line:134:5> col:5
| `-EnumConstantDecl 0x563a9c425fe0 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x563a9c425fc0 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x563a9c3b16e8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x563a9c3b16c0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x563a9c3b16a0 <col:40> 'int' 1
|-CXXConstructorDecl 0x563a9c426068 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x563a9c4262f8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x563a9c426120 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563a9c4261c0 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x563a9c426588 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x563a9c426470 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x563a9c426848 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x563a9c426730 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x563a9c426b60 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x563a9c426a40 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x563a9c426e70 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x563a9c426d50 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x563a9c427160 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x563a9c426fa8 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563a9c427020 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x563a9c427288 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x563a9c427338 <col:20> Inherited
| `-OptimizeNoneAttr 0x563a9c427390 <col:30> Inherited
|-CXXMethodDecl 0x563a9c4273d8 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x563a9c427488 <col:20> Inherited
| `-OptimizeNoneAttr 0x563a9c4274e0 <col:30> Inherited
|-CXXMethodDecl 0x563a9c4275a8 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x563a9c427658 <col:20> Inherited
| `-OptimizeNoneAttr 0x563a9c4276b0 <col:30> Inherited
|-CXXMethodDecl 0x563a9c4276f8 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x563a9c4277a8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563a9c427800 <col:30> Inherited
|-CXXMethodDecl 0x563a9c427848 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x563a9c4278f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x563a9c427950 <col:30> Inherited
|-CXXMethodDecl 0x563a9c427998 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x563a9c427a48 <col:20> Inherited
| `-OptimizeNoneAttr 0x563a9c427aa0 <col:30> Inherited
|-CXXMethodDecl 0x563a9c427ac8 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563a9c427b78 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x563a9c427c28 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x563a9c427de8 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x563a9c427cd8 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x563a9c427d50 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x563a9c427f38 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x563a9c427ea8 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x563a9c4280e8 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x563a9c427ff0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563a9c4281a0 <col:20>
| `-OptimizeNoneAttr 0x563a9c4281f8 <col:30>
|-CXXMethodDecl 0x563a9c428318 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x563a9c428220 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x563a9c4283d0 <col:20>
| `-OptimizeNoneAttr 0x563a9c428428 <col:30>
|-CXXMethodDecl 0x563a9c4284e0 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x563a9c428450 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563a9c428628 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563a9c428598 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563a9c428758 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x563a9c428858 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x563a9c428928 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x563a9c4289f8 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x563a9c428b38 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x563a9c428aa8 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563a9c428c80 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x563a9c428bf0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x563a9c428dc8 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x563a9c428d38 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563a9c428e80 <col:48> Inherited "" ""
|-CXXMethodDecl 0x563a9c428f80 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x563a9c428ef0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x563a9c429038 <col:60> Inherited "" ""
|-CXXMethodDecl 0x563a9c4290f8 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x563a9c4291f8 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x563a9c429378 <line:180:5, col:48> col:17 push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x563a9c4292b8 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x563a9c429b38 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x563a9c429430 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x563a9c429a98 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x563a9c429998 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x563a9c429c18 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x563a9c429d68 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x563a9c429cd8 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x563a9c429e20 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x563a9c42a0e0 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x563a9c429ee0 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x563a9c429f58 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x563a9c42a278 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x563a9c42a1b0 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x563a9c42a488 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x563a9c42a340 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x563a9c42a3b8 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x563a9c42a548 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x563a9c42a7a8 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x563a9c42a6b0 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x563a9c42a878 <line:111:7> col:7 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x563a9c42a878

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x563a9c435368 prev 0x563a9c3f1df8 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x563a9c435460 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x563a9c4354f0 <col:22, col:28> col:22 public
|-EnumDecl 0x563a9c435518 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x563a9c435638 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x563a9c435618 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x563a9c435600 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x563a9c4355e0 <col:14> 'int' 999
| |-EnumConstantDecl 0x563a9c4356e0 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x563a9c4356c0 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x563a9c4356a8 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x563a9c435688 <col:14> 'int' 1
| |-EnumConstantDecl 0x563a9c435770 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x563a9c435750 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x563a9c435730 <col:17> 'int' 0
| |-EnumConstantDecl 0x563a9c435800 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x563a9c4357e0 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x563a9c4357c0 <col:13> 'int' 1
| |-EnumConstantDecl 0x563a9c435890 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x563a9c435870 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x563a9c435850 <col:16> 'int' 2
| |-EnumConstantDecl 0x563a9c435920 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x563a9c435900 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x563a9c4358e0 <col:13> 'int' 3
| |-EnumConstantDecl 0x563a9c4359b0 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x563a9c435990 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x563a9c435970 <col:15> 'int' 4
| |-EnumConstantDecl 0x563a9c435a40 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x563a9c435a20 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x563a9c435a00 <col:14> 'int' 5
| |-EnumConstantDecl 0x563a9c435ad0 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x563a9c435ab0 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x563a9c435a90 <col:12> 'int' 6
| `-EnumConstantDecl 0x563a9c435b60 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x563a9c435b40 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x563a9c435b20 <col:13> 'int' 7
|-VarDecl 0x563a9c435bd0 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x563a9c435c58 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x563a9c435ce0 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x563a9c435d68 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x563a9c435df0 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x563a9c435e78 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x563a9c435f00 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x563a9c435f88 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x563a9c436010 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x563a9c436098 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x563a9c436120 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x563a9c436220 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x563a9c43b628 '_nerrors' 'int'
| | `-IntegerLiteral 0x563a9c43bdb8 <line:128:13> 'int' 0
| `-CompoundStmt 0x563a9c43be28 <col:16, line:129:5>
|-CXXDestructorDecl 0x563a9c436310 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x563a9c43be38 <col:29, line:132:5>
|-CXXMethodDecl 0x563a9c4364c8 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x563a9c436400 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563a9c436590 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x563a9c436678 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x563a9c43be90 <col:44, line:161:5>
|   `-ReturnStmt 0x563a9c43be80 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x563a9c43be68 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x563a9c43be48 <col:9> 'ErrorHandler *' lvalue Var 0x563a9c43b688 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x563a9c4367e8 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x563a9c436728 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x563a9c4368b0 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x563a9c43bef0 <col:43, line:173:5>
|   `-ReturnStmt 0x563a9c43bee0 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x563a9c43bec8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x563a9c43bea8 <col:9> 'ErrorHandler *' lvalue Var 0x563a9c43b700 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x563a9c436968 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x563a9c4369e8 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x563a9c436af8 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x563a9c436a68 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x563a9c436c48 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x563a9c436bb8 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x563a9c436da0 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x563a9c436d08 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x563a9c436ef8 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x563a9c436e60 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x563a9c437050 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x563a9c436fb8 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x563a9c437260 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x563a9c437108 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x563a9c437188 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x563a9c437438 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x563a9c437320 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x563a9c4373a0 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x563a9c437658 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x563a9c4374f8 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x563a9c437578 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x563a9c437838 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x563a9c437718 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x563a9c437798 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x563a9c437a18 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x563a9c4378f8 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x563a9c437978 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x563a9c437ba0 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x563a9c437ad8 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x563a9c437d70 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x563a9c437c58 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x563a9c437cd0 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x563a9c43c148 <col:57, line:234:5>
|   `-ReturnStmt 0x563a9c43c138 <line:233:2, col:41>
|     `-ExprWithCleanups 0x563a9c43c120 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x563a9c43c0c8 <col:9, col:41> 'int'
|         |-MemberExpr 0x563a9c43c098 <col:9> '<bound member function type>' ->xmessage 0x563a9c437ba0
|         | `-CXXThisExpr 0x563a9c43c088 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x563a9c43c108 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x563a9c43c0f0 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x563a9c43c068 <col:18, col:40> 'String' (CXXTemporary 0x563a9c43c068)
|               `-CallExpr 0x563a9c43c030 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x563a9c43c018 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x563a9c43bf90 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x563a9c439dc8 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x563a9c43bfb0 <col:31> 'const String' lvalue ParmVar 0x563a9c437cd0 'str' 'const String &'
|                 `-DeclRefExpr 0x563a9c43bfd0 <col:36> 'const String' lvalue ParmVar 0x563a9c437c58 'anno' 'const String &'
|-CXXMethodDecl 0x563a9c4380b0 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x563a9c437e30 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x563a9c437eb0 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x563a9c437f80 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x563a9c43c3d8 <col:68, line:243:5>
|   `-ReturnStmt 0x563a9c43c3c8 <line:242:2, col:41>
|     `-ExprWithCleanups 0x563a9c43c3b0 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x563a9c43c350 <col:9, col:41> 'int'
|         |-MemberExpr 0x563a9c43c320 <col:9> '<bound member function type>' ->xmessage 0x563a9c437d70
|         | `-CXXThisExpr 0x563a9c43c310 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x563a9c43c1e8 <col:18> 'const String' lvalue ParmVar 0x563a9c437e30 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x563a9c43c398 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x563a9c43c380 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x563a9c43c2f0 <col:24, col:40> 'String' (CXXTemporary 0x563a9c43c2f0)
|               `-CXXMemberCallExpr 0x563a9c43c288 <col:24, col:40> 'String'
|                 |-MemberExpr 0x563a9c43c218 <col:24> '<bound member function type>' ->vformat 0x563a9c439290
|                 | `-CXXThisExpr 0x563a9c43c208 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x563a9c43c2b8 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x563a9c43c248 <col:32> 'const char *' lvalue ParmVar 0x563a9c437eb0 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x563a9c43c2d0 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x563a9c43c268 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x563a9c437f80 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x563a9c438350 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x563a9c438178 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x563a9c4381f0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x563a9c438268 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x563a9c43c718 <col:23, line:254:5>
|   `-ReturnStmt 0x563a9c43c708 <line:253:2, col:71>
|     `-ExprWithCleanups 0x563a9c43c6f0 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x563a9c43c690 <col:9, col:71> 'int'
|         |-MemberExpr 0x563a9c43c660 <col:9> '<bound member function type>' ->xmessage 0x563a9c437d70
|         | `-CXXThisExpr 0x563a9c43c650 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x563a9c43c6d8 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x563a9c43c6c0 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x563a9c43c610 <col:18, col:65> 'String' (CXXTemporary 0x563a9c43c610)
|         |     `-CallExpr 0x563a9c43c5a8 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x563a9c43c590 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x563a9c43c478 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x563a9c439dc8 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x563a9c43c498 <col:31> 'const String' lvalue ParmVar 0x563a9c4381f0 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x563a9c43c5f0 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x563a9c43c5d8 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x563a9c43c570 <col:37, col:64> 'String' (CXXTemporary 0x563a9c43c570)
|         |             `-CallExpr 0x563a9c43c540 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x563a9c43c528 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x563a9c43c4b8 <col:37> 'String (const String &)' lvalue CXXMethod 0x563a9c43a4a0 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x563a9c43c4d8 <col:56> 'const String' lvalue ParmVar 0x563a9c438178 'landmark' 'const String &'
|         `-DeclRefExpr 0x563a9c43c630 <col:68> 'const String' lvalue ParmVar 0x563a9c438268 'str' 'const String &'
|-CXXMethodDecl 0x563a9c4386d0 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x563a9c438418 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x563a9c438490 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x563a9c438510 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x563a9c438588 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x563a9c43c9d0 <col:34, line:267:5>
|   `-ReturnStmt 0x563a9c43c9c0 <line:266:2, col:51>
|     `-ExprWithCleanups 0x563a9c43c9a8 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x563a9c43c940 <col:9, col:51> 'int'
|         |-MemberExpr 0x563a9c43c910 <col:9> '<bound member function type>' ->xmessage 0x563a9c438350
|         | `-CXXThisExpr 0x563a9c43c900 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x563a9c43c7b8 <col:18> 'const String' lvalue ParmVar 0x563a9c438418 'landmark' 'const String &'
|         |-DeclRefExpr 0x563a9c43c7d8 <col:28> 'const String' lvalue ParmVar 0x563a9c438490 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x563a9c43c990 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x563a9c43c978 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x563a9c43c8e0 <col:34, col:50> 'String' (CXXTemporary 0x563a9c43c8e0)
|               `-CXXMemberCallExpr 0x563a9c43c878 <col:34, col:50> 'String'
|                 |-MemberExpr 0x563a9c43c808 <col:34> '<bound member function type>' ->vformat 0x563a9c439290
|                 | `-CXXThisExpr 0x563a9c43c7f8 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x563a9c43c8a8 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x563a9c43c838 <col:42> 'const char *' lvalue ParmVar 0x563a9c438510 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x563a9c43c8c0 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x563a9c43c858 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x563a9c438588 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x563a9c4387e0 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x563a9c43ca50 <col:25, line:288:5>
|   `-ReturnStmt 0x563a9c43ca40 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x563a9c43ca28 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x563a9c43c9f8 <col:9> 'const int' lvalue ->_nerrors 0x563a9c43b628
|         `-CXXThisExpr 0x563a9c43c9e8 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x563a9c4389f0 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x563a9c438898 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x563a9c438918 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x563a9c438cd8 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x563a9c438ab8 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x563a9c438b38 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x563a9c438bb0 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x563a9c438e70 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x563a9c438da8 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x563a9c4390b8 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x563a9c438f30 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x563a9c438fa8 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x563a9c43ccb0 <col:58, line:357:5>
|   `-ReturnStmt 0x563a9c43cca0 <line:356:2, col:29>
|     `-ExprWithCleanups 0x563a9c43cc88 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x563a9c43cc58 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x563a9c43cc40 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x563a9c43cc20 <col:9, col:29> 'String' (CXXTemporary 0x563a9c43cc20)
|             `-CallExpr 0x563a9c43cbb0 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x563a9c43cb98 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x563a9c43cb18 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x563a9c438cd8 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x563a9c43cab8 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x563a9c43cbe8 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x563a9c43cad8 <col:21> 'const char *' lvalue ParmVar 0x563a9c438f30 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x563a9c43cc00 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x563a9c43caf8 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x563a9c438fa8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x563a9c439290 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x563a9c439180 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x563a9c4391f8 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x563a9c4393e8 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x563a9c439358 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x563a9c439530 <line:393:5, col:46> col:20 used decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x563a9c4394a0 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x563a9c4397d0 <line:424:5, col:69> col:19 used emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x563a9c4395e8 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x563a9c439668 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x563a9c4396e0 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x563a9c439930 <line:438:5, line:441:5> line:438:18 used account 'void (int)' virtual
| |-ParmVarDecl 0x563a9c4398a0 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x563a9c43cdc8 <col:37, line:441:5>
|   `-IfStmt 0x563a9c43cdb0 <line:439:2, line:440:8>
|     |-BinaryOperator 0x563a9c43cd38 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x563a9c43cd08 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x563a9c43ccc8 <col:6> 'int' lvalue ParmVar 0x563a9c4398a0 'level' 'int'
|     | `-ImplicitCastExpr 0x563a9c43cd20 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x563a9c43cce8 <col:15> 'ErrorHandler::Level' EnumConstant 0x563a9c435920 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x563a9c43cd98 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x563a9c43cd68 <col:8> 'int' lvalue ->_nerrors 0x563a9c43b628
|         `-CXXThisExpr 0x563a9c43cd58 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x563a9c4399f8 <line:446:5, line:448:5> line:446:18 used clear 'void ()' virtual
| `-CompoundStmt 0x563a9c43ce60 <col:26, line:448:5>
|   `-BinaryOperator 0x563a9c43ce40 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x563a9c43cdf0 <col:2> 'int' lvalue ->_nerrors 0x563a9c43b628
|     | `-CXXThisExpr 0x563a9c43cde0 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x563a9c43ce20 <col:13> 'int' 0
|-CXXMethodDecl 0x563a9c439bc0 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x563a9c439ab0 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x563a9c439b28 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x563a9c439dc8 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x563a9c439c80 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x563a9c439cf8 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x563a9c43a100 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x563a9c439e88 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x563a9c439f08 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x563a9c439f88 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x563a9c43a1b8 <col:59> 0 0
|-CXXMethodDecl 0x563a9c43a350 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x563a9c43a230 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x563a9c43a2b0 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x563a9c43d4d0 <col:70, line:534:5>
|   |-DeclStmt 0x563a9c43cfd0 <line:528:2, col:20>
|   | |-VarDecl 0x563a9c43ce88 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x563a9c43cef0 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x563a9c43cf28 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x563a9c43cf90 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x563a9c43d0a0 <line:529:2, col:23>
|   | `-VarDecl 0x563a9c43d000 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x563a9c43d088 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x563a9c43d068 <col:18> 'const char *' lvalue ParmVar 0x563a9c43a230 'begin' 'const char *'
|   |-DoStmt 0x563a9c43d468 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x563a9c43d398 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x563a9c43d380 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x563a9c43d360 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x563a9c43d0b8 <col:6> 'const char *' lvalue Var 0x563a9c43d000 'x' 'const char *'
|   | |     `-CallExpr 0x563a9c43d2b0 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x563a9c43d298 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x563a9c43d250 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x563a9c43bb00 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x563a9c43d318 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x563a9c43d300 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x563a9c43d170 <col:20, col:27> 'String' (CXXTemporary 0x563a9c43d170)
|   | |       |     `-CXXTemporaryObjectExpr 0x563a9c43d138 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x563a9c43d330 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x563a9c43d190 <col:30> 'const char *' lvalue Var 0x563a9c43d000 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x563a9c43d348 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x563a9c43d1b0 <col:33> 'const char *' lvalue ParmVar 0x563a9c43a2b0 'end' 'const char *'
|   | |       |-UnaryOperator 0x563a9c43d1f0 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x563a9c43d1d0 <col:39> 'String' lvalue Var 0x563a9c43ce88 'name' 'String'
|   | |       |-UnaryOperator 0x563a9c43d228 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x563a9c43d208 <col:46> 'String' lvalue Var 0x563a9c43cf28 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x563a9c43d240 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x563a9c43d450 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x563a9c43d438 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x563a9c43d418 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x563a9c43d3e8 <col:11> '<bound member function type>' .operator int (String::*)() const 0x563a9c07f998
|   |         `-ImplicitCastExpr 0x563a9c43d3d0 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x563a9c43d3b0 <col:11> 'String' lvalue Var 0x563a9c43ce88 'name' 'String'
|   `-ReturnStmt 0x563a9c43d4c0 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x563a9c43d4a8 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x563a9c43d488 <col:9> 'const char *' lvalue Var 0x563a9c43d000 'x' 'const char *'
|-CXXMethodDecl 0x563a9c43a4a0 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x563a9c43a410 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x563a9c43dad8 <col:55, line:550:5>
|   `-IfStmt 0x563a9c43dab0 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x563a9c43d710 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x563a9c43d6f8 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x563a9c43d6e0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x563a9c43d6c0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x563a9c43d690 <col:6> '<bound member function type>' .operator int (String::*)() const 0x563a9c07f998
|     | |       `-DeclRefExpr 0x563a9c43d530 <col:6> 'const String' lvalue ParmVar 0x563a9c43a410 'x' 'const String &'
|     | `-BinaryOperator 0x563a9c43d670 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x563a9c43d640 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x563a9c43d5f0 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x563a9c43d5d8 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x563a9c43d590 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x563a9c09a910 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x563a9c43d550 <col:11> 'const String' lvalue ParmVar 0x563a9c43a410 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x563a9c43d570 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x563a9c43d658 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x563a9c43d628 <col:19> 'char' 123
|     |-ReturnStmt 0x563a9c43d780 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x563a9c43d750 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x563a9c43d730 <col:13> 'const String' lvalue ParmVar 0x563a9c43a410 'x' 'const String &'
|     `-IfStmt 0x563a9c43da88 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x563a9c43d818 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x563a9c43d800 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x563a9c43d7e0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x563a9c43d7b0 <col:11> '<bound member function type>' .operator int (String::*)() const 0x563a9c07f998
|       |       `-DeclRefExpr 0x563a9c43d790 <col:11> 'const String' lvalue ParmVar 0x563a9c43a410 'x' 'const String &'
|       |-ReturnStmt 0x563a9c43d9a0 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x563a9c43d988 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x563a9c43d958 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x563a9c43d940 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x563a9c43d920 <col:13, col:29> 'String' (CXXTemporary 0x563a9c43d920)
|       |         `-CallExpr 0x563a9c43d8d0 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x563a9c43d8b8 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x563a9c43d830 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x563a9c439bc0 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x563a9c43d900 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x563a9c43d850 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x563a9c43d870 <col:28> 'const String' lvalue ParmVar 0x563a9c43a410 'x' 'const String &'
|       `-ReturnStmt 0x563a9c43da78 <line:549:6, col:20>
|         `-ExprWithCleanups 0x563a9c43da60 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x563a9c43da30 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x563a9c43da18 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x563a9c43d9f8 <col:13, col:20> 'String' (CXXTemporary 0x563a9c43d9f8)
|                 `-CXXTemporaryObjectExpr 0x563a9c43d9c0 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x563a9c43a668 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x563a9c43a558 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x563a9c43a5d0 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x563a9c43bda8 <col:71> 'bool' false
|-CXXRecordDecl 0x563a9c43a718 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x563a9c43aa18 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x563a9c43a9b0 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x563a9c43a950 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x563a9c43a910 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x563a9c07bc80 'String'
|       | `-CXXRecord 0x563a9c07bbf0 'String'
|       |-BuiltinType 0x563a9be413b0 'int'
|       `-DecayedType 0x563a9c437f50 '__va_list_tag *' sugar
|         |-TypedefType 0x563a9c437f20 'va_list' sugar
|         | |-Typedef 0x563a9c0dd3c0 'va_list'
|         | `-TypedefType 0x563a9c0dd370 '__gnuc_va_list' sugar
|         |   |-Typedef 0x563a9c0d86c8 '__gnuc_va_list'
|         |   `-TypedefType 0x563a9c0d8630 '__builtin_va_list' sugar
|         |     |-Typedef 0x563a9be82c18 '__builtin_va_list'
|         |     `-ConstantArrayType 0x563a9be82bc0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x563a9be42100 '__va_list_tag'
|         |         `-CXXRecord 0x563a9be42068 '__va_list_tag'
|         `-PointerType 0x563a9c0e3060 '__va_list_tag *'
|           `-RecordType 0x563a9be42100 '__va_list_tag'
|             `-CXXRecord 0x563a9be42068 '__va_list_tag'
|-EnumDecl 0x563a9c43aa70 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x563a9c43ab70 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563a9c43b0d0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c43ab50 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x563a9c43ab30 <col:16> 'int' 1
| |-EnumConstantDecl 0x563a9c43ac00 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563a9c43b0e8 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c43abe0 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x563a9c43abc0 <col:21> 'int' 2
| |-EnumConstantDecl 0x563a9c43ac90 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563a9c43b100 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c43ac70 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x563a9c43ac50 <col:22> 'int' 4
| |-EnumConstantDecl 0x563a9c43ad20 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563a9c43b118 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c43ad00 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x563a9c43ace0 <col:17> 'int' 8
| |-EnumConstantDecl 0x563a9c43adb0 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563a9c43b130 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c43ad90 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x563a9c43ad70 <col:22> 'int' 16
| |-EnumConstantDecl 0x563a9c43ae40 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563a9c43b148 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c43ae20 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x563a9c43ae00 <col:19> 'int' 32
| |-EnumConstantDecl 0x563a9c43aed0 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563a9c43b160 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c43aeb0 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x563a9c43ae90 <col:17> 'int' 64
| |-EnumConstantDecl 0x563a9c43af60 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563a9c43b178 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c43af40 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x563a9c43af20 <col:14> 'int' 128
| |-EnumConstantDecl 0x563a9c43aff0 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x563a9c43b190 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x563a9c43afd0 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x563a9c43afb0 <col:16> 'int' 256
| `-EnumConstantDecl 0x563a9c43b080 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x563a9c43b1a8 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x563a9c43b060 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x563a9c43b040 <col:12> 'int' 1024
|-CXXMethodDecl 0x563a9c43b3b8 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x563a9c43b1d0 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x563a9c43b270 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x563a9c43b540 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x563a9c43b478 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x563a9c43b5e8 <line:580:3, col:10> col:3 private
|-FieldDecl 0x563a9c43b628 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x563a9c43b688 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x563a9c43b700 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x563a9c43bb00 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x563a9c43b778 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x563a9c43b7f8 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x563a9c43b878 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x563a9c43b8f0 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x563a9c43b968 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x563a9c43b9e0 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x563a9c43bc28 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x563a9c43bc28
| `-ParmVarDecl 0x563a9c43bd38 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x563a9c43de38 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x563a9c43de38
  `-ParmVarDecl 0x563a9c43df48 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>
