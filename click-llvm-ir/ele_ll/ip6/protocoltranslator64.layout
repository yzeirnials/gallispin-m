
*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17)
         0 |   unsigned long long __wseq
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_internal_list
         0 |   struct __pthread_internal_list * __prev
         8 |   struct __pthread_internal_list * __next
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_mutex_s
         0 |   int __lock
         4 |   unsigned int __count
         8 |   int __owner
        12 |   unsigned int __nusers
        16 |   int __kind
        20 |   short __spins
        22 |   short __elision
        24 |   struct __pthread_internal_list __list
        24 |     struct __pthread_internal_list * __prev
        32 |     struct __pthread_internal_list * __next
           | [sizeof=40, dsize=40, align=8,
           |  nvsize=40, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5)
         0 |   unsigned int __low
         4 |   unsigned int __high
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17)
         0 |   unsigned long long __g1_start
         0 |   struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         0 |     unsigned int __low
         4 |     unsigned int __high
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_cond_s
         0 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:94:17) 
         0 |     unsigned long long __wseq
         0 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:97:5) __wseq32
         0 |       unsigned int __low
         4 |       unsigned int __high
         8 |   union __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:103:17) 
         8 |     unsigned long long __g1_start
         8 |     struct __pthread_cond_s::(anonymous at /usr/include/bits/thread-shared-types.h:106:5) __g1_start32
         8 |       unsigned int __low
        12 |       unsigned int __high
        16 |   unsigned int [2] __g_refs
        24 |   unsigned int [2] __g_size
        32 |   unsigned int __g1_orig_size
        36 |   unsigned int __wrefs
        40 |   unsigned int [2] __g_signals
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct __pthread_rwlock_arch_t
         0 |   unsigned int __readers
         4 |   unsigned int __writers
         8 |   unsigned int __wrphase_futex
        12 |   unsigned int __writers_futex
        16 |   unsigned int __pad3
        20 |   unsigned int __pad4
        24 |   int __cur_writer
        28 |   int __shared
        32 |   signed char __rwelision
        33 |   unsigned char [7] __pad1
        40 |   unsigned long __pad2
        48 |   unsigned int __flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::memo_t
         0 |   volatile uint32_t refcount
         4 |   uint32_t capacity
         8 |   volatile uint32_t dirty
        12 |   char [8] real_data
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | struct msghdr
         0 |   void * msg_name
         8 |   socklen_t msg_namelen
        16 |   struct iovec * msg_iov
        24 |   size_t msg_iovlen
        32 |   void * msg_control
        40 |   size_t msg_controllen
        48 |   int msg_flags
           | [sizeof=56, dsize=56, align=8,
           |  nvsize=56, nvalign=8]

*** Dumping AST Record Layout
         0 | struct in_addr
         0 |   in_addr_t s_addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5)
         0 |   uint8_t [16] __u6_addr8
         0 |   uint16_t [8] __u6_addr16
         0 |   uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr
         0 |   sa_family_t sa_family
         2 |   char [14] sa_data
           | [sizeof=16, dsize=16, align=2,
           |  nvsize=16, nvalign=2]

*** Dumping AST Record Layout
         0 | struct in6_addr
         0 |   union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |     uint8_t [16] __u6_addr8
         0 |     uint16_t [8] __u6_addr16
         0 |     uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping AST Record Layout
         0 | struct sockaddr_storage
         0 |   sa_family_t ss_family
         2 |   char [118] __ss_padding
       120 |   unsigned long __ss_align
           | [sizeof=128, dsize=128, align=8,
           |  nvsize=128, nvalign=8]

*** Dumping AST Record Layout
         0 | struct sockaddr_in6
         0 |   sa_family_t sin6_family
         2 |   in_port_t sin6_port
         4 |   uint32_t sin6_flowinfo
         8 |   struct in6_addr sin6_addr
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   uint32_t sin6_scope_id
           | [sizeof=28, dsize=28, align=4,
           |  nvsize=28, nvalign=4]

*** Dumping AST Record Layout
         0 | struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:18:2)
         0 |   uint32_t ip6_un1_flow
         4 |   uint16_t ip6_un1_plen
         6 |   uint8_t ip6_un1_nxt
         7 |   uint8_t ip6_un1_hlim
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:30:2)
     0:0-3 |   unsigned int ip6_un3_fc
     0:4-7 |   unsigned int ip6_un3_v
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:17:5)
         0 |   struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:18:2) ip6_un1
         0 |     uint32_t ip6_un1_flow
         4 |     uint16_t ip6_un1_plen
         6 |     uint8_t ip6_un1_nxt
         7 |     uint8_t ip6_un1_hlim
         0 |   uint8_t ip6_un2_vfc
         0 |   struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:30:2) ip6_un3
     0:0-3 |     unsigned int ip6_un3_fc
     0:4-7 |     unsigned int ip6_un3_v
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | lldiv_t
         0 |   long long quot
         8 |   long long rem
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timeval
         0 |   __time_t tv_sec
         8 |   __suseconds_t tv_usec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class IPAddress
         0 |   uint32_t _addr
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Timestamp::rep_t
         0 |   int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | class Timestamp
         0 |   union Timestamp::rep_t _t
         0 |     int64_t x
           | [sizeof=8, dsize=8, align=8,
           |  nvsize=8, nvalign=8]

*** Dumping AST Record Layout
         0 | struct timespec
         0 |   __time_t tv_sec
         8 |   __syscall_slong_t tv_nsec
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element::Port
         0 |   class Element * _e
         8 |   int _port
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping AST Record Layout
         0 | struct String::rep_t
         0 |   const char * data
         8 |   int length
        16 |   struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class String
         0 |   struct String::rep_t _r
         0 |     const char * data
         8 |     int length
        16 |     struct String::memo_t * memo
           | [sizeof=24, dsize=24, align=8,
           |  nvsize=24, nvalign=8]

*** Dumping AST Record Layout
         0 | class Element
         0 |   (Element vtable pointer)
         8 |   class Element::Port *[2] _ports
        24 |   class Element::Port [4] _inline_ports
        88 |   int [2] _nports
        96 |   class Router * _router
       104 |   int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2f503b8 prev 0x5576c2f40cb8 <../dummy_inc/click/element.hh:214:5, line:252:5> line:214:11 referenced class Port definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5576c2f504b0 <col:5, col:11> col:11 implicit referenced class Port
|-AccessSpecDecl 0x5576c2f50540 <col:18, col:24> col:18 public
|-CXXMethodDecl 0x5576c2f505b8 <line:216:9, col:30> col:21 used active 'bool () const' inline
|-CXXMethodDecl 0x5576c2f50678 <line:217:9, col:35> col:25 element 'Element *() const' inline
|-CXXMethodDecl 0x5576c2f50740 <line:218:9, col:27> col:20 port 'int () const' inline
|-CXXMethodDecl 0x5576c2f508b8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| |-ParmVarDecl 0x5576c2f507f0 <col:54, col:62> col:62 p 'Packet *'
| |-NoInlineAttr 0x5576c2f50960 <col:24>
| `-OptimizeNoneAttr 0x5576c2f509b8 <col:34>
|-CXXMethodDecl 0x5576c2f50a00 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
|-CXXMethodDecl 0x5576c2f50cb8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| |-ParmVarDecl 0x5576c2f50ab0 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5576c2f50b28 <col:43, col:52> col:52 e 'Element *'
| `-ParmVarDecl 0x5576c2f50ba8 <col:55, col:59> col:59 port 'int'
|-AccessSpecDecl 0x5576c2f50d70 <line:229:7, col:14> col:7 private
|-FieldDecl 0x5576c2f50da8 <line:231:9, col:18> col:18 referenced _e 'Element *'
|-FieldDecl 0x5576c2f50e10 <line:232:9, col:13> col:13 referenced _port 'int'
|-CXXConstructorDecl 0x5576c2f50e98 <line:247:9, col:21> col:16 Port 'void ()' inline
|-CXXMethodDecl 0x5576c2f511b8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| |-ParmVarDecl 0x5576c2f50f50 <col:28, col:33> col:33 isoutput 'bool'
| |-ParmVarDecl 0x5576c2f50fc8 <col:43, col:52> col:52 owner 'Element *'
| |-ParmVarDecl 0x5576c2f51040 <col:59, col:68> col:68 e 'Element *'
| `-ParmVarDecl 0x5576c2f510c0 <col:71, col:75> col:75 port 'int'
|-FriendDecl 0x5576c2f512d0 <line:250:9, col:22> col:16 'class Element':'Element'
|-CXXConstructorDecl 0x5576c2f57be8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5576c2f57be8
| `-ParmVarDecl 0x5576c2f57cf8 <col:11> col:11 'const Element::Port &'
|-CXXConstructorDecl 0x5576c2f57d98 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5576c2f57d98
| `-ParmVarDecl 0x5576c2f57ea8 <col:11> col:11 'Element::Port &&'
`-CXXDestructorDecl 0x5576c2fb9610 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"class.Element::Port" = type <{ %class.Element*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%"class.Element::Port.base" = type <{ %class.Element*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2f3c548 prev 0x5576c2f3c290 <../dummy_inc/click/element.hh:29:1, line:319:1> line:29:7 referenced class Element definition
|-DefinitionData polymorphic abstract has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5576c2f3c640 <col:1, col:7> col:7 implicit referenced class Element
|-AccessSpecDecl 0x5576c2f3c6d0 <col:17, col:23> col:17 public
|-CXXConstructorDecl 0x5576c2f3c730 <line:31:5, col:13> col:5 used Element 'void ()'
|-CXXDestructorDecl 0x5576c2f3c820 <line:32:5, col:22> col:13 used ~Element 'void () noexcept' virtual
|-VarDecl 0x5576c2f3c918 <line:33:5, col:16> col:16 nelements_allocated 'int' static
|-CXXMethodDecl 0x5576c2f3cae8 <line:36:5, col:42> col:18 used push 'void (int, Packet *)' virtual
| |-ParmVarDecl 0x5576c2f3c998 <col:23, col:27> col:27 port 'int'
| `-ParmVarDecl 0x5576c2f3ca10 <col:33, col:41> col:41 p 'Packet *'
|-CXXMethodDecl 0x5576c2f3cc78 <line:37:5, col:70> col:21 used pull 'Packet *(int)' virtual
| |-ParmVarDecl 0x5576c2f3cbb0 <col:26, col:30> col:30 port 'int'
| `-WarnUnusedResultAttr 0x5576c2f3cd20 <col:51> warn_unused_result ""
|-CXXMethodDecl 0x5576c2f3ce58 <line:38:5, col:44> col:21 simple_action 'Packet *(Packet *)' virtual
| `-ParmVarDecl 0x5576c2f3cd90 <col:35, col:43> col:43 p 'Packet *'
|-CXXMethodDecl 0x5576c2f3cff8 <line:40:5, col:37> col:18 run_task 'bool (Task *)' virtual
| `-ParmVarDecl 0x5576c2f3cf38 <col:27, col:33> col:33 task 'Task *'
|-CXXMethodDecl 0x5576c2f3d198 <line:41:5, col:40> col:18 run_timer 'void (Timer *)' virtual
| `-ParmVarDecl 0x5576c2f3d0d8 <col:28, col:35> col:35 timer 'Timer *'
|-EnumDecl 0x5576c2f3d240 <line:43:5, col:46> col:5
| |-EnumConstantDecl 0x5576c2f3d340 <col:12, col:26> col:12 SELECT_READ 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
| | `-ImplicitCastExpr 0x5576c2f3d420 <col:26> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2f3d320 <col:26> 'int' Int: 1
| |     `-IntegerLiteral 0x5576c2f3d300 <col:26> 'int' 1
| `-EnumConstantDecl 0x5576c2f3d3d0 <col:29, col:44> col:29 SELECT_WRITE 'Element::(anonymous enum at ../dummy_inc/click/element.hh:43:5)'
|   `-ImplicitCastExpr 0x5576c2f3d438 <col:44> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5576c2f3d3b0 <col:44> 'int' Int: 2
|       `-IntegerLiteral 0x5576c2f3d390 <col:44> 'int' 2
|-CXXMethodDecl 0x5576c2f3d580 <line:44:5, col:43> col:18 selected 'void (int, int)' virtual
| |-ParmVarDecl 0x5576c2f3d468 <col:27, col:31> col:31 fd 'int'
| `-ParmVarDecl 0x5576c2f3d4e8 <col:35, col:39> col:39 mask 'int'
|-CXXMethodDecl 0x5576c2f3d6d8 <line:45:5, col:33> col:18 selected 'void (int)' virtual
| `-ParmVarDecl 0x5576c2f3d648 <col:27, col:31> col:31 fd 'int'
|-CXXMethodDecl 0x5576c2f3d918 <line:48:5, col:86> col:45 checked_output_push 'void (int, Packet *) const'
| |-ParmVarDecl 0x5576c2f3d798 <col:65, col:69> col:69 port 'int'
| |-ParmVarDecl 0x5576c2f3d810 <col:75, col:83> col:83 p 'Packet *'
| |-NoInlineAttr 0x5576c2f3d9c8 <col:20>
| `-OptimizeNoneAttr 0x5576c2f3da20 <col:30>
|-CXXMethodDecl 0x5576c2f3db28 <line:49:5, col:77> col:48 checked_input_pull 'Packet *(int) const'
| |-ParmVarDecl 0x5576c2f3da60 <col:67, col:71> col:71 port 'int'
| |-NoInlineAttr 0x5576c2f3dbd0 <col:20>
| `-OptimizeNoneAttr 0x5576c2f3dc28 <col:30>
|-CXXMethodDecl 0x5576c2f3dc78 <line:52:5, col:46> col:25 class_name 'const char *() const' virtual pure
|-CXXMethodDecl 0x5576c2f3dd40 <line:54:5, col:38> col:25 port_count 'const char *() const' virtual
|-VarDecl 0x5576c2f3de58 <line:55:5, col:33> col:23 PORTS_0_0 'const char []' static
|-VarDecl 0x5576c2f3dee0 <line:56:5, col:33> col:23 PORTS_0_1 'const char []' static
|-VarDecl 0x5576c2f3df68 <line:57:5, col:33> col:23 PORTS_1_0 'const char []' static
|-VarDecl 0x5576c2f3dff0 <line:58:5, col:33> col:23 used PORTS_1_1 'const char []' static
|-VarDecl 0x5576c2f3e078 <line:59:5, col:35> col:23 PORTS_1_1X2 'const char []' static
|-CXXMethodDecl 0x5576c2f3e108 <line:61:5, col:38> col:25 processing 'const char *() const' virtual
|-VarDecl 0x5576c2f3e1c8 <line:62:5, col:32> col:23 AGNOSTIC 'const char []' static
|-VarDecl 0x5576c2f3e250 <line:63:5, col:28> col:23 PUSH 'const char []' static
|-VarDecl 0x5576c2f3e2d8 <line:64:5, col:28> col:23 PULL 'const char []' static
|-VarDecl 0x5576c2f3e360 <line:65:5, col:36> col:23 PUSH_TO_PULL 'const char []' static
|-VarDecl 0x5576c2f3e3e8 <line:66:5, col:36> col:23 PULL_TO_PUSH 'const char []' static
|-VarDecl 0x5576c2f3e470 <line:67:5, col:39> col:23 PROCESSING_A_AH 'const char []' static
|-CXXMethodDecl 0x5576c2f3e500 <line:69:5, col:37> col:25 flow_code 'const char *() const' virtual
|-VarDecl 0x5576c2f3e5c0 <line:70:5, col:37> col:23 COMPLETE_FLOW 'const char []' static
|-CXXMethodDecl 0x5576c2f3e650 <line:72:5, col:33> col:25 flags 'const char *() const' virtual
|-CXXMethodDecl 0x5576c2f3e7a0 <line:73:5, col:30> col:9 flag_value 'int (int) const'
| `-ParmVarDecl 0x5576c2f3e708 <col:20, col:24> col:24 flag 'int'
|-CXXMethodDecl 0x5576c2f3e930 <line:75:5, col:40> col:19 cast 'void *(const char *)' virtual
| `-ParmVarDecl 0x5576c2f3e860 <col:24, col:36> col:36 name 'const char *'
|-CXXMethodDecl 0x5576c2f3ebd0 <line:76:5, col:70> col:19 port_cast 'void *(bool, int, const char *)' virtual
| |-ParmVarDecl 0x5576c2f3e9e8 <col:29, col:34> col:34 isoutput 'bool'
| |-ParmVarDecl 0x5576c2f3ea68 <col:44, col:48> col:48 port 'int'
| `-ParmVarDecl 0x5576c2f3eae8 <col:54, col:66> col:66 name 'const char *'
|-EnumDecl 0x5576c2f3ec88 <line:79:5, line:85:5> line:79:10 ConfigurePhase
| |-EnumConstantDecl 0x5576c2f3ed90 <line:80:9, col:33> col:9 CONFIGURE_PHASE_FIRST 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5576c2f3f020 <col:33> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2f3ed70 <col:33> 'int' Int: 0
| |     `-IntegerLiteral 0x5576c2f3ed50 <col:33> 'int' 0
| |-EnumConstantDecl 0x5576c2f3ee20 <line:81:9, col:32> col:9 CONFIGURE_PHASE_INFO 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5576c2f3f038 <col:32> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2f3ee00 <col:32> 'int' Int: 20
| |     `-IntegerLiteral 0x5576c2f3ede0 <col:32> 'int' 20
| |-EnumConstantDecl 0x5576c2f3eeb0 <line:82:9, col:38> col:9 CONFIGURE_PHASE_PRIVILEGED 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5576c2f3f050 <col:38> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2f3ee90 <col:38> 'int' Int: 90
| |     `-IntegerLiteral 0x5576c2f3ee70 <col:38> 'int' 90
| |-EnumConstantDecl 0x5576c2f3ef40 <line:83:9, col:35> col:9 CONFIGURE_PHASE_DEFAULT 'Element::ConfigurePhase'
| | `-ImplicitCastExpr 0x5576c2f3f068 <col:35> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2f3ef20 <col:35> 'int' Int: 100
| |     `-IntegerLiteral 0x5576c2f3ef00 <col:35> 'int' 100
| `-EnumConstantDecl 0x5576c2f3efd0 <line:84:9, col:32> col:9 CONFIGURE_PHASE_LAST 'Element::ConfigurePhase'
|   `-ImplicitCastExpr 0x5576c2f3f080 <col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5576c2f3efb0 <col:32> 'int' Int: 2000
|       `-IntegerLiteral 0x5576c2f3ef90 <col:32> 'int' 2000
|-CXXMethodDecl 0x5576c2f3f0c0 <line:86:5, col:35> col:17 configure_phase 'int () const' virtual
|-CXXMethodDecl 0x5576c2f3f500 <line:88:5, col:67> col:17 configure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5576c2f3f370 <col:27, col:43> col:43 conf 'Vector<String> &'
| `-ParmVarDecl 0x5576c2f3f3e8 <col:49, col:63> col:63 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5576c2f3f5d0 <line:90:5, col:31> col:18 add_handlers 'void ()' virtual
|-CXXMethodDecl 0x5576c2f3f750 <line:92:5, col:46> col:17 initialize 'int (ErrorHandler *)' virtual
| `-ParmVarDecl 0x5576c2f3f680 <col:28, col:42> col:42 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5576c2f3f958 <line:94:5, col:69> col:18 take_state 'void (Element *, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5576c2f3f808 <col:29, col:38> col:38 old_element 'Element *'
| `-ParmVarDecl 0x5576c2f3f880 <col:51, col:65> col:65 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5576c2f3fa58 <line:95:5, col:40> col:22 hotswap_element 'Element *() const' virtual
|-EnumDecl 0x5576c2f3faf8 <line:97:5, line:106:5> line:97:10 referenced CleanupStage
| |-EnumConstantDecl 0x5576c2f3fbc0 <line:98:9> col:9 referenced CLEANUP_NO_ROUTER 'Element::CleanupStage'
| |-EnumConstantDecl 0x5576c2f3fc50 <line:99:9, col:36> col:9 CLEANUP_BEFORE_CONFIGURE 'Element::CleanupStage'
| | `-ImplicitCastExpr 0x5576c2f3fe80 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2f3fc30 <col:36> 'int' Int: 0
| |     `-DeclRefExpr 0x5576c2f3fc10 <col:36> 'int' EnumConstant 0x5576c2f3fbc0 'CLEANUP_NO_ROUTER' 'Element::CleanupStage'
| |-EnumConstantDecl 0x5576c2f3fca0 <line:100:9> col:9 CLEANUP_CONFIGURE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5576c2f3fcf0 <line:101:9> col:9 CLEANUP_CONFIGURED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5576c2f3fd40 <line:102:9> col:9 CLEANUP_INITIALIZE_FAILED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5576c2f3fd90 <line:103:9> col:9 CLEANUP_INITIALIZED 'Element::CleanupStage'
| |-EnumConstantDecl 0x5576c2f3fde0 <line:104:9> col:9 CLEANUP_ROUTER_INITIALIZED 'Element::CleanupStage'
| `-EnumConstantDecl 0x5576c2f3fe30 <line:105:9> col:9 CLEANUP_MANUAL 'Element::CleanupStage'
|-CXXMethodDecl 0x5576c2f3ff68 <line:107:5, col:44> col:18 cleanup 'void (Element::CleanupStage)' virtual
| `-ParmVarDecl 0x5576c2f3fea8 <col:26, col:39> col:39 stage 'Element::CleanupStage'
|-CXXMethodDecl 0x5576c2f40030 <line:109:5, col:42> col:24 static_initialize 'void ()' static inline
|-CXXMethodDecl 0x5576c2f400f0 <line:110:5, col:39> col:24 static_cleanup 'void ()' static inline
|-CXXMethodDecl 0x5576c2f401b0 <line:113:5, col:19> col:12 name 'String () const'
|-CXXMethodDecl 0x5576c2f40270 <line:114:5, col:34> col:20 declaration 'String () const' virtual
|-CXXMethodDecl 0x5576c2f40388 <line:116:5, col:29> col:20 used router 'Router *() const' inline
|-CXXMethodDecl 0x5576c2f40450 <line:117:5, col:25> col:16 eindex 'int () const' inline
|-CXXMethodDecl 0x5576c2f405d0 <line:118:5, col:34> col:16 eindex 'int (Router *) const' inline
| `-ParmVarDecl 0x5576c2f40500 <col:23, col:31> col:31 r 'Router *'
|-CXXMethodDecl 0x5576c2f406f8 <line:121:5, col:29> col:20 master 'Master *() const' inline
|-CXXMethodDecl 0x5576c2f408f8 <line:123:5, line:127:5> line:123:17 attach_router 'void (Router *, int)' inline
| |-ParmVarDecl 0x5576c2f407a8 <col:31, col:39> col:39 used r 'Router *'
| |-ParmVarDecl 0x5576c2f40828 <col:42, col:46> col:46 used eindex 'int'
| `-CompoundStmt 0x5576c2f540b8 <col:54, line:127:5>
|   |-ParenExpr 0x5576c2f53f68 <line:124:9, col:152> 'void'
|   | `-ConditionalOperator 0x5576c2f53f38 <col:10, col:151> 'void'
|   |   |-CXXStaticCastExpr 0x5576c2f53c28 <col:10, col:38> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5576c2f53c00 <col:30, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-ImplicitCastExpr 0x5576c2f53be8 <col:31> 'bool' <PointerToBoolean>
|   |   |     `-ImplicitCastExpr 0x5576c2f53bd0 <col:31> 'Router *' <LValueToRValue>
|   |   |       `-MemberExpr 0x5576c2f53ba0 <col:31> 'Router *' lvalue ->_router 0x5576c2f51a80
|   |   |         `-CXXThisExpr 0x5576c2f53b90 <col:31> 'Element *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5576c2f53c88 <col:42, col:49> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5576c2f53c68 <col:48> 'int' 0
|   |   `-CallExpr 0x5576c2f53e98 <col:53, col:151> 'void'
|   |     |-ImplicitCastExpr 0x5576c2f53e80 <col:53> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5576c2f53e60 <col:53> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5576c2a49030 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5576c2f53ed8 <col:68> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2f53cf8 <col:68> 'const char [9]' lvalue "!_router"
|   |     |-ImplicitCastExpr 0x5576c2f53ef0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2f53d18 <col:80> 'const char [30]' lvalue "../dummy_inc/click/element.hh"
|   |     |-ImplicitCastExpr 0x5576c2f53f08 <col:113> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5576c2f53d50 <col:113> 'int' 124
|   |     `-ImplicitCastExpr 0x5576c2f53f20 <col:118, col:132> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5576c2f53e48 <col:118, col:132> 'const char [43]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5576c2f53e30 <col:132> 'const char [43]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5576c2f53de8 <col:132> 'const char [43]' lvalue "void Element::attach_router(Router *, int)"
|   |-BinaryOperator 0x5576c2f54000 <line:125:9, col:19> 'Router *' lvalue '='
|   | |-MemberExpr 0x5576c2f53f98 <col:9> 'Router *' lvalue ->_router 0x5576c2f51a80
|   | | `-CXXThisExpr 0x5576c2f53f88 <col:9> 'Element *' implicit this
|   | `-ImplicitCastExpr 0x5576c2f53fe8 <col:19> 'Router *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576c2f53fc8 <col:19> 'Router *' lvalue ParmVar 0x5576c2f407a8 'r' 'Router *'
|   `-BinaryOperator 0x5576c2f54098 <line:126:9, col:19> 'int' lvalue '='
|     |-MemberExpr 0x5576c2f54030 <col:9> 'int' lvalue ->_eindex 0x5576c2f51ae8
|     | `-CXXThisExpr 0x5576c2f54020 <col:9> 'Element *' implicit this
|     `-ImplicitCastExpr 0x5576c2f54080 <col:19> 'int' <LValueToRValue>
|       `-DeclRefExpr 0x5576c2f54060 <col:19> 'int' lvalue ParmVar 0x5576c2f40828 'eindex' 'int'
|-CXXMethodDecl 0x5576c2f40a80 <line:130:5, col:38> col:16 used nports 'int (bool) const' inline
| `-ParmVarDecl 0x5576c2f409b8 <col:23, col:28> col:28 isoutput 'bool'
|-CXXMethodDecl 0x5576c2f40b50 <line:131:5, col:26> col:16 used ninputs 'int () const' inline
|-CXXMethodDecl 0x5576c2f40c18 <line:132:5, col:27> col:16 used noutputs 'int () const' inline
|-CXXRecordDecl 0x5576c2f40cb8 <line:134:5, col:11> col:11 referenced class Port
|-CXXMethodDecl 0x5576c2f40f08 <line:135:5, col:82> col:52 used port 'const Element::Port &(bool, int) const'
| |-ParmVarDecl 0x5576c2f40d80 <col:57, col:62> col:62 isoutput 'bool'
| |-ParmVarDecl 0x5576c2f40e00 <col:72, col:76> col:76 port 'int'
| |-NoInlineAttr 0x5576c2f40fb8 <col:20>
| `-OptimizeNoneAttr 0x5576c2f41010 <col:30>
|-CXXMethodDecl 0x5576c2f47038 <line:136:5, col:68> col:52 input 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5576c2f46f70 <col:58, col:62> col:62 port 'int'
| |-NoInlineAttr 0x5576c2f470e0 <col:20>
| `-OptimizeNoneAttr 0x5576c2f47138 <col:30>
|-CXXMethodDecl 0x5576c2f47208 <line:137:5, col:69> col:52 output 'const Element::Port &(int) const'
| |-ParmVarDecl 0x5576c2f47178 <col:59, col:63> col:63 port 'int'
| |-NoInlineAttr 0x5576c2f472b0 <col:20>
| `-OptimizeNoneAttr 0x5576c2f47308 <col:30>
|-CXXMethodDecl 0x5576c2f47498 <line:139:5, col:54> col:17 used port_active 'bool (bool, int) const' inline
| |-ParmVarDecl 0x5576c2f47340 <col:29, col:34> col:34 isoutput 'bool'
| `-ParmVarDecl 0x5576c2f473c0 <col:44, col:48> col:48 port 'int'
|-CXXMethodDecl 0x5576c2f47628 <line:140:5, col:41> col:17 input_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5576c2f47560 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5576c2f47778 <line:141:5, col:41> col:17 input_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5576c2f476e8 <col:31, col:35> col:35 port 'int'
|-CXXMethodDecl 0x5576c2f478c8 <line:142:5, col:42> col:17 output_is_push 'bool (int) const' inline
| `-ParmVarDecl 0x5576c2f47838 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5576c2f47a18 <line:143:5, col:42> col:17 output_is_pull 'bool (int) const' inline
| `-ParmVarDecl 0x5576c2f47988 <col:32, col:36> col:36 port 'int'
|-CXXMethodDecl 0x5576c2f47cd8 <line:144:5, col:57> col:10 port_flow 'void (bool, int, Bitvector *) const'
| |-ParmVarDecl 0x5576c2f47ad0 <col:20, col:25> col:25 isoutput 'bool'
| |-ParmVarDecl 0x5576c2f47b50 <col:35, col:39> col:39 port 'int'
| `-ParmVarDecl 0x5576c2f47bf8 <col:45, col:54> col:55 'Bitvector *'
|-CXXMethodDecl 0x5576c2f47db0 <line:147:5, col:28> col:12 configuration 'String () const'
|-CXXMethodDecl 0x5576c2f47e70 <line:149:5, col:41> col:18 can_live_reconfigure 'bool () const' virtual
|-CXXMethodDecl 0x5576c2f48140 <line:150:5, col:64> col:17 live_reconfigure 'int (Vector<String> &, ErrorHandler *)' virtual
| |-ParmVarDecl 0x5576c2f47ff0 <col:34, col:48> col:49 'Vector<String> &'
| `-ParmVarDecl 0x5576c2f48068 <col:51, col:63> col:64 'ErrorHandler *'
|-CXXMethodDecl 0x5576c2f48268 <line:152:5, col:33> col:19 home_thread 'RouterThread *() const'
|-CXXMethodDecl 0x5576c2f48440 <line:156:5, col:36> col:9 add_select 'int (int, int)'
| |-ParmVarDecl 0x5576c2f48320 <col:20, col:24> col:24 fd 'int'
| `-ParmVarDecl 0x5576c2f483a0 <col:28, col:32> col:32 mask 'int'
|-CXXMethodDecl 0x5576c2f48628 <line:157:5, col:39> col:9 remove_select 'int (int, int)'
| |-ParmVarDecl 0x5576c2f48508 <col:23, col:27> col:27 fd 'int'
| `-ParmVarDecl 0x5576c2f48588 <col:31, col:35> col:35 mask 'int'
|-CXXMethodDecl 0x5576c2f48998 <line:161:5, col:127> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5576c2f486e8 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5576c2f48760 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5576c2f487e0 <col:82, col:106> col:94 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5576c2f536a0 <col:106> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5576c2f53680 <col:106> 'int' 0
| `-ParmVarDecl 0x5576c2f48858 <col:109, col:126> col:118 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5576c2f536d8 <col:126> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5576c2f536b8 <col:126> 'int' 0
|-CXXMethodDecl 0x5576c2f48d18 <line:162:5, col:115> col:10 add_read_handler 'void (const String &, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5576c2f48a68 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5576c2f48ae0 <col:47, col:67> col:67 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5576c2f48b60 <col:82, col:86> col:86 user_data 'int'
| `-ParmVarDecl 0x5576c2f48bd8 <col:97, col:114> col:106 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5576c2f53710 <col:114> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5576c2f536f0 <col:114> 'int' 0
|-CXXMethodDecl 0x5576c2f490a8 <line:163:5, col:117> col:10 add_read_handler 'void (const char *, ReadHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5576c2f48df0 <col:27, col:39> col:39 name 'const char *'
| |-ParmVarDecl 0x5576c2f48e68 <col:45, col:65> col:65 read_callback 'ReadHandlerCallback':'String (*)(Element *, void *)'
| |-ParmVarDecl 0x5576c2f48ee8 <col:80, col:96> col:84 user_data 'int' cinit
| | `-IntegerLiteral 0x5576c2f53728 <col:96> 'int' 0
| `-ParmVarDecl 0x5576c2f48f60 <col:99, col:116> col:108 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5576c2f53768 <col:116> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5576c2f53748 <col:116> 'int' 0
|-CXXMethodDecl 0x5576c2f49428 <line:164:5, col:130> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, const void *, uint32_t)'
| |-ParmVarDecl 0x5576c2f49178 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5576c2f491f0 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5576c2f49270 <col:85, col:109> col:97 user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5576c2f537a0 <col:109> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5576c2f53780 <col:109> 'int' 0
| `-ParmVarDecl 0x5576c2f492e8 <col:112, col:129> col:121 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5576c2f537d8 <col:129> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5576c2f537b8 <col:129> 'int' 0
|-CXXMethodDecl 0x5576c2f497a8 <line:165:5, col:118> col:10 add_write_handler 'void (const String &, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5576c2f494f8 <col:28, col:42> col:42 name 'const String &'
| |-ParmVarDecl 0x5576c2f49570 <col:48, col:69> col:69 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5576c2f495f0 <col:85, col:89> col:89 user_data 'int'
| `-ParmVarDecl 0x5576c2f49668 <col:100, col:117> col:109 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5576c2f53810 <col:117> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5576c2f537f0 <col:117> 'int' 0
|-CXXMethodDecl 0x5576c2f49b38 <line:166:5, col:120> col:10 add_write_handler 'void (const char *, WriteHandlerCallback, int, uint32_t)'
| |-ParmVarDecl 0x5576c2f49880 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5576c2f498f8 <col:46, col:67> col:67 write_callback 'WriteHandlerCallback':'int (*)(const String &, Element *, void *, ErrorHandler *)'
| |-ParmVarDecl 0x5576c2f49978 <col:83, col:99> col:87 user_data 'int' cinit
| | `-IntegerLiteral 0x5576c2f53828 <col:99> 'int' 0
| `-ParmVarDecl 0x5576c2f499f0 <col:102, col:119> col:111 flags 'uint32_t':'unsigned int' cinit
|   `-ImplicitCastExpr 0x5576c2f53868 <col:119> 'uint32_t':'unsigned int' <IntegralCast>
|     `-IntegerLiteral 0x5576c2f53848 <col:119> 'int' 0
|-CXXMethodDecl 0x5576c2f49f58 <line:167:5, col:142> col:10 set_handler 'void (const String &, int, HandlerCallback, const void *, const void *)'
| |-ParmVarDecl 0x5576c2f49c08 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5576c2f49c88 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5576c2f49d00 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5576c2f49d80 <col:79, col:108> col:91 read_user_data 'const void *' cinit
| | `-ImplicitCastExpr 0x5576c2f538a0 <col:108> 'const void *' <NullToPointer>
| |   `-IntegerLiteral 0x5576c2f53880 <col:108> 'int' 0
| `-ParmVarDecl 0x5576c2f49e00 <col:111, col:141> col:123 write_user_data 'const void *' cinit
|   `-ImplicitCastExpr 0x5576c2f538d8 <col:141> 'const void *' <NullToPointer>
|     `-IntegerLiteral 0x5576c2f538b8 <col:141> 'int' 0
|-CXXMethodDecl 0x5576c2f4a378 <line:168:5, col:122> col:10 set_handler 'void (const String &, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5576c2f4a030 <col:22, col:36> col:36 name 'const String &'
| |-ParmVarDecl 0x5576c2f4a0b0 <col:42, col:46> col:46 flags 'int'
| |-ParmVarDecl 0x5576c2f4a128 <col:53, col:69> col:69 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5576c2f4a1a8 <col:79, col:83> col:83 read_user_data 'int'
| `-ParmVarDecl 0x5576c2f4a228 <col:99, col:121> col:103 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5576c2f538f0 <col:121> 'int' 0
|-CXXMethodDecl 0x5576c2f4a7a8 <line:169:5, col:124> col:10 set_handler 'void (const char *, int, HandlerCallback, int, int)'
| |-ParmVarDecl 0x5576c2f4a458 <col:22, col:34> col:34 name 'const char *'
| |-ParmVarDecl 0x5576c2f4a4d8 <col:40, col:44> col:44 flags 'int'
| |-ParmVarDecl 0x5576c2f4a550 <col:51, col:67> col:67 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| |-ParmVarDecl 0x5576c2f4a5d0 <col:77, col:98> col:81 read_user_data 'int' cinit
| | `-IntegerLiteral 0x5576c2f53910 <col:98> 'int' 0
| `-ParmVarDecl 0x5576c2f4a650 <col:101, col:123> col:105 write_user_data 'int' cinit
|   `-IntegerLiteral 0x5576c2f53930 <col:123> 'int' 0
|-CXXMethodDecl 0x5576c2f4aa70 <line:170:5, col:81> col:9 set_handler_flags 'int (const String &, int, int)'
| |-ParmVarDecl 0x5576c2f4a880 <col:27, col:41> col:41 name 'const String &'
| |-ParmVarDecl 0x5576c2f4a900 <col:47, col:51> col:51 set_flags 'int'
| `-ParmVarDecl 0x5576c2f4a980 <col:62, col:80> col:66 clear_flags 'int' cinit
|   `-IntegerLiteral 0x5576c2f53950 <col:80> 'int' 0
|-EnumDecl 0x5576c2f4ab28 <line:171:5, line:175:36> line:171:5
| |-EnumConstantDecl 0x5576c2f4ac30 <col:12, col:42> col:12 TASKHANDLER_WRITE_SCHEDULED 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5576c2f4aec0 <col:42> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2f4ac10 <col:42> 'int' Int: 1
| |     `-IntegerLiteral 0x5576c2f4abf0 <col:42> 'int' 1
| |-EnumConstantDecl 0x5576c2f4acc0 <line:172:12, col:40> col:12 TASKHANDLER_WRITE_TICKETS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5576c2f4aed8 <col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2f4aca0 <col:40> 'int' Int: 2
| |     `-IntegerLiteral 0x5576c2f4ac80 <col:40> 'int' 2
| |-EnumConstantDecl 0x5576c2f4ad50 <line:173:12, col:44> col:12 TASKHANDLER_WRITE_HOME_THREAD 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5576c2f4aef0 <col:44> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2f4ad30 <col:44> 'int' Int: 4
| |     `-IntegerLiteral 0x5576c2f4ad10 <col:44> 'int' 4
| |-EnumConstantDecl 0x5576c2f4ade0 <line:174:12, col:36> col:12 TASKHANDLER_WRITE_ALL 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
| | `-ImplicitCastExpr 0x5576c2f4af08 <col:36> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2f4adc0 <col:36> 'int' Int: 7
| |     `-IntegerLiteral 0x5576c2f4ada0 <col:36> 'int' 7
| `-EnumConstantDecl 0x5576c2f4ae70 <line:175:12, col:34> col:12 referenced TASKHANDLER_DEFAULT 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|   `-ImplicitCastExpr 0x5576c2f4af20 <col:34> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5576c2f4ae50 <col:34> 'int' Int: 6
|       `-IntegerLiteral 0x5576c2f4ae30 <col:34> 'int' 6
|-CXXMethodDecl 0x5576c2f4b1d8 <line:176:5, col:106> col:10 used add_task_handlers 'void (Task *, NotifierSignal *, int, const String &)'
| |-ParmVarDecl 0x5576c2f4af48 <col:28, col:34> col:34 task 'Task *'
| |-ParmVarDecl 0x5576c2f4afe8 <col:40, col:56> col:56 signal 'NotifierSignal *'
| |-ParmVarDecl 0x5576c2f4b068 <col:64, col:68> col:68 flags 'int'
| `-ParmVarDecl 0x5576c2f4b0e0 <col:75, col:105> col:89 prefix 'const String &' cinit
|   `-ExprWithCleanups 0x5576c2f53a08 <col:98, col:105> 'const String' lvalue
|     `-MaterializeTemporaryExpr 0x5576c2f539f0 <col:98, col:105> 'const String' lvalue
|       `-ImplicitCastExpr 0x5576c2f539d8 <col:98, col:105> 'const String' <NoOp>
|         `-CXXBindTemporaryExpr 0x5576c2f539b8 <col:98, col:105> 'String' (CXXTemporary 0x5576c2f539b8)
|           `-CXXTemporaryObjectExpr 0x5576c2f53980 <col:98, col:105> 'String' 'void ()'
|-CXXMethodDecl 0x5576c2f4b478 <line:177:5, line:179:5> line:177:17 add_task_handlers 'void (Task *, NotifierSignal *, const String &)' inline
| |-ParmVarDecl 0x5576c2f4b2a8 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5576c2f4b320 <col:47, col:63> col:63 used signal 'NotifierSignal *'
| |-ParmVarDecl 0x5576c2f4b398 <col:71, col:101> col:85 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5576c2f53ab8 <col:94, col:101> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5576c2f53aa0 <col:94, col:101> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5576c2f53a88 <col:94, col:101> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5576c2f53a68 <col:94, col:101> 'String' (CXXTemporary 0x5576c2f53a68)
| |         `-CXXTemporaryObjectExpr 0x5576c2f53a30 <col:94, col:101> 'String' 'void ()'
| `-CompoundStmt 0x5576c2f542a0 <col:104, line:179:5>
|   `-CXXMemberCallExpr 0x5576c2f54218 <line:178:9, col:68> 'void'
|     |-MemberExpr 0x5576c2f541e8 <col:9> '<bound member function type>' ->add_task_handlers 0x5576c2f4b1d8
|     | `-CXXThisExpr 0x5576c2f541d8 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5576c2f54258 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5576c2f54158 <col:27> 'Task *' lvalue ParmVar 0x5576c2f4b2a8 'task' 'Task *'
|     |-ImplicitCastExpr 0x5576c2f54270 <col:33> 'NotifierSignal *' <LValueToRValue>
|     | `-DeclRefExpr 0x5576c2f54178 <col:33> 'NotifierSignal *' lvalue ParmVar 0x5576c2f4b320 'signal' 'NotifierSignal *'
|     |-ImplicitCastExpr 0x5576c2f54288 <col:41> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5576c2f54198 <col:41> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5576c2f4ae70 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5576c2f541b8 <col:62> 'const String' lvalue ParmVar 0x5576c2f4b398 'prefix' 'const String &'
|-CXXMethodDecl 0x5576c2f4b688 <line:180:5, line:182:5> line:180:17 add_task_handlers 'void (Task *, const String &)' inline
| |-ParmVarDecl 0x5576c2f4b540 <col:35, col:41> col:41 used task 'Task *'
| |-ParmVarDecl 0x5576c2f4b5b8 <col:47, col:77> col:61 used prefix 'const String &' cinit
| | `-ExprWithCleanups 0x5576c2f53b68 <col:70, col:77> 'const String' lvalue
| |   `-MaterializeTemporaryExpr 0x5576c2f53b50 <col:70, col:77> 'const String' lvalue
| |     `-ImplicitCastExpr 0x5576c2f53b38 <col:70, col:77> 'const String' <NoOp>
| |       `-CXXBindTemporaryExpr 0x5576c2f53b18 <col:70, col:77> 'String' (CXXTemporary 0x5576c2f53b18)
| |         `-CXXTemporaryObjectExpr 0x5576c2f53ae0 <col:70, col:77> 'String' 'void ()'
| `-CompoundStmt 0x5576c2f54478 <col:80, line:182:5>
|   `-CXXMemberCallExpr 0x5576c2f543f0 <line:181:9, col:63> 'void'
|     |-MemberExpr 0x5576c2f543c0 <col:9> '<bound member function type>' ->add_task_handlers 0x5576c2f4b1d8
|     | `-CXXThisExpr 0x5576c2f543b0 <col:9> 'Element *' implicit this
|     |-ImplicitCastExpr 0x5576c2f54430 <col:27> 'Task *' <LValueToRValue>
|     | `-DeclRefExpr 0x5576c2f54330 <col:27> 'Task *' lvalue ParmVar 0x5576c2f4b540 'task' 'Task *'
|     |-ImplicitCastExpr 0x5576c2f54448 <col:33> 'NotifierSignal *' <NullToPointer>
|     | `-IntegerLiteral 0x5576c2f54350 <col:33> 'int' 0
|     |-ImplicitCastExpr 0x5576c2f54460 <col:36> 'int' <IntegralCast>
|     | `-DeclRefExpr 0x5576c2f54370 <col:36> 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)' EnumConstant 0x5576c2f4ae70 'TASKHANDLER_DEFAULT' 'Element::(anonymous enum at ../dummy_inc/click/element.hh:171:5)'
|     `-DeclRefExpr 0x5576c2f54390 <col:57> 'const String' lvalue ParmVar 0x5576c2f4b5b8 'prefix' 'const String &'
|-CXXMethodDecl 0x5576c2f4b968 <line:184:5, col:70> col:10 add_data_handlers 'void (const char *, int, uint8_t *)'
| |-ParmVarDecl 0x5576c2f4b750 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5576c2f4b7d0 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5576c2f4b848 <col:57, col:66> col:66 data 'uint8_t *'
|-CXXMethodDecl 0x5576c2f4bc18 <line:185:5, col:67> col:10 add_data_handlers 'void (const char *, int, bool *)'
| |-ParmVarDecl 0x5576c2f4ba38 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5576c2f4bab8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5576c2f4bb38 <col:57, col:63> col:63 data 'bool *'
|-CXXMethodDecl 0x5576c2f4bf08 <line:186:5, col:71> col:10 add_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5576c2f4bce8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5576c2f4bd68 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5576c2f4bde0 <col:57, col:67> col:67 data 'uint16_t *'
|-CXXMethodDecl 0x5576c2f4c1b8 <line:187:5, col:66> col:10 add_data_handlers 'void (const char *, int, int *)'
| |-ParmVarDecl 0x5576c2f4bfd8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5576c2f4c058 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5576c2f4c0d8 <col:57, col:62> col:62 data 'int *'
|-CXXMethodDecl 0x5576c2f4c468 <line:188:5, col:71> col:10 add_data_handlers 'void (const char *, int, unsigned int *)'
| |-ParmVarDecl 0x5576c2f4c288 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5576c2f4c308 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5576c2f4c388 <col:57, col:67> col:67 data 'unsigned int *'
|-CXXMethodDecl 0x5576c2f4c718 <line:189:5, col:78> col:10 add_data_handlers 'void (const char *, int, atomic_uint32_t *)'
| |-ParmVarDecl 0x5576c2f4c538 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5576c2f4c5b8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5576c2f4c630 <col:57, col:74> col:74 data 'atomic_uint32_t *'
|-CXXMethodDecl 0x5576c2f4c9c8 <line:190:5, col:67> col:10 add_data_handlers 'void (const char *, int, long *)'
| |-ParmVarDecl 0x5576c2f4c7e8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5576c2f4c868 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5576c2f4c8e8 <col:57, col:63> col:63 data 'long *'
|-CXXMethodDecl 0x5576c2f4cc78 <line:191:5, col:76> col:10 add_data_handlers 'void (const char *, int, unsigned long *)'
| |-ParmVarDecl 0x5576c2f4ca98 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5576c2f4cb18 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5576c2f4cb98 <col:57, col:72> col:72 data 'unsigned long *'
|-CXXMethodDecl 0x5576c2f4cf58 <line:193:5, col:72> col:10 add_data_handlers 'void (const char *, int, long long *)'
| |-ParmVarDecl 0x5576c2f4cd48 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5576c2f4cdc8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5576c2f4ce70 <col:57, col:68> col:68 data 'long long *'
|-CXXMethodDecl 0x5576c2f4d238 <line:194:5, col:81> col:10 add_data_handlers 'void (const char *, int, unsigned long long *)'
| |-ParmVarDecl 0x5576c2f4d028 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5576c2f4d0a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5576c2f4d150 <col:57, col:77> col:77 data 'unsigned long long *'
|-CXXMethodDecl 0x5576c2f4d4a0 <line:196:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint16_t *)'
| |-ParmVarDecl 0x5576c2f4d308 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5576c2f4d388 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5576c2f4d400 <col:67, col:77> col:77 data 'uint16_t *'
|-CXXMethodDecl 0x5576c2f4d748 <line:197:5, col:81> col:10 add_net_order_data_handlers 'void (const char *, int, uint32_t *)'
| |-ParmVarDecl 0x5576c2f4d570 <col:38, col:50> col:50 name 'const char *'
| |-ParmVarDecl 0x5576c2f4d5f0 <col:56, col:60> col:60 flags 'int'
| `-ParmVarDecl 0x5576c2f4d668 <col:67, col:77> col:77 data 'uint32_t *'
|-CXXMethodDecl 0x5576c2f4d9f8 <line:199:5, col:69> col:10 add_data_handlers 'void (const char *, int, double *)'
| |-ParmVarDecl 0x5576c2f4d818 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5576c2f4d898 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5576c2f4d918 <col:57, col:65> col:65 data 'double *'
|-CXXMethodDecl 0x5576c2f4dca8 <line:201:5, col:69> col:10 add_data_handlers 'void (const char *, int, String *)'
| |-ParmVarDecl 0x5576c2f4dac8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5576c2f4db48 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5576c2f4dbc0 <col:57, col:65> col:65 data 'String *'
|-CXXMethodDecl 0x5576c2f4df58 <line:202:5, col:72> col:10 add_data_handlers 'void (const char *, int, IPAddress *)'
| |-ParmVarDecl 0x5576c2f4dd78 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5576c2f4ddf8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5576c2f4de70 <col:57, col:68> col:68 data 'IPAddress *'
|-CXXMethodDecl 0x5576c2f4e208 <line:203:5, col:75> col:10 add_data_handlers 'void (const char *, int, EtherAddress *)'
| |-ParmVarDecl 0x5576c2f4e028 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5576c2f4e0a8 <col:46, col:50> col:50 flags 'int'
| `-ParmVarDecl 0x5576c2f4e120 <col:57, col:71> col:71 data 'EtherAddress *'
|-CXXMethodDecl 0x5576c2f4e538 <line:204:5, col:98> col:10 add_data_handlers 'void (const char *, int, Timestamp *, bool)'
| |-ParmVarDecl 0x5576c2f4e2d8 <col:28, col:40> col:40 name 'const char *'
| |-ParmVarDecl 0x5576c2f4e358 <col:46, col:50> col:50 flags 'int'
| |-ParmVarDecl 0x5576c2f4e3d0 <col:57, col:68> col:68 data 'Timestamp *'
| `-ParmVarDecl 0x5576c2f4e448 <col:74, col:93> col:79 is_interval 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5576c2f53b80 <col:93> 'bool' false
|-CXXMethodDecl 0x5576c2f4e720 <line:206:5, col:58> col:19 read_positional_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5576c2f4e608 <col:43, col:50> col:51 'Element *'
| `-ParmVarDecl 0x5576c2f4e688 <col:53, col:57> col:58 'void *'
|-CXXMethodDecl 0x5576c2f4e8f8 <line:207:5, col:55> col:19 read_keyword_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5576c2f4e7e0 <col:40, col:47> col:48 'Element *'
| `-ParmVarDecl 0x5576c2f4e860 <col:50, col:54> col:55 'void *'
|-CXXMethodDecl 0x5576c2f4ebd8 <line:208:5, col:92> col:16 reconfigure_positional_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5576c2f4e9b8 <col:47, col:59> col:60 'const String &'
| |-ParmVarDecl 0x5576c2f4ea30 <col:62, col:69> col:70 'Element *'
| |-ParmVarDecl 0x5576c2f4eab0 <col:72, col:76> col:77 'void *'
| `-ParmVarDecl 0x5576c2f4eb28 <col:79, col:91> col:92 'ErrorHandler *'
|-CXXMethodDecl 0x5576c2f4eec8 <line:209:5, col:89> col:16 reconfigure_keyword_handler 'int (const String &, Element *, void *, ErrorHandler *)' static
| |-ParmVarDecl 0x5576c2f4eca8 <col:44, col:56> col:57 'const String &'
| |-ParmVarDecl 0x5576c2f4ed20 <col:59, col:66> col:67 'Element *'
| |-ParmVarDecl 0x5576c2f4eda0 <col:69, col:73> col:74 'void *'
| `-ParmVarDecl 0x5576c2f4ee18 <col:76, col:88> col:89 'ErrorHandler *'
|-CXXMethodDecl 0x5576c2f50120 <line:211:5, col:50> col:17 llrpc 'int (unsigned int, void *)' virtual
| |-ParmVarDecl 0x5576c2f4ffc8 <col:23, col:32> col:32 command 'unsigned int'
| `-ParmVarDecl 0x5576c2f50048 <col:41, col:47> col:47 arg 'void *'
|-CXXMethodDecl 0x5576c2f50308 <line:212:5, col:48> col:9 local_llrpc 'int (unsigned int, void *)'
| |-ParmVarDecl 0x5576c2f501e8 <col:21, col:30> col:30 command 'unsigned int'
| `-ParmVarDecl 0x5576c2f50268 <col:39, col:45> col:45 arg 'void *'
|-CXXRecordDecl 0x5576c2f503b8 prev 0x5576c2f40cb8 <line:214:5, line:252:5> line:214:11 referenced class Port definition
| |-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| | |-DefaultConstructor exists non_trivial user_provided
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5576c2f504b0 <col:5, col:11> col:11 implicit referenced class Port
| |-AccessSpecDecl 0x5576c2f50540 <col:18, col:24> col:18 public
| |-CXXMethodDecl 0x5576c2f505b8 <line:216:9, col:30> col:21 used active 'bool () const' inline
| |-CXXMethodDecl 0x5576c2f50678 <line:217:9, col:35> col:25 element 'Element *() const' inline
| |-CXXMethodDecl 0x5576c2f50740 <line:218:9, col:27> col:20 port 'int () const' inline
| |-CXXMethodDecl 0x5576c2f508b8 <line:220:9, col:65> col:49 used push 'void (Packet *) const'
| | |-ParmVarDecl 0x5576c2f507f0 <col:54, col:62> col:62 p 'Packet *'
| | |-NoInlineAttr 0x5576c2f50960 <col:24>
| | `-OptimizeNoneAttr 0x5576c2f509b8 <col:34>
| |-CXXMethodDecl 0x5576c2f50a00 <line:221:9, col:31> col:24 used pull 'Packet *() const' inline
| |-CXXMethodDecl 0x5576c2f50cb8 <line:227:9, col:63> col:21 used assign 'void (bool, Element *, int)' inline
| | |-ParmVarDecl 0x5576c2f50ab0 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5576c2f50b28 <col:43, col:52> col:52 e 'Element *'
| | `-ParmVarDecl 0x5576c2f50ba8 <col:55, col:59> col:59 port 'int'
| |-AccessSpecDecl 0x5576c2f50d70 <line:229:7, col:14> col:7 private
| |-FieldDecl 0x5576c2f50da8 <line:231:9, col:18> col:18 referenced _e 'Element *'
| |-FieldDecl 0x5576c2f50e10 <line:232:9, col:13> col:13 referenced _port 'int'
| |-CXXConstructorDecl 0x5576c2f50e98 <line:247:9, col:21> col:16 Port 'void ()' inline
| |-CXXMethodDecl 0x5576c2f511b8 <line:248:9, col:79> col:21 assign 'void (bool, Element *, Element *, int)' inline
| | |-ParmVarDecl 0x5576c2f50f50 <col:28, col:33> col:33 isoutput 'bool'
| | |-ParmVarDecl 0x5576c2f50fc8 <col:43, col:52> col:52 owner 'Element *'
| | |-ParmVarDecl 0x5576c2f51040 <col:59, col:68> col:68 e 'Element *'
| | `-ParmVarDecl 0x5576c2f510c0 <col:71, col:75> col:75 port 'int'
| |-FriendDecl 0x5576c2f512d0 <line:250:9, col:22> col:16 'class Element':'Element'
| |-CXXConstructorDecl 0x5576c2f57be8 <line:214:11> col:11 implicit constexpr Port 'void (const Element::Port &)' inline default trivial noexcept-unevaluated 0x5576c2f57be8
| | `-ParmVarDecl 0x5576c2f57cf8 <col:11> col:11 'const Element::Port &'
| |-CXXConstructorDecl 0x5576c2f57d98 <col:11> col:11 implicit constexpr Port 'void (Element::Port &&)' inline default trivial noexcept-unevaluated 0x5576c2f57d98
| | `-ParmVarDecl 0x5576c2f57ea8 <col:11> col:11 'Element::Port &&'
| `-CXXDestructorDecl 0x5576c2fb9610 <col:11> col:11 implicit ~Port 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5576c2f51348 <line:256:5, col:49> col:12 id 'String () const'
| `-DeprecatedAttr 0x5576c2f513e8 <col:38> "" ""
|-CXXMethodDecl 0x5576c2f51478 <line:257:5, col:55> col:12 landmark 'String () const'
| `-DeprecatedAttr 0x5576c2f51518 <col:44> "" ""
|-AccessSpecDecl 0x5576c2f51588 <line:260:3, col:10> col:3 private
|-EnumDecl 0x5576c2f515b0 <line:262:5, col:29> col:5
| `-EnumConstantDecl 0x5576c2f516b0 <col:12, col:27> col:12 referenced INLINE_PORTS 'Element::(anonymous enum at ../dummy_inc/click/element.hh:262:5)'
|   `-ImplicitCastExpr 0x5576c2f51700 <col:27> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5576c2f51690 <col:27> 'int' Int: 4
|       `-IntegerLiteral 0x5576c2f51670 <col:27> 'int' 4
|-FieldDecl 0x5576c2f517b8 <line:264:5, col:19> col:11 referenced _ports 'Element::Port *[2]'
|-FieldDecl 0x5576c2f51968 <line:265:5, col:36> col:10 _inline_ports 'Element::Port [4]'
|-FieldDecl 0x5576c2f51a20 <line:267:5, col:18> col:9 referenced _nports 'int [2]'
|-FieldDecl 0x5576c2f51a80 <line:269:5, col:13> col:13 referenced _router 'Router *'
|-FieldDecl 0x5576c2f51ae8 <line:270:5, col:9> col:9 referenced _eindex 'int'
|-CXXConstructorDecl 0x5576c2f51c38 <line:292:5, col:28> col:5 Element 'void (const Element &)'
| `-ParmVarDecl 0x5576c2f51b78 <col:13, col:27> col:28 'const Element &'
|-CXXMethodDecl 0x5576c2f51de8 <line:293:5, col:39> col:14 operator= 'Element &(const Element &)'
| `-ParmVarDecl 0x5576c2f51cf8 <col:24, col:38> col:39 'const Element &'
|-CXXMethodDecl 0x5576c2f51fc8 <line:296:5, col:28> col:9 set_nports 'int (int, int)'
| |-ParmVarDecl 0x5576c2f51ea8 <col:20> col:23 'int'
| `-ParmVarDecl 0x5576c2f51f28 <col:25> col:28 'int'
|-CXXMethodDecl 0x5576c2f52270 <line:297:5, col:47> col:9 notify_nports 'int (int, int, ErrorHandler *)'
| |-ParmVarDecl 0x5576c2f52090 <col:23> col:26 'int'
| |-ParmVarDecl 0x5576c2f52110 <col:28> col:31 'int'
| `-ParmVarDecl 0x5576c2f52188 <col:33, col:46> col:47 'ErrorHandler *'
|-EnumDecl 0x5576c2f52328 <line:298:5, col:47> col:10 Processing
| |-EnumConstantDecl 0x5576c2f523f0 <col:23> col:23 VAGNOSTIC 'Element::Processing'
| |-EnumConstantDecl 0x5576c2f52440 <col:34> col:34 VPUSH 'Element::Processing'
| `-EnumConstantDecl 0x5576c2f52490 <col:41> col:41 VPULL 'Element::Processing'
|-CXXMethodDecl 0x5576c2f52670 <line:299:5, col:71> col:16 next_processing_code 'int (const char *&, ErrorHandler *)' static
| |-ParmVarDecl 0x5576c2f52520 <col:37, col:50> col:50 p 'const char *&'
| `-ParmVarDecl 0x5576c2f52598 <col:53, col:67> col:67 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5576c2f52918 <line:300:5, col:80> col:10 processing_vector 'void (int *, int *, ErrorHandler *) const'
| |-ParmVarDecl 0x5576c2f52738 <col:28, col:33> col:33 input_codes 'int *'
| |-ParmVarDecl 0x5576c2f527b8 <col:46, col:51> col:51 output_codes 'int *'
| `-ParmVarDecl 0x5576c2f52830 <col:65, col:77> col:78 'ErrorHandler *'
|-CXXMethodDecl 0x5576c2f52b38 <line:302:5, col:74> col:10 initialize_ports 'void (const int *, const int *)'
| |-ParmVarDecl 0x5576c2f529e8 <col:27, col:38> col:38 input_codes 'const int *'
| `-ParmVarDecl 0x5576c2f52a68 <col:51, col:62> col:62 output_codes 'const int *'
|-CXXMethodDecl 0x5576c2f52e70 <line:303:5, col:60> col:9 connect_port 'int (bool, int, Element *, int)'
| |-ParmVarDecl 0x5576c2f52bf8 <col:22, col:27> col:27 isoutput 'bool'
| |-ParmVarDecl 0x5576c2f52c78 <col:37, col:41> col:41 port 'int'
| |-ParmVarDecl 0x5576c2f52cf0 <col:47, col:54> col:55 'Element *'
| `-ParmVarDecl 0x5576c2f52d70 <col:57> col:60 'int'
|-CXXMethodDecl 0x5576c2f53058 <line:305:5, col:68> col:19 read_handlers_handler 'String (Element *, void *)' static
| |-ParmVarDecl 0x5576c2f52f40 <col:41, col:50> col:50 e 'Element *'
| `-ParmVarDecl 0x5576c2f52fc0 <col:53, col:59> col:59 user_data 'void *'
|-CXXMethodDecl 0x5576c2f531a8 <line:306:5, col:51> col:10 add_default_handlers 'void (bool)'
| `-ParmVarDecl 0x5576c2f53118 <col:31, col:36> col:36 writable_config 'bool'
|-CXXMethodDecl 0x5576c2f53528 <line:307:5, col:100> col:17 add_data_handlers 'void (const char *, int, HandlerCallback, void *)' inline
| |-ParmVarDecl 0x5576c2f53268 <col:35, col:47> col:47 name 'const char *'
| |-ParmVarDecl 0x5576c2f532e8 <col:53, col:57> col:57 flags 'int'
| |-ParmVarDecl 0x5576c2f53360 <col:64, col:80> col:80 callback 'HandlerCallback':'int (*)(int, String &, Element *, const Handler *, ErrorHandler *)'
| `-ParmVarDecl 0x5576c2f533e0 <col:90, col:96> col:96 data 'void *'
`-FriendDecl 0x5576c2f53640 <line:309:5, col:18> col:12 'class Router':'Router'

Layout: <CGRecordLayout
  LLVMType:%class.Element = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.Element.base = type <{ i32 (...)**, [2 x %"class.Element::Port"*], [4 x %"class.Element::Port"], [2 x i32], %class.Router*, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ProtocolTranslator64
         0 |   class Element (primary base)
         0 |     (Element vtable pointer)
         8 |     class Element::Port *[2] _ports
        24 |     class Element::Port [4] _inline_ports
        88 |     int [2] _nports
        96 |     class Router * _router
       104 |     int _eindex
           | [sizeof=112, dsize=108, align=8,
           |  nvsize=108, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2f5cdf8 <../elements/ip6/protocoltranslator64.hh:28:1, line:53:1> line:28:7 class ProtocolTranslator64 definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Element'
|-CXXRecordDecl 0x5576c2f5cf58 <col:1, col:7> col:7 implicit referenced class ProtocolTranslator64
|-AccessSpecDecl 0x5576c2f5cfe8 <line:31:2, col:8> col:2 public
|-CXXConstructorDecl 0x5576c2f5d070 <line:33:3, col:24> col:3 ProtocolTranslator64 'void ()'
|-CXXDestructorDecl 0x5576c2f5d160 <line:34:3, col:25> col:3 ~ProtocolTranslator64 'void ()' noexcept-unevaluated 0x5576c2f5d160
| `-Overrides: [ 0x5576c2f3c820 Element::~Element 'void () noexcept' ]
|-CXXMethodDecl 0x5576c2f5d290 <line:36:3, col:67> col:15 class_name 'const char *() const'
| |-Overrides: [ 0x5576c2f3dc78 Element::class_name 'const char *() const' ]
| `-CompoundStmt 0x5576c2f5e0c0 <col:34, col:67>
|   `-ReturnStmt 0x5576c2f5e0b0 <col:36, col:43>
|     `-ImplicitCastExpr 0x5576c2f5e098 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-StringLiteral 0x5576c2f5e068 <col:43> 'const char [21]' lvalue "ProtocolTranslator64"
|-CXXMethodDecl 0x5576c2f5d358 <line:37:3, col:54> col:15 port_count 'const char *() const'
| |-Overrides: [ 0x5576c2f3dd40 Element::port_count 'const char *() const' ]
| `-CompoundStmt 0x5576c2f5e120 <col:34, col:54>
|   `-ReturnStmt 0x5576c2f5e110 <col:36, col:43>
|     `-ImplicitCastExpr 0x5576c2f5e0f8 <col:43> 'const char *' <ArrayToPointerDecay>
|       `-DeclRefExpr 0x5576c2f5e0d8 <col:43> 'const char []' lvalue Var 0x5576c2f3dff0 'PORTS_1_1' 'const char []'
|-CXXMethodDecl 0x5576c2f5d520 <line:38:3, col:32> col:8 push 'void (int, Packet *)'
| |-Overrides: [ 0x5576c2f3cae8 Element::push 'void (int, Packet *)' ]
| |-ParmVarDecl 0x5576c2f5d410 <col:13, col:17> col:17 port 'int'
| `-ParmVarDecl 0x5576c2f5d488 <col:23, col:31> col:31 p 'Packet *'
|-CXXMethodDecl 0x5576c2f5d670 <line:39:3, col:27> col:8 handle_ip6 'void (Packet *)'
| `-ParmVarDecl 0x5576c2f5d5e0 <col:19, col:26> col:27 'Packet *'
|-AccessSpecDecl 0x5576c2f5d718 <line:41:1, col:8> col:1 private
|-CXXMethodDecl 0x5576c2f5d8a8 <line:43:3, line:44:33> line:43:12 make_icmp_translate64 'Packet *(unsigned char *, unsigned char)'
| |-ParmVarDecl 0x5576c2f5d758 <col:34, col:49> col:49 a 'unsigned char *'
| `-ParmVarDecl 0x5576c2f5d7d8 <line:44:5, col:19> col:19 payload_length 'unsigned char'
|-CXXMethodDecl 0x5576c2f5dbc8 <line:46:3, line:49:24> line:46:12 make_translate64 'Packet *(IPAddress, IPAddress, click_ip6 *, unsigned char *)'
| |-ParmVarDecl 0x5576c2f5d968 <col:29, col:39> col:39 src 'IPAddress'
| |-ParmVarDecl 0x5576c2f5d9e0 <line:47:8, col:18> col:18 dst 'IPAddress'
| |-ParmVarDecl 0x5576c2f5da58 <line:48:8, col:20> col:20 ip6 'click_ip6 *'
| `-ParmVarDecl 0x5576c2f5dad8 <line:49:8, col:23> col:23 a 'unsigned char *'
|-CXXConstructorDecl 0x5576c2f5dcb8 <line:28:7> col:7 implicit ProtocolTranslator64 'void (const ProtocolTranslator64 &)' inline default_delete noexcept-unevaluated 0x5576c2f5dcb8
| `-ParmVarDecl 0x5576c2f5ddc8 <col:7> col:7 'const ProtocolTranslator64 &'
`-CXXMethodDecl 0x5576c2f5de68 <col:7> col:7 implicit operator= 'ProtocolTranslator64 &(const ProtocolTranslator64 &)' inline default_delete noexcept-unevaluated 0x5576c2f5de68
  `-ParmVarDecl 0x5576c2f5df78 <col:7> col:7 'const ProtocolTranslator64 &'

Layout: <CGRecordLayout
  LLVMType:%class.ProtocolTranslator64 = type { %class.Element.base, [4 x i8] }
  NonVirtualBaseLLVMType:%class.ProtocolTranslator64.base = type { %class.Element.base }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_ip
     0:0-3 |   unsigned int ip_hl
     0:4-7 |   unsigned int ip_v
         1 |   uint8_t ip_tos
         2 |   uint16_t ip_len
         4 |   uint16_t ip_id
         6 |   uint16_t ip_off
         8 |   uint8_t ip_ttl
         9 |   uint8_t ip_p
        10 |   uint16_t ip_sum
        12 |   struct in_addr ip_src
        12 |     in_addr_t s_addr
        16 |   struct in_addr ip_dst
        16 |     in_addr_t s_addr
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping AST Record Layout
         0 | class atomic_uint32_t
         0 |   uint32_t _val
           | [sizeof=4, dsize=4, align=4,
           |  nvsize=4, nvalign=4]

*** Dumping AST Record Layout
         0 | union Packet::Anno
         0 |   char [48] c
         0 |   uint8_t [48] u8
         0 |   uint16_t [24] u16
         0 |   uint32_t [12] u32
         0 |   uint64_t [6] u64
           | [sizeof=48, dsize=48, align=8,
           |  nvsize=48, nvalign=8]

*** Dumping AST Record Layout
         0 | struct Packet::AllAnno
         0 |   union Packet::Anno cb
         0 |     char [48] c
         0 |     uint8_t [48] u8
         0 |     uint16_t [24] u16
         0 |     uint32_t [12] u32
         0 |     uint64_t [6] u64
        48 |   unsigned char * mac
        56 |   unsigned char * nh
        64 |   unsigned char * h
        72 |   enum Packet::PacketType pkt_type
        76 |   char [8] timestamp
        88 |   class Packet * next
        96 |   class Packet * prev
           | [sizeof=104, dsize=104, align=8,
           |  nvsize=104, nvalign=8]

*** Dumping AST Record Layout
         0 | class Packet
         0 |   class atomic_uint32_t _use_count
         0 |     uint32_t _val
         8 |   class Packet * _data_packet
        16 |   unsigned char * _head
        24 |   unsigned char * _data
        32 |   unsigned char * _tail
        40 |   unsigned char * _end
        48 |   struct Packet::AllAnno _aa
        48 |     union Packet::Anno cb
        48 |       char [48] c
        48 |       uint8_t [48] u8
        48 |       uint16_t [24] u16
        48 |       uint32_t [12] u32
        48 |       uint64_t [6] u64
        96 |     unsigned char * mac
       104 |     unsigned char * nh
       112 |     unsigned char * h
       120 |     enum Packet::PacketType pkt_type
       124 |     char [8] timestamp
       136 |     class Packet * next
       144 |     class Packet * prev
       152 |   Packet::buffer_destructor_type _destructor
       160 |   void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2bc9b58 <../dummy_inc/click/atomic.hh:52:1, line:94:1> line:52:7 referenced class atomic_uint32_t definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5576c2bc9c78 <col:1, col:7> col:7 implicit referenced class atomic_uint32_t
|-AccessSpecDecl 0x5576c2bc9d08 <col:25, col:31> col:25 public
|-CXXMethodDecl 0x5576c2bc9dd8 <line:57:5, col:29> col:21 used value 'uint32_t () const' inline
|-CXXConversionDecl 0x5576c2bc9ec0 <line:58:5, col:32> col:12 operator unsigned int 'uint32_t () const' inline
|-CXXMethodDecl 0x5576c2bcad78 <line:60:5, col:49> col:29 used operator= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5576c2bcac20 <col:39, col:48> col:48 x 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5576c2bcaf28 <line:62:5, col:53> col:29 operator+= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5576c2bcae30 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5576c2bcb070 <line:63:5, col:53> col:29 operator-= 'atomic_uint32_t &(int32_t)' inline
| `-ParmVarDecl 0x5576c2bcafe0 <col:40, col:48> col:48 delta 'int32_t':'int'
|-CXXMethodDecl 0x5576c2bcb1b8 <line:64:5, col:53> col:29 operator|= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5576c2bcb128 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5576c2bcb300 <line:65:5, col:53> col:29 operator&= 'atomic_uint32_t &(uint32_t)' inline
| `-ParmVarDecl 0x5576c2bcb270 <col:40, col:49> col:49 mask 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5576c2bcb3c8 <line:67:5, col:28> col:17 operator++ 'void ()' inline
|-CXXMethodDecl 0x5576c2bcb548 <line:68:5, col:31> col:17 operator++ 'void (int)' inline
| `-ParmVarDecl 0x5576c2bcb480 <col:28> col:31 'int'
|-CXXMethodDecl 0x5576c2bcb610 <line:69:5, col:28> col:17 operator-- 'void ()' inline
|-CXXMethodDecl 0x5576c2bcb758 <line:70:5, col:31> col:17 operator-- 'void (int)' inline
| `-ParmVarDecl 0x5576c2bcb6c8 <col:28> col:31 'int'
|-CXXMethodDecl 0x5576c2bcb8d8 <line:72:5, col:42> col:21 swap 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5576c2bcb810 <col:26, col:35> col:35 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5576c2bcba20 <line:73:5, col:49> col:21 fetch_and_add 'uint32_t (uint32_t)' inline
| `-ParmVarDecl 0x5576c2bcb990 <col:35, col:44> col:44 delta 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5576c2bcbae8 <line:74:5, col:30> col:17 dec_and_test 'bool ()' inline
|-CXXMethodDecl 0x5576c2bcbd28 <line:75:5, col:69> col:21 compare_swap 'uint32_t (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5576c2bcbb98 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5576c2bcbc10 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5576c2bcbf78 <line:76:5, col:97> col:17 compare_and_swap 'bool (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5576c2bcbde8 <col:34, col:43> col:43 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5576c2bcbe60 <col:53, col:62> col:62 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5576c2bcc028 <col:86> "" ""
|-CXXMethodDecl 0x5576c2bcc298 <line:78:5, col:71> col:28 used swap 'uint32_t (volatile uint32_t &, uint32_t)' static inline
| |-ParmVarDecl 0x5576c2bcc108 <col:33, col:52> col:52 x 'volatile uint32_t &'
| `-ParmVarDecl 0x5576c2bcc180 <col:55, col:64> col:64 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5576c2bcc448 <line:79:5, col:48> col:24 used inc 'void (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5576c2bcc358 <col:28, col:47> col:47 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5576c2bcc5f8 <line:80:5, col:57> col:24 used dec_and_test 'bool (volatile uint32_t &)' static inline
| `-ParmVarDecl 0x5576c2bcc500 <col:37, col:56> col:56 x 'volatile uint32_t &'
|-CXXMethodDecl 0x5576c2bcc8c8 <line:81:5, col:98> col:28 compare_swap 'uint32_t (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5576c2bcc6b0 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5576c2bcc728 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5576c2bcc7a0 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5576c2bccc30 <line:82:5, col:126> col:24 compare_and_swap 'bool (volatile uint32_t &, uint32_t, uint32_t)' static inline
| |-ParmVarDecl 0x5576c2bcc990 <col:41, col:60> col:60 x 'volatile uint32_t &'
| |-ParmVarDecl 0x5576c2bcca08 <col:63, col:72> col:72 expected 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5576c2bcca80 <col:82, col:91> col:91 desired 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5576c2bccce8 <col:115> "" ""
|-AccessSpecDecl 0x5576c2bccd58 <line:84:3, col:10> col:3 private
|-FieldDecl 0x5576c2bccd90 <line:91:5, col:14> col:14 referenced _val 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5576c2bcd238 <line:52:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5576c2bcd238
| `-ParmVarDecl 0x5576c2bcd348 <col:7> col:7 'const atomic_uint32_t &'
|-CXXMethodDecl 0x5576c2bcd3e8 <col:7> col:7 implicit constexpr operator= 'atomic_uint32_t &(atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5576c2bcd3e8
| `-ParmVarDecl 0x5576c2bcd4f8 <col:7> col:7 'atomic_uint32_t &&'
|-CXXConstructorDecl 0x5576c2c14c08 <col:7> col:7 implicit used atomic_uint32_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5576c2ed69d0 <col:7>
|-CXXConstructorDecl 0x5576c2c14ce0 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (const atomic_uint32_t &)' inline default trivial noexcept-unevaluated 0x5576c2c14ce0
| `-ParmVarDecl 0x5576c2c14df8 <col:7> col:7 'const atomic_uint32_t &'
|-CXXConstructorDecl 0x5576c2c14e68 <col:7> col:7 implicit constexpr atomic_uint32_t 'void (atomic_uint32_t &&)' inline default trivial noexcept-unevaluated 0x5576c2c14e68
| `-ParmVarDecl 0x5576c2c14f78 <col:7> col:7 'atomic_uint32_t &&'
`-CXXDestructorDecl 0x5576c2ed9370 <col:7> col:7 implicit ~atomic_uint32_t 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.atomic_uint32_t = type { i32 }
  NonVirtualBaseLLVMType:%class.atomic_uint32_t = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2ec55c0 prev 0x5576c2eb9cd0 <../dummy_inc/click/packet.hh:702:5, line:711:5> line:702:11 referenced union Anno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5576c2ec56b8 <col:5, col:11> col:11 implicit union Anno
|-FieldDecl 0x5576c2ec57a8 <line:703:2, col:18> col:7 referenced c 'char [48]'
|-FieldDecl 0x5576c2ec58d8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
|-FieldDecl 0x5576c2ec5a58 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
|-FieldDecl 0x5576c2ec5bd8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
|-FieldDecl 0x5576c2ec5d58 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
|-CXXConstructorDecl 0x5576c2ed6b38 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5576c2ed73a8 <col:11>
|-CXXDestructorDecl 0x5576c2ed6c10 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5576c2ed6d48 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5576c2ed6d48
| `-ParmVarDecl 0x5576c2ed6e58 <col:11> col:11 'const Packet::Anno &'
|-CXXConstructorDecl 0x5576c2ed6ef8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5576c2ed6ef8
| `-ParmVarDecl 0x5576c2ed7008 <col:11> col:11 'Packet::Anno &&'
|-CXXMethodDecl 0x5576c2ed9d68 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| |-ParmVarDecl 0x5576c2ed9e78 <col:11> col:11 'const Packet::Anno &'
| `-CompoundStmt 0x5576c2eda0f8 <col:11>
|   `-ReturnStmt 0x5576c2eda0e8 <col:11>
|     `-UnaryOperator 0x5576c2eda0d0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5576c2eda0c0 <col:11> 'Packet::Anno *' this
`-CXXMethodDecl 0x5576c2ed9ee8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5576c2ed9ee8
  `-ParmVarDecl 0x5576c2ed9ff8 <col:11> col:11 'Packet::Anno &&'

Layout: <CGRecordLayout
  LLVMType:%"union.Packet::Anno" = type { [6 x i64] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2ec5dc0 <../dummy_inc/click/packet.hh:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5576c2ec5ed8 <col:5, col:12> col:12 implicit struct AllAnno
|-FieldDecl 0x5576c2ec5f78 <line:717:2, col:7> col:7 cb 'Packet::Anno'
|-FieldDecl 0x5576c2ec5fe0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
|-FieldDecl 0x5576c2ec6048 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
|-FieldDecl 0x5576c2ec60b0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
|-FieldDecl 0x5576c2ec6110 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
|-FieldDecl 0x5576c2ec61d0 <line:722:2, col:34> col:7 timestamp 'char [8]'
|-FieldDecl 0x5576c2ec6230 <line:723:2, col:10> col:10 referenced next 'Packet *'
|-FieldDecl 0x5576c2ec6290 <line:724:2, col:10> col:10 referenced prev 'Packet *'
|-CXXConstructorDecl 0x5576c2ed6a48 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x5576c2ec5f78 'cb' 'Packet::Anno'
| | `-CXXConstructExpr 0x5576c2ed73b8 <col:12> 'Packet::Anno' 'void () noexcept'
| `-CompoundStmt 0x5576c2ed7410 <col:12>
|-CXXConstructorDecl 0x5576c2ed7078 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5576c2ed7078
| `-ParmVarDecl 0x5576c2ed7188 <col:12> col:12 'const Packet::AllAnno &'
|-CXXConstructorDecl 0x5576c2ed7228 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5576c2ed7228
| `-ParmVarDecl 0x5576c2ed7338 <col:12> col:12 'Packet::AllAnno &&'
`-CXXDestructorDecl 0x5576c2ed9450 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  NonVirtualBaseLLVMType:%"struct.Packet::AllAnno" = type { %"union.Packet::Anno", i8*, i8*, i8*, i32, [8 x i8], %class.Packet*, %class.Packet* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2eb33d0 <../dummy_inc/click/packet.hh:35:1, line:775:1> line:35:7 referenced class Packet definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param user_declared implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5576c2eb34e8 <col:1, col:7> col:7 implicit referenced class Packet
|-AccessSpecDecl 0x5576c2eb3578 <col:16, col:22> col:16 public
|-EnumDecl 0x5576c2eb35a0 <line:41:5, line:50:5> line:41:5
| |-EnumConstantDecl 0x5576c2eb36a0 <line:45:2, col:21> col:2 referenced default_headroom 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| | `-ImplicitCastExpr 0x5576c2eb3780 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2eb3680 <col:21> 'int' Int: 28
| |     `-IntegerLiteral 0x5576c2eb3660 <col:21> 'int' 28
| `-EnumConstantDecl 0x5576c2eb3730 <line:48:2, col:22> col:2 referenced min_buffer_length 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
|   `-ImplicitCastExpr 0x5576c2eb3798 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5576c2eb3710 <col:22> 'int' Int: 64
|       `-IntegerLiteral 0x5576c2eb36f0 <col:22> 'int' 64
|-CXXMethodDecl 0x5576c2eb3ad8 <line:52:5, line:53:75> line:52:28 used make 'WritablePacket *(uint32_t, const void *, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x5576c2eb37c0 <col:33, col:42> col:42 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5576c2eb3840 <col:52, col:64> col:64 data 'const void *'
| |-ParmVarDecl 0x5576c2eb38b8 <line:53:5, col:14> col:14 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5576c2eb3930 <col:22, col:31> col:31 tailroom 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5576c2eb3b98 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5576c2eb3d98 <line:54:5, col:109> col:35 make 'WritablePacket *(const void *, uint32_t)' static inline
| |-ParmVarDecl 0x5576c2eb3c10 <col:40, col:52> col:52 data 'const void *'
| |-ParmVarDecl 0x5576c2eb3c88 <col:58, col:67> col:67 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5576c2eb3e48 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5576c2eb3fa8 <line:55:5, col:91> col:35 used make 'WritablePacket *(uint32_t)' static inline
| |-ParmVarDecl 0x5576c2eb3eb8 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5576c2eb4050 <col:72> warn_unused_result ""
|-TypedefDecl 0x5576c2eb4380 <line:65:5, col:89> col:20 referenced buffer_destructor_type 'void (*)(unsigned char *, size_t, void *)'
| `-PointerType 0x5576c2eb4310 'void (*)(unsigned char *, size_t, void *)'
|   `-ParenType 0x5576c2eb42b0 'void (unsigned char *, size_t, void *)' sugar
|     `-FunctionProtoType 0x5576c2eb4270 'void (unsigned char *, size_t, void *)' cdecl
|       |-BuiltinType 0x5576c29ad310 'void'
|       |-PointerType 0x5576c2c00120 'unsigned char *'
|       | `-BuiltinType 0x5576c29ad410 'unsigned char'
|       |-TypedefType 0x5576c2a52270 'size_t' sugar
|       | |-Typedef 0x5576c2a1daf0 'size_t'
|       | `-BuiltinType 0x5576c29ad470 'unsigned long'
|       `-PointerType 0x5576c29adb10 'void *'
|         `-BuiltinType 0x5576c29ad310 'void'
|-CXXMethodDecl 0x5576c2eb47f8 <line:66:5, line:68:131> line:66:28 make 'WritablePacket *(unsigned char *, uint32_t, Packet::buffer_destructor_type, void *, int, int)' static
| |-ParmVarDecl 0x5576c2eb43f0 <col:33, col:48> col:48 data 'unsigned char *'
| |-ParmVarDecl 0x5576c2eb4468 <col:54, col:63> col:63 length 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5576c2eb4500 <line:67:5, col:28> col:28 buffer_destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| |-ParmVarDecl 0x5576c2eb4580 <line:68:33, col:58> col:39 argument 'void *' cinit
| | `-CStyleCastExpr 0x5576c2ec7720 <col:50, col:58> 'void *' <NoOp>
| |   `-ImplicitCastExpr 0x5576c2ec7708 <col:58> 'void *' <NullToPointer> part_of_explicit_cast
| |     `-IntegerLiteral 0x5576c2ec76d0 <col:58> 'int' 0
| |-ParmVarDecl 0x5576c2eb4600 <col:61, col:76> col:65 headroom 'int' cinit
| | `-IntegerLiteral 0x5576c2ec7748 <col:76> 'int' 0
| |-ParmVarDecl 0x5576c2eb4680 <col:79, col:94> col:83 tailroom 'int' cinit
| | `-IntegerLiteral 0x5576c2ec7768 <col:94> 'int' 0
| `-WarnUnusedResultAttr 0x5576c2eb48c8 <col:112> warn_unused_result ""
|-CXXMethodDecl 0x5576c2eb4970 <line:71:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5576c2eb4a30 <line:73:5, col:50> col:45 used kill 'void ()'
| |-NoInlineAttr 0x5576c2eb4ad0 <col:20>
| `-OptimizeNoneAttr 0x5576c2eb4b28 <col:30>
|-CXXMethodDecl 0x5576c2eb4b98 <line:75:5, col:54> col:45 used shared 'bool () const'
| |-NoInlineAttr 0x5576c2eb4c38 <col:20>
| `-OptimizeNoneAttr 0x5576c2eb4c90 <col:30>
|-CXXMethodDecl 0x5576c2eb4d08 <line:76:5, col:55> col:13 clone 'Packet *()'
| `-WarnUnusedResultAttr 0x5576c2eb4da8 <col:36> warn_unused_result ""
|-CXXMethodDecl 0x5576c2eb4e58 <line:77:5, col:102> col:56 uniqueify 'WritablePacket *()'
| |-NoInlineAttr 0x5576c2eb4ef8 <col:20>
| |-OptimizeNoneAttr 0x5576c2eb4f50 <col:30>
| `-WarnUnusedResultAttr 0x5576c2eb4f78 <col:83> warn_unused_result ""
|-CXXMethodDecl 0x5576c2eb4fd0 <line:79:5, col:68> col:61 used data 'const unsigned char *() const'
| |-NoInlineAttr 0x5576c2eb5070 <col:20>
| `-OptimizeNoneAttr 0x5576c2eb50c8 <col:30>
|-CXXMethodDecl 0x5576c2eb5118 <line:80:5, col:72> col:61 used end_data 'const unsigned char *() const'
| |-NoInlineAttr 0x5576c2eb51b8 <col:20>
| `-OptimizeNoneAttr 0x5576c2eb5210 <col:30>
|-CXXMethodDecl 0x5576c2eb5258 <line:81:5, col:58> col:49 used length 'uint32_t () const'
| |-NoInlineAttr 0x5576c2eb52f8 <col:20>
| `-OptimizeNoneAttr 0x5576c2eb5350 <col:30>
|-CXXMethodDecl 0x5576c2eb5398 <line:82:5, col:32> col:21 used headroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5576c2eb5458 <line:83:5, col:32> col:21 used tailroom 'uint32_t () const' inline
|-CXXMethodDecl 0x5576c2eb5520 <line:84:5, col:42> col:33 used buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5576c2eb55e8 <line:85:5, col:46> col:33 used end_buffer 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5576c2eb56a8 <line:86:5, col:37> col:21 used buffer_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5576c2eb57c8 <line:97:5, line:99:5> line:97:28 buffer_destructor 'Packet::buffer_destructor_type () const'
| `-CompoundStmt 0x5576c2ec7830 <col:54, line:99:5>
|   `-ReturnStmt 0x5576c2ec7820 <line:98:2, col:9>
|     `-ImplicitCastExpr 0x5576c2ec7808 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-MemberExpr 0x5576c2ec77d8 <col:9> 'const Packet::buffer_destructor_type':'void (*const)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5576c2ec65c8
|         `-CXXThisExpr 0x5576c2ec77c8 <col:9> 'const Packet *' implicit this
|-CXXMethodDecl 0x5576c2eb5968 <line:101:5, line:103:5> line:101:10 set_buffer_destructor 'void (Packet::buffer_destructor_type)'
| |-ParmVarDecl 0x5576c2eb5878 <col:32, col:55> col:55 used destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
| `-CompoundStmt 0x5576c2ec78e0 <col:67, line:103:5>
|   `-BinaryOperator 0x5576c2ec78c0 <line:102:9, col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5576c2ec7858 <col:9> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5576c2ec65c8
|     | `-CXXThisExpr 0x5576c2ec7848 <col:9> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5576c2ec78a8 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <LValueToRValue>
|       `-DeclRefExpr 0x5576c2ec7888 <col:23> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ParmVar 0x5576c2eb5878 'destructor' 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-CXXMethodDecl 0x5576c2eb5a60 <line:105:5, line:107:5> line:105:11 destructor_argument 'void *()'
| `-CompoundStmt 0x5576c2ecfc10 <col:33, line:107:5>
|   `-ReturnStmt 0x5576c2ecfc00 <line:106:9, col:16>
|     `-ImplicitCastExpr 0x5576c2ec7938 <col:16> 'void *' <LValueToRValue>
|       `-MemberExpr 0x5576c2ec7908 <col:16> 'void *' lvalue ->_destructor_argument 0x5576c2ec6630
|         `-CXXThisExpr 0x5576c2ec78f8 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5576c2eb5b20 <line:109:5, line:113:5> line:109:10 reset_buffer 'void ()'
| `-CompoundStmt 0x5576c2ed0240 <col:25, line:113:5>
|   |-ParenExpr 0x5576c2ecff88 <line:110:2, col:146> 'void'
|   | `-ConditionalOperator 0x5576c2ecff58 <col:3, col:145> 'void'
|   |   |-CXXStaticCastExpr 0x5576c2ecfcc8 <col:3, col:32> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-UnaryOperator 0x5576c2ecfca0 <col:23, col:31> 'bool' prefix '!' cannot overflow
|   |   |   `-CXXMemberCallExpr 0x5576c2ecfc68 <col:24, col:31> 'bool'
|   |   |     `-MemberExpr 0x5576c2ecfc38 <col:24> '<bound member function type>' ->shared 0x5576c2eb4b98
|   |   |       `-ImplicitCastExpr 0x5576c2ecfc88 <col:24> 'const Packet *' <NoOp>
|   |   |         `-CXXThisExpr 0x5576c2ecfc28 <col:24> 'Packet *' implicit this
|   |   |-CXXFunctionalCastExpr 0x5576c2ecfd28 <col:36, col:43> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5576c2ecfd08 <col:42> 'int' 0
|   |   `-CallExpr 0x5576c2ecfeb8 <col:47, col:145> 'void'
|   |     |-ImplicitCastExpr 0x5576c2ecfea0 <col:47> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5576c2ecfe80 <col:47> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5576c2a49030 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5576c2ecfef8 <col:62> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2ecfd98 <col:62> 'const char [10]' lvalue "!shared()"
|   |     |-ImplicitCastExpr 0x5576c2ecff10 <col:75> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2ecfdc0 <col:75> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5576c2ecff28 <col:107> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5576c2ecfdf8 <col:107> 'int' 110
|   |     `-ImplicitCastExpr 0x5576c2ecff40 <col:112, col:126> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5576c2ecfe68 <col:112, col:126> 'const char [28]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5576c2ecfe50 <col:126> 'const char [28]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5576c2ecfe18 <col:126> 'const char [28]' lvalue "void Packet::reset_buffer()"
|   |-BinaryOperator 0x5576c2ed0188 <line:111:2, col:33> 'unsigned char *' lvalue '='
|   | |-MemberExpr 0x5576c2ecffb8 <col:2> 'unsigned char *' lvalue ->_head 0x5576c2ec63d0
|   | | `-CXXThisExpr 0x5576c2ecffa8 <col:2> 'Packet *' implicit this
|   | `-ImplicitCastExpr 0x5576c2ed0170 <col:10, col:33> 'unsigned char *' <LValueToRValue>
|   |   `-BinaryOperator 0x5576c2ed0150 <col:10, col:33> 'unsigned char *' lvalue '='
|   |     |-MemberExpr 0x5576c2ecfff8 <col:10> 'unsigned char *' lvalue ->_data 0x5576c2ec6438
|   |     | `-CXXThisExpr 0x5576c2ecffe8 <col:10> 'Packet *' implicit this
|   |     `-ImplicitCastExpr 0x5576c2ed0138 <col:18, col:33> 'unsigned char *' <LValueToRValue>
|   |       `-BinaryOperator 0x5576c2ed0118 <col:18, col:33> 'unsigned char *' lvalue '='
|   |         |-MemberExpr 0x5576c2ed0038 <col:18> 'unsigned char *' lvalue ->_tail 0x5576c2ec64a0
|   |         | `-CXXThisExpr 0x5576c2ed0028 <col:18> 'Packet *' implicit this
|   |         `-ImplicitCastExpr 0x5576c2ed0100 <col:26, col:33> 'unsigned char *' <LValueToRValue>
|   |           `-BinaryOperator 0x5576c2ed00e0 <col:26, col:33> 'unsigned char *' lvalue '='
|   |             |-MemberExpr 0x5576c2ed0078 <col:26> 'unsigned char *' lvalue ->_end 0x5576c2ec6508
|   |             | `-CXXThisExpr 0x5576c2ed0068 <col:26> 'Packet *' implicit this
|   |             `-ImplicitCastExpr 0x5576c2ed00c8 <col:33> 'unsigned char *' <NullToPointer>
|   |               `-IntegerLiteral 0x5576c2ed00a8 <col:33> 'int' 0
|   `-BinaryOperator 0x5576c2ed0220 <line:112:2, col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue '='
|     |-MemberExpr 0x5576c2ed01b8 <col:2> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' lvalue ->_destructor 0x5576c2ec65c8
|     | `-CXXThisExpr 0x5576c2ed01a8 <col:2> 'Packet *' implicit this
|     `-ImplicitCastExpr 0x5576c2ed0208 <col:16> 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)' <NullToPointer>
|       `-IntegerLiteral 0x5576c2ed01e8 <col:16> 'int' 0
|-CXXMethodDecl 0x5576c2eb5c60 <line:141:5, col:109> col:56 push 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5576c2eb5bd0 <col:61, col:70> col:70 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5576c2eb5d08 <col:20>
| |-OptimizeNoneAttr 0x5576c2eb5d60 <col:30>
| `-WarnUnusedResultAttr 0x5576c2eb5d88 <col:90> warn_unused_result ""
|-CXXMethodDecl 0x5576c2eb5e58 <line:152:5, col:120> col:56 push_mac_header 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5576c2eb5dc8 <col:72, col:81> col:81 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5576c2eb5f00 <col:20>
| |-OptimizeNoneAttr 0x5576c2eb5f58 <col:30>
| `-WarnUnusedResultAttr 0x5576c2eb5f80 <col:101> warn_unused_result ""
|-CXXMethodDecl 0x5576c2eb60b8 <line:171:5, col:76> col:13 nonunique_push 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5576c2eb5fc0 <col:28, col:37> col:37 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5576c2eb6160 <col:57> warn_unused_result ""
|-CXXMethodDecl 0x5576c2eb6260 <line:187:5, col:62> col:45 pull 'void (uint32_t)'
| |-ParmVarDecl 0x5576c2eb61d0 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5576c2eb6308 <col:20>
| `-OptimizeNoneAttr 0x5576c2eb6360 <col:30>
|-CXXMethodDecl 0x5576c2eb6428 <line:213:5, col:73> col:21 put 'WritablePacket *(uint32_t)'
| |-ParmVarDecl 0x5576c2eb6398 <col:25, col:34> col:34 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5576c2eb64d0 <col:54> warn_unused_result ""
|-CXXMethodDecl 0x5576c2eb65d0 <line:230:5, col:75> col:13 nonunique_put 'Packet *(uint32_t)'
| |-ParmVarDecl 0x5576c2eb6540 <col:27, col:36> col:36 len 'uint32_t':'unsigned int'
| `-WarnUnusedResultAttr 0x5576c2eb6678 <col:56> warn_unused_result ""
|-CXXMethodDecl 0x5576c2eb6778 <line:245:5, col:62> col:45 take 'void (uint32_t)'
| |-ParmVarDecl 0x5576c2eb66e8 <col:50, col:59> col:59 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5576c2eb6820 <col:20>
| `-OptimizeNoneAttr 0x5576c2eb6878 <col:30>
|-CXXMethodDecl 0x5576c2eb6a08 <line:269:5, col:99> col:13 shift_data 'Packet *(int, bool)'
| |-ParmVarDecl 0x5576c2eb68b8 <col:24, col:28> col:28 offset 'int'
| |-ParmVarDecl 0x5576c2eb6930 <col:36, col:59> col:41 free_on_failure 'bool' cinit
| | `-CXXBoolLiteralExpr 0x5576c2ec7788 <col:59> 'bool' true
| `-WarnUnusedResultAttr 0x5576c2eb6ab8 <col:80> warn_unused_result ""
|-CXXMethodDecl 0x5576c2eb6cb8 <line:271:5, col:71> col:17 shrink_data 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5576c2eb6b30 <col:29, col:50> col:50 data 'const unsigned char *'
| `-ParmVarDecl 0x5576c2eb6ba8 <col:56, col:65> col:65 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5576c2eb6ec8 <line:272:5, col:78> col:17 change_headroom_and_length 'void (uint32_t, uint32_t)' inline
| |-ParmVarDecl 0x5576c2eb6d78 <col:44, col:53> col:53 headroom 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5576c2eb6df0 <col:63, col:72> col:72 length 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5576c2eb70d8 <line:274:5, col:40> col:10 copy 'bool (Packet *, int)'
| |-ParmVarDecl 0x5576c2eb6f88 <col:15, col:23> col:23 p 'Packet *'
| `-ParmVarDecl 0x5576c2eb7008 <col:26, col:39> col:30 headroom 'int' cinit
|   `-IntegerLiteral 0x5576c2ec7798 <col:39> 'int' 0
|-CXXMethodDecl 0x5576c2eb71a8 <line:279:5, col:34> col:17 has_mac_header 'bool () const' inline
|-CXXMethodDecl 0x5576c2eb7270 <line:280:5, col:46> col:33 used mac_header 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5576c2eb7338 <line:281:5, col:36> col:16 mac_header_offset 'int () const' inline
|-CXXMethodDecl 0x5576c2eb73f8 <line:282:5, col:41> col:21 mac_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5576c2eb74c0 <line:283:5, col:29> col:16 mac_length 'int () const' inline
|-CXXMethodDecl 0x5576c2eb7608 <line:284:5, col:54> col:17 set_mac_header 'void (const unsigned char *)' inline
| `-ParmVarDecl 0x5576c2eb7578 <col:32, col:53> col:53 p 'const unsigned char *'
|-CXXMethodDecl 0x5576c2eb77d8 <line:285:5, col:68> col:17 used set_mac_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5576c2eb76c8 <col:32, col:53> col:53 p 'const unsigned char *'
| `-ParmVarDecl 0x5576c2eb7740 <col:56, col:65> col:65 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5576c2eb78a8 <line:286:5, col:34> col:17 clear_mac_header 'void ()' inline
|-CXXMethodDecl 0x5576c2eb7968 <line:288:5, col:66> col:45 has_network_header 'bool () const'
| |-NoInlineAttr 0x5576c2eb7a08 <col:20>
| `-OptimizeNoneAttr 0x5576c2eb7a60 <col:30>
|-CXXMethodDecl 0x5576c2eb7ab0 <line:289:5, col:78> col:61 used network_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5576c2eb7b50 <col:20>
| `-OptimizeNoneAttr 0x5576c2eb7ba8 <col:30>
|-CXXMethodDecl 0x5576c2eb7bf8 <line:290:5, col:40> col:16 used network_header_offset 'int () const' inline
|-CXXMethodDecl 0x5576c2eb7cb8 <line:291:5, col:45> col:21 used network_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5576c2eb7d80 <line:292:5, col:61> col:44 network_length 'int () const'
| |-NoInlineAttr 0x5576c2eb7e20 <col:20>
| `-OptimizeNoneAttr 0x5576c2eb7e78 <col:30>
|-CXXMethodDecl 0x5576c2eb7fc8 <line:293:5, col:72> col:17 set_network_header 'void (const unsigned char *, uint32_t)' inline
| |-ParmVarDecl 0x5576c2eb7eb8 <col:36, col:57> col:57 p 'const unsigned char *'
| `-ParmVarDecl 0x5576c2eb7f30 <col:60, col:69> col:69 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5576c2eb8118 <line:294:5, col:55> col:17 set_network_header_length 'void (uint32_t)' inline
| `-ParmVarDecl 0x5576c2eb8088 <col:43, col:52> col:52 len 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5576c2eb81e0 <line:295:5, col:38> col:17 clear_network_header 'void ()' inline
|-CXXMethodDecl 0x5576c2eb82a0 <line:297:5, col:68> col:45 has_transport_header 'bool () const'
| |-NoInlineAttr 0x5576c2eb8340 <col:20>
| `-OptimizeNoneAttr 0x5576c2eb8398 <col:30>
|-CXXMethodDecl 0x5576c2eb83e8 <line:298:5, col:80> col:61 used transport_header 'const unsigned char *() const'
| |-NoInlineAttr 0x5576c2eb8488 <col:20>
| `-OptimizeNoneAttr 0x5576c2eb84e0 <col:30>
|-CXXMethodDecl 0x5576c2eb8530 <line:299:5, col:42> col:16 transport_header_offset 'int () const' inline
|-CXXMethodDecl 0x5576c2eb85f8 <line:300:5, col:63> col:44 transport_length 'int () const'
| |-NoInlineAttr 0x5576c2eb8698 <col:20>
| `-OptimizeNoneAttr 0x5576c2eb86f0 <col:30>
|-CXXMethodDecl 0x5576c2eb8738 <line:301:5, col:40> col:17 clear_transport_header 'void ()' inline
|-CXXMethodDecl 0x5576c2eb8858 <line:304:5, col:46> col:31 ether_header 'const click_ether *() const' inline
|-CXXMethodDecl 0x5576c2eb89f8 <line:305:5, col:57> col:17 set_ether_header 'void (const click_ether *)' inline
| `-ParmVarDecl 0x5576c2eb8930 <col:34, col:53> col:53 ethh 'const click_ether *'
|-CXXMethodDecl 0x5576c2eb8ae8 <line:307:5, col:68> col:56 ip_header 'const click_ip *() const'
| |-NoInlineAttr 0x5576c2eb8b88 <col:20>
| `-OptimizeNoneAttr 0x5576c2eb8be0 <col:30>
|-CXXMethodDecl 0x5576c2eb8c30 <line:308:5, col:35> col:16 ip_header_offset 'int () const' inline
|-CXXMethodDecl 0x5576c2eb8cf0 <line:309:5, col:40> col:21 ip_header_length 'uint32_t () const' inline
|-CXXMethodDecl 0x5576c2eb8f28 <line:310:5, col:92> col:45 set_ip_header 'void (const click_ip *, uint32_t)'
| |-ParmVarDecl 0x5576c2eb8da0 <col:59, col:75> col:75 iph 'const click_ip *'
| |-ParmVarDecl 0x5576c2eb8e18 <col:80, col:89> col:89 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5576c2eb8fd8 <col:20>
| `-OptimizeNoneAttr 0x5576c2eb9030 <col:30>
|-CXXMethodDecl 0x5576c2eb90d8 <line:312:5, col:70> col:57 ip6_header 'const click_ip6 *() const'
| |-NoInlineAttr 0x5576c2eb9178 <col:20>
| `-OptimizeNoneAttr 0x5576c2eb91d0 <col:30>
|-CXXMethodDecl 0x5576c2eb9220 <line:313:5, col:64> col:44 ip6_header_offset 'int () const'
| |-NoInlineAttr 0x5576c2eb92c0 <col:20>
| `-OptimizeNoneAttr 0x5576c2eb9318 <col:30>
|-CXXMethodDecl 0x5576c2eb9360 <line:314:5, col:69> col:49 ip6_header_length 'uint32_t () const'
| |-NoInlineAttr 0x5576c2eb9400 <col:20>
| `-OptimizeNoneAttr 0x5576c2eb9458 <col:30>
|-CXXMethodDecl 0x5576c2eb9558 <line:315:5, col:81> col:45 set_ip6_header 'void (const click_ip6 *)'
| |-ParmVarDecl 0x5576c2eb9490 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-NoInlineAttr 0x5576c2eb9600 <col:20>
| `-OptimizeNoneAttr 0x5576c2eb9658 <col:30>
|-CXXMethodDecl 0x5576c2eb9818 <line:316:5, col:95> col:45 set_ip6_header 'void (const click_ip6 *, uint32_t)'
| |-ParmVarDecl 0x5576c2eb9690 <col:60, col:77> col:77 ip6h 'const click_ip6 *'
| |-ParmVarDecl 0x5576c2eb9708 <col:83, col:92> col:92 len 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5576c2eb98c8 <col:20>
| `-OptimizeNoneAttr 0x5576c2eb9920 <col:30>
|-CXXMethodDecl 0x5576c2eb99c8 <line:318:5, col:44> col:30 used icmp_header 'const click_icmp *() const' inline
|-CXXMethodDecl 0x5576c2eb9ae8 <line:319:5, col:42> col:29 used tcp_header 'const click_tcp *() const' inline
|-CXXMethodDecl 0x5576c2eb9c08 <line:320:5, col:42> col:29 used udp_header 'const click_udp *() const' inline
|-AccessSpecDecl 0x5576c2eb9ca8 <line:333:3, col:10> col:3 private
|-CXXRecordDecl 0x5576c2eb9cd0 <line:335:5, col:11> col:11 referenced union Anno
|-CXXMethodDecl 0x5576c2eb9df8 <line:340:5, col:60> col:52 used xanno 'const Packet::Anno *() const'
| |-NoInlineAttr 0x5576c2eb9e98 <col:20>
| `-OptimizeNoneAttr 0x5576c2eb9ef0 <col:30>
|-CXXMethodDecl 0x5576c2eb9f98 <line:341:5, col:52> col:46 used xanno 'Packet::Anno *()'
| |-NoInlineAttr 0x5576c2eba038 <col:20>
| `-OptimizeNoneAttr 0x5576c2eba090 <col:30>
|-AccessSpecDecl 0x5576c2eba0b8 <line:344:3, col:9> col:3 public
|-EnumDecl 0x5576c2eba0e0 <line:349:5, line:351:5> line:349:5
| `-EnumConstantDecl 0x5576c2eba1e0 <line:350:2, col:14> col:2 referenced anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   `-ImplicitCastExpr 0x5576c2eba230 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5576c2eba1c0 <col:14> 'int' Int: 48
|       `-IntegerLiteral 0x5576c2eba1a0 <col:14> 'int' 48
|-CXXMethodDecl 0x5576c2eba298 <line:354:5, col:74> col:57 used timestamp_anno 'const Timestamp &() const'
| |-NoInlineAttr 0x5576c2eba338 <col:20>
| `-OptimizeNoneAttr 0x5576c2eba390 <col:30>
|-CXXMethodDecl 0x5576c2eba408 <line:356:5, col:66> col:51 used timestamp_anno 'Timestamp &()'
| |-NoInlineAttr 0x5576c2eba4a8 <col:20>
| `-OptimizeNoneAttr 0x5576c2eba500 <col:30>
|-CXXMethodDecl 0x5576c2eba5c8 <line:359:5, col:54> col:17 used set_timestamp_anno 'void (const Timestamp &)' inline
| `-ParmVarDecl 0x5576c2eba538 <col:36, col:53> col:53 t 'const Timestamp &'
|-CXXMethodDecl 0x5576c2eba768 <line:362:5, col:38> col:24 used device_anno 'net_device *() const' inline
|-CXXMethodDecl 0x5576c2eba908 <line:364:5, col:48> col:17 used set_device_anno 'void (net_device *)' inline
| `-ParmVarDecl 0x5576c2eba818 <col:33, col:45> col:45 dev 'net_device *'
|-EnumDecl 0x5576c2eba9b0 <line:368:5, line:381:5> line:368:10 referenced PacketType
| |-EnumConstantDecl 0x5576c2ebaab0 <line:369:2, col:9> col:2 HOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5576c2ebae60 <col:9> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2ebaa90 <col:9> 'int' Int: 0
| |     `-IntegerLiteral 0x5576c2ebaa70 <col:9> 'int' 0
| |-EnumConstantDecl 0x5576c2ebab40 <line:370:2, col:14> col:2 BROADCAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5576c2ebae78 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2ebab20 <col:14> 'int' Int: 1
| |     `-IntegerLiteral 0x5576c2ebab00 <col:14> 'int' 1
| |-EnumConstantDecl 0x5576c2ebabd0 <line:372:2, col:14> col:2 MULTICAST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5576c2ebae90 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2ebabb0 <col:14> 'int' Int: 2
| |     `-IntegerLiteral 0x5576c2ebab90 <col:14> 'int' 2
| |-EnumConstantDecl 0x5576c2ebac60 <line:374:2, col:14> col:2 OTHERHOST 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5576c2ebaea8 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2ebac40 <col:14> 'int' Int: 3
| |     `-IntegerLiteral 0x5576c2ebac20 <col:14> 'int' 3
| |-EnumConstantDecl 0x5576c2ebacf0 <line:377:2, col:13> col:2 OUTGOING 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5576c2ebaec0 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2ebacd0 <col:13> 'int' Int: 4
| |     `-IntegerLiteral 0x5576c2ebacb0 <col:13> 'int' 4
| |-EnumConstantDecl 0x5576c2ebad80 <line:379:2, col:13> col:2 LOOPBACK 'Packet::PacketType'
| | `-ImplicitCastExpr 0x5576c2ebaed8 <col:13> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2ebad60 <col:13> 'int' Int: 5
| |     `-IntegerLiteral 0x5576c2ebad40 <col:13> 'int' 5
| `-EnumConstantDecl 0x5576c2ebae10 <line:380:2, col:14> col:2 FASTROUTE 'Packet::PacketType'
|   `-ImplicitCastExpr 0x5576c2ebaef0 <col:14> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5576c2ebadf0 <col:14> 'int' Int: 6
|       `-IntegerLiteral 0x5576c2ebadd0 <col:14> 'int' 6
|-CXXMethodDecl 0x5576c2ebaf58 <line:383:5, col:70> col:51 used packet_type_anno 'Packet::PacketType () const'
| |-NoInlineAttr 0x5576c2ebaff8 <col:20>
| `-OptimizeNoneAttr 0x5576c2ebb050 <col:30>
|-CXXMethodDecl 0x5576c2ebb148 <line:385:5, col:78> col:45 used set_packet_type_anno 'void (Packet::PacketType)'
| |-ParmVarDecl 0x5576c2ebb088 <col:66, col:77> col:77 t 'Packet::PacketType'
| |-NoInlineAttr 0x5576c2ebb1f0 <col:20>
| `-OptimizeNoneAttr 0x5576c2ebb248 <col:30>
|-CXXMethodDecl 0x5576c2ebb2b8 <line:410:5, col:27> col:20 next 'Packet *() const' inline
|-CXXMethodDecl 0x5576c2ebb3e0 <line:412:5, col:26> col:21 next 'Packet *&()' inline
|-CXXMethodDecl 0x5576c2ebb558 <line:414:5, col:35> col:17 set_next 'void (Packet *)' inline
| `-ParmVarDecl 0x5576c2ebb490 <col:26, col:34> col:34 p 'Packet *'
|-CXXMethodDecl 0x5576c2ebb620 <line:417:5, col:27> col:20 prev 'Packet *() const' inline
|-CXXMethodDecl 0x5576c2ebb6e8 <line:419:5, col:26> col:21 prev 'Packet *&()' inline
|-CXXMethodDecl 0x5576c2ebb828 <line:421:5, col:35> col:17 set_prev 'void (Packet *)' inline
| `-ParmVarDecl 0x5576c2ebb798 <col:26, col:34> col:34 p 'Packet *'
|-EnumDecl 0x5576c2ebb8d0 <line:423:5, line:426:5> line:423:5
| |-EnumConstantDecl 0x5576c2ebb9d0 <line:424:2, col:23> col:2 referenced dst_ip_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5576c2ebbbd0 <col:23> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2ebb9b0 <col:23> 'int' Int: 0
| |     `-IntegerLiteral 0x5576c2ebb990 <col:23> 'int' 0
| |-EnumConstantDecl 0x5576c2ebba60 <col:26, col:45> col:26 dst_ip_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5576c2ebbbe8 <col:45> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2ebba40 <col:45> 'int' Int: 4
| |     `-IntegerLiteral 0x5576c2ebba20 <col:45> 'int' 4
| |-EnumConstantDecl 0x5576c2ebbaf0 <line:425:2, col:24> col:2 dst_ip6_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
| | `-ImplicitCastExpr 0x5576c2ebbc00 <col:24> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2ebbad0 <col:24> 'int' Int: 0
| |     `-IntegerLiteral 0x5576c2ebbab0 <col:24> 'int' 0
| `-EnumConstantDecl 0x5576c2ebbb80 <col:27, col:47> col:27 dst_ip6_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:423:5)'
|   `-ImplicitCastExpr 0x5576c2ebbc18 <col:47> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5576c2ebbb60 <col:47> 'int' Int: 16
|       `-IntegerLiteral 0x5576c2ebbb40 <col:47> 'int' 16
|-CXXMethodDecl 0x5576c2ebbc78 <line:431:5, col:36> col:22 dst_ip_anno 'IPAddress () const' inline
|-CXXMethodDecl 0x5576c2ebbde8 <line:436:5, col:75> col:45 set_dst_ip_anno 'void (IPAddress)'
| |-ParmVarDecl 0x5576c2ebbd28 <col:61, col:71> col:71 addr 'IPAddress'
| |-NoInlineAttr 0x5576c2ebbe90 <col:20>
| `-OptimizeNoneAttr 0x5576c2ebbee8 <col:30>
|-CXXMethodDecl 0x5576c2ebbf38 <line:441:5, col:36> col:11 anno 'void *()'
| `-CompoundStmt 0x5576c2ed0360 <col:18, col:36>
|   `-ReturnStmt 0x5576c2ed0350 <col:20, col:33>
|     `-ImplicitCastExpr 0x5576c2ed0338 <col:27, col:33> 'void *' <BitCast>
|       `-CXXMemberCallExpr 0x5576c2ed0318 <col:27, col:33> 'Packet::Anno *'
|         `-MemberExpr 0x5576c2ed02e8 <col:27> '<bound member function type>' ->xanno 0x5576c2eb9f98
|           `-CXXThisExpr 0x5576c2ed02d8 <col:27> 'Packet *' implicit this
|-CXXMethodDecl 0x5576c2ebc030 <line:444:5, col:48> col:17 anno 'const void *() const'
| `-CompoundStmt 0x5576c2ed0470 <col:30, col:48>
|   `-ReturnStmt 0x5576c2ed0460 <col:32, col:45>
|     `-ImplicitCastExpr 0x5576c2ed0448 <col:39, col:45> 'const void *' <BitCast>
|       `-CXXMemberCallExpr 0x5576c2ed0428 <col:39, col:45> 'const Packet::Anno *'
|         `-MemberExpr 0x5576c2ed03f8 <col:39> '<bound member function type>' ->xanno 0x5576c2eb9df8
|           `-CXXThisExpr 0x5576c2ed03e8 <col:39> 'const Packet *' implicit this
|-CXXMethodDecl 0x5576c2ebc118 <line:447:5, col:50> col:14 used anno_u8 'uint8_t *()'
| `-CompoundStmt 0x5576c2ed0608 <col:24, col:50>
|   `-ReturnStmt 0x5576c2ed05f8 <col:26, col:47>
|     `-UnaryOperator 0x5576c2ed05e0 <col:33, col:47> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5576c2ed05c0 <col:34, col:47> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x5576c2ed05a8 <col:34, col:43> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5576c2ed0558 <col:34, col:43> 'uint8_t [48]' lvalue ->u8 0x5576c2ec58d8
|         |   `-CXXMemberCallExpr 0x5576c2ed0538 <col:34, col:40> 'Packet::Anno *'
|         |     `-MemberExpr 0x5576c2ed0508 <col:34> '<bound member function type>' ->xanno 0x5576c2eb9f98
|         |       `-CXXThisExpr 0x5576c2ed04f8 <col:34> 'Packet *' implicit this
|         `-IntegerLiteral 0x5576c2ed0588 <col:46> 'int' 0
|-CXXMethodDecl 0x5576c2ebc208 <line:450:5, col:62> col:20 used anno_u8 'const uint8_t *() const'
| `-CompoundStmt 0x5576c2ed07d8 <col:36, col:62>
|   `-ReturnStmt 0x5576c2ed07c8 <col:38, col:59>
|     `-UnaryOperator 0x5576c2ed07b0 <col:45, col:59> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5576c2ed0790 <col:46, col:59> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5576c2ed0778 <col:46, col:55> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5576c2ed06f0 <col:46, col:55> 'uint8_t const[48]' lvalue ->u8 0x5576c2ec58d8
|         |   `-CXXMemberCallExpr 0x5576c2ed06d0 <col:46, col:52> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5576c2ed06a0 <col:46> '<bound member function type>' ->xanno 0x5576c2eb9df8
|         |       `-CXXThisExpr 0x5576c2ed0690 <col:46> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5576c2ed0720 <col:58> 'int' 0
|-CXXMethodDecl 0x5576c2ebc328 <line:453:5, col:53> col:15 used anno_u32 'uint32_t *()'
| `-CompoundStmt 0x5576c2ed0970 <col:26, col:53>
|   `-ReturnStmt 0x5576c2ed0960 <col:28, col:50>
|     `-UnaryOperator 0x5576c2ed0948 <col:35, col:50> 'uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5576c2ed0928 <col:36, col:50> 'uint32_t':'unsigned int' lvalue
|         |-ImplicitCastExpr 0x5576c2ed0910 <col:36, col:45> 'uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5576c2ed08c0 <col:36, col:45> 'uint32_t [12]' lvalue ->u32 0x5576c2ec5bd8
|         |   `-CXXMemberCallExpr 0x5576c2ed08a0 <col:36, col:42> 'Packet::Anno *'
|         |     `-MemberExpr 0x5576c2ed0870 <col:36> '<bound member function type>' ->xanno 0x5576c2eb9f98
|         |       `-CXXThisExpr 0x5576c2ed0860 <col:36> 'Packet *' implicit this
|         `-IntegerLiteral 0x5576c2ed08f0 <col:49> 'int' 0
|-CXXMethodDecl 0x5576c2ebc448 <line:456:5, col:65> col:21 used anno_u32 'const uint32_t *() const'
| `-CompoundStmt 0x5576c2ed0b48 <col:38, col:65>
|   `-ReturnStmt 0x5576c2ed0b38 <col:40, col:62>
|     `-UnaryOperator 0x5576c2ed0b20 <col:47, col:62> 'const uint32_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5576c2ed0b00 <col:48, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |-ImplicitCastExpr 0x5576c2ed0ae8 <col:48, col:57> 'const uint32_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5576c2ed0a58 <col:48, col:57> 'uint32_t const[12]' lvalue ->u32 0x5576c2ec5bd8
|         |   `-CXXMemberCallExpr 0x5576c2ed0a38 <col:48, col:54> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5576c2ed0a08 <col:48> '<bound member function type>' ->xanno 0x5576c2eb9df8
|         |       `-CXXThisExpr 0x5576c2ed09f8 <col:48> 'const Packet *' implicit this
|         `-IntegerLiteral 0x5576c2ed0a88 <col:61> 'int' 0
|-CXXMethodDecl 0x5576c2ebc5f8 <line:460:5, line:463:5> line:460:13 used anno_u8 'uint8_t (int) const'
| |-ParmVarDecl 0x5576c2ebc500 <col:21, col:25> col:25 used i 'int'
| `-CompoundStmt 0x5576c2ed1218 <col:34, line:463:5>
|   |-ParenExpr 0x5576c2ed1060 <line:461:2, col:174> 'void'
|   | `-ConditionalOperator 0x5576c2ed1030 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5576c2ed0c98 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5576c2ed0c68 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5576c2ed0bb8 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5576c2ed0ba0 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5576c2ed0b60 <col:23> 'int' lvalue ParmVar 0x5576c2ebc500 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5576c2ed0b80 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5576c2ed0c48 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5576c2ed0c18 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5576c2ed0bd8 <col:33> 'int' lvalue ParmVar 0x5576c2ebc500 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5576c2ed0c30 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5576c2ed0bf8 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5576c2eba1e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5576c2ed0cf8 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5576c2ed0cd8 <col:56> 'int' 0
|   |   `-CallExpr 0x5576c2ed0f90 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5576c2ed0f78 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5576c2ed0f58 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5576c2a49030 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5576c2ed0fd0 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2ed0de8 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5576c2ed0fe8 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2ed0e18 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5576c2ed1000 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5576c2ed0e50 <col:135> 'int' 461
|   |     `-ImplicitCastExpr 0x5576c2ed1018 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5576c2ed0f40 <col:140, col:154> 'const char [35]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5576c2ed0f28 <col:154> 'const char [35]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5576c2ed0ee8 <col:154> 'const char [35]' lvalue "uint8_t Packet::anno_u8(int) const"
|   `-ReturnStmt 0x5576c2ed1208 <line:462:2, col:22>
|     `-ImplicitCastExpr 0x5576c2ed11f0 <col:9, col:22> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-ArraySubscriptExpr 0x5576c2ed11d0 <col:9, col:22> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5576c2ed11a0 <col:9, col:18> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5576c2ed1150 <col:9, col:18> 'uint8_t const[48]' lvalue ->u8 0x5576c2ec58d8
|         |   `-CXXMemberCallExpr 0x5576c2ed1130 <col:9, col:15> 'const Packet::Anno *'
|         |     `-MemberExpr 0x5576c2ed1100 <col:9> '<bound member function type>' ->xanno 0x5576c2eb9df8
|         |       `-CXXThisExpr 0x5576c2ed10f0 <col:9> 'const Packet *' implicit this
|         `-ImplicitCastExpr 0x5576c2ed11b8 <col:21> 'int' <LValueToRValue>
|           `-DeclRefExpr 0x5576c2ed1180 <col:21> 'int' lvalue ParmVar 0x5576c2ebc500 'i' 'int'
|-CXXMethodDecl 0x5576c2ebc848 <line:469:5, line:472:5> line:469:10 used set_anno_u8 'void (int, uint8_t)'
| |-ParmVarDecl 0x5576c2ebc6b8 <col:22, col:26> col:26 used i 'int'
| |-ParmVarDecl 0x5576c2ebc730 <col:29, col:37> col:37 used x 'uint8_t':'unsigned char'
| `-CompoundStmt 0x5576c2ed18a8 <col:40, line:472:5>
|   |-ParenExpr 0x5576c2ed16c0 <line:470:2, col:174> 'void'
|   | `-ConditionalOperator 0x5576c2ed1690 <col:3, col:173> 'void'
|   |   |-CXXStaticCastExpr 0x5576c2ed1370 <col:3, col:46> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5576c2ed1340 <col:23, col:37> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5576c2ed1290 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5576c2ed1278 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5576c2ed1238 <col:23> 'int' lvalue ParmVar 0x5576c2ebc6b8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5576c2ed1258 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5576c2ed1320 <col:33, col:37> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5576c2ed12f0 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5576c2ed12b0 <col:33> 'int' lvalue ParmVar 0x5576c2ebc6b8 'i' 'int'
|   |   |     `-ImplicitCastExpr 0x5576c2ed1308 <col:37> 'int' <IntegralCast>
|   |   |       `-DeclRefExpr 0x5576c2ed12d0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5576c2eba1e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |-CXXFunctionalCastExpr 0x5576c2ed13d0 <col:50, col:57> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5576c2ed13b0 <col:56> 'int' 0
|   |   `-CallExpr 0x5576c2ed15f0 <col:61, col:173> 'void'
|   |     |-ImplicitCastExpr 0x5576c2ed15d8 <col:61> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5576c2ed15b8 <col:61> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5576c2a49030 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5576c2ed1630 <col:76> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2ed1440 <col:76> 'const char [24]' lvalue "i >= 0 && i < anno_size"
|   |     |-ImplicitCastExpr 0x5576c2ed1648 <col:103> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2ed1470 <col:103> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5576c2ed1660 <col:135> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5576c2ed14a8 <col:135> 'int' 470
|   |     `-ImplicitCastExpr 0x5576c2ed1678 <col:140, col:154> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5576c2ed15a0 <col:140, col:154> 'const char [39]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5576c2ed1588 <col:154> 'const char [39]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5576c2ed1548 <col:154> 'const char [39]' lvalue "void Packet::set_anno_u8(int, uint8_t)"
|   `-BinaryOperator 0x5576c2ed1888 <line:471:2, col:19> 'uint8_t':'unsigned char' lvalue '='
|     |-ArraySubscriptExpr 0x5576c2ed1830 <col:2, col:15> 'uint8_t':'unsigned char' lvalue
|     | |-ImplicitCastExpr 0x5576c2ed1800 <col:2, col:11> 'uint8_t *' <ArrayToPointerDecay>
|     | | `-MemberExpr 0x5576c2ed17b0 <col:2, col:11> 'uint8_t [48]' lvalue ->u8 0x5576c2ec58d8
|     | |   `-CXXMemberCallExpr 0x5576c2ed1790 <col:2, col:8> 'Packet::Anno *'
|     | |     `-MemberExpr 0x5576c2ed1760 <col:2> '<bound member function type>' ->xanno 0x5576c2eb9f98
|     | |       `-CXXThisExpr 0x5576c2ed1750 <col:2> 'Packet *' implicit this
|     | `-ImplicitCastExpr 0x5576c2ed1818 <col:14> 'int' <LValueToRValue>
|     |   `-DeclRefExpr 0x5576c2ed17e0 <col:14> 'int' lvalue ParmVar 0x5576c2ebc6b8 'i' 'int'
|     `-ImplicitCastExpr 0x5576c2ed1870 <col:19> 'uint8_t':'unsigned char' <LValueToRValue>
|       `-DeclRefExpr 0x5576c2ed1850 <col:19> 'uint8_t':'unsigned char' lvalue ParmVar 0x5576c2ebc730 'x' 'uint8_t':'unsigned char'
|-CXXMethodDecl 0x5576c2ebca38 <line:479:5, line:485:5> line:479:14 used anno_u16 'uint16_t (int) const'
| |-ParmVarDecl 0x5576c2ebc940 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5576c2ed2028 <col:36, line:485:5>
|   |-ParenExpr 0x5576c2ed1d90 <line:480:2, col:182> 'void'
|   | `-ConditionalOperator 0x5576c2ed1d60 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5576c2ed1a40 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5576c2ed1a10 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5576c2ed1920 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5576c2ed1908 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5576c2ed18c8 <col:23> 'int' lvalue ParmVar 0x5576c2ebc940 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5576c2ed18e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5576c2ed19f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5576c2ed19d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5576c2ed1940 <col:33> 'int' lvalue ParmVar 0x5576c2ebc940 'i' 'int'
|   |   |     `-BinaryOperator 0x5576c2ed19b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5576c2ed19a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5576c2ed1960 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5576c2eba1e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5576c2ed1980 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5576c2ed1aa0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5576c2ed1a80 <col:60> 'int' 0
|   |   `-CallExpr 0x5576c2ed1cc0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5576c2ed1ca8 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5576c2ed1c88 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5576c2a49030 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5576c2ed1d00 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2ed1b10 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5576c2ed1d18 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2ed1b48 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5576c2ed1d30 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5576c2ed1b80 <col:143> 'int' 480
|   |     `-ImplicitCastExpr 0x5576c2ed1d48 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5576c2ed1c70 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5576c2ed1c58 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5576c2ed1c18 <col:162> 'const char [37]' lvalue "uint16_t Packet::anno_u16(int) const"
|   `-ReturnStmt 0x5576c2ed2018 <line:484:2, col:75>
|     `-ImplicitCastExpr 0x5576c2ed2000 <col:9, col:75> 'click_aliasable_uint16_t':'unsigned short' <LValueToRValue>
|       `-UnaryOperator 0x5576c2ed1fe8 <col:9, col:75> 'const click_aliasable_uint16_t':'const unsigned short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5576c2ed1fb8 <col:10, col:75> 'const click_aliasable_uint16_t *' reinterpret_cast<const click_aliasable_uint16_t *> <BitCast>
|           `-BinaryOperator 0x5576c2ed1f58 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5576c2ed1f28 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5576c2ed1ea0 <col:61, col:70> 'char const[48]' lvalue ->c 0x5576c2ec57a8
|             |   `-CXXMemberCallExpr 0x5576c2ed1e80 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5576c2ed1e50 <col:61> '<bound member function type>' ->xanno 0x5576c2eb9df8
|             |       `-CXXThisExpr 0x5576c2ed1e40 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5576c2ed1f40 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5576c2ed1ed0 <col:74> 'int' lvalue ParmVar 0x5576c2ebc940 'i' 'int'
|-CXXMethodDecl 0x5576c2ebcc88 <line:494:5, line:500:5> line:494:10 used set_anno_u16 'void (int, uint16_t)'
| |-ParmVarDecl 0x5576c2ebcaf8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5576c2ebcb70 <col:30, col:39> col:39 used x 'uint16_t':'unsigned short'
| `-CompoundStmt 0x5576c2ed2778 <col:42, line:500:5>
|   |-ParenExpr 0x5576c2ed2510 <line:495:2, col:182> 'void'
|   | `-ConditionalOperator 0x5576c2ed24e0 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5576c2ed21c0 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5576c2ed2190 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5576c2ed20a0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5576c2ed2088 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5576c2ed2048 <col:23> 'int' lvalue ParmVar 0x5576c2ebcaf8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5576c2ed2068 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5576c2ed2170 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5576c2ed2158 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5576c2ed20c0 <col:33> 'int' lvalue ParmVar 0x5576c2ebcaf8 'i' 'int'
|   |   |     `-BinaryOperator 0x5576c2ed2138 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5576c2ed2120 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5576c2ed20e0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5576c2eba1e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5576c2ed2100 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5576c2ed2220 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5576c2ed2200 <col:60> 'int' 0
|   |   `-CallExpr 0x5576c2ed2440 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5576c2ed2428 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5576c2ed2408 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5576c2a49030 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5576c2ed2480 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2ed2290 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5576c2ed2498 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2ed22c8 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5576c2ed24b0 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5576c2ed2300 <col:143> 'int' 495
|   |     `-ImplicitCastExpr 0x5576c2ed24c8 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5576c2ed23f0 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5576c2ed23d8 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5576c2ed2398 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u16(int, uint16_t)"
|   `-BinaryOperator 0x5576c2ed2758 <line:499:2, col:66> 'click_aliasable_uint16_t':'unsigned short' lvalue '='
|     |-UnaryOperator 0x5576c2ed2708 <col:2, col:62> 'click_aliasable_uint16_t':'unsigned short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5576c2ed26d8 <col:3, col:62> 'click_aliasable_uint16_t *' reinterpret_cast<click_aliasable_uint16_t *> <BitCast>
|     |   `-BinaryOperator 0x5576c2ed2680 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5576c2ed2650 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5576c2ed2600 <col:48, col:57> 'char [48]' lvalue ->c 0x5576c2ec57a8
|     |     |   `-CXXMemberCallExpr 0x5576c2ed25e0 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5576c2ed25b0 <col:48> '<bound member function type>' ->xanno 0x5576c2eb9f98
|     |     |       `-CXXThisExpr 0x5576c2ed25a0 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5576c2ed2668 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5576c2ed2630 <col:61> 'int' lvalue ParmVar 0x5576c2ebcaf8 'i' 'int'
|     `-ImplicitCastExpr 0x5576c2ed2740 <col:66> 'uint16_t':'unsigned short' <LValueToRValue>
|       `-DeclRefExpr 0x5576c2ed2720 <col:66> 'uint16_t':'unsigned short' lvalue ParmVar 0x5576c2ebcb70 'x' 'uint16_t':'unsigned short'
|-CXXMethodDecl 0x5576c2ebce48 <line:507:5, line:513:5> line:507:13 anno_s16 'int16_t (int) const'
| |-ParmVarDecl 0x5576c2ebcd50 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5576c2ed2ed8 <col:35, line:513:5>
|   |-ParenExpr 0x5576c2ed2be8 <line:508:2, col:182> 'void'
|   | `-ConditionalOperator 0x5576c2ed2bb8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5576c2ed2910 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5576c2ed28e0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5576c2ed27f0 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5576c2ed27d8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5576c2ed2798 <col:23> 'int' lvalue ParmVar 0x5576c2ebcd50 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5576c2ed27b8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5576c2ed28c0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5576c2ed28a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5576c2ed2810 <col:33> 'int' lvalue ParmVar 0x5576c2ebcd50 'i' 'int'
|   |   |     `-BinaryOperator 0x5576c2ed2888 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5576c2ed2870 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5576c2ed2830 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5576c2eba1e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5576c2ed2850 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5576c2ed2970 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5576c2ed2950 <col:60> 'int' 0
|   |   `-CallExpr 0x5576c2ed2b18 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5576c2ed2b00 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5576c2ed2ae0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5576c2a49030 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5576c2ed2b58 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2ed29e0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5576c2ed2b70 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2ed2a18 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5576c2ed2b88 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5576c2ed2a50 <col:143> 'int' 508
|   |     `-ImplicitCastExpr 0x5576c2ed2ba0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5576c2ed2ac8 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5576c2ed2ab0 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5576c2ed2a70 <col:162> 'const char [36]' lvalue "int16_t Packet::anno_s16(int) const"
|   `-ReturnStmt 0x5576c2ed2ec8 <line:512:2, col:74>
|     `-ImplicitCastExpr 0x5576c2ed2eb0 <col:9, col:74> 'click_aliasable_int16_t':'short' <LValueToRValue>
|       `-UnaryOperator 0x5576c2ed2e98 <col:9, col:74> 'const click_aliasable_int16_t':'const short' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5576c2ed2e68 <col:10, col:74> 'const click_aliasable_int16_t *' reinterpret_cast<const click_aliasable_int16_t *> <BitCast>
|           `-BinaryOperator 0x5576c2ed2de0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5576c2ed2db0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5576c2ed2d60 <col:60, col:69> 'char const[48]' lvalue ->c 0x5576c2ec57a8
|             |   `-CXXMemberCallExpr 0x5576c2ed2d40 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5576c2ed2d10 <col:60> '<bound member function type>' ->xanno 0x5576c2eb9df8
|             |       `-CXXThisExpr 0x5576c2ed2d00 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5576c2ed2dc8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5576c2ed2d90 <col:73> 'int' lvalue ParmVar 0x5576c2ebcd50 'i' 'int'
|-CXXMethodDecl 0x5576c2ebd098 <line:522:5, line:528:5> line:522:10 set_anno_s16 'void (int, int16_t)'
| |-ParmVarDecl 0x5576c2ebcf08 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5576c2ebcf80 <col:30, col:38> col:38 used x 'int16_t':'short'
| `-CompoundStmt 0x5576c2ed35e8 <col:41, line:528:5>
|   |-ParenExpr 0x5576c2ed3380 <line:523:2, col:182> 'void'
|   | `-ConditionalOperator 0x5576c2ed3350 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5576c2ed3070 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5576c2ed3040 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5576c2ed2f50 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5576c2ed2f38 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5576c2ed2ef8 <col:23> 'int' lvalue ParmVar 0x5576c2ebcf08 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5576c2ed2f18 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5576c2ed3020 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5576c2ed3008 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5576c2ed2f70 <col:33> 'int' lvalue ParmVar 0x5576c2ebcf08 'i' 'int'
|   |   |     `-BinaryOperator 0x5576c2ed2fe8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5576c2ed2fd0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5576c2ed2f90 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5576c2eba1e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5576c2ed2fb0 <col:49> 'int' 1
|   |   |-CXXFunctionalCastExpr 0x5576c2ed30d0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5576c2ed30b0 <col:60> 'int' 0
|   |   `-CallExpr 0x5576c2ed32b0 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5576c2ed3298 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5576c2ed3278 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5576c2a49030 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5576c2ed32f0 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2ed3140 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 1"
|   |     |-ImplicitCastExpr 0x5576c2ed3308 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2ed3178 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5576c2ed3320 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5576c2ed31b0 <col:143> 'int' 523
|   |     `-ImplicitCastExpr 0x5576c2ed3338 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5576c2ed3260 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5576c2ed3248 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5576c2ed3208 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s16(int, int16_t)"
|   `-BinaryOperator 0x5576c2ed35c8 <line:527:2, col:65> 'click_aliasable_int16_t':'short' lvalue '='
|     |-UnaryOperator 0x5576c2ed3578 <col:2, col:61> 'click_aliasable_int16_t':'short' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5576c2ed3548 <col:3, col:61> 'click_aliasable_int16_t *' reinterpret_cast<click_aliasable_int16_t *> <BitCast>
|     |   `-BinaryOperator 0x5576c2ed34f0 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5576c2ed34c0 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5576c2ed3470 <col:47, col:56> 'char [48]' lvalue ->c 0x5576c2ec57a8
|     |     |   `-CXXMemberCallExpr 0x5576c2ed3450 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5576c2ed3420 <col:47> '<bound member function type>' ->xanno 0x5576c2eb9f98
|     |     |       `-CXXThisExpr 0x5576c2ed3410 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5576c2ed34d8 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5576c2ed34a0 <col:60> 'int' lvalue ParmVar 0x5576c2ebcf08 'i' 'int'
|     `-ImplicitCastExpr 0x5576c2ed35b0 <col:65> 'int16_t':'short' <LValueToRValue>
|       `-DeclRefExpr 0x5576c2ed3590 <col:65> 'int16_t':'short' lvalue ParmVar 0x5576c2ebcf80 'x' 'int16_t':'short'
|-CXXMethodDecl 0x5576c2ebd258 <line:535:5, line:541:5> line:535:14 used anno_u32 'uint32_t (int) const'
| |-ParmVarDecl 0x5576c2ebd160 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5576c2ed3cd8 <col:36, line:541:5>
|   |-ParenExpr 0x5576c2ed3a58 <line:536:2, col:182> 'void'
|   | `-ConditionalOperator 0x5576c2ed3a28 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5576c2ed3780 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5576c2ed3750 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5576c2ed3660 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5576c2ed3648 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5576c2ed3608 <col:23> 'int' lvalue ParmVar 0x5576c2ebd160 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5576c2ed3628 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5576c2ed3730 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5576c2ed3718 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5576c2ed3680 <col:33> 'int' lvalue ParmVar 0x5576c2ebd160 'i' 'int'
|   |   |     `-BinaryOperator 0x5576c2ed36f8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5576c2ed36e0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5576c2ed36a0 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5576c2eba1e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5576c2ed36c0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5576c2ed37e0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5576c2ed37c0 <col:60> 'int' 0
|   |   `-CallExpr 0x5576c2ed3988 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5576c2ed3970 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5576c2ed3950 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5576c2a49030 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5576c2ed39c8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2ed3850 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5576c2ed39e0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2ed3888 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5576c2ed39f8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5576c2ed38c0 <col:143> 'int' 536
|   |     `-ImplicitCastExpr 0x5576c2ed3a10 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5576c2ed3938 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5576c2ed3920 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5576c2ed38e0 <col:162> 'const char [37]' lvalue "uint32_t Packet::anno_u32(int) const"
|   `-ReturnStmt 0x5576c2ed3cc8 <line:540:2, col:75>
|     `-ImplicitCastExpr 0x5576c2ed3cb0 <col:9, col:75> 'click_aliasable_uint32_t':'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x5576c2ed3c98 <col:9, col:75> 'const click_aliasable_uint32_t':'const unsigned int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5576c2ed3c68 <col:10, col:75> 'const click_aliasable_uint32_t *' reinterpret_cast<const click_aliasable_uint32_t *> <BitCast>
|           `-BinaryOperator 0x5576c2ed3c10 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5576c2ed3bc0 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5576c2ed3b70 <col:61, col:70> 'char const[48]' lvalue ->c 0x5576c2ec57a8
|             |   `-CXXMemberCallExpr 0x5576c2ed3b50 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5576c2ed3b20 <col:61> '<bound member function type>' ->xanno 0x5576c2eb9df8
|             |       `-CXXThisExpr 0x5576c2ed3b10 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5576c2ed3bd8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5576c2ed3ba0 <col:74> 'int' lvalue ParmVar 0x5576c2ebd160 'i' 'int'
|-CXXMethodDecl 0x5576c2ebd428 <line:550:5, col:75> col:45 used set_anno_u32 'void (int, uint32_t)'
| |-ParmVarDecl 0x5576c2ebd318 <col:58, col:62> col:62 i 'int'
| |-ParmVarDecl 0x5576c2ebd390 <col:65, col:74> col:74 x 'uint32_t':'unsigned int'
| |-NoInlineAttr 0x5576c2ebd4d8 <col:20>
| `-OptimizeNoneAttr 0x5576c2ebd530 <col:30>
|-CXXMethodDecl 0x5576c2ebd668 <line:556:5, line:562:5> line:556:13 used anno_s32 'int32_t (int) const'
| |-ParmVarDecl 0x5576c2ebd570 <col:22, col:26> col:26 used i 'int'
| `-CompoundStmt 0x5576c2ed43a8 <col:35, line:562:5>
|   |-ParenExpr 0x5576c2ed4148 <line:557:2, col:182> 'void'
|   | `-ConditionalOperator 0x5576c2ed4118 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5576c2ed3e70 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5576c2ed3e40 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5576c2ed3d50 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5576c2ed3d38 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5576c2ed3cf8 <col:23> 'int' lvalue ParmVar 0x5576c2ebd570 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5576c2ed3d18 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5576c2ed3e20 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5576c2ed3e08 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5576c2ed3d70 <col:33> 'int' lvalue ParmVar 0x5576c2ebd570 'i' 'int'
|   |   |     `-BinaryOperator 0x5576c2ed3de8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5576c2ed3dd0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5576c2ed3d90 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5576c2eba1e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5576c2ed3db0 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5576c2ed3ed0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5576c2ed3eb0 <col:60> 'int' 0
|   |   `-CallExpr 0x5576c2ed4078 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5576c2ed4060 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5576c2ed4040 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5576c2a49030 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5576c2ed40b8 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2ed3f40 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5576c2ed40d0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2ed3f78 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5576c2ed40e8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5576c2ed3fb0 <col:143> 'int' 557
|   |     `-ImplicitCastExpr 0x5576c2ed4100 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5576c2ed4028 <col:148, col:162> 'const char [36]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5576c2ed4010 <col:162> 'const char [36]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5576c2ed3fd0 <col:162> 'const char [36]' lvalue "int32_t Packet::anno_s32(int) const"
|   `-ReturnStmt 0x5576c2ed4398 <line:561:2, col:74>
|     `-ImplicitCastExpr 0x5576c2ed4380 <col:9, col:74> 'click_aliasable_int32_t':'int' <LValueToRValue>
|       `-UnaryOperator 0x5576c2ed4368 <col:9, col:74> 'const click_aliasable_int32_t':'const int' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5576c2ed4338 <col:10, col:74> 'const click_aliasable_int32_t *' reinterpret_cast<const click_aliasable_int32_t *> <BitCast>
|           `-BinaryOperator 0x5576c2ed42e0 <col:60, col:73> 'const char *' '+'
|             |-ImplicitCastExpr 0x5576c2ed42b0 <col:60, col:69> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5576c2ed4260 <col:60, col:69> 'char const[48]' lvalue ->c 0x5576c2ec57a8
|             |   `-CXXMemberCallExpr 0x5576c2ed4240 <col:60, col:66> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5576c2ed4210 <col:60> '<bound member function type>' ->xanno 0x5576c2eb9df8
|             |       `-CXXThisExpr 0x5576c2ed4200 <col:60> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5576c2ed42c8 <col:73> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5576c2ed4290 <col:73> 'int' lvalue ParmVar 0x5576c2ebd570 'i' 'int'
|-CXXMethodDecl 0x5576c2ebd878 <line:571:5, line:577:5> line:571:10 used set_anno_s32 'void (int, int32_t)'
| |-ParmVarDecl 0x5576c2ebd728 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5576c2ebd7a0 <col:30, col:38> col:38 used x 'int32_t':'int'
| `-CompoundStmt 0x5576c2ed4a88 <col:41, line:577:5>
|   |-ParenExpr 0x5576c2ed4818 <line:572:2, col:182> 'void'
|   | `-ConditionalOperator 0x5576c2ed47e8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5576c2ed4540 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5576c2ed4510 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5576c2ed4420 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5576c2ed4408 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5576c2ed43c8 <col:23> 'int' lvalue ParmVar 0x5576c2ebd728 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5576c2ed43e8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5576c2ed44f0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5576c2ed44d8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5576c2ed4440 <col:33> 'int' lvalue ParmVar 0x5576c2ebd728 'i' 'int'
|   |   |     `-BinaryOperator 0x5576c2ed44b8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5576c2ed44a0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5576c2ed4460 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5576c2eba1e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5576c2ed4480 <col:49> 'int' 3
|   |   |-CXXFunctionalCastExpr 0x5576c2ed45a0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5576c2ed4580 <col:60> 'int' 0
|   |   `-CallExpr 0x5576c2ed4748 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5576c2ed4730 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5576c2ed4710 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5576c2a49030 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5576c2ed4788 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2ed4610 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 3"
|   |     |-ImplicitCastExpr 0x5576c2ed47a0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2ed4648 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5576c2ed47b8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5576c2ed4680 <col:143> 'int' 572
|   |     `-ImplicitCastExpr 0x5576c2ed47d0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5576c2ed46f8 <col:148, col:162> 'const char [40]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5576c2ed46e0 <col:162> 'const char [40]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5576c2ed46a0 <col:162> 'const char [40]' lvalue "void Packet::set_anno_s32(int, int32_t)"
|   `-BinaryOperator 0x5576c2ed4a68 <line:576:2, col:65> 'click_aliasable_int32_t':'int' lvalue '='
|     |-UnaryOperator 0x5576c2ed4a18 <col:2, col:61> 'click_aliasable_int32_t':'int' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5576c2ed49e8 <col:3, col:61> 'click_aliasable_int32_t *' reinterpret_cast<click_aliasable_int32_t *> <BitCast>
|     |   `-BinaryOperator 0x5576c2ed4988 <col:47, col:60> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5576c2ed4958 <col:47, col:56> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5576c2ed4908 <col:47, col:56> 'char [48]' lvalue ->c 0x5576c2ec57a8
|     |     |   `-CXXMemberCallExpr 0x5576c2ed48e8 <col:47, col:53> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5576c2ed48b8 <col:47> '<bound member function type>' ->xanno 0x5576c2eb9f98
|     |     |       `-CXXThisExpr 0x5576c2ed48a8 <col:47> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5576c2ed4970 <col:60> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5576c2ed4938 <col:60> 'int' lvalue ParmVar 0x5576c2ebd728 'i' 'int'
|     `-ImplicitCastExpr 0x5576c2ed4a50 <col:65> 'int32_t':'int' <LValueToRValue>
|       `-DeclRefExpr 0x5576c2ed4a30 <col:65> 'int32_t':'int' lvalue ParmVar 0x5576c2ebd7a0 'x' 'int32_t':'int'
|-CXXMethodDecl 0x5576c2ebda38 <line:585:5, line:591:5> line:585:14 used anno_u64 'uint64_t (int) const'
| |-ParmVarDecl 0x5576c2ebd940 <col:23, col:27> col:27 used i 'int'
| `-CompoundStmt 0x5576c2ed51b8 <col:36, line:591:5>
|   |-ParenExpr 0x5576c2ed4ef8 <line:586:2, col:182> 'void'
|   | `-ConditionalOperator 0x5576c2ed4ec8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5576c2ed4c20 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5576c2ed4bf0 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5576c2ed4b00 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5576c2ed4ae8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5576c2ed4aa8 <col:23> 'int' lvalue ParmVar 0x5576c2ebd940 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5576c2ed4ac8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5576c2ed4bd0 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5576c2ed4bb8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5576c2ed4b20 <col:33> 'int' lvalue ParmVar 0x5576c2ebd940 'i' 'int'
|   |   |     `-BinaryOperator 0x5576c2ed4b98 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5576c2ed4b80 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5576c2ed4b40 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5576c2eba1e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5576c2ed4b60 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5576c2ed4c80 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5576c2ed4c60 <col:60> 'int' 0
|   |   `-CallExpr 0x5576c2ed4e28 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5576c2ed4e10 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5576c2ed4df0 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5576c2a49030 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5576c2ed4e68 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2ed4cf0 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5576c2ed4e80 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2ed4d28 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5576c2ed4e98 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5576c2ed4d60 <col:143> 'int' 586
|   |     `-ImplicitCastExpr 0x5576c2ed4eb0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5576c2ed4dd8 <col:148, col:162> 'const char [37]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5576c2ed4dc0 <col:162> 'const char [37]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5576c2ed4d80 <col:162> 'const char [37]' lvalue "uint64_t Packet::anno_u64(int) const"
|   `-ReturnStmt 0x5576c2ed51a8 <line:590:2, col:75>
|     `-ImplicitCastExpr 0x5576c2ed5190 <col:9, col:75> 'click_aliasable_uint64_t':'unsigned long' <LValueToRValue>
|       `-UnaryOperator 0x5576c2ed5178 <col:9, col:75> 'const click_aliasable_uint64_t':'const unsigned long' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5576c2ed5148 <col:10, col:75> 'const click_aliasable_uint64_t *' reinterpret_cast<const click_aliasable_uint64_t *> <BitCast>
|           `-BinaryOperator 0x5576c2ed50c0 <col:61, col:74> 'const char *' '+'
|             |-ImplicitCastExpr 0x5576c2ed5090 <col:61, col:70> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5576c2ed5040 <col:61, col:70> 'char const[48]' lvalue ->c 0x5576c2ec57a8
|             |   `-CXXMemberCallExpr 0x5576c2ed5020 <col:61, col:67> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5576c2ed4ff0 <col:61> '<bound member function type>' ->xanno 0x5576c2eb9df8
|             |       `-CXXThisExpr 0x5576c2ed4fe0 <col:61> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5576c2ed50a8 <col:74> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5576c2ed5070 <col:74> 'int' lvalue ParmVar 0x5576c2ebd940 'i' 'int'
|-CXXMethodDecl 0x5576c2ebdc88 <line:600:5, line:606:5> line:600:10 used set_anno_u64 'void (int, uint64_t)'
| |-ParmVarDecl 0x5576c2ebdaf8 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5576c2ebdb70 <col:30, col:39> col:39 used x 'uint64_t':'unsigned long'
| `-CompoundStmt 0x5576c2ed5898 <col:42, line:606:5>
|   |-ParenExpr 0x5576c2ed5628 <line:601:2, col:182> 'void'
|   | `-ConditionalOperator 0x5576c2ed55f8 <col:3, col:181> 'void'
|   |   |-CXXStaticCastExpr 0x5576c2ed5350 <col:3, col:50> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5576c2ed5320 <col:23, col:49> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5576c2ed5230 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5576c2ed5218 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5576c2ed51d8 <col:23> 'int' lvalue ParmVar 0x5576c2ebdaf8 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5576c2ed51f8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5576c2ed5300 <col:33, col:49> 'bool' '<'
|   |   |     |-ImplicitCastExpr 0x5576c2ed52e8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5576c2ed5250 <col:33> 'int' lvalue ParmVar 0x5576c2ebdaf8 'i' 'int'
|   |   |     `-BinaryOperator 0x5576c2ed52c8 <col:37, col:49> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5576c2ed52b0 <col:37> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5576c2ed5270 <col:37> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5576c2eba1e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-IntegerLiteral 0x5576c2ed5290 <col:49> 'int' 7
|   |   |-CXXFunctionalCastExpr 0x5576c2ed53b0 <col:54, col:61> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5576c2ed5390 <col:60> 'int' 0
|   |   `-CallExpr 0x5576c2ed5558 <col:65, col:181> 'void'
|   |     |-ImplicitCastExpr 0x5576c2ed5540 <col:65> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5576c2ed5520 <col:65> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5576c2a49030 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5576c2ed5598 <col:80> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2ed5420 <col:80> 'const char [28]' lvalue "i >= 0 && i < anno_size - 7"
|   |     |-ImplicitCastExpr 0x5576c2ed55b0 <col:111> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2ed5458 <col:111> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5576c2ed55c8 <col:143> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5576c2ed5490 <col:143> 'int' 601
|   |     `-ImplicitCastExpr 0x5576c2ed55e0 <col:148, col:162> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5576c2ed5508 <col:148, col:162> 'const char [41]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5576c2ed54f0 <col:162> 'const char [41]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5576c2ed54b0 <col:162> 'const char [41]' lvalue "void Packet::set_anno_u64(int, uint64_t)"
|   `-BinaryOperator 0x5576c2ed5878 <line:605:2, col:66> 'click_aliasable_uint64_t':'unsigned long' lvalue '='
|     |-UnaryOperator 0x5576c2ed5828 <col:2, col:62> 'click_aliasable_uint64_t':'unsigned long' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5576c2ed57f8 <col:3, col:62> 'click_aliasable_uint64_t *' reinterpret_cast<click_aliasable_uint64_t *> <BitCast>
|     |   `-BinaryOperator 0x5576c2ed5798 <col:48, col:61> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5576c2ed5768 <col:48, col:57> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5576c2ed5718 <col:48, col:57> 'char [48]' lvalue ->c 0x5576c2ec57a8
|     |     |   `-CXXMemberCallExpr 0x5576c2ed56f8 <col:48, col:54> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5576c2ed56c8 <col:48> '<bound member function type>' ->xanno 0x5576c2eb9f98
|     |     |       `-CXXThisExpr 0x5576c2ed56b8 <col:48> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5576c2ed5780 <col:61> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5576c2ed5748 <col:61> 'int' lvalue ParmVar 0x5576c2ebdaf8 'i' 'int'
|     `-ImplicitCastExpr 0x5576c2ed5860 <col:66> 'uint64_t':'unsigned long' <LValueToRValue>
|       `-DeclRefExpr 0x5576c2ed5840 <col:66> 'uint64_t':'unsigned long' lvalue ParmVar 0x5576c2ebdb70 'x' 'uint64_t':'unsigned long'
|-CXXMethodDecl 0x5576c2ebde20 <line:614:5, line:620:5> line:614:11 anno_ptr 'void *(int) const'
| |-ParmVarDecl 0x5576c2ebdd50 <col:20, col:24> col:24 used i 'int'
| `-CompoundStmt 0x5576c2ed6108 <col:33, line:620:5>
|   |-ParenExpr 0x5576c2ed5e80 <line:615:2, col:220> 'void'
|   | `-ConditionalOperator 0x5576c2ed5e50 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5576c2ed5aa0 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5576c2ed5a70 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5576c2ed5910 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5576c2ed58f8 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5576c2ed58b8 <col:23> 'int' lvalue ParmVar 0x5576c2ebdd50 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5576c2ed58d8 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5576c2ed5a50 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5576c2ed5a38 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5576c2ed5930 <col:33> 'int' lvalue ParmVar 0x5576c2ebdd50 'i' 'int'
|   |   |     `-BinaryOperator 0x5576c2ed5a18 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5576c2ed5a00 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5576c2ed5950 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5576c2eba1e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5576c2ed59d8 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5576c2ed59c0 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5576c2ed5988 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5576c2ed5b00 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5576c2ed5ae0 <col:79> 'int' 0
|   |   `-CallExpr 0x5576c2ed5db0 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5576c2ed5d98 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5576c2ed5d78 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5576c2a49030 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5576c2ed5df0 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2ed5be8 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5576c2ed5e08 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2ed5c30 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5576c2ed5e20 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5576c2ed5c68 <col:181> 'int' 615
|   |     `-ImplicitCastExpr 0x5576c2ed5e38 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5576c2ed5d60 <col:186, col:200> 'const char [34]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5576c2ed5d48 <col:200> 'const char [34]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5576c2ed5d08 <col:200> 'const char [34]' lvalue "void *Packet::anno_ptr(int) const"
|   `-ReturnStmt 0x5576c2ed60f8 <line:619:2, col:81>
|     `-ImplicitCastExpr 0x5576c2ed60e0 <col:9, col:81> 'click_aliasable_void_pointer_t':'void *' <LValueToRValue>
|       `-UnaryOperator 0x5576c2ed60c8 <col:9, col:81> 'const click_aliasable_void_pointer_t':'void *const' lvalue prefix '*' cannot overflow
|         `-CXXReinterpretCastExpr 0x5576c2ed6098 <col:10, col:81> 'const click_aliasable_void_pointer_t *' reinterpret_cast<const click_aliasable_void_pointer_t *> <BitCast>
|           `-BinaryOperator 0x5576c2ed6010 <col:67, col:80> 'const char *' '+'
|             |-ImplicitCastExpr 0x5576c2ed5fe0 <col:67, col:76> 'const char *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5576c2ed5f90 <col:67, col:76> 'char const[48]' lvalue ->c 0x5576c2ec57a8
|             |   `-CXXMemberCallExpr 0x5576c2ed5f70 <col:67, col:73> 'const Packet::Anno *'
|             |     `-MemberExpr 0x5576c2ed5f40 <col:67> '<bound member function type>' ->xanno 0x5576c2eb9df8
|             |       `-CXXThisExpr 0x5576c2ed5f30 <col:67> 'const Packet *' implicit this
|             `-ImplicitCastExpr 0x5576c2ed5ff8 <col:80> 'int' <LValueToRValue>
|               `-DeclRefExpr 0x5576c2ed5fc0 <col:80> 'int' lvalue ParmVar 0x5576c2ebdd50 'i' 'int'
|-CXXMethodDecl 0x5576c2ebe038 <line:629:5, line:635:5> line:629:10 set_anno_ptr 'void (int, const void *)'
| |-ParmVarDecl 0x5576c2ebdee0 <col:23, col:27> col:27 used i 'int'
| |-ParmVarDecl 0x5576c2ebdf60 <col:30, col:42> col:42 used x 'const void *'
| `-CompoundStmt 0x5576c2ed6930 <col:45, line:635:5>
|   |-ParenExpr 0x5576c2ed6678 <line:630:2, col:220> 'void'
|   | `-ConditionalOperator 0x5576c2ed6648 <col:3, col:219> 'void'
|   |   |-CXXStaticCastExpr 0x5576c2ed6310 <col:3, col:69> 'bool' static_cast<_Bool> <NoOp>
|   |   | `-BinaryOperator 0x5576c2ed62e0 <col:23, col:68> 'bool' '&&'
|   |   |   |-BinaryOperator 0x5576c2ed6180 <col:23, col:28> 'bool' '>='
|   |   |   | |-ImplicitCastExpr 0x5576c2ed6168 <col:23> 'int' <LValueToRValue>
|   |   |   | | `-DeclRefExpr 0x5576c2ed6128 <col:23> 'int' lvalue ParmVar 0x5576c2ebdee0 'i' 'int'
|   |   |   | `-IntegerLiteral 0x5576c2ed6148 <col:28> 'int' 0
|   |   |   `-BinaryOperator 0x5576c2ed62c0 <col:33, col:68> 'bool' '<='
|   |   |     |-ImplicitCastExpr 0x5576c2ed62a8 <col:33> 'int' <LValueToRValue>
|   |   |     | `-DeclRefExpr 0x5576c2ed61a0 <col:33> 'int' lvalue ParmVar 0x5576c2ebdee0 'i' 'int'
|   |   |     `-BinaryOperator 0x5576c2ed6288 <col:38, col:68> 'int' '-'
|   |   |       |-ImplicitCastExpr 0x5576c2ed6270 <col:38> 'int' <IntegralCast>
|   |   |       | `-DeclRefExpr 0x5576c2ed61c0 <col:38> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)' EnumConstant 0x5576c2eba1e0 'anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:349:5)'
|   |   |       `-CStyleCastExpr 0x5576c2ed6248 <col:50, col:68> 'int' <NoOp>
|   |   |         `-ImplicitCastExpr 0x5576c2ed6230 <col:55, col:68> 'int' <IntegralCast> part_of_explicit_cast
|   |   |           `-UnaryExprOrTypeTraitExpr 0x5576c2ed61f8 <col:55, col:68> 'unsigned long' sizeof 'void *'
|   |   |-CXXFunctionalCastExpr 0x5576c2ed6370 <col:73, col:80> 'void' functional cast to void <ToVoid>
|   |   | `-IntegerLiteral 0x5576c2ed6350 <col:79> 'int' 0
|   |   `-CallExpr 0x5576c2ed65a8 <col:84, col:219> 'void'
|   |     |-ImplicitCastExpr 0x5576c2ed6590 <col:84> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|   |     | `-DeclRefExpr 0x5576c2ed6570 <col:84> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5576c2a49030 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|   |     |-ImplicitCastExpr 0x5576c2ed65e8 <col:99> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2ed63e0 <col:99> 'const char [47]' lvalue "i >= 0 && i <= anno_size - (int)sizeof(void *)"
|   |     |-ImplicitCastExpr 0x5576c2ed6600 <col:149> 'const char *' <ArrayToPointerDecay>
|   |     | `-StringLiteral 0x5576c2ed6428 <col:149> 'const char [29]' lvalue "../dummy_inc/click/packet.hh"
|   |     |-ImplicitCastExpr 0x5576c2ed6618 <col:181> 'unsigned int' <IntegralCast>
|   |     | `-IntegerLiteral 0x5576c2ed6460 <col:181> 'int' 630
|   |     `-ImplicitCastExpr 0x5576c2ed6630 <col:186, col:200> 'const char *' <ArrayToPointerDecay>
|   |       `-UnaryOperator 0x5576c2ed6558 <col:186, col:200> 'const char [45]' lvalue prefix '__extension__' cannot overflow
|   |         `-PredefinedExpr 0x5576c2ed6540 <col:200> 'const char [45]' lvalue __PRETTY_FUNCTION__
|   |           `-StringLiteral 0x5576c2ed64f8 <col:200> 'const char [45]' lvalue "void Packet::set_anno_ptr(int, const void *)"
|   `-BinaryOperator 0x5576c2ed6910 <line:634:2, col:92> 'click_aliasable_void_pointer_t':'void *' lvalue '='
|     |-UnaryOperator 0x5576c2ed6878 <col:2, col:68> 'click_aliasable_void_pointer_t':'void *' lvalue prefix '*' cannot overflow
|     | `-CXXReinterpretCastExpr 0x5576c2ed6848 <col:3, col:68> 'click_aliasable_void_pointer_t *' reinterpret_cast<click_aliasable_void_pointer_t *> <BitCast>
|     |   `-BinaryOperator 0x5576c2ed67e8 <col:54, col:67> 'char *' '+'
|     |     |-ImplicitCastExpr 0x5576c2ed67b8 <col:54, col:63> 'char *' <ArrayToPointerDecay>
|     |     | `-MemberExpr 0x5576c2ed6768 <col:54, col:63> 'char [48]' lvalue ->c 0x5576c2ec57a8
|     |     |   `-CXXMemberCallExpr 0x5576c2ed6748 <col:54, col:60> 'Packet::Anno *'
|     |     |     `-MemberExpr 0x5576c2ed6718 <col:54> '<bound member function type>' ->xanno 0x5576c2eb9f98
|     |     |       `-CXXThisExpr 0x5576c2ed6708 <col:54> 'Packet *' implicit this
|     |     `-ImplicitCastExpr 0x5576c2ed67d0 <col:67> 'int' <LValueToRValue>
|     |       `-DeclRefExpr 0x5576c2ed6798 <col:67> 'int' lvalue ParmVar 0x5576c2ebdee0 'i' 'int'
|     `-CXXConstCastExpr 0x5576c2ed68e0 <col:72, col:92> 'void *' const_cast<void *> <NoOp>
|       `-ImplicitCastExpr 0x5576c2ed68c8 <col:91> 'const void *' <LValueToRValue> part_of_explicit_cast
|         `-DeclRefExpr 0x5576c2ed6890 <col:91> 'const void *' lvalue ParmVar 0x5576c2ebdf60 'x' 'const void *'
|-CXXMethodDecl 0x5576c2ebe108 <line:638:5, line:640:5> line:638:20 data_packet 'Packet *()' inline
| `-CompoundStmt 0x5576c2ed69b8 <col:34, line:640:5>
|   `-ReturnStmt 0x5576c2ed69a8 <line:639:9, col:16>
|     `-ImplicitCastExpr 0x5576c2ed6990 <col:16> 'Packet *' <LValueToRValue>
|       `-MemberExpr 0x5576c2ed6960 <col:16> 'Packet *' lvalue ->_data_packet 0x5576c2ec6368
|         `-CXXThisExpr 0x5576c2ed6950 <col:16> 'Packet *' implicit this
|-CXXMethodDecl 0x5576c2ebe248 <line:643:5, col:50> col:17 used clear_annotations 'void (bool)' inline
| `-ParmVarDecl 0x5576c2ebe1b8 <col:35, col:46> col:40 all 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5576c2ec77b8 <col:46> 'bool' true
|-CXXMethodDecl 0x5576c2ebe3c8 <line:644:5, col:48> col:17 copy_annotations 'void (const Packet *)' inline
| `-ParmVarDecl 0x5576c2ebe300 <col:34, col:47> col:48 'const Packet *'
|-EnumDecl 0x5576c2ebe470 <line:648:5, line:660:5> line:648:5
| |-DeprecatedAttr 0x5576c2ebec20 <line:660:22> "" ""
| |-EnumConstantDecl 0x5576c2ebe570 <line:649:2, col:21> col:2 DEFAULT_HEADROOM 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5576c2ebec90 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2ebe550 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 28
| |     `-DeclRefExpr 0x5576c2ebe530 <col:21> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5576c2eb36a0 'default_headroom' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5576c2ebe600 <line:650:2, col:22> col:2 MIN_BUFFER_LENGTH 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5576c2ebeca8 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2ebe5e0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' Int: 64
| |     `-DeclRefExpr 0x5576c2ebe5c0 <col:22> 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)' EnumConstant 0x5576c2eb3730 'min_buffer_length' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:41:5)'
| |-EnumConstantDecl 0x5576c2ebe690 <line:651:2, col:21> col:2 referenced addr_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5576c2ebecc0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2ebe670 <col:21> 'int' Int: 0
| |     `-IntegerLiteral 0x5576c2ebe650 <col:21> 'int' 0
| |-EnumConstantDecl 0x5576c2ebe720 <line:652:2, col:19> col:2 referenced addr_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5576c2ebecd8 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2ebe700 <col:19> 'int' Int: 16
| |     `-IntegerLiteral 0x5576c2ebe6e0 <col:19> 'int' 16
| |-EnumConstantDecl 0x5576c2ebe7b0 <line:653:2, col:21> col:2 referenced user_anno_offset 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5576c2ebecf0 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2ebe790 <col:21> 'int' Int: 16
| |     `-IntegerLiteral 0x5576c2ebe770 <col:21> 'int' 16
| |-EnumConstantDecl 0x5576c2ebe840 <line:654:2, col:19> col:2 referenced user_anno_size 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5576c2ebed08 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2ebe820 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5576c2ebe800 <col:19> 'int' 32
| |-EnumConstantDecl 0x5576c2ebe8d0 <line:655:2, col:19> col:2 ADDR_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5576c2ebed20 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2ebe8b0 <col:19> 'int' Int: 16
| |     `-DeclRefExpr 0x5576c2ebe890 <col:19> 'int' EnumConstant 0x5576c2ebe720 'addr_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5576c2ebe960 <line:656:2, col:19> col:2 referenced USER_ANNO_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5576c2ebed38 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2ebe940 <col:19> 'int' Int: 32
| |     `-DeclRefExpr 0x5576c2ebe920 <col:19> 'int' EnumConstant 0x5576c2ebe840 'user_anno_size' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |-EnumConstantDecl 0x5576c2ebea30 <line:657:2, col:40> col:2 USER_ANNO_U16_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5576c2ebed50 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2ebea10 <col:23, col:40> 'int' Int: 16
| |     `-BinaryOperator 0x5576c2ebe9f0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5576c2ebe9b0 <col:23> 'int' EnumConstant 0x5576c2ebe960 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5576c2ebe9d0 <col:40> 'int' 2
| |-EnumConstantDecl 0x5576c2ebeb00 <line:658:2, col:40> col:2 USER_ANNO_U32_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| | `-ImplicitCastExpr 0x5576c2ebed68 <col:23, col:40> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2ebeae0 <col:23, col:40> 'int' Int: 8
| |     `-BinaryOperator 0x5576c2ebeac0 <col:23, col:40> 'int' '/'
| |       |-DeclRefExpr 0x5576c2ebea80 <col:23> 'int' EnumConstant 0x5576c2ebe960 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
| |       `-IntegerLiteral 0x5576c2ebeaa0 <col:40> 'int' 4
| `-EnumConstantDecl 0x5576c2ebebd0 <line:659:2, col:40> col:2 USER_ANNO_U64_SIZE 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|   `-ImplicitCastExpr 0x5576c2ebed80 <col:23, col:40> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5576c2ebebb0 <col:23, col:40> 'int' Int: 4
|       `-BinaryOperator 0x5576c2ebeb90 <col:23, col:40> 'int' '/'
|         |-DeclRefExpr 0x5576c2ebeb50 <col:23> 'int' EnumConstant 0x5576c2ebe960 'USER_ANNO_SIZE' 'Packet::(anonymous enum at ../dummy_inc/click/packet.hh:648:5)'
|         `-IntegerLiteral 0x5576c2ebeb70 <col:40> 'int' 8
|-CXXMethodDecl 0x5576c2ebedc0 <line:661:5, col:79> col:33 buffer_data 'const unsigned char *() const' inline
| `-DeprecatedAttr 0x5576c2ebee60 <col:68> "" ""
|-CXXMethodDecl 0x5576c2ebeef8 <line:662:5, col:56> col:18 addr_anno 'void *()' inline
| `-DeprecatedAttr 0x5576c2ebef98 <col:45> "" ""
|-CXXMethodDecl 0x5576c2ebf030 <line:663:5, col:68> col:24 addr_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5576c2ebf0d0 <col:57> "" ""
|-CXXMethodDecl 0x5576c2ebf168 <line:664:5, col:56> col:18 user_anno 'void *()' inline
| `-DeprecatedAttr 0x5576c2ebf208 <col:45> "" ""
|-CXXMethodDecl 0x5576c2ebf2a0 <line:665:5, col:68> col:24 user_anno 'const void *() const' inline
| `-DeprecatedAttr 0x5576c2ebf340 <col:57> "" ""
|-CXXMethodDecl 0x5576c2ebf3d0 <line:666:5, col:62> col:21 user_anno_u8 'uint8_t *()' inline
| `-DeprecatedAttr 0x5576c2ebf470 <col:51> "" ""
|-CXXMethodDecl 0x5576c2ebf500 <line:667:5, col:74> col:27 user_anno_u8 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5576c2ebf5a0 <col:63> "" ""
|-CXXMethodDecl 0x5576c2ebf630 <line:668:5, col:64> col:22 user_anno_u32 'uint32_t *()' inline
| `-DeprecatedAttr 0x5576c2ebf6d0 <col:53> "" ""
|-CXXMethodDecl 0x5576c2ebf760 <line:669:5, col:76> col:28 user_anno_u32 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5576c2ebf800 <col:65> "" ""
|-CXXMethodDecl 0x5576c2ebf918 <line:670:5, col:72> col:20 user_anno_u8 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5576c2ebf888 <col:33, col:37> col:37 i 'int'
| `-DeprecatedAttr 0x5576c2ebf9c0 <col:61> "" ""
|-CXXMethodDecl 0x5576c2ebfb58 <line:671:5, col:78> col:17 set_user_anno_u8 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5576c2ebfa48 <col:34, col:38> col:38 i 'int'
| |-ParmVarDecl 0x5576c2ebfac0 <col:41, col:49> col:49 v 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5576c2ebfc08 <col:67> "" ""
|-CXXMethodDecl 0x5576c2ebfd20 <line:672:5, col:74> col:21 user_anno_u16 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5576c2ebfc90 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5576c2ebfdc8 <col:63> "" ""
|-CXXMethodDecl 0x5576c2ebff60 <line:673:5, col:80> col:17 set_user_anno_u16 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5576c2ebfe50 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5576c2ebfec8 <col:42, col:51> col:51 v 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5576c2ec0010 <col:69> "" ""
|-CXXMethodDecl 0x5576c2ec0128 <line:674:5, col:74> col:21 user_anno_u32 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5576c2ec0098 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5576c2ec01d0 <col:63> "" ""
|-CXXMethodDecl 0x5576c2ec0368 <line:675:5, col:80> col:17 set_user_anno_u32 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5576c2ec0258 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5576c2ec02d0 <col:42, col:51> col:51 v 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5576c2ec0418 <col:69> "" ""
|-CXXMethodDecl 0x5576c2ec0530 <line:676:5, col:73> col:20 user_anno_s32 'int32_t (int) const' inline
| |-ParmVarDecl 0x5576c2ec04a0 <col:34, col:38> col:38 i 'int'
| `-DeprecatedAttr 0x5576c2ec05d8 <col:62> "" ""
|-CXXMethodDecl 0x5576c2ec0770 <line:677:5, col:79> col:17 set_user_anno_s32 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5576c2ec0660 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5576c2ec06d8 <col:42, col:50> col:50 v 'int32_t':'int'
| `-DeprecatedAttr 0x5576c2ec0820 <col:68> "" ""
|-CXXMethodDecl 0x5576c2ec3950 <line:679:5, col:74> col:21 user_anno_u64 'uint64_t (int) const' inline
| |-ParmVarDecl 0x5576c2ec08a8 <col:35, col:39> col:39 i 'int'
| `-DeprecatedAttr 0x5576c2ec39f8 <col:63> "" ""
|-CXXMethodDecl 0x5576c2ec3b90 <line:680:5, col:80> col:17 set_user_anno_u64 'void (int, uint64_t)' inline
| |-ParmVarDecl 0x5576c2ec3a80 <col:35, col:39> col:39 i 'int'
| |-ParmVarDecl 0x5576c2ec3af8 <col:42, col:51> col:51 v 'uint64_t':'unsigned long'
| `-DeprecatedAttr 0x5576c2ec3c40 <col:69> "" ""
|-CXXMethodDecl 0x5576c2ec3cd0 <line:682:5, col:75> col:27 all_user_anno 'const uint8_t *() const' inline
| `-DeprecatedAttr 0x5576c2ec3d70 <col:64> "" ""
|-CXXMethodDecl 0x5576c2ec3e00 <line:683:5, col:63> col:21 all_user_anno 'uint8_t *()' inline
| `-DeprecatedAttr 0x5576c2ec3ea0 <col:52> "" ""
|-CXXMethodDecl 0x5576c2ec3f30 <line:684:5, col:78> col:28 all_user_anno_u 'const uint32_t *() const' inline
| `-DeprecatedAttr 0x5576c2ec3fd0 <col:67> "" ""
|-CXXMethodDecl 0x5576c2ec4060 <line:685:5, col:66> col:22 all_user_anno_u 'uint32_t *()' inline
| `-DeprecatedAttr 0x5576c2ec4100 <col:55> "" ""
|-CXXMethodDecl 0x5576c2ec4218 <line:686:5, col:69> col:20 user_anno_c 'uint8_t (int) const' inline
| |-ParmVarDecl 0x5576c2ec4188 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5576c2ec42c0 <col:58> "" ""
|-CXXMethodDecl 0x5576c2ec4458 <line:687:5, col:73> col:17 set_user_anno_c 'void (int, uint8_t)' inline
| |-ParmVarDecl 0x5576c2ec4348 <col:33> col:36 'int'
| |-ParmVarDecl 0x5576c2ec43c0 <col:38> col:45 'uint8_t':'unsigned char'
| `-DeprecatedAttr 0x5576c2ec4508 <col:62> "" ""
|-CXXMethodDecl 0x5576c2ec4620 <line:688:5, col:69> col:20 user_anno_s 'int16_t (int) const' inline
| |-ParmVarDecl 0x5576c2ec4590 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5576c2ec46c8 <col:58> "" ""
|-CXXMethodDecl 0x5576c2ec4860 <line:689:5, col:73> col:17 set_user_anno_s 'void (int, int16_t)' inline
| |-ParmVarDecl 0x5576c2ec4750 <col:33> col:36 'int'
| |-ParmVarDecl 0x5576c2ec47c8 <col:38> col:45 'int16_t':'short'
| `-DeprecatedAttr 0x5576c2ec4910 <col:62> "" ""
|-CXXMethodDecl 0x5576c2ec4a28 <line:690:5, col:71> col:21 user_anno_us 'uint16_t (int) const' inline
| |-ParmVarDecl 0x5576c2ec4998 <col:34> col:37 'int'
| `-DeprecatedAttr 0x5576c2ec4ad0 <col:60> "" ""
|-CXXMethodDecl 0x5576c2ec4c68 <line:691:5, col:75> col:17 set_user_anno_us 'void (int, uint16_t)' inline
| |-ParmVarDecl 0x5576c2ec4b58 <col:34> col:37 'int'
| |-ParmVarDecl 0x5576c2ec4bd0 <col:39> col:47 'uint16_t':'unsigned short'
| `-DeprecatedAttr 0x5576c2ec4d18 <col:64> "" ""
|-CXXMethodDecl 0x5576c2ec4e30 <line:692:5, col:69> col:20 user_anno_i 'int32_t (int) const' inline
| |-ParmVarDecl 0x5576c2ec4da0 <col:32> col:35 'int'
| `-DeprecatedAttr 0x5576c2ec4ed8 <col:58> "" ""
|-CXXMethodDecl 0x5576c2ec5070 <line:693:5, col:73> col:17 set_user_anno_i 'void (int, int32_t)' inline
| |-ParmVarDecl 0x5576c2ec4f60 <col:33> col:36 'int'
| |-ParmVarDecl 0x5576c2ec4fd8 <col:38> col:45 'int32_t':'int'
| `-DeprecatedAttr 0x5576c2ec5120 <col:62> "" ""
|-CXXMethodDecl 0x5576c2ec5238 <line:694:5, col:70> col:21 user_anno_u 'uint32_t (int) const' inline
| |-ParmVarDecl 0x5576c2ec51a8 <col:33> col:36 'int'
| `-DeprecatedAttr 0x5576c2ec52e0 <col:59> "" ""
|-CXXMethodDecl 0x5576c2ec5478 <line:695:5, col:74> col:17 set_user_anno_u 'void (int, uint32_t)' inline
| |-ParmVarDecl 0x5576c2ec5368 <col:33> col:36 'int'
| |-ParmVarDecl 0x5576c2ec53e0 <col:38> col:46 'uint32_t':'unsigned int'
| `-DeprecatedAttr 0x5576c2ec5528 <col:63> "" ""
|-AccessSpecDecl 0x5576c2ec5598 <line:698:3, col:10> col:3 private
|-CXXRecordDecl 0x5576c2ec55c0 prev 0x5576c2eb9cd0 <line:702:5, line:711:5> line:702:11 referenced union Anno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5576c2ec56b8 <col:5, col:11> col:11 implicit union Anno
| |-FieldDecl 0x5576c2ec57a8 <line:703:2, col:18> col:7 referenced c 'char [48]'
| |-FieldDecl 0x5576c2ec58d8 <line:704:2, col:22> col:10 referenced u8 'uint8_t [48]'
| |-FieldDecl 0x5576c2ec5a58 <line:705:2, col:28> col:11 u16 'uint16_t [24]'
| |-FieldDecl 0x5576c2ec5bd8 <line:706:2, col:28> col:11 referenced u32 'uint32_t [12]'
| |-FieldDecl 0x5576c2ec5d58 <line:708:2, col:28> col:11 u64 'uint64_t [6]'
| |-CXXConstructorDecl 0x5576c2ed6b38 <line:702:11> col:11 implicit used Anno 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5576c2ed73a8 <col:11>
| |-CXXDestructorDecl 0x5576c2ed6c10 <col:11> col:11 implicit ~Anno 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x5576c2ed6d48 <col:11> col:11 implicit constexpr Anno 'void (const Packet::Anno &)' inline default trivial noexcept-unevaluated 0x5576c2ed6d48
| | `-ParmVarDecl 0x5576c2ed6e58 <col:11> col:11 'const Packet::Anno &'
| |-CXXConstructorDecl 0x5576c2ed6ef8 <col:11> col:11 implicit constexpr Anno 'void (Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5576c2ed6ef8
| | `-ParmVarDecl 0x5576c2ed7008 <col:11> col:11 'Packet::Anno &&'
| |-CXXMethodDecl 0x5576c2ed9d68 <col:11> col:11 implicit used constexpr operator= 'Packet::Anno &(const Packet::Anno &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5576c2ed9e78 <col:11> col:11 'const Packet::Anno &'
| | `-CompoundStmt 0x5576c2eda0f8 <col:11>
| |   `-ReturnStmt 0x5576c2eda0e8 <col:11>
| |     `-UnaryOperator 0x5576c2eda0d0 <col:11> 'Packet::Anno' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5576c2eda0c0 <col:11> 'Packet::Anno *' this
| `-CXXMethodDecl 0x5576c2ed9ee8 <col:11> col:11 implicit constexpr operator= 'Packet::Anno &(Packet::Anno &&)' inline default trivial noexcept-unevaluated 0x5576c2ed9ee8
|   `-ParmVarDecl 0x5576c2ed9ff8 <col:11> col:11 'Packet::Anno &&'
|-CXXRecordDecl 0x5576c2ec5dc0 <line:716:5, line:725:5> line:716:12 referenced struct AllAnno definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5576c2ec5ed8 <col:5, col:12> col:12 implicit struct AllAnno
| |-FieldDecl 0x5576c2ec5f78 <line:717:2, col:7> col:7 cb 'Packet::Anno'
| |-FieldDecl 0x5576c2ec5fe0 <line:718:2, col:17> col:17 referenced mac 'unsigned char *'
| |-FieldDecl 0x5576c2ec6048 <line:719:2, col:17> col:17 referenced nh 'unsigned char *'
| |-FieldDecl 0x5576c2ec60b0 <line:720:2, col:17> col:17 referenced h 'unsigned char *'
| |-FieldDecl 0x5576c2ec6110 <line:721:2, col:13> col:13 pkt_type 'Packet::PacketType'
| |-FieldDecl 0x5576c2ec61d0 <line:722:2, col:34> col:7 timestamp 'char [8]'
| |-FieldDecl 0x5576c2ec6230 <line:723:2, col:10> col:10 referenced next 'Packet *'
| |-FieldDecl 0x5576c2ec6290 <line:724:2, col:10> col:10 referenced prev 'Packet *'
| |-CXXConstructorDecl 0x5576c2ed6a48 <line:716:12> col:12 implicit used AllAnno 'void () noexcept' inline default trivial
| | |-CXXCtorInitializer Field 0x5576c2ec5f78 'cb' 'Packet::Anno'
| | | `-CXXConstructExpr 0x5576c2ed73b8 <col:12> 'Packet::Anno' 'void () noexcept'
| | `-CompoundStmt 0x5576c2ed7410 <col:12>
| |-CXXConstructorDecl 0x5576c2ed7078 <col:12> col:12 implicit constexpr AllAnno 'void (const Packet::AllAnno &)' inline default trivial noexcept-unevaluated 0x5576c2ed7078
| | `-ParmVarDecl 0x5576c2ed7188 <col:12> col:12 'const Packet::AllAnno &'
| |-CXXConstructorDecl 0x5576c2ed7228 <col:12> col:12 implicit constexpr AllAnno 'void (Packet::AllAnno &&)' inline default trivial noexcept-unevaluated 0x5576c2ed7228
| | `-ParmVarDecl 0x5576c2ed7338 <col:12> col:12 'Packet::AllAnno &&'
| `-CXXDestructorDecl 0x5576c2ed9450 <col:12> col:12 implicit ~AllAnno 'void () noexcept' inline default trivial
|-FieldDecl 0x5576c2ec6308 <line:731:5, col:21> col:21 referenced _use_count 'atomic_uint32_t'
|-FieldDecl 0x5576c2ec6368 <line:732:5, col:13> col:13 referenced _data_packet 'Packet *'
|-FieldDecl 0x5576c2ec63d0 <line:734:5, col:20> col:20 referenced _head 'unsigned char *'
|-FieldDecl 0x5576c2ec6438 <line:735:5, col:20> col:20 referenced _data 'unsigned char *'
|-FieldDecl 0x5576c2ec64a0 <line:736:5, col:20> col:20 referenced _tail 'unsigned char *'
|-FieldDecl 0x5576c2ec6508 <line:737:5, col:20> col:20 referenced _end 'unsigned char *'
|-FieldDecl 0x5576c2ec6568 <line:741:5, col:13> col:13 referenced _aa 'Packet::AllAnno'
|-FieldDecl 0x5576c2ec65c8 <line:746:5, col:28> col:28 referenced _destructor 'Packet::buffer_destructor_type':'void (*)(unsigned char *, size_t, void *)'
|-FieldDecl 0x5576c2ec6630 <line:747:5, col:11> col:11 referenced _destructor_argument 'void *'
|-CXXConstructorDecl 0x5576c2ec66b8 <line:751:5, line:755:5> line:751:12 used Packet 'void ()' inline
| |-CXXCtorInitializer Field 0x5576c2ec6308 '_use_count' 'atomic_uint32_t'
| | `-CXXConstructExpr 0x5576c2ed69e0 <col:12> 'atomic_uint32_t' 'void () noexcept'
| |-CXXCtorInitializer Field 0x5576c2ec6568 '_aa' 'Packet::AllAnno'
| | `-CXXConstructExpr 0x5576c2ed7420 <col:12> 'Packet::AllAnno' 'void () noexcept'
| `-CompoundStmt 0x5576c2ed7480 <col:21, line:755:5>
|-CXXConstructorDecl 0x5576c2ec6858 <line:756:5, col:27> col:5 Packet 'void (const Packet &)'
| `-ParmVarDecl 0x5576c2ec6798 <col:12, col:26> col:26 x 'const Packet &'
|-CXXDestructorDecl 0x5576c2ec6950 <line:757:5, col:13> col:5 used ~Packet 'void () noexcept'
|-CXXMethodDecl 0x5576c2ec6b38 <line:758:5, col:38> col:13 operator= 'Packet &(const Packet &)'
| `-ParmVarDecl 0x5576c2ec6a40 <col:23, col:37> col:37 x 'const Packet &'
|-CXXMethodDecl 0x5576c2ec6e08 <line:761:5, col:74> col:10 alloc_data 'bool (uint32_t, uint32_t, uint32_t)'
| |-ParmVarDecl 0x5576c2ec6bf0 <col:21, col:30> col:30 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5576c2ec6c68 <col:40, col:49> col:49 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5576c2ec6ce0 <col:57, col:66> col:66 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5576c2ec7028 <line:768:5, col:95> col:17 shift_header_annotations 'void (const unsigned char *, int32_t)' inline
| |-ParmVarDecl 0x5576c2ec6ed8 <col:42, col:63> col:63 old_head 'const unsigned char *'
| `-ParmVarDecl 0x5576c2ec6f50 <col:73, col:81> col:81 extra_headroom 'int32_t':'int'
|-CXXMethodDecl 0x5576c2ec72f8 <line:769:5, col:109> col:21 expensive_uniqueify 'WritablePacket *(int32_t, int32_t, bool)'
| |-ParmVarDecl 0x5576c2ec70e8 <col:41, col:49> col:49 extra_headroom 'int32_t':'int'
| |-ParmVarDecl 0x5576c2ec7160 <col:65, col:73> col:73 extra_tailroom 'int32_t':'int'
| `-ParmVarDecl 0x5576c2ec71d8 <col:89, col:94> col:94 free_on_failure 'bool'
|-CXXMethodDecl 0x5576c2ec7450 <line:770:5, col:51> col:21 used expensive_push 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5576c2ec73c0 <col:36, col:45> col:45 nbytes 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5576c2ec7598 <line:771:5, col:50> col:21 used expensive_put 'WritablePacket *(uint32_t)'
| `-ParmVarDecl 0x5576c2ec7508 <col:35, col:44> col:44 nbytes 'uint32_t':'unsigned int'
`-FriendDecl 0x5576c2ec7690 <line:773:5, col:18> col:12 'class WritablePacket':'WritablePacket'

Layout: <CGRecordLayout
  LLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  NonVirtualBaseLLVMType:%class.Packet = type { %class.atomic_uint32_t, %class.Packet*, i8*, i8*, i8*, i8*, %"struct.Packet::AllAnno", void (i8*, i64, i8*)*, i8* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2ce0a28 prev 0x5576c2cbc058 <../dummy_inc/click/ipaddress.hh:15:1, line:154:1> line:15:7 referenced class IPAddress definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5576c2ce0b20 <col:1, col:7> col:7 implicit referenced class IPAddress
|-AccessSpecDecl 0x5576c2ce0bb0 <col:19, col:25> col:19 public
|-TypedefDecl 0x5576c2ce0be8 <line:17:5, col:32> col:32 uninitialized_t 'uninitialized_type'
| `-RecordType 0x5576c2b02230 'uninitialized_type'
|   `-CXXRecord 0x5576c2b02198 'uninitialized_type'
|-CXXConstructorDecl 0x5576c2ce0ca0 <line:20:5, line:22:5> line:20:12 IPAddress 'void ()' inline
| |-CXXCtorInitializer Field 0x5576c2ce62a0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5576c2ce6348 <line:21:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-IntegerLiteral 0x5576c2ce6308 <col:10> 'int' 0
| `-CompoundStmt 0x5576c2ce6390 <col:13, line:22:5>
|-CXXConstructorDecl 0x5576c2ce0df0 <line:25:5, line:27:5> line:25:12 used IPAddress 'void (unsigned int)' inline
| |-ParmVarDecl 0x5576c2ce0d60 <col:22, col:31> col:31 used x 'unsigned int'
| |-CXXCtorInitializer Field 0x5576c2ce62a0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5576c2ce63e0 <line:26:10> 'unsigned int' <LValueToRValue>
| |   `-DeclRefExpr 0x5576c2ce63a0 <col:10> 'unsigned int' lvalue ParmVar 0x5576c2ce0d60 'x' 'unsigned int'
| `-CompoundStmt 0x5576c2ce6428 <col:13, line:27:5>
|-CXXConstructorDecl 0x5576c2ce0f48 <line:29:5, line:31:5> line:29:21 IPAddress 'void (int)' inline
| |-ParmVarDecl 0x5576c2ce0eb8 <col:31, col:35> col:35 used x 'int'
| |-CXXCtorInitializer Field 0x5576c2ce62a0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5576c2ce6490 <line:30:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x5576c2ce6478 <col:10> 'int' <LValueToRValue>
| |     `-DeclRefExpr 0x5576c2ce6438 <col:10> 'int' lvalue ParmVar 0x5576c2ce0eb8 'x' 'int'
| `-CompoundStmt 0x5576c2ce64d8 <col:13, line:31:5>
|-CXXConstructorDecl 0x5576c2ce10a0 <line:33:5, line:35:5> line:33:21 IPAddress 'void (unsigned long)' inline
| |-ParmVarDecl 0x5576c2ce1010 <col:31, col:45> col:45 used x 'unsigned long'
| |-CXXCtorInitializer Field 0x5576c2ce62a0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5576c2ce6540 <line:34:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x5576c2ce6528 <col:10> 'unsigned long' <LValueToRValue>
| |     `-DeclRefExpr 0x5576c2ce64e8 <col:10> 'unsigned long' lvalue ParmVar 0x5576c2ce1010 'x' 'unsigned long'
| `-CompoundStmt 0x5576c2ce6588 <col:13, line:35:5>
|-CXXConstructorDecl 0x5576c2ce11f8 <line:37:5, line:39:5> line:37:21 IPAddress 'void (long)' inline
| |-ParmVarDecl 0x5576c2ce1168 <col:31, col:36> col:36 used x 'long'
| |-CXXCtorInitializer Field 0x5576c2ce62a0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5576c2ce65f0 <line:38:10> 'uint32_t':'unsigned int' <IntegralCast>
| |   `-ImplicitCastExpr 0x5576c2ce65d8 <col:10> 'long' <LValueToRValue>
| |     `-DeclRefExpr 0x5576c2ce6598 <col:10> 'long' lvalue ParmVar 0x5576c2ce1168 'x' 'long'
| `-CompoundStmt 0x5576c2ce6638 <col:13, line:39:5>
|-CXXConstructorDecl 0x5576c2ce13b8 <line:42:5, line:44:5> line:42:12 IPAddress 'void (struct in_addr)' inline
| |-ParmVarDecl 0x5576c2ce12c8 <col:22, col:37> col:37 used x 'struct in_addr':'in_addr'
| |-CXXCtorInitializer Field 0x5576c2ce62a0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5576c2ce66b8 <line:43:10, col:12> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x5576c2ce6668 <col:10, col:12> 'in_addr_t':'unsigned int' lvalue .s_addr 0x5576c2c2a720
| |     `-DeclRefExpr 0x5576c2ce6648 <col:10> 'struct in_addr':'in_addr' lvalue ParmVar 0x5576c2ce12c8 'x' 'struct in_addr':'in_addr'
| `-CompoundStmt 0x5576c2ce6700 <col:20, line:44:5>
|-CXXConstructorDecl 0x5576c2ce1548 <line:50:5, line:56:5> line:50:14 IPAddress 'void (const unsigned char *)'
| |-ParmVarDecl 0x5576c2ce1480 <col:24, col:45> col:45 used data 'const unsigned char *'
| `-CompoundStmt 0x5576c2ce6868 <col:51, line:56:5>
|   `-BinaryOperator 0x5576c2ce6848 <line:52:2, col:52> 'uint32_t':'unsigned int' lvalue '='
|     |-MemberExpr 0x5576c2ce6720 <col:2> 'uint32_t':'unsigned int' lvalue ->_addr 0x5576c2ce62a0
|     | `-CXXThisExpr 0x5576c2ce6710 <col:2> 'IPAddress *' implicit this
|     `-ImplicitCastExpr 0x5576c2ce6830 <col:10, col:52> 'unsigned int' <LValueToRValue>
|       `-UnaryOperator 0x5576c2ce6818 <col:10, col:52> 'const unsigned int' lvalue prefix '*' cannot overflow
|         `-ParenExpr 0x5576c2ce67f8 <col:11, col:52> 'const unsigned int *'
|           `-CXXReinterpretCastExpr 0x5576c2ce67c8 <col:12, col:51> 'const unsigned int *' reinterpret_cast<const unsigned int *> <BitCast>
|             `-ImplicitCastExpr 0x5576c2ce67b0 <col:47> 'const unsigned char *' <LValueToRValue> part_of_explicit_cast
|               `-DeclRefExpr 0x5576c2ce6750 <col:47> 'const unsigned char *' lvalue ParmVar 0x5576c2ce1480 'data' 'const unsigned char *'
|-CXXConstructorDecl 0x5576c2ce1698 <line:63:5, col:39> col:14 IPAddress 'void (const String &)'
| `-ParmVarDecl 0x5576c2ce1608 <col:24, col:38> col:38 x 'const String &'
|-CXXConstructorDecl 0x5576c2ce1848 <line:66:5, line:68:5> line:66:12 IPAddress 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x5576c2ce1788 <col:22, col:48> col:48 used unused 'const uninitialized_type &'
| `-CompoundStmt 0x5576c2ce68d8 <col:56, line:68:5>
|   `-CStyleCastExpr 0x5576c2ce68b0 <line:67:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x5576c2ce6880 <col:9> 'const uninitialized_type' lvalue ParmVar 0x5576c2ce1788 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x5576c2ce19d8 <line:78:5, col:48> col:22 make_prefix 'IPAddress (int)' static
| `-ParmVarDecl 0x5576c2ce1910 <col:34, col:38> col:38 prefix_len 'int'
|-CXXMethodDecl 0x5576c2ce1ac8 <line:81:5, line:83:5> line:81:29 make_broadcast 'IPAddress ()' static inline
| `-CompoundStmt 0x5576c2ce7898 <col:46, line:83:5>
|   `-ReturnStmt 0x5576c2ce7888 <line:82:2, col:29>
|     `-ExprWithCleanups 0x5576c2ce7870 <col:9, col:29> 'IPAddress'
|       `-CXXConstructExpr 0x5576c2ce7840 <col:9, col:29> 'IPAddress' 'void (IPAddress &&) noexcept' elidable
|         `-MaterializeTemporaryExpr 0x5576c2ce76f8 <col:9, col:29> 'IPAddress' xvalue
|           `-CXXFunctionalCastExpr 0x5576c2ce75e0 <col:9, col:29> 'IPAddress' functional cast to class IPAddress <ConstructorConversion>
|             `-CXXConstructExpr 0x5576c2ce74c8 <col:9, col:29> 'IPAddress' 'void (unsigned int)'
|               `-IntegerLiteral 0x5576c2ce6900 <col:19> 'unsigned int' 4294967295
|-CXXMethodDecl 0x5576c2ce1bb8 <line:86:5, line:88:5> line:86:17 empty 'bool () const' inline
| `-CompoundStmt 0x5576c2ce7948 <col:31, line:88:5>
|   `-ReturnStmt 0x5576c2ce7938 <line:87:2, col:10>
|     `-UnaryOperator 0x5576c2ce7920 <col:9, col:10> 'bool' prefix '!' cannot overflow
|       `-ImplicitCastExpr 0x5576c2ce7908 <col:10> 'bool' <IntegralToBoolean>
|         `-ImplicitCastExpr 0x5576c2ce78f0 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|           `-MemberExpr 0x5576c2ce78c0 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5576c2ce62a0
|             `-CXXThisExpr 0x5576c2ce78b0 <col:10> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x5576c2ce1c78 <line:91:5, line:93:5> line:91:21 used addr 'uint32_t () const' inline
| `-CompoundStmt 0x5576c2ce79c8 <col:34, line:93:5>
|   `-ReturnStmt 0x5576c2ce79b8 <line:92:2, col:9>
|     `-ImplicitCastExpr 0x5576c2ce79a0 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5576c2ce7970 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5576c2ce62a0
|         `-CXXThisExpr 0x5576c2ce7960 <col:9> 'const IPAddress *' implicit this
|-CXXConversionDecl 0x5576c2ce1d48 <line:99:5, line:101:5> line:99:12 operator unsigned int 'uint32_t () const' inline
| `-CompoundStmt 0x5576c2ce7a48 <col:38, line:101:5>
|   `-ReturnStmt 0x5576c2ce7a38 <line:100:2, col:9>
|     `-ImplicitCastExpr 0x5576c2ce7a20 <col:9> 'uint32_t':'unsigned int' <LValueToRValue>
|       `-MemberExpr 0x5576c2ce79f0 <col:9> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5576c2ce62a0
|         `-CXXThisExpr 0x5576c2ce79e0 <col:9> 'const IPAddress *' implicit this
|-CXXMethodDecl 0x5576c2ce1e18 <line:106:5, line:108:5> line:106:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x5576c2ce7d18 <col:38, line:108:5>
|   `-ReturnStmt 0x5576c2ce7d08 <line:107:2, col:58>
|     `-BinaryOperator 0x5576c2ce7ce8 <col:9, col:58> 'bool' '=='
|       |-ParenExpr 0x5576c2ce7c00 <col:9, col:36> 'unsigned int'
|       | `-BinaryOperator 0x5576c2ce7be0 <col:10, col:35> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x5576c2ce7bc8 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x5576c2ce7a70 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5576c2ce62a0
|       |   |   `-CXXThisExpr 0x5576c2ce7a60 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x5576c2ce7ba0 <col:18, col:35> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x5576c2ce7b88 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x5576c2ce7b08 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x5576c2c378c0 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x5576c2ce7ae8 <col:24> 'unsigned int' 4026531840
|       `-CallExpr 0x5576c2ce7cc0 <col:41, col:58> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x5576c2ce7ca8 <col:41> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5576c2ce7c88 <col:41> 'uint32_t (uint32_t) throw()' lvalue Function 0x5576c2c378c0 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x5576c2ce7c68 <col:47> 'unsigned int' 3758096384
|-CXXMethodDecl 0x5576c2ce1ed8 <line:110:5, line:112:5> line:110:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x5576c2ce7f88 <col:39, line:112:5>
|   `-ReturnStmt 0x5576c2ce7f78 <line:111:2, col:56>
|     `-BinaryOperator 0x5576c2ce7f58 <col:9, col:56> 'bool' '=='
|       |-ParenExpr 0x5576c2ce7e70 <col:9, col:35> 'unsigned int'
|       | `-BinaryOperator 0x5576c2ce7e50 <col:10, col:34> 'unsigned int' '&'
|       |   |-ImplicitCastExpr 0x5576c2ce7e38 <col:10> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-MemberExpr 0x5576c2ce7d40 <col:10> 'const uint32_t':'const unsigned int' lvalue ->_addr 0x5576c2ce62a0
|       |   |   `-CXXThisExpr 0x5576c2ce7d30 <col:10> 'const IPAddress *' implicit this
|       |   `-CallExpr 0x5576c2ce7e10 <col:18, col:34> 'uint32_t':'unsigned int'
|       |     |-ImplicitCastExpr 0x5576c2ce7df8 <col:18> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x5576c2ce7dd8 <col:18> 'uint32_t (uint32_t) throw()' lvalue Function 0x5576c2c378c0 'htonl' 'uint32_t (uint32_t) throw()'
|       |     `-IntegerLiteral 0x5576c2ce7db8 <col:24> 'unsigned int' 4294901760
|       `-CallExpr 0x5576c2ce7f30 <col:40, col:56> 'uint32_t':'unsigned int'
|         |-ImplicitCastExpr 0x5576c2ce7f18 <col:40> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|         | `-DeclRefExpr 0x5576c2ce7ef8 <col:40> 'uint32_t (uint32_t) throw()' lvalue Function 0x5576c2c378c0 'htonl' 'uint32_t (uint32_t) throw()'
|         `-IntegerLiteral 0x5576c2ce7ed8 <col:46> 'unsigned int' 2851995648
|-CXXMethodDecl 0x5576c2ce2008 <line:114:5, col:37> col:27 used in_addr 'struct in_addr () const' inline
|-CXXConversionDecl 0x5576c2ce2110 <line:115:5, col:38> col:12 used operator in_addr 'struct in_addr () const' inline
|-CXXMethodDecl 0x5576c2ce2220 <line:117:5, col:32> col:27 data 'unsigned char *()' inline
|-CXXMethodDecl 0x5576c2ce2310 <line:118:5, col:40> col:33 data 'const unsigned char *() const' inline
|-CXXMethodDecl 0x5576c2ce23d0 <line:120:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x5576c2ce2498 <line:122:5, col:30> col:9 mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x5576c2ce2698 <line:123:5, col:64> col:17 matches_prefix 'bool (IPAddress, IPAddress) const' inline
| |-ParmVarDecl 0x5576c2ce2548 <col:32, col:42> col:42 addr 'IPAddress'
| `-ParmVarDecl 0x5576c2ce25c0 <col:48, col:58> col:58 mask 'IPAddress'
|-CXXMethodDecl 0x5576c2ce5690 <line:124:5, col:50> col:17 mask_as_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x5576c2ce2758 <col:34, col:44> col:44 mask 'IPAddress'
|-CXXMethodDecl 0x5576c2ce57d8 <line:125:5, col:52> col:17 mask_more_specific 'bool (IPAddress) const' inline
| `-ParmVarDecl 0x5576c2ce5748 <col:36, col:46> col:46 mask 'IPAddress'
|-CXXMethodDecl 0x5576c2ce5988 <line:137:5, col:43> col:23 operator&= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x5576c2ce5890 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x5576c2ce5ad0 <line:138:5, col:43> col:23 operator|= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x5576c2ce5a40 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x5576c2ce5c18 <line:139:5, col:43> col:23 operator^= 'IPAddress &(IPAddress)' inline
| `-ParmVarDecl 0x5576c2ce5b88 <col:34> col:43 'IPAddress'
|-CXXMethodDecl 0x5576c2ce5ce0 <line:141:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x5576c2ce5da0 <line:142:5, col:27> col:12 unparse_mask 'String () const'
|-CXXMethodDecl 0x5576c2ce5f18 <line:143:5, col:41> col:12 unparse_with_mask 'String (IPAddress) const'
| `-ParmVarDecl 0x5576c2ce5e50 <col:30> col:39 'IPAddress'
|-CXXMethodDecl 0x5576c2ce5fe0 <line:145:5, col:23> col:19 s 'String () const' inline
|-CXXConversionDecl 0x5576c2ce60c8 <line:146:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x5576c2ce6170 <col:51> "" ""
|-TypedefDecl 0x5576c2ce6210 <line:148:5, col:23> col:23 parameter_type 'IPAddress'
| `-RecordType 0x5576c2cbc0f0 'IPAddress'
|   `-CXXRecord 0x5576c2ce0a28 'IPAddress'
|-AccessSpecDecl 0x5576c2ce6268 <line:150:3, col:10> col:3 private
|-FieldDecl 0x5576c2ce62a0 <line:152:5, col:14> col:14 referenced _addr 'uint32_t':'unsigned int'
|-CXXConstructorDecl 0x5576c2ce6948 <line:15:7> col:7 implicit constexpr IPAddress 'void (const IPAddress &)' inline default trivial noexcept-unevaluated 0x5576c2ce6948
| `-ParmVarDecl 0x5576c2ce6a58 <col:7> col:7 'const IPAddress &'
|-CXXConstructorDecl 0x5576c2ce6af8 <col:7> col:7 implicit used constexpr IPAddress 'void (IPAddress &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5576c2ce6c08 <col:7> col:7 used 'IPAddress &&'
| |-CXXCtorInitializer Field 0x5576c2ce62a0 '_addr' 'uint32_t':'unsigned int'
| | `-ImplicitCastExpr 0x5576c2ce77e8 <col:7> 'uint32_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x5576c2ce77a0 <col:7> 'uint32_t':'unsigned int' xvalue ._addr 0x5576c2ce62a0
| |     `-CXXStaticCastExpr 0x5576c2ce7770 <col:7> 'IPAddress' xvalue static_cast<class IPAddress &&> <NoOp>
| |       `-DeclRefExpr 0x5576c2ce7740 <col:7> 'IPAddress' lvalue ParmVar 0x5576c2ce6c08 '' 'IPAddress &&'
| `-CompoundStmt 0x5576c2ce7830 <col:7>
`-CXXDestructorDecl 0x5576c2ce74f8 <col:7> col:7 implicit referenced ~IPAddress 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IPAddress = type { i32 }
  NonVirtualBaseLLVMType:%class.IPAddress = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_ip6
         0 |   union click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:17:5) ip6_ctlun
         0 |     struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:18:2) ip6_un1
         0 |       uint32_t ip6_un1_flow
         4 |       uint16_t ip6_un1_plen
         6 |       uint8_t ip6_un1_nxt
         7 |       uint8_t ip6_un1_hlim
         0 |     uint8_t ip6_un2_vfc
         0 |     struct click_ip6::(anonymous at ../dummy_inc/clicknet/ip6.h:30:2) ip6_un3
     0:0-3 |       unsigned int ip6_un3_fc
     0:4-7 |       unsigned int ip6_un3_v
         8 |   struct in6_addr ip6_src
         8 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         8 |       uint8_t [16] __u6_addr8
         8 |       uint16_t [8] __u6_addr16
         8 |       uint32_t [4] __u6_addr32
        24 |   struct in6_addr ip6_dst
        24 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
        24 |       uint8_t [16] __u6_addr8
        24 |       uint16_t [8] __u6_addr16
        24 |       uint32_t [4] __u6_addr32
           | [sizeof=40, dsize=40, align=4,
           |  nvsize=40, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2c40b68 <../dummy_inc/clicknet/ip6.h:18:2, line:27:2> line:18:2 struct definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x5576c2c40c98 <line:19:6, col:15> col:15 ip6_un1_flow 'uint32_t':'unsigned int'
|-FieldDecl 0x5576c2c40cf8 <line:24:6, col:15> col:15 referenced ip6_un1_plen 'uint16_t':'unsigned short'
|-FieldDecl 0x5576c2c40d58 <line:25:6, col:14> col:14 referenced ip6_un1_nxt 'uint8_t':'unsigned char'
`-FieldDecl 0x5576c2c40db8 <line:26:6, col:14> col:14 referenced ip6_un1_hlim 'uint8_t':'unsigned char'

Layout: <CGRecordLayout
  LLVMType:%struct.anon = type { i32, i16, i8, i8 }
  NonVirtualBaseLLVMType:%struct.anon = type { i32, i16, i8, i8 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2c40f40 <../dummy_inc/clicknet/ip6.h:30:2, line:38:2> line:30:2 struct definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-FieldDecl 0x5576c2c410b0 <line:35:6, col:28> col:15 ip6_un3_fc 'unsigned int'
| `-ConstantExpr 0x5576c2c41090 <col:28> 'int' Int: 4
|   `-IntegerLiteral 0x5576c2c41058 <col:28> 'int' 4
`-FieldDecl 0x5576c2c41158 <line:36:6, col:27> col:15 ip6_un3_v 'unsigned int'
  `-ConstantExpr 0x5576c2c41138 <col:27> 'int' Int: 4
    `-IntegerLiteral 0x5576c2c41100 <col:27> 'int' 4

Layout: <CGRecordLayout
  LLVMType:%struct.anon.0 = type { i8, [3 x i8] }
  NonVirtualBaseLLVMType:%struct.anon.0 = type { i8, [3 x i8] }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2c40a48 <../dummy_inc/clicknet/ip6.h:17:5, line:39:5> line:17:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5576c2c40b68 <line:18:2, line:27:2> line:18:2 struct definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x5576c2c40c98 <line:19:6, col:15> col:15 ip6_un1_flow 'uint32_t':'unsigned int'
| |-FieldDecl 0x5576c2c40cf8 <line:24:6, col:15> col:15 referenced ip6_un1_plen 'uint16_t':'unsigned short'
| |-FieldDecl 0x5576c2c40d58 <line:25:6, col:14> col:14 referenced ip6_un1_nxt 'uint8_t':'unsigned char'
| `-FieldDecl 0x5576c2c40db8 <line:26:6, col:14> col:14 referenced ip6_un1_hlim 'uint8_t':'unsigned char'
|-FieldDecl 0x5576c2c40e78 <line:18:2, line:27:4> col:4 referenced ip6_un1 'struct (anonymous struct at ../dummy_inc/clicknet/ip6.h:18:2)':'click_ip6::(anonymous struct at ../dummy_inc/clicknet/ip6.h:18:2)'
|-FieldDecl 0x5576c2c40ef0 <line:28:2, col:10> col:10 ip6_un2_vfc 'uint8_t':'unsigned char'
|-CXXRecordDecl 0x5576c2c40f40 <line:30:2, line:38:2> line:30:2 struct definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-FieldDecl 0x5576c2c410b0 <line:35:6, col:28> col:15 ip6_un3_fc 'unsigned int'
| | `-ConstantExpr 0x5576c2c41090 <col:28> 'int' Int: 4
| |   `-IntegerLiteral 0x5576c2c41058 <col:28> 'int' 4
| `-FieldDecl 0x5576c2c41158 <line:36:6, col:27> col:15 ip6_un3_v 'unsigned int'
|   `-ConstantExpr 0x5576c2c41138 <col:27> 'int' Int: 4
|     `-IntegerLiteral 0x5576c2c41100 <col:27> 'int' 4
`-FieldDecl 0x5576c2c41218 <line:30:2, line:38:4> col:4 ip6_un3 'struct (anonymous struct at ../dummy_inc/clicknet/ip6.h:30:2)':'click_ip6::(anonymous struct at ../dummy_inc/clicknet/ip6.h:30:2)'

Layout: <CGRecordLayout
  LLVMType:%union.anon = type { %struct.anon }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2c300c8 </usr/include/netinet/in.h:214:5, line:219:7> line:214:5 union definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-FieldDecl 0x5576c2c302e8 <line:216:2, col:23> col:10 referenced __u6_addr8 'uint8_t [16]'
|-FieldDecl 0x5576c2c30418 <line:217:2, col:24> col:11 __u6_addr16 'uint16_t [8]'
|-FieldDecl 0x5576c2c30548 <line:218:2, col:24> col:11 __u6_addr32 'uint32_t [4]'
|-CXXConstructorDecl 0x5576c2ef28f8 <line:214:5> col:5 implicit used  'void () noexcept' inline default trivial
| `-CompoundStmt 0x5576c2ef3108 <col:5>
|-CXXDestructorDecl 0x5576c2ef29d0 <col:5> col:5 implicit ~ 'void () noexcept' inline default trivial
|-CXXConstructorDecl 0x5576c2ef2ad8 <col:5> col:5 implicit used constexpr  'void (const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept' inline default trivial
| |-ParmVarDecl 0x5576c2ef2be8 <col:5> col:5 'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &'
| `-CompoundStmt 0x5576c2ef4b10 <col:5>
|-CXXConstructorDecl 0x5576c2ef2c88 <col:5> col:5 implicit used constexpr  'void (in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5576c2ef2d98 <col:5> col:5 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&'
| `-CompoundStmt 0x5576c2e6f628 <col:5>
|-CXXMethodDecl 0x5576c2ef3838 <col:5> col:5 implicit used constexpr operator= 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &(const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept' inline default trivial
| |-ParmVarDecl 0x5576c2ef3948 <col:5> col:5 'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &'
| `-CompoundStmt 0x5576c2f0bd90 <col:5>
|   `-ReturnStmt 0x5576c2f0bd80 <col:5>
|     `-UnaryOperator 0x5576c2f0bd68 <col:5> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5576c2f0bd58 <col:5> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) *' this
`-CXXMethodDecl 0x5576c2ef39b8 <col:5> col:5 implicit constexpr operator= 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &(in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&)' inline default trivial noexcept-unevaluated 0x5576c2ef39b8
  `-ParmVarDecl 0x5576c2ef3ac8 <col:5> col:5 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&'

Layout: <CGRecordLayout
  LLVMType:%union.anon.1 = type { [4 x i32] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2c2ff20 </usr/include/netinet/in.h:212:1, line:225:3> line:212:8 struct in6_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5576c2c30038 <col:1, col:8> col:8 implicit struct in6_addr
|-CXXRecordDecl 0x5576c2c300c8 <line:214:5, line:219:7> line:214:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-FieldDecl 0x5576c2c302e8 <line:216:2, col:23> col:10 referenced __u6_addr8 'uint8_t [16]'
| |-FieldDecl 0x5576c2c30418 <line:217:2, col:24> col:11 __u6_addr16 'uint16_t [8]'
| |-FieldDecl 0x5576c2c30548 <line:218:2, col:24> col:11 __u6_addr32 'uint32_t [4]'
| |-CXXConstructorDecl 0x5576c2ef28f8 <line:214:5> col:5 implicit used  'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5576c2ef3108 <col:5>
| |-CXXDestructorDecl 0x5576c2ef29d0 <col:5> col:5 implicit ~ 'void () noexcept' inline default trivial
| |-CXXConstructorDecl 0x5576c2ef2ad8 <col:5> col:5 implicit used constexpr  'void (const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5576c2ef2be8 <col:5> col:5 'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &'
| | `-CompoundStmt 0x5576c2ef4b10 <col:5>
| |-CXXConstructorDecl 0x5576c2ef2c88 <col:5> col:5 implicit used constexpr  'void (in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&) noexcept' inline default trivial
| | |-ParmVarDecl 0x5576c2ef2d98 <col:5> col:5 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&'
| | `-CompoundStmt 0x5576c2e6f628 <col:5>
| |-CXXMethodDecl 0x5576c2ef3838 <col:5> col:5 implicit used constexpr operator= 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &(const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5576c2ef3948 <col:5> col:5 'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &'
| | `-CompoundStmt 0x5576c2f0bd90 <col:5>
| |   `-ReturnStmt 0x5576c2f0bd80 <col:5>
| |     `-UnaryOperator 0x5576c2f0bd68 <col:5> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5576c2f0bd58 <col:5> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) *' this
| `-CXXMethodDecl 0x5576c2ef39b8 <col:5> col:5 implicit constexpr operator= 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &(in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&)' inline default trivial noexcept-unevaluated 0x5576c2ef39b8
|   `-ParmVarDecl 0x5576c2ef3ac8 <col:5> col:5 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&'
|-FieldDecl 0x5576c2c30608 <col:5, line:219:9> col:9 referenced __in6_u 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)'
|-CXXConstructorDecl 0x5576c2ef2808 <line:212:8> col:8 implicit used in6_addr 'void () noexcept' inline default trivial
| |-CXXCtorInitializer Field 0x5576c2c30608 '__in6_u' 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)'
| | `-CXXConstructExpr 0x5576c2ef3118 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' 'void () noexcept'
| `-CompoundStmt 0x5576c2ef3170 <col:8>
|-CXXConstructorDecl 0x5576c2ef2e08 <col:8> col:8 implicit used constexpr in6_addr 'void (const in6_addr &) noexcept' inline default trivial
| |-ParmVarDecl 0x5576c2ef2ee8 <col:8> col:8 used 'const in6_addr &'
| |-CXXCtorInitializer Field 0x5576c2c30608 '__in6_u' 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)'
| | `-CXXConstructExpr 0x5576c2ef4b20 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' 'void (const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &) noexcept'
| |   `-MemberExpr 0x5576c2ef4ae0 <col:8> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5576c2c30608
| |     `-DeclRefExpr 0x5576c2ef4ac0 <col:8> 'const in6_addr' lvalue ParmVar 0x5576c2ef2ee8 '' 'const in6_addr &'
| `-CompoundStmt 0x5576c2ef4b80 <col:8>
|-CXXConstructorDecl 0x5576c2ef2f88 <col:8> col:8 implicit used constexpr in6_addr 'void (in6_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5576c2ef3098 <col:8> col:8 used 'in6_addr &&'
| |-CXXCtorInitializer Field 0x5576c2c30608 '__in6_u' 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)'
| | `-CXXConstructExpr 0x5576c2e6f638 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' 'void (in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5) &&) noexcept'
| |   `-MemberExpr 0x5576c2e6f5f8 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' xvalue .__in6_u 0x5576c2c30608
| |     `-CXXStaticCastExpr 0x5576c2e6f5c8 <col:8> 'in6_addr' xvalue static_cast<struct in6_addr &&> <NoOp>
| |       `-DeclRefExpr 0x5576c2e6f598 <col:8> 'in6_addr' lvalue ParmVar 0x5576c2ef3098 '' 'in6_addr &&'
| `-CompoundStmt 0x5576c2e6f698 <col:8>
|-CXXMethodDecl 0x5576c2ef3b38 <col:8> col:8 implicit used constexpr operator= 'in6_addr &(const in6_addr &) noexcept' inline default trivial
| |-ParmVarDecl 0x5576c2ef3c90 <col:8> col:8 used 'const in6_addr &'
| `-CompoundStmt 0x5576c2f0be08 <col:8>
|   |-CXXMemberCallExpr 0x5576c2f0bda8 <col:8> 'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue
|   | |-MemberExpr 0x5576c2f0bce8 <col:8> '<bound member function type>' .operator= 0x5576c2ef3838
|   | | `-MemberExpr 0x5576c2f0bbf8 <col:8> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue ->__in6_u 0x5576c2c30608
|   | |   `-CXXThisExpr 0x5576c2f0bbe8 <col:8> 'in6_addr *' this
|   | `-MemberExpr 0x5576c2f0bcb8 <col:8> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5576c2c30608
|   |   `-DeclRefExpr 0x5576c2f0bc98 <col:8> 'const in6_addr' lvalue ParmVar 0x5576c2ef3c90 '' 'const in6_addr &'
|   `-ReturnStmt 0x5576c2f0bdf8 <col:8>
|     `-UnaryOperator 0x5576c2f0bde0 <col:8> 'in6_addr' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5576c2f0bdd0 <col:8> 'in6_addr *' this
|-CXXMethodDecl 0x5576c2ef3d00 <col:8> col:8 implicit constexpr operator= 'in6_addr &(in6_addr &&)' inline default trivial noexcept-unevaluated 0x5576c2ef3d00
| `-ParmVarDecl 0x5576c2ef3e08 <col:8> col:8 'in6_addr &&'
`-CXXDestructorDecl 0x5576c2ef41a8 <col:8> col:8 implicit ~in6_addr 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%struct.in6_addr = type { %union.anon.1 }
  NonVirtualBaseLLVMType:%struct.in6_addr = type { %union.anon.1 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2c408a0 <../dummy_inc/clicknet/ip6.h:16:1, line:42:1> line:16:8 struct click_ip6 definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5576c2c409b8 <col:1, col:8> col:8 implicit struct click_ip6
|-CXXRecordDecl 0x5576c2c40a48 <line:17:5, line:39:5> line:17:5 union definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal has_variant_members
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5576c2c40b68 <line:18:2, line:27:2> line:18:2 struct definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-FieldDecl 0x5576c2c40c98 <line:19:6, col:15> col:15 ip6_un1_flow 'uint32_t':'unsigned int'
| | |-FieldDecl 0x5576c2c40cf8 <line:24:6, col:15> col:15 referenced ip6_un1_plen 'uint16_t':'unsigned short'
| | |-FieldDecl 0x5576c2c40d58 <line:25:6, col:14> col:14 referenced ip6_un1_nxt 'uint8_t':'unsigned char'
| | `-FieldDecl 0x5576c2c40db8 <line:26:6, col:14> col:14 referenced ip6_un1_hlim 'uint8_t':'unsigned char'
| |-FieldDecl 0x5576c2c40e78 <line:18:2, line:27:4> col:4 referenced ip6_un1 'struct (anonymous struct at ../dummy_inc/clicknet/ip6.h:18:2)':'click_ip6::(anonymous struct at ../dummy_inc/clicknet/ip6.h:18:2)'
| |-FieldDecl 0x5576c2c40ef0 <line:28:2, col:10> col:10 ip6_un2_vfc 'uint8_t':'unsigned char'
| |-CXXRecordDecl 0x5576c2c40f40 <line:30:2, line:38:2> line:30:2 struct definition
| | |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | | |-DefaultConstructor exists trivial needs_implicit
| | | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveConstructor exists simple trivial needs_implicit
| | | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | | |-MoveAssignment exists simple trivial needs_implicit
| | | `-Destructor simple irrelevant trivial needs_implicit
| | |-FieldDecl 0x5576c2c410b0 <line:35:6, col:28> col:15 ip6_un3_fc 'unsigned int'
| | | `-ConstantExpr 0x5576c2c41090 <col:28> 'int' Int: 4
| | |   `-IntegerLiteral 0x5576c2c41058 <col:28> 'int' 4
| | `-FieldDecl 0x5576c2c41158 <line:36:6, col:27> col:15 ip6_un3_v 'unsigned int'
| |   `-ConstantExpr 0x5576c2c41138 <col:27> 'int' Int: 4
| |     `-IntegerLiteral 0x5576c2c41100 <col:27> 'int' 4
| `-FieldDecl 0x5576c2c41218 <line:30:2, line:38:4> col:4 ip6_un3 'struct (anonymous struct at ../dummy_inc/clicknet/ip6.h:30:2)':'click_ip6::(anonymous struct at ../dummy_inc/clicknet/ip6.h:30:2)'
|-FieldDecl 0x5576c2c413c8 <line:17:5, line:39:7> col:7 referenced ip6_ctlun 'union (anonymous union at ../dummy_inc/clicknet/ip6.h:17:5)':'click_ip6::(anonymous union at ../dummy_inc/clicknet/ip6.h:17:5)'
|-FieldDecl 0x5576c2c41450 <line:40:5, col:21> col:21 ip6_src 'struct in6_addr':'in6_addr'
`-FieldDecl 0x5576c2c414c0 <line:41:5, col:21> col:21 ip6_dst 'struct in6_addr':'in6_addr'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ip6 = type { %union.anon, %struct.in6_addr, %struct.in6_addr }
  NonVirtualBaseLLVMType:%struct.click_ip6 = type { %union.anon, %struct.in6_addr, %struct.in6_addr }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2c2a538 </usr/include/netinet/in.h:31:1, line:34:3> line:31:8 struct in_addr definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5576c2c2a658 <col:1, col:8> col:8 implicit struct in_addr
|-FieldDecl 0x5576c2c2a720 <line:33:5, col:15> col:15 referenced s_addr 'in_addr_t':'unsigned int'
|-CXXConstructorDecl 0x5576c2ce6c90 <line:31:8> col:8 implicit used in_addr 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5576c2ce9218 <col:8>
|-CXXConstructorDecl 0x5576c2ce6d98 <col:8> col:8 implicit constexpr in_addr 'void (const in_addr &)' inline default trivial noexcept-unevaluated 0x5576c2ce6d98
| `-ParmVarDecl 0x5576c2ce6ea8 <col:8> col:8 'const in_addr &'
|-CXXConstructorDecl 0x5576c2ce6f48 <col:8> col:8 implicit used constexpr in_addr 'void (in_addr &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5576c2ce7058 <col:8> col:8 used 'in_addr &&'
| |-CXXCtorInitializer Field 0x5576c2c2a720 's_addr' 'in_addr_t':'unsigned int'
| | `-ImplicitCastExpr 0x5576c2ce9430 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
| |   `-MemberExpr 0x5576c2ce9400 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x5576c2c2a720
| |     `-CXXStaticCastExpr 0x5576c2ce93d0 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
| |       `-DeclRefExpr 0x5576c2ce93a0 <col:8> 'in_addr' lvalue ParmVar 0x5576c2ce7058 '' 'in_addr &&'
| `-CompoundStmt 0x5576c2ce9478 <col:8>
|-CXXDestructorDecl 0x5576c2cebfe0 <col:8> col:8 implicit referenced ~in_addr 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5576c2fcd8a0 <col:8> col:8 implicit constexpr operator= 'in_addr &(const in_addr &)' inline default trivial noexcept-unevaluated 0x5576c2fcd8a0
| `-ParmVarDecl 0x5576c2fcd9a8 <col:8> col:8 'const in_addr &'
`-CXXMethodDecl 0x5576c2fcda18 <col:8> col:8 implicit used constexpr operator= 'in_addr &(in_addr &&) noexcept' inline default trivial
  |-ParmVarDecl 0x5576c2fcdb28 <col:8> col:8 used 'in_addr &&'
  `-CompoundStmt 0x5576c2fcdd40 <col:8>
    |-BinaryOperator 0x5576c2fcdce8 <col:8> 'in_addr_t':'unsigned int' lvalue '='
    | |-MemberExpr 0x5576c2fcdca0 <col:8> 'in_addr_t':'unsigned int' lvalue ->s_addr 0x5576c2c2a720
    | | `-CXXThisExpr 0x5576c2fcdc90 <col:8> 'in_addr *' this
    | `-ImplicitCastExpr 0x5576c2fcdcd0 <col:8> 'in_addr_t':'unsigned int' <LValueToRValue>
    |   `-MemberExpr 0x5576c2fcdc60 <col:8> 'in_addr_t':'unsigned int' xvalue .s_addr 0x5576c2c2a720
    |     `-CXXStaticCastExpr 0x5576c2fcdc30 <col:8> 'in_addr' xvalue static_cast<struct in_addr &&> <NoOp>
    |       `-DeclRefExpr 0x5576c2fcdc00 <col:8> 'in_addr' lvalue ParmVar 0x5576c2fcdb28 '' 'in_addr &&'
    `-ReturnStmt 0x5576c2fcdd30 <col:8>
      `-UnaryOperator 0x5576c2fcdd18 <col:8> 'in_addr' lvalue prefix '*' cannot overflow
        `-CXXThisExpr 0x5576c2fcdd08 <col:8> 'in_addr *' this

Layout: <CGRecordLayout
  LLVMType:%struct.in_addr = type { i32 }
  NonVirtualBaseLLVMType:%struct.in_addr = type { i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2cdc788 <../dummy_inc/clicknet/ip.h:23:1, line:52:1> line:23:8 struct click_ip definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5576c2cdc8a8 <col:1, col:8> col:8 implicit struct click_ip
|-FieldDecl 0x5576c2cdc990 <line:28:5, col:22> col:14 referenced ip_hl 'unsigned int'
| `-ConstantExpr 0x5576c2cdc970 <col:22> 'int' Int: 4
|   `-IntegerLiteral 0x5576c2cdc938 <col:22> 'int' 4
|-FieldDecl 0x5576c2cdca38 <line:29:5, col:21> col:14 referenced ip_v 'unsigned int'
| `-ConstantExpr 0x5576c2cdca18 <col:21> 'int' Int: 4
|   `-IntegerLiteral 0x5576c2cdc9e0 <col:21> 'int' 4
|-FieldDecl 0x5576c2cdca98 <line:33:5, col:13> col:13 referenced ip_tos 'uint8_t':'unsigned char'
|-FieldDecl 0x5576c2cdcaf8 <line:40:5, col:14> col:14 referenced ip_len 'uint16_t':'unsigned short'
|-FieldDecl 0x5576c2cdcb58 <line:41:5, col:14> col:14 referenced ip_id 'uint16_t':'unsigned short'
|-FieldDecl 0x5576c2cdcbb8 <line:42:5, col:14> col:14 referenced ip_off 'uint16_t':'unsigned short'
|-FieldDecl 0x5576c2cdcc18 <line:47:5, col:13> col:13 referenced ip_ttl 'uint8_t':'unsigned char'
|-FieldDecl 0x5576c2cdcc78 <line:48:5, col:13> col:13 referenced ip_p 'uint8_t':'unsigned char'
|-FieldDecl 0x5576c2cdccd8 <line:49:5, col:14> col:14 referenced ip_sum 'uint16_t':'unsigned short'
|-FieldDecl 0x5576c2cdcd48 <line:50:5, col:20> col:20 referenced ip_src 'struct in_addr':'in_addr'
`-FieldDecl 0x5576c2cdcdb8 <line:51:5, col:20> col:20 referenced ip_dst 'struct in_addr':'in_addr'

Layout: <CGRecordLayout
  LLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  NonVirtualBaseLLVMType:%struct.click_ip = type { i8, i8, i16, i16, i16, i8, i8, i16, %struct.in_addr, %struct.in_addr }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:0>
]>

*** Dumping AST Record Layout
         0 | struct click_tcp
         0 |   uint16_t th_sport
         2 |   uint16_t th_dport
         4 |   tcp_seq_t th_seq
         8 |   tcp_seq_t th_ack
    12:0-3 |   unsigned int th_flags2
    12:4-7 |   unsigned int th_off
        13 |   uint8_t th_flags
        14 |   uint16_t th_win
        16 |   uint16_t th_sum
        18 |   uint16_t th_urp
           | [sizeof=20, dsize=20, align=4,
           |  nvsize=20, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2fb8b38 prev 0x5576c2eb3110 <../dummy_inc/clicknet/tcp.h:24:1, line:51:1> line:24:8 referenced struct click_tcp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5576c2fb8c30 <col:1, col:8> col:8 implicit struct click_tcp
|-FieldDecl 0x5576c2fb8cd0 <line:25:5, col:14> col:14 th_sport 'uint16_t':'unsigned short'
|-FieldDecl 0x5576c2fb8d30 <line:26:5, col:14> col:14 th_dport 'uint16_t':'unsigned short'
|-FieldDecl 0x5576c2fb8db0 <line:27:5, col:15> col:15 th_seq 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x5576c2fb8e10 <line:28:5, col:15> col:15 th_ack 'tcp_seq_t':'unsigned int'
|-FieldDecl 0x5576c2fb8eb8 <line:30:5, col:26> col:14 th_flags2 'unsigned int'
| `-ConstantExpr 0x5576c2fb8e98 <col:26> 'int' Int: 4
|   `-IntegerLiteral 0x5576c2fb8e60 <col:26> 'int' 4
|-FieldDecl 0x5576c2fb8f60 <line:31:5, col:23> col:14 th_off 'unsigned int'
| `-ConstantExpr 0x5576c2fb8f40 <col:23> 'int' Int: 4
|   `-IntegerLiteral 0x5576c2fb8f08 <col:23> 'int' 4
|-FieldDecl 0x5576c2fb8fc0 <line:39:5, col:13> col:13 th_flags 'uint8_t':'unsigned char'
|-FieldDecl 0x5576c2fb9020 <line:48:5, col:14> col:14 th_win 'uint16_t':'unsigned short'
|-FieldDecl 0x5576c2fb9080 <line:49:5, col:14> col:14 referenced th_sum 'uint16_t':'unsigned short'
`-FieldDecl 0x5576c2fb90e0 <line:50:5, col:14> col:14 th_urp 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_tcp = type { i16, i16, i32, i32, i8, i8, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
    <CGBitFieldInfo Offset:0 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
    <CGBitFieldInfo Offset:4 Size:4 IsSigned:0 StorageSize:8 StorageOffset:12>
]>

*** Dumping AST Record Layout
         0 | struct click_udp
         0 |   uint16_t uh_sport
         2 |   uint16_t uh_dport
         4 |   uint16_t uh_ulen
         6 |   uint16_t uh_sum
           | [sizeof=8, dsize=8, align=2,
           |  nvsize=8, nvalign=2]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2fb9148 prev 0x5576c2eb31c0 <../dummy_inc/clicknet/udp.h:11:1, line:16:1> line:11:8 referenced struct click_udp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5576c2fb9240 <col:1, col:8> col:8 implicit struct click_udp
|-FieldDecl 0x5576c2fb92e0 <line:12:5, col:14> col:14 uh_sport 'uint16_t':'unsigned short'
|-FieldDecl 0x5576c2fb9340 <line:13:5, col:14> col:14 uh_dport 'uint16_t':'unsigned short'
|-FieldDecl 0x5576c2fb93a0 <line:14:5, col:14> col:14 uh_ulen 'uint16_t':'unsigned short'
`-FieldDecl 0x5576c2fb9400 <line:15:5, col:14> col:14 referenced uh_sum 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_udp = type { i16, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_udp = type { i16, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class WritablePacket
         0 |   class Packet (base)
         0 |     class atomic_uint32_t _use_count
         0 |       uint32_t _val
         8 |     class Packet * _data_packet
        16 |     unsigned char * _head
        24 |     unsigned char * _data
        32 |     unsigned char * _tail
        40 |     unsigned char * _end
        48 |     struct Packet::AllAnno _aa
        48 |       union Packet::Anno cb
        48 |         char [48] c
        48 |         uint8_t [48] u8
        48 |         uint16_t [24] u16
        48 |         uint32_t [12] u32
        48 |         uint64_t [6] u64
        96 |       unsigned char * mac
       104 |       unsigned char * nh
       112 |       unsigned char * h
       120 |       enum Packet::PacketType pkt_type
       124 |       char [8] timestamp
       136 |       class Packet * next
       144 |       class Packet * prev
       152 |     Packet::buffer_destructor_type _destructor
       160 |     void * _destructor_argument
           | [sizeof=168, dsize=168, align=8,
           |  nvsize=168, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2ed7490 prev 0x5576c2eb3320 <../dummy_inc/click/packet.hh:778:1, line:816:1> line:778:7 referenced class WritablePacket definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment needs_overload_resolution
| `-Destructor non_trivial user_declared needs_overload_resolution
|-public 'Packet'
|-CXXRecordDecl 0x5576c2ed75c8 <col:1, col:7> col:7 implicit referenced class WritablePacket
|-AccessSpecDecl 0x5576c2ed7658 <col:40, col:46> col:40 public
|-CXXMethodDecl 0x5576c2ed7700 <line:780:5, col:62> col:55 used data 'unsigned char *() const'
| |-NoInlineAttr 0x5576c2ed77a0 <col:20>
| `-OptimizeNoneAttr 0x5576c2ed77f8 <col:30>
|-CXXMethodDecl 0x5576c2ed7848 <line:781:5, col:66> col:55 end_data 'unsigned char *() const'
| |-NoInlineAttr 0x5576c2ed78e8 <col:20>
| `-OptimizeNoneAttr 0x5576c2ed7940 <col:30>
|-CXXMethodDecl 0x5576c2ed7990 <line:782:5, col:36> col:27 buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x5576c2ed7a58 <line:783:5, col:40> col:27 end_buffer 'unsigned char *() const' inline
|-CXXMethodDecl 0x5576c2ed7b20 <line:784:5, col:40> col:27 mac_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x5576c2ed7c68 <line:785:5, col:40> col:25 ether_header 'click_ether *() const' inline
|-CXXMethodDecl 0x5576c2ed7d30 <line:786:5, col:72> col:55 network_header 'unsigned char *() const'
| |-NoInlineAttr 0x5576c2ed7dd0 <col:20>
| `-OptimizeNoneAttr 0x5576c2ed7e28 <col:30>
|-CXXMethodDecl 0x5576c2ed7e98 <line:787:5, col:62> col:50 ip_header 'click_ip *() const'
| |-NoInlineAttr 0x5576c2ed7f38 <col:20>
| `-OptimizeNoneAttr 0x5576c2ed7f90 <col:30>
|-CXXMethodDecl 0x5576c2ed8038 <line:788:5, col:64> col:51 ip6_header 'click_ip6 *() const'
| |-NoInlineAttr 0x5576c2ed80d8 <col:20>
| `-OptimizeNoneAttr 0x5576c2ed8130 <col:30>
|-CXXMethodDecl 0x5576c2ed8180 <line:789:5, col:46> col:27 transport_header 'unsigned char *() const' inline
|-CXXMethodDecl 0x5576c2ed8298 <line:790:5, col:38> col:24 icmp_header 'click_icmp *() const' inline
|-CXXMethodDecl 0x5576c2ed83b8 <line:791:5, col:36> col:23 tcp_header 'click_tcp *() const' inline
|-CXXMethodDecl 0x5576c2ed84d8 <line:792:5, col:36> col:23 udp_header 'click_udp *() const' inline
|-CXXMethodDecl 0x5576c2ed85a0 <line:795:5, col:73> col:27 buffer_data 'unsigned char *() const' inline
| `-DeprecatedAttr 0x5576c2ed8640 <col:62> "" ""
|-AccessSpecDecl 0x5576c2ed86b0 <line:798:2, col:9> col:2 private
|-CXXConstructorDecl 0x5576c2ed8710 <line:800:5, col:31> col:12 WritablePacket 'void ()' inline
| |-CXXCtorInitializer 'Packet'
| | `-CXXConstructExpr 0x5576c2ed9308 <col:12> 'Packet' 'void ()'
| `-CompoundStmt 0x5576c2ed9530 <col:29, col:31>
|-CXXMethodDecl 0x5576c2ed87d8 <line:802:5, col:28> col:17 initialize 'void ()' inline
|-CXXConstructorDecl 0x5576c2ed8918 <line:804:5, col:35> col:5 WritablePacket 'void (const Packet &)'
| `-ParmVarDecl 0x5576c2ed8888 <col:20, col:34> col:34 x 'const Packet &'
|-CXXDestructorDecl 0x5576c2ed8a10 <line:805:5, col:25> col:5 ~WritablePacket 'void () noexcept'
| `-CompoundStmt 0x5576c2ed9540 <col:23, col:25>
|-CXXMethodDecl 0x5576c2ed8bc8 <line:808:5, col:56> col:28 pool_allocate 'WritablePacket *(bool)' static
| `-ParmVarDecl 0x5576c2ed8b00 <col:42, col:47> col:47 with_data 'bool'
|-CXXMethodDecl 0x5576c2ed8e98 <line:809:5, line:810:24> line:809:28 pool_allocate 'WritablePacket *(uint32_t, uint32_t, uint32_t)' static
| |-ParmVarDecl 0x5576c2ed8c80 <col:42, col:51> col:51 headroom 'uint32_t':'unsigned int'
| |-ParmVarDecl 0x5576c2ed8cf8 <col:61, col:70> col:70 length 'uint32_t':'unsigned int'
| `-ParmVarDecl 0x5576c2ed8d70 <line:810:7, col:16> col:16 tailroom 'uint32_t':'unsigned int'
|-CXXMethodDecl 0x5576c2ed9028 <line:811:5, col:42> col:17 recycle 'void (WritablePacket *)' static
| `-ParmVarDecl 0x5576c2ed8f60 <col:25, col:41> col:41 p 'WritablePacket *'
|-FriendDecl 0x5576c2ed9120 <line:814:5, col:18> col:12 'class Packet':'Packet'
`-CXXConstructorDecl 0x5576c2ed9188 <line:778:7> col:7 implicit WritablePacket 'void (const WritablePacket &)' inline default noexcept-unevaluated 0x5576c2ed9188
  `-ParmVarDecl 0x5576c2ed9298 <col:7> col:7 'const WritablePacket &'

Layout: <CGRecordLayout
  LLVMType:%class.WritablePacket = type { %class.Packet }
  NonVirtualBaseLLVMType:%class.WritablePacket = type { %class.Packet }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | struct click_icmp6_sequenced
         0 |   uint8_t icmp6_type
         1 |   uint8_t icmp6_code
         2 |   uint16_t icmp6_cksum
         4 |   uint16_t icmp6_identifier
         6 |   uint16_t icmp6_sequence
           | [sizeof=8, dsize=8, align=2,
           |  nvsize=8, nvalign=2]

*** Dumping AST Record Layout
         0 | struct click_icmp_sequenced
         0 |   uint8_t icmp_type
         1 |   uint8_t icmp_code
         2 |   uint16_t icmp_cksum
         4 |   uint16_t icmp_identifier
         6 |   uint16_t icmp_sequence
           | [sizeof=8, dsize=8, align=2,
           |  nvsize=8, nvalign=2]

*** Dumping AST Record Layout
         0 | struct click_icmp6
         0 |   uint8_t icmp6_type
         1 |   uint8_t icmp6_code
         2 |   uint16_t icmp6_cksum
         4 |   uint32_t padding
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct click_icmp
         0 |   uint8_t icmp_type
         1 |   uint8_t icmp_code
         2 |   uint16_t icmp_cksum
         4 |   uint32_t padding
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct click_icmp6_pkttoobig
         0 |   uint8_t icmp6_type
         1 |   uint8_t icmp6_code
         2 |   uint16_t icmp6_cksum
         4 |   uint32_t icmp6_mtusize
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct click_icmp6_paramprob
         0 |   uint8_t icmp6_type
         1 |   uint8_t icmp6_code
         2 |   uint16_t icmp6_cksum
         4 |   uint32_t icmp6_pointer
           | [sizeof=8, dsize=8, align=4,
           |  nvsize=8, nvalign=4]

*** Dumping AST Record Layout
         0 | struct click_icmp_paramprob
         0 |   uint8_t icmp_type
         1 |   uint8_t icmp_code
         2 |   uint16_t icmp_cksum
         4 |   uint8_t icmp_pointer
         5 |   uint8_t [3] padding
           | [sizeof=8, dsize=8, align=2,
           |  nvsize=8, nvalign=2]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2fb7f70 <../dummy_inc/clicknet/icmp6.h:78:1, line:87:1> line:78:8 referenced struct click_icmp6_sequenced definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5576c2fb8088 <col:1, col:8> col:8 implicit struct click_icmp6_sequenced
|-FieldDecl 0x5576c2fb8128 <line:79:5, col:13> col:13 icmp6_type 'uint8_t':'unsigned char'
|-FieldDecl 0x5576c2fb8188 <line:80:5, col:13> col:13 icmp6_code 'uint8_t':'unsigned char'
|-FieldDecl 0x5576c2fb81e8 <line:81:5, col:14> col:14 icmp6_cksum 'uint16_t':'unsigned short'
|-FieldDecl 0x5576c2fb8248 <line:82:5, col:14> col:14 referenced icmp6_identifier 'uint16_t':'unsigned short'
`-FieldDecl 0x5576c2fb82a8 <line:83:5, col:14> col:14 referenced icmp6_sequence 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_icmp6_sequenced = type { i8, i8, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_icmp6_sequenced = type { i8, i8, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2fb5e38 <../dummy_inc/clicknet/icmp.h:27:1, line:33:1> line:27:8 referenced struct click_icmp_sequenced definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5576c2fb5f58 <col:1, col:8> col:8 implicit struct click_icmp_sequenced
|-FieldDecl 0x5576c2fb5ff8 <line:28:5, col:13> col:13 referenced icmp_type 'uint8_t':'unsigned char'
|-FieldDecl 0x5576c2fb6058 <line:29:5, col:13> col:13 icmp_code 'uint8_t':'unsigned char'
|-FieldDecl 0x5576c2fb60b8 <line:30:5, col:14> col:14 referenced icmp_cksum 'uint16_t':'unsigned short'
|-FieldDecl 0x5576c2fb6118 <line:31:5, col:14> col:14 referenced icmp_identifier 'uint16_t':'unsigned short'
`-FieldDecl 0x5576c2fb6178 <line:32:5, col:14> col:14 referenced icmp_sequence 'uint16_t':'unsigned short'

Layout: <CGRecordLayout
  LLVMType:%struct.click_icmp_sequenced = type { i8, i8, i16, i16, i16 }
  NonVirtualBaseLLVMType:%struct.click_icmp_sequenced = type { i8, i8, i16, i16, i16 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2fb75b0 <../dummy_inc/clicknet/icmp6.h:50:1, line:56:1> line:50:8 referenced struct click_icmp6 definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5576c2fb76c8 <col:1, col:8> col:8 implicit struct click_icmp6
|-FieldDecl 0x5576c2fb7768 <line:51:5, col:13> col:13 icmp6_type 'uint8_t':'unsigned char'
|-FieldDecl 0x5576c2fb77c8 <line:52:5, col:13> col:13 icmp6_code 'uint8_t':'unsigned char'
|-FieldDecl 0x5576c2fb7828 <line:53:5, col:14> col:14 icmp6_cksum 'uint16_t':'unsigned short'
`-FieldDecl 0x5576c2fb7888 <line:54:5, col:14> col:14 padding 'uint32_t':'unsigned int'

Layout: <CGRecordLayout
  LLVMType:%struct.click_icmp6 = type { i8, i8, i16, i32 }
  NonVirtualBaseLLVMType:%struct.click_icmp6 = type { i8, i8, i16, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2fb5b18 prev 0x5576c2eb2fd0 <../dummy_inc/clicknet/icmp.h:17:1, line:23:1> line:17:8 referenced struct click_icmp definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5576c2fb5c10 <col:1, col:8> col:8 implicit struct click_icmp
|-FieldDecl 0x5576c2fb5cb0 <line:18:5, col:13> col:13 referenced icmp_type 'uint8_t':'unsigned char'
|-FieldDecl 0x5576c2fb5d10 <line:19:5, col:13> col:13 referenced icmp_code 'uint8_t':'unsigned char'
|-FieldDecl 0x5576c2fb5d70 <line:20:5, col:14> col:14 referenced icmp_cksum 'uint16_t':'unsigned short'
`-FieldDecl 0x5576c2fb5dd0 <line:21:5, col:14> col:14 padding 'uint32_t':'unsigned int'

Layout: <CGRecordLayout
  LLVMType:%struct.click_icmp = type { i8, i8, i16, i32 }
  NonVirtualBaseLLVMType:%struct.click_icmp = type { i8, i8, i16, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2fb78f0 <../dummy_inc/clicknet/icmp6.h:59:1, line:65:1> line:59:8 referenced struct click_icmp6_pkttoobig definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5576c2fb7a08 <col:1, col:8> col:8 implicit struct click_icmp6_pkttoobig
|-FieldDecl 0x5576c2fb7aa8 <line:60:5, col:13> col:13 icmp6_type 'uint8_t':'unsigned char'
|-FieldDecl 0x5576c2fb7b08 <line:61:5, col:13> col:13 icmp6_code 'uint8_t':'unsigned char'
|-FieldDecl 0x5576c2fb7b68 <line:62:5, col:14> col:14 icmp6_cksum 'uint16_t':'unsigned short'
`-FieldDecl 0x5576c2fb7bc8 <line:63:5, col:14> col:14 icmp6_mtusize 'uint32_t':'unsigned int'

Layout: <CGRecordLayout
  LLVMType:%struct.click_icmp6_pkttoobig = type { i8, i8, i16, i32 }
  NonVirtualBaseLLVMType:%struct.click_icmp6_pkttoobig = type { i8, i8, i16, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2fb7c30 <../dummy_inc/clicknet/icmp6.h:68:1, line:74:1> line:68:8 referenced struct click_icmp6_paramprob definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5576c2fb7d48 <col:1, col:8> col:8 implicit struct click_icmp6_paramprob
|-FieldDecl 0x5576c2fb7de8 <line:69:5, col:13> col:13 icmp6_type 'uint8_t':'unsigned char'
|-FieldDecl 0x5576c2fb7e48 <line:70:5, col:13> col:13 icmp6_code 'uint8_t':'unsigned char'
|-FieldDecl 0x5576c2fb7ea8 <line:71:5, col:14> col:14 icmp6_cksum 'uint16_t':'unsigned short'
`-FieldDecl 0x5576c2fb7f08 <line:72:5, col:14> col:14 referenced icmp6_pointer 'uint32_t':'unsigned int'

Layout: <CGRecordLayout
  LLVMType:%struct.click_icmp6_paramprob = type { i8, i8, i16, i32 }
  NonVirtualBaseLLVMType:%struct.click_icmp6_paramprob = type { i8, i8, i16, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2fb61e0 <../dummy_inc/clicknet/icmp.h:36:1, line:43:1> line:36:8 referenced struct click_icmp_paramprob definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5576c2fb62f8 <col:1, col:8> col:8 implicit struct click_icmp_paramprob
|-FieldDecl 0x5576c2fb6398 <line:37:5, col:13> col:13 referenced icmp_type 'uint8_t':'unsigned char'
|-FieldDecl 0x5576c2fb63f8 <line:38:5, col:13> col:13 referenced icmp_code 'uint8_t':'unsigned char'
|-FieldDecl 0x5576c2fb6458 <line:39:5, col:14> col:14 referenced icmp_cksum 'uint16_t':'unsigned short'
|-FieldDecl 0x5576c2fb64b8 <line:40:5, col:13> col:13 referenced icmp_pointer 'uint8_t':'unsigned char'
`-FieldDecl 0x5576c2fb65e8 <line:41:5, col:22> col:13 padding 'uint8_t [3]'

Layout: <CGRecordLayout
  LLVMType:%struct.click_icmp_paramprob = type { i8, i8, i16, i8, [3 x i8] }
  NonVirtualBaseLLVMType:%struct.click_icmp_paramprob = type { i8, i8, i16, i8, [3 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class IP6Address
         0 |   struct in6_addr _addr
         0 |     union in6_addr::(anonymous at /usr/include/netinet/in.h:214:5) __in6_u
         0 |       uint8_t [16] __u6_addr8
         0 |       uint16_t [8] __u6_addr16
         0 |       uint32_t [4] __u6_addr32
           | [sizeof=16, dsize=16, align=4,
           |  nvsize=16, nvalign=4]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2eef0d0 prev 0x5576c2eb3270 <../dummy_inc/click/ip6address.hh:14:1, line:175:1> line:14:7 referenced class IP6Address definition
|-DefinitionData pass_in_registers standard_layout trivially_copyable has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5576c2eef1c8 <col:1, col:7> col:7 implicit referenced class IP6Address
|-AccessSpecDecl 0x5576c2eef258 <col:20, col:26> col:20 public
|-TypedefDecl 0x5576c2eef290 <line:16:5, col:32> col:32 referenced uninitialized_t 'uninitialized_type'
| `-RecordType 0x5576c2b02230 'uninitialized_type'
|   `-CXXRecord 0x5576c2b02198 'uninitialized_type'
|-CXXConstructorDecl 0x5576c2eef350 <line:19:5, line:21:5> line:19:12 IP6Address 'void ()' inline
| |-CXXCtorInitializer Field 0x5576c2ef2788 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x5576c2ef3180 <col:12> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x5576c2ef33a0 <col:25, line:21:5>
|   `-CallExpr 0x5576c2ef3350 <line:20:2, col:33> 'void *'
|     |-ImplicitCastExpr 0x5576c2ef3338 <col:2> 'void *(*)(void *, int, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5576c2ef3318 <col:2> 'void *(void *, int, size_t) throw()' lvalue Function 0x5576c2bd7758 'memset' 'void *(void *, int, size_t) throw()'
|     |-ImplicitCastExpr 0x5576c2ef3388 <col:9, col:10> 'void *' <BitCast>
|     | `-UnaryOperator 0x5576c2ef3260 <col:9, col:10> 'struct in6_addr *' prefix '&' cannot overflow
|     |   `-MemberExpr 0x5576c2ef3230 <col:10> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x5576c2ef2788
|     |     `-CXXThisExpr 0x5576c2ef3220 <col:10> 'IP6Address *' implicit this
|     |-IntegerLiteral 0x5576c2ef3278 <col:17> 'int' 0
|     `-UnaryExprOrTypeTraitExpr 0x5576c2ef32f8 <col:20, col:32> 'unsigned long' sizeof
|       `-ParenExpr 0x5576c2ef32d8 <col:26, col:32> 'struct in6_addr':'in6_addr' lvalue
|         `-MemberExpr 0x5576c2ef32a8 <col:27> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x5576c2ef2788 non_odr_use_unevaluated
|           `-CXXThisExpr 0x5576c2ef3298 <col:27> 'IP6Address *' implicit this
|-CXXConstructorDecl 0x5576c2eef4a0 <line:24:5, line:26:5> line:24:21 IP6Address 'void (const unsigned char *)' inline
| |-ParmVarDecl 0x5576c2eef410 <col:32, col:53> col:53 used x 'const unsigned char *'
| |-CXXCtorInitializer Field 0x5576c2ef2788 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x5576c2ef33b8 <col:21> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x5576c2ef3608 <col:56, line:26:5>
|   `-CallExpr 0x5576c2ef3588 <line:25:2, col:33> 'void *'
|     |-ImplicitCastExpr 0x5576c2ef3570 <col:2> 'void *(*)(void *__restrict, const void *__restrict, size_t) throw()' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5576c2ef3550 <col:2> 'void *(void *__restrict, const void *__restrict, size_t) throw()' lvalue Function 0x5576c2bd6c28 'memcpy' 'void *(void *__restrict, const void *__restrict, size_t) throw()'
|     |-ImplicitCastExpr 0x5576c2ef35c0 <col:9, col:10> 'void *' <BitCast>
|     | `-UnaryOperator 0x5576c2ef3498 <col:9, col:10> 'struct in6_addr *' prefix '&' cannot overflow
|     |   `-MemberExpr 0x5576c2ef3468 <col:10> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x5576c2ef2788
|     |     `-CXXThisExpr 0x5576c2ef3458 <col:10> 'IP6Address *' implicit this
|     |-ImplicitCastExpr 0x5576c2ef35f0 <col:17> 'const void *' <BitCast>
|     | `-ImplicitCastExpr 0x5576c2ef35d8 <col:17> 'const unsigned char *' <LValueToRValue>
|     |   `-DeclRefExpr 0x5576c2ef34b0 <col:17> 'const unsigned char *' lvalue ParmVar 0x5576c2eef410 'x' 'const unsigned char *'
|     `-UnaryExprOrTypeTraitExpr 0x5576c2ef3530 <col:20, col:32> 'unsigned long' sizeof
|       `-ParenExpr 0x5576c2ef3510 <col:26, col:32> 'struct in6_addr':'in6_addr' lvalue
|         `-MemberExpr 0x5576c2ef34e0 <col:27> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x5576c2ef2788 non_odr_use_unevaluated
|           `-CXXThisExpr 0x5576c2ef34d0 <col:27> 'IP6Address *' implicit this
|-CXXConstructorDecl 0x5576c2eef5f0 <line:31:5, line:33:5> line:31:21 IP6Address 'void (IPAddress)' inline
| |-ParmVarDecl 0x5576c2eef560 <col:32, col:42> col:42 used x 'IPAddress'
| |-CXXCtorInitializer Field 0x5576c2ef2788 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x5576c2ef3620 <col:21> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x5576c2ef4a00 <col:45, line:33:5>
|   `-ExprWithCleanups 0x5576c2ef49e8 <line:32:2, col:10> 'IP6Address' lvalue
|     `-CXXOperatorCallExpr 0x5576c2ef49b0 <col:2, col:10> 'IP6Address' lvalue
|       |-ImplicitCastExpr 0x5576c2ef4998 <col:8> 'IP6Address &(*)(const struct in_addr &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5576c2ef4918 <col:8> 'IP6Address &(const struct in_addr &)' lvalue CXXMethod 0x5576c2ef2128 'operator=' 'IP6Address &(const struct in_addr &)'
|       |-UnaryOperator 0x5576c2ef3688 <col:2, col:3> 'IP6Address' lvalue prefix '*' cannot overflow
|       | `-CXXThisExpr 0x5576c2ef3678 <col:3> 'IP6Address *' this
|       `-MaterializeTemporaryExpr 0x5576c2ef4900 <col:10> 'const struct in_addr':'const in_addr' lvalue
|         `-ImplicitCastExpr 0x5576c2ef48e8 <col:10> 'const struct in_addr':'const in_addr' <NoOp>
|           `-ImplicitCastExpr 0x5576c2ef48d0 <col:10> 'struct in_addr':'in_addr' <UserDefinedConversion>
|             `-CXXMemberCallExpr 0x5576c2ef48b0 <col:10> 'struct in_addr':'in_addr'
|               `-MemberExpr 0x5576c2ef4880 <col:10> '<bound member function type>' .operator in_addr 0x5576c2ce2110
|                 `-ImplicitCastExpr 0x5576c2ef4868 <col:10> 'const IPAddress' lvalue <NoOp>
|                   `-DeclRefExpr 0x5576c2ef36a0 <col:10> 'IPAddress' lvalue ParmVar 0x5576c2eef560 'x' 'IPAddress'
|-CXXConstructorDecl 0x5576c2eef740 <line:36:5, col:40> col:14 IP6Address 'void (const String &)'
| `-ParmVarDecl 0x5576c2eef6b0 <col:25, col:39> col:39 x 'const String &'
|-CXXConstructorDecl 0x5576c2eef968 <line:39:5, line:41:5> line:39:21 used IP6Address 'void (const struct in6_addr &)' inline
| |-ParmVarDecl 0x5576c2eef870 <col:32, col:55> col:55 used x 'const struct in6_addr &'
| |-CXXCtorInitializer Field 0x5576c2ef2788 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x5576c2ef4b90 <line:40:4, col:11> 'struct in6_addr':'in6_addr' 'void (const in6_addr &) noexcept'
| |   `-DeclRefExpr 0x5576c2ef4a18 <col:10> 'const struct in6_addr':'const in6_addr' lvalue ParmVar 0x5576c2eef870 'x' 'const struct in6_addr &'
| `-CompoundStmt 0x5576c2ef4bf0 <col:13, line:41:5>
|-CXXConstructorDecl 0x5576c2eefb38 <line:44:5, line:46:5> line:44:21 IP6Address 'void (const struct in_addr &)' inline
| |-ParmVarDecl 0x5576c2eefa70 <col:32, col:54> col:54 used x 'const struct in_addr &'
| |-CXXCtorInitializer Field 0x5576c2ef2788 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x5576c2ef4c00 <col:21> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x5576c2ef4d10 <col:57, line:46:5>
|   `-CXXOperatorCallExpr 0x5576c2ef4cd8 <line:45:2, col:10> 'IP6Address' lvalue
|     |-ImplicitCastExpr 0x5576c2ef4cc0 <col:8> 'IP6Address &(*)(const struct in_addr &)' <FunctionToPointerDecay>
|     | `-DeclRefExpr 0x5576c2ef4ca0 <col:8> 'IP6Address &(const struct in_addr &)' lvalue CXXMethod 0x5576c2ef2128 'operator=' 'IP6Address &(const struct in_addr &)'
|     |-UnaryOperator 0x5576c2ef4c68 <col:2, col:3> 'IP6Address' lvalue prefix '*' cannot overflow
|     | `-CXXThisExpr 0x5576c2ef4c58 <col:3> 'IP6Address *' this
|     `-DeclRefExpr 0x5576c2ef4c80 <col:10> 'const struct in_addr':'const in_addr' lvalue ParmVar 0x5576c2eefa70 'x' 'const struct in_addr &'
|-CXXConstructorDecl 0x5576c2eefca8 <line:49:5, line:51:5> line:49:12 used IP6Address 'void (const uninitialized_type &)' inline
| |-ParmVarDecl 0x5576c2eefbf8 <col:23, col:49> col:49 used unused 'const uninitialized_type &'
| |-CXXCtorInitializer Field 0x5576c2ef2788 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x5576c2ef4d28 <col:12> 'struct in6_addr':'in6_addr' 'void () noexcept'
| `-CompoundStmt 0x5576c2ef4dd8 <col:57, line:51:5>
|   `-CStyleCastExpr 0x5576c2ef4db0 <line:50:2, col:9> 'void' <ToVoid>
|     `-DeclRefExpr 0x5576c2ef4d80 <col:9> 'const uninitialized_type' lvalue ParmVar 0x5576c2eefbf8 'unused' 'const uninitialized_type &'
|-CXXMethodDecl 0x5576c2eefe38 <line:62:5, col:49> col:23 make_prefix 'IP6Address (int)' static
| `-ParmVarDecl 0x5576c2eefd70 <col:35, col:39> col:39 prefix_len 'int'
|-CXXMethodDecl 0x5576c2eeff88 <line:69:5, col:58> col:23 make_inverted_prefix 'IP6Address (int)' static
| `-ParmVarDecl 0x5576c2eefef8 <col:44, col:48> col:48 prefix_len 'int'
|-TypedefDecl 0x5576c2ef0138 <line:71:5, col:61> col:36 referenced unspecified_bool_type 'uint32_t (IP6Address::*)() const'
| `-MemberPointerType 0x5576c2ef00b0 'uint32_t (IP6Address::*)() const'
|   |-RecordType 0x5576c2eb3300 'IP6Address'
|   | `-CXXRecord 0x5576c2eef0d0 'IP6Address'
|   `-ParenType 0x5576c2ef0050 'uint32_t () const' sugar
|     `-FunctionProtoType 0x5576c2bc9d90 'uint32_t () const' const cdecl
|       `-TypedefType 0x5576c2b02520 'uint32_t' sugar
|         |-Typedef 0x5576c2a163d8 'uint32_t'
|         `-TypedefType 0x5576c29ef480 '__uint32_t' sugar
|           |-Typedef 0x5576c29ef078 '__uint32_t'
|           `-BuiltinType 0x5576c29ad450 'unsigned int'
|-CXXConversionDecl 0x5576c2ef0278 <line:72:5, col:45> col:12 operator unsigned int (IP6Address::*)() const 'IP6Address::unspecified_bool_type () const' inline
|-CXXConversionDecl 0x5576c2ef0400 <line:74:5, col:62> col:5 operator const in6_addr & 'const struct in6_addr &() const'
| `-CompoundStmt 0x5576c2ef4e40 <col:46, col:62>
|   `-ReturnStmt 0x5576c2ef4e30 <col:48, col:55>
|     `-MemberExpr 0x5576c2ef4e00 <col:55> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x5576c2ef2788
|       `-CXXThisExpr 0x5576c2ef4df0 <col:55> 'const IP6Address *' implicit this
|-CXXConversionDecl 0x5576c2ef05f0 <line:75:5, col:50> col:5 operator in6_addr & 'struct in6_addr &()'
| `-CompoundStmt 0x5576c2ef4ea8 <col:34, col:50>
|   `-ReturnStmt 0x5576c2ef4e98 <col:36, col:43>
|     `-MemberExpr 0x5576c2ef4e68 <col:43> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x5576c2ef2788
|       `-CXXThisExpr 0x5576c2ef4e58 <col:43> 'IP6Address *' implicit this
|-CXXMethodDecl 0x5576c2ef06f0 <line:76:5, col:61> col:28 in6_addr 'const struct in6_addr &() const'
| `-CompoundStmt 0x5576c2ef4f10 <col:45, col:61>
|   `-ReturnStmt 0x5576c2ef4f00 <col:47, col:54>
|     `-MemberExpr 0x5576c2ef4ed0 <col:54> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x5576c2ef2788
|       `-CXXThisExpr 0x5576c2ef4ec0 <col:54> 'const IP6Address *' implicit this
|-CXXMethodDecl 0x5576c2ef07c8 <line:77:5, col:49> col:22 in6_addr 'struct in6_addr &()'
| `-CompoundStmt 0x5576c2ef4f78 <col:33, col:49>
|   `-ReturnStmt 0x5576c2ef4f68 <col:35, col:42>
|     `-MemberExpr 0x5576c2ef4f38 <col:42> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x5576c2ef2788
|       `-CXXThisExpr 0x5576c2ef4f28 <col:42> 'IP6Address *' implicit this
|-CXXMethodDecl 0x5576c2ef0890 <line:79:5, col:66> col:20 data 'unsigned char *()'
| `-CompoundStmt 0x5576c2ef50b0 <col:27, col:66>
|   `-ReturnStmt 0x5576c2ef50a0 <col:29, col:63>
|     `-UnaryOperator 0x5576c2ef5088 <col:36, col:63> 'uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5576c2ef5068 <col:37, col:63> 'uint8_t':'unsigned char' lvalue
|         |-ImplicitCastExpr 0x5576c2ef5050 <col:37, col:51> 'uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5576c2ef5000 <col:37, col:51> 'uint8_t [16]' lvalue .__u6_addr8 0x5576c2c302e8
|         |   `-MemberExpr 0x5576c2ef4fd0 <col:37, col:43> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5576c2c30608
|         |     `-MemberExpr 0x5576c2ef4fa0 <col:37> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x5576c2ef2788
|         |       `-CXXThisExpr 0x5576c2ef4f90 <col:37> 'IP6Address *' implicit this
|         `-IntegerLiteral 0x5576c2ef5030 <col:62> 'int' 0
|-CXXMethodDecl 0x5576c2ef0958 <line:80:5, col:78> col:26 used data 'const unsigned char *() const'
| `-CompoundStmt 0x5576c2ef5228 <col:39, col:78>
|   `-ReturnStmt 0x5576c2ef5218 <col:41, col:75>
|     `-UnaryOperator 0x5576c2ef5200 <col:48, col:75> 'const uint8_t *' prefix '&' cannot overflow
|       `-ArraySubscriptExpr 0x5576c2ef51e0 <col:49, col:75> 'const uint8_t':'const unsigned char' lvalue
|         |-ImplicitCastExpr 0x5576c2ef51c8 <col:49, col:63> 'const uint8_t *' <ArrayToPointerDecay>
|         | `-MemberExpr 0x5576c2ef5138 <col:49, col:63> 'uint8_t const[16]' lvalue .__u6_addr8 0x5576c2c302e8
|         |   `-MemberExpr 0x5576c2ef5108 <col:49, col:55> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5576c2c30608
|         |     `-MemberExpr 0x5576c2ef50d8 <col:49> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x5576c2ef2788
|         |       `-CXXThisExpr 0x5576c2ef50c8 <col:49> 'const IP6Address *' implicit this
|         `-IntegerLiteral 0x5576c2ef5168 <col:74> 'int' 0
|-CXXMethodDecl 0x5576c2ef0a78 <line:81:5, col:75> col:15 used data16 'uint16_t *()'
| `-CompoundStmt 0x5576c2ef5398 <col:24, col:75>
|   `-ReturnStmt 0x5576c2ef5388 <col:26, col:72>
|     `-CStyleCastExpr 0x5576c2ef5360 <col:33, col:72> 'uint16_t *' <BitCast>
|       `-UnaryOperator 0x5576c2ef5338 <col:45, col:72> 'uint8_t *' prefix '&' cannot overflow
|         `-ArraySubscriptExpr 0x5576c2ef5318 <col:46, col:72> 'uint8_t':'unsigned char' lvalue
|           |-ImplicitCastExpr 0x5576c2ef5300 <col:46, col:60> 'uint8_t *' <ArrayToPointerDecay>
|           | `-MemberExpr 0x5576c2ef52b0 <col:46, col:60> 'uint8_t [16]' lvalue .__u6_addr8 0x5576c2c302e8
|           |   `-MemberExpr 0x5576c2ef5280 <col:46, col:52> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5576c2c30608
|           |     `-MemberExpr 0x5576c2ef5250 <col:46> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x5576c2ef2788
|           |       `-CXXThisExpr 0x5576c2ef5240 <col:46> 'IP6Address *' implicit this
|           `-IntegerLiteral 0x5576c2ef52e0 <col:71> 'int' 0
|-CXXMethodDecl 0x5576c2ef0b38 <line:82:5, col:87> col:21 data16 'const uint16_t *() const'
| `-CompoundStmt 0x5576c2ef5520 <col:36, col:87>
|   `-ReturnStmt 0x5576c2ef5510 <col:38, col:84>
|     `-ImplicitCastExpr 0x5576c2ef54f8 <col:45, col:84> 'const uint16_t *' <NoOp>
|       `-CStyleCastExpr 0x5576c2ef54d0 <col:45, col:84> 'uint16_t *' <BitCast>
|         `-UnaryOperator 0x5576c2ef54a8 <col:57, col:84> 'const uint8_t *' prefix '&' cannot overflow
|           `-ArraySubscriptExpr 0x5576c2ef5488 <col:58, col:84> 'const uint8_t':'const unsigned char' lvalue
|             |-ImplicitCastExpr 0x5576c2ef5470 <col:58, col:72> 'const uint8_t *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5576c2ef5420 <col:58, col:72> 'uint8_t const[16]' lvalue .__u6_addr8 0x5576c2c302e8
|             |   `-MemberExpr 0x5576c2ef53f0 <col:58, col:64> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5576c2c30608
|             |     `-MemberExpr 0x5576c2ef53c0 <col:58> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x5576c2ef2788
|             |       `-CXXThisExpr 0x5576c2ef53b0 <col:58> 'const IP6Address *' implicit this
|             `-IntegerLiteral 0x5576c2ef5450 <col:83> 'int' 0
|-CXXMethodDecl 0x5576c2ef0bf8 <line:83:5, col:75> col:15 used data32 'uint32_t *()'
| `-CompoundStmt 0x5576c2ef5690 <col:24, col:75>
|   `-ReturnStmt 0x5576c2ef5680 <col:26, col:72>
|     `-CStyleCastExpr 0x5576c2ef5658 <col:33, col:72> 'uint32_t *' <BitCast>
|       `-UnaryOperator 0x5576c2ef5630 <col:45, col:72> 'uint8_t *' prefix '&' cannot overflow
|         `-ArraySubscriptExpr 0x5576c2ef5610 <col:46, col:72> 'uint8_t':'unsigned char' lvalue
|           |-ImplicitCastExpr 0x5576c2ef55f8 <col:46, col:60> 'uint8_t *' <ArrayToPointerDecay>
|           | `-MemberExpr 0x5576c2ef55a8 <col:46, col:60> 'uint8_t [16]' lvalue .__u6_addr8 0x5576c2c302e8
|           |   `-MemberExpr 0x5576c2ef5578 <col:46, col:52> 'union (anonymous union at /usr/include/netinet/in.h:214:5)':'in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5576c2c30608
|           |     `-MemberExpr 0x5576c2ef5548 <col:46> 'struct in6_addr':'in6_addr' lvalue ->_addr 0x5576c2ef2788
|           |       `-CXXThisExpr 0x5576c2ef5538 <col:46> 'IP6Address *' implicit this
|           `-IntegerLiteral 0x5576c2ef55d8 <col:71> 'int' 0
|-CXXMethodDecl 0x5576c2ef0cb8 <line:84:5, col:87> col:21 used data32 'const uint32_t *() const'
| `-CompoundStmt 0x5576c2ef5818 <col:36, col:87>
|   `-ReturnStmt 0x5576c2ef5808 <col:38, col:84>
|     `-ImplicitCastExpr 0x5576c2ef57f0 <col:45, col:84> 'const uint32_t *' <NoOp>
|       `-CStyleCastExpr 0x5576c2ef57c8 <col:45, col:84> 'uint32_t *' <BitCast>
|         `-UnaryOperator 0x5576c2ef57a0 <col:57, col:84> 'const uint8_t *' prefix '&' cannot overflow
|           `-ArraySubscriptExpr 0x5576c2ef5780 <col:58, col:84> 'const uint8_t':'const unsigned char' lvalue
|             |-ImplicitCastExpr 0x5576c2ef5768 <col:58, col:72> 'const uint8_t *' <ArrayToPointerDecay>
|             | `-MemberExpr 0x5576c2ef5718 <col:58, col:72> 'uint8_t const[16]' lvalue .__u6_addr8 0x5576c2c302e8
|             |   `-MemberExpr 0x5576c2ef56e8 <col:58, col:64> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5576c2c30608
|             |     `-MemberExpr 0x5576c2ef56b8 <col:58> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x5576c2ef2788
|             |       `-CXXThisExpr 0x5576c2ef56a8 <col:58> 'const IP6Address *' implicit this
|             `-IntegerLiteral 0x5576c2ef5748 <col:83> 'int' 0
|-CXXMethodDecl 0x5576c2ef0d78 <line:86:5, col:32> col:21 used hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x5576c2ef0e40 <line:88:5, col:30> col:9 mask_to_prefix_len 'int () const'
|-CXXMethodDecl 0x5576c2ef1068 <line:89:5, col:80> col:17 matches_prefix 'bool (const IP6Address &, const IP6Address &) const' inline
| |-ParmVarDecl 0x5576c2ef0f18 <col:32, col:50> col:50 addr 'const IP6Address &'
| `-ParmVarDecl 0x5576c2ef0f90 <col:56, col:74> col:74 mask 'const IP6Address &'
|-CXXMethodDecl 0x5576c2ef11e8 <line:90:5, col:54> col:17 mask_as_specific 'bool (const IP6Address &) const' inline
| `-ParmVarDecl 0x5576c2ef1128 <col:34, col:51> col:52 'const IP6Address &'
|-CXXMethodDecl 0x5576c2ef12b0 <line:97:5, line:99:5> line:97:10 has_ether_address 'bool () const'
| `-CompoundStmt 0x5576c2ef5b30 <col:36, line:99:5>
|   `-ReturnStmt 0x5576c2ef5b20 <line:98:2, col:81>
|     `-BinaryOperator 0x5576c2ef5b00 <col:9, col:81> 'bool' '&&'
|       |-BinaryOperator 0x5576c2ef5978 <col:9, col:41> 'bool' '=='
|       | |-ImplicitCastExpr 0x5576c2ef5960 <col:9, col:36> 'int' <IntegralCast>
|       | | `-ImplicitCastExpr 0x5576c2ef5948 <col:9, col:36> 'uint8_t':'unsigned char' <LValueToRValue>
|       | |   `-ArraySubscriptExpr 0x5576c2ef5908 <col:9, col:36> 'const uint8_t':'const unsigned char' lvalue
|       | |     |-ImplicitCastExpr 0x5576c2ef58f0 <col:9, col:23> 'const uint8_t *' <ArrayToPointerDecay>
|       | |     | `-MemberExpr 0x5576c2ef58a0 <col:9, col:23> 'uint8_t const[16]' lvalue .__u6_addr8 0x5576c2c302e8
|       | |     |   `-MemberExpr 0x5576c2ef5870 <col:9, col:15> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5576c2c30608
|       | |     |     `-MemberExpr 0x5576c2ef5840 <col:9> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x5576c2ef2788
|       | |     |       `-CXXThisExpr 0x5576c2ef5830 <col:9> 'const IP6Address *' implicit this
|       | |     `-IntegerLiteral 0x5576c2ef58d0 <col:34> 'int' 11
|       | `-IntegerLiteral 0x5576c2ef5928 <col:41> 'int' 255
|       `-BinaryOperator 0x5576c2ef5ae0 <col:49, col:81> 'bool' '=='
|         |-ImplicitCastExpr 0x5576c2ef5ac8 <col:49, col:76> 'int' <IntegralCast>
|         | `-ImplicitCastExpr 0x5576c2ef5ab0 <col:49, col:76> 'uint8_t':'unsigned char' <LValueToRValue>
|         |   `-ArraySubscriptExpr 0x5576c2ef5a70 <col:49, col:76> 'const uint8_t':'const unsigned char' lvalue
|         |     |-ImplicitCastExpr 0x5576c2ef5a58 <col:49, col:63> 'const uint8_t *' <ArrayToPointerDecay>
|         |     | `-MemberExpr 0x5576c2ef5a08 <col:49, col:63> 'uint8_t const[16]' lvalue .__u6_addr8 0x5576c2c302e8
|         |     |   `-MemberExpr 0x5576c2ef59d8 <col:49, col:55> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5576c2c30608
|         |     |     `-MemberExpr 0x5576c2ef59a8 <col:49> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x5576c2ef2788
|         |     |       `-CXXThisExpr 0x5576c2ef5998 <col:49> 'const IP6Address *' implicit this
|         |     `-IntegerLiteral 0x5576c2ef5a38 <col:74> 'int' 12
|         `-IntegerLiteral 0x5576c2ef5a90 <col:81> 'int' 254
|-CXXMethodDecl 0x5576c2ef1428 <line:104:5, col:41> col:10 ether_address 'bool (EtherAddress &) const'
| `-ParmVarDecl 0x5576c2ef1360 <col:24, col:38> col:38 x 'EtherAddress &'
|-CXXMethodDecl 0x5576c2ef14f0 <line:111:5, line:114:5> line:111:17 is_ip4_compatible 'bool () const' inline
| `-CompoundStmt 0x5576c2ef6018 <col:43, line:114:5>
|   `-ReturnStmt 0x5576c2ef6008 <line:112:2, line:113:24>
|     `-BinaryOperator 0x5576c2ef5fe8 <line:112:9, line:113:24> 'bool' '&&'
|       |-BinaryOperator 0x5576c2ef5e48 <line:112:9, col:44> 'bool' '&&'
|       | |-BinaryOperator 0x5576c2ef5ca8 <col:9, col:24> 'bool' '=='
|       | | |-ImplicitCastExpr 0x5576c2ef5c78 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|       | | | `-ArraySubscriptExpr 0x5576c2ef5c38 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|       | | |   |-CXXMemberCallExpr 0x5576c2ef5bf8 <col:9, col:16> 'const uint32_t *'
|       | | |   | `-MemberExpr 0x5576c2ef5bc8 <col:9> '<bound member function type>' ->data32 0x5576c2ef0cb8
|       | | |   |   `-CXXThisExpr 0x5576c2ef5bb8 <col:9> 'const IP6Address *' implicit this
|       | | |   `-IntegerLiteral 0x5576c2ef5c18 <col:18> 'int' 0
|       | | `-ImplicitCastExpr 0x5576c2ef5c90 <col:24> 'unsigned int' <IntegralCast>
|       | |   `-IntegerLiteral 0x5576c2ef5c58 <col:24> 'int' 0
|       | `-BinaryOperator 0x5576c2ef5e28 <col:29, col:44> 'bool' '=='
|       |   |-ImplicitCastExpr 0x5576c2ef5df8 <col:29, col:39> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-ArraySubscriptExpr 0x5576c2ef5db8 <col:29, col:39> 'const uint32_t':'const unsigned int' lvalue
|       |   |   |-CXXMemberCallExpr 0x5576c2ef5d78 <col:29, col:36> 'const uint32_t *'
|       |   |   | `-MemberExpr 0x5576c2ef5d48 <col:29> '<bound member function type>' ->data32 0x5576c2ef0cb8
|       |   |   |   `-CXXThisExpr 0x5576c2ef5d38 <col:29> 'const IP6Address *' implicit this
|       |   |   `-IntegerLiteral 0x5576c2ef5d98 <col:38> 'int' 1
|       |   `-ImplicitCastExpr 0x5576c2ef5e10 <col:44> 'unsigned int' <IntegralCast>
|       |     `-IntegerLiteral 0x5576c2ef5dd8 <col:44> 'int' 0
|       `-BinaryOperator 0x5576c2ef5fc8 <line:113:9, col:24> 'bool' '=='
|         |-ImplicitCastExpr 0x5576c2ef5f98 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-ArraySubscriptExpr 0x5576c2ef5f58 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|         |   |-CXXMemberCallExpr 0x5576c2ef5f18 <col:9, col:16> 'const uint32_t *'
|         |   | `-MemberExpr 0x5576c2ef5ee8 <col:9> '<bound member function type>' ->data32 0x5576c2ef0cb8
|         |   |   `-CXXThisExpr 0x5576c2ef5ed8 <col:9> 'const IP6Address *' implicit this
|         |   `-IntegerLiteral 0x5576c2ef5f38 <col:18> 'int' 2
|         `-ImplicitCastExpr 0x5576c2ef5fb0 <col:24> 'unsigned int' <IntegralCast>
|           `-IntegerLiteral 0x5576c2ef5f78 <col:24> 'int' 0
|-CXXMethodDecl 0x5576c2ef15b0 <line:120:5, line:123:5> line:120:17 is_ip4_mapped 'bool () const' inline
| `-CompoundStmt 0x5576c2ef6590 <col:39, line:123:5>
|   `-ReturnStmt 0x5576c2ef6580 <line:121:2, line:122:41>
|     `-BinaryOperator 0x5576c2ef6560 <line:121:9, line:122:41> 'bool' '&&'
|       |-BinaryOperator 0x5576c2ef6330 <line:121:9, col:44> 'bool' '&&'
|       | |-BinaryOperator 0x5576c2ef6190 <col:9, col:24> 'bool' '=='
|       | | |-ImplicitCastExpr 0x5576c2ef6160 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|       | | | `-ArraySubscriptExpr 0x5576c2ef6120 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|       | | |   |-CXXMemberCallExpr 0x5576c2ef60e0 <col:9, col:16> 'const uint32_t *'
|       | | |   | `-MemberExpr 0x5576c2ef60b0 <col:9> '<bound member function type>' ->data32 0x5576c2ef0cb8
|       | | |   |   `-CXXThisExpr 0x5576c2ef60a0 <col:9> 'const IP6Address *' implicit this
|       | | |   `-IntegerLiteral 0x5576c2ef6100 <col:18> 'int' 0
|       | | `-ImplicitCastExpr 0x5576c2ef6178 <col:24> 'unsigned int' <IntegralCast>
|       | |   `-IntegerLiteral 0x5576c2ef6140 <col:24> 'int' 0
|       | `-BinaryOperator 0x5576c2ef6310 <col:29, col:44> 'bool' '=='
|       |   |-ImplicitCastExpr 0x5576c2ef62e0 <col:29, col:39> 'uint32_t':'unsigned int' <LValueToRValue>
|       |   | `-ArraySubscriptExpr 0x5576c2ef62a0 <col:29, col:39> 'const uint32_t':'const unsigned int' lvalue
|       |   |   |-CXXMemberCallExpr 0x5576c2ef6260 <col:29, col:36> 'const uint32_t *'
|       |   |   | `-MemberExpr 0x5576c2ef6230 <col:29> '<bound member function type>' ->data32 0x5576c2ef0cb8
|       |   |   |   `-CXXThisExpr 0x5576c2ef6220 <col:29> 'const IP6Address *' implicit this
|       |   |   `-IntegerLiteral 0x5576c2ef6280 <col:38> 'int' 1
|       |   `-ImplicitCastExpr 0x5576c2ef62f8 <col:44> 'unsigned int' <IntegralCast>
|       |     `-IntegerLiteral 0x5576c2ef62c0 <col:44> 'int' 0
|       `-BinaryOperator 0x5576c2ef6540 <line:122:9, col:41> 'bool' '=='
|         |-ImplicitCastExpr 0x5576c2ef6528 <col:9, col:19> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-ArraySubscriptExpr 0x5576c2ef6440 <col:9, col:19> 'const uint32_t':'const unsigned int' lvalue
|         |   |-CXXMemberCallExpr 0x5576c2ef6400 <col:9, col:16> 'const uint32_t *'
|         |   | `-MemberExpr 0x5576c2ef63d0 <col:9> '<bound member function type>' ->data32 0x5576c2ef0cb8
|         |   |   `-CXXThisExpr 0x5576c2ef63c0 <col:9> 'const IP6Address *' implicit this
|         |   `-IntegerLiteral 0x5576c2ef6420 <col:18> 'int' 2
|         `-CallExpr 0x5576c2ef6500 <col:24, col:41> 'uint32_t':'unsigned int'
|           |-ImplicitCastExpr 0x5576c2ef64e8 <col:24> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|           | `-DeclRefExpr 0x5576c2ef64c8 <col:24> 'uint32_t (uint32_t) throw()' lvalue Function 0x5576c2c378c0 'htonl' 'uint32_t (uint32_t) throw()'
|           `-IntegerLiteral 0x5576c2ef64a8 <col:30> 'unsigned int' 65535
|-CXXMethodDecl 0x5576c2ef1670 <line:129:5, line:131:5> line:129:17 is_multicast 'bool () const' inline
| `-CompoundStmt 0x5576c2ef6720 <col:38, line:131:5>
|   `-ReturnStmt 0x5576c2ef6710 <line:130:9, col:47>
|     `-BinaryOperator 0x5576c2ef66f0 <col:16, col:47> 'bool' '=='
|       |-ImplicitCastExpr 0x5576c2ef66d8 <col:16, col:42> 'int' <IntegralCast>
|       | `-ImplicitCastExpr 0x5576c2ef66c0 <col:16, col:42> 'uint8_t':'unsigned char' <LValueToRValue>
|       |   `-ArraySubscriptExpr 0x5576c2ef6680 <col:16, col:42> 'const uint8_t':'const unsigned char' lvalue
|       |     |-ImplicitCastExpr 0x5576c2ef6668 <col:16, col:30> 'const uint8_t *' <ArrayToPointerDecay>
|       |     | `-MemberExpr 0x5576c2ef6618 <col:16, col:30> 'uint8_t const[16]' lvalue .__u6_addr8 0x5576c2c302e8
|       |     |   `-MemberExpr 0x5576c2ef65e8 <col:16, col:22> 'const union (anonymous union at /usr/include/netinet/in.h:214:5)':'const in6_addr::(anonymous union at /usr/include/netinet/in.h:214:5)' lvalue .__in6_u 0x5576c2c30608
|       |     |     `-MemberExpr 0x5576c2ef65b8 <col:16> 'const struct in6_addr':'const in6_addr' lvalue ->_addr 0x5576c2ef2788
|       |     |       `-CXXThisExpr 0x5576c2ef65a8 <col:16> 'const IP6Address *' implicit this
|       |     `-IntegerLiteral 0x5576c2ef6648 <col:41> 'int' 0
|       `-IntegerLiteral 0x5576c2ef66a0 <col:47> 'int' 255
|-CXXMethodDecl 0x5576c2ef1730 <line:137:5, line:139:5> line:137:17 is_link_local 'bool () const' inline
| `-CompoundStmt 0x5576c2ef6af8 <col:39, line:139:5>
|   `-ReturnStmt 0x5576c2ef6ae8 <line:138:9, col:67>
|     `-BinaryOperator 0x5576c2ef6ac8 <col:16, col:67> 'bool' '&&'
|       |-BinaryOperator 0x5576c2ef6928 <col:16, col:47> 'bool' '=='
|       | |-ImplicitCastExpr 0x5576c2ef6910 <col:16, col:26> 'uint32_t':'unsigned int' <LValueToRValue>
|       | | `-ArraySubscriptExpr 0x5576c2ef6828 <col:16, col:26> 'const uint32_t':'const unsigned int' lvalue
|       | |   |-CXXMemberCallExpr 0x5576c2ef67e8 <col:16, col:23> 'const uint32_t *'
|       | |   | `-MemberExpr 0x5576c2ef67b8 <col:16> '<bound member function type>' ->data32 0x5576c2ef0cb8
|       | |   |   `-CXXThisExpr 0x5576c2ef67a8 <col:16> 'const IP6Address *' implicit this
|       | |   `-IntegerLiteral 0x5576c2ef6808 <col:25> 'int' 0
|       | `-CallExpr 0x5576c2ef68e8 <col:31, col:47> 'uint32_t':'unsigned int'
|       |   |-ImplicitCastExpr 0x5576c2ef68d0 <col:31> 'uint32_t (*)(uint32_t) throw()' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x5576c2ef68b0 <col:31> 'uint32_t (uint32_t) throw()' lvalue Function 0x5576c2c378c0 'htonl' 'uint32_t (uint32_t) throw()'
|       |   `-IntegerLiteral 0x5576c2ef6890 <col:37> 'unsigned int' 4269801472
|       `-BinaryOperator 0x5576c2ef6aa8 <col:52, col:67> 'bool' '=='
|         |-ImplicitCastExpr 0x5576c2ef6a78 <col:52, col:62> 'uint32_t':'unsigned int' <LValueToRValue>
|         | `-ArraySubscriptExpr 0x5576c2ef6a38 <col:52, col:62> 'const uint32_t':'const unsigned int' lvalue
|         |   |-CXXMemberCallExpr 0x5576c2ef69f8 <col:52, col:59> 'const uint32_t *'
|         |   | `-MemberExpr 0x5576c2ef69c8 <col:52> '<bound member function type>' ->data32 0x5576c2ef0cb8
|         |   |   `-CXXThisExpr 0x5576c2ef69b8 <col:52> 'const IP6Address *' implicit this
|         |   `-IntegerLiteral 0x5576c2ef6a18 <col:61> 'int' 1
|         `-ImplicitCastExpr 0x5576c2ef6a90 <col:67> 'unsigned int' <IntegralCast>
|           `-IntegerLiteral 0x5576c2ef6a58 <col:67> 'int' 0
|-CXXMethodDecl 0x5576c2ef17f0 <line:145:5, col:29> col:15 used ip4_address 'IPAddress () const'
|-CXXMethodDecl 0x5576c2ef1998 <line:154:5, col:53> col:24 operator&= 'IP6Address &(const IP6Address &)' inline
| `-ParmVarDecl 0x5576c2ef18a0 <col:35, col:52> col:53 'const IP6Address &'
|-CXXMethodDecl 0x5576c2ef1b58 <line:155:5, col:58> col:24 operator&= 'IP6Address &(const struct in6_addr &)' inline
| `-ParmVarDecl 0x5576c2ef1a68 <col:35, col:57> col:58 'const struct in6_addr &'
|-CXXMethodDecl 0x5576c2ef1ca0 <line:156:5, col:53> col:24 operator|= 'IP6Address &(const IP6Address &)' inline
| `-ParmVarDecl 0x5576c2ef1c10 <col:35, col:52> col:53 'const IP6Address &'
|-CXXMethodDecl 0x5576c2ef1e00 <line:157:5, col:58> col:24 operator|= 'IP6Address &(const struct in6_addr &)' inline
| `-ParmVarDecl 0x5576c2ef1d70 <col:35, col:57> col:58 'const struct in6_addr &'
|-CXXMethodDecl 0x5576c2ef1f60 <line:159:5, col:57> col:24 operator= 'IP6Address &(const struct in6_addr &)' inline
| `-ParmVarDecl 0x5576c2ef1ed0 <col:34, col:56> col:57 'const struct in6_addr &'
|-CXXMethodDecl 0x5576c2ef2128 <line:160:5, col:56> col:24 used operator= 'IP6Address &(const struct in_addr &)' inline
| `-ParmVarDecl 0x5576c2ef2030 <col:34, col:55> col:56 'const struct in_addr &'
|-CXXMethodDecl 0x5576c2ef22a8 <line:162:5, col:35> col:10 used unparse 'void (StringAccum &) const'
| `-ParmVarDecl 0x5576c2ef21e0 <col:18, col:31> col:31 sa 'StringAccum &'
|-CXXMethodDecl 0x5576c2ef2370 <line:163:5, col:22> col:12 used unparse 'String () const'
|-CXXMethodDecl 0x5576c2ef2430 <line:164:5, col:31> col:12 unparse_expanded 'String () const'
|-CXXMethodDecl 0x5576c2ef24f0 <line:166:5, col:42> col:12 s 'String () const'
| `-CompoundStmt 0x5576c2ef6c78 <col:22, col:42>
|   `-ReturnStmt 0x5576c2ef6c68 <col:24, col:39>
|     `-ExprWithCleanups 0x5576c2ef6c50 <col:31, col:39> 'String'
|       `-CXXConstructExpr 0x5576c2ef6c20 <col:31, col:39> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x5576c2ef6c08 <col:31, col:39> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x5576c2ef6be8 <col:31, col:39> 'String' (CXXTemporary 0x5576c2ef6be8)
|             `-CXXMemberCallExpr 0x5576c2ef6bc0 <col:31, col:39> 'String'
|               `-MemberExpr 0x5576c2ef6b90 <col:31> '<bound member function type>' ->unparse 0x5576c2ef2370
|                 `-CXXThisExpr 0x5576c2ef6b80 <col:31> 'const IP6Address *' implicit this
|-CXXConversionDecl 0x5576c2ef25c0 <line:167:5, col:62> col:12 operator String 'String () const' inline
| `-DeprecatedAttr 0x5576c2ef2668 <col:51> "" ""
|-TypedefDecl 0x5576c2ef26e8 <line:169:5, col:31> col:31 parameter_type 'const IP6Address &'
| `-LValueReferenceType 0x5576c2ef0ee0 'const IP6Address &'
|   `-QualType 0x5576c2eb3301 'const IP6Address' const
|     `-RecordType 0x5576c2eb3300 'IP6Address'
|       `-CXXRecord 0x5576c2eef0d0 'IP6Address'
|-AccessSpecDecl 0x5576c2ef2740 <line:171:3, col:10> col:3 private
|-FieldDecl 0x5576c2ef2788 <line:173:5, col:21> col:21 referenced _addr 'struct in6_addr':'in6_addr'
|-CXXMethodDecl 0x5576c2ef36c0 <line:14:7> col:7 implicit operator= 'IP6Address &(const IP6Address &)' inline default trivial noexcept-unevaluated 0x5576c2ef36c0
| `-ParmVarDecl 0x5576c2ef3798 <col:7> col:7 'const IP6Address &'
|-CXXMethodDecl 0x5576c2ef3ea8 <col:7> col:7 implicit operator= 'IP6Address &(IP6Address &&)' inline default trivial noexcept-unevaluated 0x5576c2ef3ea8
| `-ParmVarDecl 0x5576c2ef3fb8 <col:7> col:7 'IP6Address &&'
|-CXXConstructorDecl 0x5576c2ef4028 <col:7> col:7 implicit constexpr IP6Address 'void (const IP6Address &)' inline default trivial noexcept-unevaluated 0x5576c2ef4028
| `-ParmVarDecl 0x5576c2ef4138 <col:7> col:7 'const IP6Address &'
|-CXXConstructorDecl 0x5576c2ef4290 <col:7> col:7 implicit used constexpr IP6Address 'void (IP6Address &&) noexcept' inline default trivial
| |-ParmVarDecl 0x5576c2ef43a8 <col:7> col:7 used 'IP6Address &&'
| |-CXXCtorInitializer Field 0x5576c2ef2788 '_addr' 'struct in6_addr':'in6_addr'
| | `-CXXConstructExpr 0x5576c2e6f6a8 <col:7> 'struct in6_addr':'in6_addr' 'void (in6_addr &&) noexcept'
| |   `-MemberExpr 0x5576c2e6f550 <col:7> 'struct in6_addr':'in6_addr' xvalue ._addr 0x5576c2ef2788
| |     `-CXXStaticCastExpr 0x5576c2e6f520 <col:7> 'IP6Address' xvalue static_cast<class IP6Address &&> <NoOp>
| |       `-DeclRefExpr 0x5576c2e6f4f0 <col:7> 'IP6Address' lvalue ParmVar 0x5576c2ef43a8 '' 'IP6Address &&'
| `-CompoundStmt 0x5576c2e6f708 <col:7>
`-CXXDestructorDecl 0x5576c2e6f358 <col:7> col:7 implicit referenced ~IP6Address 'void () noexcept' inline default trivial

Layout: <CGRecordLayout
  LLVMType:%class.IP6Address = type { %struct.in6_addr }
  NonVirtualBaseLLVMType:%class.IP6Address = type { %struct.in6_addr }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class vector_memory<class typed_array_memory<class String> >
         0 |   vector_memory<class typed_array_memory<class String> >::type * l_
         8 |   vector_memory::size_type n_
        12 |   vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping AST Record Layout
         0 | class Vector<class String>
         0 |   class vector_memory<class typed_array_memory<class String> > vm_
         0 |     vector_memory<class typed_array_memory<class String> >::type * l_
         8 |     vector_memory::size_type n_
        12 |     vector_memory::size_type capacity_
           | [sizeof=16, dsize=16, align=8,
           |  nvsize=16, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2bf0f00 <../dummy_inc/click/string.hh:189:5, line:198:5> line:189:12 referenced struct memo_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| |-DefaultConstructor exists trivial needs_implicit
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor exists simple trivial needs_implicit
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment exists simple trivial needs_implicit
| `-Destructor simple irrelevant trivial needs_implicit
|-CXXRecordDecl 0x5576c2bf31a0 <col:5, col:12> col:12 implicit struct memo_t
|-FieldDecl 0x5576c2bf3240 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
|-FieldDecl 0x5576c2bf32a0 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
|-FieldDecl 0x5576c2bf3300 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
`-FieldDecl 0x5576c2bf33b0 <line:197:2, col:18> col:7 real_data 'char [8]'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  NonVirtualBaseLLVMType:%"struct.String::memo_t" = type { i32, i32, i32, [8 x i8] }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2bf36c0 <../dummy_inc/click/string.hh:204:5, line:208:5> line:204:12 referenced struct rep_t definition
|-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| |-DefaultConstructor exists trivial
| |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| |-MoveConstructor exists simple trivial
| |-CopyAssignment trivial has_const_param implicit_has_const_param
| |-MoveAssignment exists simple trivial
| `-Destructor simple irrelevant trivial
|-CXXRecordDecl 0x5576c2bf37d8 <col:5, col:12> col:12 implicit struct rep_t
|-FieldDecl 0x5576c2bf3880 <line:205:2, col:14> col:14 referenced data 'const char *'
|-FieldDecl 0x5576c2bf38e8 <line:206:2, col:6> col:6 referenced length 'int'
|-FieldDecl 0x5576c2bf3978 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
|-CXXConstructorDecl 0x5576c2bf7bb0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| `-CompoundStmt 0x5576c2bf7fe8 <col:12>
|-CXXConstructorDecl 0x5576c2bf7cb8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5576c2bf7dc8 <col:12> col:12 used 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5576c2bf3880 'data' 'const char *'
| | `-ImplicitCastExpr 0x5576c2bfaca0 <col:12> 'const char *' <LValueToRValue>
| |   `-MemberExpr 0x5576c2bfac70 <col:12> 'const char *const' lvalue .data 0x5576c2bf3880
| |     `-DeclRefExpr 0x5576c2bfac50 <col:12> 'const String::rep_t' lvalue ParmVar 0x5576c2bf7dc8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5576c2bf38e8 'length' 'int'
| | `-ImplicitCastExpr 0x5576c2bfad30 <col:12> 'int' <LValueToRValue>
| |   `-MemberExpr 0x5576c2bfad00 <col:12> 'const int' lvalue .length 0x5576c2bf38e8
| |     `-DeclRefExpr 0x5576c2bface0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5576c2bf7dc8 '' 'const String::rep_t &'
| |-CXXCtorInitializer Field 0x5576c2bf3978 'memo' 'String::memo_t *'
| | `-ImplicitCastExpr 0x5576c2bfadc0 <col:12> 'String::memo_t *' <LValueToRValue>
| |   `-MemberExpr 0x5576c2bfad90 <col:12> 'String::memo_t *const' lvalue .memo 0x5576c2bf3978
| |     `-DeclRefExpr 0x5576c2bfad70 <col:12> 'const String::rep_t' lvalue ParmVar 0x5576c2bf7dc8 '' 'const String::rep_t &'
| `-CompoundStmt 0x5576c2bfae18 <col:12>
|-CXXConstructorDecl 0x5576c2bf7e68 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5576c2bf7e68
| `-ParmVarDecl 0x5576c2bf7f78 <col:12> col:12 'String::rep_t &&'
|-CXXDestructorDecl 0x5576c2c003f0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
|-CXXMethodDecl 0x5576c2c0bd58 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| |-ParmVarDecl 0x5576c2c0be68 <col:12> col:12 used 'const String::rep_t &'
| `-CompoundStmt 0x5576c2c0c380 <col:12>
|   |-BinaryOperator 0x5576c2c0c198 <col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5576c2c0c150 <col:12> 'const char *' lvalue ->data 0x5576c2bf3880
|   | | `-CXXThisExpr 0x5576c2c0c140 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5576c2c0c180 <col:12> 'const char *' <LValueToRValue>
|   |   `-MemberExpr 0x5576c2c0c110 <col:12> 'const char *const' lvalue .data 0x5576c2bf3880
|   |     `-DeclRefExpr 0x5576c2c0c0f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5576c2c0be68 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5576c2c0c260 <col:12> 'int' lvalue '='
|   | |-MemberExpr 0x5576c2c0c218 <col:12> 'int' lvalue ->length 0x5576c2bf38e8
|   | | `-CXXThisExpr 0x5576c2c0c208 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5576c2c0c248 <col:12> 'int' <LValueToRValue>
|   |   `-MemberExpr 0x5576c2c0c1d8 <col:12> 'const int' lvalue .length 0x5576c2bf38e8
|   |     `-DeclRefExpr 0x5576c2c0c1b8 <col:12> 'const String::rep_t' lvalue ParmVar 0x5576c2c0be68 '' 'const String::rep_t &'
|   |-BinaryOperator 0x5576c2c0c328 <col:12> 'String::memo_t *' lvalue '='
|   | |-MemberExpr 0x5576c2c0c2e0 <col:12> 'String::memo_t *' lvalue ->memo 0x5576c2bf3978
|   | | `-CXXThisExpr 0x5576c2c0c2d0 <col:12> 'String::rep_t *' this
|   | `-ImplicitCastExpr 0x5576c2c0c310 <col:12> 'String::memo_t *' <LValueToRValue>
|   |   `-MemberExpr 0x5576c2c0c2a0 <col:12> 'String::memo_t *const' lvalue .memo 0x5576c2bf3978
|   |     `-DeclRefExpr 0x5576c2c0c280 <col:12> 'const String::rep_t' lvalue ParmVar 0x5576c2c0be68 '' 'const String::rep_t &'
|   `-ReturnStmt 0x5576c2c0c370 <col:12>
|     `-UnaryOperator 0x5576c2c0c358 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
|       `-CXXThisExpr 0x5576c2c0c348 <col:12> 'String::rep_t *' this
`-CXXMethodDecl 0x5576c2c0bed8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5576c2c0bed8
  `-ParmVarDecl 0x5576c2c0bfe8 <col:12> col:12 'String::rep_t &&'

Layout: <CGRecordLayout
  LLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  NonVirtualBaseLLVMType:%"struct.String::rep_t" = type { i8*, i32, %"struct.String::memo_t"* }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2be7650 <../dummy_inc/click/string.hh:19:1, line:304:1> line:19:7 referenced class String definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5576c2be7768 <col:1, col:7> col:7 implicit referenced class String
|-AccessSpecDecl 0x5576c2be77f8 <col:16, col:22> col:16 public
|-TypedefDecl 0x5576c2be7838 <line:21:5, col:25> col:25 referenced const_iterator 'const char *'
| `-PointerType 0x5576c29ade00 'const char *'
|   `-QualType 0x5576c29ad351 'const char' const
|     `-BuiltinType 0x5576c29ad350 'char'
|-TypedefDecl 0x5576c2be78c0 <line:22:5, col:28> col:28 iterator 'String::const_iterator':'const char *'
| `-TypedefType 0x5576c2be7890 'String::const_iterator' sugar
|   |-Typedef 0x5576c2be7838 'const_iterator'
|   `-PointerType 0x5576c29ade00 'const char *'
|     `-QualType 0x5576c29ad351 'const char' const
|       `-BuiltinType 0x5576c29ad350 'char'
|-TypedefDecl 0x5576c2be7a60 <line:24:5, col:52> col:27 referenced unspecified_bool_type 'int (String::*)() const'
| `-MemberPointerType 0x5576c2be79d0 'int (String::*)() const'
|   |-RecordType 0x5576c2be76e0 'String'
|   | `-CXXRecord 0x5576c2be7650 'String'
|   `-ParenType 0x5576c2be7970 'int () const' sugar
|     `-FunctionProtoType 0x5576c2be7940 'int () const' const cdecl
|       `-BuiltinType 0x5576c29ad3b0 'int'
|-TypedefDecl 0x5576c2be7ac8 <line:27:5, col:21> col:21 referenced intmax_t 'int64_t':'long'
| `-TypedefType 0x5576c2b027c0 'int64_t' sugar
|   |-Typedef 0x5576c2a162a0 'int64_t'
|   `-TypedefType 0x5576c29ef510 '__int64_t' sugar
|     |-Typedef 0x5576c29ef0e8 '__int64_t'
|     `-BuiltinType 0x5576c29ad3d0 'long'
|-TypedefDecl 0x5576c2be7b30 <line:28:5, col:22> col:22 referenced uintmax_t 'uint64_t':'unsigned long'
| `-TypedefType 0x5576c2b026e0 'uint64_t' sugar
|   |-Typedef 0x5576c2a16440 'uint64_t'
|   `-TypedefType 0x5576c29ef5a0 '__uint64_t' sugar
|     |-Typedef 0x5576c29ef158 '__uint64_t'
|     `-BuiltinType 0x5576c29ad470 'unsigned long'
|-TypedefDecl 0x5576c2be7bc0 <line:36:5, col:22> col:22 int_large_t 'String::intmax_t':'long'
| `-TypedefType 0x5576c2be7b90 'String::intmax_t' sugar
|   |-Typedef 0x5576c2be7ac8 'intmax_t'
|   `-TypedefType 0x5576c2b027c0 'int64_t' sugar
|     |-Typedef 0x5576c2a162a0 'int64_t'
|     `-TypedefType 0x5576c29ef510 '__int64_t' sugar
|       |-Typedef 0x5576c29ef0e8 '__int64_t'
|       `-BuiltinType 0x5576c29ad3d0 'long'
|-TypedefDecl 0x5576c2be7c50 <line:37:5, col:23> col:23 uint_large_t 'String::uintmax_t':'unsigned long'
| `-TypedefType 0x5576c2be7c20 'String::uintmax_t' sugar
|   |-Typedef 0x5576c2be7b30 'uintmax_t'
|   `-TypedefType 0x5576c2b026e0 'uint64_t' sugar
|     |-Typedef 0x5576c2a16440 'uint64_t'
|     `-TypedefType 0x5576c29ef5a0 '__uint64_t' sugar
|       |-Typedef 0x5576c29ef158 '__uint64_t'
|       `-BuiltinType 0x5576c29ad470 'unsigned long'
|-CXXConstructorDecl 0x5576c2be7d10 <line:39:5, col:19> col:12 used String 'void ()' inline
|-CXXConstructorDecl 0x5576c2be7eb8 <line:40:5, col:34> col:12 used String 'void (const String &)' inline
| `-ParmVarDecl 0x5576c2be7df8 <col:19, col:33> col:33 x 'const String &'
|-CXXConstructorDecl 0x5576c2be8068 <line:42:5, col:29> col:12 used String 'void (String &&)' inline
| `-ParmVarDecl 0x5576c2be7fa8 <col:19, col:28> col:28 x 'String &&'
|-CXXConstructorDecl 0x5576c2be81c0 <line:44:5, col:35> col:12 used String 'void (const char *)' inline
| `-ParmVarDecl 0x5576c2be8130 <col:19, col:31> col:31 cstr 'const char *'
|-CXXConstructorDecl 0x5576c2be8440 <line:45:5, col:41> col:12 String 'void (const char *, int)' inline
| |-ParmVarDecl 0x5576c2be8288 <col:19, col:31> col:31 s 'const char *'
| `-ParmVarDecl 0x5576c2be8308 <col:34, col:38> col:38 len 'int'
|-CXXConstructorDecl 0x5576c2be8698 <line:46:5, col:50> col:12 String 'void (const unsigned char *, int)' inline
| |-ParmVarDecl 0x5576c2be8540 <col:19, col:40> col:40 s 'const unsigned char *'
| `-ParmVarDecl 0x5576c2be85c0 <col:43, col:47> col:47 len 'int'
|-CXXConstructorDecl 0x5576c2be88b8 <line:47:5, col:54> col:12 used String 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5576c2be8768 <col:19, col:31> col:31 first 'const char *'
| `-ParmVarDecl 0x5576c2be87e8 <col:38, col:50> col:50 last 'const char *'
|-CXXConstructorDecl 0x5576c2be8ad8 <line:48:5, col:72> col:12 String 'void (const unsigned char *, const unsigned char *)' inline
| |-ParmVarDecl 0x5576c2be8988 <col:19, col:40> col:40 first 'const unsigned char *'
| `-ParmVarDecl 0x5576c2be8a08 <col:47, col:68> col:68 last 'const unsigned char *'
|-CXXConstructorDecl 0x5576c2be8c68 <line:49:5, col:34> col:21 String 'void (bool)' inline
| `-ParmVarDecl 0x5576c2be8ba0 <col:28, col:33> col:33 x 'bool'
|-CXXConstructorDecl 0x5576c2be8de8 <line:50:5, col:34> col:21 String 'void (char)' inline
| `-ParmVarDecl 0x5576c2be8d28 <col:28, col:33> col:33 c 'char'
|-CXXConstructorDecl 0x5576c2be8f78 <line:51:5, col:43> col:21 String 'void (unsigned char)' inline
| `-ParmVarDecl 0x5576c2be8eb0 <col:28, col:42> col:42 c 'unsigned char'
|-CXXConstructorDecl 0x5576c2be90d0 <line:52:5, col:26> col:14 String 'void (int)'
| `-ParmVarDecl 0x5576c2be9040 <col:21, col:25> col:25 x 'int'
|-CXXConstructorDecl 0x5576c2be9258 <line:53:5, col:31> col:14 String 'void (unsigned int)'
| `-ParmVarDecl 0x5576c2be9198 <col:21, col:30> col:30 x 'unsigned int'
|-CXXConstructorDecl 0x5576c2be93e8 <line:54:5, col:27> col:14 String 'void (long)'
| `-ParmVarDecl 0x5576c2be9320 <col:21, col:26> col:26 x 'long'
|-CXXConstructorDecl 0x5576c2be9578 <line:55:5, col:36> col:14 String 'void (unsigned long)'
| `-ParmVarDecl 0x5576c2be94b0 <col:21, col:35> col:35 x 'unsigned long'
|-CXXConstructorDecl 0x5576c2be9708 <line:57:5, col:32> col:14 String 'void (long long)'
| `-ParmVarDecl 0x5576c2be9640 <col:21, col:31> col:31 x 'long long'
|-CXXConstructorDecl 0x5576c2be9898 <line:58:5, col:41> col:14 String 'void (unsigned long long)'
| `-ParmVarDecl 0x5576c2be97d0 <col:21, col:40> col:40 x 'unsigned long long'
|-CXXConstructorDecl 0x5576c2be9a28 <line:65:5, col:29> col:14 String 'void (double)'
| `-ParmVarDecl 0x5576c2be9960 <col:21, col:28> col:28 x 'double'
|-CXXDestructorDecl 0x5576c2be9b20 <line:67:5, col:20> col:12 used ~String 'void () noexcept' inline
|-CXXMethodDecl 0x5576c2be9c48 <line:69:5, col:44> col:33 make_empty 'const String &()' static inline
|-CXXMethodDecl 0x5576c2be9dc8 <line:70:5, col:52> col:26 used make_uninitialized 'String (int)' static inline
| `-ParmVarDecl 0x5576c2be9d00 <col:45, col:49> col:49 len 'int'
|-CXXMethodDecl 0x5576c2be9f18 <line:71:5, col:74> col:26 make_garbage 'String (int)' static inline
| |-ParmVarDecl 0x5576c2be9e88 <col:39, col:43> col:43 len 'int'
| `-DeprecatedAttr 0x5576c2be9fc0 <col:63> "" ""
|-CXXMethodDecl 0x5576c2bea108 <line:72:5, col:54> col:26 make_stable 'String (const char *)' static inline
| `-ParmVarDecl 0x5576c2bea048 <col:38, col:50> col:50 cstr 'const char *'
|-CXXMethodDecl 0x5576c2bea318 <line:73:5, col:60> col:26 make_stable 'String (const char *, int)' static inline
| |-ParmVarDecl 0x5576c2bea1c8 <col:38, col:50> col:50 s 'const char *'
| `-ParmVarDecl 0x5576c2bea248 <col:53, col:57> col:57 len 'int'
|-CXXMethodDecl 0x5576c2bea9b8 <line:74:5, col:73> col:26 make_stable 'String (const char *, const char *)' static inline
| |-ParmVarDecl 0x5576c2bea860 <col:38, col:50> col:50 first 'const char *'
| `-ParmVarDecl 0x5576c2bea8e0 <col:57, col:69> col:69 last 'const char *'
|-CXXMethodDecl 0x5576c2beac98 <line:75:5, col:80> col:19 make_numeric 'String (String::intmax_t, int, bool)' static
| |-ParmVarDecl 0x5576c2beaa78 <col:32, col:41> col:41 x 'String::intmax_t':'long'
| |-ParmVarDecl 0x5576c2beaaf8 <col:44, col:55> col:48 base 'int' cinit
| | `-IntegerLiteral 0x5576c2bf7680 <col:55> 'int' 10
| `-ParmVarDecl 0x5576c2beab70 <col:59, col:76> col:64 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5576c2bf76a0 <col:76> 'bool' true
|-CXXMethodDecl 0x5576c2beaf78 <line:76:5, col:81> col:19 make_numeric 'String (String::uintmax_t, int, bool)' static
| |-ParmVarDecl 0x5576c2bead60 <col:32, col:42> col:42 x 'String::uintmax_t':'unsigned long'
| |-ParmVarDecl 0x5576c2beade0 <col:45, col:56> col:49 base 'int' cinit
| | `-IntegerLiteral 0x5576c2bf76b0 <col:56> 'int' 10
| `-ParmVarDecl 0x5576c2beae58 <col:60, col:77> col:65 uppercase 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5576c2bf76d0 <col:77> 'bool' true
|-CXXMethodDecl 0x5576c2beb080 <line:78:5, col:31> col:24 used data 'const char *() const' inline
|-CXXMethodDecl 0x5576c2beb148 <line:79:5, col:25> col:16 used length 'int () const' inline
|-CXXMethodDecl 0x5576c2beb210 <line:81:5, col:60> col:52 c_str 'const char *() const'
| |-NoInlineAttr 0x5576c2beb2b0 <col:20>
| `-OptimizeNoneAttr 0x5576c2beb308 <col:30>
|-CXXConversionDecl 0x5576c2beb3f8 <line:83:5, col:45> col:12 used operator int (String::*)() const 'String::unspecified_bool_type () const' inline
|-CXXMethodDecl 0x5576c2beb4c8 <line:84:5, col:25> col:17 used empty 'bool () const' inline
|-CXXMethodDecl 0x5576c2beb588 <line:85:5, col:29> col:17 operator! 'bool () const' inline
|-CXXMethodDecl 0x5576c2beb678 <line:87:5, col:35> col:27 used begin 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5576c2beb738 <line:88:5, col:33> col:27 used end 'String::const_iterator () const' inline
|-CXXMethodDecl 0x5576c2beb8b8 <line:90:5, col:35> col:17 used operator[] 'char (int) const' inline
| `-ParmVarDecl 0x5576c2beb7f0 <col:28, col:32> col:32 i 'int'
|-CXXMethodDecl 0x5576c2beba08 <line:91:5, col:27> col:17 at 'char (int) const' inline
| `-ParmVarDecl 0x5576c2beb978 <col:20, col:24> col:24 i 'int'
|-CXXMethodDecl 0x5576c2bebaf8 <line:92:5, col:25> col:17 front 'char () const' inline
|-CXXMethodDecl 0x5576c2bebbb8 <line:93:5, col:24> col:17 back 'char () const' inline
|-CXXMethodDecl 0x5576c2bebe08 <line:95:5, col:64> col:21 used hashcode 'uint32_t (const char *, const char *)' static
| |-ParmVarDecl 0x5576c2bebc70 <col:30, col:42> col:42 begin 'const char *'
| `-ParmVarDecl 0x5576c2bebcf0 <col:49, col:61> col:61 end 'const char *'
|-CXXMethodDecl 0x5576c2bec068 <line:96:5, line:97:33> line:96:28 hashcode 'uint32_t (const unsigned char *, const unsigned char *)' static inline
| |-ParmVarDecl 0x5576c2bebed0 <col:37, col:58> col:58 begin 'const unsigned char *'
| `-ParmVarDecl 0x5576c2bebf50 <line:97:9, col:30> col:30 end 'const unsigned char *'
|-CXXMethodDecl 0x5576c2bec138 <line:98:5, col:32> col:21 hashcode 'uint32_t () const' inline
|-CXXMethodDecl 0x5576c2bec348 <line:100:5, col:65> col:19 substring 'String (const char *, const char *) const' inline
| |-ParmVarDecl 0x5576c2bec1f0 <col:29, col:41> col:41 begin 'const char *'
| `-ParmVarDecl 0x5576c2bec270 <col:48, col:60> col:60 end 'const char *'
|-CXXMethodDecl 0x5576c2bec568 <line:101:5, col:40> col:12 used substring 'String (int, int) const'
| |-ParmVarDecl 0x5576c2bec410 <col:22, col:26> col:26 pos 'int'
| `-ParmVarDecl 0x5576c2bec490 <col:31, col:35> col:35 len 'int'
|-CXXMethodDecl 0x5576c2bec6f8 <line:102:5, col:38> col:19 substring 'String (int) const' inline
| `-ParmVarDecl 0x5576c2bec630 <col:29, col:33> col:33 pos 'int'
|-CXXMethodDecl 0x5576c2becd40 <line:103:5, col:25> col:12 trim_space 'String () const'
|-CXXMethodDecl 0x5576c2beceb8 <line:105:5, col:41> col:17 equals 'bool (const String &) const' inline
| `-ParmVarDecl 0x5576c2becdf0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5576c2bed0c8 <line:106:5, col:48> col:17 used equals 'bool (const char *, int) const' inline
| |-ParmVarDecl 0x5576c2becf78 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5576c2becff8 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5576c2bed2e0 <line:107:5, col:63> col:23 used compare 'int (const String &, const String &)' static inline
| |-ParmVarDecl 0x5576c2bed188 <col:31, col:45> col:45 a 'const String &'
| `-ParmVarDecl 0x5576c2bed200 <col:48, col:62> col:62 b 'const String &'
|-CXXMethodDecl 0x5576c2bed470 <line:108:5, col:41> col:16 used compare 'int (const String &) const' inline
| `-ParmVarDecl 0x5576c2bed3a0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5576c2bed690 <line:109:5, col:41> col:9 used compare 'int (const char *, int) const'
| |-ParmVarDecl 0x5576c2bed530 <col:17, col:29> col:29 s 'const char *'
| `-ParmVarDecl 0x5576c2bed5b0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5576c2bed7e0 <line:110:5, col:46> col:17 starts_with 'bool (const String &) const' inline
| `-ParmVarDecl 0x5576c2bed750 <col:29, col:43> col:43 x 'const String &'
|-CXXMethodDecl 0x5576c2bed9b8 <line:111:5, col:46> col:10 used starts_with 'bool (const char *, int) const'
| |-ParmVarDecl 0x5576c2bed8a0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5576c2bed920 <col:37, col:41> col:41 len 'int'
|-CXXMethodDecl 0x5576c2bedb08 <line:112:5, col:44> col:10 glob_match 'bool (const String &) const'
| `-ParmVarDecl 0x5576c2beda78 <col:21, col:35> col:35 pattern 'const String &'
|-CXXMethodDecl 0x5576c2bedd20 <line:125:5, col:42> col:9 find_left 'int (char, int) const'
| |-ParmVarDecl 0x5576c2bedbc0 <col:19, col:24> col:24 c 'char'
| `-ParmVarDecl 0x5576c2bedc40 <col:27, col:39> col:31 start 'int' cinit
|   `-IntegerLiteral 0x5576c2bf76e0 <col:39> 'int' 0
|-CXXMethodDecl 0x5576c2bedf40 <line:126:5, col:51> col:9 find_left 'int (const String &, int) const'
| |-ParmVarDecl 0x5576c2bedde0 <col:19, col:33> col:33 x 'const String &'
| `-ParmVarDecl 0x5576c2bede60 <col:36, col:48> col:40 start 'int' cinit
|   `-IntegerLiteral 0x5576c2bf7700 <col:48> 'int' 0
|-CXXMethodDecl 0x5576c2bee120 <line:127:5, col:52> col:9 find_right 'int (char, int) const'
| |-ParmVarDecl 0x5576c2bee000 <col:20, col:25> col:25 c 'char'
| `-ParmVarDecl 0x5576c2bee080 <col:28, col:40> col:32 start 'int' cinit
|   `-IntegerLiteral 0x5576c2bf7720 <col:40> 'int' 2147483647
|-CXXMethodDecl 0x5576c2bee1f0 <line:129:5, col:20> col:12 lower 'String () const'
|-CXXMethodDecl 0x5576c2bee2b0 <line:130:5, col:20> col:12 upper 'String () const'
|-CXXMethodDecl 0x5576c2bee370 <line:131:5, col:24> col:12 printable 'String () const'
|-CXXMethodDecl 0x5576c2bee430 <line:132:5, col:25> col:12 quoted_hex 'String () const'
|-CXXMethodDecl 0x5576c2bee4f0 <line:133:5, col:26> col:12 encode_json 'String () const'
|-CXXMethodDecl 0x5576c2bee698 <line:135:5, col:45> col:20 used operator= 'String &(const String &)' inline
| `-ParmVarDecl 0x5576c2bee5a0 <col:30, col:44> col:44 x 'const String &'
|-CXXMethodDecl 0x5576c2bee818 <line:137:5, col:40> col:20 used operator= 'String &(String &&)' inline
| `-ParmVarDecl 0x5576c2bee750 <col:30, col:39> col:39 x 'String &&'
|-CXXMethodDecl 0x5576c2bee998 <line:139:5, col:46> col:20 operator= 'String &(const char *)' inline
| `-ParmVarDecl 0x5576c2bee8d8 <col:30, col:42> col:42 cstr 'const char *'
|-CXXMethodDecl 0x5576c2beeb18 <line:141:5, col:31> col:17 swap 'void (String &)' inline
| `-ParmVarDecl 0x5576c2beea50 <col:22, col:30> col:30 x 'String &'
|-CXXMethodDecl 0x5576c2beec60 <line:143:5, col:39> col:17 append 'void (const String &)' inline
| `-ParmVarDecl 0x5576c2beebd0 <col:24, col:38> col:38 x 'const String &'
|-CXXMethodDecl 0x5576c2bef110 <line:144:5, col:40> col:17 used append 'void (const char *)' inline
| `-ParmVarDecl 0x5576c2bef080 <col:24, col:36> col:36 cstr 'const char *'
|-CXXMethodDecl 0x5576c2bef2e8 <line:145:5, col:46> col:17 used append 'void (const char *, int)' inline
| |-ParmVarDecl 0x5576c2bef1d0 <col:24, col:36> col:36 s 'const char *'
| `-ParmVarDecl 0x5576c2bef250 <col:39, col:43> col:43 len 'int'
|-CXXMethodDecl 0x5576c2bef4c8 <line:146:5, col:59> col:17 append 'void (const char *, const char *)' inline
| |-ParmVarDecl 0x5576c2bef3b0 <col:24, col:36> col:36 first 'const char *'
| `-ParmVarDecl 0x5576c2bef430 <col:43, col:55> col:55 last 'const char *'
|-CXXMethodDecl 0x5576c2bef618 <line:147:5, col:30> col:17 append 'void (char)' inline
| `-ParmVarDecl 0x5576c2bef588 <col:24, col:29> col:29 c 'char'
|-CXXMethodDecl 0x5576c2bef828 <line:148:5, col:36> col:10 append_fill 'void (int, int)'
| |-ParmVarDecl 0x5576c2bef6d8 <col:22, col:26> col:26 c 'int'
| `-ParmVarDecl 0x5576c2bef758 <col:29, col:33> col:33 len 'int'
|-CXXMethodDecl 0x5576c2bef988 <line:149:5, col:39> col:11 used append_uninitialized 'char *(int)'
| `-ParmVarDecl 0x5576c2bef8f0 <col:32, col:36> col:36 len 'int'
|-CXXMethodDecl 0x5576c2befae0 <line:150:5, col:68> col:18 append_garbage 'char *(int)' inline
| |-ParmVarDecl 0x5576c2befa48 <col:33, col:37> col:37 len 'int'
| `-DeprecatedAttr 0x5576c2befb88 <col:57> "" ""
|-CXXMethodDecl 0x5576c2befc98 <line:152:5, col:46> col:20 used operator+= 'String &(const String &)' inline
| `-ParmVarDecl 0x5576c2befc08 <col:31, col:45> col:45 x 'const String &'
|-CXXMethodDecl 0x5576c2befde8 <line:153:5, col:47> col:20 operator+= 'String &(const char *)' inline
| `-ParmVarDecl 0x5576c2befd58 <col:31, col:43> col:43 cstr 'const char *'
|-CXXMethodDecl 0x5576c2beff68 <line:154:5, col:37> col:20 operator+= 'String &(char)' inline
| `-ParmVarDecl 0x5576c2befea0 <col:31, col:36> col:36 c 'char'
|-CXXMethodDecl 0x5576c2bf0030 <line:160:5, col:29> col:17 is_shared 'bool () const' inline
|-CXXMethodDecl 0x5576c2bf00f0 <line:161:5, col:29> col:17 is_stable 'bool () const' inline
|-CXXMethodDecl 0x5576c2bf01b0 <line:163:5, col:60> col:19 unique 'String () const' inline
| `-DeprecatedAttr 0x5576c2bf0250 <col:49> "" ""
|-CXXMethodDecl 0x5576c2bf02e0 <line:164:5, col:30> col:19 used unshared 'String () const' inline
|-CXXMethodDecl 0x5576c2bf03a0 <line:165:5, col:29> col:19 compact 'String () const' inline
|-CXXMethodDecl 0x5576c2bf0490 <line:167:5, col:24> col:11 mutable_data 'char *()'
|-CXXMethodDecl 0x5576c2bf0558 <line:168:5, col:25> col:11 mutable_c_str 'char *()'
|-CXXMethodDecl 0x5576c2bf0618 <line:170:5, col:52> col:33 make_out_of_memory 'const String &()' static inline
|-CXXMethodDecl 0x5576c2bf06d8 <line:171:5, col:33> col:17 out_of_memory 'bool () const' inline
|-CXXMethodDecl 0x5576c2bf07d0 <line:172:5, col:50> col:31 out_of_memory_data 'const char *()' static inline
|-CXXMethodDecl 0x5576c2bf0898 <line:173:5, col:44> col:23 out_of_memory_length 'int ()' static inline
|-CXXMethodDecl 0x5576c2bf0960 <line:174:5, col:42> col:31 empty_data 'const char *()' static inline
|-CXXMethodDecl 0x5576c2bf0b38 <line:180:5, col:81> col:31 skip_utf8_char 'const char *(const char *, const char *)' static inline
| |-ParmVarDecl 0x5576c2bf0a18 <col:46, col:58> col:58 first 'const char *'
| `-ParmVarDecl 0x5576c2bf0a98 <col:65, col:77> col:77 last 'const char *'
|-CXXMethodDecl 0x5576c2bf0d60 <line:181:5, line:182:38> line:181:33 used skip_utf8_char 'const unsigned char *(const unsigned char *, const unsigned char *)' static
| |-ParmVarDecl 0x5576c2bf0c00 <col:48, col:69> col:69 first 'const unsigned char *'
| `-ParmVarDecl 0x5576c2bf0c80 <line:182:13, col:34> col:34 last 'const unsigned char *'
|-VarDecl 0x5576c2bf0e70 <line:184:5, col:35> col:23 used bool_data 'const char [11]' static
|-AccessSpecDecl 0x5576c2bf0ed8 <line:186:3, col:10> col:3 private
|-CXXRecordDecl 0x5576c2bf0f00 <line:189:5, line:198:5> line:189:12 referenced struct memo_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial
| | |-DefaultConstructor exists trivial needs_implicit
| | |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveConstructor exists simple trivial needs_implicit
| | |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| | |-MoveAssignment exists simple trivial needs_implicit
| | `-Destructor simple irrelevant trivial needs_implicit
| |-CXXRecordDecl 0x5576c2bf31a0 <col:5, col:12> col:12 implicit struct memo_t
| |-FieldDecl 0x5576c2bf3240 <line:190:2, col:20> col:20 referenced refcount 'volatile uint32_t':'volatile unsigned int'
| |-FieldDecl 0x5576c2bf32a0 <line:191:2, col:11> col:11 referenced capacity 'uint32_t':'unsigned int'
| |-FieldDecl 0x5576c2bf3300 <line:192:2, col:20> col:20 dirty 'volatile uint32_t':'volatile unsigned int'
| `-FieldDecl 0x5576c2bf33b0 <line:197:2, col:18> col:7 real_data 'char [8]'
|-EnumDecl 0x5576c2bf3418 <line:200:5, line:202:5> line:200:5
| `-EnumConstantDecl 0x5576c2bf3658 <line:201:2, col:32> col:2 MEMO_SPACE 'String::(anonymous enum at ../dummy_inc/click/string.hh:200:5)'
|   `-ImplicitCastExpr 0x5576c2bf36a8 <col:15, col:32> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5576c2bf3638 <col:15, col:32> 'unsigned long' Int: 12
|       `-BinaryOperator 0x5576c2bf3548 <col:15, col:32> 'unsigned long' '-'
|         |-UnaryExprOrTypeTraitExpr 0x5576c2bf34f0 <col:15, col:28> 'unsigned long' sizeof 'String::memo_t'
|         `-ImplicitCastExpr 0x5576c2bf3530 <col:32> 'unsigned long' <IntegralCast>
|           `-IntegerLiteral 0x5576c2bf3510 <col:32> 'int' 8
|-CXXRecordDecl 0x5576c2bf36c0 <line:204:5, line:208:5> line:204:12 referenced struct rep_t definition
| |-DefinitionData pass_in_registers aggregate standard_layout trivially_copyable pod trivial literal
| | |-DefaultConstructor exists trivial
| | |-CopyConstructor simple trivial has_const_param implicit_has_const_param
| | |-MoveConstructor exists simple trivial
| | |-CopyAssignment trivial has_const_param implicit_has_const_param
| | |-MoveAssignment exists simple trivial
| | `-Destructor simple irrelevant trivial
| |-CXXRecordDecl 0x5576c2bf37d8 <col:5, col:12> col:12 implicit struct rep_t
| |-FieldDecl 0x5576c2bf3880 <line:205:2, col:14> col:14 referenced data 'const char *'
| |-FieldDecl 0x5576c2bf38e8 <line:206:2, col:6> col:6 referenced length 'int'
| |-FieldDecl 0x5576c2bf3978 <line:207:2, col:10> col:10 referenced memo 'String::memo_t *'
| |-CXXConstructorDecl 0x5576c2bf7bb0 <line:204:12> col:12 implicit used rep_t 'void () noexcept' inline default trivial
| | `-CompoundStmt 0x5576c2bf7fe8 <col:12>
| |-CXXConstructorDecl 0x5576c2bf7cb8 <col:12> col:12 implicit used constexpr rep_t 'void (const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5576c2bf7dc8 <col:12> col:12 used 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5576c2bf3880 'data' 'const char *'
| | | `-ImplicitCastExpr 0x5576c2bfaca0 <col:12> 'const char *' <LValueToRValue>
| | |   `-MemberExpr 0x5576c2bfac70 <col:12> 'const char *const' lvalue .data 0x5576c2bf3880
| | |     `-DeclRefExpr 0x5576c2bfac50 <col:12> 'const String::rep_t' lvalue ParmVar 0x5576c2bf7dc8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5576c2bf38e8 'length' 'int'
| | | `-ImplicitCastExpr 0x5576c2bfad30 <col:12> 'int' <LValueToRValue>
| | |   `-MemberExpr 0x5576c2bfad00 <col:12> 'const int' lvalue .length 0x5576c2bf38e8
| | |     `-DeclRefExpr 0x5576c2bface0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5576c2bf7dc8 '' 'const String::rep_t &'
| | |-CXXCtorInitializer Field 0x5576c2bf3978 'memo' 'String::memo_t *'
| | | `-ImplicitCastExpr 0x5576c2bfadc0 <col:12> 'String::memo_t *' <LValueToRValue>
| | |   `-MemberExpr 0x5576c2bfad90 <col:12> 'String::memo_t *const' lvalue .memo 0x5576c2bf3978
| | |     `-DeclRefExpr 0x5576c2bfad70 <col:12> 'const String::rep_t' lvalue ParmVar 0x5576c2bf7dc8 '' 'const String::rep_t &'
| | `-CompoundStmt 0x5576c2bfae18 <col:12>
| |-CXXConstructorDecl 0x5576c2bf7e68 <col:12> col:12 implicit constexpr rep_t 'void (String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5576c2bf7e68
| | `-ParmVarDecl 0x5576c2bf7f78 <col:12> col:12 'String::rep_t &&'
| |-CXXDestructorDecl 0x5576c2c003f0 <col:12> col:12 implicit ~rep_t 'void () noexcept' inline default trivial
| |-CXXMethodDecl 0x5576c2c0bd58 <col:12> col:12 implicit used constexpr operator= 'String::rep_t &(const String::rep_t &) noexcept' inline default trivial
| | |-ParmVarDecl 0x5576c2c0be68 <col:12> col:12 used 'const String::rep_t &'
| | `-CompoundStmt 0x5576c2c0c380 <col:12>
| |   |-BinaryOperator 0x5576c2c0c198 <col:12> 'const char *' lvalue '='
| |   | |-MemberExpr 0x5576c2c0c150 <col:12> 'const char *' lvalue ->data 0x5576c2bf3880
| |   | | `-CXXThisExpr 0x5576c2c0c140 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5576c2c0c180 <col:12> 'const char *' <LValueToRValue>
| |   |   `-MemberExpr 0x5576c2c0c110 <col:12> 'const char *const' lvalue .data 0x5576c2bf3880
| |   |     `-DeclRefExpr 0x5576c2c0c0f0 <col:12> 'const String::rep_t' lvalue ParmVar 0x5576c2c0be68 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5576c2c0c260 <col:12> 'int' lvalue '='
| |   | |-MemberExpr 0x5576c2c0c218 <col:12> 'int' lvalue ->length 0x5576c2bf38e8
| |   | | `-CXXThisExpr 0x5576c2c0c208 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5576c2c0c248 <col:12> 'int' <LValueToRValue>
| |   |   `-MemberExpr 0x5576c2c0c1d8 <col:12> 'const int' lvalue .length 0x5576c2bf38e8
| |   |     `-DeclRefExpr 0x5576c2c0c1b8 <col:12> 'const String::rep_t' lvalue ParmVar 0x5576c2c0be68 '' 'const String::rep_t &'
| |   |-BinaryOperator 0x5576c2c0c328 <col:12> 'String::memo_t *' lvalue '='
| |   | |-MemberExpr 0x5576c2c0c2e0 <col:12> 'String::memo_t *' lvalue ->memo 0x5576c2bf3978
| |   | | `-CXXThisExpr 0x5576c2c0c2d0 <col:12> 'String::rep_t *' this
| |   | `-ImplicitCastExpr 0x5576c2c0c310 <col:12> 'String::memo_t *' <LValueToRValue>
| |   |   `-MemberExpr 0x5576c2c0c2a0 <col:12> 'String::memo_t *const' lvalue .memo 0x5576c2bf3978
| |   |     `-DeclRefExpr 0x5576c2c0c280 <col:12> 'const String::rep_t' lvalue ParmVar 0x5576c2c0be68 '' 'const String::rep_t &'
| |   `-ReturnStmt 0x5576c2c0c370 <col:12>
| |     `-UnaryOperator 0x5576c2c0c358 <col:12> 'String::rep_t' lvalue prefix '*' cannot overflow
| |       `-CXXThisExpr 0x5576c2c0c348 <col:12> 'String::rep_t *' this
| `-CXXMethodDecl 0x5576c2c0bed8 <col:12> col:12 implicit constexpr operator= 'String::rep_t &(String::rep_t &&)' inline default trivial noexcept-unevaluated 0x5576c2c0bed8
|   `-ParmVarDecl 0x5576c2c0bfe8 <col:12> col:12 'String::rep_t &&'
|-FieldDecl 0x5576c2bf39f0 <line:211:5, col:19> col:19 referenced _r 'String::rep_t' mutable
|-CXXMethodDecl 0x5576c2bf3c38 <line:256:5, line:261:5> line:256:17 used assign_memo 'void (const char *, int, String::memo_t *) const' inline
| |-ParmVarDecl 0x5576c2bf3a58 <col:29, col:41> col:41 used data 'const char *'
| |-ParmVarDecl 0x5576c2bf3ad8 <col:47, col:51> col:51 used length 'int'
| |-ParmVarDecl 0x5576c2bf3b50 <col:59, col:67> col:67 used memo 'String::memo_t *'
| `-CompoundStmt 0x5576c2bf7b70 <col:79, line:261:5>
|   |-BinaryOperator 0x5576c2bf77e8 <line:257:2, col:12> 'const char *' lvalue '='
|   | |-MemberExpr 0x5576c2bf7780 <col:2, col:5> 'const char *' lvalue .data 0x5576c2bf3880
|   | | `-MemberExpr 0x5576c2bf7750 <col:2> 'String::rep_t' lvalue ->_r 0x5576c2bf39f0
|   | |   `-CXXThisExpr 0x5576c2bf7740 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5576c2bf77d0 <col:12> 'const char *' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576c2bf77b0 <col:12> 'const char *' lvalue ParmVar 0x5576c2bf3a58 'data' 'const char *'
|   |-BinaryOperator 0x5576c2bf78b0 <line:258:2, col:14> 'int' lvalue '='
|   | |-MemberExpr 0x5576c2bf7848 <col:2, col:5> 'int' lvalue .length 0x5576c2bf38e8
|   | | `-MemberExpr 0x5576c2bf7818 <col:2> 'String::rep_t' lvalue ->_r 0x5576c2bf39f0
|   | |   `-CXXThisExpr 0x5576c2bf7808 <col:2> 'const String *' implicit this
|   | `-ImplicitCastExpr 0x5576c2bf7898 <col:14> 'int' <LValueToRValue>
|   |   `-DeclRefExpr 0x5576c2bf7878 <col:14> 'int' lvalue ParmVar 0x5576c2bf3ad8 'length' 'int'
|   `-IfStmt 0x5576c2bf7b58 <line:259:2, line:260:41>
|     |-ImplicitCastExpr 0x5576c2bf79d0 <line:259:6, col:21> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5576c2bf79b8 <col:6, col:21> 'String::memo_t *' <LValueToRValue>
|     |   `-ParenExpr 0x5576c2bf7998 <col:6, col:21> 'String::memo_t *' lvalue
|     |     `-BinaryOperator 0x5576c2bf7978 <col:7, col:17> 'String::memo_t *' lvalue '='
|     |       |-MemberExpr 0x5576c2bf7910 <col:7, col:10> 'String::memo_t *' lvalue .memo 0x5576c2bf3978
|     |       | `-MemberExpr 0x5576c2bf78e0 <col:7> 'String::rep_t' lvalue ->_r 0x5576c2bf39f0
|     |       |   `-CXXThisExpr 0x5576c2bf78d0 <col:7> 'const String *' implicit this
|     |       `-ImplicitCastExpr 0x5576c2bf7960 <col:17> 'String::memo_t *' <LValueToRValue>
|     |         `-DeclRefExpr 0x5576c2bf7940 <col:17> 'String::memo_t *' lvalue ParmVar 0x5576c2bf3b50 'memo' 'String::memo_t *'
|     `-CallExpr 0x5576c2bf7b30 <line:260:6, col:41> 'void'
|       |-ImplicitCastExpr 0x5576c2bf7b18 <col:6, col:23> 'void (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | `-DeclRefExpr 0x5576c2bf7a20 <col:6, col:23> 'void (volatile uint32_t &)' lvalue CXXMethod 0x5576c2bce2a8 'inc' 'void (volatile uint32_t &)'
|       `-MemberExpr 0x5576c2bf7a88 <col:27, col:33> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5576c2bf3240
|         `-ImplicitCastExpr 0x5576c2bf7a70 <col:27> 'String::memo_t *' <LValueToRValue>
|           `-DeclRefExpr 0x5576c2bf7a50 <col:27> 'String::memo_t *' lvalue ParmVar 0x5576c2bf3b50 'memo' 'String::memo_t *'
|-CXXConstructorDecl 0x5576c2bf3ee8 <line:263:5, line:265:5> line:263:12 used String 'void (const char *, int, String::memo_t *)' inline
| |-ParmVarDecl 0x5576c2bf3d08 <col:19, col:31> col:31 used data 'const char *'
| |-ParmVarDecl 0x5576c2bf3d88 <col:37, col:41> col:41 used length 'int'
| |-ParmVarDecl 0x5576c2bf3e00 <col:49, col:57> col:57 used memo 'String::memo_t *'
| |-CXXCtorInitializer Field 0x5576c2bf39f0 '_r' 'String::rep_t'
| | `-CXXConstructExpr 0x5576c2bf7ff8 <col:12> 'String::rep_t' 'void () noexcept'
| `-CompoundStmt 0x5576c2bf8188 <col:63, line:265:5>
|   `-CXXMemberCallExpr 0x5576c2bf80f0 <line:264:2, col:32> 'void'
|     |-MemberExpr 0x5576c2bf8060 <col:2> '<bound member function type>' ->assign_memo 0x5576c2bf3c38
|     | `-ImplicitCastExpr 0x5576c2bf8128 <col:2> 'const String *' <NoOp>
|     |   `-CXXThisExpr 0x5576c2bf8050 <col:2> 'String *' implicit this
|     |-ImplicitCastExpr 0x5576c2bf8140 <col:14> 'const char *' <LValueToRValue>
|     | `-DeclRefExpr 0x5576c2bf8090 <col:14> 'const char *' lvalue ParmVar 0x5576c2bf3d08 'data' 'const char *'
|     |-ImplicitCastExpr 0x5576c2bf8158 <col:20> 'int' <LValueToRValue>
|     | `-DeclRefExpr 0x5576c2bf80b0 <col:20> 'int' lvalue ParmVar 0x5576c2bf3d88 'length' 'int'
|     `-ImplicitCastExpr 0x5576c2bf8170 <col:28> 'String::memo_t *' <LValueToRValue>
|       `-DeclRefExpr 0x5576c2bf80d0 <col:28> 'String::memo_t *' lvalue ParmVar 0x5576c2bf3e00 'memo' 'String::memo_t *'
|-CXXMethodDecl 0x5576c2bf4078 <line:267:5, line:269:5> line:267:17 used assign 'void (const String &) const' inline
| |-ParmVarDecl 0x5576c2bf3fb8 <col:24, col:38> col:38 used x 'const String &'
| `-CompoundStmt 0x5576c2bf83e0 <col:47, line:269:5>
|   `-CXXMemberCallExpr 0x5576c2bf8360 <line:268:2, col:47> 'void'
|     |-MemberExpr 0x5576c2bf81b0 <col:2> '<bound member function type>' ->assign_memo 0x5576c2bf3c38
|     | `-CXXThisExpr 0x5576c2bf81a0 <col:2> 'const String *' implicit this
|     |-ImplicitCastExpr 0x5576c2bf8398 <col:14, col:19> 'const char *' <LValueToRValue>
|     | `-MemberExpr 0x5576c2bf8230 <col:14, col:19> 'const char *' lvalue .data 0x5576c2bf3880
|     |   `-MemberExpr 0x5576c2bf8200 <col:14, col:16> 'String::rep_t' lvalue ._r 0x5576c2bf39f0
|     |     `-DeclRefExpr 0x5576c2bf81e0 <col:14> 'const String' lvalue ParmVar 0x5576c2bf3fb8 'x' 'const String &'
|     |-ImplicitCastExpr 0x5576c2bf83b0 <col:25, col:30> 'int' <LValueToRValue>
|     | `-MemberExpr 0x5576c2bf82b0 <col:25, col:30> 'int' lvalue .length 0x5576c2bf38e8
|     |   `-MemberExpr 0x5576c2bf8280 <col:25, col:27> 'String::rep_t' lvalue ._r 0x5576c2bf39f0
|     |     `-DeclRefExpr 0x5576c2bf8260 <col:25> 'const String' lvalue ParmVar 0x5576c2bf3fb8 'x' 'const String &'
|     `-ImplicitCastExpr 0x5576c2bf83c8 <col:38, col:43> 'String::memo_t *' <LValueToRValue>
|       `-MemberExpr 0x5576c2bf8330 <col:38, col:43> 'String::memo_t *' lvalue .memo 0x5576c2bf3978
|         `-MemberExpr 0x5576c2bf8300 <col:38, col:40> 'String::rep_t' lvalue ._r 0x5576c2bf39f0
|           `-DeclRefExpr 0x5576c2bf82e0 <col:38> 'const String' lvalue ParmVar 0x5576c2bf3fb8 'x' 'const String &'
|-CXXMethodDecl 0x5576c2bf4140 <line:271:5, line:278:5> line:271:17 used deref 'void () const' inline
| `-CompoundStmt 0x5576c2bf94a8 <col:31, line:278:5>
|   `-IfStmt 0x5576c2bf9490 <line:272:2, line:277:2>
|     |-ImplicitCastExpr 0x5576c2bf8480 <line:272:6, col:9> 'bool' <PointerToBoolean>
|     | `-ImplicitCastExpr 0x5576c2bf8468 <col:6, col:9> 'String::memo_t *' <LValueToRValue>
|     |   `-MemberExpr 0x5576c2bf8438 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5576c2bf3978
|     |     `-MemberExpr 0x5576c2bf8408 <col:6> 'String::rep_t' lvalue ->_r 0x5576c2bf39f0
|     |       `-CXXThisExpr 0x5576c2bf83f8 <col:6> 'const String *' implicit this
|     `-CompoundStmt 0x5576c2bf9468 <col:15, line:277:2>
|       |-ParenExpr 0x5576c2bf8a20 <line:273:6, col:166> 'void'
|       | `-ConditionalOperator 0x5576c2bf89f0 <col:7, col:165> 'void'
|       |   |-CXXStaticCastExpr 0x5576c2bf8590 <col:7, col:44> 'bool' static_cast<_Bool> <NoOp>
|       |   | `-ImplicitCastExpr 0x5576c2bf8578 <col:27, col:36> 'bool' <IntegralToBoolean> part_of_explicit_cast
|       |   |   `-ImplicitCastExpr 0x5576c2bf8560 <col:27, col:36> 'uint32_t':'unsigned int' <LValueToRValue> part_of_explicit_cast
|       |   |     `-MemberExpr 0x5576c2bf8520 <col:27, col:36> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5576c2bf3240
|       |   |       `-ImplicitCastExpr 0x5576c2bf8508 <col:27, col:30> 'String::memo_t *' <LValueToRValue>
|       |   |         `-MemberExpr 0x5576c2bf84d8 <col:27, col:30> 'String::memo_t *' lvalue .memo 0x5576c2bf3978
|       |   |           `-MemberExpr 0x5576c2bf84a8 <col:27> 'String::rep_t' lvalue ->_r 0x5576c2bf39f0
|       |   |             `-CXXThisExpr 0x5576c2bf8498 <col:27> 'const String *' implicit this
|       |   |-CXXFunctionalCastExpr 0x5576c2bf85f0 <col:48, col:55> 'void' functional cast to void <ToVoid>
|       |   | `-IntegerLiteral 0x5576c2bf85d0 <col:54> 'int' 0
|       |   `-CallExpr 0x5576c2bf8950 <col:59, col:165> 'void'
|       |     |-ImplicitCastExpr 0x5576c2bf8938 <col:59> 'void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' <FunctionToPointerDecay>
|       |     | `-DeclRefExpr 0x5576c2bf88c0 <col:59> 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()' lvalue Function 0x5576c2a49030 '__assert_fail' 'void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn)) throw()'
|       |     |-ImplicitCastExpr 0x5576c2bf8990 <col:74> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5576c2bf86d8 <col:74> 'const char [18]' lvalue "_r.memo->refcount"
|       |     |-ImplicitCastExpr 0x5576c2bf89a8 <col:95> 'const char *' <ArrayToPointerDecay>
|       |     | `-StringLiteral 0x5576c2bf8788 <col:95> 'const char [29]' lvalue "../dummy_inc/click/string.hh"
|       |     |-ImplicitCastExpr 0x5576c2bf89c0 <col:127> 'unsigned int' <IntegralCast>
|       |     | `-IntegerLiteral 0x5576c2bf87c0 <col:127> 'int' 273
|       |     `-ImplicitCastExpr 0x5576c2bf89d8 <col:132, col:146> 'const char *' <ArrayToPointerDecay>
|       |       `-UnaryOperator 0x5576c2bf88a8 <col:132, col:146> 'const char [27]' lvalue prefix '__extension__' cannot overflow
|       |         `-PredefinedExpr 0x5576c2bf8890 <col:146> 'const char [27]' lvalue __PRETTY_FUNCTION__
|       |           `-StringLiteral 0x5576c2bf8858 <col:146> 'const char [27]' lvalue "void String::deref() const"
|       |-IfStmt 0x5576c2bf9388 <line:274:6, line:275:22>
|       | |-CallExpr 0x5576c2bf8c30 <line:274:10, col:57> 'bool'
|       | | |-ImplicitCastExpr 0x5576c2bf8c18 <col:10, col:27> 'bool (*)(volatile uint32_t &)' <FunctionToPointerDecay>
|       | | | `-DeclRefExpr 0x5576c2bf8b90 <col:10, col:27> 'bool (volatile uint32_t &)' lvalue CXXMethod 0x5576c2bd3640 'dec_and_test' 'bool (volatile uint32_t &)'
|       | | `-MemberExpr 0x5576c2bf8b60 <col:40, col:49> 'volatile uint32_t':'volatile unsigned int' lvalue ->refcount 0x5576c2bf3240
|       | |   `-ImplicitCastExpr 0x5576c2bf8b48 <col:40, col:43> 'String::memo_t *' <LValueToRValue>
|       | |     `-MemberExpr 0x5576c2bf8b18 <col:40, col:43> 'String::memo_t *' lvalue .memo 0x5576c2bf3978
|       | |       `-MemberExpr 0x5576c2bf8ae8 <col:40> 'String::rep_t' lvalue ->_r 0x5576c2bf39f0
|       | |         `-CXXThisExpr 0x5576c2bf8ad8 <col:40> 'const String *' implicit this
|       | `-CallExpr 0x5576c2bf8d30 <line:275:3, col:22> 'void'
|       |   |-ImplicitCastExpr 0x5576c2bf8d18 <col:3> 'void (*)(String::memo_t *)' <FunctionToPointerDecay>
|       |   | `-DeclRefExpr 0x5576c2bf8c58 <col:3> 'void (String::memo_t *)' lvalue CXXMethod 0x5576c2bf4e18 'delete_memo' 'void (String::memo_t *)'
|       |   `-ImplicitCastExpr 0x5576c2bf9370 <col:15, col:18> 'String::memo_t *' <LValueToRValue>
|       |     `-MemberExpr 0x5576c2bf8cb8 <col:15, col:18> 'String::memo_t *' lvalue .memo 0x5576c2bf3978
|       |       `-MemberExpr 0x5576c2bf8c88 <col:15> 'String::rep_t' lvalue ->_r 0x5576c2bf39f0
|       |         `-CXXThisExpr 0x5576c2bf8c78 <col:15> 'const String *' implicit this
|       `-BinaryOperator 0x5576c2bf9448 <line:276:6, col:16> 'String::memo_t *' lvalue '='
|         |-MemberExpr 0x5576c2bf93e0 <col:6, col:9> 'String::memo_t *' lvalue .memo 0x5576c2bf3978
|         | `-MemberExpr 0x5576c2bf93b0 <col:6> 'String::rep_t' lvalue ->_r 0x5576c2bf39f0
|         |   `-CXXThisExpr 0x5576c2bf93a0 <col:6> 'const String *' implicit this
|         `-ImplicitCastExpr 0x5576c2bf9430 <col:16> 'String::memo_t *' <NullToPointer>
|           `-IntegerLiteral 0x5576c2bf9410 <col:16> 'int' 0
|-CXXMethodDecl 0x5576c2bf43d8 <line:280:5, col:56> col:10 used assign 'void (const char *, int, bool)'
| |-ParmVarDecl 0x5576c2bf41f8 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5576c2bf4278 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5576c2bf42f0 <col:41, col:46> col:46 need_deref 'bool'
|-CXXMethodDecl 0x5576c2bf44b0 <line:281:5, col:31> col:10 assign_out_of_memory 'void ()'
|-CXXMethodDecl 0x5576c2bf4700 <line:282:5, col:53> col:10 used append 'void (const char *, int, String::memo_t *)'
| |-ParmVarDecl 0x5576c2bf4568 <col:17, col:29> col:29 s 'const char *'
| |-ParmVarDecl 0x5576c2bf45e8 <col:32, col:36> col:36 len 'int'
| `-ParmVarDecl 0x5576c2bf4660 <col:41, col:49> col:49 memo 'String::memo_t *'
|-CXXMethodDecl 0x5576c2bf48e8 <line:283:5, col:58> col:19 used hard_make_stable 'String (const char *, int)' static
| |-ParmVarDecl 0x5576c2bf47d0 <col:36, col:48> col:48 s 'const char *'
| `-ParmVarDecl 0x5576c2bf4850 <col:51, col:55> col:55 len 'int'
|-CXXMethodDecl 0x5576c2bf49e8 <line:284:5, line:286:5> line:284:27 used absent_memo 'String::memo_t *()' static inline
| `-CompoundStmt 0x5576c2bf95a0 <col:41, line:286:5>
|   `-ReturnStmt 0x5576c2bf9590 <line:285:2, col:48>
|     `-CXXReinterpretCastExpr 0x5576c2bf9560 <col:9, col:48> 'String::memo_t *' reinterpret_cast<struct String::memo_t *> <IntegralToPointer>
|       `-CXXFunctionalCastExpr 0x5576c2bf9528 <col:36, col:47> 'uintptr_t':'unsigned long' functional cast to uintptr_t <NoOp>
|         `-ImplicitCastExpr 0x5576c2bf9510 <col:46> 'uintptr_t':'unsigned long' <IntegralCast> part_of_explicit_cast
|           `-IntegerLiteral 0x5576c2bf94f0 <col:46> 'int' 1
|-CXXMethodDecl 0x5576c2bf4c88 <line:287:5, col:68> col:20 create_memo 'String::memo_t *(char *, int, int)' static
| |-ParmVarDecl 0x5576c2bf4aa0 <col:32, col:38> col:38 space 'char *'
| |-ParmVarDecl 0x5576c2bf4b20 <col:45, col:49> col:49 dirty 'int'
| `-ParmVarDecl 0x5576c2bf4ba0 <col:56, col:60> col:60 capacity 'int'
|-CXXMethodDecl 0x5576c2bf4e18 <line:288:5, col:41> col:17 used delete_memo 'void (String::memo_t *)' static
| `-ParmVarDecl 0x5576c2bf4d50 <col:29, col:37> col:37 memo 'String::memo_t *'
|-CXXMethodDecl 0x5576c2bf4ee8 <line:289:5, col:30> col:17 hard_c_str 'const char *() const'
|-CXXMethodDecl 0x5576c2bf50b8 <line:290:5, col:46> col:10 used hard_equals 'bool (const char *, int) const'
| |-ParmVarDecl 0x5576c2bf4fa0 <col:22, col:34> col:34 s 'const char *'
| `-ParmVarDecl 0x5576c2bf5020 <col:37, col:41> col:41 len 'int'
|-VarDecl 0x5576c2bf6d60 <line:292:5, col:23> col:23 used null_data 'const char' static
|-VarDecl 0x5576c2bf6ea8 <line:293:5, col:34> col:23 used oom_data 'const char [15]' static
|-VarDecl 0x5576c2bf6fe8 <line:294:5, col:34> col:23 int_data 'const char [20]' static
|-VarDecl 0x5576c2bf7060 <line:295:5, col:24> col:24 used null_string_rep 'const String::rep_t' static
|-VarDecl 0x5576c2bf70d8 <line:296:5, col:24> col:24 used oom_string_rep 'const String::rep_t' static
|-EnumDecl 0x5576c2bf7140 <line:297:5, col:25> col:5
| `-EnumConstantDecl 0x5576c2bf7240 <col:12, col:22> col:12 referenced oom_len 'String::(anonymous enum at ../dummy_inc/click/string.hh:297:5)'
|   `-ImplicitCastExpr 0x5576c2bf7290 <col:22> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5576c2bf7220 <col:22> 'int' Int: 14
|       `-IntegerLiteral 0x5576c2bf7200 <col:22> 'int' 14
|-CXXMethodDecl 0x5576c2bf74a8 <line:299:5, col:46> col:19 make_claim 'String (char *, int, int)' static
| |-ParmVarDecl 0x5576c2bf72c0 <col:30, col:35> col:36 'char *'
| |-ParmVarDecl 0x5576c2bf7340 <col:38> col:41 'int'
| `-ParmVarDecl 0x5576c2bf73c0 <col:43> col:46 'int'
|-FriendDecl 0x5576c2bf75b0 <line:301:5, col:19> col:12 'struct rep_t':'String::rep_t'
`-FriendDecl 0x5576c2bf7640 <line:302:5, col:18> col:12 'class StringAccum':'StringAccum'

Layout: <CGRecordLayout
  LLVMType:%class.String = type { %"struct.String::rep_t" }
  NonVirtualBaseLLVMType:%class.String = type { %"struct.String::rep_t" }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5576c2f8db30 <../dummy_inc/click/vector.hh:11:1, line:71:1> line:11:30 class vector_memory definition
|-DefinitionData standard_layout has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment trivial has_const_param needs_implicit implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-TemplateArgument type 'typed_array_memory<String>'
|-CXXRecordDecl 0x5576c2f8dd08 prev 0x5576c2f8db30 <col:24, col:30> col:30 implicit class vector_memory
|-AccessSpecDecl 0x5576c2f8dd98 <col:46, col:52> col:46 public
|-TypedefDecl 0x5576c2f8ddc0 <line:12:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5576c29ad3b0 'int'
|-TypedefDecl 0x5576c2f8f750 <line:13:5, col:31> col:31 type 'typename typed_array_memory<String>::type':'String'
| `-ElaboratedType 0x5576c2f8f700 'typename typed_array_memory<String>::type' sugar
|   `-TypedefType 0x5576c2f8f6e0 'typed_array_memory<String>::type' sugar
|     |-Typedef 0x5576c2f8dfd8 'type'
|     `-SubstTemplateTypeParmType 0x5576c2f8dfa0 'String' sugar
|       |-TemplateTypeParmType 0x5576c2f12f10 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5576c2f12ec0 'T'
|       `-RecordType 0x5576c2be76e0 'String'
|         `-CXXRecord 0x5576c2be7650 'String'
|-TypedefDecl 0x5576c2f8f808 <line:14:5, col:19> col:19 iterator 'vector_memory<typed_array_memory<String> >::type *'
| `-PointerType 0x5576c2f8f7d0 'vector_memory<typed_array_memory<String> >::type *'
|   `-TypedefType 0x5576c2f8f7b0 'vector_memory<typed_array_memory<String> >::type' sugar
|     |-Typedef 0x5576c2f8f750 'type'
|     `-ElaboratedType 0x5576c2f8f700 'typename typed_array_memory<String>::type' sugar
|       `-TypedefType 0x5576c2f8f6e0 'typed_array_memory<String>::type' sugar
|         |-Typedef 0x5576c2f8dfd8 'type'
|         `-SubstTemplateTypeParmType 0x5576c2f8dfa0 'String' sugar
|           |-TemplateTypeParmType 0x5576c2f12f10 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5576c2f12ec0 'T'
|           `-RecordType 0x5576c2be76e0 'String'
|             `-CXXRecord 0x5576c2be7650 'String'
|-CXXMethodDecl 0x5576c2f8f988 <line:15:5, line:18:5> line:15:17 need_argument_copy 'bool (const vector_memory<typed_array_memory<String> >::type *) const' inline
| `-ParmVarDecl 0x5576c2f8f898 <col:36, col:48> col:48 argp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXConstructorDecl 0x5576c2f8fa78 <line:20:5, line:22:5> line:20:5 vector_memory 'void ()'
|-CXXDestructorDecl 0x5576c2f8fb58 <line:23:5, col:20> col:5 ~vector_memory 'void ()' noexcept-unevaluated 0x5576c2f8fb58
|-CXXMethodDecl 0x5576c2f8fe28 <line:25:5, col:43> col:10 assign 'void (const vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x5576c2f8fd30 <col:17, col:42> col:42 x 'const vector_memory<typed_array_memory<String> > &'
|-CXXMethodDecl 0x5576c2f90068 <line:26:5, col:44> col:10 assign 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5576c2f8fee0 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5576c2f8ff58 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5576c2f90238 <line:27:5, col:44> col:10 resize 'void (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5576c2f90128 <col:17, col:27> col:27 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5576c2f901a0 <col:30, col:42> col:42 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5576c2f90398 <line:28:5, line:30:5> line:28:14 begin 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x5576c2f90468 <line:31:5, line:33:5> line:31:14 end 'vector_memory<typed_array_memory<String> >::iterator ()'
|-CXXMethodDecl 0x5576c2f906b8 <line:34:5, col:48> col:14 insert 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5576c2f90528 <col:21, col:30> col:30 it 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x5576c2f905a0 <col:34, col:46> col:46 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5576c2f90918 <line:35:5, col:42> col:14 erase 'vector_memory<typed_array_memory<String> >::iterator (vector_memory<typed_array_memory<String> >::iterator, vector_memory<typed_array_memory<String> >::iterator)'
| |-ParmVarDecl 0x5576c2f90788 <col:20, col:29> col:29 a 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
| `-ParmVarDecl 0x5576c2f90800 <col:32, col:41> col:41 b 'vector_memory<typed_array_memory<String> >::iterator':'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5576c2f90ad8 <line:36:5, line:43:5> line:36:17 push_back 'void (const vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x5576c2f909e8 <col:27, col:39> col:39 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5576c2f90c98 <line:45:5, line:52:5> line:45:17 move_construct_back 'void (vector_memory<typed_array_memory<String> >::type *)' inline
| `-ParmVarDecl 0x5576c2f90ba0 <col:37, col:43> col:43 vp 'vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5576c2f90d50 <line:54:5, line:59:5> line:54:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5576c2f90e00 <line:60:5, line:64:5> line:60:17 clear 'void ()' inline
|-CXXMethodDecl 0x5576c2f91038 <line:65:5, col:59> col:10 reserve_and_push_back 'bool (vector_memory::size_type, const vector_memory<typed_array_memory<String> >::type *)'
| |-ParmVarDecl 0x5576c2f90eb0 <col:32, col:42> col:42 n 'vector_memory::size_type':'int'
| `-ParmVarDecl 0x5576c2f90f28 <col:45, col:57> col:57 vp 'const vector_memory<typed_array_memory<String> >::type *'
|-CXXMethodDecl 0x5576c2f912d8 <line:66:5, col:35> col:10 swap 'void (vector_memory<typed_array_memory<String> > &)'
| `-ParmVarDecl 0x5576c2f911e0 <col:15, col:34> col:34 x 'vector_memory<typed_array_memory<String> > &'
|-FieldDecl 0x5576c2f913a0 <line:68:5, col:11> col:11 l_ 'vector_memory<typed_array_memory<String> >::type *'
|-FieldDecl 0x5576c2f913f0 <line:69:5, col:15> col:15 n_ 'vector_memory::size_type':'int'
`-FieldDecl 0x5576c2f91440 <line:70:5, col:15> col:15 capacity_ 'vector_memory::size_type':'int'

Layout: <CGRecordLayout
  LLVMType:%class.vector_memory = type { %class.String*, i32, i32 }
  NonVirtualBaseLLVMType:%class.vector_memory = type { %class.String*, i32, i32 }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping IRgen Record Layout
Record: ClassTemplateSpecializationDecl 0x5576c2f3f170 <../dummy_inc/click/vector.hh:110:1, line:197:1> line:111:7 class Vector definition
|-DefinitionData standard_layout has_user_declared_ctor has_mutable_fields can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor non_trivial user_declared has_const_param needs_overload_resolution implicit_has_const_param
| |-MoveConstructor exists non_trivial user_declared needs_overload_resolution
| |-CopyAssignment non_trivial has_const_param user_declared needs_overload_resolution implicit_has_const_param
| |-MoveAssignment exists non_trivial user_declared needs_overload_resolution
| `-Destructor simple non_trivial needs_overload_resolution
|-TemplateArgument type 'String'
|-CXXRecordDecl 0x5576c2f8c598 prev 0x5576c2f3f170 <col:1, col:7> col:7 implicit class Vector
|-TypedefDecl 0x5576c2f8daa0 <line:113:5, col:44> col:44 array_memory_type 'typename array_memory<String>::type':'typed_array_memory<String>'
| `-ElaboratedType 0x5576c2f8da50 'typename array_memory<String>::type' sugar
|   `-TypedefType 0x5576c2f8da30 'conditional<false, sized_array_memory<24>, typed_array_memory<String> >::type' sugar
|     |-Typedef 0x5576c2f8d8e0 'type'
|     `-SubstTemplateTypeParmType 0x5576c2f8d770 'typed_array_memory<String>' sugar
|       |-TemplateTypeParmType 0x5576c2cbb3c0 'F' dependent depth 0 index 1
|       | `-TemplateTypeParm 0x5576c2cbb368 'F'
|       `-RecordType 0x5576c2f8d3d0 'typed_array_memory<String>'
|         `-ClassTemplateSpecialization 0x5576c2f8d2f0 'typed_array_memory'
|-FieldDecl 0x5576c2f91490 <line:114:5, col:46> col:46 vm_ 'vector_memory<Vector<String>::array_memory_type>':'vector_memory<typed_array_memory<String> >' mutable
|-AccessSpecDecl 0x5576c2f914e0 <line:116:3, col:9> col:3 public
|-TypedefDecl 0x5576c2f91518 <line:118:5, col:15> col:15 value_type 'String':'String'
| `-SubstTemplateTypeParmType 0x5576c2f8c630 'String' sugar
|   |-TemplateTypeParmType 0x5576c2f1c790 'T' dependent depth 0 index 0
|   | `-TemplateTypeParm 0x5576c2f1c738 'T'
|   `-RecordType 0x5576c2be76e0 'String'
|     `-CXXRecord 0x5576c2be7650 'String'
|-TypedefDecl 0x5576c2f915a8 <line:119:5, col:16> col:16 reference 'String &'
| `-LValueReferenceType 0x5576c2f91570 'String &'
|   `-SubstTemplateTypeParmType 0x5576c2f8c630 'String' sugar
|     |-TemplateTypeParmType 0x5576c2f1c790 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5576c2f1c738 'T'
|     `-RecordType 0x5576c2be76e0 'String'
|       `-CXXRecord 0x5576c2be7650 'String'
|-TypedefDecl 0x5576c2f91638 <line:120:5, col:22> col:22 const_reference 'const String &'
| `-LValueReferenceType 0x5576c2f91600 'const String &'
|   `-QualType 0x5576c2f8c631 'const String' const
|     `-SubstTemplateTypeParmType 0x5576c2f8c630 'String' sugar
|       |-TemplateTypeParmType 0x5576c2f1c790 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5576c2f1c738 'T'
|       `-RecordType 0x5576c2be76e0 'String'
|         `-CXXRecord 0x5576c2be7650 'String'
|-TypedefDecl 0x5576c2f916c8 <line:121:5, col:16> col:16 pointer 'String *'
| `-PointerType 0x5576c2f91690 'String *'
|   `-SubstTemplateTypeParmType 0x5576c2f8c630 'String' sugar
|     |-TemplateTypeParmType 0x5576c2f1c790 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5576c2f1c738 'T'
|     `-RecordType 0x5576c2be76e0 'String'
|       `-CXXRecord 0x5576c2be7650 'String'
|-TypedefDecl 0x5576c2f91758 <line:122:5, col:22> col:22 const_pointer 'const String *'
| `-PointerType 0x5576c2f91720 'const String *'
|   `-QualType 0x5576c2f8c631 'const String' const
|     `-SubstTemplateTypeParmType 0x5576c2f8c630 'String' sugar
|       |-TemplateTypeParmType 0x5576c2f1c790 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5576c2f1c738 'T'
|       `-RecordType 0x5576c2be76e0 'String'
|         `-CXXRecord 0x5576c2be7650 'String'
|-TypedefDecl 0x5576c2f923b0 <line:125:5, col:45> col:45 value_argument_type 'typename fast_argument<String>::type':'const String &'
| `-ElaboratedType 0x5576c2f92360 'typename fast_argument<String>::type' sugar
|   `-TypedefType 0x5576c2f92340 'fast_argument<String, true>::type' sugar
|     |-Typedef 0x5576c2f92278 'type'
|     `-LValueReferenceType 0x5576c2f92240 'const String &'
|       `-QualType 0x5576c2f91fe1 'const String' const
|         `-SubstTemplateTypeParmType 0x5576c2f91fe0 'String' sugar
|           |-TemplateTypeParmType 0x5576c2cc2d30 'T' dependent depth 0 index 0
|           | `-TemplateTypeParm 0x5576c2cc2cd8 'T'
|           `-RecordType 0x5576c2be76e0 'String'
|             `-CXXRecord 0x5576c2be7650 'String'
|-TypedefDecl 0x5576c2f92418 <line:126:5, col:22> col:22 const_access_type 'const String &'
| `-LValueReferenceType 0x5576c2f91600 'const String &'
|   `-QualType 0x5576c2f8c631 'const String' const
|     `-SubstTemplateTypeParmType 0x5576c2f8c630 'String' sugar
|       |-TemplateTypeParmType 0x5576c2f1c790 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5576c2f1c738 'T'
|       `-RecordType 0x5576c2be76e0 'String'
|         `-CXXRecord 0x5576c2be7650 'String'
|-TypedefDecl 0x5576c2f92470 <line:128:5, col:17> col:17 size_type 'int'
| `-BuiltinType 0x5576c29ad3b0 'int'
|-TypedefDecl 0x5576c2f924d8 <line:130:5, col:16> col:16 iterator 'String *'
| `-PointerType 0x5576c2f91690 'String *'
|   `-SubstTemplateTypeParmType 0x5576c2f8c630 'String' sugar
|     |-TemplateTypeParmType 0x5576c2f1c790 'T' dependent depth 0 index 0
|     | `-TemplateTypeParm 0x5576c2f1c738 'T'
|     `-RecordType 0x5576c2be76e0 'String'
|       `-CXXRecord 0x5576c2be7650 'String'
|-TypedefDecl 0x5576c2f92540 <line:131:5, col:22> col:22 const_iterator 'const String *'
| `-PointerType 0x5576c2f91720 'const String *'
|   `-QualType 0x5576c2f8c631 'const String' const
|     `-SubstTemplateTypeParmType 0x5576c2f8c630 'String' sugar
|       |-TemplateTypeParmType 0x5576c2f1c790 'T' dependent depth 0 index 0
|       | `-TemplateTypeParm 0x5576c2f1c738 'T'
|       `-RecordType 0x5576c2be76e0 'String'
|         `-CXXRecord 0x5576c2be7650 'String'
|-EnumDecl 0x5576c2f92598 <line:134:5> col:5
| `-EnumConstantDecl 0x5576c2f92690 <col:12, col:40> col:12 RESERVE_GROW 'Vector<String>::(anonymous enum at ../dummy_inc/click/vector.hh:134:5)'
|   `-ConstantExpr 0x5576c2f92670 <col:27, col:40> 'Vector::size_type':'int' Int: -1
|     `-CStyleCastExpr 0x5576c2f1d7c8 <col:27, col:40> 'Vector::size_type':'int' <NoOp>
|       `-UnaryOperator 0x5576c2f1d7a0 <col:39, col:40> 'int' prefix '-'
|         `-IntegerLiteral 0x5576c2f1d780 <col:40> 'int' 1
|-CXXConstructorDecl 0x5576c2f92718 <line:137:5, col:28> col:21 Vector 'void ()' inline
|-CXXConstructorDecl 0x5576c2f929a8 <line:138:5, col:62> col:21 Vector 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5576c2f927d0 <col:28, col:38> col:38 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5576c2f92870 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXConstructorDecl 0x5576c2f92c38 <line:139:5, col:37> col:12 Vector 'void (const Vector<String> &)' inline
| `-ParmVarDecl 0x5576c2f92b20 <col:19, col:36> col:36 x 'const Vector<String> &'
|-CXXConstructorDecl 0x5576c2f92ef8 <line:141:5, col:32> col:12 Vector 'void (Vector<String> &&)' inline
| `-ParmVarDecl 0x5576c2f92de0 <col:19, col:31> col:31 x 'Vector<String> &&'
|-CXXMethodDecl 0x5576c2f93210 <line:144:5, col:51> col:23 operator= 'Vector<String> &(const Vector<String> &)' inline
| `-ParmVarDecl 0x5576c2f930f0 <col:33, col:50> col:50 x 'const Vector<String> &'
|-CXXMethodDecl 0x5576c2f93520 <line:146:5, col:46> col:23 operator= 'Vector<String> &(Vector<String> &&)' inline
| `-ParmVarDecl 0x5576c2f93400 <col:33, col:45> col:45 x 'Vector<String> &&'
|-CXXMethodDecl 0x5576c2f93810 <line:148:5, col:70> col:23 assign 'Vector<String> &(Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5576c2f93658 <col:30, col:40> col:40 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5576c2f936d0 <col:43, col:69> col:63 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5576c2f93938 <line:150:5, col:55> col:49 begin 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x5576c2f939e8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5576c2f93a40 <col:30> Inherited
|-CXXMethodDecl 0x5576c2f93a88 <line:151:5, col:53> col:49 end 'Vector<String>::iterator ()'
| |-NoInlineAttr 0x5576c2f93b38 <col:20> Inherited
| `-OptimizeNoneAttr 0x5576c2f93b90 <col:30> Inherited
|-CXXMethodDecl 0x5576c2f93c58 <line:152:5, col:63> col:55 used begin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5576c2f93d08 <col:20> Inherited
| `-OptimizeNoneAttr 0x5576c2f93d60 <col:30> Inherited
|-CXXMethodDecl 0x5576c2f93da8 <line:153:5, col:61> col:55 used end 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5576c2f93e58 <col:20> Inherited
| `-OptimizeNoneAttr 0x5576c2f93eb0 <col:30> Inherited
|-CXXMethodDecl 0x5576c2f93ef8 <line:154:5, col:64> col:55 cbegin 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5576c2f93fa8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5576c2f94000 <col:30> Inherited
|-CXXMethodDecl 0x5576c2f94048 <line:155:5, col:62> col:55 cend 'Vector<String>::const_iterator () const'
| |-NoInlineAttr 0x5576c2f940f8 <col:20> Inherited
| `-OptimizeNoneAttr 0x5576c2f94150 <col:30> Inherited
|-CXXMethodDecl 0x5576c2f94178 <line:157:5, col:29> col:22 size 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5576c2f94228 <line:158:5, col:33> col:22 capacity 'Vector::size_type () const' inline
|-CXXMethodDecl 0x5576c2f942d8 <line:159:5, col:25> col:17 empty 'bool () const' inline
|-CXXMethodDecl 0x5576c2f94498 <line:160:5, col:64> col:17 resize 'void (Vector::size_type, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5576c2f94388 <col:24, col:34> col:34 n 'Vector::size_type':'int'
| `-ParmVarDecl 0x5576c2f94400 <col:37, col:63> col:57 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5576c2f945e8 <line:161:5, col:36> col:17 reserve 'bool (Vector::size_type)' inline
| `-ParmVarDecl 0x5576c2f94558 <col:25, col:35> col:35 n 'Vector::size_type':'int'
|-CXXMethodDecl 0x5576c2f94798 <line:163:5, col:65> col:43 operator[] 'String &(Vector::size_type)'
| |-ParmVarDecl 0x5576c2f946a0 <col:54, col:64> col:64 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5576c2f94850 <col:20>
| `-OptimizeNoneAttr 0x5576c2f948a8 <col:30>
|-CXXMethodDecl 0x5576c2f949c8 <line:164:5, col:73> col:49 operator[] 'const String &(Vector::size_type) const'
| |-ParmVarDecl 0x5576c2f948d0 <col:60, col:70> col:70 i 'Vector::size_type':'int'
| |-NoInlineAttr 0x5576c2f94a80 <col:20>
| `-OptimizeNoneAttr 0x5576c2f94ad8 <col:30>
|-CXXMethodDecl 0x5576c2f94b90 <line:165:5, col:29> col:15 at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x5576c2f94b00 <col:18, col:28> col:28 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5576c2f94cd8 <line:166:5, col:37> col:21 at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5576c2f94c48 <col:24, col:34> col:34 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5576c2f94e08 <line:167:5, col:21> col:15 front 'String &()' inline
|-CXXMethodDecl 0x5576c2f94f08 <line:168:5, col:29> col:21 front 'const String &() const' inline
|-CXXMethodDecl 0x5576c2f94fd8 <line:169:5, col:20> col:15 back 'String &()' inline
|-CXXMethodDecl 0x5576c2f950a8 <line:170:5, col:28> col:21 back 'const String &() const' inline
|-CXXMethodDecl 0x5576c2f951e8 <line:172:5, col:39> col:15 unchecked_at 'String &(Vector::size_type)' inline
| `-ParmVarDecl 0x5576c2f95158 <col:28, col:38> col:38 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5576c2f95330 <line:173:5, col:47> col:21 unchecked_at 'const String &(Vector::size_type) const' inline
| `-ParmVarDecl 0x5576c2f952a0 <col:34, col:44> col:44 i 'Vector::size_type':'int'
|-CXXMethodDecl 0x5576c2f95478 <line:174:5, col:59> col:15 at_u 'String &(Vector::size_type)' inline
| |-ParmVarDecl 0x5576c2f953e8 <col:20, col:30> col:30 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5576c2f95530 <col:48> Inherited "" ""
|-CXXMethodDecl 0x5576c2f95630 <line:175:5, col:71> col:21 at_u 'const String &(Vector::size_type) const' inline
| |-ParmVarDecl 0x5576c2f955a0 <col:26, col:36> col:36 i 'Vector::size_type':'int'
| `-DeprecatedAttr 0x5576c2f956e8 <col:60> Inherited "" ""
|-CXXMethodDecl 0x5576c2f957a8 <line:177:5, col:20> col:15 data 'String *()' inline
|-CXXMethodDecl 0x5576c2f958a8 <line:178:5, col:28> col:21 data 'const String *() const' inline
|-CXXMethodDecl 0x5576c2f95a28 <line:180:5, col:48> col:17 push_back 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x5576c2f95968 <col:27, col:47> col:47 v 'Vector<String>::value_argument_type':'const String &'
|-FunctionTemplateDecl 0x5576c2f961e8 <line:182:5, line:183:63> col:48 push_back
| |-TemplateTypeParmDecl 0x5576c2f95ae0 <line:182:15, col:43> col:24 typename depth 0 index 0 A
| | `-TemplateArgument type 'fast_argument<String>':'fast_argument<String, true>'
| `-CXXMethodDecl 0x5576c2f96148 <line:183:5, col:63> col:48 push_back 'typename A::enable_rvalue_reference (String &&)' inline
|   `-ParmVarDecl 0x5576c2f96048 <col:58, col:62> col:62 v 'String &&'
|-CXXMethodDecl 0x5576c2f962c8 <line:185:5, col:26> col:17 pop_back 'void ()' inline
|-CXXMethodDecl 0x5576c2f96418 <line:186:5, col:49> col:17 push_front 'void (Vector<String>::value_argument_type)' inline
| `-ParmVarDecl 0x5576c2f96388 <col:28, col:48> col:48 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5576c2f964d0 <line:187:5, col:27> col:17 pop_front 'void ()' inline
|-CXXMethodDecl 0x5576c2f96718 <line:189:5, col:62> col:21 insert 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::value_argument_type)' inline
| |-ParmVarDecl 0x5576c2f96590 <col:28, col:37> col:37 it 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x5576c2f96608 <col:41, col:61> col:61 v 'Vector<String>::value_argument_type':'const String &'
|-CXXMethodDecl 0x5576c2f968c8 <line:190:5, col:38> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator)' inline
| `-ParmVarDecl 0x5576c2f967e8 <col:27, col:36> col:36 it 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x5576c2f96ad8 <line:191:5, col:49> col:21 erase 'Vector<String>::iterator (Vector<String>::iterator, Vector<String>::iterator)' inline
| |-ParmVarDecl 0x5576c2f96990 <col:27, col:36> col:36 a 'Vector<String>::iterator':'String *'
| `-ParmVarDecl 0x5576c2f96a08 <col:39, col:48> col:48 b 'Vector<String>::iterator':'String *'
|-CXXMethodDecl 0x5576c2f96b98 <line:193:5, col:23> col:17 clear 'void ()' inline
|-CXXMethodDecl 0x5576c2f96df8 <line:195:5, col:34> col:17 swap 'void (Vector<String> &)' inline
| `-ParmVarDecl 0x5576c2f96d00 <col:22, col:33> col:33 x 'Vector<String> &'
`-CXXDestructorDecl 0x5576c2f96ec8 <line:111:7> col:7 implicit ~Vector 'void ()' inline default noexcept-unevaluated 0x5576c2f96ec8

Layout: <CGRecordLayout
  LLVMType:%class.Vector = type { %class.vector_memory }
  NonVirtualBaseLLVMType:%class.Vector = type { %class.vector_memory }
  IsZeroInitializable:1
  BitFields:[
]>

*** Dumping AST Record Layout
         0 | class ErrorHandler
         0 |   (ErrorHandler vtable pointer)
         8 |   int _nerrors
           | [sizeof=16, dsize=12, align=8,
           |  nvsize=12, nvalign=8]

*** Dumping IRgen Record Layout
Record: CXXRecordDecl 0x5576c2fa19b8 prev 0x5576c2f5e258 <../dummy_inc/click/error.hh:90:1, line:592:1> line:90:7 referenced class ErrorHandler definition
|-DefinitionData polymorphic has_user_declared_ctor can_const_default_init
| |-DefaultConstructor exists non_trivial user_provided
| |-CopyConstructor simple non_trivial has_const_param implicit_has_const_param
| |-MoveConstructor
| |-CopyAssignment non_trivial has_const_param implicit_has_const_param
| |-MoveAssignment
| `-Destructor non_trivial user_declared
|-CXXRecordDecl 0x5576c2fa1ab0 <col:1, col:7> col:7 implicit referenced class ErrorHandler
|-AccessSpecDecl 0x5576c2fa1b40 <col:22, col:28> col:22 public
|-EnumDecl 0x5576c2fa1b68 <line:98:5, line:111:5> line:98:10 Level
| |-EnumConstantDecl 0x5576c2fa1c88 <line:99:2, col:14> col:2 el_abort 'ErrorHandler::Level'
| | `-ConstantExpr 0x5576c2fa1c68 <col:13, col:14> 'int' Int: -999
| |   `-UnaryOperator 0x5576c2fa1c50 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x5576c2fa1c30 <col:14> 'int' 999
| |-EnumConstantDecl 0x5576c2fa1d30 <line:100:2, col:14> col:2 el_fatal 'ErrorHandler::Level'
| | `-ConstantExpr 0x5576c2fa1d10 <col:13, col:14> 'int' Int: -1
| |   `-UnaryOperator 0x5576c2fa1cf8 <col:13, col:14> 'int' prefix '-'
| |     `-IntegerLiteral 0x5576c2fa1cd8 <col:14> 'int' 1
| |-EnumConstantDecl 0x5576c2fa1dc0 <line:102:2, col:17> col:2 el_emergency 'ErrorHandler::Level'
| | `-ConstantExpr 0x5576c2fa1da0 <col:17> 'int' Int: 0
| |   `-IntegerLiteral 0x5576c2fa1d80 <col:17> 'int' 0
| |-EnumConstantDecl 0x5576c2fa1e50 <line:103:2, col:13> col:2 el_alert 'ErrorHandler::Level'
| | `-ConstantExpr 0x5576c2fa1e30 <col:13> 'int' Int: 1
| |   `-IntegerLiteral 0x5576c2fa1e10 <col:13> 'int' 1
| |-EnumConstantDecl 0x5576c2fa1ee0 <line:104:2, col:16> col:2 el_critical 'ErrorHandler::Level'
| | `-ConstantExpr 0x5576c2fa1ec0 <col:16> 'int' Int: 2
| |   `-IntegerLiteral 0x5576c2fa1ea0 <col:16> 'int' 2
| |-EnumConstantDecl 0x5576c2fa1f70 <line:105:2, col:13> col:2 referenced el_error 'ErrorHandler::Level'
| | `-ConstantExpr 0x5576c2fa1f50 <col:13> 'int' Int: 3
| |   `-IntegerLiteral 0x5576c2fa1f30 <col:13> 'int' 3
| |-EnumConstantDecl 0x5576c2fa2000 <line:106:2, col:15> col:2 el_warning 'ErrorHandler::Level'
| | `-ConstantExpr 0x5576c2fa1fe0 <col:15> 'int' Int: 4
| |   `-IntegerLiteral 0x5576c2fa1fc0 <col:15> 'int' 4
| |-EnumConstantDecl 0x5576c2fa2090 <line:107:2, col:14> col:2 el_notice 'ErrorHandler::Level'
| | `-ConstantExpr 0x5576c2fa2070 <col:14> 'int' Int: 5
| |   `-IntegerLiteral 0x5576c2fa2050 <col:14> 'int' 5
| |-EnumConstantDecl 0x5576c2fa2120 <line:109:2, col:12> col:2 el_info 'ErrorHandler::Level'
| | `-ConstantExpr 0x5576c2fa2100 <col:12> 'int' Int: 6
| |   `-IntegerLiteral 0x5576c2fa20e0 <col:12> 'int' 6
| `-EnumConstantDecl 0x5576c2fa21b0 <line:110:2, col:13> col:2 el_debug 'ErrorHandler::Level'
|   `-ConstantExpr 0x5576c2fa2190 <col:13> 'int' Int: 7
|     `-IntegerLiteral 0x5576c2fa2170 <col:13> 'int' 7
|-VarDecl 0x5576c2fa2220 <line:114:5, col:31> col:23 e_abort 'const char []' static
|-VarDecl 0x5576c2fa22a8 <col:5, line:115:10> col:2 e_fatal 'const char []' static
|-VarDecl 0x5576c2fa2330 <line:114:5, line:116:14> col:2 e_emergency 'const char []' static
|-VarDecl 0x5576c2fa23b8 <line:114:5, line:117:10> col:2 e_alert 'const char []' static
|-VarDecl 0x5576c2fa2440 <line:114:5, line:118:13> col:2 e_critical 'const char []' static
|-VarDecl 0x5576c2fa24c8 <line:114:5, line:119:10> col:2 e_error 'const char []' static
|-VarDecl 0x5576c2fa2550 <line:114:5, line:120:12> col:2 e_warning 'const char []' static
|-VarDecl 0x5576c2fa25d8 <line:114:5, line:121:22> col:2 e_warning_annotated 'const char []' static
|-VarDecl 0x5576c2fa2660 <line:114:5, line:122:11> col:2 e_notice 'const char []' static
|-VarDecl 0x5576c2fa26e8 <line:114:5, line:123:9> col:2 e_info 'const char []' static
|-VarDecl 0x5576c2fa2770 <line:114:5, line:124:10> col:2 e_debug 'const char []' static
|-CXXConstructorDecl 0x5576c2fa2870 <line:127:5, line:129:5> line:127:5 used ErrorHandler 'void ()'
| |-CXXCtorInitializer Field 0x5576c2fa7c08 '_nerrors' 'int'
| | `-IntegerLiteral 0x5576c2fa8398 <line:128:13> 'int' 0
| `-CompoundStmt 0x5576c2fa8408 <col:16, line:129:5>
|-CXXDestructorDecl 0x5576c2fa2960 <line:131:5, line:132:5> line:131:13 used ~ErrorHandler 'void () noexcept' virtual
| `-CompoundStmt 0x5576c2fa8418 <col:29, line:132:5>
|-CXXMethodDecl 0x5576c2fa2b18 <line:148:5, col:62> col:26 static_initialize 'ErrorHandler *(ErrorHandler *)' static
| `-ParmVarDecl 0x5576c2fa2a50 <col:44, col:58> col:58 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5576c2fa2be0 <line:154:5, col:32> col:17 static_cleanup 'void ()' static
|-CXXMethodDecl 0x5576c2fa2cc8 <line:159:5, line:161:5> line:159:26 default_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x5576c2fa8470 <col:44, line:161:5>
|   `-ReturnStmt 0x5576c2fa8460 <line:160:2, col:9>
|     `-ImplicitCastExpr 0x5576c2fa8448 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x5576c2fa8428 <col:9> 'ErrorHandler *' lvalue Var 0x5576c2fa7c68 'the_default_handler' 'ErrorHandler *'
|-CXXMethodDecl 0x5576c2fa2e38 <line:168:5, col:55> col:17 set_default_handler 'void (ErrorHandler *)' static
| `-ParmVarDecl 0x5576c2fa2d78 <col:37, col:51> col:51 errh 'ErrorHandler *'
|-CXXMethodDecl 0x5576c2fa2f00 <line:171:5, line:173:5> line:171:26 silent_handler 'ErrorHandler *()' static
| `-CompoundStmt 0x5576c2fa84d0 <col:43, line:173:5>
|   `-ReturnStmt 0x5576c2fa84c0 <line:172:2, col:9>
|     `-ImplicitCastExpr 0x5576c2fa84a8 <col:9> 'ErrorHandler *' <LValueToRValue>
|       `-DeclRefExpr 0x5576c2fa8488 <col:9> 'ErrorHandler *' lvalue Var 0x5576c2fa7ce0 'the_silent_handler' 'ErrorHandler *'
|-VarDecl 0x5576c2fa2fb8 <line:176:5, col:22> col:22 ok_result 'const int' static
|-VarDecl 0x5576c2fa3038 <line:178:5, col:22> col:22 error_result 'const int' static
|-CXXMethodDecl 0x5576c2fa3148 <line:186:5, col:36> col:10 debug 'void (const char *, ...)'
| `-ParmVarDecl 0x5576c2fa30b8 <col:16, col:28> col:28 fmt 'const char *'
|-CXXMethodDecl 0x5576c2fa3298 <line:188:5, col:38> col:10 message 'void (const char *, ...)'
| `-ParmVarDecl 0x5576c2fa3208 <col:18, col:30> col:30 fmt 'const char *'
|-CXXMethodDecl 0x5576c2fa33f0 <line:193:5, col:37> col:9 warning 'int (const char *, ...)'
| `-ParmVarDecl 0x5576c2fa3358 <col:17, col:29> col:29 fmt 'const char *'
|-CXXMethodDecl 0x5576c2fa3548 <line:196:5, col:35> col:9 error 'int (const char *, ...)'
| `-ParmVarDecl 0x5576c2fa34b0 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x5576c2fa36a0 <line:201:5, col:35> col:9 fatal 'int (const char *, ...)'
| `-ParmVarDecl 0x5576c2fa3608 <col:15, col:27> col:27 fmt 'const char *'
|-CXXMethodDecl 0x5576c2fa38b0 <line:204:5, col:61> col:10 ldebug 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x5576c2fa3758 <col:17, col:31> col:31 landmark 'const String &'
| `-ParmVarDecl 0x5576c2fa37d8 <col:41, col:53> col:53 fmt 'const char *'
|-CXXMethodDecl 0x5576c2fa3a88 <line:206:5, col:63> col:10 lmessage 'void (const String &, const char *, ...)'
| |-ParmVarDecl 0x5576c2fa3970 <col:19, col:33> col:33 landmark 'const String &'
| `-ParmVarDecl 0x5576c2fa39f0 <col:43, col:55> col:55 fmt 'const char *'
|-CXXMethodDecl 0x5576c2fa3ca8 <line:208:5, col:62> col:9 lwarning 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5576c2fa3b48 <col:18, col:32> col:32 landmark 'const String &'
| `-ParmVarDecl 0x5576c2fa3bc8 <col:42, col:54> col:54 fmt 'const char *'
|-CXXMethodDecl 0x5576c2fa3e88 <line:210:5, col:60> col:9 lerror 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5576c2fa3d68 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x5576c2fa3de8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x5576c2fa4068 <line:212:5, col:60> col:9 lfatal 'int (const String &, const char *, ...)'
| |-ParmVarDecl 0x5576c2fa3f48 <col:16, col:30> col:30 landmark 'const String &'
| `-ParmVarDecl 0x5576c2fa3fc8 <col:40, col:52> col:52 fmt 'const char *'
|-CXXMethodDecl 0x5576c2fa41f0 <line:226:5, col:35> col:9 used xmessage 'int (const String &)'
| `-ParmVarDecl 0x5576c2fa4128 <col:18, col:32> col:32 str 'const String &'
|-CXXMethodDecl 0x5576c2fa43c0 <line:232:5, line:234:5> line:232:9 used xmessage 'int (const String &, const String &)'
| |-ParmVarDecl 0x5576c2fa42a8 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x5576c2fa4320 <col:38, col:52> col:52 used str 'const String &'
| `-CompoundStmt 0x5576c2fa8728 <col:57, line:234:5>
|   `-ReturnStmt 0x5576c2fa8718 <line:233:2, col:41>
|     `-ExprWithCleanups 0x5576c2fa8700 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x5576c2fa86a8 <col:9, col:41> 'int'
|         |-MemberExpr 0x5576c2fa8678 <col:9> '<bound member function type>' ->xmessage 0x5576c2fa41f0
|         | `-CXXThisExpr 0x5576c2fa8668 <col:9> 'ErrorHandler *' implicit this
|         `-MaterializeTemporaryExpr 0x5576c2fa86e8 <col:18, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x5576c2fa86d0 <col:18, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5576c2fa8648 <col:18, col:40> 'String' (CXXTemporary 0x5576c2fa8648)
|               `-CallExpr 0x5576c2fa8610 <col:18, col:40> 'String'
|                 |-ImplicitCastExpr 0x5576c2fa85f8 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|                 | `-DeclRefExpr 0x5576c2fa8570 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x5576c2fa6418 'combine_anno' 'String (const String &, const String &)'
|                 |-DeclRefExpr 0x5576c2fa8590 <col:31> 'const String' lvalue ParmVar 0x5576c2fa4320 'str' 'const String &'
|                 `-DeclRefExpr 0x5576c2fa85b0 <col:36> 'const String' lvalue ParmVar 0x5576c2fa42a8 'anno' 'const String &'
|-CXXMethodDecl 0x5576c2fa4700 <line:241:5, line:243:5> line:241:9 xmessage 'int (const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x5576c2fa4480 <col:18, col:32> col:32 used anno 'const String &'
| |-ParmVarDecl 0x5576c2fa4500 <col:38, col:50> col:50 used fmt 'const char *'
| |-ParmVarDecl 0x5576c2fa45d0 <col:55, col:63> col:63 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x5576c2fa89b8 <col:68, line:243:5>
|   `-ReturnStmt 0x5576c2fa89a8 <line:242:2, col:41>
|     `-ExprWithCleanups 0x5576c2fa8990 <col:9, col:41> 'int'
|       `-CXXMemberCallExpr 0x5576c2fa8930 <col:9, col:41> 'int'
|         |-MemberExpr 0x5576c2fa8900 <col:9> '<bound member function type>' ->xmessage 0x5576c2fa43c0
|         | `-CXXThisExpr 0x5576c2fa88f0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x5576c2fa87c8 <col:18> 'const String' lvalue ParmVar 0x5576c2fa4480 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x5576c2fa8978 <col:24, col:40> 'const String' lvalue
|           `-ImplicitCastExpr 0x5576c2fa8960 <col:24, col:40> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5576c2fa88d0 <col:24, col:40> 'String' (CXXTemporary 0x5576c2fa88d0)
|               `-CXXMemberCallExpr 0x5576c2fa8868 <col:24, col:40> 'String'
|                 |-MemberExpr 0x5576c2fa87f8 <col:24> '<bound member function type>' ->vformat 0x5576c2fa58e0
|                 | `-CXXThisExpr 0x5576c2fa87e8 <col:24> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x5576c2fa8898 <col:32> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x5576c2fa8828 <col:32> 'const char *' lvalue ParmVar 0x5576c2fa4500 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x5576c2fa88b0 <col:37> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x5576c2fa8848 <col:37> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x5576c2fa45d0 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5576c2fa49a0 <line:251:5, line:254:5> line:251:9 used xmessage 'int (const String &, const String &, const String &)'
| |-ParmVarDecl 0x5576c2fa47c8 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x5576c2fa4840 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x5576c2fa48b8 <line:252:4, col:18> col:18 used str 'const String &'
| `-CompoundStmt 0x5576c2fa8cf8 <col:23, line:254:5>
|   `-ReturnStmt 0x5576c2fa8ce8 <line:253:2, col:71>
|     `-ExprWithCleanups 0x5576c2fa8cd0 <col:9, col:71> 'int'
|       `-CXXMemberCallExpr 0x5576c2fa8c70 <col:9, col:71> 'int'
|         |-MemberExpr 0x5576c2fa8c40 <col:9> '<bound member function type>' ->xmessage 0x5576c2fa43c0
|         | `-CXXThisExpr 0x5576c2fa8c30 <col:9> 'ErrorHandler *' implicit this
|         |-MaterializeTemporaryExpr 0x5576c2fa8cb8 <col:18, col:65> 'const String' lvalue
|         | `-ImplicitCastExpr 0x5576c2fa8ca0 <col:18, col:65> 'const String' <NoOp>
|         |   `-CXXBindTemporaryExpr 0x5576c2fa8bf0 <col:18, col:65> 'String' (CXXTemporary 0x5576c2fa8bf0)
|         |     `-CallExpr 0x5576c2fa8b88 <col:18, col:65> 'String'
|         |       |-ImplicitCastExpr 0x5576c2fa8b70 <col:18> 'String (*)(const String &, const String &)' <FunctionToPointerDecay>
|         |       | `-DeclRefExpr 0x5576c2fa8a58 <col:18> 'String (const String &, const String &)' lvalue CXXMethod 0x5576c2fa6418 'combine_anno' 'String (const String &, const String &)'
|         |       |-DeclRefExpr 0x5576c2fa8a78 <col:31> 'const String' lvalue ParmVar 0x5576c2fa4840 'anno' 'const String &'
|         |       `-MaterializeTemporaryExpr 0x5576c2fa8bd0 <col:37, col:64> 'const String' lvalue
|         |         `-ImplicitCastExpr 0x5576c2fa8bb8 <col:37, col:64> 'const String' <NoOp>
|         |           `-CXXBindTemporaryExpr 0x5576c2fa8b50 <col:37, col:64> 'String' (CXXTemporary 0x5576c2fa8b50)
|         |             `-CallExpr 0x5576c2fa8b20 <col:37, col:64> 'String'
|         |               |-ImplicitCastExpr 0x5576c2fa8b08 <col:37> 'String (*)(const String &)' <FunctionToPointerDecay>
|         |               | `-DeclRefExpr 0x5576c2fa8a98 <col:37> 'String (const String &)' lvalue CXXMethod 0x5576c2fa6a80 'make_landmark_anno' 'String (const String &)'
|         |               `-DeclRefExpr 0x5576c2fa8ab8 <col:56> 'const String' lvalue ParmVar 0x5576c2fa47c8 'landmark' 'const String &'
|         `-DeclRefExpr 0x5576c2fa8c10 <col:68> 'const String' lvalue ParmVar 0x5576c2fa48b8 'str' 'const String &'
|-CXXMethodDecl 0x5576c2fa4d20 <line:264:5, line:267:5> line:264:9 xmessage 'int (const String &, const String &, const char *, __va_list_tag *)'
| |-ParmVarDecl 0x5576c2fa4a68 <col:18, col:32> col:32 used landmark 'const String &'
| |-ParmVarDecl 0x5576c2fa4ae0 <col:42, col:56> col:56 used anno 'const String &'
| |-ParmVarDecl 0x5576c2fa4b60 <line:265:4, col:16> col:16 used fmt 'const char *'
| |-ParmVarDecl 0x5576c2fa4bd8 <col:21, col:29> col:29 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x5576c2fa8fb0 <col:34, line:267:5>
|   `-ReturnStmt 0x5576c2fa8fa0 <line:266:2, col:51>
|     `-ExprWithCleanups 0x5576c2fa8f88 <col:9, col:51> 'int'
|       `-CXXMemberCallExpr 0x5576c2fa8f20 <col:9, col:51> 'int'
|         |-MemberExpr 0x5576c2fa8ef0 <col:9> '<bound member function type>' ->xmessage 0x5576c2fa49a0
|         | `-CXXThisExpr 0x5576c2fa8ee0 <col:9> 'ErrorHandler *' implicit this
|         |-DeclRefExpr 0x5576c2fa8d98 <col:18> 'const String' lvalue ParmVar 0x5576c2fa4a68 'landmark' 'const String &'
|         |-DeclRefExpr 0x5576c2fa8db8 <col:28> 'const String' lvalue ParmVar 0x5576c2fa4ae0 'anno' 'const String &'
|         `-MaterializeTemporaryExpr 0x5576c2fa8f70 <col:34, col:50> 'const String' lvalue
|           `-ImplicitCastExpr 0x5576c2fa8f58 <col:34, col:50> 'const String' <NoOp>
|             `-CXXBindTemporaryExpr 0x5576c2fa8ec0 <col:34, col:50> 'String' (CXXTemporary 0x5576c2fa8ec0)
|               `-CXXMemberCallExpr 0x5576c2fa8e58 <col:34, col:50> 'String'
|                 |-MemberExpr 0x5576c2fa8de8 <col:34> '<bound member function type>' ->vformat 0x5576c2fa58e0
|                 | `-CXXThisExpr 0x5576c2fa8dd8 <col:34> 'ErrorHandler *' implicit this
|                 |-ImplicitCastExpr 0x5576c2fa8e88 <col:42> 'const char *' <LValueToRValue>
|                 | `-DeclRefExpr 0x5576c2fa8e18 <col:42> 'const char *' lvalue ParmVar 0x5576c2fa4b60 'fmt' 'const char *'
|                 `-ImplicitCastExpr 0x5576c2fa8ea0 <col:47> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                   `-DeclRefExpr 0x5576c2fa8e38 <col:47> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x5576c2fa4bd8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5576c2fa4e30 <line:286:5, line:288:5> line:286:9 nerrors 'int () const'
| `-CompoundStmt 0x5576c2fa9030 <col:25, line:288:5>
|   `-ReturnStmt 0x5576c2fa9020 <line:287:2, col:9>
|     `-ImplicitCastExpr 0x5576c2fa9008 <col:9> 'int' <LValueToRValue>
|       `-MemberExpr 0x5576c2fa8fd8 <col:9> 'const int' lvalue ->_nerrors 0x5576c2fa7c08
|         `-CXXThisExpr 0x5576c2fa8fc8 <col:9> 'const ErrorHandler *' implicit this
|-CXXMethodDecl 0x5576c2fa5040 <line:349:5, col:66> col:19 xformat 'String (int, const char *, ...)' static
| |-ParmVarDecl 0x5576c2fa4ee8 <col:27, col:31> col:31 default_flags 'int'
| `-ParmVarDecl 0x5576c2fa4f68 <col:46, col:58> col:58 fmt 'const char *'
|-CXXMethodDecl 0x5576c2fa5328 <line:351:5, col:75> col:19 used vxformat 'String (int, const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x5576c2fa5108 <col:28, col:32> col:32 default_flags 'int'
| |-ParmVarDecl 0x5576c2fa5188 <col:47, col:59> col:59 fmt 'const char *'
| `-ParmVarDecl 0x5576c2fa5200 <col:64, col:72> col:72 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5576c2fa54c0 <line:353:5, col:47> col:19 xformat 'String (const char *, ...)' static
| `-ParmVarDecl 0x5576c2fa53f8 <col:27, col:39> col:39 fmt 'const char *'
|-CXXMethodDecl 0x5576c2fa5708 <line:355:5, line:357:5> line:355:19 vxformat 'String (const char *, __va_list_tag *)' static
| |-ParmVarDecl 0x5576c2fa5580 <col:28, col:40> col:40 used fmt 'const char *'
| |-ParmVarDecl 0x5576c2fa55f8 <col:45, col:53> col:53 used val '__va_list_tag *':'__va_list_tag *'
| `-CompoundStmt 0x5576c2fa9290 <col:58, line:357:5>
|   `-ReturnStmt 0x5576c2fa9280 <line:356:2, col:29>
|     `-ExprWithCleanups 0x5576c2fa9268 <col:9, col:29> 'String'
|       `-CXXConstructExpr 0x5576c2fa9238 <col:9, col:29> 'String' 'void (String &&)' elidable
|         `-MaterializeTemporaryExpr 0x5576c2fa9220 <col:9, col:29> 'String' xvalue
|           `-CXXBindTemporaryExpr 0x5576c2fa9200 <col:9, col:29> 'String' (CXXTemporary 0x5576c2fa9200)
|             `-CallExpr 0x5576c2fa9190 <col:9, col:29> 'String'
|               |-ImplicitCastExpr 0x5576c2fa9178 <col:9> 'String (*)(int, const char *, __va_list_tag *)' <FunctionToPointerDecay>
|               | `-DeclRefExpr 0x5576c2fa90f8 <col:9> 'String (int, const char *, __va_list_tag *)' lvalue CXXMethod 0x5576c2fa5328 'vxformat' 'String (int, const char *, __va_list_tag *)'
|               |-IntegerLiteral 0x5576c2fa9098 <col:18> 'int' 0
|               |-ImplicitCastExpr 0x5576c2fa91c8 <col:21> 'const char *' <LValueToRValue>
|               | `-DeclRefExpr 0x5576c2fa90b8 <col:21> 'const char *' lvalue ParmVar 0x5576c2fa5580 'fmt' 'const char *'
|               `-ImplicitCastExpr 0x5576c2fa91e0 <col:26> '__va_list_tag *':'__va_list_tag *' <LValueToRValue>
|                 `-DeclRefExpr 0x5576c2fa90d8 <col:26> '__va_list_tag *':'__va_list_tag *' lvalue ParmVar 0x5576c2fa55f8 'val' '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5576c2fa58e0 <line:369:5, col:56> col:20 used vformat 'String (const char *, __va_list_tag *)' virtual
| |-ParmVarDecl 0x5576c2fa57d0 <col:28, col:40> col:40 fmt 'const char *'
| `-ParmVarDecl 0x5576c2fa5848 <col:45, col:53> col:53 val '__va_list_tag *':'__va_list_tag *'
|-CXXMethodDecl 0x5576c2fa5a38 <line:379:5, col:39> col:12 format 'String (const char *, ...)'
| `-ParmVarDecl 0x5576c2fa59a8 <col:19, col:31> col:31 fmt 'const char *'
|-CXXMethodDecl 0x5576c2fa5b80 <line:393:5, col:46> col:20 used decorate 'String (const String &)' virtual
| `-ParmVarDecl 0x5576c2fa5af0 <col:29, col:43> col:43 str 'const String &'
|-CXXMethodDecl 0x5576c2fa5e20 <line:424:5, col:69> col:19 used emit 'void *(const String &, void *, bool)' virtual
| |-ParmVarDecl 0x5576c2fa5c38 <col:24, col:38> col:38 str 'const String &'
| |-ParmVarDecl 0x5576c2fa5cb8 <col:43, col:49> col:49 user_data 'void *'
| `-ParmVarDecl 0x5576c2fa5d30 <col:60, col:65> col:65 more 'bool'
|-CXXMethodDecl 0x5576c2fa5f80 <line:438:5, line:441:5> line:438:18 used account 'void (int)' virtual
| |-ParmVarDecl 0x5576c2fa5ef0 <col:26, col:30> col:30 used level 'int'
| `-CompoundStmt 0x5576c2fa93a8 <col:37, line:441:5>
|   `-IfStmt 0x5576c2fa9390 <line:439:2, line:440:8>
|     |-BinaryOperator 0x5576c2fa9318 <line:439:6, col:15> 'bool' '<='
|     | |-ImplicitCastExpr 0x5576c2fa92e8 <col:6> 'int' <LValueToRValue>
|     | | `-DeclRefExpr 0x5576c2fa92a8 <col:6> 'int' lvalue ParmVar 0x5576c2fa5ef0 'level' 'int'
|     | `-ImplicitCastExpr 0x5576c2fa9300 <col:15> 'int' <IntegralCast>
|     |   `-DeclRefExpr 0x5576c2fa92c8 <col:15> 'ErrorHandler::Level' EnumConstant 0x5576c2fa1f70 'el_error' 'ErrorHandler::Level'
|     `-UnaryOperator 0x5576c2fa9378 <line:440:6, col:8> 'int' lvalue prefix '++'
|       `-MemberExpr 0x5576c2fa9348 <col:8> 'int' lvalue ->_nerrors 0x5576c2fa7c08
|         `-CXXThisExpr 0x5576c2fa9338 <col:8> 'ErrorHandler *' implicit this
|-CXXMethodDecl 0x5576c2fa6048 <line:446:5, line:448:5> line:446:18 used clear 'void ()' virtual
| `-CompoundStmt 0x5576c2fa9440 <col:26, line:448:5>
|   `-BinaryOperator 0x5576c2fa9420 <line:447:2, col:13> 'int' lvalue '='
|     |-MemberExpr 0x5576c2fa93d0 <col:2> 'int' lvalue ->_nerrors 0x5576c2fa7c08
|     | `-CXXThisExpr 0x5576c2fa93c0 <col:2> 'ErrorHandler *' implicit this
|     `-IntegerLiteral 0x5576c2fa9400 <col:13> 'int' 0
|-CXXMethodDecl 0x5576c2fa6210 <line:466:5, col:66> col:19 used make_anno 'String (const char *, const String &)' static
| |-ParmVarDecl 0x5576c2fa6100 <col:29, col:41> col:41 name 'const char *'
| `-ParmVarDecl 0x5576c2fa6178 <col:47, col:61> col:61 value 'const String &'
|-CXXMethodDecl 0x5576c2fa6418 <line:482:5, col:69> col:19 used combine_anno 'String (const String &, const String &)' static
| |-ParmVarDecl 0x5576c2fa62d0 <col:32, col:46> col:46 str 'const String &'
| `-ParmVarDecl 0x5576c2fa6348 <col:51, col:65> col:65 anno 'const String &'
|-CXXMethodDecl 0x5576c2fa66c8 <line:516:5, line:517:68> line:516:24 parse_anno 'const char *(const String &, const char *, const char *, ...)' static
| |-ParmVarDecl 0x5576c2fa64d8 <col:35, col:49> col:49 str 'const String &'
| |-ParmVarDecl 0x5576c2fa6558 <line:517:3, col:15> col:15 begin 'const char *'
| |-ParmVarDecl 0x5576c2fa65d8 <col:22, col:34> col:34 end 'const char *'
| `-SentinelAttr 0x5576c2fa6780 <col:59> 0 0
|-CXXMethodDecl 0x5576c2fa6930 <line:527:5, line:534:5> line:527:24 skip_anno 'const char *(const char *, const char *)' static
| |-ParmVarDecl 0x5576c2fa67f8 <col:34, col:46> col:46 used begin 'const char *'
| |-ParmVarDecl 0x5576c2fa6890 <col:53, col:65> col:65 used end 'const char *'
| `-CompoundStmt 0x5576c2fa9ab0 <col:70, line:534:5>
|   |-DeclStmt 0x5576c2fa95b0 <line:528:2, col:20>
|   | |-VarDecl 0x5576c2fa9468 <col:2, col:9> col:9 used name 'String' callinit destroyed
|   | | `-CXXConstructExpr 0x5576c2fa94d0 <col:9> 'String' 'void ()'
|   | `-VarDecl 0x5576c2fa9508 <col:2, col:15> col:15 used value 'String' callinit destroyed
|   |   `-CXXConstructExpr 0x5576c2fa9570 <col:15> 'String' 'void ()'
|   |-DeclStmt 0x5576c2fa9680 <line:529:2, col:23>
|   | `-VarDecl 0x5576c2fa95e0 <col:2, col:18> col:14 used x 'const char *' cinit
|   |   `-ImplicitCastExpr 0x5576c2fa9668 <col:18> 'const char *' <LValueToRValue>
|   |     `-DeclRefExpr 0x5576c2fa9648 <col:18> 'const char *' lvalue ParmVar 0x5576c2fa67f8 'begin' 'const char *'
|   |-DoStmt 0x5576c2fa9a48 <line:530:2, line:532:15>
|   | |-CompoundStmt 0x5576c2fa9978 <line:530:5, line:532:2>
|   | | `-ExprWithCleanups 0x5576c2fa9960 <line:531:6, col:58> 'const char *' lvalue
|   | |   `-BinaryOperator 0x5576c2fa9940 <col:6, col:58> 'const char *' lvalue '='
|   | |     |-DeclRefExpr 0x5576c2fa9698 <col:6> 'const char *' lvalue Var 0x5576c2fa95e0 'x' 'const char *'
|   | |     `-CallExpr 0x5576c2fa9890 <col:10, col:58> 'const char *'
|   | |       |-ImplicitCastExpr 0x5576c2fa9878 <col:10> 'const char *(*)(const String &, const char *, const char *, String *, String *, bool)' <FunctionToPointerDecay>
|   | |       | `-DeclRefExpr 0x5576c2fa9830 <col:10> 'const char *(const String &, const char *, const char *, String *, String *, bool)' lvalue CXXMethod 0x5576c2fa80e0 'skip_anno' 'const char *(const String &, const char *, const char *, String *, String *, bool)'
|   | |       |-MaterializeTemporaryExpr 0x5576c2fa98f8 <col:20, col:27> 'const String' lvalue
|   | |       | `-ImplicitCastExpr 0x5576c2fa98e0 <col:20, col:27> 'const String' <NoOp>
|   | |       |   `-CXXBindTemporaryExpr 0x5576c2fa9750 <col:20, col:27> 'String' (CXXTemporary 0x5576c2fa9750)
|   | |       |     `-CXXTemporaryObjectExpr 0x5576c2fa9718 <col:20, col:27> 'String' 'void ()'
|   | |       |-ImplicitCastExpr 0x5576c2fa9910 <col:30> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x5576c2fa9770 <col:30> 'const char *' lvalue Var 0x5576c2fa95e0 'x' 'const char *'
|   | |       |-ImplicitCastExpr 0x5576c2fa9928 <col:33> 'const char *' <LValueToRValue>
|   | |       | `-DeclRefExpr 0x5576c2fa9790 <col:33> 'const char *' lvalue ParmVar 0x5576c2fa6890 'end' 'const char *'
|   | |       |-UnaryOperator 0x5576c2fa97d0 <col:38, col:39> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x5576c2fa97b0 <col:39> 'String' lvalue Var 0x5576c2fa9468 'name' 'String'
|   | |       |-UnaryOperator 0x5576c2fa9808 <col:45, col:46> 'String *' prefix '&' cannot overflow
|   | |       | `-DeclRefExpr 0x5576c2fa97e8 <col:46> 'String' lvalue Var 0x5576c2fa9508 'value' 'String'
|   | |       `-CXXBoolLiteralExpr 0x5576c2fa9820 <col:53> 'bool' false
|   | `-ImplicitCastExpr 0x5576c2fa9a30 <line:532:11> 'bool' <MemberPointerToBoolean>
|   |   `-ImplicitCastExpr 0x5576c2fa9a18 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|   |     `-CXXMemberCallExpr 0x5576c2fa99f8 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|   |       `-MemberExpr 0x5576c2fa99c8 <col:11> '<bound member function type>' .operator int (String::*)() const 0x5576c2beb3f8
|   |         `-ImplicitCastExpr 0x5576c2fa99b0 <col:11> 'const String' lvalue <NoOp>
|   |           `-DeclRefExpr 0x5576c2fa9990 <col:11> 'String' lvalue Var 0x5576c2fa9468 'name' 'String'
|   `-ReturnStmt 0x5576c2fa9aa0 <line:533:2, col:9>
|     `-ImplicitCastExpr 0x5576c2fa9a88 <col:9> 'const char *' <LValueToRValue>
|       `-DeclRefExpr 0x5576c2fa9a68 <col:9> 'const char *' lvalue Var 0x5576c2fa95e0 'x' 'const char *'
|-CXXMethodDecl 0x5576c2fa6a80 <line:543:5, line:550:5> line:543:19 used make_landmark_anno 'String (const String &)' static
| |-ParmVarDecl 0x5576c2fa69f0 <col:38, col:52> col:52 used x 'const String &'
| `-CompoundStmt 0x5576c2faa0b8 <col:55, line:550:5>
|   `-IfStmt 0x5576c2faa090 <line:544:2, line:549:20> has_else
|     |-BinaryOperator 0x5576c2fa9cf0 <line:544:6, col:19> 'bool' '&&'
|     | |-ImplicitCastExpr 0x5576c2fa9cd8 <col:6> 'bool' <MemberPointerToBoolean>
|     | | `-ImplicitCastExpr 0x5576c2fa9cc0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|     | |   `-CXXMemberCallExpr 0x5576c2fa9ca0 <col:6> 'String::unspecified_bool_type':'int (String::*)() const'
|     | |     `-MemberExpr 0x5576c2fa9c70 <col:6> '<bound member function type>' .operator int (String::*)() const 0x5576c2beb3f8
|     | |       `-DeclRefExpr 0x5576c2fa9b10 <col:6> 'const String' lvalue ParmVar 0x5576c2fa69f0 'x' 'const String &'
|     | `-BinaryOperator 0x5576c2fa9c50 <col:11, col:19> 'bool' '=='
|     |   |-ImplicitCastExpr 0x5576c2fa9c20 <col:11, col:14> 'int' <IntegralCast>
|     |   | `-CXXOperatorCallExpr 0x5576c2fa9bd0 <col:11, col:14> 'char'
|     |   |   |-ImplicitCastExpr 0x5576c2fa9bb8 <col:12, col:14> 'char (*)(int) const' <FunctionToPointerDecay>
|     |   |   | `-DeclRefExpr 0x5576c2fa9b70 <col:12, col:14> 'char (int) const' lvalue CXXMethod 0x5576c2c06340 'operator[]' 'char (int) const'
|     |   |   |-DeclRefExpr 0x5576c2fa9b30 <col:11> 'const String' lvalue ParmVar 0x5576c2fa69f0 'x' 'const String &'
|     |   |   `-IntegerLiteral 0x5576c2fa9b50 <col:13> 'int' 0
|     |   `-ImplicitCastExpr 0x5576c2fa9c38 <col:19> 'int' <IntegralCast>
|     |     `-CharacterLiteral 0x5576c2fa9c08 <col:19> 'char' 123
|     |-ReturnStmt 0x5576c2fa9d60 <line:545:6, col:13>
|     | `-CXXConstructExpr 0x5576c2fa9d30 <col:13> 'String' 'void (const String &)'
|     |   `-DeclRefExpr 0x5576c2fa9d10 <col:13> 'const String' lvalue ParmVar 0x5576c2fa69f0 'x' 'const String &'
|     `-IfStmt 0x5576c2faa068 <line:546:7, line:549:20> has_else
|       |-ImplicitCastExpr 0x5576c2fa9df8 <line:546:11> 'bool' <MemberPointerToBoolean>
|       | `-ImplicitCastExpr 0x5576c2fa9de0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const' <UserDefinedConversion>
|       |   `-CXXMemberCallExpr 0x5576c2fa9dc0 <col:11> 'String::unspecified_bool_type':'int (String::*)() const'
|       |     `-MemberExpr 0x5576c2fa9d90 <col:11> '<bound member function type>' .operator int (String::*)() const 0x5576c2beb3f8
|       |       `-DeclRefExpr 0x5576c2fa9d70 <col:11> 'const String' lvalue ParmVar 0x5576c2fa69f0 'x' 'const String &'
|       |-ReturnStmt 0x5576c2fa9f80 <line:547:6, col:29>
|       | `-ExprWithCleanups 0x5576c2fa9f68 <col:13, col:29> 'String'
|       |   `-CXXConstructExpr 0x5576c2fa9f38 <col:13, col:29> 'String' 'void (String &&)' elidable
|       |     `-MaterializeTemporaryExpr 0x5576c2fa9f20 <col:13, col:29> 'String' xvalue
|       |       `-CXXBindTemporaryExpr 0x5576c2fa9f00 <col:13, col:29> 'String' (CXXTemporary 0x5576c2fa9f00)
|       |         `-CallExpr 0x5576c2fa9eb0 <col:13, col:29> 'String'
|       |           |-ImplicitCastExpr 0x5576c2fa9e98 <col:13> 'String (*)(const char *, const String &)' <FunctionToPointerDecay>
|       |           | `-DeclRefExpr 0x5576c2fa9e10 <col:13> 'String (const char *, const String &)' lvalue CXXMethod 0x5576c2fa6210 'make_anno' 'String (const char *, const String &)'
|       |           |-ImplicitCastExpr 0x5576c2fa9ee0 <col:23> 'const char *' <ArrayToPointerDecay>
|       |           | `-StringLiteral 0x5576c2fa9e30 <col:23> 'const char [2]' lvalue "l"
|       |           `-DeclRefExpr 0x5576c2fa9e50 <col:28> 'const String' lvalue ParmVar 0x5576c2fa69f0 'x' 'const String &'
|       `-ReturnStmt 0x5576c2faa058 <line:549:6, col:20>
|         `-ExprWithCleanups 0x5576c2faa040 <col:13, col:20> 'String'
|           `-CXXConstructExpr 0x5576c2faa010 <col:13, col:20> 'String' 'void (String &&)' elidable
|             `-MaterializeTemporaryExpr 0x5576c2fa9ff8 <col:13, col:20> 'String' xvalue
|               `-CXXBindTemporaryExpr 0x5576c2fa9fd8 <col:13, col:20> 'String' (CXXTemporary 0x5576c2fa9fd8)
|                 `-CXXTemporaryObjectExpr 0x5576c2fa9fa0 <col:13, col:20> 'String' 'void ()'
|-CXXMethodDecl 0x5576c2fa6c48 <line:559:5, col:76> col:19 clean_landmark 'String (const String &, bool)' static
| |-ParmVarDecl 0x5576c2fa6b38 <col:34, col:48> col:48 landmark 'const String &'
| `-ParmVarDecl 0x5576c2fa6bb0 <col:58, col:71> col:63 colon 'bool' cinit
|   `-CXXBoolLiteralExpr 0x5576c2fa8388 <col:71> 'bool' false
|-CXXRecordDecl 0x5576c2fa6cf8 <line:563:5, col:12> col:12 referenced struct Conversion
|-TypedefDecl 0x5576c2fa6ff8 <line:564:5, col:60> col:22 referenced ConversionFunction 'String (*)(int, __va_list_tag *)'
| `-PointerType 0x5576c2fa6f90 'String (*)(int, __va_list_tag *)'
|   `-ParenType 0x5576c2fa6f30 'String (int, __va_list_tag *)' sugar
|     `-FunctionProtoType 0x5576c2fa6ef0 'String (int, __va_list_tag *)' cdecl
|       |-RecordType 0x5576c2be76e0 'String'
|       | `-CXXRecord 0x5576c2be7650 'String'
|       |-BuiltinType 0x5576c29ad3b0 'int'
|       `-DecayedType 0x5576c2fa45a0 '__va_list_tag *' sugar
|         |-TypedefType 0x5576c2fa4570 'va_list' sugar
|         | |-Typedef 0x5576c2c48df0 'va_list'
|         | `-TypedefType 0x5576c2c48da0 '__gnuc_va_list' sugar
|         |   |-Typedef 0x5576c2c440f8 '__gnuc_va_list'
|         |   `-TypedefType 0x5576c2c44060 '__builtin_va_list' sugar
|         |     |-Typedef 0x5576c29eec18 '__builtin_va_list'
|         |     `-ConstantArrayType 0x5576c29eebc0 '__va_list_tag [1]' 1 
|         |       `-RecordType 0x5576c29ae100 '__va_list_tag'
|         |         `-CXXRecord 0x5576c29ae068 '__va_list_tag'
|         `-PointerType 0x5576c2c4ea90 '__va_list_tag *'
|           `-RecordType 0x5576c29ae100 '__va_list_tag'
|             `-CXXRecord 0x5576c29ae068 '__va_list_tag'
|-EnumDecl 0x5576c2fa7050 <line:565:5, line:576:5> line:565:10 ConversionFlags
| |-EnumConstantDecl 0x5576c2fa7150 <line:566:2, col:16> col:2 cf_zero_pad 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5576c2fa76b0 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2fa7130 <col:16> 'int' Int: 1
| |     `-IntegerLiteral 0x5576c2fa7110 <col:16> 'int' 1
| |-EnumConstantDecl 0x5576c2fa71e0 <line:567:2, col:21> col:2 cf_plus_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5576c2fa76c8 <col:21> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2fa71c0 <col:21> 'int' Int: 2
| |     `-IntegerLiteral 0x5576c2fa71a0 <col:21> 'int' 2
| |-EnumConstantDecl 0x5576c2fa7270 <line:568:2, col:22> col:2 cf_space_positive 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5576c2fa76e0 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2fa7250 <col:22> 'int' Int: 4
| |     `-IntegerLiteral 0x5576c2fa7230 <col:22> 'int' 4
| |-EnumConstantDecl 0x5576c2fa7300 <line:569:2, col:17> col:2 cf_left_just 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5576c2fa76f8 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2fa72e0 <col:17> 'int' Int: 8
| |     `-IntegerLiteral 0x5576c2fa72c0 <col:17> 'int' 8
| |-EnumConstantDecl 0x5576c2fa7390 <line:570:2, col:22> col:2 cf_alternate_form 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5576c2fa7710 <col:22> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2fa7370 <col:22> 'int' Int: 16
| |     `-IntegerLiteral 0x5576c2fa7350 <col:22> 'int' 16
| |-EnumConstantDecl 0x5576c2fa7420 <line:571:2, col:19> col:2 cf_singlequote 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5576c2fa7728 <col:19> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2fa7400 <col:19> 'int' Int: 32
| |     `-IntegerLiteral 0x5576c2fa73e0 <col:19> 'int' 32
| |-EnumConstantDecl 0x5576c2fa74b0 <line:572:2, col:17> col:2 cf_uppercase 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5576c2fa7740 <col:17> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2fa7490 <col:17> 'int' Int: 64
| |     `-IntegerLiteral 0x5576c2fa7470 <col:17> 'int' 64
| |-EnumConstantDecl 0x5576c2fa7540 <line:573:2, col:14> col:2 cf_signed 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5576c2fa7758 <col:14> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2fa7520 <col:14> 'int' Int: 128
| |     `-IntegerLiteral 0x5576c2fa7500 <col:14> 'int' 128
| |-EnumConstantDecl 0x5576c2fa75d0 <line:574:2, col:16> col:2 cf_negative 'ErrorHandler::ConversionFlags'
| | `-ImplicitCastExpr 0x5576c2fa7770 <col:16> 'unsigned int' <IntegralCast>
| |   `-ConstantExpr 0x5576c2fa75b0 <col:16> 'int' Int: 256
| |     `-IntegerLiteral 0x5576c2fa7590 <col:16> 'int' 256
| `-EnumConstantDecl 0x5576c2fa7660 <line:575:2, col:12> col:2 cf_utf8 'ErrorHandler::ConversionFlags'
|   `-ImplicitCastExpr 0x5576c2fa7788 <col:12> 'unsigned int' <IntegralCast>
|     `-ConstantExpr 0x5576c2fa7640 <col:12> 'int' Int: 1024
|       `-IntegerLiteral 0x5576c2fa7620 <col:12> 'int' 1024
|-CXXMethodDecl 0x5576c2fa7998 <line:577:5, col:82> col:24 add_conversion 'ErrorHandler::Conversion *(const String &, ErrorHandler::ConversionFunction)' static
| |-ParmVarDecl 0x5576c2fa77b0 <col:39, col:53> col:53 name 'const String &'
| `-ParmVarDecl 0x5576c2fa7850 <col:59, col:78> col:78 func 'ErrorHandler::ConversionFunction':'String (*)(int, __va_list_tag *)'
|-CXXMethodDecl 0x5576c2fa7b20 <line:578:5, col:56> col:16 remove_conversion 'int (ErrorHandler::Conversion *)' static
| `-ParmVarDecl 0x5576c2fa7a58 <col:34, col:46> col:46 conversion 'ErrorHandler::Conversion *'
|-AccessSpecDecl 0x5576c2fa7bc8 <line:580:3, col:10> col:3 private
|-FieldDecl 0x5576c2fa7c08 <line:582:5, col:9> col:9 referenced _nerrors 'int'
|-VarDecl 0x5576c2fa7c68 <line:584:5, col:26> col:26 used the_default_handler 'ErrorHandler *' static
|-VarDecl 0x5576c2fa7ce0 <line:585:5, col:26> col:26 used the_silent_handler 'ErrorHandler *' static
|-CXXMethodDecl 0x5576c2fa80e0 <line:587:5, line:590:14> line:587:24 used skip_anno 'const char *(const String &, const char *, const char *, String *, String *, bool)' static
| |-ParmVarDecl 0x5576c2fa7d58 <col:34, col:48> col:48 str 'const String &'
| |-ParmVarDecl 0x5576c2fa7dd8 <line:588:6, col:18> col:18 begin 'const char *'
| |-ParmVarDecl 0x5576c2fa7e58 <col:25, col:37> col:37 end 'const char *'
| |-ParmVarDecl 0x5576c2fa7ed0 <line:589:6, col:14> col:14 name_result 'String *'
| |-ParmVarDecl 0x5576c2fa7f48 <col:27, col:35> col:35 value_result 'String *'
| `-ParmVarDecl 0x5576c2fa7fc0 <line:590:6, col:11> col:11 raw 'bool'
|-CXXMethodDecl 0x5576c2fa8208 <line:90:7> col:7 implicit operator= 'ErrorHandler &(const ErrorHandler &)' inline default noexcept-unevaluated 0x5576c2fa8208
| `-ParmVarDecl 0x5576c2fa8318 <col:7> col:7 'const ErrorHandler &'
`-CXXConstructorDecl 0x5576c2faa418 <col:7> col:7 implicit constexpr ErrorHandler 'void (const ErrorHandler &)' inline default noexcept-unevaluated 0x5576c2faa418
  `-ParmVarDecl 0x5576c2faa528 <col:7> col:7 'const ErrorHandler &'

Layout: <CGRecordLayout
  LLVMType:%class.ErrorHandler = type <{ i32 (...)**, i32, [4 x i8] }>
  NonVirtualBaseLLVMType:%class.ErrorHandler.base = type <{ i32 (...)**, i32 }>
  IsZeroInitializable:1
  BitFields:[
]>
